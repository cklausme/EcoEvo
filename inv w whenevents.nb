(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    105838,       2514]
NotebookOptionsPosition[    102731,       2451]
NotebookOutlinePosition[    103089,       2467]
CellTagsIndexPosition[    103046,       2464]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"weinv", "=", 
  RowBox[{"{", 
   RowBox[{"WhenEvent", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{"Global`t", ",", "100"}], "]"}], "\[Equal]", 
      FractionBox["1", 
       SuperscriptBox["10", "4"]]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"n2", "[", "Global`t", "]"}], "\[Rule]", 
       RowBox[{"0.1", " ", 
        RowBox[{"n2", "[", "Global`t", "]"}]}]}], "}"}]}], "]"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.782630740541403*^9, 3.78263075237869*^9}, {
  3.7826308224170723`*^9, 3.7826308230745296`*^9}, {3.782630855078121*^9, 
  3.7826308963750277`*^9}},ExpressionUUID->"cb501180-22a4-4b06-8cf9-\
3c4c509f398b"],

Cell[BoxData[
 TemplateBox[{
  "Global`t","shdw",
   "\"Symbol \\!\\(\\*RowBox[{\\\"\\\\\\\"t\\\\\\\"\\\"}]\\) appears in \
multiple contexts \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\\\\\\\"Global`\\\\\
\\\"\\\", \\\",\\\", \\\"\\\\\\\"EcoEvo`\\\\\\\"\\\"}], \\\"}\\\"}]\\); \
definitions in context \\!\\(\\*RowBox[{\\\"\\\\\\\"Global`\\\\\\\"\\\"}]\\) \
may shadow or be shadowed by other definitions.\"",2,835,103,
   24100194724842759326,"Local","Global`t"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.7826308737956343`*^9},
 CellLabel->
  "During evaluation of \
In[835]:=",ExpressionUUID->"bf904c7b-3e4a-4f4a-bb12-66deb11ea706"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"WhenEvent", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{"Global`t", ",", "100"}], "]"}], "\[Equal]", 
     FractionBox["1", 
      SuperscriptBox["10", "4"]]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n2", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"0.1`", " ", 
       RowBox[{"n2", "[", "t", "]"}]}]}], "}"}]}], "]"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7826307529439*^9, 3.782630824070651*^9, {3.782630856024062*^9, 
   3.7826308738066473`*^9}},
 CellLabel->
  "Out[835]=",ExpressionUUID->"869e2b00-d216-4f0e-8eee-ee254d155c39"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["EcoEvo`Private`modelwhenevents"], "Input",
 CellChangeTimes->{{3.782630666419629*^9, 3.78263067334614*^9}},
 CellLabel->
  "In[849]:=",ExpressionUUID->"fa7fa1f0-c75c-4b91-81a5-e1c0184c81ed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"WhenEvent", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{"t", ",", "\[Tau]"}], "]"}], "\[Equal]", 
     FractionBox["1", 
      SuperscriptBox["10", "4"]]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"n1", "[", "t", "]"}], "\[Rule]", 
       RowBox[{"f", " ", 
        RowBox[{"n1", "[", "t", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"n2", "[", "t", "]"}], "\[Rule]", 
       RowBox[{"f", " ", 
        RowBox[{"n2", "[", "t", "]"}]}]}]}], "}"}]}], "]"}], "}"}]], "Output",\

 CellChangeTimes->{3.782630673818243*^9, 3.782631580322547*^9},
 CellLabel->
  "Out[849]=",ExpressionUUID->"3a001bd9-4c13-471a-a37a-6f294bcb5ef9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EcoEvo`Private`modelwhenevents", "/.", 
  RowBox[{
   RowBox[{"WhenEvent", "[", 
    RowBox[{"event_", ",", "action_"}], "]"}], "\[Rule]", 
   RowBox[{"WhenEvent", "[", 
    RowBox[{"event", ",", "action"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.782645763776276*^9, 3.782645876118808*^9}},
 CellLabel->
  "In[869]:=",ExpressionUUID->"241cec4a-736e-4cb2-8b2e-cbb6446912f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"WhenEvent", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{"t", ",", "\[Tau]"}], "]"}], "\[Equal]", 
     FractionBox["1", 
      SuperscriptBox["10", "4"]]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"n1", "[", "t", "]"}], "\[Rule]", 
       RowBox[{"f", " ", 
        RowBox[{"n1", "[", "t", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"n2", "[", "t", "]"}], "\[Rule]", 
       RowBox[{"f", " ", 
        RowBox[{"n2", "[", "t", "]"}]}]}]}], "}"}]}], "]"}], "}"}]], "Output",\

 CellChangeTimes->{3.782645765130784*^9, 3.7826458073950787`*^9, 
  3.7826458395991707`*^9, 3.782645876511036*^9},
 CellLabel->
  "Out[869]=",ExpressionUUID->"108ad248-64b4-42d2-ac21-022f2e1e5ab0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"Log", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"n1", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"f", " ", 
       RowBox[{"n1", "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"n2", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"f", " ", 
       RowBox[{"n2", "[", "t", "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", "2", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.782645894353209*^9, 3.782645935767671*^9}},
 CellLabel->
  "In[874]:=",ExpressionUUID->"b9c63b00-6d93-4090-9525-0bd142925fbe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"n1", "[", "t", "]"}], "]"}], "\[Rule]", 
    RowBox[{"Log", "[", 
     RowBox[{"0.01`", " ", 
      RowBox[{"n1", "[", "t", "]"}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"n2", "[", "t", "]"}], "]"}], "\[Rule]", 
    RowBox[{"Log", "[", 
     RowBox[{"0.01`", " ", 
      RowBox[{"n2", "[", "t", "]"}]}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.78264590272799*^9, 3.782645936097486*^9}},
 CellLabel->
  "Out[874]=",ExpressionUUID->"7887784b-b9fa-4060-99b6-2a5520072c34"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "/@"}]], "Input",
 CellChangeTimes->{{3.782645845505056*^9, 3.782645846685931*^9}},
 CellLabel->
  "In[867]:=",ExpressionUUID->"0971fc0f-f179-4345-be71-08866ae3a68e"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Map",
              ButtonNote->"paclet:ref/Map"],
             "\"paclet:ref/Map\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Map\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"expr\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) or \\!\\(\\*RowBox[{StyleBox[\\\"f\\\", \
\\\"TI\\\"], \\\"/@\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"]}]\\) applies \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) to each element on the first \
level in \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\
\\\"Map\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"levelspec\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) applies \\!\\(\\*StyleBox[\\\"f\\\", \
\\\"TI\\\"]\\) to parts of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) \
specified by \\!\\(\\*StyleBox[\\\"levelspec\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Map\\\", \\\"[\\\", StyleBox[\\\"f\\\", \\\"TI\\\"], \
\\\"]\\\"}]\\) represents an operator form of Map that can be applied to an \
expression.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Map", 
                    "paclet:ref/Map", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"],"\"  \"",StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False],
                    "\"  \"",TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL["http://reference.wolfram.com/language/ref/Map.html"],
                     None}, 
                    "http://reference.wolfram.com/language/ref/Map.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"Heads", "\[Rule]", "False"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Map\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{20., {6., 14.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{20., {6., 14.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Map",
              ButtonNote->"paclet:ref/Map"],
             "\"paclet:ref/Map\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Map\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"expr\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) or \\!\\(\\*RowBox[{StyleBox[\\\"f\\\", \
\\\"TI\\\"], \\\"/@\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"]}]\\) applies \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) to each element on the first \
level in \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\
\\\"Map\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"levelspec\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) applies \\!\\(\\*StyleBox[\\\"f\\\", \
\\\"TI\\\"]\\) to parts of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) \
specified by \\!\\(\\*StyleBox[\\\"levelspec\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Map\\\", \\\"[\\\", StyleBox[\\\"f\\\", \\\"TI\\\"], \
\\\"]\\\"}]\\) represents an operator form of Map that can be applied to an \
expression.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {3., 12.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {3., 12.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Map\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"], \",\", \
StyleBox[\"expr\", \"TI\"]}], \"]\"}]\) or \!\(\*RowBox[{StyleBox[\"f\", \"TI\
\"], \"/@\", StyleBox[\"expr\", \"TI\"]}]\) applies \!\(\*StyleBox[\"f\", \
\"TI\"]\) to each element on the first level in \!\(\*StyleBox[\"expr\", \"TI\
\"]\). \n\!\(\*RowBox[{\"Map\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"], \
\",\", StyleBox[\"expr\", \"TI\"], \",\", StyleBox[\"levelspec\", \"TI\"]}], \
\"]\"}]\) applies \!\(\*StyleBox[\"f\", \"TI\"]\) to parts of \!\(\*StyleBox[\
\"expr\", \"TI\"]\) specified by \!\(\*StyleBox[\"levelspec\", \"TI\"]\). \n\
\!\(\*RowBox[{\"Map\", \"[\", StyleBox[\"f\", \"TI\"], \"]\"}]\) represents \
an operator form of Map that can be applied to an expression.", 
    "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/Map", "Web" -> 
      "http://reference.wolfram.com/language/ref/Map.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {Heads -> False}, "Attributes" -> {Protected}, "FullName" -> 
    "System`Map"], False]]], "Output",
 CellChangeTimes->{3.782645847043497*^9},
 CellLabel->
  "Out[867]=",ExpressionUUID->"71231928-f0a8-4aa7-822b-8366f91ea72a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EcoEqns", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7826437583602457`*^9, 3.78264376257471*^9}},
 CellLabel->
  "In[850]:=",ExpressionUUID->"6af8b20a-a077-42bf-a206-5c0a8259e508"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["n1", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"n1", "[", "t", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.1`"}], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "100"]}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"20", "-", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Mod", "[", 
                  RowBox[{"t", ",", "100"}], "]"}], "<", "70.`"}], ",", "10", 
                ",", "20"}], "]"}]}], ")"}], "2"]}]], " ", 
         RowBox[{"(", 
          RowBox[{"10", "-", 
           RowBox[{"n1", "[", "t", "]"}], "-", 
           RowBox[{"n2", "[", "t", "]"}]}], ")"}]}], 
        RowBox[{"11", "-", 
         RowBox[{"n1", "[", "t", "]"}], "-", 
         RowBox[{"n2", "[", "t", "]"}]}]]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["n2", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.1`"}], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "100"]}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"10", "-", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Mod", "[", 
                  RowBox[{"t", ",", "100"}], "]"}], "<", "70.`"}], ",", "10", 
                ",", "20"}], "]"}]}], ")"}], "2"]}]], " ", 
         RowBox[{"(", 
          RowBox[{"10", "-", 
           RowBox[{"n1", "[", "t", "]"}], "-", 
           RowBox[{"n2", "[", "t", "]"}]}], ")"}]}], 
        RowBox[{"11", "-", 
         RowBox[{"n1", "[", "t", "]"}], "-", 
         RowBox[{"n2", "[", "t", "]"}]}]]}], ")"}], " ", 
     RowBox[{"n2", "[", "t", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7826437629462337`*^9},
 CellLabel->
  "Out[850]=",ExpressionUUID->"ef97289e-0c02-4b18-ae44-0d6f0de9ec79"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
     RowBox[{"WhenEvent", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"t", ",", "1"}], "]"}], "\[Equal]", "0.1"}], ",", 
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
        RowBox[{"ff", " ", 
         RowBox[{"x", "[", "t", "]"}]}]}]}], "]"}]}], "}"}], ",", "x", ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.782645164817737*^9, 3.782645215152343*^9}, {
  3.7826453141310263`*^9, 3.782645341529887*^9}, {3.782645385281178*^9, 
  3.782645385553597*^9}, {3.782645563909767*^9, 3.78264556797138*^9}},
 CellLabel->
  "In[863]:=",ExpressionUUID->"ddb6f81d-19a3-4a47-bf5c-d66bc74f4b14"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {"1", 
             RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", "0.1`"}]},
            {"ff", 
             RowBox[{"0.1`", "<", "t", "\[LessEqual]", "1.1`"}]},
            {
             SuperscriptBox["ff", "2"], 
             RowBox[{"1.1`", "<", "t", "\[LessEqual]", "2"}]},
            {"Indeterminate", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}},
           Selectable->True]}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False,
       StripWrapperBoxes->True]}], "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.782645215618713*^9, 3.782645316750844*^9, 
  3.782645385921466*^9, 3.782645568733904*^9},
 CellLabel->
  "Out[863]=",ExpressionUUID->"0153a9f3-5494-4b1f-9d99-848066e66763"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "WhenEvent"}]], "Input",
 CellChangeTimes->{{3.78264523929128*^9, 3.782645240521429*^9}},
 CellLabel->
  "In[860]:=",ExpressionUUID->"30fd7ce0-07cb-432e-ae07-af2c189b8287"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/WhenEvent",
              ButtonNote->"paclet:ref/WhenEvent"],
             "\"paclet:ref/WhenEvent\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"WhenEvent\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"event\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"action\\\
\", \\\"TI\\\"]}], \\\"]\\\"}]\\) specifies an \\!\\(\\*StyleBox[\\\"action\\\
\", \\\"TI\\\"]\\) that occurs when the \\!\\(\\*StyleBox[\\\"event\\\", \
\\\"TI\\\"]\\) triggers it for equations in NDSolve and related functions. \"\
\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/WhenEvent", 
                    "paclet:ref/WhenEvent", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"],"\"  \"",StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False],
                    "\"  \"",TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/WhenEvent.\
html"], None}, "http://reference.wolfram.com/language/ref/WhenEvent.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    
                    RowBox[{"\<\"DetectionMethod\"\>", "\[Rule]", 
                    "Automatic"}]},
                    {
                    
                    RowBox[{"\<\"IntegrateEvent\"\>", "\[Rule]", 
                    "Automatic"}]},
                    {
                    
                    RowBox[{"\<\"LocationMethod\"\>", "\[Rule]", 
                    "Automatic"}]},
                    {
                    RowBox[{"\<\"Priority\"\>", "\[Rule]", "Automatic"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","4","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    
                    RowBox[{"\<\"DetectionMethod\"\>", "\[Rule]", 
                    "Automatic"}], "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","4","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"HoldAll", ",", "Protected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`WhenEvent\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{20., {6., 14.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{20., {6., 14.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/WhenEvent",
              ButtonNote->"paclet:ref/WhenEvent"],
             "\"paclet:ref/WhenEvent\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"WhenEvent\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"event\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"action\\\
\", \\\"TI\\\"]}], \\\"]\\\"}]\\) specifies an \\!\\(\\*StyleBox[\\\"action\\\
\", \\\"TI\\\"]\\) that occurs when the \\!\\(\\*StyleBox[\\\"event\\\", \
\\\"TI\\\"]\\) triggers it for equations in NDSolve and related functions. \"\
\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {3., 12.}}], True->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {3., 12.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"WhenEvent\", \"[\", RowBox[{StyleBox[\"event\", \"TI\"], \
\",\", StyleBox[\"action\", \"TI\"]}], \"]\"}]\) specifies an \!\(\*StyleBox[\
\"action\", \"TI\"]\) that occurs when the \!\(\*StyleBox[\"event\", \
\"TI\"]\) triggers it for equations in NDSolve and related functions. ", 
    "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/WhenEvent", "Web" -> 
      "http://reference.wolfram.com/language/ref/WhenEvent.html"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, 
    "Options" -> {
     "DetectionMethod" -> Automatic, "IntegrateEvent" -> Automatic, 
      "LocationMethod" -> Automatic, "Priority" -> Automatic}, 
    "Attributes" -> {HoldAll, Protected}, "FullName" -> "System`WhenEvent"], 
   False]]], "Output",
 CellChangeTimes->{3.78264524094243*^9},
 CellLabel->
  "Out[860]=",ExpressionUUID->"d16ad3db-159f-4ed2-bbb5-fb94f100491d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EcoEqns", "[", 
  RowBox[{"PerCapita", "\[Rule]", "True"}], 
  RowBox[{"(*", 
   RowBox[{",", 
    RowBox[{"Fixed", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"n1", "\[Rule]", "0"}], "}"}]}]}], "*)"}], "]"}]], "Input",
 CellChangeTimes->{{3.782644500556539*^9, 3.782644515546914*^9}, 
   3.7826448406540937`*^9},
 CellLabel->
  "In[858]:=",ExpressionUUID->"7edc494c-89b4-448e-8f13-2bf5590d0256"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["n1", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "0.1`"}], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "100"]}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"20", "-", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Mod", "[", 
                RowBox[{"t", ",", "100"}], "]"}], "<", "70.`"}], ",", "10", 
              ",", "20"}], "]"}]}], ")"}], "2"]}]], " ", 
       RowBox[{"(", 
        RowBox[{"10", "-", 
         RowBox[{"n1", "[", "t", "]"}], "-", 
         RowBox[{"n2", "[", "t", "]"}]}], ")"}]}], 
      RowBox[{"11", "-", 
       RowBox[{"n1", "[", "t", "]"}], "-", 
       RowBox[{"n2", "[", "t", "]"}]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["n2", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "0.1`"}], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "100"]}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"10", "-", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Mod", "[", 
                RowBox[{"t", ",", "100"}], "]"}], "<", "70.`"}], ",", "10", 
              ",", "20"}], "]"}]}], ")"}], "2"]}]], " ", 
       RowBox[{"(", 
        RowBox[{"10", "-", 
         RowBox[{"n1", "[", "t", "]"}], "-", 
         RowBox[{"n2", "[", "t", "]"}]}], ")"}]}], 
      RowBox[{"11", "-", 
       RowBox[{"n1", "[", "t", "]"}], "-", 
       RowBox[{"n2", "[", "t", "]"}]}]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7826445021358852`*^9, 3.7826445159681797`*^9}, 
   3.782644841179946*^9},
 CellLabel->
  "Out[858]=",ExpressionUUID->"f58285a9-eb2c-4bd6-8e5a-aa333408099f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "EcoEqns"}]], "Input",
 CellChangeTimes->{{3.7826444144761972`*^9, 3.782644417074045*^9}},
 CellLabel->
  "In[855]:=",ExpressionUUID->"482c0e92-dc67-464a-b998-6fdbe112a4b1"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:EcoEvo/ref/EcoEqns",
              ButtonNote->"paclet:EcoEvo/ref/EcoEqns"],
             "\"paclet:EcoEvo/ref/EcoEqns\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"EcoEqns[\\!\\(\\*\\nStyleBox[\\\"traits\\\", \\\"TI\
\\\"]\\)] sets up ecological equations corresponding to species with \
\\!\\(\\*\\nStyleBox[\\\"traits\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:EcoEvo/ref/EcoEqns", "paclet:EcoEvo/ref/EcoEqns", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"EcoEqns", "[", 
                    RowBox[{
                    RowBox[{"EcoEvo`Private`traitsin", ":", 
                    RowBox[{"_", "?", "TraitsQ"}], ":", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"EcoEvo`Private`opts___", "?", "OptionQ"}]}], 
                    "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EcoEvo`Private`func", "=", 
                    RowBox[{"FuncStyle", "[", "\<\"EcoEqns\"\>", "]"}]}], ",",
                     "EcoEvo`Private`verbose", ",", 
                    "EcoEvo`Private`verboseall", ",", "EcoEvo`Private`logged",
                     ",", "EcoEvo`Private`fixed", ",", 
                    "EcoEvo`Private`fixedvars", ",", 
                    "EcoEvo`Private`fixedvariables", ",", 
                    "EcoEvo`Private`timescale", ",", 
                    "EcoEvo`Private`percapita", ",", "EcoEvo`Private`traits", 
                    ",", "EcoEvo`Private`nonfixedvars", ",", 
                    "EcoEvo`Private`fixed2", ",", "EcoEvo`Private`eqns"}], 
                    "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "EcoEvo`Private`modelloaded", "\[NotEqual]", "True"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"EcoEvo`Private`Msg", "[", 
                    StyleBox[
                    RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "MessageName"],
                     "]"}], ";", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"debug", ",", 
                    RowBox[{"Print", "[", 
                    RowBox[{"\<\"In \"\>", ",", "EcoEvo`Private`func"}], 
                    "]"}]}], "]"}], ";", 
                    RowBox[{"EcoEvo`Private`verbose", "=", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Verbose", "/.", "\[VeryThinSpace]", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"EcoEvo`Private`opts", ",", 
                    RowBox[{"Options", "[", "EcoEqns", "]"}]}], "}"}], 
                    "]"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"debug", ",", 
                    RowBox[{"EcoEvo`Private`verbose", "=", "True"}]}], "]"}], 
                    ";", 
                    RowBox[{"EcoEvo`Private`verboseall", "=", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"VerboseAll", "/.", "\[VeryThinSpace]", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"EcoEvo`Private`opts", ",", 
                    RowBox[{"Options", "[", "EcoEqns", "]"}]}], "}"}], 
                    "]"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"EcoEvo`Private`verboseall", ",", 
                    RowBox[{"EcoEvo`Private`verbose", "=", "True"}]}], "]"}], 
                    ";", 
                    RowBox[{"EcoEvo`Private`logged", "=", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Logged", "/.", "\[VeryThinSpace]", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"EcoEvo`Private`opts", ",", 
                    RowBox[{"Options", "[", "EcoEqns", "]"}]}], "}"}], 
                    "]"}]}], "]"}]}], ";", 
                    RowBox[{"EcoEvo`Private`timescale", "=", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"TimeScale", "/.", "\[VeryThinSpace]", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"EcoEvo`Private`opts", ",", 
                    RowBox[{"Options", "[", "EcoEqns", "]"}]}], "}"}], 
                    "]"}]}], "]"}]}], ";", 
                    RowBox[{"EcoEvo`Private`percapita", "=", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"PerCapita", "/.", "\[VeryThinSpace]", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"EcoEvo`Private`opts", ",", 
                    RowBox[{"Options", "[", "EcoEqns", "]"}]}], "}"}], 
                    "]"}]}], "]"}]}], ";", 
                    RowBox[{"EcoEvo`Private`nonfixedvars", "=", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"NonFixedVars", "/.", "\[VeryThinSpace]", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"EcoEvo`Private`opts", ",", 
                    RowBox[{"Options", "[", "EcoEqns", "]"}]}], "}"}], 
                    "]"}]}], "]"}]}], ";", 
                    RowBox[{"EcoEvo`Private`fixed", "=", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Fixed", "/.", "\[VeryThinSpace]", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"EcoEvo`Private`opts", ",", 
                    RowBox[{"Options", "[", "EcoEqns", "]"}]}], "}"}], 
                    "]"}]}], "]"}]}], ";", 
                    RowBox[{"EcoEvo`Private`fixedvars", "=", 
                    RowBox[{"EcoEvo`Private`fixed", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                    ";", 
                    RowBox[{"EcoEvo`Private`fixedvariables", "=", 
                    RowBox[{
                    "ExtractVariables", "[", "EcoEvo`Private`fixed", "]"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"debug", ",", 
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "EcoEvo`Private`func", ",", "\<\": fixedvars=\"\>", ",", 
                    "EcoEvo`Private`fixedvars"}], "]"}]}], "]"}], ";", 
                    RowBox[{"EcoEvo`Private`traits", "=", 
                    RowBox[{
                    "EcoEvo`Private`Expand\[ScriptCapitalN]InTraits", "[", 
                    "EcoEvo`Private`traitsin", "]"}]}], ";", 
                    RowBox[{
                    "Set\[ScriptCapitalN]", "[", "EcoEvo`Private`traits", 
                    "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "EcoEvo`Private`nonfixedvars", "===", "Automatic"}], ",", 
                    
                    RowBox[{"EcoEvo`Private`nonfixedvars", "=", 
                    RowBox[{"OrderedComplement", "[", 
                    RowBox[{
                    "EcoEvo`Private`AllVariables", ",", 
                    "EcoEvo`Private`fixedvars"}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"debug", ",", 
                    RowBox[{"Print", "[", 
                    
                    RowBox[{"\<\"nonfixedvars=\"\>", ",", 
                    "EcoEvo`Private`nonfixedvars"}], "]"}]}], "]"}], ";", 
                    RowBox[{"EcoEvo`Private`fixed2", "=", 
                    RowBox[{
                    "EcoEvo`Private`fixed", "/.", "\[VeryThinSpace]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"EcoEvo`Private`var_", "/;", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    "EcoEvo`Private`fixedvariables", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",",
                     "EcoEvo`Private`var"}], "]"}]}], "\[Rule]", 
                    RowBox[{"EcoEvo`Private`val_", "?", "NumericQ"}]}], ")"}],
                     "\[Rule]", 
                    RowBox[{
                    RowBox[{"EcoEvo`Private`var", "[", "t", "]"}], "\[Rule]", 
                    "EcoEvo`Private`val"}]}]}]}], ";", 
                    RowBox[{"EcoEvo`Private`eqns", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"EcoEvo`Private`logged", "===", "True"}], "&&", 
                    RowBox[{
                    RowBox[{
                    "EcoEvo`Private`comptype", "[", "EcoEvo`Private`var", 
                    "]"}], "===", "\<\"Extensive\"\>"}]}], ",", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    "EcoEvo`Private`modeltype", 
                    "\[Equal]", "\<\"DiscreteTime\"\>"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"EcoEvo`Private`DT", "[", 
                    RowBox[{"log", "[", "EcoEvo`Private`var", "]"}], "]"}], 
                    "-", 
                    RowBox[{
                    RowBox[{"log", "[", "EcoEvo`Private`var", "]"}], "[", "t",
                     "]"}]}], "\[Equal]", 
                    RowBox[{"RealSimplify", "[", 
                    RowBox[{"EcoEvo`Private`timescale", " ", 
                    RowBox[{"Log", "[", 
                    FractionBox[
                    RowBox[{
                    "EcoEvo`Private`eqn", "[", "EcoEvo`Private`var", "]"}], 
                    RowBox[{"EcoEvo`Private`var", "[", "t", "]"}]], "]"}]}], 
                    "]"}]}], ",", 
                    RowBox[{
                    "EcoEvo`Private`modeltype", 
                    "\[Equal]", "\<\"ContinuousTime\"\>"}], ",", 
                    RowBox[{
                    RowBox[{"EcoEvo`Private`DT", "[", 
                    RowBox[{"log", "[", "EcoEvo`Private`var", "]"}], "]"}], 
                    "\[Equal]", 
                    FractionBox[
                    RowBox[{"EcoEvo`Private`timescale", " ", 
                    RowBox[{
                    "EcoEvo`Private`eqn", "[", "EcoEvo`Private`var", "]"}]}], 
                    
                    RowBox[{"EcoEvo`Private`var", "[", "t", "]"}]]}]}], "]"}],
                     ",", 
                    RowBox[{
                    RowBox[{"EcoEvo`Private`percapita", "===", "True"}], "&&", 
                    RowBox[{
                    RowBox[{
                    "EcoEvo`Private`comptype", "[", "EcoEvo`Private`var", 
                    "]"}], "===", "\<\"Extensive\"\>"}]}], ",", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    "EcoEvo`Private`modeltype", 
                    "\[Equal]", "\<\"DiscreteTime\"\>"}], ",", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    "EcoEvo`Private`DT", "[", "EcoEvo`Private`var", "]"}], 
                    RowBox[{"EcoEvo`Private`var", "[", "t", "]"}]], 
                    "\[Equal]", 
                    FractionBox[
                    RowBox[{"EcoEvo`Private`timescale", " ", 
                    RowBox[{
                    "EcoEvo`Private`eqn", "[", "EcoEvo`Private`var", "]"}]}], 
                    
                    RowBox[{"EcoEvo`Private`var", "[", "t", "]"}]]}], ",", 
                    RowBox[{
                    "EcoEvo`Private`modeltype", 
                    "\[Equal]", "\<\"ContinuousTime\"\>"}], ",", 
                    RowBox[{
                    RowBox[{
                    "EcoEvo`Private`DT", "[", "EcoEvo`Private`var", "]"}], 
                    "\[Equal]", 
                    FractionBox[
                    RowBox[{"EcoEvo`Private`timescale", " ", 
                    RowBox[{
                    "EcoEvo`Private`eqn", "[", "EcoEvo`Private`var", "]"}]}], 
                    
                    RowBox[{"EcoEvo`Private`var", "[", "t", "]"}]]}]}], "]"}],
                     ",", "Else", ",", 
                    RowBox[{
                    RowBox[{
                    "EcoEvo`Private`DT", "[", "EcoEvo`Private`var", "]"}], 
                    "\[Equal]", 
                    RowBox[{"EcoEvo`Private`timescale", " ", 
                    RowBox[{
                    "EcoEvo`Private`eqn", "[", "EcoEvo`Private`var", 
                    "]"}]}]}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "EcoEvo`Private`var", ",", 
                    "EcoEvo`Private`nonfixedvars"}], "}"}]}], "]"}]}], ";", 
                    RowBox[{"Return", "[", 
                    RowBox[{"DeleteDuplicates", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"EcoEvo`Private`eqns", "/.", "\[VeryThinSpace]", 
                    RowBox[{"EcoEvo`Private`ExpRule", "[", 
                    RowBox[{
                    "EcoEvo`Private`nonfixedvars", ",", 
                    "EcoEvo`Private`logged"}], "]"}]}], "/.", 
                    "\[VeryThinSpace]", 
                    RowBox[{"Dispatch", "[", "EcoEvo`Private`traits", "]"}]}],
                     "/.", "\[VeryThinSpace]", "EcoEvo`Private`fixed2"}], 
                    "]"}], "]"}]}]}], "]"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"Fixed", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"TimeScale", "\[Rule]", "1"}]},
                    {
                    RowBox[{"Logged", "\[Rule]", "False"}]},
                    {
                    RowBox[{"PerCapita", "\[Rule]", "False"}]},
                    {
                    RowBox[{"NonFixedVars", "\[Rule]", "Automatic"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","5","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"Fixed", "\[Rule]", 
                    RowBox[{"{", "}"}]}], "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","5","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"EcoEvo`EcoEqns\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{20., {6., 14.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{20., {6., 14.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:EcoEvo/ref/EcoEqns",
              ButtonNote->"paclet:EcoEvo/ref/EcoEqns"],
             "\"paclet:EcoEvo/ref/EcoEqns\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"EcoEqns[\\!\\(\\*\\nStyleBox[\\\"traits\\\", \\\"TI\
\\\"]\\)] sets up ecological equations corresponding to species with \
\\!\\(\\*\\nStyleBox[\\\"traits\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {3., 12.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {3., 12.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "EcoEqns[\!\(\*\nStyleBox[\"traits\", \"TI\"]\)] sets up ecological \
equations corresponding to species with \!\(\*\nStyleBox[\"traits\", \
\"TI\"]\).", "Documentation" -> 
    Association["Local" -> "paclet:EcoEvo/ref/EcoEqns"], "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, EcoEvo`EcoEqns, {EcoEvo`EcoEqns[
         Optional[
          Pattern[EcoEvo`Private`traitsin, 
           PatternTest[
            Blank[], EcoEvo`TraitsQ]], {}], 
         PatternTest[
          Pattern[EcoEvo`Private`opts, 
           BlankNullSequence[]], OptionQ]] :> 
       Module[{EcoEvo`Private`func = EcoEvo`FuncStyle["EcoEqns"], 
          EcoEvo`Private`verbose, EcoEvo`Private`verboseall, 
          EcoEvo`Private`logged, EcoEvo`Private`fixed, 
          EcoEvo`Private`fixedvars, EcoEvo`Private`fixedvariables, 
          EcoEvo`Private`timescale, EcoEvo`Private`percapita, 
          EcoEvo`Private`traits, EcoEvo`Private`nonfixedvars, 
          EcoEvo`Private`fixed2, EcoEvo`Private`eqns}, 
         Block[{EcoEvo`\[ScriptCapitalN]}, 
          If[EcoEvo`Private`modelloaded != True, EcoEvo`Private`Msg[
              MessageName[EcoEvo`EcoEvoGeneral, "nomodel"]]; Return[$Failed]]; 
          If[$CellContext`debug, 
            Print["In ", EcoEvo`Private`func]]; 
          EcoEvo`Private`verbose = Evaluate[
             ReplaceAll[Verbose, 
              Flatten[{EcoEvo`Private`opts, 
                Options[EcoEvo`EcoEqns]}]]]; 
          If[$CellContext`debug, EcoEvo`Private`verbose = True]; 
          EcoEvo`Private`verboseall = Evaluate[
             ReplaceAll[EcoEvo`VerboseAll, 
              Flatten[{EcoEvo`Private`opts, 
                Options[EcoEvo`EcoEqns]}]]]; 
          If[EcoEvo`Private`verboseall, EcoEvo`Private`verbose = True]; 
          EcoEvo`Private`logged = Evaluate[
             ReplaceAll[EcoEvo`Logged, 
              Flatten[{EcoEvo`Private`opts, 
                Options[EcoEvo`EcoEqns]}]]]; 
          EcoEvo`Private`timescale = Evaluate[
             ReplaceAll[EcoEvo`TimeScale, 
              Flatten[{EcoEvo`Private`opts, 
                Options[EcoEvo`EcoEqns]}]]]; 
          EcoEvo`Private`percapita = Evaluate[
             ReplaceAll[EcoEvo`PerCapita, 
              Flatten[{EcoEvo`Private`opts, 
                Options[EcoEvo`EcoEqns]}]]]; 
          EcoEvo`Private`nonfixedvars = Evaluate[
             ReplaceAll[EcoEvo`NonFixedVars, 
              Flatten[{EcoEvo`Private`opts, 
                Options[EcoEvo`EcoEqns]}]]]; EcoEvo`Private`fixed = Evaluate[
             ReplaceAll[EcoEvo`Fixed, 
              Flatten[{EcoEvo`Private`opts, 
                Options[EcoEvo`EcoEqns]}]]]; 
          EcoEvo`Private`fixedvars = Part[EcoEvo`Private`fixed, All, 1]; 
          EcoEvo`Private`fixedvariables = 
           EcoEvo`ExtractVariables[EcoEvo`Private`fixed]; 
          If[$CellContext`debug, 
            Print[
            EcoEvo`Private`func, ": fixedvars=", EcoEvo`Private`fixedvars]]; 
          EcoEvo`Private`traits = 
           EcoEvo`Private`Expand\[ScriptCapitalN]InTraits[
            EcoEvo`Private`traitsin]; 
          EcoEvo`Set\[ScriptCapitalN][EcoEvo`Private`traits]; 
          If[EcoEvo`Private`nonfixedvars === Automatic, 
            EcoEvo`Private`nonfixedvars = 
            EcoEvo`OrderedComplement[
             EcoEvo`Private`AllVariables, EcoEvo`Private`fixedvars]]; 
          If[$CellContext`debug, 
            Print["nonfixedvars=", EcoEvo`Private`nonfixedvars]]; 
          EcoEvo`Private`fixed2 = 
           ReplaceAll[EcoEvo`Private`fixed, (Condition[
                Pattern[EcoEvo`Private`var, 
                 Blank[]], 
                MemberQ[
                 Part[EcoEvo`Private`fixedvariables, All, 1], 
                 EcoEvo`Private`var]] -> PatternTest[
                Pattern[EcoEvo`Private`val, 
                 Blank[]], NumericQ]) -> (EcoEvo`Private`var[EcoEvo`t] -> 
              EcoEvo`Private`val)]; EcoEvo`Private`eqns = Table[
             Which[
              And[
              EcoEvo`Private`logged === True, 
               EcoEvo`Private`comptype[EcoEvo`Private`var] === "Extensive"], 
              Which[
              EcoEvo`Private`modeltype == "DiscreteTime", EcoEvo`Private`DT[
                  EcoEvo`log[EcoEvo`Private`var]] - EcoEvo`log[
                EcoEvo`Private`var][EcoEvo`t] == 
               EcoEvo`RealSimplify[
                EcoEvo`Private`timescale 
                 Log[EcoEvo`Private`eqn[EcoEvo`Private`var]/
                   EcoEvo`Private`var[EcoEvo`t]]], EcoEvo`Private`modeltype == 
               "ContinuousTime", EcoEvo`Private`DT[
                 EcoEvo`log[EcoEvo`Private`var]] == 
               EcoEvo`Private`timescale 
                EcoEvo`Private`eqn[EcoEvo`Private`var]/EcoEvo`Private`var[
                EcoEvo`t]], 
              And[
              EcoEvo`Private`percapita === True, 
               EcoEvo`Private`comptype[EcoEvo`Private`var] === "Extensive"], 
              Which[
              EcoEvo`Private`modeltype == "DiscreteTime", 
               EcoEvo`Private`DT[EcoEvo`Private`var]/EcoEvo`Private`var[
                EcoEvo`t] == 
               EcoEvo`Private`timescale 
                EcoEvo`Private`eqn[EcoEvo`Private`var]/EcoEvo`Private`var[
                EcoEvo`t], EcoEvo`Private`modeltype == "ContinuousTime", 
               EcoEvo`Private`DT[EcoEvo`Private`var] == 
               EcoEvo`Private`timescale 
                EcoEvo`Private`eqn[EcoEvo`Private`var]/EcoEvo`Private`var[
                EcoEvo`t]], EcoEvo`Else, 
              EcoEvo`Private`DT[EcoEvo`Private`var] == 
              EcoEvo`Private`timescale 
               EcoEvo`Private`eqn[EcoEvo`Private`var]], {
             EcoEvo`Private`var, EcoEvo`Private`nonfixedvars}]; Return[
            DeleteDuplicates[
             ReplaceAll[
              ReplaceAll[
               ReplaceAll[EcoEvo`Private`eqns, 
                EcoEvo`Private`ExpRule[
                EcoEvo`Private`nonfixedvars, EcoEvo`Private`logged]], 
               Dispatch[EcoEvo`Private`traits]], EcoEvo`Private`fixed2]]]]]}],
     "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, 
    "Options" -> {
     EcoEvo`Fixed -> {}, EcoEvo`TimeScale -> 1, EcoEvo`Logged -> False, 
      EcoEvo`PerCapita -> False, EcoEvo`NonFixedVars -> Automatic}, 
    "Attributes" -> {Protected}, "FullName" -> "EcoEvo`EcoEqns"], 
   False]]], "Output",
 CellChangeTimes->{3.7826444174525537`*^9},
 CellLabel->
  "Out[855]=",ExpressionUUID->"5b1c1f43-b4a5-40c9-a793-d3130f1867da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReplaceRHS", "[", 
  RowBox[{
   RowBox[{"EcoEqns", "[", "]"}], ",", 
   RowBox[{"{", "EcoEvo`Private`RemoveVariablets", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.782643774215734*^9, 3.782643883494628*^9}},
 CellLabel->
  "In[853]:=",ExpressionUUID->"6dd0dbf8-2e0e-4b91-add2-96a72aeceef1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["n1", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{"n1", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.1`"}], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "100"]}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"20", "-", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Mod", "[", 
                  RowBox[{"t", ",", "100"}], "]"}], "<", "70.`"}], ",", "10", 
                ",", "20"}], "]"}]}], ")"}], "2"]}]], " ", 
         RowBox[{"(", 
          RowBox[{"10", "-", "n1", "-", "n2"}], ")"}]}], 
        RowBox[{"11", "-", "n1", "-", "n2"}]]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["n2", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.1`"}], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "100"]}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"10", "-", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Mod", "[", 
                  RowBox[{"t", ",", "100"}], "]"}], "<", "70.`"}], ",", "10", 
                ",", "20"}], "]"}]}], ")"}], "2"]}]], " ", 
         RowBox[{"(", 
          RowBox[{"10", "-", "n1", "-", "n2"}], ")"}]}], 
        RowBox[{"11", "-", "n1", "-", "n2"}]]}], ")"}], " ", "n2"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7826438255205317`*^9, {3.782643872593813*^9, 3.7826438842018747`*^9}},
 CellLabel->
  "Out[853]=",ExpressionUUID->"4cb0fd4c-0c5d-486a-892a-f8784197e3f4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"EcoSim", "["}]], "Input",
 CellChangeTimes->{{3.782641023841536*^9, 
  3.782641025189021*^9}},ExpressionUUID->"83d2e2a1-ba49-4c0e-aa54-\
7b7b6f03312f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Delete"}]], "Input",
 CellChangeTimes->{{3.7826307115892982`*^9, 3.782630713050847*^9}},
 CellLabel->
  "In[806]:=",ExpressionUUID->"d8a47c2d-a05f-4338-a08a-08c711ba655c"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Delete",
              ButtonNote->"paclet:ref/Delete"],
             "\"paclet:ref/Delete\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Delete\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) deletes the element at position \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) in \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). If \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) is negative, the position is \
counted from the end. \\n\\!\\(\\*RowBox[{\\\"Delete\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"j\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}]}], \\\"]\\\"}]\\) deletes the part at position \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]\\). \
\\n\\!\\(\\*RowBox[{\\\"Delete\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) deletes parts at several \
positions. \\n\\!\\(\\*RowBox[{\\\"Delete\\\", \\\"[\\\", \
StyleBox[\\\"pos\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents an operator form \
of Delete that can be applied to an expression.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Delete", 
                    "paclet:ref/Delete", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"],"\"  \"",StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False],
                    "\"  \"",TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Delete.html"], 
                    None}, "http://reference.wolfram.com/language/ref/Delete.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Delete\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{20., {6., 14.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{20., {6., 14.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Delete",
              ButtonNote->"paclet:ref/Delete"],
             "\"paclet:ref/Delete\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Delete\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) deletes the element at position \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) in \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). If \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) is negative, the position is \
counted from the end. \\n\\!\\(\\*RowBox[{\\\"Delete\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"j\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}]}], \\\"]\\\"}]\\) deletes the part at position \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]\\). \
\\n\\!\\(\\*RowBox[{\\\"Delete\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) deletes parts at several \
positions. \\n\\!\\(\\*RowBox[{\\\"Delete\\\", \\\"[\\\", \
StyleBox[\\\"pos\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents an operator form \
of Delete that can be applied to an expression.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {3., 12.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {3., 12.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Delete\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\
\", StyleBox[\"n\", \"TI\"]}], \"]\"}]\) deletes the element at position \!\(\
\*StyleBox[\"n\", \"TI\"]\) in \!\(\*StyleBox[\"expr\", \"TI\"]\). If \
\!\(\*StyleBox[\"n\", \"TI\"]\) is negative, the position is counted from the \
end. \n\!\(\*RowBox[{\"Delete\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \
\",\", RowBox[{\"{\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", StyleBox[\"j\", \
\"TI\"], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) \
deletes the part at position \!\(\*RowBox[{\"{\", RowBox[{StyleBox[\"i\", \
\"TI\"], \",\", StyleBox[\"j\", \"TI\"], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"]}], \"}\"}]\). \n\!\(\*RowBox[{\"Delete\", \"[\", \
RowBox[{StyleBox[\"expr\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{RowBox[{\"{\
\", RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"j\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"2\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"j\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) deletes parts at \
several positions. \n\!\(\*RowBox[{\"Delete\", \"[\", StyleBox[\"pos\", \
\"TI\"], \"]\"}]\) represents an operator form of Delete that can be applied \
to an expression.", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/Delete", "Web" -> 
      "http://reference.wolfram.com/language/ref/Delete.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "System`Delete"], False]]], "Output",
 CellChangeTimes->{3.782630715611724*^9},
 CellLabel->
  "Out[806]=",ExpressionUUID->"ffe96cc1-87f6-41e1-b9f9-95d405819f95"]
}, Open  ]]
},
WindowSize->{808, 886},
WindowMargins->{{Automatic, 316}, {20, Automatic}},
Magnification->1.5,
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 699, 19, 148, "Input",ExpressionUUID->"cb501180-22a4-4b06-8cf9-3c4c509f398b"],
Cell[1282, 43, 654, 13, 59, "Message",ExpressionUUID->"bf904c7b-3e4a-4f4a-bb12-66deb11ea706"],
Cell[1939, 58, 618, 18, 71, "Output",ExpressionUUID->"869e2b00-d216-4f0e-8eee-ee254d155c39"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2594, 81, 204, 3, 46, "Input",ExpressionUUID->"fa7fa1f0-c75c-4b91-81a5-e1c0184c81ed"],
Cell[2801, 86, 720, 22, 115, "Output",ExpressionUUID->"3a001bd9-4c13-471a-a37a-6f294bcb5ef9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3558, 113, 401, 9, 78, "Input",ExpressionUUID->"241cec4a-736e-4cb2-8b2e-cbb6446912f4"],
Cell[3962, 124, 771, 23, 115, "Output",ExpressionUUID->"108ad248-64b4-42d2-ac21-022f2e1e5ab0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4770, 152, 565, 16, 46, "Input",ExpressionUUID->"b9c63b00-6d93-4090-9525-0bd142925fbe"],
Cell[5338, 170, 599, 17, 84, "Output",ExpressionUUID->"7887784b-b9fa-4060-99b6-2a5520072c34"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5974, 192, 194, 4, 46, "Input",ExpressionUUID->"0971fc0f-f179-4345-be71-08866ae3a68e"],
Cell[6171, 198, 14576, 331, 281, "Output",ExpressionUUID->"71231928-f0a8-4aa7-822b-8366f91ea72a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20784, 534, 205, 4, 37, "Input",ExpressionUUID->"6af8b20a-a077-42bf-a206-5c0a8259e508"],
Cell[20992, 540, 2294, 67, 158, "Output",ExpressionUUID->"ef97289e-0c02-4b18-ae44-0d6f0de9ec79"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23323, 612, 959, 25, 37, "Input",ExpressionUUID->"ddb6f81d-19a3-4a47-bf5c-d66bc74f4b14"],
Cell[24285, 639, 1988, 52, 111, "Output",ExpressionUUID->"0153a9f3-5494-4b1f-9d99-848066e66763"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26310, 696, 200, 4, 37, "Input",ExpressionUUID->"30fd7ce0-07cb-432e-ae07-af2c189b8287"],
Cell[26513, 702, 17537, 411, 176, "Output",ExpressionUUID->"d16ad3db-159f-4ed2-bbb5-fb94f100491d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44087, 1118, 421, 11, 46, "Input",ExpressionUUID->"7edc494c-89b4-448e-8f13-2bf5590d0256"],
Cell[44511, 1131, 2084, 62, 236, "Output",ExpressionUUID->"f58285a9-eb2c-4bd6-8e5a-aa333408099f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46632, 1198, 201, 4, 46, "Input",ExpressionUUID->"482c0e92-dc67-464a-b998-6fdbe112a4b1"],
Cell[46836, 1204, 36272, 794, 176, "Output",ExpressionUUID->"5b1c1f43-b4a5-40c9-a793-d3130f1867da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83145, 2003, 319, 7, 46, "Input",ExpressionUUID->"6dd0dbf8-2e0e-4b91-add2-96a72aeceef1"],
Cell[83467, 2012, 1998, 59, 259, "Output",ExpressionUUID->"4cb0fd4c-0c5d-486a-892a-f8784197e3f4"]
}, Open  ]],
Cell[85480, 2074, 175, 4, 46, "Input",ExpressionUUID->"83d2e2a1-ba49-4c0e-aa54-7b7b6f03312f"],
Cell[CellGroupData[{
Cell[85680, 2082, 200, 4, 46, "Input",ExpressionUUID->"d8a47c2d-a05f-4338-a08a-08c711ba655c"],
Cell[85883, 2088, 16832, 360, 351, "Output",ExpressionUUID->"ffe96cc1-87f6-41e1-b9f9-95d405819f95"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

