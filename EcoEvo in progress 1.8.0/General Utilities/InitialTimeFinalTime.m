(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



Package["EcoEvo`"]
PackageExport["InitialTime"]
PackageExport["FinalTime"]


InitialTime::usage=
"InitialTime[\!\(\*
StyleBox[\"rulelist\", \"TI\"]\)] returns the initial time of temporal \!\(\*
StyleBox[\"rulelist\", \"TI\"]\).";


(*InitialTime[sol_]:=Which[
	Head[sol\[LeftDoubleBracket]1,2\[RightDoubleBracket]]===InterpolatingFunction,sol\[LeftDoubleBracket]1,2,1,1,1\[RightDoubleBracket],
	Head[sol\[LeftDoubleBracket]1,2\[RightDoubleBracket]]===List,sol\[LeftDoubleBracket]1,2,1,1\[RightDoubleBracket],
	Head[sol\[LeftDoubleBracket]1,2\[RightDoubleBracket]]===TemporalData,sol\[LeftDoubleBracket]1,2\[RightDoubleBracket]["FirstTime"]
];*)


InitialTime[sol_?RuleListQ]:=Module[{tmp,numtmp},
	tmp=Which[
		Head[#[[2]]]===InterpolatingFunction,#[[2,1,1,1]],
		Head[#[[2]]]===List,#[[2,1,1]],
		Head[#[[2]]]===TemporalData,#[[2]]["FirstTime"],
		Else,-\[Infinity]
	]&/@sol;
	numtmp=Select[tmp,NumericQ];
	(*If[Length[Union[numtmp]]>1,Message[InitialTime::notime,numtmp];Return[$Failed]];*)
	Return[Max[tmp]];
];


(* work on ParametricDynamicss *)
InitialTime[pd_ParametricDynamics]:={Period->Interpolation[Transpose[{ToExpression@pd["Coordinates"],InitialTime/@Values[pd[[1]]]}]]};


InitialTime::notime="No common final time among `1`.";


FinalTime::usage=
"FinalTime[\!\(\*
StyleBox[\"rulelist\", \"TI\"]\)] returns the final time of temporal \!\(\*
StyleBox[\"rulelist\", \"TI\"]\).";


(*FinalTime[sol_]:=Which[
	Head[sol\[LeftDoubleBracket]1,2\[RightDoubleBracket]]===InterpolatingFunction,sol\[LeftDoubleBracket]1,2,1,1,2\[RightDoubleBracket],
	Head[sol\[LeftDoubleBracket]1,2\[RightDoubleBracket]]===List,sol\[LeftDoubleBracket]1,2,-1,1\[RightDoubleBracket],
	Head[sol\[LeftDoubleBracket]1,2\[RightDoubleBracket]]===TemporalData,sol\[LeftDoubleBracket]1,2\[RightDoubleBracket]["LastTime"]
];*)


FinalTime[sol_?RuleListQ]:=Module[{tmp,numtmp},
	tmp=Which[
		Head[#[[2]]]===InterpolatingFunction,#[[2,1,1,2]],
		Head[#[[2]]]===List,#[[2,-1,1]],
		Head[#[[2]]]===TemporalData,#[[2]]["LastTime"],
		Else,\[Infinity]
	]&/@sol;
	numtmp=Select[tmp,NumericQ];
	(*If[Length[Union[numtmp,SameTest\[Rule](Abs[#1-#2]<$MachinePrecision&)]]>1,Message[FinalTime::notime,numtmp];Return[$Failed]];*)
	Return[Min[tmp]];
];


(* work on ParametricDynamicss *)
FinalTime[pd_ParametricDynamics]:={Period->Interpolation[Transpose[{ToExpression@pd["Coordinates"],FinalTime/@Values[pd[[1]]]}]]};


FinalTime::notime="No common final time among `1`.";
