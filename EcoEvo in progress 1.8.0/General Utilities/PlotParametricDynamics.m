(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



Package["EcoEvo`"]
PackageExport["PlotParametricDynamics"]


PlotParametricDynamics::usage="PlotParametricDynamics[\!\(\*
StyleBox[\"pd\", \"TI\"]\)] plots a DiscreteTime ParametricDynamics object, \!\(\*
StyleBox[\"pd\", \"TI\"]\).";


PlotParametricDynamics[pd_ParametricDynamics,opts___?OptionQ]:=Module[{
(* options *)
plotopts,axeslabel,
(* other variables *)
par,vars,domain,
yaxislabel,res
},

plotopts=FilterRules[Flatten[{opts,Options[PlotParametricDynamics]}],Options[ListPlot]];
axeslabel=Evaluate[AxesLabel/.Flatten[{opts,Options[PlotParametricDynamics]}]];

par=pd["Parameter"];
vars=pd["Variables"];
domain=pd["Domain"];

(*Print["par=",par];
Print["vars=",vars];
Print["domain=",domain];*)

If[axeslabel===Automatic,
	yaxislabel=Sort[Union[Replace[vars,{Subscript[v_,sp_]->Subscript[v,"i"]},1]]];
	axeslabel={par,Row[yaxislabel,","]}
];
(*Print["axeslabel=",axeslabel];*)

Which[
	pd["Type"]=="Discrete",
	Which[
		pd["ModelType"]=="DiscreteTime",
		res=Show[Table[
			ListPlot[AssociationToArray[DropTimes/@pd[[1]],var],
			AxesLabel->axeslabel,Evaluate[Sequence@@plotopts],PlotRange->{domain,{0,All}}],{var,vars}]];
	,
		pd["ModelType"]=="ContinuousTime",
		bleh (* does this make sense? *)
	]
,
	pd["Type"]=="Continuous",
	Which[
		pd["ModelType"]=="DiscreteTime",
		res=PlotRuleList[RuleListInterpolation[DropTimes/@pd[[1]]],AxesLabel->axeslabel,Evaluate[Sequence@@plotopts]]
	,
		pd["ModelType"]=="ContinuousTime",
		res=PlotRuleList[RuleListInterpolation[pd[[1]]],opts] (* does this make sense? *)
	]
];

Return[res]
];


PlotParametricDynamics[list_?ParametricDynamicsListQ,rest___]:=Show[PlotParametricDynamics[#,rest]&/@list,PlotRange->All];


Options[PlotParametricDynamics]={
AxesLabel->Automatic,PlotRangePadding->Scaled[.05]}
