(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



Package["EcoEvo`"]
PackageExport["TimeSlice"]
PackageExport["InitialTimeSlice"]
PackageExport["FinalTimeSlice"]


TimeSlice::usage="TimeSlice[\!\(\*
StyleBox[\"prl\", \"TI\"]\)] returns a temporal slice of ParametricDynamics \!\(\*
StyleBox[\"prl\", \"TI\"]\).";


TimeSlice[pd_ParametricDynamics,rest___]:=Which[
	pd["Type"]=="Discrete",
	Table[var->AssociationToArray[Slice[#,rest]&/@pd[[1]],var],{var,pd["Variables"]}]
,
	pd["Type"]=="Continuous",
	RuleListInterpolation[Slice[#,rest]&/@pd[[1]]]
];


InitialTimeSlice::usage="InitialTimeSlice[\!\(\*
StyleBox[\"pd\", \"TI\"]\)] returns the initial temporal slice of ParametricDynamics \!\(\*
StyleBox[\"pd\", \"TI\"]\).";


(*InitialTimeSlice[pd_ParametricDynamics,opts___?OptionQ]:=Which[
	pd["Type"]=="Discrete",
	Table[var->AssociationToArray[InitialSlice/@pd[[1]],var],{var,pd["Variables"]}]
,
	pd["Type"]=="Continuous",
	RuleListInterpolation[MapAt[InitialSlice,Normal[pd],{All,2}]]
];*)


(* thread over ParametricDynamics *)
InitialTimeSlice[pd_ParametricDynamics]:=Which[
	pd["Type"]=="Discrete",
	Table[var->AssociationToArray[InitialSlice/@pd[[1]],var],{var,pd["Variables"]}]
,
	pd["Type"]=="Continuous",
	RuleListInterpolation[InitialSlice/@pd[[1]]]
];


FinalTimeSlice::usage="FinalTimeSlice[\!\(\*
StyleBox[\"pd\", \"TI\"]\)] returns the final temporal slice of ParametricDynamics \!\(\*
StyleBox[\"pd\", \"TI\"]\).";


FinalTimeSlice[pd_ParametricDynamics]:=Which[
	pd["Type"]=="Discrete",
	Table[var->AssociationToArray[FinalSlice/@pd[[1]],var],{var,pd["Variables"]}]
,
	pd["Type"]=="Continuous",
	RuleListInterpolation[FinalSlice/@pd[[1]]]
];
