(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



Package["EcoEvo`"]
PackageExport["MyStreamPlot"]


MyStreamPlot::usage=
"MyStreamPlot[\!\(\*
StyleBox[\"f\", \"TI\"]\), {\!\(\*
StyleBox[\"x\", \"TI\"]\), \!\(\*
StyleBox[\"xmin\", \"TI\"]\), \!\(\*
StyleBox[\"xmax\", \"TI\"]\)}, {\!\(\*
StyleBox[\"y\", \"TI\"]\), \!\(\*
StyleBox[\"ymin\", \"TI\"]\), \!\(\*
StyleBox[\"ymax\", \"TI\"]\)}] is like StreamPlot, but with better arrow spacing.";


MyStreamPlot[f_,{x_,x0_,x1_},{y_,y0_,y1_},opts___?OptionQ]:=

Module[{
(* options *)
a,rf,monitor,xx,yy,
(* other variables *)
u,v,res,opts2},

a=Evaluate[AspectRatio/.Flatten[{opts,Options[StreamPlot]}]];
rf=Evaluate[RegionFunction/.Flatten[{opts,Options[StreamPlot]}]];
monitor=Evaluate[Monitor/.Flatten[{opts,Options[MyStreamPlot]}]];

(* hack to fix visible region introduced in v12.1,
see <https://mathematica.stackexchange.com/questions/216865/blue-background-in-streamplot-output> *)
If[$VersionNumber>=12.1,
	opts2=Join[FilterRules[{opts},Options[StreamPlot]],{RegionBoundaryStyle->None,RegionFillingStyle->None}],
	opts2=FilterRules[{opts},Options[StreamPlot]]
];

If[monitor===True,Monitor[
	res=Show[StreamPlot[
		{1/(x1-x0),a/(y1-y0)}(f/.{x->Rescale[u,{0,1},{x0,x1}],y->Rescale[v,{0,a},{y0,y1}]}),{u,0,1},{v,0,a},
		RegionFunction->(rf[Rescale[#,{0,1},{x0,x1}],Rescale[#2,{0,a},{y0,y1}],##3]&),Evaluate[Sequence@@opts2]]
		/.Arrow[pts_]:>Arrow[Transpose[{Rescale[#,{0,1},{x0,x1}],Rescale[#2,{0,a},{y0,y1}]}&@@Transpose[pts]]],
		PlotRange->{{x0,x1},{y0,y1}}],
		If[NumericQ[xx=Rescale[u,{0,1},{x0,x1}]]&&NumericQ[yy=Rescale[v,{0,a},{y0,y1}]],ToString[{x,y},StandardForm]<>"="<>ToString[{xx,yy}],"Processing..."]
	]
,
	res=Show[StreamPlot[
		{1/(x1-x0),a/(y1-y0)}(f/.{x->Rescale[u,{0,1},{x0,x1}],y->Rescale[v,{0,a},{y0,y1}]}),{u,0,1},{v,0,a},
		RegionFunction->(rf[Rescale[#,{0,1},{x0,x1}],Rescale[#2,{0,a},{y0,y1}],##3]&),Evaluate[Sequence@@opts2]]
		/.Arrow[pts_]:>Arrow[Transpose[{Rescale[#,{0,1},{x0,x1}],Rescale[#2,{0,a},{y0,y1}]}&@@Transpose[pts]]],
		PlotRange->{{x0,x1},{y0,y1}}]
];	
	
Return[res]
];


Options[MyStreamPlot]={Monitor->False};



