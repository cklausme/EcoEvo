(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    204276,       3912]
NotebookOptionsPosition[    198736,       3744]
NotebookOutlinePosition[    201317,       3813]
CellTagsIndexPosition[    201230,       3808]
WindowTitle->FindEcoEvoCycle
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["ECOEVO PACKAGE SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "See Also",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"See Also", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"FindEcoCycleEvoEq\"\>":>
       Documentation`HelpLookup[
       "paclet:EcoEvo/ref/FindEcoCycleEvoEq"], "\<\"FindEcoCycle\"\>":>
       Documentation`HelpLookup[
       "paclet:EcoEvo/ref/FindEcoCycle"], "\<\"FindEcoEvoEq\"\>":>
       Documentation`HelpLookup["paclet:EcoEvo/ref/FindEcoEvoEq"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"SeeAlso"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"EcoEvo\"\>":>Documentation`HelpLookup[
       "paclet:EcoEvo/guide/EcoEvo"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"EcoEvo/ref/FindEcoEvoCycle\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["EcoEvo/ref/FindEcoEvoCycle"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 CellID->1],

Cell[TextData[{
 Cell["FindEcoEvoCycle", "ObjectName"],
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{8, 0}],
    CacheGraphics->False],
   Spacer[8]]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"FindEcoEvoCycle", "[", 
       RowBox[{
        StyleBox["traits", "TI"], ",", " ", 
        StyleBox["variables", "TI"]}], "]"}]], "InlineFormula",
      $CellContext`ExpressionUUID -> "5bed0ee2-72dc-43f0-8b1b-22a86124d28c"],
     " \[LineSeparator]finds an evolutionary equilibrium with an ecological \
cycle, with initial guess ",
     StyleBox["traits", "TI"],
     " and ",
     StyleBox["variables", "TI"],
     "."
    }]]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"FindEcoEvoEq", "[", 
       RowBox[{
        StyleBox["traits", "TI"], ",", " ", 
        StyleBox["variables", "TI"], ",", " ", 
        StyleBox["varscovars", "TI"]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]uses trait variances/covariances in ",
     StyleBox["varscovars", "TI"],
     "."
    }]]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {None, {None}}, 
   "RowsIndexed" -> {}}},
 CellID->982511436,
 $CellContext`ExpressionUUID -> "35356b63-94b2-4bd8-8422-ecfc31ee07ed"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    InterpretationBox[
     StyleBox[
      GraphicsBox[{},
       BaselinePosition->Baseline,
       ImageSize->{6, 0}],
      CacheGraphics->False],
     Spacer[6]]]],
   "Details"
  }], "NotesFrameText"],
  Appearance->{Automatic, None},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->"Preemptive"]]]], "NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->1897981492],

Cell["", "SectionHeaderSpacer"],

Cell["\<\
FindEcoEvoCycle currently only works on continuous-time periodically forced \
models.  Eventually it will also handle unforced models with eco-evolutionary \
limit cycles.\
\>", "Notes",
 CellID->1603140300,
 $CellContext`ExpressionUUID -> "05de3303-4291-4feb-8a4b-5752332f2026"],

Cell["The following options can be given:", "Notes",
 CellID->1067943069,
 $CellContext`ExpressionUUID -> "0b28d34f-bd69-407f-9035-338f15d62f66"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], "Method", "\"\<FindRoot\>\"", Cell[
    TextData[Cell["method to find result", "TableText",
     $CellContext`ExpressionUUID -> "6721fbc7-15b2-45b1-aed2-3a90836bc04f"]], 
     "TableText",
     $CellContext`ExpressionUUID -> "d6bfc39b-d791-4542-a516-5dbc703bc0cb"]},
   {Cell["      ", "TableRowIcon"], "FindRootOpts", 
    RowBox[{"{", "}"}], Cell[TextData[Cell[TextData[{
     "options to pass to ",
     ButtonBox["FindRoot",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/FindRoot"]
    }], "TableText",
     $CellContext`ExpressionUUID -> "970c07a5-117c-4a8d-84e4-ad6a86bd2bb1"]], 
     "TableText",
     $CellContext`ExpressionUUID -> "209bc03f-d174-40d5-bba4-ce5f507c6fe2"]},
   {Cell["      ", "TableRowIcon"], "NDInvOpts", 
    RowBox[{"{", "}"}], Cell[TextData[Cell[TextData[{
     "options to pass to ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["NDInv"]],"paclet:EcoEvo/ref/NDInv"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",
      $CellContext`ExpressionUUID -> "02c8453b-87b4-422f-88de-4c35bbfe486d"]
    }], "TableText",
     $CellContext`ExpressionUUID -> "268d89df-0709-42cb-bf41-6294f4fb6eef"]], 
     "TableText",
     $CellContext`ExpressionUUID -> "ccfaf82e-ed2d-41c1-bb6e-15e8581b8e1a"]},
   {Cell["      ", "TableRowIcon"], "EcoSimOpts", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "options to pass to ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["EcoSim"]],"paclet:EcoEvo/ref/EcoSim"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",
      $CellContext`ExpressionUUID -> "81aa2d66-8208-460b-a337-56bbd7910764"]
    }], "TableText",
     $CellContext`ExpressionUUID -> "78ae7e13-4f31-4eb1-9d8b-24c20b02e962"]},
   {Cell["      ", "TableRowIcon"], "EcoEvoSimOpts", 
    RowBox[{"{", "}"}], 
    RowBox[{"options", " ", "to", " ", "pass", " ", "to", " ", 
     ButtonBox["EcoEvoSim",
      BaseStyle->"Link",
      ButtonData->"paclet:EcoEvo/ref/EcoEvoSim"]}]},
   {Cell["      ", "TableRowIcon"], "RuleListDistanceOpts", 
    RowBox[{"{", "}"}], 
    RowBox[{"options", " ", "to", " ", "pass", " ", "to", " ", 
     ButtonBox["RuleListDistance",
      BaseStyle->"Link",
      ButtonData->"paclet:EcoEvo/ref/RuleListDistance"]}]},
   {Cell["      ", "TableRowIcon"], "FitnessGradient", "Automatic", Cell[
    "how to calculate the fitness gradient", "TableText",
     $CellContext`ExpressionUUID -> "1ce98c41-388f-47ae-bd0f-0f25b39b2eb3"]},
   {Cell["      ", "TableRowIcon"], "Fixed", 
    RowBox[{"{", "}"}], Cell[TextData[Cell["fixed variables", "TableText",
     $CellContext`ExpressionUUID -> "746ece4a-a309-46ed-b213-5725e910041b"]], 
     "TableText",
     $CellContext`ExpressionUUID -> "4c0316be-66b8-4d94-8b64-b7839a4f3031"]},
   {Cell["      ", "TableRowIcon"], "TraitShiftRate", 
    RowBox[{"{", "}"}], Cell["rate of environmental change", "TableText",
     $CellContext`ExpressionUUID -> "dff93417-eaf7-466a-bd2e-52b1b64a3979"]},
   {Cell["      ", "TableRowIcon"], "MaxIterations", "100", Cell[TextData[
    Cell["max number of iterations", "TableText",
     $CellContext`ExpressionUUID -> "75a47b71-b594-42dc-ad50-def032be9bd8"]], 
     "TableText",
     $CellContext`ExpressionUUID -> "eb9f0528-c0fa-4a31-958b-788fd84df709"]},
   {Cell["      ", "TableRowIcon"], "AccuracyGoal", "4", Cell[TextData[Cell[
    "accuracy goal (method \"FixedPoint\")", "TableText",
     $CellContext`ExpressionUUID -> "d61311ab-53c6-4723-b2a3-08050bcd8608"]], 
     "TableText",
     $CellContext`ExpressionUUID -> "12606383-789b-4a6c-8c7f-661084591ec1"]},
   {Cell["      ", "TableRowIcon"], "PrecisionGoal", 
    RowBox[{"{", 
     RowBox[{"4", ",", "\[Infinity]"}], "}"}], Cell[
    "precision goal (method \"FixedPoint\")", "TableText",
     $CellContext`ExpressionUUID -> "12606383-789b-4a6c-8c7f-661084591ec1"]},
   {Cell["      ", "TableRowIcon"], "Monitor", "False", Cell[
    "evaluation monitor", "TableText",
     $CellContext`ExpressionUUID -> "6d764894-891f-4b51-8200-b3f2331f0c9c"]},
   {Cell["      ", "TableRowIcon"], "PrintTrace", "False", Cell[
    "print a trace of steps", "TableText",
     $CellContext`ExpressionUUID -> "e46c7ca8-747d-4073-9d8e-eddb4596eff4"]},
   {Cell["      ", "TableRowIcon"], "Verbose", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[TextData[Cell[
    "print extra info", "TableText",
     $CellContext`ExpressionUUID -> "52aa074f-d1a2-48b6-9e9a-3c5d1b589ccc"]], 
     "TableText",
     $CellContext`ExpressionUUID -> "86d0aaae-8625-4cb8-aed9-cae83f5997d6"]},
   {Cell["      ", "TableRowIcon"], "VerboseAll", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[TextData[Cell[TextData[{
     "apply ",
     ButtonBox["Verbose",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Verbose"],
     " to all contained functions"
    }], "TableText",
     $CellContext`ExpressionUUID -> "255f7866-8225-4f2b-bb4a-381b16386b1c"]], 
     "TableText",
     $CellContext`ExpressionUUID -> "6d4e221b-309a-4811-be99-39bea4bfc0ad"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {
    None, None, None, None, None, None, None, None, None, None, None, None, 
     None, None, None, {None}}, "RowsIndexed" -> {}},
 GridBoxDividers->{
  "Rows" -> {{
     True, True, True, True, True, True, True, True, True, True, True, True, 
      True, True, True, True, True}}}},
 CellID->1575687271,
 $CellContext`ExpressionUUID -> "6bbc02ac-5861-4ee6-8c1e-2eaf120bb98a"],

Cell["Possible settings for the Method option are:", "Notes",
 CellID->1749032528,
 $CellContext`ExpressionUUID -> "d20fe338-f62f-4ef6-956f-e369ceaadbb0"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], "\"\<FindRoot\>\"", Cell[TextData[{
     "use ",
     ButtonBox["FindRoot",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/FindRoot"]
    }], "TableText",
     $CellContext`ExpressionUUID -> "79a8ab3c-3669-46ba-b3ad-691975adf17b"]},
   {Cell["      ", "TableRowIcon"], "\"\<FixedPoint\>\"", Cell[TextData[{
     "use ",
     ButtonBox["FixedPoint",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/FixedPoint"]
    }], "TableText",
     $CellContext`ExpressionUUID -> "6d72bc05-954a-48fe-8767-3983809b0c8b"]}
  }]], "2ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {None, {None}}, 
   "RowsIndexed" -> {}},
 GridBoxDividers->{"Rows" -> {{True, True, True}}}},
 CellID->1660620835,
 $CellContext`ExpressionUUID -> "28e2d0f2-faab-4cf2-82f6-6faa3f47adce"],

Cell["Possible settings for the FitnessGradient option are:", "Notes",
 CellID->272787741,
 $CellContext`ExpressionUUID -> "76c3f3c7-0910-46fe-808c-22e3d3222e9d"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], "Automatic", Cell[
    "\"EcoEvoSim\" if unstructured guilds, \"NDInv\" otherwise", "TableText",
     $CellContext`ExpressionUUID -> "077f2009-4f1a-44a1-a21d-1a9053718b64"]},
   {Cell["      ", "TableRowIcon"], "\"\<NDInv\>\"", Cell[TextData[{
     "use ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["NDInv"]],"paclet:EcoEvo/ref/NDInv"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",
      $CellContext`ExpressionUUID -> "339050c8-55a0-4098-b32d-6f0b4a1feb76"]
    }], "TableText",
     $CellContext`ExpressionUUID -> "0b4bd9fc-f9db-4eca-b7b5-62f95eff6e66"]},
   {Cell["      ", "TableRowIcon"], "\"\<EcoEvoSim\>\"", Cell[TextData[{
     "use ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["EcoEvoSim"]],"paclet:EcoEvo/ref/EcoEvoSim"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",
      $CellContext`ExpressionUUID -> "b880fe42-025e-46f0-bb19-c6aad441bf3e"]
    }], "TableText",
     $CellContext`ExpressionUUID -> "4f82890d-2700-447e-95f8-5f728205e6c7"]}
  }]], "2ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {None, None, {None}}, "RowsIndexed" -> {}},
 GridBoxDividers->{"Rows" -> {{True, True, True, True}}}},
 CellID->1778618773,
 $CellContext`ExpressionUUID -> "51c40bfd-94d5-4f0f-a278-8d5bc11adcf1"],

Cell[TextData[{
 "Method \"FixedPoint\": AccuracyGoal and PrecisionGoal can be given as a \
list {",
 StyleBox["variablegoal", "TI"],
 ", ",
 StyleBox["traitgoal", "TI"],
 "} to apply different values to variables and traits.  Otherwise, a single \
number is applied to both.  For Method \"FindRoot\", use FindRootOpts instead."
}], "Notes",
 CellID->1662488072],

Cell["$FindEcoEvoCycleSteps counts the number of steps taken.", "Notes",
 CellID->29728551,
 $CellContext`ExpressionUUID -> "ac984947-10f0-476e-b59b-69e90bdc4ecd"],

Cell[TextData[{
 StyleBox["traits", "TI"],
 " and ",
 StyleBox["variables", "TI"],
 " can be combined."
}], "Notes",
 CellID->721940538,
 $CellContext`ExpressionUUID -> "084c086d-40b7-4e9c-93d5-a0654ce4d4c3"],

Cell["", "SectionFooterSpacer"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellTags->"PrimaryExamplesSection",
 CellID->652843506],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->846852819],

Cell["\<\
A periodically forced model \[LongDash] competition in a variable temperature \
environment, with optimal temperature as a trait (Norberg et al 2001, Kremer \
& Klausmeier 2017):\
\>", "ExampleText",
 CellID->113861080,
 $CellContext`ExpressionUUID -> "f11e4bf4-9204-4d73-8fcb-34743ea72c58"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<EcoEvo`\>\"", "]"}], ";"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->819343330,
 $CellContext`ExpressionUUID -> "ff98ffa7-b3ad-4ecd-9c7f-3c3d44a15b9e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetModel", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Guild", "[", "n", "]"}], "\[Rule]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Equation", "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Mu]", " ", 
              SuperscriptBox["E", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    SubscriptBox["Topt", "\[FormalI]"], "-", 
                    RowBox[{"T", "[", "t", "]"}]}], ")"}], "2"]}], "/", 
                SuperscriptBox["\[Sigma]", "2"]}]], 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"Sum", "[", 
                 RowBox[{
                  SubscriptBox["n", "\[FormalJ]"], ",", 
                  RowBox[{"{", 
                   RowBox[{"\[FormalJ]", ",", 
                    SubscriptBox["\[ScriptCapitalN]", "n"]}], "}"}]}], 
                 "]"}]}], ")"}]}], "-", "d"}], ")"}], 
           SubscriptBox["n", "\[FormalI]"]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Traits", "\[Rule]", 
          RowBox[{"{", "Topt", "}"}]}]}], "\[IndentingNewLine]", "}"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"Period", "\[RuleDelayed]", "\[Tau]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Parameters", "\[RuleDelayed]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Tau]", ">", "0"}], ",", 
         RowBox[{"\[Sigma]", ">", "0"}], ",", 
         RowBox[{"\[Mu]", ">", "0"}], ",", 
         RowBox[{"d", ">", "0"}]}], "}"}]}]}], "\[IndentingNewLine]", "}"}], 
    "]"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"T", "[", "t", "]"}], ":=", 
    RowBox[{"15", "+", 
     RowBox[{"6", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", 
        RowBox[{"\[Pi]", "/", "\[Tau]"}], " ", "t"}], "]"}]}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", "temperature", " ", "*)"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Tau]", "=", "365"}], ";"}], " ", 
  RowBox[{"(*", " ", "period", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]", "=", "2.5"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"width", " ", "of", " ", "temperature"}], "-", 
    RowBox[{"response", " ", "curve"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Mu]", "=", "3.0"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"maximum", " ", "growth", " ", "rate"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "=", "0.1"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"death", " ", "rate"}], " ", 
   "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellLabel->"In[2]:=",
 CellID->1038202746,
 $CellContext`ExpressionUUID -> "5afc8018-0212-4245-be61-2eb4b8b1c5df"],

Cell["Find a single species eco-evolutionary cycle:", "ExampleText",
 CellID->1245834581,
 $CellContext`ExpressionUUID -> "ba44fb89-6f82-4e3a-a397-e671c87ba437"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq", "=", 
  RowBox[{"FindEcoEvoCycle", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["Topt", "1"], "\[Rule]", "16.0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["n", "1"], "\[Rule]", "0.96"}], "}"}]}], "]"}]}]], "Input",\

 CellLabel->"In[3]:=",
 CellID->98162231,
 $CellContext`ExpressionUUID -> "ffe039d7-0893-4571-9d43-f1b25dff1755"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["n", "1"], "\[Rule]", 
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAuSZw3aPy2T7kGU/OYxftPx98l/vy
zBdAYCg81d7C7D9f07XcMs0oQH9U6wSKb+w/qzb2RodsMkAmBf/vBjLsP49D
HgM2VDhAm38bmacM7D+JC6AXBbw+QAO55uroA+w/6wqkqjJbQkCHNf/SRRvs
P53tpPVymEVAztulVk1T7D9EMGyyk8ZIQKfWVLkXoew/FJTGA/29S0DAtvwo
3/TsP2/VTYF29U5A3LZYVqtS7T/5G7RJHPtQQCM22CNupu0/Nn2ki+1zUkC/
ptrb8/DtPzhNq+PGDFRApdgbjO027j/PrfuFRIpVQJ4z3GU4be4/K31iPson
V0DlJlXcQJzuP4J8rC/AvVhA+/1iRTm/7j9tDEBrWjhaQHXldJSs1u4/Hgvq
vPzSW0CCr46I9ObuP2Sa3VhDUl1A6plRcCHu7j9vmOcKkvFeQMmfmzR97e4/
OmPqeqhEYECDRVnDTuTuP4fChRXaAmFAu8ryI8LT7j83WSy7D9FhQKix1Bhv
uO4/Mbj3hZeRYkDjVavhUJXuPyivNG1XTmNA77qV9yBp7j+C3XxfGxtkQJTL
xnmuLe4/JtTpdjHaZEBhgRNlbuvtPy0CYplLqWVA6PkCDRKZ7T8xyEvYnXRm
QHdzwAdzQO0/gFZaPEIyZ0Bx6n5lVevsPzEcdKvq/2dAnMe67mOT7D8tqrI/
5b9oQJWMBYxqTew/JtBi8Bd8aUCF+dn+FhzsP4ItHqxOSGpAS3Iaap0D7D8o
U/6M1wZrQAMrq/fVC+w/MbDpeGTVa0AizdTpojXsP4TV+YlDlmxAnxp4Td11
7D/Uknu3WlNtQLg8BBNWxOw/h4cI8HUgbkDxbIOJKyHtP4VEuk3j325Aw9gH
N2J37T/lOHe2VK9vQNvT0NI1zu0/oeLSHX89cEB0/A30IBnuP/WM/PJ8nHBA
dYrUcVJU7j/60qvNfANxQEw0tNaYiO4/JH3tuqVjcUB5II7stK7uP03zZ7bq
wXFAUtA3WsvK7j8nBWi3MShyQIUgWc/D3+4/J3v6yqGHckBudSKIGevuP9iM
EuQT73JAuXeyxOfu7j+IamMLolRzQDH8F2U36u4/XaxGRVmzc0AOU6HfJN7u
P+OJr4QSGnRAagAeJiLI7j+Oy6rW9Hl0QHIOJvmBqu4/66grLtnhdECeYMt8
mH/uP0ZS5ZPZR3VA9vKucrdJ7j/GXzEMA6d1QIOmxkKmDO4/+AgDii4OdkBB
LoOiPr/tP08WZxqDbnZAQJvbWUxu7T8JV4P5/892QJ1e/dljF+0/qunhZA==

                    "]]}}}, {
                  DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0.865}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 365.}, {0.875441272004147, 
                    0.9666632501355173}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "365.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAuSZw3aPy2T7kGU/OYxftPx98l/vy
zBdAYCg81d7C7D9f07XcMs0oQH9U6wSKb+w/qzb2RodsMkAmBf/vBjLsP49D
HgM2VDhAm38bmacM7D+JC6AXBbw+QAO55uroA+w/6wqkqjJbQkCHNf/SRRvs
P53tpPVymEVAztulVk1T7D9EMGyyk8ZIQKfWVLkXoew/FJTGA/29S0DAtvwo
3/TsP2/VTYF29U5A3LZYVqtS7T/5G7RJHPtQQCM22CNupu0/Nn2ki+1zUkC/
ptrb8/DtPzhNq+PGDFRApdgbjO027j/PrfuFRIpVQJ4z3GU4be4/K31iPson
V0DlJlXcQJzuP4J8rC/AvVhA+/1iRTm/7j9tDEBrWjhaQHXldJSs1u4/Hgvq
vPzSW0CCr46I9ObuP2Sa3VhDUl1A6plRcCHu7j9vmOcKkvFeQMmfmzR97e4/
OmPqeqhEYECDRVnDTuTuP4fChRXaAmFAu8ryI8LT7j83WSy7D9FhQKix1Bhv
uO4/Mbj3hZeRYkDjVavhUJXuPyivNG1XTmNA77qV9yBp7j+C3XxfGxtkQJTL
xnmuLe4/JtTpdjHaZEBhgRNlbuvtPy0CYplLqWVA6PkCDRKZ7T8xyEvYnXRm
QHdzwAdzQO0/gFZaPEIyZ0Bx6n5lVevsPzEcdKvq/2dAnMe67mOT7D8tqrI/
5b9oQJWMBYxqTew/JtBi8Bd8aUCF+dn+FhzsP4ItHqxOSGpAS3Iaap0D7D8o
U/6M1wZrQAMrq/fVC+w/MbDpeGTVa0AizdTpojXsP4TV+YlDlmxAnxp4Td11
7D/Uknu3WlNtQLg8BBNWxOw/h4cI8HUgbkDxbIOJKyHtP4VEuk3j325Aw9gH
N2J37T/lOHe2VK9vQNvT0NI1zu0/oeLSHX89cEB0/A30IBnuP/WM/PJ8nHBA
dYrUcVJU7j/60qvNfANxQEw0tNaYiO4/JH3tuqVjcUB5II7stK7uP03zZ7bq
wXFAUtA3WsvK7j8nBWi3MShyQIUgWc/D3+4/J3v6yqGHckBudSKIGevuP9iM
EuQT73JAuXeyxOfu7j+IamMLolRzQDH8F2U36u4/XaxGRVmzc0AOU6HfJN7u
P+OJr4QSGnRAagAeJiLI7j+Oy6rW9Hl0QHIOJvmBqu4/66grLtnhdECeYMt8
mH/uP0ZS5ZPZR3VA9vKucrdJ7j/GXzEMA6d1QIOmxkKmDO4/+AgDii4OdkBB
LoOiPr/tP08WZxqDbnZAQJvbWUxu7T8JV4P5/892QJ1e/dljF+0/qunhZA==

                    "]]}}}, {
                  DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0.865}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 365.}, {0.875441272004147, 
                    0.9666632501355173}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "365.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->(
       "InterpolatingFunction[{{\[Ellipsis], 0., 365., \[Ellipsis]}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{
    SubscriptBox["Topt", "1"], "\[Rule]", 
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAuSZw3aPy2T60aXWFkfEoQB98l/vy
zBdAL83RLrDpKUBf07XcMs0oQCHDqH5tAytAqzb2RodsMkDtWi3K8hMsQI9D
HgM2VDhA4ZstonclLUCJC6AXBbw+QANusMEmUi5A6wqkqjJbQkCG7LkjOGsv
QJ3tpPVymEVApB9oph5MMEBEMGyyk8ZIQH4gIjrx2zBAFJTGA/29S0Cc1I6W
vlwxQG/VTYF29U5AFHYRaMPgMUD5G7RJHPtQQDiMhRBeUzJANn2ki+1zUkAD
L1S7broyQDhNq+PGDFRALLFO17ceM0DPrfuFRIpVQB63jySIcDNAK31iPson
V0AHOzUFfrszQIJ8rC/AvVhAQ/huBG/2M0BtDEBrWjhaQJQMbw7GHzRAHgvq
vPzSW0BhrsTISj00QGSa3VhDUl1ASU+uDjFKNEBvmOcKkvFeQDj44osRSDRA
OmPqeqhEYEDMtSeLvjU0QIfChRXaAmFAOBfXoFoWNEA3WSy7D9FhQNzG+q8k
5TNAMbj3hZeRYkBJT5P7fKkzQCivNG1XTmNAgttTQ85iM0CC3XxfGxtkQKzu
F0lYCTNAJtTpdjHaZECXZobAzaoyQC0CYplLqWVAseN40XM5MkAxyEvYnXRm
QD5d+QFqwDFAgFZaPEIyZ0BQ1ezp+EcxQDEcdKvq/2dAhySbbmy+MEAtqrI/
5b9oQP+IDFG8ODBAJtBi8Bd8aUCKyx7y2GMvQIItHqxOSGpA0BMFSck5LkAo
U/6M1wZrQM/6GNyaIS1AMbDpeGTVa0B7CXQ3dvMrQITV+YlDlmxACdGK3qLe
KkDUknu3WlNtQHpS2oTI1ylAh4cI8HUgbkCRiqyv9ccoQIVEuk3j325Awu1l
NtvZJ0DlOHe2VK9vQOhB88Hd6yZAoeLSHX89cED0iYH8IBkmQPWM/PJ8nHBA
Tt+7BA1rJUD60qvNfANxQDFb1tLAyCRAJH3tuqVjcUCwS85tk0skQE3zZ7bq
wXFAAzAnw7fqI0AnBWi3MShyQPp5eyqcnyNAJ3v6yqGHckASiYmHWXYjQNiM
EuQT73JAW+B6Fn9pI0CIamMLolRzQAVZdGE3fSNAXaxGRVmzc0BJsg4PPqwj
QOOJr4QSGnRAoNp69Nv9I0COy6rW9Hl0QMHxzqPiZSRA66grLtnhdEAfwWpU
k/MkQEZS5ZPZR3VAEFdh20eaJUDGXzEMA6d1QIHmJZqmTCZA+AgDii4OdkCL
fM0AuiQnQE8WZxqDbnZAqwTr0ZQBKEAJV4P5/892QM1IhWSR8ShAeX2tSQ==

                    "]]}}}, {
                  DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 8.5}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 365.}, {9.706047728061256, 
                    20.28981105571373}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "365.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAuSZw3aPy2T60aXWFkfEoQB98l/vy
zBdAL83RLrDpKUBf07XcMs0oQCHDqH5tAytAqzb2RodsMkDtWi3K8hMsQI9D
HgM2VDhA4ZstonclLUCJC6AXBbw+QANusMEmUi5A6wqkqjJbQkCG7LkjOGsv
QJ3tpPVymEVApB9oph5MMEBEMGyyk8ZIQH4gIjrx2zBAFJTGA/29S0Cc1I6W
vlwxQG/VTYF29U5AFHYRaMPgMUD5G7RJHPtQQDiMhRBeUzJANn2ki+1zUkAD
L1S7broyQDhNq+PGDFRALLFO17ceM0DPrfuFRIpVQB63jySIcDNAK31iPson
V0AHOzUFfrszQIJ8rC/AvVhAQ/huBG/2M0BtDEBrWjhaQJQMbw7GHzRAHgvq
vPzSW0BhrsTISj00QGSa3VhDUl1ASU+uDjFKNEBvmOcKkvFeQDj44osRSDRA
OmPqeqhEYEDMtSeLvjU0QIfChRXaAmFAOBfXoFoWNEA3WSy7D9FhQNzG+q8k
5TNAMbj3hZeRYkBJT5P7fKkzQCivNG1XTmNAgttTQ85iM0CC3XxfGxtkQKzu
F0lYCTNAJtTpdjHaZECXZobAzaoyQC0CYplLqWVAseN40XM5MkAxyEvYnXRm
QD5d+QFqwDFAgFZaPEIyZ0BQ1ezp+EcxQDEcdKvq/2dAhySbbmy+MEAtqrI/
5b9oQP+IDFG8ODBAJtBi8Bd8aUCKyx7y2GMvQIItHqxOSGpA0BMFSck5LkAo
U/6M1wZrQM/6GNyaIS1AMbDpeGTVa0B7CXQ3dvMrQITV+YlDlmxACdGK3qLe
KkDUknu3WlNtQHpS2oTI1ylAh4cI8HUgbkCRiqyv9ccoQIVEuk3j325Awu1l
NtvZJ0DlOHe2VK9vQOhB88Hd6yZAoeLSHX89cED0iYH8IBkmQPWM/PJ8nHBA
Tt+7BA1rJUD60qvNfANxQDFb1tLAyCRAJH3tuqVjcUCwS85tk0skQE3zZ7bq
wXFAAzAnw7fqI0AnBWi3MShyQPp5eyqcnyNAJ3v6yqGHckASiYmHWXYjQNiM
EuQT73JAW+B6Fn9pI0CIamMLolRzQAVZdGE3fSNAXaxGRVmzc0BJsg4PPqwj
QOOJr4QSGnRAoNp69Nv9I0COy6rW9Hl0QMHxzqPiZSRA66grLtnhdEAfwWpU
k/MkQEZS5ZPZR3VAEFdh20eaJUDGXzEMA6d1QIHmJZqmTCZA+AgDii4OdkCL
fM0AuiQnQE8WZxqDbnZAqwTr0ZQBKEAJV4P5/892QM1IhWSR8ShAeX2tSQ==

                    "]]}}}, {
                  DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 8.5}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 365.}, {9.706047728061256, 
                    20.28981105571373}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "365.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->(
       "InterpolatingFunction[{{\[Ellipsis], 0., 365., \[Ellipsis]}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->1366454531,
 $CellContext`ExpressionUUID -> "3ab3c59f-5b9f-448b-aa71-763c6ffdfefa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PlotDynamics", "[", 
  RowBox[{"eq", ",", "n"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotDynamics", "[", 
  RowBox[{"eq", ",", "Topt"}], "]"}]}], "Input",
 CellLabel->"In[4]:=",
 CellID->2123865325,
 $CellContext`ExpressionUUID -> "daa21bdd-0b29-46d9-99a0-40ff1f077491"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.513417, 0.72992, 0.440682], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
TPrz2t+z/w90JxnH
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["t", TraditionalForm], 
    FormBox[
     TemplateBox[{",", "\",\"", 
       SubscriptBox["n", "\"i\""]}, "RowWithSeparators"], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0., 364.9999925510204}, {0, All}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[4]=",
 CellID->345998311,
 $CellContext`ExpressionUUID -> "5e2ff918-27b7-476e-8c5c-3a411c864f86"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.513417, 0.72992, 0.440682], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwV2Xk41F0UB3Bpl0S0CZWZYSLEjLL7Kkm0SJYsM8YWRTXzG0ZSUahQJLvK
XiRatVhalbWUaHl7pUW02KXIkve+f83zeZ6f39x77jnnnnks89hr6y0uJiaW
P0lM7P9Pv+2WnetNPpikvWo8Ht/PhFuKbmhbQYVptEzMBqXfTDQ8OC9+vuCp
qbe8pn7RCBNHX3EeRxa0mLqJn6isn7wcnz/oM0QFXaY9Ep+9F81fDun2fPs9
BWOmo7NuyvUYLEf+19bduwokYaHZpyOKXI4B35Fg3wIF8F9VjtcpqmHOt1/z
Bls04LeEkzocoI66UrMX87RWgSfzUfLEwxWw8JE0tbA2RjJXbp+LlCYm/uw4
0Bq2Bo+542cnBWvB4XfRk9XyFlBam1bq6rkS1h572CViVpA1lBX1y2hD8VH/
0EjzJjwKC00/ekMbv9S7m67csMFGz/T1lSY6KNTMvCfMtQXVOEovq9IB52l4
pgVlh22Wa6SzdVmo+Hw1lBNsh+CZYl06q1mQ//PeLSDMDid2ljyo1GPhLUNv
aU6sHcr0Tth9NmTBNrQra7zQDm1Frgqya1iw0LHPKWmzw75Rx69rNrOgmapy
XtneHh1j75j/eLPw17O28O9qB5SVxvs+j2fBSGDWeMXUAbPdzwj1E1jYf6h0
iLfeAQtXlejkJLLwK/WieaWDA2rZXvV7U1joehbVeizQAR7r5nNHz7LwbrXV
XJkbDmAomVU05bNwa1Z9ME3TEfM20qWOVbAwuHBtVrOuI4yGYgar7rKgo1Je
FWnsCAnxUxFT77NQjEuy3zY64klOf+ahhyzkBcYUF/k54lfo8gpeFQunP1h/
0r3oiLafEeu/PGdhz42nlpb07Ris8s7t+MTCwhjFS4Hq2+HV4VLy7TMLjzz2
zM7V2Y6ITtOE720szJsr/XIc2/HYv7L0azuJL3+byw3OdpTPXpD36jsLEprv
diulbIfsHYn7Qf0snC/4enpwphNy7BxzmyZY2Bym92uZjBNCA9skroixMewY
5bhloRMqp7XqR01iY+N0dYVCFSd0VqZ2609mY8B7z3m3tU5Y5FZz4cQ0NkD7
dbvugBN0Ex7oDUmy0XJO/H1WrxNisKnww0I2vP0zIn2HnLDjiERZziI2egwM
NFdOOKHCx8LOS54NsbeC0PtSzrCM36natpgN+txPy1o1nFEppK99rsSG39H7
Oxb7O+OSepSqO52NQTuXOW1CZ+hlfKyRZLBxgDZ0uzDEGRXHKvtvEcc+0Jxp
EOMM1+k3/5mmysb1kXOXthc648WBwPHE5WyM7DnQl/TNGXtmveDv0mQj3Hhh
GqfPGcJPjvv+EktKlpgxhp1xJ2h0SrwWG0oXO0+XTHdBkUVv0bWVbKxpc9Zt
UnHBrr7rrE86bEQ76u+X9nbBMxnR3+FVbMiqvFJ+6++C29Uz1weuZuPsIL8+
M8AFfP3Tc/uIL8cXKGhFuGD27fk6n/TYeFm/4P6mXBckhGTGXTNgYxF+T475
5IJQxtQiCRPy/tOGZprfXaARNdl8N/HIl7BDjX0usHBT8Wsgboma9WeBmCu8
G712nDBlI6NpaU+ekitWpgRIDYGNOSo71C1VXDHp2KjCZjM2wvZd8u3UcEW+
yUBpLrG74qo2bWNXmDh3ZFitIfH3sX57z8UVJx3r5x5by0Zi6al5Hp6umFhY
dfol8VTJ17ZT/Vwx5VRqloI5Gx1Xec+s97uiyzbRu4j44kjgo7eprjjgOjeh
bB0b8pvKJ0KyXNG0Wz1shDg6U8x4SYErXHWzR/Qs2PA3j7ntfdsVopKglGvE
mrFZRQOvXJHU6Lg3fj0bmR/bvye9d0X2u/EnT4ilWeqq+u3k+YSMi8PE/W9u
ZocOuqLzSP4CZ0s2PNRGW5XHXBH970j2ceKXB6BQNZkD64ilpTeJS5bVJ0vK
crDlxN2TszaQ/QZIN1+R52BgC82aTZxUZS+zTZmDqpd6SS7EIr+PMWnaHHQW
2D4/T/z1LqPWSJ+D+tuW92uIt0v7TfsIDsz4jYY/iPVv/gpTseHA5O3hd0wr
NgqnG96rdeTgim/G2DpieeewUX83DuIurbrkThxT9ERP2oeD3kCLjhDisb8S
oht7OLB4UVOcSOy/1eaGg4iD5Sllk4qI3+cm9f05yMHNIws+PyS+Z7nUDyc5
+Cgzw/I7sdYZ74K2RA6UEpOfjRBndRe2Hz3LweyJyA8S1iR+6FNWy+Pglder
g4uID5/W5T27RNa7KLxAhXjgy/5z/BscTCTGuukQe6x+8E62nINwq6EcI+Km
qKkLbz/iYGjpY2odsXmLlb1zHQfPB4YbNhIv/ePbENzIga+CLceWeHzesfVp
bznYliMqcCB+p3P+wZ0PHNQGeF91Ir61pVL/bQcHYhGKgS7ECf6frg91c6D1
4Nzv/82PmlBf8IvEa1E7+39vvKB4ftUYB/ZhA1r///3ySkMlh8lcfLOp+mpP
PO2jU0qgBBd39WNctxJ/HguSTpLhgvePTaw18f1FyVElC7lIqJA+aE58dlWJ
ePMSLubxHzP/39++bS9DfqpwcSHMO/7//dvz+wbnanIxPaT7liqxzkmpPTq6
XAx12qctJpYqXPF1qxEXerxUPSniH1VWPMFaLqK8LidOkPhXt/n+c8qKiy9+
CcW9xHlix2yvbuWiaeJMeCtxmOL5+ufbuTDp6pr/lJhjUGne68bF1rUinzvE
Bo6f7kr5cLF6ATMwl/jnKcWrmwK50Dz0pDqQ+EWx4fLdB7hI1o2X5BAX1Tnl
nAjnQkZ5s9Ra4h1TkhPr47kYD91iNYv4bZBU8IbLXJyganJPkHwtSVwx4HuT
i803LJt2Esdfs/I7XsFFjfnA/XXEVp1HOdV1XCj21bz8Q+rnLnfCbN1XLjZl
cltsidNDFMu9ergIlpj9h0EsSjVkR/ziotyuu2mI1OfKl0EqlZPdsEHyemUK
cc66PgmzpW7ok4yOriH1HuohFcFTdUNS/erUeGLX0BXjoZpusO5Q8XIinlfq
23vPyA28crVV7aR/HF/xqcnIyQ1FR5qru0m/2S378qzeaTcciPx0/RHpX0xV
Q9eBNDdk7600FxB/MchbXJTthotBJzlKxK4eovQl19zwxsaUHkD638Zr8qnT
XrhhXlfvDCnSL5Pyr234MY2H9Lq7lqNGbFDaO5ZXS/CQuVHW4TSxTbn8zDwp
HszGjbtUiSWfh9dw5vOQ+yz4xmZDNiJ+269vZPBQ4+5yNVqfjYB1I+Z3zHno
/JtyuEKXDdvnl+lJljz4J/1SMyJe6eQ5hdrIw4oMTbcyNhtd/k8r1e14ONN2
1vc6iw2vxIw1mZ48bDq1ZVq8Nhvb2tbg6BEeTlSmxM3QIPl4OMbQ7gEP6mvc
5n5WZsOCv0K/t5KHRXKKCqbEzm7PVkVX8+AgUdWevoyNI8ZzdB408NAYLCrd
vJT0xz+nmSve81CpKvTJV2RDQKXPmzLCA1s1ZLoiub+vel7svcFyh8W91xny
5H5/bGvVvXm1O2oPRIvZzCL5ZNb547uBO4YcVjIjJMh9vlSjY8kadyRKMOu+
zWBjS8vVlhgbd3TbH+XmTiX3v92dWs/d7ljQFz38/i8LGhbVubL57hjb++bQ
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
///Sf+zDkpc=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["t", TraditionalForm], 
    FormBox[
     TemplateBox[{",", "\",\"", 
       SubscriptBox["Topt", "\"i\""]}, "RowWithSeparators"], TraditionalForm]},
  AxesOrigin->{0, 9.5},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[4]=",
 CellID->1955380548,
 $CellContext`ExpressionUUID -> "5e2ff918-27b7-476e-8c5c-3a411c864f86"]
}, Open  ]],

Cell["Smaller trait variance slows evolution:", "ExampleText",
 CellID->949179309,
 $CellContext`ExpressionUUID -> "ca9caa03-ae3e-4927-b7d4-1a4a97b5b515"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"eq", "=", 
   RowBox[{"FindEcoEvoCycle", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["Topt", "1"], "\[Rule]", "16.0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["n", "1"], "\[Rule]", "0.96"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"V", "[", "Topt", "]"}], "\[Rule]", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"PlotDynamics", "[", 
  RowBox[{"eq", ",", "n"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotDynamics", "[", 
  RowBox[{"eq", ",", "Topt", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"10", ",", "20"}], "}"}]}]}], "]"}]}], "Input",
 CellLabel->"In[5]:=",
 CellID->146889039,
 $CellContext`ExpressionUUID -> "67c07302-5b99-42d7-8a97-ddb801d981a7"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.513417, 0.72992, 0.440682], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
aLw35fBC3q5zIY+Z70cjnclVtVu9kFWwsOw6MOePkXTQOYIXuvum1HTvZcAZ
YmnLTmUvpMUe3vR1NwMCT0iL1qt54d3g/8y+72Tu9wLpF1PaXmjgQyLOijLf
BxektxtbeuEAn82ZuC3M97nLB15uDvTCj+dfHhH4OQuGd8vEiqleSPlP1PTq
/CwoNB+gQYgXprXaCooxZmEz44B4UJQXOqeTTVkmZqFRU4b+5rwXEvTIfyz7
ZmH3pIxERokXLmyX2Sr4cBZ4/pWfkCn3wu2Xo9T+Vc/CKp9sR/NdL7yjRMwd
rJyFXjXZkJ81Xnj10vu0kyWzkJgq+8q2xQtNRYsfS2fPwoyi3MltI14YEDcp
S6LOQlX8we58UW98k6v+ynYH077Qe4OzO7yR4XHTQHnbLPgVhz/z3uWN5IqM
Df/xM/152XL/6AFvpKYX3Yhgn4UMzuOZ7SreuPJf5r4LMzNAT050XHLwxrYz
loGmD2age7vc2wFnb9RFdnu+OzMgU/HW6BnJG3OuvPvXdGsGvnaKqyd7e2Nj
v9vIZPYMWG95sEMyjOnP4FzAsbAZIKR9+WqS443PkogT0kozkCaZ4Cyf5408
ZUeFiw/OAOO+TK9woTf2m4t6cu+dgVtvQ1tHi71R48Hig2zBGdgquLk0rNYb
+exYQ/Lnp2EpWyWwqNcbj7m1l5gVTUPt1fTffwV8kLLnh9LOlSlgn7ug1i3s
g00DLOqtjCmw1Uo8dWM7k4efmlmNTsHSeOQGw90+eP5Ch5DYqylQOOTBmy3v
g0cSnmfQ8qagpklp/2FLH+SU1N3Aq8S0Jyjvx2brg0KawRs5DzDtecre/eDg
gyy25oQxMaa9/yQJ0SQfPK7peu3Y+ikg2Pyn2RHkg6EPc/QbX01C9cSQvftF
H9TZPZNr6TgJbCp9V5TSfdBhPmRdrNEkWCf3DP+X7YNasrVOWWqTsHio1e1+
vg96HpF74C4+CUfDK4PWKnyQPWXdQNHnb1DFFZuY+8oHZ9Gy7ZbrN7h/eF9d
J6cvBkykcD/WnwClyc3bXLl9mflQnk9QmIAnhT/D5nh8MULym5TKnglo3/Jc
lV/YFz8MeQxYs07Al1nnp/ZSvrj4vOuX+6Nx4ClNfzGq5Yu3ZjyO8ewfh0DJ
tXe/I3zRJaoiLvHHV5Dh753fw/BFksGzjGHzEUjpHll8MeaHQbxH64yT+qDe
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
o1nxrE9nu6iN/qkgkI7Ozc5mfft/3FVwNw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["t", TraditionalForm], 
    FormBox[
     TemplateBox[{",", "\",\"", 
       SubscriptBox["n", "\"i\""]}, "RowWithSeparators"], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0., 364.9999925510204}, {0, All}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[5]=",
 CellID->2116217648,
 $CellContext`ExpressionUUID -> "c2c8068d-cc58-48f8-8ecc-b38a3eb39c61"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.513417, 0.72992, 0.440682], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwV23c81V8YB3BZbZFEJFIh7qi0EH1s2bPsdd2L7LtKNhkJDSNKqEikoqwk
NDWkSSopldBEKsSv3+mvXu/X937v9zznPOd5ztfrttwn1I4pKCAgIC4kIPDv
30An088mum90XcM9lsT7UOB5ZEPs+zNNW98ER34/TdzRWipYeqZ9a8DwX+MH
xMmd7jeTzvRsfdoanSjHoODdG81V/DNfth5uiqU3E4v3lzmGnJnaOscvS3sp
k4Iag9nNY+z/tvYl3zE3I6bYbsi6ukwA1JP9vbuJH13I/WMwNAPVIiYZz4ll
gp3bbWJEUHpx+8xjLArKBnqDd56Zh/0yLActfwrGcxecPJcxH120h4lhxGbG
6Bpmi2Hpp/nry4h3PbEpurJMHN/eRi1eHECB3NqLM/WHJMAbV3wzQcz4xu22
ipHCu7e2Hi8CKRj1n4zwP7MUozY9P3+FUnCAdn33+ZXysBoX7NEPI+Md27dr
rFgeSZm77A8QM2OX8OLyl2HjGemfq8Mp+GK2dLOFkSKaX4ZOMdkUeHhra/hu
VMKCrOC+cS4FhpkRq7NllHHubLJo6h4KFoa/Vq3froy9A+sy+on77PVUX2Yr
Qy/k6TGDSApilsxWUZRQgUHaIesZURTUl+StrJytiqJ1sjMToylQu1KvcHNy
Nb6Oi/oWxVGwYPCn1FgPFZ1ZTnM1UyjQXaY4Nr6YBn+BlpQi4iAHsyfTNjR4
GdiEiqZScKe1MHPmLRoeqbBiOonj8k1myp2jw+O39KHdaRTsLrWYKm5eg1ML
LdSfZFAwtL3wa1vmOqRrV4o/yqbg3mW9R1L0jTja0XXxxSkKjP3mbTU218Ep
zZUHt92k4O8EK6o3Th+xTRvzYwYpGJZI7zM4oI+g3IemM4ZIvqyuNi4/ro/9
IW1NicQ3nf+Icxv1wbIP+5ryiYK0ywdKZ4/pY6R1j33GFwoWRTR0rPczwNgJ
C/39wyT+8dnL91saYrfh31iLcQqWitOTh10NMWs4te4W8XxVh8+OOw2Ruczu
kO4Eef6OwlrFFEOURauvoU9SUFu/zqyu1RBJYg2Tc6cowC5XTp+GEcq8TeZd
+kvB9l+VtzbJGsNW4v2Mi6JUiE751T9ebQwrazFLlZlU1M1YUR6oaYxJ2jeJ
AmKp+fnpRU7G6NdXEd07i4pnK5LsZx4xhr/TnmTLOVTY27r3dUmaYOu4Avv2
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
s93qmtorjnwsLqZq//u+4Rr1Z007+LglPUE3Jc7EqdGrznxcihB9/G88lHZZ
iRZXPr6twTIr4ns7DtNb3fk46ZArbUfs/3621TVPPn7E/mraTiwaGh903ZuP
e9LmYm7EJZPjaTcYfMiIJs31IdZPDiu/yeTDfSqzxv/f/EgMtt3y4yPkvMPs
sH/rd9zz4+0APloW3J69m3jZ6ufCdwL58LS/XxtH7ILbevdC+TDy2yaeTTx+
X8frfjjJ/725zYXEuTtqY9o55PpNNZkK4qchJVc6dvHJ+8W99uvE7Em5lw8j
+MhQPq/yiFg8OWv8USSf9JNYai+xxfGEDU9j+ZC2KdCcIv6kOmn/LJ6PKNWG
rfNIPqfWhLM7E8l+MA8eXkp8677XhecpfEyd2mILYt1J3dU9B0i+/P02/wBx
T1KdyetDfNy5vJZVQrxHgsbqzeJjZIe1fyNxvar8qbdH+MgXPhswSLxmx5+l
/UV8bBJd5WFB9nPHO7b2xxMkn3zdBP2Ig0I+OQ+c4iN4qsA6gbg86UXuUBkf
6tnXPzQSK9XUi3+7wEfEcO4vDVJfWrfS6d+r+Vih/PuNPbHH/dOWw5fIervv
DucSH3uXkzZaz0eFUUB6PfEiCa7w7xY+umQKCo1IfbtY8Flp/BoftRfP39pJ
bKPK0Ju4wYd8y/usg8TpW+1i/rTxwSk0WNVLrHb/bsHUXTK/+qqDIqS+3tmu
d2X6Ph/G5edtacSsdw0v/ntA1vdIrfcOYpGQNeN/H5L4Hi2W+ff/Hf4Hwxdu
ow==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["t", TraditionalForm], 
    FormBox[
     TemplateBox[{",", "\",\"", 
       SubscriptBox["Topt", "\"i\""]}, "RowWithSeparators"], TraditionalForm]},
  AxesOrigin->{0, 10.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0., 364.9999925510204}, {10, 20}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[5]=",
 CellID->645848322,
 $CellContext`ExpressionUUID -> "c2c8068d-cc58-48f8-8ecc-b38a3eb39c61"]
}, Open  ]],

Cell["\<\
Find a two-species eco-evolutionary cycle (with V[Topt]=0.1):\
\>", "ExampleText",
 CellID->350297532,
 $CellContext`ExpressionUUID -> "e9d9f1ab-05a6-40a7-b374-52245a303987"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ics", "=", 
   RowBox[{"FinalSlice", "[", 
    RowBox[{"FindEcoCycle", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["Topt", "1"], "\[Rule]", "12"}], ",", 
        RowBox[{
         SubscriptBox["Topt", "2"], "\[Rule]", "18"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["n", "1"], "\[Rule]", "0.1"}], ",", 
        RowBox[{
         SubscriptBox["n", "2"], "\[Rule]", "0.1"}]}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"eq", "=", 
   RowBox[{"FindEcoEvoCycle", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Topt", "1"], "\[Rule]", "12"}], ",", 
       RowBox[{
        SubscriptBox["Topt", "2"], "\[Rule]", "18"}]}], "}"}], ",", "ics", 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"V", "[", "Topt", "]"}], "\[Rule]", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlotDynamics", "[", 
  RowBox[{"eq", ",", "n"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotDynamics", "[", 
  RowBox[{"eq", ",", "Topt"}], "]"}]}], "Input",
 CellLabel->"In[6]:=",
 CellID->1687679795,
 $CellContext`ExpressionUUID -> "e062e48c-e4d3-4f81-a65f-2948f1a40ef1"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], ":", 
  " ", "\<\"The line search decreased the step size to within tolerance \
specified by AccuracyGoal and PrecisionGoal but was unable to find a \
sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellLabel->"During evaluation of In[6]:=",
 CellID->931860943,
 $CellContext`ExpressionUUID -> "cc0b69f8-f708-4616-9c9e-c1698c2566f8"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.324106, 0.6089696666666666, 0.7083413333333334], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.764712, 0.7283023333333333, 0.27360833333333334`], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
MIdrPPG9naJaRAD8+1/p/6lonnM=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["t", TraditionalForm], 
    FormBox[
     TemplateBox[{",", "\",\"", 
       SubscriptBox["n", "\"i\""]}, "RowWithSeparators"], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0., 364.9999925510204}, {0, All}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[6]=",
 CellID->188631430,
 $CellContext`ExpressionUUID -> "fb58ae9e-835c-4143-b67d-7491f3120b1b"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.324106, 0.6089696666666666, 0.7083413333333334], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
DHeDogvkaFS3AxHVb90nPjXWLsC080O01QkP1yNORqnauwBfgO9uHme0/1UJ
ad2O6Pf7NpWCkO243F/Pk11gZHGI8wwJD8HLfEdP/ucCK+fD1h64oP3gu4V7
fNkFfOadO/e44mHfxX9yMuEuYJxvq+6KnPxq2NkkGj3fSy8OcTdU/5KSa2KS
XcBp9xLDFzIefr6jaWNJcwEWiY9u+u6oP2/5fnmQ4QKHNooSXiG3EfUONOS6
wMIPfeNCD9RfxfZZrVa4AMGzLyjBC52PvqBtiw4XyOX1mH/uh/rVwdkjs93o
869jO1r+aP0KpgIBn1zg9sq05hCydIGoQcKwCzypqL29h4IH06C5nNdzLqBk
YNLlF4jeD09Yq53Z5woNMpF73l7GQ49ei8Wzg67AmW2V918Ien+/KuWldtgV
LomHzomG4qFg/miqHYsrtK+VhzwKQ/NEffvX23yugOs7FFt/Bb1/2yre+KPo
CpOmb0+QY1H9PPzxTZ+KKzAnvbprfx3t5wvS73INV/i4+qrcMg7Nu5wJZGd9
V2gR+9FqEY/mmeFhzQ5bV6hv+HQpMgnVO8tg2uwQV1Tvm1OS0tF8ePCwfHCE
K9gHq069vYfyqzYnwCTKFUQvawv/ycCD7PHmyf3xrnC0Y76JmoUHls/HXvtm
uIJNpsN/GQ9R/TWtClWpc4XxGjO14jI8hNFqVXO+dIUspje+3BVoXqwaXtx8
7Qrn/uMvSX2C+t3RPTYlLa5gaGyjfKcK5fdHI1mWQVe4kmbr0FCH8t9wZXPm
pytUCvrdaG5C/UfnjO91STeQizVrC5hG851D8XteGTfQ32tBOj+LBx/qGY46
eTfoYCvf8+crqsfZZz7Mq7oBc8vdpesL6P187QynrrEbhIhuf65fw4PtPcFm
Bh83oDqy21nuJsDpOSGe5CI3SK69zZ/HTUB5/Zgq9NgNZEgPf/vwEGCbWbjt
XbkbFIdaz8rwEaBfXjhwo8YNTKgNpCZ+AsQmCbebv3eDG0kLDe+ECLAoJfLf
iUk34HLLOSMgS4AB3bKOJzNuwEab+6NRjgDviSKntOfcwGBZxPqiAgGyboh0
Xlp1AxxFmhwIBDD8InJ6ZMcNrDdOKgdrEOBp9NnuLA4yJPUdz/c1Qs/H1qcV
dZIMfK/K8J3GBPAsvPSafIoMXLktr0+ZovU0v6+UECQD0dkoosacABEWHoLs
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
HvMYea+36K9/XehzZ70C7P+X/A+PaSX7
     "]]}, 
   {RGBColor[0.764712, 0.7283023333333333, 0.27360833333333334`], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwd23c4lu8XAHChpK9slRSi7NFrrzhGyIgkoazXfG3vkqQklaSkbBkZ0TCK
kKKEFJKskBGFECGEyO++f3+5PpfX89znPPd9znlc7CMGWLkzMjAwsDIxMOCv
PrbGU0baQ9qff3zh/f6WAE5Jyhe+FbzUee4ww5GG3Po6jzGvoEVnTxBt0hL5
SpdD/eWCfh2JzCvSzxsIMDKkfoBe8FPHVmokJLSeAJyj+Sf8C9Z0wvvlROpr
CVCmz1qzQP6nI082tfJEljmmfKdakAGWd4mIsyK3FSf+1Z/YBJTwnBLj1wTY
5WfXYnl+M1Qraw6V1xAgf3zQz7uADa7fXXlo9oIAy4kc2YU3toP/2T+Xe6oI
YGII3bNkdrjpavmRiBzcbpn5QpATbr7mziY/J4AA4SmL3gQXvFfWWDxfQQDX
GWrP0fN8wGg/v9m4lABshjfIs7N8oLZlPvL5U7Te9Dy226474C/rQVNJ5C3m
3dBlvBO8fvfmMT0hwMNHqg9O8fBDWdw/n5wiAsx7rYZ4FewBWmTOjZsPCBAr
9+ZM0f69ILzJJbGrAMW7cC14IWsvqItm39yN7H6BnxaeIggTa9xWGfcJ8NNk
j5rZYWGoa7528kYOARxdNBXdVETANL2ChS2dAAY3QyTjd4lB498pYtlNAnAH
DUhU2IiB4LVI1Tc3CDB8XFeiL14MsvvzP7XGEOA8P6u4MJc4fGP1uPU9mgAV
ucn7H7NKwLc+ux6mqwSQelEhVL8qCRYysTVCFwjA8WORb6FfFiauMF+2DiCA
tqDwwvIOORgwEOPw9yeAr7VJ+7qlHPQWniuO8iPAu9cZN1ka5KBwPT2i1ocA
4SlGLAKF8uD+jP+BvhcBzuSZrWXVHIRPKcffpbmgfLx28cn5chAWxieU2pwJ
cP8LvS9v+SBE5YmvbUHu5LpX+VCBALSXoZOhjgQ4eH6RWobyokHKD7h8igAT
NhnTjTcV4La0+rK4DQEYyKWnmx4pQJH9oNT1E2i/3HjX3PJOAR5Vik7MWRPA
sG7+wSdGRSDpVVk2HSeAwyALf6eQIiwc3SqohUxd2RPVraUIHivrNU+sCJAt
b+Txha4ILePs9QXHCPDc5HTXwB1FaM8NNZNCbnMPMvhaogjFZ43mii0J8C8t
TWR0UhEuXQnpa7QgAF9FSdw4ixIkN1ca2CPLtDcwTO5XgrJx3p1zRwlgv3V2
cMZRCZ7oNuvJIAeJbj46F6oEW/UZ6tvMCRClvbv6d7IS8A51roUgZ9rJyyw9
U4LJTulNEsjlVIO05XYlEJMJ+N5nRoAPsXbb/v5SAg7l/c9vI39/6B+yzqYM
H/mtblkg/2249GNDUhm8vr86w4XMPZx8ktFIGdQG1sJ6TAkguVb4ltlNGaKv
iOfnIsPOOmWWi8qgy3F5kYZ8UqEnlzVDGQ4dmCWaIfubT/OwvVCG20p7v4oj
X/ZivMTeowxDpnNWW5HvXto5z7moDC/2sidMmxCgNEPGhYdbBdTnX5M/Izc9
123jk1cBoeuVDxuQw7+vxV0xVQHD0c1SlcgqHJXH/3iqQO0tTrUi5J/qFD6v
SBVIv5AcnI+c7Sb3uSdLBYaVf1/OQbaNnUg+Uq0CDO2J/+4hs1fl2lf1qoDg
Uu35bOT67057pJdU4M/LgYJc5LMcAoNp3KrQ9ttIvAD5oEZ3Jpu8KsTWHC96
jDzmFucSZqoK24iX1p8g3401E53xVIWor2lDFchWVSyjjpGq0JAcJFWDvHX0
zf2PWargJ91XXY9cw3HeC6pVoeI3JaIZWdJ9YWrfkirs+2ji3os8GFtceJtb
DSr2HaF+RY6v8g5gkleDJddzd8aRGTiH5797qoG//jWWJeSeqg8r+b1qMNHW
Ic2L8ntzNOrFriU10DO+wbkH2YDTIOwatzooC4eK7Ecuca9i8DFVhwJj334l
5CjOfBa5anVYvnb1jy2ytibxfUavOuj8/pxERF5w33udY0kdSkeIZ3yRnV/c
YZ+T0wAuw6L1cGQ1j3C+siwN6PzEJF6IPHNL8/P+ag1o1FzqqUTOfbGUnNCr
ASk/Zj/UI3Ny+e0J5tYE3u9O4QPI4y/sRDUiNUHP6ggDN9p/d8d4Rx9maUKf
pmC9ELIVV9t9gWpNWITWd7LINR6GUuuLmjDwwOyOCXIilyLhtacWxIdTRa4i
G3qy6RiaHgKZF9k9/6HzEOL3m1/Y+xB8EMtiEEJ+TOlbWIk6BOx5lv4KyNzh
BQ8L3x4CbikNfnvkgWSDHXx62nCmszz7MTK16dz0NzUdqPzvlYojOo/5ba7v
qk/qwIfFnbE05L5uk5wkug6UUmvEbyDDt112pmU6cG25fVc18pbz9sTenQCN
5NB5IXTePyUufYA7ALFPUk3mkCf5vV8UZgO8uOcexYbqBXP6QMHupwATEhcY
JZBVcuovLbQBhOS/euiEfLf4tnoBuy7IEW83fEL2eieXxxGtCx4SuX9eo/qz
seJxbjBcD1Rldm/G9WyWK2ZYP1YPhA+MCU0ij0g+MXyQrgfni2S9t6H6V2/3
l5NapQcer4tjTJGjn8fmsS7ogUIW15Y2ZN6QylYlT32oa5AsHkb1U2qZdd91
cwNIOWC2TdyWADZLjxtUdxvC0aDep4oOKN41z4pPkobgMviLSEQu3yT6wEfd
EHINffTikPm2p8Rk2hpCzSmW2F/InaKXj7MkGYI2H++pIlTPjx9zGO7mMQID
gQtZSqjeWz7evk7bbgxDzNqzRFcCmBL9lcoYTEC5SZ9fx5sAe9/M/VntNIeT
HWP6viEEWJSe7igutYRPRaJpetdQ/5XLrKHkWMHBazys/WmovrdcyjQkWwNP
LhtJD/Xjf67vH/5TtYE4nW2/V9E84V/aYmy83xZ23zXMiO0iQH8640DWLzug
R93dYfKDAPywxHR9+BQwt7gU8P9F+bqtqSs3cQqyPW8pOSGvfg8//2n2FIyp
sKblIvdf+29lJ8Np+HJIYUlujQAZHcIzuYKnYWg96avuOgH2e5r21Jw6DVun
Jp2dNwggdzPr8XzXaXjifefPeSYFMOg3OWHf5ACuG+LXNP5TAOEVr9aQTw7g
5RkQEYS8znfVKKXHAa7qCxwvQC63qFPvGXMAoQyds3xsCiBZpylow+QIqXai
A9PI7A9lxo9pOUJE3OzXRHYF6AlmDzlS5AhMU3K677kUoCxeZt7rmSMkP6Wt
riLHPTHxiXrpCHKMBlEy3ApgMnXFobHJEZ5peO+LRa523NA9PO4IaRGcRlY8
CpB9eHabrrATDJiwHm3jVQA/nva7aredQFK+q/rhTgWQENc8PZ/iBPolJ+/2
IX/XyBV4fM8JMu90GmzbpQCnifRUoSdOcIj/6G8vZLMnu5O3tDnB6V9v60T5
FSAh/8mRyS3OcH3yzd7Y3QpAPbxqUGngDN1f5zi19iqA1cei/QnGzmBKvsrg
jnzQzpWZbOYMLKPyFTeQf/q21ElbOwPht0bIILJbfIZepqszcJn/Ng8TVIDj
3/TgSoQzZFZeESsRUgCFi9c1rV87w7rj59WJfQpgGCij/qvOGYIkVt1YRRTA
3umDSnSjMxzeLJQmgRxxiEPhdaszrKrJ+3ggt6/clpAZcAa9rEvJQ8hB5FQ+
5lVnSBqS5X8nqgCRLpo8mevOMDISo/kdOdmyn1Njkws8WPgqwbBfAV7LCbIF
bnWBpDgJN1Vkzql7jP07XED0rOepHOQS1we/ShVdoLLRSTvogALUW5lMH1V1
gYJrflujkXt0pyYnNNDnYwPvZiMzCMuOCem5wJaNrSIdyBb9Jf3XLV1g6Gf3
PYKYAsxYV7539XMB5WV5j+/IjAZ2jf8CXcB7eK1xBXmH4mp9CtUFPCfq59nF
FUCbS+v1x1AXkNJZz1ZDvvnhVblmtAtkvCP7XkOWNWzM4cl3AfKSRaKwBFpv
yY36vw9dYMrMcl0RWUnAevRbkQtw990VMULWmv0qVlbuAgw6dfm+yCapqw+s
37rAS1PL1DLkVubaJq0mF3ivkDzXgHws4OrU/lYXaKm7s+Uzsq0Br+xilws8
2+ZNWkb2mJEtSRh1Ad9faGCQVIBJ24W2sAkXGN2ceNwI2a+uas592gVsCxqO
2yBTk40UVRZdQJ7L5joFOULPpbybmQj+085dD5G3FIp/rtmKfK9howL52s6Z
P/fZiKBj936sHvnWz7PqwbxE2MbmNTmAnJEY/3LnfiIsNhDeskkpgMimUwMb
4kSISK3o2Imc57Pv37g0EcIKrdNFkB9DkU6lIhHG4tLdVJEPPqI6Z6kSwUZM
nKiLXMqneTFKkwjM4dECpshVk41vbPWJsFMttdYBWfvEzW9gRIRf7WJFHsi1
r6yZJU2J4HDyqE0A8rv44cMrVkQ4YCvZewH5s/bfdylEIviEueenI9s/qJ24
6EGE+Yn/AnKRB3mitnl7E6FXvmXuIfLYD14zDTIRVhuDJCqQvY9/8RWhE8Ek
WK3/JfJ09b0b284SoX3rkMkb5IXbch/7LhKh+EqmbQvymfWFX28uE8G2LO1P
G/Jfzxecj64R4VWDzrEu5PPtFwl3bqB8mYW79yIzHjK2Co0jwi12U6UB5Cv5
7BTXBCJo1SdWf0Vm5e66Y5pChMYdxzZ9R445l1ammE4EN7WAjTFkznGXLoF7
RKjsHK6YQI7iCXs9l0uEN3VtQj+RN3SSHzUWEIHd84LBDDLdtzQx/TERRK4N
HJhFnkluvUgpIUJK23DdHLJ7w4TvkTIiPJMJE/yN3D/HbCtUSYT3j3OUF5Ct
BYX1F18QYRO/CesicrOJplzzKyLM+rmkYOsF2/DfqyPCRObXUeyqnCDm4EYi
0MYqZ7AJbTG/zJqJcN9wqBS7YC2/T+QjEdiCjJWxhSXrGpbbibBdZYyM75d0
YrCktZsIFl3Fvng97BErabl9RIjmSBKZx/kq4r16dpAIOWfi4nE8//rkyZYj
RCjgi3+D46WxmDqIjaHnbR/3GOfjp6KH8doEeh7D4VaTyG7OFxXbp4kwxXKi
bBzHG3NXsGCOCOZtTO0438efV7CeX0T7rTri0TCOj3tmSHKdCCz738T14fi0
WZs3GFyBP9UvoxvH57O/vIvZFciF1R7tOJ56+5iLbK7wibJP6j2OZ5YWfJLT
FSpk9x2ox/HsjSPK8rpCgE7alxrkdVqjWq+AK6i/6D1bikzNHhEtFnKFqLUo
10K8/tZ19suirjAheYMlH7lPXGn0oLQrWGR5XUxBtrK2aNsi7wqP/ORO3kZ+
H+79ol/BFTxmhX9EI1f2ZsVFabhCeq2vZig+f1tennPUdgWabOk6GTlf4bOn
kp4rvN3CHOqNnHh9u/bXI67wn3zWfVu8nkNnJ1XtXOF4fN9rAl4PKaFru4Mr
uJMv24sjuyaWvP7m7AqLNn+K9uD1/BpLjPVyhYZtO6K2IMvfO64/HuwKfV9I
q92oftz/4C9XHeoKGnWRpCZkwdVr/HcuoM8Pyd6pRmY7/vqX9lVXGOzj3JGD
6xuz7N3ERFeIPkfq9UZOTlTKk0p1he/86QIOyIcltIpq0tH6f6nss0DOMjV9
PZbrCg9kr9EVkE/cJn1XKXWFkSGlI0uofr4Wui/z+aMrKJ53vk5G9n9SqOzT
4QphMfyMLsgC+s+0N7pR/KP/NC2Q6R71luKDrrAn+vCKFLJ04Qg1+KcrHDW4
lDKE+kGihlD1TlY3YLGFgEPIBi1ibx+xuUHG4uBOCeQ5B7mPOpxucJPz9iVu
ZLOLh4Y9d7qBhYhy7hjqP5vendpcecAN/vgGbotB9j2RbG6r5wbMryx8mlE/
0w/kGkwOdQO1KK2YPag/Oodpbzt7wQ3G7S3E11F/DYv2UTl1yQ1iM4RCB5Ar
chtu7r3uBvcGOMzTkaV7Q3SyU93giB1bGj8yj95I1qPnbrCvQ3GcGfXvbzyl
rjV/3EBOnPPWfTQfMOz7Gpv51w1exkTbnEfeK7f9ZfiGG2yA4ecTyCeNPXn1
WdzBImGEhRm5+ZxAQ+MOdzDJeCDugOaN0tFLYp+U3eGJATOVEc0jlyqsJ75R
3GHTX985fjTfdEv6K14KdoedGTa+P9H8I3H3aphIqDsUzdsX1iC3hldxuUS4
Q/Ne2Qgi8m4TYY3BW+7Qu3r8bD6an572T0X3FLqDaMi5WjE0b41suiTzYdwd
ckXVnvxF85qe2ZOA8lMesFX9biLrdtTPwoUi9Z08QBUEudvQvNhWdiO5jegB
9msniInIjnu9aydJHrDEyh8hghwyI8IjdMYDCC9TG9XQ/FlyK778arwHqBi5
PnVgRfnoCl63/eABLN/4L13frADLDtrX/2p7wo7OBeFYNP8mmkoFXlP2gnKj
8JmpKQJEOD9s2KfuBSLZZUOPkQNoUgJVWl7Ql8mw6odsnCn1dlLfC4YP+xfO
TqJ5e15qj5mVF2RHXJVYnkDzfar0O/YAL1j0f6/Eieb1/RMywvEF6JVbviDO
+zt6//z3mCbz2Asi13wtFJDXuWWb64u9IDOjyXL1GwG6tWTpi+Ve0Cotse86
ctQt2RabBi/QTtrMVjJCgJ+qcmf4R9B62CozWIYJUHpFvi1DgAQJdRnLcwPo
+ju7jCOFSKB0gBr5Ctk3/2wtSZQEj8Vagm8g73/X8FRJmgR/R56nSCHHs55O
aNIgAUfx5gVSP3pfS9nEXqJNAr4koVENZDOp/CsJeiSQ1TQ3Y0NmNp0PdjYh
wbHLcdElX9D7aUyU/ZIdut+pcbONPgK07ZHr+OJAghnmeXInskxhh2mtCwn6
WGvgIfL3D4KHYkgk6M//vNkWGRzrnwX5kSCjKU7gIPLdGZLcySASPL91agcr
sjXHMyGREBL8+1TJU9NLgJJM+2SWMBJcFT9xJBWZ7SAD13Q4CWLdSt8HI9db
mjJWRpEg5E+MuCqy8PDs2fQYEuTupRrwI58LSvwdcYsE90l7JNZ7CKB8e/i7
eTIJRCtXcpuQb4tcdVC8S4LmrATHMuSZpzLdu7JIkLURsicL2US//ei/HBJ8
W1btuYF8vyO48Vs+Cbii0y6GITO67YX3j0jA/ufKhj+y48KbyqJiEkgNxRCI
yFWRXoT4UhIUdCzN2SDv4GN/GFJBgrgGll3myOS8UhGnFyQYe7b7rAFyq7Jd
msErEtT7nPmlhSz19h+PVB0JEj2fH1NBvmKTG8PRSAL9pOdhB5FHxo5sXmwi
wSf/vdbSyNrBv8L6WklgnRjyXAw5lSVh6VU7+vlKzUQR5KUkjYC8bhKQO4O6
BZGtJL6OR/eR4MyyB0kAuajysnPgIAmmqnR1dyF79LYd0xwjQdL1g/HcyG9I
9CbhSZSvVed/HMiCqwL6W2ZIIHN8+/XtyN27PZU+LaL9YD63vBVZ4RFbYfkK
CUrJP9u3IN/UfHrg7joJmBpjXjMjG55e3+G52RtennzayoBckX5nZY3XG5J+
Cd9a+Yze72dvaLXt8gZmjsOjf5Bt9KIu5Ozxhux/VgZLyEtj5zab7PeGeVGi
4G9klYMeXEmK3lD846raNDJ6t7L2VvWGD5eK2qeQuzvtkw5pesNAqDJ1Epke
YrH3u543TMXFt4wjl79RkyRYeUPglYgPI/j+fIq+zDbeEKt3Ln0Y399Ttviz
nTfUX6BSvuL7/yeifN7FG6iybQcHkZVP/KfbHOgN5xMjpnuRy8YHbN1jvcGq
0MG6HZlZoydN7Y43rBSSaJ+QrWPaB/9L8gbPt5mpbcgLBxvdnmZ4Q7K1/Fwr
stLZksCNQm/YlBba0owc2fKwtP2JN9ifpLFhdwrmLeU98wal+FmLJmRqXco5
s2pviHMWGX6HXMp2KSqlxRvk91+UeovM6BTW7NvmDfHT8ZENyFZPgtmh0xsI
xVnD9cjzJ3zjx754g6k0MbcOWSHzRJbilDf0Ov82qUV+SpCo/MDqA1n3ozmr
kdUm2PmdtvuAZtZM2kvkmqzFkFlOH+C5oyCJ3cRRp8mzywe+MqkdeYE8PO3w
ylbMB5rHLDKeI3vkGQhPSvqAi22TKvbP09IXQ2V9wI7wvb0Sebl5WS9DyQcY
+z9vx+Z8eOftNz0fqLZbTShHTnQ5K04z9IEtNgWa2Hv4XaK2mPjAdduakWfI
ElFyJpLHfGCefZsyNni8/+Dv5AMTImcmSpEDRDY6V0J9wHKyMeYJzn/vqPL1
Cz7gfN7IEPtsXEvinks+kMPWw4B9hSHVVifaB14M84eUIGcMKvVHJvsA2/Nc
WjFya6r3N45nPtAuo5VWiJ+v1TGDe5U+cNq+zRW7j1UtT+GlDwQrK8tij53Z
7HmiDq0vzPXNY+R1m6zJ1E8+0PBwcfERsgxP99yBGR+oste78BBZxHCExjzv
AwdEXlhg7wyZWRlZ9IFHpbPC2IxDWxiz1n3A/m9kwwPknoeq3Lu3+8IRnrUd
2K0D+onLnL7AwsU0XYBcx2m5+zOvL5x1LKrDLqJ7icTv8QUdhnEydqReigK7
jC8IOsX35ON80PLKf8r7QoIHuRQ7oOCJRrOiL6S0Dt3Etmdv0ovS9AX1bU5G
2Af7Vq0YTX3hfmhhzX3kgaDTlCWSLzzcVFCfh9ye6/Wn088XHIsD87HffaaG
lgb5guzn+9HYZYduXAoM8YVvedZW2NGsNXcmo3zh2ujlsVx83u8JlQ3m+4JL
dIcwtkyntFr1I19Ibi9kxd7HovYyrdgXGjz753OQ2fws620rfKHp18G32CNq
Fzvb3/rCuPKdQOybbSMLb0d9IVpSpiMbucrrS6LrhC/kGU3XYo8ydKoxTKP4
DcdLsLUIDefUF3xhNDsiFnsyLp/5MaMfTKmABbbhcV/eOCE/0H8p03MPmTzl
Vi4r6gdv/wk2YadfcrBtEvODR3raL7EXSo/eZZJDP79/0z3sbF7CfrqWH7zT
vuqL/a9rUfGUnR8Y+nH+hy3lP9P15zS6fmj0RhbyiS3jwfHOfsB8QmIB+7FK
z4sPnn5w3erDALZ9UpU+0P3g01jRU+xy2wvHD9zxg4TbJCL2yGzwYm2iH1zO
G7fF3n4tMMkx1Q+6jkRYYLs9d/mSdM8PmnL+O4TNvdvAdVsJuj6PGz92wJet
lF8tfmB16kt3Js6nss1QSJsfFNXt/YhdFJtjytyJPi9Pb8T+qa+9n/+LHzRP
eVZiez+mdOlN+IHyqmEatnvYoGriZn/QOVzhhh35WTpXmNUf4D91R+xcQgjn
IzZ/WE5vOYk9Msoz8YrHH4xBwhTb+eiR1Il9/pAv8UgB+5RQ2ZqWtj9YZhUz
Y58N2URq1PWHb/xKGxnIqR1Hu44d9ofErY0r2D1XJwo9zPyh7OLOX9g2s4JO
t+z9waLPoQ/7WO212m90fxBbsyvFNnJ1uhJd7A8XJNf8sLvV2vmIpf5oHisg
YbuxH85Tr/CHWZqTO3bEc6n6HzX+EO/+6zR2DcfSJqNWf8jIuGWGrfIyJoxp
2h9amZ/LYjfEbbB9mfWHUVZWKWxrT/Ldpwto/YpEMWwyt+0LlzV/6DsjL4Rd
5CW68uq/ADB2VuDCFuOrop6TCoDdzLVL6cjPJmWYreUCYDAr4Te2wevMO9IK
AfDyXtAsNtHn8tM+9QDg8taZxM6otZxVOxIAWzPkB7F3+I/7LHoGwL64o43Y
Wxp5Xf3zAsDG8k86dvMmKifzgwAgz1akYd/S6qhOeRwAkx3nUrB3P43b1VAa
AIzyPAnYcunsrQJvAsDqfWAM9gnKVvX3gwHQqTYait3OcZ6Fmy0QJFbdHbCV
CmUH+7cHwoGc5FPYSSYDZfkcgVCh3GqHffqyFvEQTyAIzuvaYI+trr702h0I
pztNLLBXR4PJryQCgeXQF11skZdBA76HA6EtqlYCW2tn2WFHo0DYP7VPHNuG
vFRocSQQyFmRB7CvS4SeVzAPhLNjliLYC/GRQsvWgZDPxbwHu9EvyeWSWyCY
BrZyYPsKVY+mXAqEnC31y3dx/iO2zrytDYSJN9Ot2N6cuu5JdYEguu3tB2zh
jJB+z4ZAYOTPbMGOfj7ZtPV9IGiGH2/Cdp5tyTdpC4SoHQ0N2Nsc41xaBwPR
3PPuJbaj+u6urr+BoB6m8QibZVb65XflIDiwR/IadlfaeOeL/CCg/v15GFvL
eODNgwdBEFz60gA7d6G9JOlRELyuuq6PTTaviaEUB4FtgbguNvtGvIF0RRAw
JdhoYRsS9cpS3wYBt/UNBexyifQ7IaNBEFGkK4i9t+v2Rc/xIOiL+b0HO/Ji
VMCJiSA4rJQrgG3VRzElTAdBdNMmfuyZ6yZMEwtBYBRdyIMt9usP2ZaZDL+7
3mzFTnpmZaUqSoY3idVzafj8xmtbMB8gQ239yVnsuxQps09iZDhuMDuDnUVg
NPSRIsOCyJ6f2AWFT9QzCWQwqXIcw67M49zHAmRo4o7uw+5JaP3VfZoMr/NM
a7H7qFU/cxzJ8KIr5xV2//H7E4HOZOi6sFKN/ZXr/LdtbmRYE0mvwv5xQ/az
tg8ZuJ7Wl2IvX46puR9ChjaDG3nYu+gmN+iJZHDe+foKdjv3ewHvZDLsvX0t
Ejum2OihQyoZNlKPRmBv/DBoNMggQx1/cxj22CmdTTz3yWDMEEPFfqarRCt+
Roa8Y4Iu2P6DT5lyKsjgV5fsiC0RSrid+JwMpg+2n/5/fsrkisOqyRAaNmaD
HSkuOWHaQIaczVZm2FbbBR1+dJIhwmpdGZvt4d2pL91k6OzjVcR+ayhw9mMP
GS77HTiIrRG+K6m8nwyipgQp7H2/uT9FfieDxMrsXuzZHpbD+xbIcEP0DxP2
jdw5GXseCnQ1ab1PRYbs1CwDPgroZZo3YC9k6vPK76SgvnO8Fvt0WsJfJgEK
UGV0nmNL31ZvKhShwInpGwXY7y9c9NykQAGh7aOR2OfCpL5MKVLAvVE5HPtg
aMfRbmUKiDecCcVOph9QeaROgYSTXUHYnn7vmU/oUuDpm2EH7M2nuLILLClw
7AyfInalbRXfHSsKvE0LksX2tXG9FmZNgfSgl+LYnceeBVrZUuDq7z17sHOM
7XTWnCjQ67mJGVtX5V6/RQAFuuN521JwfIomlhpBFLjWovoeu4Dwu24/hQLG
UQZvsDllDz9aoVNgapi/DHtIdCIk5zwF2qMLErHDuAg7/9xA159Zt8Fu0W1L
eR1LgR/JQhbYu8kBe6LjKFDLJ2GEXdleuG9vAgU4on6qYP++IyWjf5cC5vKq
fNikHft1Yx9SYNM2Wksy/rxhXZ3tYwoUP+t4g70lmGgoUkQBuiP3c+zcz1mm
z55QoDlJNg97KHmvzZdKCqjs+hCKfUJgp494IwXkJBRF/v950/Lp2XcUsJOw
3IE9H3oisKqJAtOj+tuwb/XfoZm3UoDRsnAuCfePdM5wShcFBgypNdi6wtsS
Xn2jgNUPeQvsW5YPdl4bpUCrvxtgD4Ybp1qNUyBlyJWAfW74SuboJAWWM15x
Y1dkMz38b54CLJWf2hORZQ+s15xkoMKDi1FG2Eo88h1GjFSYiHZXxNbY5DKu
ykyFhPlZQWzjgXqOXVupUGTOvpiA+2NCjHMPBxX4GFXTsb0u1VDfcVHh7bzj
FeyAoNmoSh4q9DdIBGCfM7d+krwTfV/zrg524uY9jHZCVKgI/PglHp/H3+Y7
juyjQm1Idy12zvAFKXVRKpRrB+Vjl1R/s+IXp0Lgmm0QdhPtUU6vHBVOlFds
3MH1YVTjsL02FVZVXzBjb+n0tTMBKsid/j1yG5/fNxl+GnpUeOSS8hp7dwZj
4m5DtD5BsbPYSjZNY33mVJjSmh2Nw/EbrK02WVAhTt/0FbaughzHi2NU2N6w
noR9lP22atoJKsQS7I2wvd7aRZ1yoILG5YT0W7j+lF2/a+pEhcMppkHYtOzq
Ek0XKjhmaBlgR5zf1yvgToXupTfjsTh+lQnJfl8q2O+a3Y/96f6Z5tPnqOCl
spt6A/efxqwZ6fNUyNG7fAib98c7rr8XqODMvnULtq0kv23KJSp4fj0cH4P3
w6Pn37uiqVBNFMu7jhzeMsySF0OFg1d7PLD3TbNKU29SgXd7uDi2m5x9EPdt
/PyS8qKRJ0tW14+moHgfO8Vfw/X4k8g+wTQqyF8QN8eWnTcxmL5LBb3sKmbs
QMW06OtZVKi5LRUYhbz0THPnu3wq8Oy4rnoVmfHFuYO65Sg/3B0Rkfg8fMk9
zllJBXE99wPYh9da6EPPqcCpYP/2EnLUob3VYdVU2JVtxoTN/rr6SFU9FXoV
aF4X8X74Oup77S0V0FS7Ho58bBP7Ldt3VPh8TuwWdryeY/dSMxXau9VKLiAL
NPwjKnZQoZTbvicM+eWo2BXGLipMDko6YDtusXjwqZsKkd6tQ+eQs40yfwX0
UeEsk/9gKO4fTTrnHg9TUT/sfhWC98vH8IQDs1RgBFlWGnKbZUf61BzKR6Q2
iYrs037g/pPfVHjKeektBV+vq6n80B8q2FgEniHj+tbP23PiHxWENU9VBiA/
dvD8KsBAA4uEywzYRkPPfwxvokF+LuWwP/L5EccVv800NJ/aNvgi//xRsPsK
Gw1++8SkkXC+vP+KmLHT4Jkp5zsvZNGf5tLcnDRwNvo064ls/2teM4OHBi3q
rSoeyO8WtRzKd9Ng+cy920T8PBg/ZY5J0OBJqdEZe9yPIkULHkvRoFu/yMkO
+ctmeglZhgaMw9v0bJG5WQVq/8nT4OnWo39O4P3F4T6yQ5UGdn809h1D3hNX
MdmvRgNJ6uMBC1x/uLf9ztaggcNHg/ijyDN8xUzy2uh6n27+MsX9bc/KfqPD
NGhQNDlliLycbiq73YgG/A9mRw2Q7whlKHcY0yBsvoekj8+/iL6hkxkNPoeO
nAZkNckbnsHHaVCTqP5THZlHZd/DfBcanDsffUsa2YO2xSDelQapMfMUSeSq
sqmBcHcalB0pNRNHdlYs57In0SC7UX1ABLnooGkIWxCK55c8lR95U+BBnhUy
DfYnfvy7A9m6mK9wlEqDj8O9dF7kv7Jfv9acocH3bCtDDlwvpWnGQeE0iNhm
rM+MnOZtP+IQQYPY/xScNuH4H+icM4mkwa5BG99/3QRIkNhWIhpFg3E4ZbeM
PHIgc2d3LA1mejxoU8jnhN+PaWTSQIz1s3cr8kenonDxezSAYgtqE7JI5p3d
vDk0+PYnjPQW+f1ex6PT92nAIJjOV4O8Q+D3s8widP2yL16PkUn2PRYxJTQ4
1tJcn4/8MqV64sxTGnQpj23NQXbdFbXXqpwG754cMU5BLuHbe5m5hgbz9zwS
IpGZTjAKzb2igVze6oELyDbx45UDtTSY4x5JDenGv+9/+rO8AeWPTU3eH9mE
08ia9IEGubsOzJ9AHt0WJNraTwMPn2c2Qsid58xaUgZpQIjjdtuF/GZGnOb+
lQaLvCaWXMgZ7YNv177R4NRoch0jsm2qmbf0FA10/E8xfe9C8zebBM+fnzS4
NG385wuy0nmml29maMBxK7KhA5mLWLXdfh7t/9Ej02+QmyQlnkSt0OCmS8nx
TOTKNCZ767/oeTgrMCUi398+xCi8TgOvzpdXYpAvzSVYVzDQQbHx6ZYQZK3n
TMujLHSwqzrQYYFcZDykrb+DDueKqnt/d6J6XlU1zr6LDrO3c4njyNEyibf6
+Omw9k/6SR+yJ6f5SNBeOhyfm059jSzcU3U5az8ddDYbXLqGzG6SKOcrhu43
oC0Qirz2IuizqgQdBG/yBPoi92ZKSH6UpsNerQLTo8i3PRNb1hXoEGF3pIAd
Obw3iPZeiQ57PHQ3/+tA/cjUXDBBhQ4bQQf5ppFN5ZkDZTTocJQaatyEzPwn
iOeULh1UCK7d4cjBV8ztKy3oIJdpYTzQjvYPd8OZ58fo4F2kH1vfjv8eWyup
6jgdiKUito+QZ8ukO1+epIPenKJHMLLXN9ajtU50kJj6IMeKvCXgou8bF3S9
K5/h5ydUb1aXo+tc6fDcue91K/Iw14/GBk86BI993IhDtoe3uk0BdHgmf06G
6xP+fegh5+YgOgiYVTv/akPzw8ln51so6H4/dH+2IHf4575oDabD2E619cvI
ZukRyh0X0Po62Ip/fSSA9qq2ZH8sHW5XipAzWtH7y+Vyo4E4OtA+riYFIp/l
kvMYvEMH9o9WQ7rIFRJ7c74moefB2143/AHNzyf/7hnNpMOwE1fwDuTWEbLm
2D06qK5MHRpuQfOw/6TdeA4dtttObnmE/OByb+JEPh2YfLbGaiKLlFVwzhTT
wRyqGC2bCfBaR17+1xM6PFxscedGdmy+bz5bivIP+x50NKF6MZIQPV9Bh6C8
mWorZF4uKvOfV3RoZnx/T+89AZ7enRJZrqXDZ03alb/vCGAp4aq7UkeHNxs0
sVLkGB2r838b6bCq+OiyILJU8/u7a+/pELAspNneiOq/je6L9WZ0f3N2SiSy
x0hl778P6PuU8R4l5M3+B5c3PtJhd/vxnfj/D/4HzKzwJQ==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["t", TraditionalForm], 
    FormBox[
     TemplateBox[{",", "\",\"", 
       SubscriptBox["Topt", "\"i\""]}, "RowWithSeparators"], TraditionalForm]},
  AxesOrigin->{0, 11.600000000000001`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[6]=",
 CellID->642581038,
 $CellContext`ExpressionUUID -> "fb58ae9e-835c-4143-b67d-7491f3120b1b"]
}, Open  ]]
}, Open  ]],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "See Also"
}], "SeeAlsoSection",
 WholeCellGroupOpener->True,
 CellID->1255426704,
 $CellContext`ExpressionUUID -> "72bbc5a3-d2cb-42cc-8ee9-01f7f9397d91"],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FindEcoCycleEvoEq"]],"paclet:EcoEvo/ref/FindEcoCycleEvoEq"},
   "RefLink",
   BaseStyle->FEPrivate`If[
     FEPrivate`Less[FEPrivate`$VersionNumber, 11.1], {
     "InlineFormula", FontFamily -> "Verdana"}, {"InlineFormula"}]]], 
  "InlineFormula",
  $CellContext`ExpressionUUID -> "56a26dc8-483e-47d1-8e1e-4da5cf3abfba"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FindEcoCycle"]],"paclet:EcoEvo/ref/FindEcoCycle"},
   "RefLink",
   BaseStyle->FEPrivate`If[
     FEPrivate`Less[FEPrivate`$VersionNumber, 11.1], {
     "InlineFormula", FontFamily -> "Verdana"}, {"InlineFormula"}]]], 
  "InlineFormula",
  $CellContext`ExpressionUUID -> "636162e5-2d60-43bf-9d44-b923ba3f74c9"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FindEcoEvoEq"]],"paclet:EcoEvo/ref/FindEcoEvoEq"},
   "RefLink",
   BaseStyle->FEPrivate`If[
     FEPrivate`Less[FEPrivate`$VersionNumber, 11.1], {
     "InlineFormula", FontFamily -> "Verdana"}, {"InlineFormula"}]]], 
  "InlineFormula",
  $CellContext`ExpressionUUID -> "ebe0b84b-706d-4010-8008-f500a5e0922b"]
}], "SeeAlso",
 CellID->929782353,
 $CellContext`ExpressionUUID -> "e0fce07b-b7dd-480e-b7d2-17570485bca8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248,
 $CellContext`ExpressionUUID -> "0fb82b5b-4034-4844-92a6-e2830ae614bd"],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["EcoEvo"]],"paclet:EcoEvo/guide/EcoEvo"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->1681200264]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowTitle->"FindEcoEvoCycle",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "EcoEvo", ButtonData -> "paclet:EcoEvo/guide/EcoEvo", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2022, 9, 12, 23, 18, 44.716752}", 
    "history" -> {"1.0", "1.4.1", "", ""}, "context" -> "EcoEvo`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "EcoEvo Package Symbol", "language" -> "en", "paclet" -> "EcoEvo Package",
     "status" -> "None", "summary" -> 
    "FindEcoEvoCycle[traits, variables] finds an evolutionary equilibrium \
with an ecological cycle, with initial guess traits and variables. \
FindEcoEvoEq[traits, variables, varscovars] uses trait variances/covariances \
in varscovars.", "synonyms" -> {}, "tabletags" -> {}, "title" -> 
    "FindEcoEvoCycle", "titlemodifier" -> "", "windowtitle" -> 
    "FindEcoEvoCycle", "type" -> "Symbol", "uri" -> 
    "EcoEvo/ref/FindEcoEvoCycle"}, "SearchTextTranslated" -> ""},
CellContext->"Global`",
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, \
2014)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"], 
   Cell[
    StyleData["NotesSection"], ShowGroupOpener -> True], 
   Cell[
    StyleData["PrimaryExamplesSection"], ShowGroupOpener -> True], 
   Cell[
    StyleData["ExampleSection"], ShowGroupOpener -> True], 
   Cell[
    StyleData["ExampleSubsection"], ShowGroupOpener -> True], 
   Cell[
    StyleData[
    "GuideTutorialsSection", StyleDefinitions -> 
     StyleData["SeeAlsoSection"]]]}, Visible -> False, FrontEndVersion -> 
  "10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, 2014)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[15115, 398, 387, 15, 70, "PrimaryExamplesSection",
   CellTags->"PrimaryExamplesSection",
   CellID->652843506]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 201086, 3801}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[587, 21, 2709, 70, 70, "AnchorBarGrid",
 CellID->1],
Cell[3299, 93, 292, 11, 70, "ObjectNameGrid"],
Cell[CellGroupData[{
Cell[3616, 108, 1131, 32, 70, "Usage",
 CellID->982511436],
Cell[CellGroupData[{
Cell[4772, 144, 739, 24, 70, "NotesSection",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->1897981492],
Cell[5514, 170, 31, 0, 70, "SectionHeaderSpacer"],
Cell[5548, 172, 289, 6, 70, "Notes",
 CellID->1603140300],
Cell[5840, 180, 145, 2, 70, "Notes",
 CellID->1067943069],
Cell[5988, 184, 5645, 117, 70, "3ColumnTableMod",
 CellID->1575687271],
Cell[11636, 303, 154, 2, 70, "Notes",
 CellID->1749032528],
Cell[11793, 307, 895, 22, 70, "2ColumnTableMod",
 CellID->1660620835],
Cell[12691, 331, 162, 2, 70, "Notes",
 CellID->272787741],
Cell[12856, 335, 1434, 31, 70, "2ColumnTableMod",
 CellID->1778618773],
Cell[14293, 368, 362, 9, 70, "Notes",
 CellID->1662488072],
Cell[14658, 379, 163, 2, 70, "Notes",
 CellID->29728551],
Cell[14824, 383, 208, 7, 70, "Notes",
 CellID->721940538],
Cell[15035, 392, 31, 0, 70, "SectionFooterSpacer"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15115, 398, 387, 15, 70, "PrimaryExamplesSection",
 CellTags->"PrimaryExamplesSection",
 CellID->652843506],
Cell[CellGroupData[{
Cell[15527, 417, 195, 6, 70, "ExampleSection",
 CellID->846852819],
Cell[15725, 425, 301, 6, 70, "ExampleText",
 CellID->113861080],
Cell[16029, 433, 205, 5, 70, "Input",
 CellID->819343330],
Cell[16237, 440, 3035, 84, 70, "Input",
 CellID->1038202746],
Cell[19275, 526, 161, 2, 70, "ExampleText",
 CellID->1245834581],
Cell[CellGroupData[{
Cell[19461, 532, 407, 13, 70, "Input",
 CellID->98162231],
Cell[19871, 547, 22580, 441, 70, "Output",
 CellID->1366454531]
}, Open  ]],
Cell[CellGroupData[{
Cell[42488, 993, 300, 7, 70, "Input",
 CellID->2123865325],
Cell[42791, 1002, 16066, 276, 70, "Output",
 CellID->345998311],
Cell[58860, 1280, 9594, 171, 70, "Output",
 CellID->1955380548]
}, Open  ]],
Cell[68469, 1454, 154, 2, 70, "ExampleText",
 CellID->949179309],
Cell[CellGroupData[{
Cell[68648, 1460, 811, 24, 70, "Input",
 CellID->146889039],
Cell[69462, 1486, 26579, 448, 70, "Output",
 CellID->2116217648],
Cell[96044, 1936, 16530, 283, 70, "Output",
 CellID->645848322]
}, Open  ]],
Cell[112589, 2222, 184, 4, 70, "ExampleText",
 CellID->350297532],
Cell[CellGroupData[{
Cell[112798, 2230, 1281, 40, 70, "Input",
 CellID->1687679795],
Cell[114082, 2272, 769, 14, 70, "Message",
 CellID->931860943],
Cell[114854, 2288, 50158, 835, 70, "Output",
 CellID->188631430],
Cell[165015, 3125, 31196, 525, 70, "Output",
 CellID->642581038]
}, Open  ]]
}, Open  ]],
Cell[196238, 3654, 31, 0, 70, "SectionFooterSpacer"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196306, 3659, 342, 13, 70, "SeeAlsoSection",
 CellID->1255426704],
Cell[196651, 3674, 1458, 38, 70, "SeeAlso",
 CellID->929782353]
}, Open  ]],
Cell[CellGroupData[{
Cell[198146, 3717, 348, 13, 70, "MoreAboutSection",
 CellID->38303248],
Cell[198497, 3732, 31, 0, 70, "SectionHeaderSpacer"],
Cell[198531, 3734, 163, 5, 70, "MoreAbout",
 CellID->1681200264]
}, Open  ]],
Cell[198709, 3742, 23, 0, 70, "FooterCell"]
}
]
*)

(* End of internal cache information *)
