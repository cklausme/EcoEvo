(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2555247,      57456]
NotebookOptionsPosition[   2418685,      55108]
NotebookOutlinePosition[   2419788,      55144]
CellTagsIndexPosition[   2419745,      55141]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["BeginPackage", "Chapter",
 CellChangeTimes->{{3.688571926165935*^9, 3.68857192691094*^9}, {
   3.7705277824104977`*^9, 3.7705277830902987`*^9}, {3.7807354628869457`*^9, 
   3.780735466587371*^9}, {3.7807361406685247`*^9, 3.780736158575118*^9}, 
   3.810064713781147*^9},ExpressionUUID->"ee91c845-923f-4862-a074-\
70610eec46ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"hack", " ", "to", " ", "address"}], " ", "<", 
     RowBox[{"https", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
         "questions"}], "/", "167143"}], "/", "setdelayedwrsym"}], "-", "on", 
      "-", "first", "-", "use", "-", "of", "-", "formalx"}], ">"}]}], " ", 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"ContourPlot", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.737047601991708*^9, 3.737047606676053*^9}, {
  3.7370477948534613`*^9, 3.737047798125465*^9}, {3.737048144402083*^9, 
  3.737048145672566*^9}},ExpressionUUID->"76f16d85-e149-4291-bc81-\
575debee65dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<EcoEvo`\>\"", "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.683718353527194*^9, 3.6837183539277973`*^9}, 
   3.725323159113635*^9},ExpressionUUID->"17161ef8-7f50-4d34-b3e6-\
90b10fd2d8f8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "@@", 
   RowBox[{"Names", "[", "\"\<EcoEvo`*\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "@@", 
   RowBox[{"Names", "[", "\"\<EcoEvo`*\>\"", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.6884670295521193`*^9, 3.688467037498824*^9}, {
  3.725323159636595*^9, 
  3.7253231601857643`*^9}},ExpressionUUID->"5b56744b-6c60-4503-bff9-\
c7931f653e8e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Public", "Chapter",
 CellChangeTimes->{{3.769182041303684*^9, 3.769182045150799*^9}, {
  3.769836781712665*^9, 
  3.769836781869617*^9}},ExpressionUUID->"3ddbb646-eea6-455b-9da7-\
9f6cf32ef4fb"],

Cell[CellGroupData[{

Cell["General Messages", "Section",
 CellChangeTimes->{{3.770973182007893*^9, 
  3.770973184680203*^9}},ExpressionUUID->"a4a7603a-381b-415e-967a-\
914eae427e64"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "=", "\n", 
    "\"\<No model loaded. Use SetModel first.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$EcoEvoVersion", "::", "usage"}], "=", "\n", 
   "\"\<$EcoEvoVersion gives the version of the loaded EcoEvo package.\>\""}],
   ";"}]}], "Code",
 CellChangeTimes->{{3.7694516390820913`*^9, 3.7694516400504293`*^9}, {
  3.769502432015318*^9, 3.769502432692732*^9}, {3.7698370332874527`*^9, 
  3.7698370377535467`*^9}, {3.770973150616961*^9, 
  3.7709731533279953`*^9}},ExpressionUUID->"25d539eb-443b-4bac-843b-\
0adc56e61bcf"]
}, Closed]],

Cell[CellGroupData[{

Cell["Counters", "Section",
 CellChangeTimes->{{3.688427758535927*^9, 3.6884277618135157`*^9}, {
  3.769520780989602*^9, 
  3.769520784679245*^9}},ExpressionUUID->"146b5739-a254-44dc-bdb0-\
b3dd36c556d3"],

Cell[BoxData[
 RowBox[{"$InvCount", ";", "$FindEcoCycleSteps", ";", "$FindEcoEvoCycleSteps",
   ";"}]], "Code",
 CellChangeTimes->{
  3.700084271599441*^9, {3.700520139889642*^9, 3.7005201541755743`*^9}, {
   3.716593763115438*^9, 3.7165938023833*^9}, {3.7165948208165894`*^9, 
   3.716594821153515*^9}, 3.7166814334050426`*^9, {3.7695135268092213`*^9, 
   3.769513527264118*^9}, {3.7695138343588552`*^9, 3.769513835176663*^9}, {
   3.769520009805995*^9, 3.7695200260190067`*^9}, {3.7695202851148987`*^9, 
   3.769520286781019*^9}, {3.769520678922143*^9, 3.769520683896106*^9}, {
   3.7695207665844107`*^9, 3.769520778632707*^9}, {3.769521803817288*^9, 
   3.769521810060512*^9}, {3.769521840592454*^9, 3.76952184454554*^9}, {
   3.770105312365027*^9, 3.770105317461524*^9}, 3.774586588474422*^9, 
   3.774586648979621*^9},ExpressionUUID->"235d3caf-0e35-45b5-b267-\
39e1d7aa5c4c"]
}, Closed]],

Cell[CellGroupData[{

Cell["General Utilities", "Section",
 CellChangeTimes->{{3.76918266264211*^9, 
  3.7691826666109743`*^9}},ExpressionUUID->"02e09870-63d3-4188-b0ad-\
0c913acdef51"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[IGrave]", "::", "usage"}], "=", 
   "\"\<\[IGrave] is a placeholder index in RuleList.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Var", "::", "usage"}], "=", 
   "\"\<Var indicates Variance in output of TemporalVariance and \
TraitVariance.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Cov", "::", "usage"}], "=", 
   "\"\<Cov indicates Covariance in output of TemporalCovariance and \
TraitCovariance.\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.7848011697550783`*^9, 3.784801196494186*^9}, {
  3.784803329412365*^9, 
  3.784803344346665*^9}},ExpressionUUID->"9145396c-ab76-4c00-b78b-\
725ab38dfb7c"],

Cell[BoxData[{
 RowBox[{"RuleListSet", ";", "InequalityToInterval", ";"}], "\n", 
 RowBox[{"SymmetrizeMatrix", ";"}], "\n", 
 RowBox[{"NMin", ";", "NMax", ";"}], "\n", 
 RowBox[{"Reinterpolation", ";", "MakeInterpolatingFunctionPeriodic", 
  ";"}], "\n", 
 RowBox[{"SimplifyLogE", ";", "SortRuleList", ";", "OrderedComplement", ";", 
  "RuleListComplement", ";", "EqSort", ";"}], "\n", 
 RowBox[{"RHS", ";", "LHS", ";", "ReplaceRHS", ";", "ReplaceLHS", ";", "Eq", 
  ";", "ZeroLHS", ";"}], "\n", 
 RowBox[{"ZeroVector", ";"}], "\n", 
 RowBox[{"SubscriptAdd", ";", "DeleteSubscripts", ";", "ZeroSubscripts", 
  ";"}], "\n", 
 RowBox[{"HighlightChanges", ";"}], "\n", 
 RowBox[{"ExtractColors", ";", "AxisFlip", ";"}], "\n", 
 RowBox[{"FuncStyle", ";", "PrintCall", ";"}], "\n", 
 RowBox[{"MakeRuleList", ";", "ArrayToRuleList", ";"}], "\n", 
 RowBox[{"RuleListQ", ";", "RuleListListQ", ";", "NumericRuleListQ", ";", 
  "TemporalRuleListQ", ";"}], "\n", 
 RowBox[{"RuleListDistance", ";", "RuleListTweak", ";", "RuleListAdd", ";", 
  "RuleListSubtract", ";", "RuleListMultiply", ";", 
  "NumericRuleListToNumericList", ";", "RuleListInterpolation", ";"}], "\n", 
 RowBox[{"ClearCache", ";"}], "\n", 
 RowBox[{"InterpolatingFunctionFunctionQ", ";", "TemporalDataFunctionQ", 
  ";"}], "\n", 
 RowBox[{"TemporalMean", ";", "TemporalVariance", ";", "TemporalCovariance", 
  ";"}], "\n", 
 RowBox[{"ExtractPlotPoints", ";", "GetPlotRange", ";"}], "\n", 
 RowBox[{"Else", ";", "SpFrac", ";", "ModPart", ";"}], "\n", 
 RowBox[{"FindMaxima", ";", "FindMinima", ";", "FindExtrema", ";"}], "\n", 
 RowBox[{"MaximumValues", ";", "MinimumValues", ";", "ExtremumValues", 
  ";"}], "\n", 
 RowBox[{"FindPeriod", ";"}], "\n", 
 RowBox[{"NumberedGridForm", ";", "MyStreamPlot", ";", "RealSimplify", ";", 
  "TD", ";", "CompoundAnd", ";", "CompoundOr", ";"}], "\n", 
 RowBox[{"NumericListQ", ";", "NumericFlattenedListQ", ";"}], "\n", 
 RowBox[{"InterpolatingFunctionTake", ";", "Slice", ";", "InitialSlice", ";", 
  "FinalSlice", ";", "FinalDerivatives", ";", "InitialTime", ";", "FinalTime",
   ";"}], "\n", 
 RowBox[{"SortedEigensystem", ";", "ListMultiplier", ";", "RunFile", ";", 
  "RouthHurwitzCriteria", ";"}], "\n", 
 RowBox[{"JoinFirst", ";"}], "\n", 
 RowBox[{"PlotDynamics", ";", "PlotInterpolatingFunction", ";", 
  "MyListLinePlot3D", ";", "RuleListPlot", ";"}], "\n", 
 RowBox[{"TrackRoot", ";"}], "\n", 
 RowBox[{"PartsAboveDiagonal", ";", "PrintMessage", ";"}], "\n", 
 RowBox[{"GrayScale", ";"}]}], "Code",
 CellChangeTimes->{
  3.76918212202499*^9, {3.769182223153582*^9, 3.769182225551406*^9}, {
   3.769182287770998*^9, 3.76918229040499*^9}, {3.7691823892214203`*^9, 
   3.7691824120252*^9}, {3.769182644541288*^9, 3.769182646412211*^9}, {
   3.7691827184170856`*^9, 3.7691827201541357`*^9}, {3.769182798321752*^9, 
   3.769182821274156*^9}, {3.769182892692395*^9, 3.769182916573763*^9}, {
   3.769182988978031*^9, 3.769182991671276*^9}, {3.769183059231803*^9, 
   3.769183061737196*^9}, {3.769183102842843*^9, 3.769183107235903*^9}, {
   3.769183146237279*^9, 3.769183186012558*^9}, {3.769183221593635*^9, 
   3.769183225517045*^9}, {3.769183256158423*^9, 3.7691833023397293`*^9}, {
   3.769183401546341*^9, 3.7691834049910727`*^9}, {3.769183889401963*^9, 
   3.769183891452641*^9}, {3.769184060064402*^9, 3.769184063869968*^9}, {
   3.769184132856078*^9, 3.769184136307675*^9}, {3.769184181702726*^9, 
   3.7691841827905293`*^9}, {3.7691842541564007`*^9, 3.769184274660473*^9}, {
   3.7691846819938498`*^9, 3.7691847034826403`*^9}, {3.7691847861264973`*^9, 
   3.769184804511181*^9}, {3.7691849268424187`*^9, 3.769184935736083*^9}, {
   3.769185030998372*^9, 3.769185032080969*^9}, {3.7691852052527523`*^9, 
   3.769185221735448*^9}, {3.7692232923568563`*^9, 3.7692232929013767`*^9}, {
   3.7692233425559464`*^9, 3.769223347333412*^9}, {3.769223449022828*^9, 
   3.7692234572257032`*^9}, {3.769231659735931*^9, 3.769231672770859*^9}, {
   3.769354744956121*^9, 3.769354751596088*^9}, {3.769354797932693*^9, 
   3.769354803083226*^9}, {3.7693620370412817`*^9, 3.7693620529704037`*^9}, {
   3.769364318060359*^9, 3.769364319506113*^9}, {3.769364432495984*^9, 
   3.7693644406196404`*^9}, {3.769364542303245*^9, 3.7693645516532183`*^9}, {
   3.7693646160445633`*^9, 3.769364643831064*^9}, {3.7693646929133167`*^9, 
   3.769364701638702*^9}, {3.7695240426967297`*^9, 3.769524053969393*^9}, {
   3.769968677881798*^9, 3.769968678399643*^9}, {3.7703734476001673`*^9, 
   3.7703734496177883`*^9}, {3.77053091547401*^9, 3.770530918430125*^9}, {
   3.776617681228812*^9, 3.77661768187216*^9}, {3.7793598580547*^9, 
   3.779359865550659*^9}, {3.779446542389162*^9, 3.7794465441958303`*^9}, {
   3.779466394285615*^9, 3.779466401549045*^9}, {3.782988103424007*^9, 
   3.7829881074256496`*^9}, 3.7847958424497128`*^9, 3.784795935343156*^9, 
   3.784799174964856*^9, {3.7848011499261093`*^9, 3.7848011672504473`*^9}, {
   3.786260423963818*^9, 3.786260433573876*^9}, {3.787501376259452*^9, 
   3.787501381370997*^9}, {3.787501739003483*^9, 3.7875017431024017`*^9}, {
   3.787753833518887*^9, 3.787753838290923*^9}, 3.78894189374009*^9, 
   3.788941972520604*^9, {3.792081912771391*^9, 3.792081916064953*^9}, {
   3.792175549729742*^9, 3.7921755526718388`*^9}, {3.794076076332417*^9, 
   3.794076077607156*^9}, {3.798031101018532*^9, 3.798031104201329*^9}, {
   3.807044059236081*^9, 3.8070440616425123`*^9}, {3.812062114362863*^9, 
   3.8120621154188433`*^9}, {3.812063319775625*^9, 3.8120633239981613`*^9}, {
   3.815413658665852*^9, 3.81541366442309*^9}, {3.815778270781111*^9, 
   3.815778274809021*^9}, {3.816129976786009*^9, 3.816129980080806*^9}, {
   3.8198342676254787`*^9, 3.81983426950914*^9}, {3.820235554175696*^9, 
   3.820235558798264*^9}, 3.8213931702327414`*^9, {3.8289576300564013`*^9, 
   3.8289576317043543`*^9}, {3.830775986014102*^9, 
   3.830775986276599*^9}},ExpressionUUID->"5a29371a-eb15-45db-ac3b-\
c59ddfb54012"]
}, Closed]],

Cell[CellGroupData[{

Cell["Internal EcoEvo Utilities", "Section",
 CellChangeTimes->{{3.769365910577833*^9, 
  3.7693659266990957`*^9}},ExpressionUUID->"4b842b94-ae53-4b3f-b0f1-\
579f3e294909"],

Cell[BoxData[
 RowBox[{"Set\[ScriptCapitalN]", ";"}]], "Code",
 CellChangeTimes->{{3.7693659338411903`*^9, 3.769365980025255*^9}, {
   3.769399622944974*^9, 3.7693996628682327`*^9}, {3.769399797038467*^9, 
   3.769399799328598*^9}, {3.769400442962038*^9, 3.769400460164028*^9}, {
   3.769410877554853*^9, 3.769410878304735*^9}, {3.769525700251691*^9, 
   3.7695257037988443`*^9}, {3.770658719677669*^9, 3.7706587201446447`*^9}, 
   3.77072137966037*^9, {3.8177657416076603`*^9, 
   3.817765771057241*^9}},ExpressionUUID->"a1f1bb0d-a91e-4bb6-8060-\
6d570aa43490"]
}, Closed]],

Cell[CellGroupData[{

Cell["External EcoEvo Utilities", "Section",
 CellChangeTimes->{{3.769437212062319*^9, 
  3.7694372156416283`*^9}},ExpressionUUID->"4ca43e10-c2cf-47cf-88a8-\
b6232e9cc1aa"],

Cell[BoxData[{
 RowBox[{"EcoEvoDocs", ";"}], "\n", 
 RowBox[{"ExtractInteractions", ";", "ExtractTraits", ";", 
  "ExtractAttributes", ";"}], "\n", 
 RowBox[{"ExtractPops", ";", "ExtractAuxs", ";", "ExtractGuilds", ";", 
  "ExtractVariables", ";", "ExtractSpecies", ";"}], "\n", 
 RowBox[{"TraitsQ", ";", "InteractionsQ", ";", "AttributesQ", ";", 
  "VariablesQ", ";", "ListOfVariablesQ", ";", "AttributesAndVariablesQ", 
  ";"}], "\n", 
 RowBox[{"InvaderQ", ";", "NotInvaderTraitsQ", ";", "GsQ", ";"}], "\n", 
 RowBox[{"DeleteInvaders", ";", "SelectValid", ";"}], "\n", 
 RowBox[{"SplitSpecies", ";"}]}], "Code",
 CellChangeTimes->{{3.769437218562994*^9, 3.769437242242898*^9}, {
  3.769451037458466*^9, 3.769451092312346*^9}, {3.7694516165411987`*^9, 
  3.769451619685967*^9}, {3.769482452572462*^9, 3.769482456863656*^9}, {
  3.769483607281692*^9, 3.7694836128035603`*^9}, {3.770973194663888*^9, 
  3.770973197136244*^9}, {3.787753825483974*^9, 3.787753826857418*^9}, {
  3.7978861821081142`*^9, 3.797886185673785*^9}, {3.798042146676087*^9, 
  3.7980421749322777`*^9}, {3.798297924827746*^9, 3.79829792775704*^9}, {
  3.8073692643619204`*^9, 3.807369266877694*^9}, {3.811344474918992*^9, 
  3.811344475242215*^9}, {3.812024604644883*^9, 
  3.812024608988358*^9}},ExpressionUUID->"66572530-b7a6-46cb-8794-\
321e0c0e45d4"]
}, Closed]],

Cell[CellGroupData[{

Cell["Model-Related Functions", "Section",
 CellChangeTimes->{
  3.7693647782328033`*^9, {3.769365904840267*^9, 3.769365906845983*^9}, {
   3.769482769898776*^9, 
   3.769482783292782*^9}},ExpressionUUID->"c71ba46d-dafa-4098-b64c-\
03b927199635"],

Cell[BoxData[{
 RowBox[{"SetModel", ";", "UnsetModel", ";", "ModelInfo", ";"}], "\n", 
 RowBox[{"ClearParameters", ";", "ParameterValues", ";"}], "\n", 
 RowBox[{"MatrixToPopComponents", ";", "MatrixToGuildComponents", ";"}], "\n", 
 RowBox[{"WeightedAbundance", ";", "TotalAbundance", ";"}], "\n", 
 RowBox[{"TraitMean", ";", "TraitVariance", ";", "TraitDistance", ";", 
  "FunctionalDistinctiveness", ";"}], "\n", 
 RowBox[{"ExtantSpecies", ";", "ExtinctSpecies", ";"}]}], "Code",
 CellChangeTimes->{{3.7693649772290792`*^9, 3.769364984271*^9}, {
   3.7693653529124804`*^9, 3.769365367767544*^9}, {3.769499643268599*^9, 
   3.7694996585171947`*^9}, {3.769499848737492*^9, 3.769499849091983*^9}, {
   3.780562932721734*^9, 3.780562935373365*^9}, {3.7805629744964857`*^9, 
   3.7805629773485117`*^9}, {3.7806593099946003`*^9, 3.780659311884081*^9}, {
   3.7847294113185472`*^9, 3.784729412790764*^9}, {3.784737954788644*^9, 
   3.784737956614374*^9}, 3.784745248803246*^9, {3.784747390399406*^9, 
   3.784747392219152*^9}, {3.788983449953217*^9, 3.788983458085326*^9}, {
   3.7892131175531483`*^9, 3.789213122965564*^9}, 3.811343666507453*^9, {
   3.811343835378318*^9, 3.811343837803252*^9}, {3.811344470403755*^9, 
   3.8113444706269693`*^9}, {3.81167909290149*^9, 3.8116791009397297`*^9}, {
   3.820239155832673*^9, 3.8202391631409283`*^9}, {3.8202608104911757`*^9, 
   3.82026081601153*^9}, {3.820420436287567*^9, 3.820420440096846*^9}, 
   3.828957620109762*^9},ExpressionUUID->"424da367-340c-4455-b841-\
89eca92c484b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Model Parts (With Usage Messages)", "Section",
 CellChangeTimes->{{3.7694999241591387`*^9, 3.769499925456305*^9}, {
  3.769500845896751*^9, 3.769500854035482*^9}, {3.769525430793244*^9, 
  3.7695254681805058`*^9}},ExpressionUUID->"02939f0d-18b0-43e2-88ce-\
7e1f9cb9112f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LookUp", "::", "usage"}], " ", "=", "\n", 
    "\"\<LookUp[\!\(\*StyleBox[\"var\", \"TI\"]\)] finds the indices of a \
variable or trait.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"t", "::", "usage"}], "=", "\"\<Reserved for time.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"log", "::", "usage"}], "=", 
    "\"\<Indicates a log-transformed variable.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ModelType", "::", "usage"}], "=", 
   "\"\<Type of model (\\\"ContinuousTime\\\" or \
\\\"DiscreteTime\\\").\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ModelName", "::", "usage"}], "=", "\"\<Model name.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ModelPeriod", "::", "usage"}], "=", 
   "\"\<Model period (0=unforced, \[Infinity]=aperiodic).\>\""}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Component", "::", "usage"}], "=", 
   "\"\<Defines a Component of a Pop or Guild in SetModel.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Equation", "::", "usage"}], "=", 
   "\"\<Defines the equation of a Pop or Guild Component in SetModel.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Aux", "::", "usage"}], "=", 
   "\"\<Defines an Aux variable in SetModel.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Pop", "::", "usage"}], "=", 
   "\"\<Defines a Pop in SetModel.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Guild", "::", "usage"}], "=", 
   "\"\<Defines a Guild in SetModel. Also an option for various EcoEvo \
functions.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Trait", "::", "usage"}], "=", 
   "\"\<Defines a trait in SetModel.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Interaction", "::", "usage"}], "=", 
   "\"\<Defines an interaction in SetModel.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Type", "::", "usage"}], "=", 
   "\"\<Defines a Component type in SetModel.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Guilds", "::", "usage"}], "=", 
   "\"\<Guilds are used in defining Interactions in SetModel.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Components", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Traits", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Transitions", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Parameters", "::", "usage"}], "=", "\"\<\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[ScriptCapitalN]", "::", "usage"}], "=", 
   "\"\<\!\(\*SubscriptBox[\"\[ScriptCapitalN]\", StyleBox[\"gu\", \"TI\"]]\) \
is a reserved symbol that denotes the number of species in guild \
\!\(\*StyleBox[\"gu\", \"TI\"]\).  Do not set directly.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[FormalCapitalN]", "::", "usage"}], "=", 
    "\"\<\[FormalCapitalN] is used for a placeholder for \[ScriptCapitalN].\>\
\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Color", "::", "usage"}], "=", 
   "\"\<Color gives the color for a model part.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Colors", "::", "usage"}], "=", 
    "\"\<Colors is a list of default colors for model parts.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LineStyle", "::", "usage"}], "=", 
   "\"\<LineStyle gives the line style for a model part.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LineStyles", "::", "usage"}], "=", 
    "\"\<LineStyles is a list of default line styles for model parts.\>\""}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotMarker", "::", "usage"}], "=", 
    "\"\<PlotMarker gives the plot marker for a model part.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Unk", "::", "usage"}], "=", 
   "\"\<An internal header for unknown variables.\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.683807425259964*^9, 3.6838074334106627`*^9}, {
   3.683807573181162*^9, 3.683807573393408*^9}, {3.683807769276572*^9, 
   3.68380776954066*^9}, {3.683809264653675*^9, 3.68380926498942*^9}, {
   3.685092524614745*^9, 3.685092556960705*^9}, {3.6884113879060793`*^9, 
   3.688411389289035*^9}, {3.688411433027636*^9, 3.688411495560199*^9}, {
   3.688411539522587*^9, 3.6884115931514063`*^9}, 3.688411798884659*^9, {
   3.6941121921888647`*^9, 3.694112201096081*^9}, {3.694116139852159*^9, 
   3.694116141099772*^9}, {3.7102026209621572`*^9, 3.7102026365455933`*^9}, {
   3.710202684944713*^9, 3.710202690371896*^9}, {3.710250338513974*^9, 
   3.7102503390421124`*^9}, {3.7127385341276827`*^9, 3.712738534155387*^9}, {
   3.712837287235999*^9, 3.712837287994637*^9}, {3.7128373272662573`*^9, 
   3.712837340057786*^9}, {3.712837379993816*^9, 3.712837480787797*^9}, {
   3.712838300302177*^9, 3.7128383644979362`*^9}, 3.712838415214463*^9, 
   3.712839360837996*^9, {3.712839739897827*^9, 3.712839743219182*^9}, {
   3.7140771546207743`*^9, 3.714077160545862*^9}, {3.729614739978458*^9, 
   3.729614747062317*^9}, {3.729614850898477*^9, 3.729614860879962*^9}, {
   3.729988623821126*^9, 3.729988651300312*^9}, {3.7318923445329523`*^9, 
   3.731892394060824*^9}, {3.7340979106546707`*^9, 3.73409793873967*^9}, {
   3.735227923965584*^9, 3.7352279832370777`*^9}, {3.7602676250023603`*^9, 
   3.760267631969493*^9}, {3.769483054637538*^9, 3.769483064109232*^9}, {
   3.769499876069932*^9, 3.769499900111998*^9}, {3.770721381111532*^9, 
   3.770721381931488*^9}, {3.7707832650177183`*^9, 3.770783289614931*^9}, {
   3.797863914743168*^9, 3.797863928301013*^9}, {3.797865115656374*^9, 
   3.797865130160331*^9}, {3.80023097752737*^9, 3.800231022590507*^9}, {
   3.817764954632389*^9, 3.817764977247937*^9}, {3.820237242291629*^9, 
   3.820237246308968*^9}},ExpressionUUID->"74cf4280-4d50-4b8f-8624-\
75f707011f78"]
}, Closed]],

Cell[CellGroupData[{

Cell["Ecological Functions", "Section",
 CellChangeTimes->{{3.769482789256772*^9, 
  3.769482791682653*^9}},ExpressionUUID->"a0a3f02c-cbc9-465c-a9ed-\
557b030d924c"],

Cell[BoxData[{
 RowBox[{"EcoEqns", ";", "EcoSim", ";"}], "\n", 
 RowBox[{"EcoEq", ";", "SolveEcoEq", ";", "NSolveEcoEq", ";", "FindEcoEq", 
  ";", "FindEcoCycle", ";"}], "\n", 
 RowBox[{"EcoJacobian", ";", "EcoEigenvalues", ";", "EcoStableQ", ";", 
  "SelectEcoStable", ";", "FindEcoAttractor", ";"}], "\n", 
 RowBox[{"PlotEcoIsoclines", ";", "PlotEcoStreams", ";", "PlotEcoPhasePlane", 
  ";"}], "\n", 
 RowBox[{"PrestonPlot", ";", "WhittakerPlot", ";", "PlotGuild", ";", 
  "PlotGuild", ";"}], "\n", 
 RowBox[{"ImpactVector", ";", "PlotImpactVector", ";"}]}], "Code",
 CellChangeTimes->{{3.76948279603979*^9, 3.769482797534657*^9}, {
   3.769483241675404*^9, 3.769483242647901*^9}, {3.769483384005702*^9, 
   3.76948339533384*^9}, {3.769483938405623*^9, 3.769483941599052*^9}, {
   3.769484064499364*^9, 3.7694840690355597`*^9}, {3.769484245962895*^9, 
   3.769484252598482*^9}, {3.769484302235333*^9, 3.769484306009815*^9}, {
   3.769484354682461*^9, 3.7694843704242077`*^9}, {3.769484442691787*^9, 
   3.769484453037538*^9}, {3.809993374719528*^9, 3.809993380865378*^9}, {
   3.819799117389634*^9, 3.819799117994232*^9}, 3.819834932375366*^9, 
   3.82906344745271*^9},ExpressionUUID->"61535074-90ab-4bfa-a5be-\
ce9d660580c5"]
}, Closed]],

Cell[CellGroupData[{

Cell["Fitness Functions", "Section",
 CellChangeTimes->{{3.769484474747261*^9, 
  3.7694844805463543`*^9}},ExpressionUUID->"7fc19cd7-7f45-4173-9b26-\
4f90325a9323"],

Cell[BoxData[{
 RowBox[{"InvSPS", ";", "Inv", ";", "StablePopulationStructure", ";", 
  "ReproductiveValues", ";"}], "\n", 
 RowBox[{"DInv", ";", "NDInv", ";", "NumDInv", ";"}], "\n", 
 RowBox[{"MaximizeInv", ";", "GlobalESSQ", ";", "LocalESSQ", ";"}], "\n", 
 RowBox[{"PlotInv", ";", "PlotZIP", ";", "PlotZNGI", ";", "PlotPIP", ";", 
  "PlotMIP", ";"}]}], "Code",
 CellChangeTimes->{{3.769484482937928*^9, 3.769484502840403*^9}, {
   3.769484815701421*^9, 3.7694848311712008`*^9}, 3.769528364732334*^9, {
   3.769536141084857*^9, 3.769536144299246*^9}, {3.769793160520918*^9, 
   3.76979316727794*^9}, {3.811503058877419*^9, 
   3.8115030617178097`*^9}},ExpressionUUID->"ef719f2c-d1da-44a9-8ef3-\
58a34d0f2d4d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Evolutionary Functions", "Section",
 CellChangeTimes->{{3.769489561798905*^9, 
  3.7694895648256474`*^9}},ExpressionUUID->"2805f313-aca1-4430-9455-\
847f77231666"],

Cell[BoxData[{
 RowBox[{"EvoEqns", ";", "TraitEqns", ";"}], "\n", 
 RowBox[{"PlotEvoIsoclines", ";", "PlotEvoStreams", ";", "PlotEvoPhasePlane", 
  ";"}], "\n", 
 RowBox[{"EcoEvoSim", ";"}], "\n", 
 RowBox[{"FindEcoEvoEq", ";", "FindEcoEvoCycle", ";", "FindEcoCycleEvoEq", 
  ";"}], "\n", 
 RowBox[{"TrackEcoEvoEq", ";"}], "\n", 
 RowBox[{"EvoEq", ";", "SolveEvoEq", ";", "NSolveEvoEq", ";", "FindEvoEq", 
  ";"}], "\n", 
 RowBox[{"EcoEvoJacobian", ";", "EcoEvoEigenvalues", ";", "EvoJacobian", ";", 
  "EvoEigenvalues", ";"}]}], "Code",
 CellChangeTimes->{{3.769489607690777*^9, 3.769489616895639*^9}, {
  3.769490046236586*^9, 3.7694900480546618`*^9}, {3.769490215759198*^9, 
  3.769490227158049*^9}, {3.769490320073853*^9, 3.7694903229968863`*^9}, {
  3.7694903880811787`*^9, 3.7694903898792*^9}, {3.7694904358048277`*^9, 
  3.769490439584914*^9}, {3.769490494540256*^9, 3.769490495473908*^9}, {
  3.769491062257794*^9, 3.7694910772241573`*^9}, {3.76949116979403*^9, 
  3.7694911858321867`*^9}, {3.7694919890206423`*^9, 3.769491995516459*^9}, {
  3.7697931561858463`*^9, 3.7697931568271303`*^9}, {3.8114242793483667`*^9, 
  3.811424281826755*^9}, {3.8115030517102833`*^9, 3.811503054829692*^9}, {
  3.817741774376329*^9, 
  3.817741776318673*^9}},ExpressionUUID->"49c22d47-99b8-4a46-92e8-\
501a3cbaa5d9"]
}, Closed]],

Cell[CellGroupData[{

Cell["Options (With Usage Messages)", "Section",
 CellChangeTimes->{{3.769525451401969*^9, 
  3.7695254557814713`*^9}},ExpressionUUID->"4c963b28-8bc2-4fd5-97a8-\
edbcd1f8e998"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"AbsoluteStepSize", "::", "usage"}], " ", "=", " ", 
   "\"\<AbsoluteStepSize is an option for NDInv that sets the absolute step \
size.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Averaged", "::", "usage"}], " ", "=", " ", 
   "\"\<Averaged is an option for Inv that averages growth if True, gives \
instantaneous growth if False.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TemporalMeanOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<TemporalMeanOpts is an option for TemporalVariance and \
TemporalCovariance that passes options to TemporalMean.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Bandwidth", "::", "usage"}], " ", "=", " ", 
   "\"\<Bandwidth is an option for PrestonPlot that sets the bandwidth in \
SmoothKernelDistribution.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Base", "::", "usage"}], " ", "=", " ", 
   "\"\<Base is an option for PrestonPlot that sets the logarithm \
base.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BasePeriod", "::", "usage"}], " ", "=", " ", 
   "\"\<BasePeriod is an option for FindPeriod that gives the period to look \
at multiples of.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BoundaryDetection", "::", "usage"}], " ", "=", " ", 
   "\"\<BoundaryDetection is an option for various EcoEvo functions to \
enforce variable/trait bounds.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Constraints", "::", "usage"}], " ", "=", " ", 
   "\"\<Constraints is an option for various EcoEvo functions that add extra \
constraints.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DelayDInv", "::", "usage"}], " ", "=", " ", 
   "\"\<DelayDInv is an option for various EcoEvo functions that delays the \
evaluation of DInv.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DelayDInv2", "::", "usage"}], " ", "=", " ", 
   "\"\<DelayDInv2 is an option for PlotEvoIsoclines whether to delay \
evaluation of DInv in ESS-test.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DelayInv", "::", "usage"}], " ", "=", " ", 
   "\"\<DelayInv is an option for various EcoEvo functions that delays the \
evaluation of Inv.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DInv2Opts", "::", "usage"}], " ", "=", " ", 
   "\"\<DInvOpts is an option for PlotEvoIsoclines that passed options to \
DInv in ESS-test.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DInvOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<DInvOpts is an option for various EcoEvo functions that passes \
options to DInv.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dTMaxPower", "::", "usage"}], " ", "=", " ", 
   "\"\<dTMaxPower is an option for FindEcoCycle that sets the stepsize \
base-10 power of tmax.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EcoAttractorNumber", "::", "usage"}], " ", "=", " ", 
   "\"\<EcoAttractorNumber specifies which EcoAttractor to choose in the case \
of multiple attractors.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EcoEigenvaluesOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<EcoEigenvaluesOpts is an option for various EcoEvo functions that \
passes options to EcoEigenvalues.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EcoEvoSimOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<EcoEvoSimOpts is an option for various EcoEvo functions that passes \
options to EcoEvoSim.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EcoSimOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<EcoSimOpts is an option for various EcoEvo functions that passes \
options to EcoSim.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EigensystemOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<EigenvaluesOpts is an option for various EcoEvo functions that passes \
options to Eigenvalues.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EigenvaluesOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<EigenvaluesOpts passes options to Eigenvalues.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EqStop", "::", "usage"}], " ", "=", " ", 
   "\"\<EqStop is an option for various EcoEvo simulation functions that \
stops upon reaching an equilibrium.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EqThreshold", "::", "usage"}], " ", "=", " ", 
   "\"\<EqThreshold is an option for various EcoEvo simulation functions that \
sets the sensitivity for EqStop.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EqTolerance", "::", "usage"}], " ", "=", " ", 
   "\"\<EqTolerance is an option for FindEcoAttractor that sets the minimum \
distance to consider two equilibria distinct.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ESColor", "::", "usage"}], " ", "=", " ", 
   "\"\<ESColor is an option for PlotEvoIsoclines that sets the color of \
non-ES contours if ESTest\[Rule]True.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ESTest", "::", "usage"}], " ", "=", " ", 
   "\"\<ESTest is an option for PlotEvoIsoclines that colors isoclines \
according to (local) evolutionary stability.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EvoEquation", "::", "usage"}], " ", "=", " ", 
   "\"\<EvoEquation is an option for EcoEvoSim that sets whether to use the \
breeders' equation (\\\"QG\\\" -- default) or the canonical equation \
(\\\"CE\\\").\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExcludeDiagonal", "::", "usage"}], " ", "=", " ", 
   "\"\<ExcludeDiagonal is an option for PlotEvoIsoclines that excludes the \
diagonal.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExcludeFocalSpecies", "::", "usage"}], " ", "=", " ", 
   "\"\<ExcludeFocalSpecies is an option for FunctionalDistinctiveness to \
exclude the focal species in the total abundance in the denominator.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FinalTMax", "::", "usage"}], " ", "=", " ", 
   "\"\<FinalTMax is an option for FindEcoAttractor that sets the length of \
an aperiodic solution.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FindEcoAttractorOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<FindEcoAttractorOpts is an option for various EcoEvo functions that \
passes options to FindEcoAttractor.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FindEcoCycleOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<FindEcoCycleOpts is an option for various EcoEvo functions that \
passes options to FindEcoCycle.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FindEcoEqOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<FindEcoEqOpts is an option for various EcoEvo functions that passes \
options to FindEcoEq.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FindEcoEvoEqOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<FindEcoEvoEqOpts is an option for TrackEcoEvoEq that passes options \
to FindEcoEvoEq.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FindInstanceOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<FindInstanceOpts in an option for various EcoEvo functions that \
passes options to FindInstance.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FindRootOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<FindRootOpts is an option for various EcoEvo functions that passes \
options to FindRoot.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FitnessGradient", "::", "usage"}], " ", "=", " ", 
   "\"\<FitnessGradient is an option for various EcoEvo functions that \
chooses which method to use to calculate fitness gradients.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Fixed", "::", "usage"}], " ", "=", " ", 
   "\"\<Fixed is an option for various EcoEvo functions that find equilibria, \
that fixes the values of certain species/traits.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FreezeTraits", "::", "usage"}], " ", "=", " ", 
   "\"\<FreezeTraits is an option for EcoEvoSim that freezes traits at their \
initial conditions.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FromInv", "::", "usage"}], " ", "=", " ", 
   "\"\<FromInv is an option for InvSPS when called from Inv.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"G", "::", "usage"}], " ", "=", " ", 
   "\"\<G is an option to set genetic variance/covariance matrix in various \
EcoEvo functions.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GlobalESSQOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<GlobalESSQOpts is an option for TrackEcoEvoEq that passes options to \
GlobalESSQ.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Gradients", "::", "usage"}], " ", "=", " ", 
   "\"\<Gradients is an option for SetModel that provides a list of base \
Colorradients for guilds.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Guild", "::", "usage"}], " ", "=", " ", 
   "\"\<Guild is an option for various EcoEvo functions that sets which guild \
to use.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"HistogramOpacity", "::", "usage"}], " ", "=", " ", 
   "\"\<HistogramOpacity is an option for PlotDynamics that sets the opacity \
in a marginal Histogram.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"HistogramOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<HistogramOpts is an option for various EcoEvo functions that passes \
options to Histogram.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"HistogramPoints", "::", "usage"}], " ", "=", " ", 
   "\"\<HistogramPoints is an option for PlotDynamics that sets the number of \
points to use in making a marginal Histogram.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"HistogramPosition", "::", "usage"}], " ", "=", " ", 
   "\"\<HistogramPosition is an option for PlotDynamics that controls the \
position of a marginal Histogram.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"HistogramScale", "::", "usage"}], " ", "=", " ", 
   "\"\<HistogramScale is an option for PlotDynamics that controls the scale \
of a marginal Histogram.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ICs", "::", "usage"}], " ", "=", " ", 
   "\"\<ICs is an option for PlotPIP and PlotMIP that supplies initial \
guesses for FindEcoAttractor.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"IndeterminateMarker", "::", "usage"}], " ", "=", " ", 
   "\"\<IndeterminateMarker is an option for RuleListPlot that defines the \
marker style for indeterminate equilibria.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"IntegrateOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<IntegrateOpts is an option for various EcoEvo functions that passes \
options to Integrate.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InterpolationOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<InterpolationOpts is an option for various EcoEvo functions that \
passes options to Interpolation.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InvOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<InvOpts is an option for various EcoEvo functions that passes options \
to Inv.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InvStyle", "::", "usage"}], " ", "=", " ", 
   "\"\<InvStyle is an option for PlotMIP (PlotType->MIP) that defines the \
style for successful invasion.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InvThreshold", "::", "usage"}], " ", "=", " ", 
   "\"\<InvThreshold is an option for PlotMIP that sets the threshold for \
successful invasion.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"IsoclineStyle", "::", "usage"}], " ", "=", " ", 
   "\"\<IsoclineStyle is an option for PlotEcoIsoclines and PlotEvoIsoclines \
that defines the style for isoclines.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Logged", "::", "usage"}], " ", "=", " ", 
   "\"\<Logged is an option for EcoSim that logs population variables.\>\""}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MarkerStyle", "::", "usage"}], " ", "=", " ", 
   "\"\<MarkerStyle is an option for PrestonPlot that styles species markers.\
\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MaximizeInvOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<MaximizeInvOpts is an option for GlobalESSQ that passes options to \
MaximizeInv.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MaximizeOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<MaximizeOpts is an option for various EcoEvo functions that passes \
options to Maximize.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MaxBend", "::", "usage"}], " ", "=", " ", 
   "\"\<MaxBend is an option for TrackEcoEvoEq that sets the minimum angle to \
trigger refinement.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MaxChange", "::", "usage"}], " ", "=", " ", 
   "\"\<MaxChange is an option for TrackEcoEvoEq that sets the minimum change \
to trigger refinement.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MaxPeriod", "::", "usage"}], " ", "=", " ", 
   "\"\<MaxPeriod is an option for FindEcoAttactor that sets the largest \
discrete-time period to look for a cycle.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MaxPeriodMultiplier", "::", "usage"}], " ", "=", " ", 
   "\"\<MaxPeriodMultiplier is an option for FindEcoAttractor that sets how \
many multiples of the Period to try.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MinDistance", "::", "usage"}], " ", "=", " ", 
   "\"\<MinDistance is an option for TrackEcoEvoEq that sets the threshold \
for calling two species converged.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MinPop", "::", "usage"}], " ", "=", " ", 
   "\"\<MinPop is an option for various EcoEvo functions that defines a \
minimum population size.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MinStepSize", "::", "usage"}], " ", "=", " ", 
   "\"\<MinStepSize is an option for various EcoEvo functions that specifies \
the minimum size of a single step used in generating a result.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Multipliers", "::", "usage"}], " ", "=", " ", 
   "\"\<Multipliers is an option for EcoEigenvalues that chooses Floquet \
multipliers (True) or exponents (False).\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NDInvOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<NDInvOpts is an option for various EcoEvo functions that passes \
options to NDInv.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NDOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<NDOpts is an option for various EcoEvo functions that passes options \
to ND.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NDSolveOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<NDSolveOpts is an option for various EcoEvo functions that passes \
options to NDSolve.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NIntegrateOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<NIntegrateOpts is an option for various EcoEvo functions that passes \
options to NIntegrate.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NInvOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<NInvOpts is an option for various EcoEvo functions that passes \
options to NInv.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NMaximizeOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<NMaximizeOpts is an option for GlobalESSQ that passes options to \
NMaximize.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NonESColor", "::", "usage"}], " ", "=", " ", 
   "\"\<NonESColor is an option for PlotEvoIsoclines that sets the color of \
non-ES contours if ESTest\[Rule]True.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NonFixedVars", "::", "usage"}], " ", "=", " ", 
   "\"\<NonFixedVars is an option for EcoEqns that lists variables that need \
equations.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NonInvStyle", "::", "usage"}], " ", "=", " ", 
   "\"\<NonInvStyle is an option for PlotMIP (PlotType->MIP) that defines the \
style for unsuccessful invasion.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NormalizeDistance", "::", "usage"}], " ", "=", " ", 
   "\"\<NormalizeDistance is an option for FunctionalDistinctiveness whether \
to normalize distances to one.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NSolveEcoEqOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<NSolveEcoEqOpts is an option for various EcoEvo functions that passes \
options to NSolveEcoEq.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NSolveOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<NSolveOpts is an option for various EcoEvo functions that passes \
options to NSolve.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[ScriptCapitalN]s", "::", "usage"}], " ", "=", " ", 
   "\"\<\[ScriptCapitalN]s is an option for EvoEqns that sets the number of \
species in each Guild.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NumTries", "::", "usage"}], " ", "=", " ", 
   "\"\<NumTries is an option for FindEcoAttractor's method \\\"FindRoot\\\" \
that says how many initial guesses to try.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Output", "::", "usage"}], " ", "=", " ", 
   "\"\<Output is an option for various EcoEvo functions that determines the \
type of output.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"OutputTMin", "::", "usage"}], " ", "=", " ", 
   "\"\<OutputTMin is an option for EcoSim and EcoEvoSim that that sets the \
length of the results (default=0).\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PerCapita", "::", "usage"}], " ", "=", " ", 
   "\"\<PerCapita is an option for various EcoEvo functions that divides by \
population size.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Period", "::", "usage"}], " ", "=", " ", 
   "\"\<Period is an option for EcoEvoModel that defines its period.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotEcoIsoclinesOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<PlotEcoIsoclinesOpts is an option for PlotEcoPhasePlane that passes \
options to PlotEcoIsoclines.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotEcoStreamsOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<PlotEcoStreamsOpts is an option for PlotEcoPhasePlane that passes \
options to PlotEcoStreams.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotEvoIsoclinesOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotEvoStreamsOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<PlotEvoStreamsOpts is an option for PlotEvoPhasePlane that passes \
options to PlotEvoStreams.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotMIPOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<PlotMIPOpts is an option for PlotEvoPhasePlane that passes options to \
PlotMIP.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<PlotOpts is an option for various EcoEvo functions that passes \
options to plotting functions.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotGuildOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<PlotGuildOpts is an option for PlotInv that passes options to \
PlotGuild.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotType", "::", "usage"}], " ", "=", " ", 
   "\"\<PlotType is an option for PlotPIP that chooses plot type \
(ZeroContourPlot [default], ContourPlot, Plot3D).\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotZIPOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<PlotZIPOpts is an option for PlotEvoPhasePlane that passes options to \
PlotZIP.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PointStyle", "::", "usage"}], " ", "=", " ", 
   "\"\<PointStyle is an option for PlotInv that determines the style of \
points for species.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Pop", "::", "usage"}], " ", "=", " ", 
   "\"\<Pop is an option for various EcoEvo functions that sets which \
population to use.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintTrace", "::", "usage"}], " ", "=", " ", 
   "\"\<PrintTrace is an option for various EcoEvo functions to leave a trace \
of iterations.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QSS", "::", "usage"}], " ", "=", " ", 
   "\"\<QSS is an option for *EcoEq that indicates that nonspecified \
variables should be treated as unknowns.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QSSICs", "::", "usage"}], " ", "=", " ", 
   "\"\<QSSICs is an option for Inv that sets initial conditions for solving \
for qualitative structure of the invader.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QSSMethod", "::", "usage"}], " ", "=", " ", 
   "\"\<QSSMethod is an option for Inv that selects how to solve for \
qualitative structure of the invader.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RelativeStepSize", "::", "usage"}], " ", "=", " ", 
   "\"\<RelativeStepSize is an option for NDInv that sets the relative step \
size.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RuleListDistanceOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<RuleListDistanceOpts is an option for various EcoEvo functions that \
passes options to RuleListDistance.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RV", "::", "usage"}], " ", "=", " ", 
   "\"\<RV is an option for InvSPS when called from \
ReproductiveValues.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SameThreshold", "::", "usage"}], " ", "=", " ", 
   "\"\<SameThreshold is an option for various EcoEvo functions that is the \
threshold to consider two numbers the same.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ShowSpecies", "::", "usage"}], " ", "=", " ", 
   "\"\<ShowSpecies is an option for various EcoEvo functions that specifies \
how to show species markers.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SimplifyOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<SimplifyOpts is an option for various EcoEvo functions that passes \
options to Simplify.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SimplifyResult", "::", "usage"}], " ", "=", " ", 
   "\"\<SimplifyResult is an option for various EcoEvo functions that applies \
Simplify before returning results.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Slope", "::", "usage"}], " ", "=", " ", 
   "\"\<Slope is an option for NMin and NMax that sets the steepness of the \
approximation.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SMax", "::", "usage"}], " ", "=", " ", 
   "\"\<SMax is an option for TrackRoot that sets the maximum value of the \
pseudo-arclength.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SMin", "::", "usage"}], " ", "=", " ", 
   "\"\<SMin is an option for TrackRoot that sets the minumum value of the \
pseudo-arclength.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SolveEcoEqOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<SolveEcoEqOpts is an option for various EcoEvo functions that passes \
options to SolveEcoEq.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SolveOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<SolveOpts is an option for various EcoEvo functions that passes \
options to Solve.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Species", "::", "usage"}], " ", "=", " ", 
   "\"\<Species is an option for various EcoEvo functions that sets which \
species to use.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SpeciesColors", "::", "usage"}], " ", "=", " ", 
   "\"\<SpeciesColors is an option for PlotMIP (PlotType->Outcome) that \
defines colors for each species.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"StableMarker", "::", "usage"}], " ", "=", " ", 
   "\"\<StableMarker is an option for RuleListPlot that defines the marker \
style for stable equilibria.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SubtractDiagonal", "::", "usage"}], " ", "=", " ", 
   "\"\<SubtractDiagonal is an option for PlotPIP that subtracts the diagonal \
from all invasion rates.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Switches", "::", "usage"}], " ", "=", " ", 
   "\"\<Switches is an option for EcoSimSSD that says when external mode \
switches occur.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TADVerticalScale", "::", "usage"}], " ", "=", " ", 
   "\"\<TADVerticalScale is an option for PlotInv that sets the vertical \
extent of the TAD. Should be between zero and one.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TestStability", "::", "usage"}], " ", "=", " ", 
   "\"\<TestStability is an option for FindEcoAttractor that determines \
whether to test for stable equilibria.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TestValidity", "::", "usage"}], " ", "=", " ", 
   "\"\<TestValidity is an option for FindEcoAttractor that determines \
whether to test for valid equilibria.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Tests", "::", "usage"}], " ", "=", " ", 
   "\"\<Tests is an option for TrackEcoEvoEq that gives which \
bifurcations/errors to look for.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Time", "::", "usage"}], " ", "=", " ", 
   "\"\<Time is an option for various EcoEvo functions that specifies when to \
evaluation the model.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TimeScale", "::", "usage"}], " ", "=", " ", 
   "\"\<TimeScale is an option for EcoSim that sets the overall timescale \
(default=1).\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TMax", "::", "usage"}], " ", "=", " ", 
   "\"\<TMax is an option for FindEcoAttractor that sets the maximum time for \
EcoSim.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TMax2", "::", "usage"}], " ", "=", " ", 
   "\"\<TMax2 is an option for FindEcoAttractor that sets the maximum time \
for EcoSim.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TMaxPowerMax", "::", "usage"}], " ", "=", " ", 
   "\"\<TMaxPowerMax is an option for FindEcoCycle that sets the maximum \
base-10 power of tmax to try.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TMaxPowerMin", "::", "usage"}], " ", "=", " ", 
   "\"\<TMaxPowerMin is an option for FindEcoCycle that sets the minimum \
base-10 power of tmax to try.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TMin", "::", "usage"}], " ", "=", " ", 
   "\"\<TMin specifies the starting time for EcoSim and EcoEvoSim.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TraitDistanceOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<TraitDistanceOpts is an option for various EcoEvo functions that \
passes options to TraitDistance.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TraitRange", "::", "usage"}], " ", "=", " ", 
   "\"\<TraitRange is an option for PlotGuild that sets the range of the \
y-axis.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TraitShiftRate", "::", "usage"}], " ", "=", " ", 
   "\"\<TraitShiftRate is an option for various evolutionary EcoEvo functions \
that changes into a moving frame of reference for an constantly changing \
environment.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TriggerVariable", "::", "usage"}], " ", "=", " ", 
   "\"\<TriggerVariable is an option for FindEcoCycle that sets which \
variable to focus on.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"UnstableMarker", "::", "usage"}], " ", "=", " ", 
   "\"\<UnstableMarker is an option for RuleListPlot that defines the marker \
style for unstable equilibria.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"UseSymmetry", "::", "usage"}], " ", "=", " ", 
   "\"\<UseSymmetry is an option for PlotEvoStreams & PlotEvoIsoclines that \
assumes fitness gradients are symmetric.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"V", "::", "usage"}], " ", "=", " ", 
   "\"\<V is an option to set genetic variance in various EcoEvo functions.\>\
\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"VerboseAll", "::", "usage"}], " ", "=", "  ", 
   "\"\<VerboseAll is an option for various EcoEvo functions that recursively \
turns on Verbose reporting.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WarmUp", "::", "usage"}], " ", "=", "  ", 
   "\"\<WarmUp is an option for various EcoEvo functions that numerical \
solves a model before refining.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WarmUp2", "::", "usage"}], " ", "=", " ", 
   "\"\<WarmUp2 is an option for various EcoEvo functions that numerical \
solves a model before refining.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WarmUp3", "::", "usage"}], " ", "=", " ", 
   "\"\<WarmUp3 is an option for various EcoEvo functions that numerical \
solves a model before refining.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WeightFunction", "::", "usage"}], " ", "=", " ", 
   "\"\<WeightFunction is an option for PlotGuild that defines abundance in \
structured populations.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WeightedAbundanceOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<WeightedAbundanceOpts is an option for various EcoEvo functions that \
passes options to WeightedAbundance.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WhenEventOpts", "::", "usage"}], " ", "=", " ", 
   "\"\<WhenEventOpts is an option for various EcoEvo functions that passes \
options to WhenEvent.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WhenEvents", "::", "usage"}], " ", "=", " ", 
   "\"\<WhenEvents is an option for various EcoEvo simulation functions that \
adds WhenEvents to NDSolve.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ZeroDiagonal", "::", "usage"}], " ", "=", "  ", 
   "\"\<ZeroDiagonal is an option for PlotPIP that forces Inv=0 along the \
diagonal.\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.769521014463889*^9, 3.769521027598263*^9}, {
   3.769521060218163*^9, 3.769521092045713*^9}, {3.769521146866528*^9, 
   3.769521148595381*^9}, {3.7695212223692293`*^9, 3.769521229961864*^9}, {
   3.769968450221045*^9, 3.7699684502256393`*^9}, {3.7699684881819363`*^9, 
   3.769968514033873*^9}, {3.770369225951428*^9, 3.7703692262248917`*^9}, {
   3.770721383185645*^9, 3.770721384112238*^9}, {3.7794477553765697`*^9, 
   3.7794477691941137`*^9}, {3.7794478155469637`*^9, 
   3.7794478929057503`*^9}, {3.780479791441544*^9, 3.78047983525147*^9}, {
   3.7805964069842243`*^9, 3.780596424699903*^9}, {3.784795849983173*^9, 
   3.784795852785976*^9}, 3.784795953805614*^9, 3.7847991810909157`*^9, {
   3.787575704207653*^9, 3.78757577904984*^9}, {3.789213556617317*^9, 
   3.789213584750448*^9}, {3.7892136158425503`*^9, 3.789213635510125*^9}, {
   3.79217573500473*^9, 3.792175760069179*^9}, {3.793470974467271*^9, 
   3.793471101098982*^9}, {3.7934711418285437`*^9, 3.7934711496102247`*^9}, {
   3.7940780428254337`*^9, 3.7940780917319937`*^9}, {3.794698647665121*^9, 
   3.7946986997316523`*^9}, {3.794699579892221*^9, 3.79469958746028*^9}, {
   3.81142919335376*^9, 3.811429250000923*^9}, {3.8114293492207108`*^9, 
   3.8114293536739273`*^9}, {3.8115442371953783`*^9, 3.811544266860701*^9}, {
   3.81206251864987*^9, 3.8120625666584473`*^9}, {3.8120666962897167`*^9, 
   3.8120667321464148`*^9}, {3.8121152943172007`*^9, 3.812115315648243*^9}, {
   3.812123554005641*^9, 3.8121235657751427`*^9}, {3.812124061966075*^9, 
   3.812124070873108*^9}, {3.812124251717423*^9, 3.8121243033554296`*^9}, {
   3.812124390093642*^9, 3.8121244314674*^9}, {3.813093857686223*^9, 
   3.8130938957605753`*^9}, {3.813094011571533*^9, 3.813094132579224*^9}, {
   3.8130953637224417`*^9, 3.813095394468011*^9}, {3.815177927699589*^9, 
   3.8151779841475687`*^9}, {3.8157766008986797`*^9, 3.815776604923359*^9}, {
   3.8198084720379753`*^9, 3.8198084944744253`*^9}, 3.819834932389323*^9, {
   3.829063447460703*^9, 3.8290634474757032`*^9}, {3.829150258528441*^9, 
   3.829150273423524*^9}, {3.829150303964168*^9, 3.829150319402809*^9}, 
   3.829150993084134*^9},ExpressionUUID->"d5ce3ad5-cd57-4a39-ae0b-\
4f8a7ab9b76c"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Private", "Chapter",ExpressionUUID->"13997123-8f35-4d7f-b66b-ab675c388f8f"],

Cell[CellGroupData[{

Cell["Begin", "Section",
 CellChangeTimes->{{3.7695280084947367`*^9, 3.769528009029439*^9}, {
  3.7705277906271687`*^9, 
  3.770527799944798*^9}},ExpressionUUID->"019273fb-695e-42f8-96e1-\
1690139e7929"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}]], "Code",ExpressionU\
UID->"8a98817b-ba9b-4b7f-9beb-f3a1cdcf5595"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$EcoEvoVersion", "=", "\"\<1.6.4 (October 26, 2021)\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.729988668417531*^9, 3.7299887010869617`*^9}, {
   3.731103265427038*^9, 3.731103266749578*^9}, 3.731256009056179*^9, {
   3.731539566719577*^9, 3.7315395756387997`*^9}, {3.731676050296213*^9, 
   3.731676055045661*^9}, 3.731856308422261*^9, {3.7319745428360147`*^9, 
   3.731974542893551*^9}, 3.732016997935647*^9, 3.732111662987154*^9, {
   3.7322734540983667`*^9, 3.732273457138485*^9}, {3.732471002212038*^9, 
   3.7324710024724417`*^9}, {3.7325329754141693`*^9, 
   3.7325329754827623`*^9}, {3.732702784852496*^9, 3.732702784905992*^9}, {
   3.732919313129713*^9, 3.732919313219488*^9}, {3.733175329293168*^9, 
   3.733175344872663*^9}, {3.733215724572032*^9, 3.73321572470597*^9}, {
   3.7335248275158253`*^9, 3.73352482758409*^9}, {3.734132075132328*^9, 
   3.734132075197831*^9}, {3.735156293664208*^9, 3.735156299105571*^9}, {
   3.735295730054607*^9, 3.7352957436023827`*^9}, {3.735602177257141*^9, 
   3.735602180368617*^9}, {3.736158296286994*^9, 3.736158301867852*^9}, {
   3.7369747847325*^9, 3.736974785563854*^9}, 3.7370486958794317`*^9, {
   3.7428336487529993`*^9, 3.742833652581053*^9}, {3.74612247696695*^9, 
   3.746122484362652*^9}, 3.746128650681533*^9, {3.755133698172327*^9, 
   3.755133700200118*^9}, {3.755174921910667*^9, 3.755174926482285*^9}, 
   3.7552688291584873`*^9, {3.755439993323732*^9, 3.755439996407857*^9}, {
   3.7583850804445753`*^9, 3.7583850898280277`*^9}, 3.758688507837309*^9, 
   3.758715572265476*^9, {3.7593994165682373`*^9, 3.759399417357306*^9}, {
   3.75939967294774*^9, 3.75939967536417*^9}, {3.7595756287622747`*^9, 
   3.7595756290577602`*^9}, {3.75965164545544*^9, 3.759651649500196*^9}, {
   3.761886063524077*^9, 3.761886071540374*^9}, 3.7618862403409023`*^9, {
   3.7618976750802*^9, 3.7618976767404213`*^9}, {3.7618999440285387`*^9, 
   3.761899944339712*^9}, {3.76249906073172*^9, 3.7624990641844177`*^9}, {
   3.762501508851914*^9, 3.762501509497458*^9}, {3.764079451341518*^9, 
   3.7640794555998363`*^9}, {3.7670233020840178`*^9, 3.767023304304009*^9}, {
   3.767861861222883*^9, 3.767861861305275*^9}, {3.7689252687151213`*^9, 
   3.7689252711413116`*^9}, {3.769484841904586*^9, 3.769484846008655*^9}, {
   3.769794171414915*^9, 3.76979417148066*^9}, {3.769837659187148*^9, 
   3.769837666718541*^9}, {3.769839095681821*^9, 3.7698390957906322`*^9}, {
   3.770022619961705*^9, 3.770022620064398*^9}, {3.7703691971638737`*^9, 
   3.770369197243023*^9}, {3.770537200945509*^9, 3.770537201981593*^9}, 
   3.770553505271253*^9, 3.770559519755847*^9, {3.770721551388967*^9, 
   3.770721554095049*^9}, {3.770820473866982*^9, 3.7708204822565536`*^9}, {
   3.770973306634756*^9, 3.770973310889488*^9}, {3.774672166936881*^9, 
   3.7746721768001432`*^9}, {3.776617903527317*^9, 3.776617906054324*^9}, {
   3.777370092916008*^9, 3.777370092969968*^9}, {3.7774515656622257`*^9, 
   3.7774515657281*^9}, 3.777539931643852*^9, {3.778255340925912*^9, 
   3.7782553424224*^9}, {3.778320236174124*^9, 3.778320240060669*^9}, {
   3.778393838105845*^9, 3.7783938381441183`*^9}, 3.778474382040135*^9, 
   3.778486167047545*^9, {3.779357685707408*^9, 3.779357696068025*^9}, 
   3.7793733751912107`*^9, {3.7794384219631357`*^9, 3.7794384244650173`*^9}, {
   3.779516878974104*^9, 3.779516881356257*^9}, {3.780289565399549*^9, 
   3.78028957019842*^9}, {3.780401879128992*^9, 3.7804018794395523`*^9}, {
   3.780479842222735*^9, 3.780479844978261*^9}, {3.780632397534101*^9, 
   3.780632397701194*^9}, {3.7807176600582247`*^9, 3.780717672260418*^9}, 
   3.780728152263625*^9, {3.78262898168615*^9, 3.7826289906843977`*^9}, {
   3.782991420700954*^9, 3.7829914207762938`*^9}, {3.783068057198447*^9, 
   3.7830680596195183`*^9}, {3.7847345071775312`*^9, 3.784734526223428*^9}, 
   3.784806435199383*^9, 3.785579792960084*^9, {3.786022389145587*^9, 
   3.786022393601466*^9}, {3.786081337884714*^9, 3.786081340010922*^9}, {
   3.7862068670432453`*^9, 3.7862068682308903`*^9}, {3.786256757755967*^9, 
   3.7862567578228607`*^9}, 3.786259001429407*^9, {3.78749890383882*^9, 
   3.7874989066206408`*^9}, {3.787501918081263*^9, 3.7875019224397163`*^9}, 
   3.787585766494405*^9, {3.7876803206408157`*^9, 3.78768032080696*^9}, {
   3.787747527366568*^9, 3.787747544201725*^9}, 3.787754897081771*^9, {
   3.7888944436748857`*^9, 3.788894452590313*^9}, {3.788941776430852*^9, 
   3.788941776497553*^9}, {3.7891545199019814`*^9, 3.7891545234616947`*^9}, {
   3.789213139375317*^9, 3.789213139440114*^9}, {3.7920819314932957`*^9, 
   3.7920819324262743`*^9}, 3.7921755627295837`*^9, {3.793471161336112*^9, 
   3.79347116167067*^9}, 3.793528045974657*^9, {3.7939806987238207`*^9, 
   3.793980701777787*^9}, 3.794075971558424*^9, 3.794151034585043*^9, 
   3.794161541156323*^9, {3.7946062960116987`*^9, 3.794606300897588*^9}, {
   3.794703613732079*^9, 3.794703619962335*^9}, {3.7951204067857113`*^9, 
   3.795120411291061*^9}, {3.797858742595131*^9, 3.7978587468106823`*^9}, 
   3.798031793414765*^9, {3.798128335659583*^9, 3.798128335905949*^9}, {
   3.798201145878727*^9, 3.798201146021694*^9}, {3.798297384254917*^9, 
   3.798297384279057*^9}, 3.798800111174417*^9, {3.799015108197608*^9, 
   3.7990151082601347`*^9}, {3.7998787732169437`*^9, 3.799878773248232*^9}, {
   3.800127598067256*^9, 3.800127601362872*^9}, 3.8002738147615128`*^9, {
   3.8005580069644527`*^9, 3.8005580143869467`*^9}, {3.804272514288712*^9, 
   3.80427252102312*^9}, {3.807044130322027*^9, 3.807044131927568*^9}, {
   3.8072294092434483`*^9, 3.807229409321899*^9}, 3.807308185163473*^9, {
   3.8075421853697157`*^9, 3.807542188272868*^9}, {3.807626591917157*^9, 
   3.807626591988323*^9}, {3.807714244995998*^9, 3.807714245450863*^9}, 
   3.807732219040288*^9, {3.80999339372287*^9, 3.809993401178892*^9}, {
   3.811424288546996*^9, 3.811424290554666*^9}, {3.811503070109288*^9, 
   3.8115030701574993`*^9}, {3.81193616209378*^9, 3.8119361622094383`*^9}, {
   3.812024853264042*^9, 3.812024853334084*^9}, {3.812190796477261*^9, 
   3.812190796527608*^9}, 3.8121916266485853`*^9, 3.812233114447919*^9, {
   3.81229838685194*^9, 3.8122983892150917`*^9}, {3.813009412581025*^9, 
   3.8130094133057404`*^9}, {3.813445075678467*^9, 3.8134450768745127`*^9}, {
   3.814358249299529*^9, 3.814358249534753*^9}, {3.815178028131188*^9, 
   3.8151780281769876`*^9}, {3.8154137421275167`*^9, 3.815413742758329*^9}, {
   3.8155092301547327`*^9, 3.815509230223534*^9}, {3.815741996295313*^9, 
   3.815741998032105*^9}, {3.817763270561026*^9, 3.817763277558714*^9}, {
   3.818332607519874*^9, 3.8183326075769777`*^9}, {3.819799126412303*^9, 
   3.8197991325304193`*^9}, {3.8202358852732697`*^9, 3.820235885359496*^9}, {
   3.821393181054862*^9, 3.821393186097621*^9}, {3.828783649679215*^9, 
   3.8287836526056957`*^9}, {3.829169146590249*^9, 3.829169147228671*^9}, {
   3.829235595636648*^9, 3.829235597451804*^9}, {3.83077520000562*^9, 
   3.8307752054698353`*^9}, {3.833983561416453*^9, 3.833983566224613*^9}, {
   3.834060642878459*^9, 3.834060652056584*^9}, {3.834061104812861*^9, 
   3.834061104924395*^9}, {3.834153607320072*^9, 3.83415361154291*^9}, {
   3.844260675263432*^9, 3.844260679608357*^9}, {3.844261177455081*^9, 
   3.8442611775742397`*^9}},ExpressionUUID->"dc46b9ba-4da1-4106-86c0-\
38a2eeedc8b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"modelloaded", "=", "False"}], ";"}]], "Code",
 CellChangeTimes->{3.769760705126873*^9, 
  3.7704382649167147`*^9},ExpressionUUID->"e8c83d7b-6824-48d3-a22c-\
848ed466391f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Templates", "Section",
 CellChangeTimes->{{3.811424673743167*^9, 3.811424674470663*^9}, {
  3.811426311201849*^9, 
  3.8114263138964157`*^9}},ExpressionUUID->"36ec8172-2759-4c4f-bbbf-\
7ec1b61e94ed"],

Cell[CellGroupData[{

Cell["NewFunction", "Subsection",
 CellChangeTimes->{{3.8114246778702393`*^9, 
  3.81142467928655*^9}},ExpressionUUID->"4c6dfa9f-5686-4e31-a72b-\
c98e70af3897"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.8114249477060347`*^9, 
  3.81142494937716*^9}},ExpressionUUID->"b022898c-4729-4de3-a71d-\
e367010affa6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NewFunction", "::", "usage"}], "=", "\n", 
   "\"\<NewFunction[\!\(\*StyleBox[\"args\", \"TI\"]\)] is a new \
function.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.8114249553402452`*^9, 
  3.811424973337554*^9}},ExpressionUUID->"301c229c-a435-42d8-a582-\
0b455a4e8b78"]
}, Closed]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.811424976609585*^9, 
  3.8114249777616463`*^9}},ExpressionUUID->"e10ed2e7-b9bf-4280-95f4-\
1598446e8ebc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NewFunction", "[", 
    RowBox[{"args_", ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<NewFunction\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose"}], "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "}"}], ",", 
     "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "NewFunction", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"method", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Method", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "NewFunction", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"plotopts", "=", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "NewFunction", "]"}]}], "}"}], "]"}], 
           ",", 
           RowBox[{"Options", "[", "Plot", "]"}]}], "]"}]}], ";", "\n", "\n", 
        
        RowBox[{"Return", "[", "ret", "]"}]}]}], "\n", "]"}]}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.811424979913665*^9, 3.811424990033875*^9}, {
  3.811425083627582*^9, 3.811425087507594*^9}, {3.811425416943074*^9, 
  3.811425525871992*^9}, {3.811426248257588*^9, 3.811426262569021*^9}, {
  3.8198081571920843`*^9, 3.819808173751852*^9}, {3.819808232031569*^9, 
  3.819808240810288*^9}},ExpressionUUID->"3f31bbd5-959d-4267-8d73-\
9188e3ad55b3"]
}, Closed]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.8114250257542963`*^9, 
  3.811425026489006*^9}},ExpressionUUID->"2249bb7b-0353-4674-a89a-\
ce3e5ef8b3f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "NewFunction", "]"}], "=", 
   RowBox[{"{", "\n", "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.811425031218261*^9, 
  3.8114250390264063`*^9}},ExpressionUUID->"50350193-4a61-4f4a-a063-\
d08d13307908"]
}, Closed]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",
 CellChangeTimes->{{3.8114250690986547`*^9, 
  3.811425070882545*^9}},ExpressionUUID->"b52a2f4b-2726-4246-a067-\
584b14c22927"],

Cell[BoxData[""], "Code",
 CellChangeTimes->{{3.811425073898582*^9, 3.8114250768827133`*^9}, {
  3.8114255295233173`*^9, 
  3.811425531374476*^9}},ExpressionUUID->"f224eae1-b06a-480f-b180-\
d3aa84f5f70c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Messages", "Subsubsection",
 CellChangeTimes->{{3.811679114620624*^9, 
  3.811679115963749*^9}},ExpressionUUID->"360a228e-a18d-4146-a99f-\
10bd93323847"],

Cell[BoxData[""], "Code",ExpressionUUID->"a302eddd-fa75-4a1e-9c4b-455da198ef4c"]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Default Options", "Section",ExpressionUUID->"84bfba9b-ce84-4b9e-b0ff-5f972631c3d5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"NDSolve", ",", 
    RowBox[{"MaxSteps", "\[Rule]", "Infinity"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"NIntegrate", ",", 
      RowBox[{"MaxRecursion", "\[Rule]", "30"}]}], "]"}], ";"}], 
   "*)"}]}]}], "Code",
 CellChangeTimes->{{3.688409470220842*^9, 3.688409470706532*^9}, {
   3.688409536315002*^9, 3.6884095366243896`*^9}, 3.6884670893312187`*^9, {
   3.691174982071932*^9, 
   3.6911749839680033`*^9}},ExpressionUUID->"2759cad6-4a29-43ad-9086-\
0dda9ed37fc3"]
}, Closed]],

Cell[CellGroupData[{

Cell["General Utilities", "Section",
 CellChangeTimes->{{3.694784683478237*^9, 
  3.694784685102195*^9}},ExpressionUUID->"c6e46a86-2613-4fa3-951d-\
1d7af9be1c7d"],

Cell[CellGroupData[{

Cell["RuleListSet", "Subsection",
 CellChangeTimes->{{3.820419756453909*^9, 3.8204197581067467`*^9}, {
  3.828957576672998*^9, 
  3.828957597291478*^9}},ExpressionUUID->"b2ae2846-6fe1-430d-a952-\
7ec9b07614b7"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.8204197617759037`*^9, 
  3.820419765128533*^9}},ExpressionUUID->"bd40ddae-6f98-41e4-b5f8-\
73d49a4752ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleListSet", "::", "usage"}], "=", 
   "\"\<RuleListSet[\!\(\*StyleBox[\"rulelist\", \"TI\"]\)] assigns variables \
according to \!\(\*StyleBox[\"rulelist\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.82041976705519*^9, 3.820419771395802*^9}, {
  3.8204203606862907`*^9, 3.8204203776723547`*^9}, {3.828957579232061*^9, 
  3.828957589177836*^9}, {3.829866162065693*^9, 
  3.8298661624654427`*^9}},ExpressionUUID->"534951f8-6d59-4081-8195-\
b2369c9d5f3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.820419774319541*^9, 
  3.820419775440783*^9}},ExpressionUUID->"b54b695a-e4cc-424d-ab06-\
cd3611617702"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"by", " ", 
      RowBox[{"J", ".", "M", "."}]}], " ", "<", 
     RowBox[{"https", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
        "questions"}], "/", "238689"}], "/"}], ">"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"SetAttributes", "[", 
     RowBox[{"RuleListSet", ",", "HoldAll"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RuleListSet", "[", 
     RowBox[{"rulelist", ":", 
      RowBox[{"{", "__Rule", "}"}]}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Set", "@@@", 
       RowBox[{"Unevaluated", "[", "rulelist", "]"}]}], ";"}], 
     ")"}]}]}]}]], "Code",
 CellChangeTimes->{
  3.820419777017454*^9, {3.820420345483571*^9, 3.8204203555232573`*^9}, {
   3.828957592697809*^9, 
   3.828957594273686*^9}},ExpressionUUID->"a6bc6d96-e781-454e-a2d5-\
41f3ca7339a0"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["InequalityToInterval", "Subsection",
 CellChangeTimes->{{3.820235377103765*^9, 
  3.820235381647006*^9}},ExpressionUUID->"da0bee4b-2e24-403d-898d-\
0a98ea8c1413"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.82023538442986*^9, 
  3.820235384923744*^9}},ExpressionUUID->"c4099b62-057a-4305-bbc1-\
463e1fa356f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"InequalityToInverval", "::", "usage"}], "=", 
   "\"\<InequalityToInverval converts an inequality to an Interval.\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.820235388332823*^9, 3.820235396231711*^9}, {
  3.828961279325284*^9, 
  3.828961292476288*^9}},ExpressionUUID->"3ee3238b-32b1-408b-8653-\
4f18e24fe113"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.820235398556745*^9, 
  3.82023540086629*^9}},ExpressionUUID->"7f807275-199e-4641-9294-\
0d798d9ff6d1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"based", " ", "on"}], " ", "<", 
     RowBox[{"https", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", "a"}],
        "/", "32473"}], "/"}], ">", " ", 
     RowBox[{"by", " ", "Kuba"}]}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"InequalityToInterval", "[", "ineq_", "]"}], ":=", "\n", 
    RowBox[{"Replace", "[", "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"Fold", "[", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"ReplaceAll", "[", 
          RowBox[{"#", ",", "#2"}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
        "\t\t", 
        RowBox[{"ineq", "//", "LogicalExpand"}], ",", "\[IndentingNewLine]", 
        "\t\t", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"i_", "[", 
            RowBox[{
             RowBox[{"s_", "?", "NumericQ"}], ",", "f_"}], "]"}], 
           "\[RuleDelayed]", 
           RowBox[{"Reduce", "[", 
            RowBox[{"i", "[", 
             RowBox[{"s", ",", "f"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i_", "[", 
             RowBox[{"s_", ",", 
              RowBox[{"f_", "?", "NumericQ"}]}], "]"}], "\[RuleDelayed]", 
            RowBox[{"Which", "[", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Greater", ",", "GreaterEqual"}], "}"}], ",", "i"}], 
               "]"}], ",", 
              RowBox[{"Interval", "[", 
               RowBox[{"{", 
                RowBox[{"f", ",", "Infinity"}], "}"}], "]"}], ",", 
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Less", ",", "LessEqual"}], "}"}], ",", "i"}], "]"}],
               ",", 
              RowBox[{"Interval", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "Infinity"}], ",", "f"}], "}"}], "]"}]}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Or", "\[Rule]", "IntervalUnion"}], ",", 
            RowBox[{"And", "\[Rule]", "IntervalIntersection"}]}], "}"}]}], 
         "}"}]}], "\[IndentingNewLine]", "\t", "]"}], ",", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"{", 
       RowBox[{"var_Symbol", "\[Rule]", 
        RowBox[{"Interval", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], "]"}]}],
        "}"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.8202354025462008`*^9, 3.82023542363943*^9}, {
  3.8202356457608757`*^9, 
  3.8202356572723293`*^9}},ExpressionUUID->"5c56787a-8dac-45df-b32e-\
cbaf5a48c029"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["SymmetrizeMatrix", "Subsection",
 CellChangeTimes->{{3.8161299317435837`*^9, 
  3.816129936256662*^9}},ExpressionUUID->"c131596a-93ef-4741-9802-\
e1ca20f02741"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.816129952976131*^9, 
  3.816129953550935*^9}},ExpressionUUID->"43ccff73-ad45-4706-90dd-\
01db4553ddf9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SymmetrizeMatrix", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.816129956406835*^9, 
  3.816129967382338*^9}},ExpressionUUID->"8ed837d2-8b22-4d89-a923-\
5c1c2535b46d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.816129969279832*^9, 
  3.816129970879643*^9}},ExpressionUUID->"f1019e74-3be3-4478-b437-\
c1d67e90d07c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SymmetrizeMatrix", "[", 
    RowBox[{"mat_", "?", "MatrixQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"UpperTriangularize", "[", "mat", "]"}], "+", 
    RowBox[{"Transpose", "[", 
     RowBox[{"UpperTriangularize", "[", 
      RowBox[{"mat", ",", "1"}], "]"}], "]"}]}]}], ";"}]], "Code",
 CellChangeTimes->{{3.816129938121413*^9, 
  3.8161299453200083`*^9}},ExpressionUUID->"9bc1f076-da4a-4b96-83c3-\
16bf394fcec4"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["NMin / NMax", "Subsection",
 CellChangeTimes->{{3.792174638015773*^9, 
  3.792174646303691*^9}},ExpressionUUID->"5341ce70-23a8-4509-877f-\
69a9287b7027"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.792174768521167*^9, 
  3.792174769080752*^9}},ExpressionUUID->"8e6976ee-08da-49ad-9c3f-\
cbdfa75a500c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"NMin", "::", "usage"}], "=", 
   "\"\<NMin[\!\(\*StyleBox[\"x\", \"TI\"]\), \!\(\*StyleBox[\"y\", \
\"TI\"]\)] is a numerical approximation to Min[\!\(\*StyleBox[\"x\", \
\"TI\"]\), \!\(\*StyleBox[\"y\", \"TI\"]\)].\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NMax", "::", "usage"}], "=", 
   "\"\<NMax[\!\(\*StyleBox[\"x\", \"TI\"]\), \!\(\*StyleBox[\"y\", \
\"TI\"]\)] is a numerical approximation to Max[\!\(\*StyleBox[\"x\", \
\"TI\"]\), \!\(\*StyleBox[\"y\", \"TI\"]\)].\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.792174772304646*^9, 3.7921748083606443`*^9}, {
  3.79383148015103*^9, 
  3.793831484814122*^9}},ExpressionUUID->"82c65188-36c1-4cba-8142-\
74a8d5ba2ee3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7921748160497723`*^9, 
  3.792174817217339*^9}},ExpressionUUID->"94fbb2fd-682c-4cb9-9ecd-\
f8a6c331d36f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NMin", "[", 
    RowBox[{"x_", ",", "y_", ",", "opts___"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "slope", "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"slope", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Slope", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "NMin", "]"}]}], "}"}], "]"}]}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Pi]", 
          RowBox[{"(", 
           RowBox[{"x", "+", "y"}], ")"}]}], "-", 
         RowBox[{"2.", 
          RowBox[{"(", 
           RowBox[{"x", "-", "y"}], ")"}], 
          RowBox[{"ArcTan", "[", 
           RowBox[{"slope", 
            RowBox[{"(", 
             RowBox[{"x", "-", "y"}], ")"}]}], "]"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "\[Pi]"}], ")"}]}]}]}], "\n", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.658852435082062*^9, 3.6588524661195374`*^9}, {
  3.658852565540998*^9, 3.6588526047077503`*^9}, {3.792168521921644*^9, 
  3.792168523962113*^9}, {3.79216900773358*^9, 3.7921690081338253`*^9}, {
  3.792169860758362*^9, 3.7921698840776854`*^9}, {3.7921748227389803`*^9, 
  3.792174837059319*^9}, {3.792175837717606*^9, 3.792175907163149*^9}, {
  3.792175966413061*^9, 
  3.792175968643524*^9}},ExpressionUUID->"45b60309-d8bf-45d1-822c-\
70515e8faeb8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NMax", "[", 
    RowBox[{"x_", ",", "y_", ",", "opts___"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "slope", "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"slope", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Slope", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "NMax", "]"}]}], "}"}], "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Pi]", 
          RowBox[{"(", 
           RowBox[{"x", "+", "y"}], ")"}]}], "+", 
         RowBox[{"2.", 
          RowBox[{"(", 
           RowBox[{"y", "-", "x"}], ")"}], 
          RowBox[{"ArcTan", "[", 
           RowBox[{"slope", 
            RowBox[{"(", 
             RowBox[{"y", "-", "x"}], ")"}]}], "]"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "\[Pi]"}], ")"}]}]}]}], "\n", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.792167473240745*^9, 3.792167484472969*^9}, {
   3.792167980325534*^9, 3.792168016255721*^9}, {3.79216825003176*^9, 
   3.792168313275754*^9}, {3.792168551788185*^9, 3.792168551903345*^9}, {
   3.792168726372802*^9, 3.7921687516205053`*^9}, 3.7921690182348337`*^9, {
   3.79216986662615*^9, 3.792169887038933*^9}, {3.792174821300446*^9, 
   3.792174842076151*^9}, {3.792175898005265*^9, 3.792175918643179*^9}, {
   3.7921759708127604`*^9, 
   3.7921759935557203`*^9}},ExpressionUUID->"a7124a4b-218f-4fde-9782-\
1cc49b434fd4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",
 CellChangeTimes->{{3.7921751191798763`*^9, 
  3.7921751197649117`*^9}},ExpressionUUID->"cd48e07c-c9e3-47fa-99d9-\
44de9a5d73b2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"NMin", "[", 
    RowBox[{"list_List", ",", "opts___"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "list", "]"}], "\[Equal]", "2"}], ",", 
     RowBox[{"NMin", "[", 
      RowBox[{
       RowBox[{"list", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
        ",", 
       RowBox[{"list", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
        ",", "opts"}], "]"}], ",", 
     RowBox[{"Message", "[", 
      RowBox[{"NMin", "::", "nottwo"}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NMax", "[", 
    RowBox[{"list_List", ",", "opts___"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "list", "]"}], "\[Equal]", "2"}], ",", 
     RowBox[{"NMax", "[", 
      RowBox[{
       RowBox[{"list", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
        ",", 
       RowBox[{"list", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
        ",", "opts"}], "]"}], ",", 
     RowBox[{"Message", "[", 
      RowBox[{"NMax", "::", "nottwo"}], "]"}]}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.792175122691386*^9, 3.79217518540764*^9}, {
  3.792176218823183*^9, 3.792176223189619*^9}, {3.79413724035774*^9, 
  3.7941372403591413`*^9}},ExpressionUUID->"5ac20f16-a0bf-416f-a8b7-\
2009ca6bf7db"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.792174844681765*^9, 
  3.792174845353183*^9}},ExpressionUUID->"f57a4bd1-a2df-4501-990f-\
035ef46a4307"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "NMin", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"Slope", "\[Rule]", "10000"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "NMax", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"Slope", "\[Rule]", "10000"}], "}"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.792174846410084*^9, 
  3.792174849586217*^9}},ExpressionUUID->"0ddaa4ea-7aa0-4438-a5d3-\
27c35273016e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Messages", "Subsubsection",
 CellChangeTimes->{{3.792175203124354*^9, 
  3.792175204284136*^9}},ExpressionUUID->"eebf1c5c-228c-4a7c-be33-\
b7aeb568fd89"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"NMin", "::", "nottwo"}], "=", 
   "\"\<NMin only works on lists of two values.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NMax", "::", "nottwo"}], "=", 
   "\"\<NMax only works on lists of two values.\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.792175208028164*^9, 
  3.792175232856534*^9}},ExpressionUUID->"b8a46a42-4a3d-4082-a7ce-\
80033a9d2b6c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Reinterpolation", "Subsection",
 CellChangeTimes->{{3.782988061005927*^9, 
  3.7829880650005198`*^9}},ExpressionUUID->"cdb57a9c-ebff-4e86-9999-\
147f047d19e3"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.7829881206581182`*^9, 
  3.782988122223402*^9}},ExpressionUUID->"ccc9d3c6-fc6f-4f83-a9ad-\
5a7bed3df2da"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Reinterpolation", "::", "usage"}], "=", 
   "\"\<Reinterpolation[\!\(\*StyleBox[\"f\", \"TI\"]\)] reinterpolates a \
function containing one or more InterpolatingFunctions.\>\""}], ";"}]], "Code",\

 CellChangeTimes->{{3.782988127379388*^9, 
  3.782988194638617*^9}},ExpressionUUID->"695096e4-dd40-408f-ae2b-\
687296713401"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.782988123866335*^9, 
  3.782988124993032*^9}},ExpressionUUID->"f3b6685f-aa4c-4bb3-afc0-\
c571c0eebe55"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Reinterpolation", "[", 
    RowBox[{"f_", ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{"(*", " ", "options", " ", "*)"}], "\n", 
      RowBox[{"interpolationopts", ",", "interpolationpoints", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "xmin", ",", 
       "xmax", ",", "ifs", ",", "grid", ",", "tmp"}], "}"}], ",", "\n", "\t", 
     "\n", 
     RowBox[{"(*", " ", 
      RowBox[{"handle", " ", "options"}], " ", "*)"}], "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"interpolationopts", "=", 
       RowBox[{"FilterRules", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "Reinterpolation", "]"}]}], "}"}], "]"}], 
         ",", 
         RowBox[{"Options", "[", "Interpolation", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"interpolationpoints", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"InterpolationPoints", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "Reinterpolation", "]"}]}], "}"}], 
          "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\n", 
      RowBox[{"ifs", "=", 
       RowBox[{"Cases", "[", 
        RowBox[{"f", ",", "_InterpolatingFunction", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ifs", "\[Equal]", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"Return", "[", "f", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"interpolationpoints", "===", "Automatic"}], ",", "\n", "\t", 
        
        RowBox[{"grid", "=", 
         RowBox[{"Union", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Through", "[", 
             RowBox[{"ifs", "[", "\"\<Grid\>\"", "]"}], "]"}], ",", "1"}], 
           "]"}], "]"}]}], ",", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"using", " ", 
          RowBox[{"ifs", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], " ", "because",
           " ", 
          RowBox[{
           RowBox[{
           "ifs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "[", "\"\<Domain\>\"", "]"}], " ", "fails", " ", 
          RowBox[{"sometimes", "?", 
           RowBox[{"!", " ", 
            RowBox[{
             RowBox[{"-", " ", "see"}], " ", "\"\<wtf domain.nb\>\""}]}]}]}], 
         " ", "*)"}], "\n", "\t", 
        RowBox[{"(*", 
         RowBox[{"grid", "=", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Subdivide", "[", 
              RowBox[{
               RowBox[{"Sequence", "@@", "#"}], ",", "interpolationpoints"}], 
              "]"}], "&"}], "/@", 
            RowBox[{"ifs", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
         "*)"}], "\n", "\t", 
        StyleBox[
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"xmin", ",", "xmax"}], "}"}], "=", 
            RowBox[{"ifs", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}]}], 
           ";"}], "\n", "\t", 
          RowBox[{
           RowBox[{"grid", "=", 
            RowBox[{"Table", "[", 
             RowBox[{"x", ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "xmin", ",", "xmax", ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"xmax", "-", "xmin"}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"interpolationpoints", "-", "1"}], ")"}]}]}], 
               "}"}]}], "]"}]}], ";"}]}],
         Background->RGBColor[1, 0.5, 0.5]]}], "\n", "]"}], ";", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<grid=\>\"", ",", "grid"}], "]"}], ";"}], "*)"}], "\n", 
      "\n", 
      RowBox[{"Quiet", "[", "\n", "\t", 
       RowBox[{
        RowBox[{"tmp", "=", 
         RowBox[{"Interpolation", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Sequence", "@@", "val"}], ",", 
               RowBox[{"f", "/.", 
                RowBox[{"(", 
                 RowBox[{"if_InterpolatingFunction", "\[Rule]", 
                  RowBox[{"if", "[", 
                   RowBox[{"Sequence", "@@", "val"}], "]"}]}], ")"}]}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"val", ",", "grid"}], "}"}]}], "]"}], ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"Sequence", "@@", "interpolationopts"}], "]"}]}], "]"}]}],
         ",", "\n", "\t", 
        RowBox[{"{", 
         RowBox[{"InterpolatingFunction", "::", "dmval"}], "}"}]}], "]"}], 
      ";", "\n", "\n", 
      StyleBox[
       RowBox[{
        RowBox[{"tmp", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
         "=", 
        RowBox[{"ifs", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}],
       Background->RGBColor[1, 0.5, 0.5]], 
      StyleBox[";",
       Background->RGBColor[1, 0.5, 0.5]], 
      StyleBox[" ",
       Background->RGBColor[1, 0.5, 0.5]], 
      StyleBox[
       RowBox[{"(*", " ", 
        RowBox[{"fix", " ", "domain"}], " ", "*)"}],
       Background->RGBColor[1, 0.5, 0.5]], 
      StyleBox["\n",
       Background->RGBColor[1, 0.5, 0.5]], "\n", 
      RowBox[{"Return", "[", "tmp", "]"}]}]}], "\[IndentingNewLine]", "]"}]}],
   ";"}]], "Code",
 CellChangeTimes->{{3.782988079997802*^9, 3.782988092534563*^9}, {
   3.784732715969939*^9, 3.784732718455331*^9}, {3.784732914081176*^9, 
   3.78473291490557*^9}, {3.7847330004158297`*^9, 3.784733000572249*^9}, {
   3.798801334576931*^9, 3.7988013467924643`*^9}, {3.798804747899366*^9, 
   3.798804766971941*^9}, {3.798805082238496*^9, 3.7988051241025753`*^9}, {
   3.7988053380646353`*^9, 3.798805360489352*^9}, {3.798805604380218*^9, 
   3.798805605462636*^9}, {3.798805648018655*^9, 3.7988056869151154`*^9}, {
   3.7988057800470057`*^9, 3.798805799397027*^9}, {3.7988067014015427`*^9, 
   3.798806708589616*^9}, {3.798806757151376*^9, 3.7988067697519093`*^9}, {
   3.798807283011372*^9, 3.798807286210596*^9}, {3.798811805553258*^9, 
   3.7988118465286837`*^9}, {3.798812357128758*^9, 3.798812358358865*^9}, {
   3.798816319869275*^9, 3.798816321917424*^9}, {3.798816352143407*^9, 
   3.798816365597548*^9}, {3.798816541312085*^9, 3.798816541504568*^9}, {
   3.79881697298847*^9, 3.798816978827042*^9}, {3.798817037844515*^9, 
   3.798817038844564*^9}, {3.798818340712715*^9, 3.7988183744088373`*^9}, {
   3.798818453801496*^9, 3.798818492778575*^9}, {3.812102818560308*^9, 
   3.8121028202552958`*^9}, {3.812102903426998*^9, 3.812102951882617*^9}, {
   3.812103004587606*^9, 3.81210301128434*^9}, {3.8121030791444473`*^9, 
   3.812103116712007*^9}, {3.812103148833198*^9, 3.812103154656461*^9}, {
   3.8121032892544947`*^9, 3.812103302828328*^9}, {3.812103399249021*^9, 
   3.8121034218006687`*^9}, {3.829152097404381*^9, 3.829152114059376*^9}, {
   3.8291521581637*^9, 3.829152165131336*^9}, {3.829152232620058*^9, 
   3.829152235667944*^9}, {3.8291523885189543`*^9, 3.829152401718151*^9}, {
   3.829152489977054*^9, 3.829152529423524*^9}, {3.829152560113212*^9, 
   3.8291525602635803`*^9}, {3.829326416203388*^9, 3.829326419354203*^9}, {
   3.8293266383503227`*^9, 3.829326658134015*^9}, {3.829326990682048*^9, 
   3.829326996386159*^9}, {3.829327071627244*^9, 3.829327151163775*^9}, {
   3.829327185893412*^9, 3.8293272448848133`*^9}, 3.8293436581573343`*^9, 
   3.829344108723585*^9},ExpressionUUID->"96d88b1c-f196-46b9-9b4d-\
5be39056a87b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.7988056914660788`*^9, 
  3.7988056937386103`*^9}},ExpressionUUID->"14d2c502-9066-4eda-8a2d-\
d7654580cf8a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "Reinterpolation", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"InterpolationPoints", "\[Rule]", "Automatic"}], "}"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.798805695714473*^9, 
  3.798805718619419*^9}},ExpressionUUID->"3d1662ae-04f9-4f27-9a85-\
61687ab0cc43"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["MakeInterpolatingFunctionPeriodic", "Subsection",
 CellChangeTimes->{{3.815413684063908*^9, 
  3.815413689809108*^9}},ExpressionUUID->"4fe9b444-e6a9-4f11-b7e5-\
107816d7c8da"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.815413765457252*^9, 
  3.815413765933066*^9}},ExpressionUUID->"5c93c609-2414-4bc5-888d-\
2094793b28ac"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MakeInterpolatingFunctionPeriodic", "::", "usage"}], "=", 
   "\"\<MakeInterpolatingFunctionPeriodic[\!\(\*StyleBox[\"if\", \"TI\"]\)] \
makes InterpolatingFunction \!\(\*StyleBox[\"if\", \"TI\"]\) periodic.\>\""}],
   ";"}]], "Code",
 CellChangeTimes->{{3.8154137685337763`*^9, 
  3.8154138093104*^9}},ExpressionUUID->"3042d780-1c05-4d82-994e-b2baa9e808ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.815413760846533*^9, 
  3.815413762605719*^9}},ExpressionUUID->"c96a5181-8e87-48ef-9f8e-\
d9e57c084a53"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
   "MakeInterpolatingFunctionPeriodic", "[", "if_InterpolatingFunction", 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"dorder", "=", 
        RowBox[{"if", "\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}]}], ",", "\n", 
       "\t", 
       RowBox[{"ngrid", "=", 
        RowBox[{"if", "\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
     "\n", "\t", 
     RowBox[{"Which", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"if", "\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "1"}], "\[RightDoubleBracket]"}], "===", 
        "Developer`PackedArrayForm"}], ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{"if", ",", 
         RowBox[{"{", "\[IndentingNewLine]", "\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"2", ",", "7"}], "}"}], "\[Rule]", 
            RowBox[{"{", "1", "}"}]}], ",", " ", 
           RowBox[{"(*", " ", 
            RowBox[{"set", " ", "periodic", " ", "flag"}], " ", "*)"}], 
           "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"2", ",", "4"}], "}"}], "\[Rule]", 
            RowBox[{"ngrid", "-", "1"}]}], " ", ",", 
           RowBox[{"(*", " ", 
            RowBox[{"decrease", " ", "ngrid", " ", "by", " ", "1"}], " ", 
            "*)"}], "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"4", ",", "2"}], "}"}], "\[Rule]", 
            RowBox[{"Drop", "[", 
             RowBox[{
              RowBox[{"if", "\[LeftDoubleBracket]", 
               RowBox[{"4", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{"-", "1"}]}], "]"}]}], ",", " ", 
           RowBox[{"(*", " ", 
            RowBox[{"remove", " ", "last", " ", "abscissa"}], " ", "*)"}], 
           "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"4", ",", "3"}], "}"}], "\[Rule]", 
            RowBox[{"Drop", "[", 
             RowBox[{
              RowBox[{"if", "\[LeftDoubleBracket]", 
               RowBox[{"4", ",", "3"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{
               RowBox[{"-", "dorder"}], "-", "1"}]}], "]"}]}]}], " ", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"remove", " ", "last", " ", "dorder"}], "+", 
            RowBox[{"1", " ", "values"}]}], " ", "*)"}], 
          "\[IndentingNewLine]", "\t\t", "}"}]}], "]"}], "\n", "\t", ",", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"ListQ", "[", 
        RowBox[{"if", "\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], ",", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{"if", ",", 
         RowBox[{"{", "\[IndentingNewLine]", "\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"2", ",", "7"}], "}"}], "\[Rule]", 
            RowBox[{"{", "1", "}"}]}], ",", " ", 
           RowBox[{"(*", " ", 
            RowBox[{"set", " ", "periodic", " ", "flag"}], " ", "*)"}], 
           "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"2", ",", "4"}], "}"}], "\[Rule]", 
            RowBox[{"ngrid", "-", "1"}]}], ",", " ", 
           RowBox[{"(*", " ", 
            RowBox[{"decrease", " ", "ngrid", " ", "by", " ", "1"}], " ", 
            "*)"}], "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{
            RowBox[{"{", "4", "}"}], "\[Rule]", 
            RowBox[{"Drop", "[", 
             RowBox[{
              RowBox[{
              "if", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{"-", "1"}]}], "]"}]}]}], " ", 
          RowBox[{"(*", " ", 
           RowBox[{"remove", " ", "last", " ", "point"}], " ", "*)"}], 
          "\[IndentingNewLine]", "\t\t", "}"}]}], "]"}]}], 
      "\[IndentingNewLine]", "\t", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.815413691676259*^9, 
  3.8154137478784723`*^9}},ExpressionUUID->"b186fa8e-59f1-4f67-b72d-\
a77affaf17c6"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"modified", " ", "from"}], " ", "<", 
     RowBox[{"https", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", "a"}],
        "/", "235451"}], "/", "6358"}], ">", " ", 
     RowBox[{"by", " ", "MichaelE2"}]}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
    "MakeInterpolatingFunctionPeriodic", "[", "if_InterpolatingFunction", 
     "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "periodify", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"periodify", "[", "list_List", "]"}], ":=", 
        RowBox[{"Append", "[", 
         RowBox[{"list", ",", 
          RowBox[{"First", "@", "list"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"Interpolation", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Transpose", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"if", "[", "\"\<Grid\>\"", "]"}], ",", "\n", "\t\t", 
            RowBox[{"periodify", "@", 
             RowBox[{"Most", "@", 
              RowBox[{"if", "[", "\"\<ValuesOnGrid\>\"", "]"}]}]}], ",", "\n",
             "\t\t", 
            RowBox[{"periodify", "@", 
             RowBox[{"Most", "@", 
              RowBox[{
               RowBox[{
                RowBox[{"Derivative", "[", "1", "]"}], "[", "if", "]"}], "[", 
               "\"\<ValuesOnGrid\>\"", "]"}]}]}], ",", "\n", "\t\t", 
            RowBox[{"periodify", "@", 
             RowBox[{"Most", "@", 
              RowBox[{
               RowBox[{
                RowBox[{"Derivative", "[", "2", "]"}], "[", "if", "]"}], "[", 
               "\"\<ValuesOnGrid\>\"", "]"}]}]}]}], "}"}]}], ",", "\n", 
         "\t\t", 
         RowBox[{"PeriodicInterpolation", "\[Rule]", "True"}]}], "]"}]}]}], 
     "\n", "]"}]}], ";"}], "*)"}]], "Code",
 CellChangeTimes->{{3.815413691676259*^9, 3.8154137478784723`*^9}, {
  3.815508917592463*^9, 3.815508943550778*^9}, {3.8155091038162127`*^9, 
  3.815509201393136*^9}},ExpressionUUID->"1a2eeb87-1362-4ee0-85c7-\
fae26ac541a4"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["SimplifyLogE", "Subsection",
 CellChangeTimes->{{3.7624197234357862`*^9, 
  3.762419731054233*^9}},ExpressionUUID->"f938d8ea-97b3-4d04-87d9-\
4b4fdd332ef8"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769492591707922*^9, 
  3.769492592184589*^9}},ExpressionUUID->"bf00cf4f-bc28-49b4-8402-\
d92c0f97d30a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SimplifyLogE", "::", "usage"}], "=", "\n", 
   "\"\<SimplifyLogE is a replacement rule that simplifies \
Log[\!\(\*StyleBox[\"a\", \"TI\"]\) \!\(\*SuperscriptBox[\"E\", \
StyleBox[\"x\", \"TI\"]]\)] to Log[\!\(\*StyleBox[\"a\", \
\"TI\"]\)]+\!\(\*StyleBox[\"x\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769182114000453*^9, 3.769182114619495*^9}, 
   3.769184336811337*^9},ExpressionUUID->"33bc3188-bbf0-4d80-b6bc-\
fd5e1aa3e500"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.769493598662615*^9, 
  3.769493600340061*^9}},ExpressionUUID->"e483b895-cd5b-4a16-b94e-\
d20903863dc6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SimplifyLogE", "=", 
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a_", ":", "1"}], ")"}], " ", 
      RowBox[{"E", "^", "x_"}]}], "]"}], "\[RuleDelayed]", 
    RowBox[{"x", "+", 
     RowBox[{"Log", "[", "a", "]"}]}]}]}], ";"}]], "Code",
 CellChangeTimes->{{3.762420066105344*^9, 3.762420067511405*^9}, 
   3.769182150772813*^9},ExpressionUUID->"8cec39d5-8928-4dae-8d94-\
30a08a9e6a14"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["SortRuleList", "Subsection",
 CellChangeTimes->{{3.732393367234774*^9, 3.7323933694466743`*^9}, 
   3.769182368396294*^9},ExpressionUUID->"bd57a215-d2d7-4f1f-b388-\
db849219b02a"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769492634849496*^9, 
  3.7694926352895327`*^9}},ExpressionUUID->"f9900e28-a610-455f-b444-\
e0f6e67527df"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SortRuleList", "::", "usage"}], "=", "\n", 
   "\"\<SortRuleList[\!\(\*StyleBox[\"rulelist\", \"TI\"]\), \
\!\(\*StyleBox[\"vars\", \"TI\"]\)] sorts \!\(\*StyleBox[\"rulelist\", \
\"TI\"]\) in order of \!\(\*StyleBox[\"vars\", \"TI\"]\).\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.7691822543752823`*^9, 3.769182255390819*^9}, {
   3.76918236839965*^9, 3.769182368400625*^9}, 
   3.769184348840373*^9},ExpressionUUID->"368a1195-61d5-4db8-8286-\
f83f93e3a170"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.769493529198039*^9, 
  3.7694935307173023`*^9}},ExpressionUUID->"69c02a13-eea9-4460-ba17-\
92a22d16646d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SortRuleList", "[", 
    RowBox[{
     RowBox[{"eq_", "?", "RuleListQ"}], ",", "vars_List"}], "]"}], ":=", 
   RowBox[{"SortBy", "[", 
    RowBox[{"eq", ",", 
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"vars", ",", 
        RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
        "]"}], "&"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.732393956404003*^9, 3.7323939732097816`*^9}, {
   3.7558761168989487`*^9, 3.755876119186849*^9}, 
   3.7691823684015913`*^9},ExpressionUUID->"1d59565d-be69-4532-8b6c-\
71b21b736404"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"make", " ", "Listable"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"SortRuleList", "[", 
     RowBox[{
      RowBox[{"eqs_", "?", "RuleListListQ"}], ",", "vars_List"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"SortRuleList", "[", 
       RowBox[{"#", ",", "vars"}], "]"}], "&"}], "/@", "eqs"}]}], 
   ";"}]}]], "Code",
 CellChangeTimes->{{3.7323939583728037`*^9, 3.732394018003927*^9}, 
   3.7323940634252377`*^9, {3.732394165323626*^9, 3.732394172143612*^9}, {
   3.769182368403818*^9, 3.7691823684045877`*^9}, {3.769492650378652*^9, 
   3.769492654214376*^9}},ExpressionUUID->"5b01a4e6-e011-45ab-9778-\
161dada16e51"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["OrderedComplement", "Subsection",
 CellChangeTimes->{{3.732273167164168*^9, 3.732273171121632*^9}, 
   3.769182447204582*^9},ExpressionUUID->"1a765064-2e50-496a-a347-\
95bc9daa64cf"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.7694926820462303`*^9, 
  3.76949268247642*^9}},ExpressionUUID->"6cc88fb7-43db-4033-a7d5-\
77cb571f9fb3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"OrderedComplement", "::", "usage"}], "=", "\n", 
   "\"\<OrderedComplement[\!\(\*SubscriptBox[StyleBox[\"e\", \"TI\"], \
StyleBox[\"all\", \"TI\"]]\),\!\(\*SubscriptBox[StyleBox[\"e\", \"TI\"], \
StyleBox[\"1\", \"TR\"]]\),\!\(\*SubscriptBox[StyleBox[\"e\", \"TI\"], \
StyleBox[\"2\", \"TR\"]]\),\!\(\*StyleBox[\"\[Ellipsis]\", \"TR\"]\)] gives \
the elements in \!\(\*StyleBox[SubscriptBox[\"e\", \"all\"], \"TI\"]\) that \
are not in any of the \!\(\*StyleBox[SubscriptBox[\"e\", \"i\"], \"TI\"]\), \
without sorting the result.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.7691824246195717`*^9, 3.769182447208819*^9}, 
   3.769184353221692*^9, {3.77048047396004*^9, 
   3.770480496941165*^9}},ExpressionUUID->"68215932-51ec-4d62-bd6d-\
2184ba53cb54"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.769493512907662*^9, 
  3.7694935141447163`*^9}},ExpressionUUID->"eea1bc9b-7d71-4636-8d20-\
79b1931c226a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"by", " ", 
      RowBox[{"Mr", ".", " ", "Wizard"}]}], " ", "<", 
     RowBox[{"https", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", "a"}],
        "/", "30434"}], "/", "6358"}], ">"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"OrderedComplement", "[", 
     RowBox[{"all_List", ",", " ", "i__List"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Join", "@", "##"}], "]"}], "~", "Drop", "~", 
       RowBox[{"Length", "[", "#", "]"}]}], "&"}], "[", 
     RowBox[{
      RowBox[{"Union", "@", "i"}], ",", 
      RowBox[{"DeleteDuplicates", "@", "all"}]}], "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.732273173584607*^9, 3.7322731942506723`*^9}, 
   3.7691824472121267`*^9, {3.770530842342827*^9, 
   3.770530866133185*^9}},ExpressionUUID->"4d560fdc-8667-462d-b335-\
f7abf781f998"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["RuleListComplement", "Subsection",
 CellChangeTimes->{{3.770530580866767*^9, 
  3.77053058440138*^9}},ExpressionUUID->"a27464e3-b50a-42e5-8b54-\
0caef39668ff"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.770530588115823*^9, 
  3.77053058858488*^9}},ExpressionUUID->"9be9affa-9239-41c4-829e-\
f71be8a1bf93"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleListComplement", "::", "usage"}], "=", "\n", 
   "\"\<RuleListComplement[\!\(\*SubscriptBox[StyleBox[\"e\", \"TI\"], \
StyleBox[\"all\", \"TI\"]]\),\!\(\*SubscriptBox[StyleBox[\"e\", \"TI\"], \
StyleBox[\"1\", \"TR\"]]\),\!\(\*SubscriptBox[StyleBox[\"e\", \"TI\"], \
StyleBox[\"2\", \"TR\"]]\),\!\(\*StyleBox[\"\[Ellipsis]\", \"TR\"]\)] gives \
the elements in \!\(\*StyleBox[SubscriptBox[\"e\", \"all\"], \"TI\"]\) whose \
variables don't match any of the \!\(\*StyleBox[SubscriptBox[\"e\", \"i\"], \
\"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.770530590897882*^9, 3.770530605119323*^9}, {
  3.770530775631266*^9, 3.770530775914432*^9}, {3.770530940591023*^9, 
  3.7705309852674294`*^9}},ExpressionUUID->"0957d330-4fb8-4386-848e-\
033c066d8e51"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.770530778374395*^9, 
  3.770530779696261*^9}},ExpressionUUID->"6571a0f0-fe18-4880-b717-\
716cdf3c709f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleListComplement", "[", 
    RowBox[{
     RowBox[{"all_", "?", "RuleListQ"}], ",", 
     RowBox[{"i__", "?", "RuleListQ"}]}], "]"}], ":=", 
   RowBox[{"Complement", "[", 
    RowBox[{"all", ",", "i", ",", 
     RowBox[{"SameTest", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"First", "[", "#1", "]"}], "===", 
         RowBox[{"First", "[", "#2", "]"}]}], "&"}], ")"}]}]}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.770530782816119*^9, 3.770530787139141*^9}, {
  3.7705308192034082`*^9, 3.770530840428545*^9}, {3.770530871046094*^9, 
  3.77053089941247*^9}},ExpressionUUID->"a5013849-3990-40fe-b70a-\
dc8a2634c153"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["EqSort", "Subsection",
 CellChangeTimes->{{3.7322209102178507`*^9, 
  3.732220912867989*^9}},ExpressionUUID->"9a2e4391-0ae3-4d79-a550-\
f6d77d86f535"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769492700990641*^9, 
  3.769492701440023*^9}},ExpressionUUID->"676595b1-d57c-4289-b270-\
fb1483042b3c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EqSort", "::", "usage"}], "=", "\n", 
   "\"\<EqSort[\!\(\*StyleBox[\"rulelist\", \"TI\"]\)] sorts \
\!\(\*StyleBox[\"rulelist\", \"TI\"]\) in order of increasing number of \
non-zero entries.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769182598523527*^9, 3.769182632696303*^9}, 
   3.7691843306120377`*^9, {3.769184364837718*^9, 
   3.7691843844503717`*^9}},ExpressionUUID->"d9463442-68c3-498e-874c-\
960e73fa741d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.769493498826498*^9, 
  3.769493501005454*^9}},ExpressionUUID->"4ab1ee25-378b-4275-8ef0-\
2d28032c4e5d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"EqSort", "[", 
      RowBox[{"x_", "?", "RuleListListQ"}], "]"}], ":=", 
     RowBox[{"SortBy", "[", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"Reverse", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Abs", "[", "#", "]"}], "<", "$MachineEpsilon"}], ",", 
              "0", ",", "1"}], "]"}], "&"}], ",", 
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}], 
         "]"}], "&"}]}], "]"}]}], ";"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"EqSort", "[", 
     RowBox[{"x_", "?", "RuleListListQ"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "ind", "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"ind", "[", "y_", "]"}], ":=", 
        RowBox[{"Reverse", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{
                "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                "]"}], "<", "$MachineEpsilon"}], ",", "0", ",", "1", ",", 
              "1"}], "]"}], "&"}], ",", "y"}], "]"}], "]"}]}], ";", 
       RowBox[{"SortBy", "[", 
        RowBox[{"x", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Total", "[", 
             RowBox[{"ind", "[", "#", "]"}], "]"}], "&"}], ",", 
           RowBox[{
            RowBox[{"ind", "[", "#", "]"}], "&"}]}], "}"}]}], "]"}]}]}], 
     "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.7322209657956743`*^9, 3.732221005202965*^9}, 
   3.732468271760029*^9, {3.829330880556514*^9, 3.829330894367071*^9}, {
   3.830123188040058*^9, 
   3.830123233159195*^9}},ExpressionUUID->"135dc384-f51d-4ac4-bb27-\
6fcf21bb3896"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EqSort", "[", 
    RowBox[{"x_", "?", "RuleListQ"}], "]"}], ":=", "x"}], ";"}]], "Code",
 CellChangeTimes->{{3.732468275148405*^9, 
  3.7324682928885107`*^9}},ExpressionUUID->"cef3dd18-4194-4d36-a342-\
707b4263afce"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["RHS / LHS", "Subsection",
 CellChangeTimes->{{3.731805711068192*^9, 3.73180571128703*^9}, {
  3.758525021552339*^9, 
  3.758525022730298*^9}},ExpressionUUID->"ecb66b53-cfa6-4697-812e-\
bc076490c199"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.7694927215217743`*^9, 
  3.769492721951798*^9}},ExpressionUUID->"04c7ed91-76b0-490e-8f6e-\
26afae546b6c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RHS", "::", "usage"}], "=", "\n", 
    "\"\<RHS is a replacement rule that returns the right-hand side of \
equations.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"LHS", "::", "usage"}], "=", "\n", 
   "\"\<LHS is a replacement rule that returns the left-hand side of \
equations.\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.769182710481683*^9, 3.769182712990396*^9}, {
   3.76918439653028*^9, 3.769184398312769*^9}, 
   3.7691848942197847`*^9},ExpressionUUID->"93dc19d4-4d84-48f0-a49e-\
b4827b226b30"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.769493476979538*^9, 
  3.7694934802640133`*^9}},ExpressionUUID->"bfa6b35d-4ba2-4753-92f9-\
e63c1d980625"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RHS", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"_", "\[Equal]", "rhs_"}], "\[Rule]", "rhs"}], ")"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"LHS", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"lhs_", "\[Equal]", "_"}], "\[Rule]", "lhs"}], ")"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.731805713076478*^9, 3.7318057150564203`*^9}, {
   3.7318057853709087`*^9, 3.731805786130253*^9}, 
   3.769493472120537*^9},ExpressionUUID->"bed86304-a18b-43df-9f1f-\
72a014f1d036"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["ReplaceRHS / ReplaceLHS", "Subsection",
 CellChangeTimes->{{3.759236012006619*^9, 
  3.759236015331753*^9}},ExpressionUUID->"390595aa-b239-4e7f-948a-\
6de9ecc85885"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769492759464301*^9, 
  3.769492759972149*^9}},ExpressionUUID->"0835d0fe-b82a-4d6d-aafa-\
9e09c1de0542"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReplaceRHS", "::", "usage"}], "=", 
    "\"\<\nReplaceRHS[\!\(\*StyleBox[\"eqn\", \"TI\"]\), \
\!\(\*StyleBox[\"rule\", \"TI\"]\)] applies replacement rule \
\!\(\*StyleBox[\"rule\", \"TI\"]\) to the right-hand side of \
\!\(\*StyleBox[\"eqn\", \"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ReplaceLHS", "::", "usage"}], "=", 
   "\"\<\nReplaceLHS[\!\(\*StyleBox[\"eqn\", \"TI\"]\), \!\(\*StyleBox[\"rule\
\", \"TI\"]\)] applies replacement rule \!\(\*StyleBox[\"rule\", \"TI\"]\) to \
the left-hand side of \!\(\*StyleBox[\"eqn\", \"TI\"]\).\>\""}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.769182775608864*^9, 3.769182777385973*^9}, {
   3.769184407296369*^9, 3.7691844091556396`*^9}, 
   3.7691848892161818`*^9},ExpressionUUID->"3608718d-d12b-4db3-b950-\
79ee3247f2ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694934538031673`*^9, 
  3.769493456546545*^9}},ExpressionUUID->"3bc01381-d581-4ec4-b91d-\
2a8fdefc97c9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ReplaceRHS", "[", 
    RowBox[{"eqn_", ",", "rules_"}], "]"}], ":=", 
   RowBox[{"eqn", "//.", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"relop_", "[", 
       RowBox[{"lhs_", ",", "rhs_"}], "]"}], "\[RuleDelayed]", 
      RowBox[{"relop", "[", 
       RowBox[{"lhs", ",", 
        RowBox[{"rhs", "/.", 
         RowBox[{"Flatten", "@", "rules"}]}]}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReplaceLHS", "[", 
     RowBox[{"eqn_", ",", "rules_"}], "]"}], ":=", 
    RowBox[{"eqn", "//.", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"relop_", "[", 
        RowBox[{"lhs_", ",", "rhs_"}], "]"}], "\[RuleDelayed]", 
       RowBox[{"relop", "[", 
        RowBox[{
         RowBox[{"lhs", "/.", 
          RowBox[{"Flatten", "@", "rules"}]}], ",", "rhs"}], "]"}]}], 
      ")"}]}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"make", " ", "Listable", " ", "over", " ", "eqns"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ReplaceRHS", "[", 
    RowBox[{"eqns_List", ",", "rules_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"ReplaceRHS", "[", 
      RowBox[{"#", ",", "rules"}], "]"}], "&"}], "/@", "eqns"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ReplaceLHS", "[", 
    RowBox[{"eqns_List", ",", "rules_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"ReplaceLHS", "[", 
      RowBox[{"#", ",", "rules"}], "]"}], "&"}], "/@", "eqns"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.759235030871192*^9, 3.7592350419827414`*^9}, {
  3.7592351836776323`*^9, 3.759235190379067*^9}, {3.759235268857779*^9, 
  3.759235282552392*^9}, {3.759235680637436*^9, 3.759235699842043*^9}, {
  3.75923725574949*^9, 3.759237257521983*^9}, {3.7592377090685253`*^9, 
  3.75923778489093*^9}, {3.759237891768417*^9, 3.759237909748558*^9}, {
  3.759238572550476*^9, 3.759238608701079*^9}, {3.759241431681322*^9, 
  3.759241436207963*^9}, {3.769492764923244*^9, 
  3.769492777266684*^9}},ExpressionUUID->"c0274e4a-eea6-401d-921a-\
48d5a616025a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Eq", "Subsection",
 CellChangeTimes->{{3.731534730247963*^9, 3.731534732817395*^9}, {
  3.731978628347039*^9, 
  3.731978628679408*^9}},ExpressionUUID->"b716ced8-7083-460e-b2cd-\
6e76022767b8"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.7694928177370167`*^9, 
  3.769492818196859*^9}},ExpressionUUID->"b00138ef-8a6d-4af1-a6ab-\
fc1cd7dca114"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Eq", "::", "usage"}], "=", "\n", 
   "\"\<Eq is a replacement rule that sets time derivatives to zero and next \
timesteps equal to current timesteps.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.76918284855653*^9, 3.769182878466691*^9}, 
   3.769184413409552*^9},ExpressionUUID->"ec630fe7-0d26-4e05-b8fa-\
15025b76a8cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.769493441491364*^9, 
  3.769493442999605*^9}},ExpressionUUID->"1d7f3bba-0ccd-46bb-975c-\
899993ff54de"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Eq", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"var_", "[", 
       RowBox[{"t", "+", "1"}], "]"}], "\[Rule]", 
      RowBox[{"var", "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"var_", "'"}], "[", "t", "]"}], "\[Rule]", "0"}]}], "}"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.73153474117796*^9, 3.731534745507389*^9}, {
  3.731978630401441*^9, 3.7319787013789053`*^9}, {3.73197873142943*^9, 
  3.731978785056303*^9}, {3.7319791364502907`*^9, 
  3.731979139653769*^9}},ExpressionUUID->"59f1e247-aa00-464f-9c9e-\
d6c9561629dd"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["ZeroLHS", "Subsection",
 CellChangeTimes->{{3.731534730247963*^9, 
  3.731534732817395*^9}},ExpressionUUID->"8fdf514b-2771-41f2-9378-\
68b9623b71c4"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769492826888542*^9, 
  3.76949283104595*^9}},ExpressionUUID->"3fdda70c-f6a8-469c-bb36-\
8b7e9a40961a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ZeroLHS", "::", "usage"}], "=", "\n", 
   "\"\<ZeroLHS is a replacement rule that sets the left hand side of \
equations equal to zero.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.7691829319139957`*^9, 3.769182934137335*^9}, 
   3.7691844174765472`*^9},ExpressionUUID->"1189f0f5-12a7-4957-bcda-\
e769eb8377b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.769493428141397*^9, 
  3.7694934297401447`*^9}},ExpressionUUID->"9aa50687-df0c-498a-95c4-\
9518cd6c1e0e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ZeroLHS", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"lhs_", "\[Equal]", "rhs_"}], "\[Rule]", 
     RowBox[{"0", "\[Equal]", "rhs"}]}], ")"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.73153474117796*^9, 
  3.731534745507389*^9}},ExpressionUUID->"5d21935b-a30d-4e00-984d-\
555b3e0d434d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["ZeroVector", "Subsection",
 CellChangeTimes->{{3.731255177147348*^9, 3.731255178298004*^9}, {
  3.73125565986614*^9, 
  3.731255660056098*^9}},ExpressionUUID->"c59ae084-3047-4351-ae6f-\
8cac1c03d1ef"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.7694928395981007`*^9, 
  3.769492840133226*^9}},ExpressionUUID->"5d3d7e19-3d4e-48b8-aef4-\
7db633e6276c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ZeroVector", "::", "usage"}], "=", 
   "\"\<ZeroVector[\!\(\*StyleBox[\"d\", \"TI\"]\)] returns a \!\(\*StyleBox[\
\"d\", \"TI\"]\)-dimensional zero vector.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769182978913679*^9, 
  3.7691829804131804`*^9}},ExpressionUUID->"8b1f7ae1-6c64-48af-af96-\
44b5194382e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.769493413268772*^9, 
  3.769493414949885*^9}},ExpressionUUID->"afabb8d1-c92b-40a9-b9a0-\
8f26c8b5c2dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ZeroVector", "[", "dim_Integer", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "dim"}], "}"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.731257951619882*^9, 3.731257965186193*^9}, {
  3.731284066812043*^9, 3.731284067451668*^9}, {3.731422825727209*^9, 
  3.731422829506637*^9}},ExpressionUUID->"ca29d02d-c681-4c33-bbb7-\
1f4d08e6a8d5"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["SubscriptAdd", "Subsection",
 CellChangeTimes->{{3.728404058511156*^9, 
  3.7284040607261477`*^9}},ExpressionUUID->"7db0ec15-5a6c-4a24-b5f2-\
29ade1f98e51"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769492850476029*^9, 
  3.769492850921853*^9}},ExpressionUUID->"b4044ab6-750a-49ec-a23c-\
858f7359220f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SubscriptAdd", "::", "usage"}], "=", "\n", 
   "\"\<SubscriptAdd[\!\(\*StyleBox[\"expr\", \"TI\"]\), \!\(\*StyleBox[\"val\
\", \"TI\"]\)] adds \!\(\*StyleBox[\"val\", \"TI\"]\) (default=1) to all \
subscripts in \!\(\*StyleBox[\"expr\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769183033449059*^9, 3.769183042995695*^9}, 
   3.76918442259947*^9},ExpressionUUID->"92f489af-eec8-44de-b959-\
ea4ff0cf78d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.769493401656082*^9, 
  3.7694934038216476`*^9}},ExpressionUUID->"f160dedd-9e22-486d-a64d-\
a5a6bcb8ad5b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SubscriptAdd", "[", 
    RowBox[{"x_Subscript", ",", 
     RowBox[{"add_Integer", ":", "1"}]}], "]"}], ":=", 
   RowBox[{"x", "/.", 
    RowBox[{
     RowBox[{"Subscript", "[", 
      RowBox[{"var_", ",", "sub_"}], "]"}], "\[Rule]", 
     RowBox[{"Subscript", "[", 
      RowBox[{"var", ",", 
       RowBox[{"sub", "+", "add"}]}], "]"}]}]}]}], ";"}]], "Code",
 CellChangeTimes->{{3.735236152673773*^9, 
  3.735236169680941*^9}},ExpressionUUID->"74b5025c-cb9e-4418-a462-\
353d3b27370d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["DeleteSubscripts", "Subsection",
 CellChangeTimes->{{3.735236066786107*^9, 3.735236084000763*^9}, 
   3.788941874475203*^9},ExpressionUUID->"02c78071-8521-4aa0-ac00-\
047b7300c66c"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769492862899363*^9, 
  3.7694928633673353`*^9}},ExpressionUUID->"8266bb9b-71a7-4b89-a7c5-\
58b9b22cb3e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DeleteSubscripts", "::", "usage"}], "=", "\n", 
   "\"\<DeleteSubscripts[\!\(\*StyleBox[\"expr\", \"TI\"]\)] removes all \
subscripts from \!\(\*StyleBox[\"expr\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769183084681975*^9, 3.769183086310093*^9}, 
   3.7691844293191547`*^9, {3.788941876464913*^9, 
   3.7889418823231792`*^9}},ExpressionUUID->"59da8aaa-544b-41da-b390-\
63990167bf46"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.769493295756082*^9, 
  3.769493310242673*^9}},ExpressionUUID->"7baf2a34-3f2b-4327-8a7a-\
22e02fa1b2c2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DeleteSubscripts", "[", "x_", "]"}], ":=", 
   RowBox[{"x", "/.", 
    RowBox[{
     RowBox[{"Subscript", "[", 
      RowBox[{"var_", ",", "_"}], "]"}], "\[Rule]", "var"}]}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.735236072544808*^9, 3.735236120057292*^9}, {
   3.788941815672307*^9, 3.7889418161485367`*^9}, 
   3.7889421158028603`*^9},ExpressionUUID->"72c5aa19-6cb3-403d-ba98-\
cb4d787d5b93"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["ZeroSubscripts", "Subsection",
 CellChangeTimes->{{3.735236133002781*^9, 3.735236136617321*^9}, 
   3.7889419726220512`*^9},ExpressionUUID->"87770f6b-4cf8-4888-a237-\
8a1c35bb9f73"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769492893851843*^9, 
  3.7694928951863737`*^9}},ExpressionUUID->"50d5c22d-bef2-46c4-8c3a-\
d96dca1a175c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ZeroSubscripts", "::", "usage"}], "=", "\n", 
   "\"\<ZeroSubscripts[\!\(\*StyleBox[\"expr\", \"TI\"]\)] sets the subscript \
in \!\(\*StyleBox[\"expr\", \"TI\"]\) to zero.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769183132133947*^9, 3.7691831390686617`*^9}, 
   3.769184433448139*^9, {3.788941956901896*^9, 
   3.78894197262956*^9}},ExpressionUUID->"1f73026d-8ad1-44ee-b15e-\
12914cc9dcf0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.769493279035664*^9, 3.7694932845881987`*^9}, 
   3.7694933274393272`*^9},ExpressionUUID->"e5fc4e0e-4b69-46ba-9ae8-\
f09275474502"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ZeroSubscripts", "[", "x_", "]"}], ":=", 
   RowBox[{"x", "/.", 
    RowBox[{
     RowBox[{"Subscript", "[", 
      RowBox[{"var_", ",", "sub_"}], "]"}], "\[Rule]", 
     RowBox[{"Subscript", "[", 
      RowBox[{"var", ",", "0"}], "]"}]}]}]}], ";"}]], "Code",
 CellChangeTimes->{{3.735236072544808*^9, 3.7352361420086412`*^9}, {
  3.7352361767487173`*^9, 3.735236181091713*^9}, {3.7889419552188473`*^9, 
  3.788941972631425*^9}},ExpressionUUID->"d9bcfd98-fd85-422f-90bb-\
699711afe270"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["HighlightChanges", "Subsection",
 CellChangeTimes->{{3.728398720984153*^9, 
  3.728398724609352*^9}},ExpressionUUID->"ee2cd685-c5b9-463a-85ac-\
9986fc32a8a5"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.7694929050291986`*^9, 
  3.76949290547584*^9}},ExpressionUUID->"8b24a0e0-e916-4995-911c-\
b9315df0326b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"HighlightChanges", "::", "usage"}], "=", "\n", 
   "\"\<HighlightChanges[True] turns on change highlighting. \
HighlightChanges[False] turns it off.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769183192982731*^9, 3.769183194424725*^9}, 
   3.769184440200244*^9},ExpressionUUID->"7bf88c2e-0a40-4a20-830e-\
3ca5a2f7d149"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.769493266047406*^9, 3.769493266540266*^9}, 
   3.769493328235124*^9},ExpressionUUID->"77699c0a-d3cf-4434-ba46-\
022606ade4fe"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"HighlightChanges", "[", "bool_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"bool", "\[Equal]", "True"}], ",", "\n", "\t", 
     RowBox[{"SetOptions", "[", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
       RowBox[{"{", "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{"CellProlog", "\[RuleDelayed]", 
          RowBox[{"(", "\[IndentingNewLine]", "\t\t", 
           RowBox[{
            RowBox[{"SelectionMove", "[", 
             RowBox[{
              RowBox[{"EvaluationCell", "[", "]"}], ",", "All", ",", 
              "GeneratedCell"}], "]"}], ";", "\[IndentingNewLine]", "\t\t", 
            RowBox[{"$oldoutput", "=", 
             RowBox[{
              RowBox[{"ToExpression", "@*", "First"}], "/@", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"NotebookRead", "[", 
                 RowBox[{"SelectedCells", "[", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
                   "\[Equal]", "\"\<Output\>\""}], "&"}]}], "]"}]}]}]}], 
           "\[IndentingNewLine]", "\t", ")"}]}], ",", "\[IndentingNewLine]", 
         "\t", 
         RowBox[{"CellEpilog", "\[RuleDelayed]", 
          RowBox[{"(", "\[IndentingNewLine]", "\t", 
           RowBox[{
            RowBox[{"SelectionMove", "[", 
             RowBox[{
              RowBox[{"EvaluationCell", "[", "]"}], ",", "All", ",", 
              "GeneratedCell"}], "]"}], ";", "\[IndentingNewLine]", "\t", 
            RowBox[{"$newoutput", "=", 
             RowBox[{
              RowBox[{"ToExpression", "@*", "First"}], "/@", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"NotebookRead", "[", 
                 RowBox[{"SelectedCells", "[", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
                   "\[Equal]", "\"\<Output\>\""}], "&"}]}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", "\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"$oldoutput", "/.", 
                 RowBox[{"x_Graphics", "\[RuleDelayed]", 
                  RowBox[{"ImageData", "@", 
                   RowBox[{"Rasterize", "[", 
                    RowBox[{"x", ",", "\"\<Image\>\""}], "]"}]}]}]}], ")"}], "=!=", 
               RowBox[{"(", 
                RowBox[{"$newoutput", "/.", 
                 RowBox[{"x_Graphics", "\[RuleDelayed]", 
                  RowBox[{"ImageData", "@", 
                   RowBox[{"Rasterize", "[", 
                    RowBox[{"x", ",", "\"\<Image\>\""}], "]"}]}]}]}], ")"}]}],
               ",", "\[IndentingNewLine]", "\t", 
              RowBox[{"Print", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Output change:\>\"", ",", "Red"}], "]"}], ",", 
                "\"\<\\nold=\>\"", ",", "$oldoutput"}], "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", "\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "$newoutput", "]"}], "\[NotEqual]", 
               "0"}], ",", 
              RowBox[{"SelectionMove", "[", 
               RowBox[{
                RowBox[{"EvaluationCell", "[", "]"}], ",", "After", ",", 
                "CellGroup", ",", "2"}], "]"}], ",", 
              RowBox[{"SelectionMove", "[", 
               RowBox[{
                RowBox[{"EvaluationCell", "[", "]"}], ",", "After", ",", 
                "Cell"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", "\t", 
           ")"}]}]}], "\[IndentingNewLine]", "\t", "}"}]}], "]"}], ",", "\n", 
     "\t", 
     RowBox[{"SetOptions", "[", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"CellProlog", "\[Rule]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"CellEpilog", "\[Rule]", 
          RowBox[{"{", "}"}]}]}], "}"}]}], "]"}]}], "\n", "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.7283987271801977`*^9, 3.728398735329288*^9}, {
  3.72839877329758*^9, 3.728398858515293*^9}, {3.7940927094496517`*^9, 
  3.7940927151966457`*^9}, {3.794092769498496*^9, 
  3.794092774398161*^9}},ExpressionUUID->"c177f39e-fad6-4e59-86f8-\
cf71e5fa2db5"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["ExtractColors", "Subsection",
 CellChangeTimes->{{3.728324944071022*^9, 
  3.7283249462047043`*^9}},ExpressionUUID->"698ddb06-bc17-4e89-b137-\
36f19bd15b13"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769492913451597*^9, 
  3.769492913975463*^9}},ExpressionUUID->"64358a67-cc36-49f1-906e-\
83f8fb9d76b9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExtractColors", "::", "usage"}], "=", "\n", 
   "\"\<ExtractColor[\!\(\*StyleBox[\"list\", \"TI\"]\)] extracts colors from \
\!\(\*StyleBox[\"list\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769183214059329*^9, 3.769183216231738*^9}, 
   3.769184446442828*^9},ExpressionUUID->"e30b011f-23c0-4473-9805-\
3031d7c35a21"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.769493248387833*^9, 3.769493248734873*^9}, 
   3.769493329163784*^9},ExpressionUUID->"e4d29719-8b04-4fc2-8d1a-\
719f5fd53190"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExtractColors", "[", "list_List", "]"}], ":=", 
  RowBox[{"Select", "[", 
   RowBox[{"list", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"ColorQ", "[", "#", "]"}], "||", 
      RowBox[{
       RowBox[{"Head", "[", "#", "]"}], "\[Equal]", "Opacity"}]}], "&"}]}], 
   "]"}]}]], "Code",ExpressionUUID->"9aa46028-d3b9-4296-832a-0ad68b9b18e3"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["AxisFlip", "Subsection",
 CellChangeTimes->{{3.726748059343292*^9, 3.726748062873076*^9}, 
   3.76918331215996*^9},ExpressionUUID->"27319d79-58c6-4356-b3ca-\
963d1e6dd888"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.7694929230628223`*^9, 
  3.769492924016*^9}},ExpressionUUID->"c71b70f5-6793-49e8-aae6-78d5b503d8ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AxisFlip", "::", "usage"}], "=", "\n", 
   "\"\<AxisFlip exchanges axes on a Graphics object.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769183293475113*^9, 3.769183333465561*^9}, 
   3.7691844509455633`*^9},ExpressionUUID->"79541290-4ae3-4a3e-b1f1-\
da94460cc5a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.769493240350369*^9, 3.769493240720524*^9}, 
   3.769493329774686*^9},ExpressionUUID->"381c613d-25b0-4c99-8b53-\
47c8da1a92d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"by", " ", 
      RowBox[{"Mr", ".", " ", "Wizard"}]}], " ", "<", 
     RowBox[{"https", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", "a"}],
        "/", "18669"}], "/", "6358"}], ">"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"AxisFlip", "=", 
    RowBox[{
     RowBox[{"#", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"x_Line", "|", "x_GraphicsComplex"}], "\[RuleDelayed]", 
         RowBox[{"MapAt", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "~", "Reverse", "~", "2"}], "&"}], ",", "x", ",", 
           "1"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"x", ":", 
          RowBox[{"(", 
           RowBox[{"PlotRange", "\[Rule]", "_"}], ")"}]}], "\[RuleDelayed]", 
         RowBox[{"x", "~", "Reverse", "~", "2"}]}]}], "}"}]}], "&"}]}], 
   ";"}]}]], "Code",
 CellChangeTimes->{{3.726748064297176*^9, 3.726748064298506*^9}, {
   3.726752182207823*^9, 3.72675221581242*^9}, 
   3.769183312169107*^9},ExpressionUUID->"a77553c2-06bf-4db8-b6d3-\
1933b1614089"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["FuncStyle", "Subsection",
 CellChangeTimes->{{3.722081199432775*^9, 
  3.72208120071259*^9}},ExpressionUUID->"971b1880-008f-425e-acf1-\
582a17fc1b1a"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.76949293689314*^9, 
  3.769492939714435*^9}},ExpressionUUID->"6ab496c5-132b-4494-8b83-\
f897da514e6b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FuncStyle", "::", "usage"}], "=", "\n", 
   "\"\<FuncStyle[\!\(\*StyleBox[\"string\", \"TI\"]\)] formats \
\!\(\*StyleBox[\"string\", \"TI\"]\) for use in debugging output.\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.76918337622083*^9, 3.7691833790608263`*^9}, 
   3.769184455761499*^9},ExpressionUUID->"06790b0a-0f0e-4a45-9da2-\
7f1e6613e028"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.769493219371067*^9, 3.769493219690422*^9}, 
   3.769493330493897*^9},ExpressionUUID->"d8f40113-e63b-41d8-8ab6-\
ecad07610432"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FuncStyle", "[", "func_", "]"}], ":=", 
   RowBox[{"Style", "[", 
    RowBox[{"func", ",", "Underlined"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7218492982502823`*^9, 3.7218493398025084`*^9}, {
  3.7612896310746717`*^9, 3.761289644467556*^9}, {3.769183393988594*^9, 
  3.7691833942704363`*^9}},ExpressionUUID->"0db77f5b-baa7-4902-b73b-\
c77e5940de80"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["PrintCall", "Subsection",
 CellChangeTimes->{{3.718381762133388*^9, 3.718381763300006*^9}, {
  3.718381942591226*^9, 
  3.718381943407834*^9}},ExpressionUUID->"d23c2628-6ae5-4149-9f11-\
ad85267d1d15"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.7694929507613*^9, 
  3.769492951388981*^9}},ExpressionUUID->"63c981f5-3ee6-4bf9-bcb1-\
e8df3816d5d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PrintCall", "::", "usage"}], "=", "\n", 
   "\"\<PrintCall[\!\(\*StyleBox[\"expr\", \"TI\"]\)] prints \
\!\(\*StyleBox[\"expr\", \"TI\"]\) unevaluated.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769183899619205*^9, 3.769183901230641*^9}, {
  3.7691844600636787`*^9, 
  3.769184472863154*^9}},ExpressionUUID->"edbb9553-87f7-4155-b918-\
29ba5feaf24c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.769493142737341*^9, 3.769493143090103*^9}, 
   3.769493331124398*^9},ExpressionUUID->"2a0444b1-e59f-4771-8b51-\
e8d1de423b82"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"based", " ", "on"}], " ", "<", 
      RowBox[{"https", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
         "a"}], "/", "158902"}], "/", "6358"}], ">", " ", 
      RowBox[{"by", " ", "Szabolcs", " ", "and"}], " ", "<", 
      RowBox[{"https", ":"}]}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", "a"}],
        "/", "161310"}], "/", "6358"}], ">", " ", 
     RowBox[{"by", " ", "Carl", " ", "Woll"}]}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"PrintCall", ",", "HoldAll"}], "]"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"PrintCall", "[", "expr_", "]"}], ":=", 
     RowBox[{"CellPrint", "@", 
      RowBox[{"ExpressionCell", "[", 
       RowBox[{
        RowBox[{"Defer", "[", "expr", "]"}], ",", 
        RowBox[{"CellMargins", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"60", ",", "Inherited"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Inherited", ",", "Inherited"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"CellGroupingRules", "\[Rule]", "\"\<GraphicsGrouping\>\""}], 
        ",", 
        RowBox[{"CellDingbat", "\[Rule]", "\"\<Running:\>\""}]}], "]"}]}]}], 
    "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"PrintCall", "[", "expr_", "]"}], ":=", 
      RowBox[{"Print", "[", 
       RowBox[{"Defer", "[", "expr", "]"}], "]"}]}], ";"}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"PrintCall", "[", 
      RowBox[{"expr_", ",", 
       RowBox[{"dingbat_", ":", "\"\<\>\""}]}], "]"}], ":=", 
     RowBox[{"CellPrint", "@", 
      RowBox[{"ExpressionCell", "[", 
       RowBox[{
        RowBox[{"Defer", "[", "expr", "]"}], ",", 
        RowBox[{"CellMargins", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"60", ",", "Inherited"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Inherited", ",", "Inherited"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"CellGroupingRules", "\[Rule]", "\"\<GraphicsGrouping\>\""}], 
        ",", 
        RowBox[{"CellDingbat", "\[Rule]", "dingbat"}]}], "]"}]}]}], "*)"}], 
   "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"PrintCall", "[", 
       RowBox[{"expr_", ",", 
        RowBox[{"dingbat_", ":", "\"\<\>\""}]}], "]"}], ":=", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"expr2", "=", 
          RowBox[{"Defer", "[", 
           RowBox[{"expr", "/.", 
            RowBox[{
             RowBox[{"Sequence", "[", "]"}], "\[Rule]", "Null"}]}], "]"}]}], 
         "}"}], ",", "\[IndentingNewLine]", "\t", 
        RowBox[{"CellPrint", "@", 
         RowBox[{"ExpressionCell", "[", 
          RowBox[{
           RowBox[{"Defer", "[", "expr2", "]"}], ",", 
           RowBox[{"CellMargins", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"60", ",", "Inherited"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Inherited", ",", "Inherited"}], "}"}]}], "}"}]}], ",", 
           RowBox[{
           "CellGroupingRules", "\[Rule]", "\"\<GraphicsGrouping\>\""}], ",", 
           
           RowBox[{"CellDingbat", "\[Rule]", "dingbat"}]}], "]"}]}]}], "\n", 
       "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"PrintCall", "[", 
      RowBox[{"expr_", ",", 
       RowBox[{"dingbat_", ":", "\"\<\>\""}]}], "]"}], ":=", "\n", 
     RowBox[{"CellPrint", "@", 
      RowBox[{"ExpressionCell", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Defer", "[", "expr", "]"}], "/.", 
         RowBox[{
          RowBox[{"Sequence", "[", "]"}], "\[Rule]", "Nothing"}]}], ",", 
        RowBox[{"CellMargins", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"60", ",", "Inherited"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Inherited", ",", "Inherited"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"CellGroupingRules", "\[Rule]", "\"\<GraphicsGrouping\>\""}], 
        ",", 
        RowBox[{"CellDingbat", "\[Rule]", "dingbat"}]}], "]"}]}]}], "*)"}], 
   "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"PrintCall", "[", 
      RowBox[{"expr_", ",", 
       RowBox[{"dingbat_", ":", "\"\<\>\""}]}], "]"}], ":=", 
     RowBox[{"CellPrint", "@", 
      RowBox[{"ExpressionCell", "[", 
       RowBox[{
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"Unevaluated", "@", 
           RowBox[{"Defer", "[", "expr", "]"}]}], ",", 
          RowBox[{
           RowBox[{"Verbatim", "[", "Sequence", "]"}], "[", "]"}], ",", 
          "\[Infinity]"}], "]"}], ",", "\n", 
        RowBox[{"CellBaseline", "\[Rule]", 
         RowBox[{"Scaled", "[", "0.005", "]"}]}], ",", 
        RowBox[{"CellMargins", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"66", ",", "Inherited"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Inherited", ",", "Inherited"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"CellGroupingRules", "\[Rule]", "\"\<GraphicsGrouping\>\""}], 
        ",", 
        RowBox[{"CellDingbat", "\[Rule]", "dingbat"}]}], "]"}]}]}], "\n", 
    "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"PrintCall", "[", "expr_", "]"}], ":=", 
      RowBox[{"Print", "@", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{"Unevaluated", "@", 
          RowBox[{"Defer", "[", "expr", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Verbatim", "[", "Sequence", "]"}], "[", "]"}], ",", 
         "\[Infinity]"}], "]"}]}]}], ";"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"PrintCall", "[", 
      RowBox[{"expr_", ",", 
       RowBox[{"dingbat_", ":", "\"\<\>\""}]}], "]"}], ":=", 
     RowBox[{"Print", "[", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"Unevaluated", "@", 
         RowBox[{"Defer", "[", "expr", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Verbatim", "[", "Sequence", "]"}], "[", "]"}], ",", 
        "\[Infinity]"}], "]"}], "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.7183826052939653`*^9, 3.718382607540237*^9}, {
   3.718382708614644*^9, 3.718382735345913*^9}, {3.718382776238965*^9, 
   3.718382795629342*^9}, {3.7183843962398987`*^9, 3.718384422131997*^9}, 
   3.7183845746785917`*^9, {3.7183846131347513`*^9, 3.718384647907742*^9}, {
   3.71838467953401*^9, 3.718384680758685*^9}, {3.718384783947357*^9, 
   3.718384786166733*^9}, {3.7183848318241177`*^9, 3.7183848509052973`*^9}, {
   3.71838493982096*^9, 3.7183849433457727`*^9}, {3.718385002817374*^9, 
   3.718385010657423*^9}, {3.718385059128499*^9, 3.718385070065317*^9}, {
   3.718385629637906*^9, 3.718385661690427*^9}, {3.7186658198449907`*^9, 
   3.7186658359107523`*^9}, {3.7186659321344223`*^9, 3.718665936941848*^9}, {
   3.718665975678014*^9, 3.718666006302705*^9}, {3.718666109574744*^9, 
   3.718666123518352*^9}, {3.718666195821443*^9, 3.718666200124115*^9}, {
   3.719411285776628*^9, 3.719411317479817*^9}, 3.719411613506607*^9, {
   3.719411672375764*^9, 3.7194116731342573`*^9}, {3.719418456630423*^9, 
   3.719418465776979*^9}, {3.7214055202793922`*^9, 3.721405520904112*^9}, {
   3.721406010600062*^9, 3.7214060179791594`*^9}, 3.721406957948864*^9, {
   3.721407027737248*^9, 3.721407031638997*^9}, {3.7214072269145308`*^9, 
   3.721407231741166*^9}, {3.721407399235643*^9, 3.721407422905711*^9}, {
   3.721407574599449*^9, 3.72140757481179*^9}, {3.721407605782576*^9, 
   3.721407630839576*^9}, {3.721407765485879*^9, 3.7214077921098022`*^9}, {
   3.7214080275771503`*^9, 3.721408044640727*^9}, {3.721408185573389*^9, 
   3.721408216850026*^9}, {3.721408348509433*^9, 3.721408441659919*^9}, {
   3.721408482142061*^9, 3.721408512964429*^9}, {3.721408585641458*^9, 
   3.7214085964682627`*^9}, {3.721409473223604*^9, 3.7214095600744953`*^9}, {
   3.7241035183307123`*^9, 3.724103547190987*^9}, {3.724103589283926*^9, 
   3.724103613575808*^9}, 3.724634925986149*^9, {3.821131037099374*^9, 
   3.821131050344677*^9}},ExpressionUUID->"d173eb45-7ac8-42a4-8d12-\
ba2f5adbafc8"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Color Schemes \
(\"EEReds\",\"EEGreens\",\"EEBlues\",\"EEBrowns\",\"EEGrays\",\"Black\",\"\
Gray\") / GrayScale\
\>", "Subsection",
 CellChangeTimes->{{3.6946898610623293`*^9, 3.694689862702632*^9}, {
  3.6947759789416*^9, 3.69477600029881*^9}, {3.727619469690217*^9, 
  3.727619472386331*^9}, {3.794746668010832*^9, 3.794746674277413*^9}, {
  3.807722867852461*^9, 3.807722913947576*^9}, {3.807723091270709*^9, 
  3.807723092253509*^9}, {3.81983423618441*^9, 
  3.819834238248753*^9}},ExpressionUUID->"cdb4e017-fa27-4371-8b6d-\
fe84f9aa1d27"],

Cell[CellGroupData[{

Cell["Notes", "Subsubsection",
 CellChangeTimes->{{3.7947465980532618`*^9, 
  3.794746598572853*^9}},ExpressionUUID->"8dec8f13-4f1e-4dde-bcba-\
83eb7f038e2f"],

Cell[TextData[{
 "See ",
 ButtonBox["https://mathematica.stackexchange.com/questions/57885/is-it-\
possible-to-insert-new-colour-schemes-into-colordata",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://mathematica.stackexchange.com/questions/57885/is-it-possible-\
to-insert-new-colour-schemes-into-colordata"], None},
  ButtonNote->
   "https://mathematica.stackexchange.com/questions/57885/is-it-possible-to-\
insert-new-colour-schemes-into-colordata"]
}], "Text",
 CellChangeTimes->{{3.7947466000302896`*^9, 
  3.794746653139943*^9}},ExpressionUUID->"1eacaa1d-8671-4778-8c79-\
ecc0be0d4826"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.769493106256359*^9, 3.769493106661643*^9}, 
   3.769493332665411*^9},ExpressionUUID->"48bebda9-e173-443a-92a9-\
8cd2c29ad11f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ColorData", "[", "1", "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"load", " ", "ColorData"}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"DataPaclets`ColorDataDump`colorSchemes", ",", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<EEReds\>\"", ",", "\"\<\>\"", ",", 
        RowBox[{"{", "}"}]}], "}"}], ",", 
      RowBox[{"{", "\"\<Gradients\>\"", "}"}], ",", "1", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorConvert", "[", 
          RowBox[{"#", ",", "\"\<RGB\>\""}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Hue", "[", 
           RowBox[{"0.083", ",", "0.4", ",", "1"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.083", ",", "0.7", ",", "1"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.083", ",", "1", ",", "1"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0", ",", "1", ",", "1"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.917", ",", "1", ",", "1"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.917", ",", "1", ",", "0.7"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.917", ",", "1", ",", "0.4"}], "]"}]}], "}"}]}], "]"}], 
      "\n", "\t", ",", "\"\<\>\""}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AppendTo", "[", 
    RowBox[{
    "DataPaclets`ColorDataDump`colorSchemeNames", ",", "\"\<EEReds\>\""}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"DataPaclets`ColorDataDump`colorSchemes", ",", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<EEGreens\>\"", ",", "\"\<\>\"", ",", 
        RowBox[{"{", "}"}]}], "}"}], ",", 
      RowBox[{"{", "\"\<Gradients\>\"", "}"}], ",", "1", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorConvert", "[", 
          RowBox[{"#", ",", "\"\<RGB\>\""}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Hue", "[", 
           RowBox[{"0.25", ",", "0.4", ",", "1"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.25", ",", "0.7", ",", "1"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.25", ",", "1", ",", "1"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.333", ",", "1", ",", "1"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.417", ",", "1", ",", "1"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.417", ",", "1", ",", "0.7"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.417", ",", "1", ",", "0.4"}], "]"}]}], "}"}]}], "]"}], 
      "\n", "\t", ",", "\"\<\>\""}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AppendTo", "[", 
    RowBox[{
    "DataPaclets`ColorDataDump`colorSchemeNames", ",", "\"\<EEGreens\>\""}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"DataPaclets`ColorDataDump`colorSchemes", ",", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<EEBlues\>\"", ",", "\"\<\>\"", ",", 
        RowBox[{"{", "}"}]}], "}"}], ",", 
      RowBox[{"{", "\"\<Gradients\>\"", "}"}], ",", "1", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorConvert", "[", 
          RowBox[{"#", ",", "\"\<RGB\>\""}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Hue", "[", 
           RowBox[{"0.567", ",", "0.4", ",", "1"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.583", ",", "0.7", ",", "1"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.583", ",", "1", ",", "1"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.667", ",", "1", ",", "1"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.75", ",", "1", ",", "1"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.75", ",", "1", ",", "0.7"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.75", ",", "1", ",", "0.4"}], "]"}]}], "}"}]}], "]"}], 
      "\n", "\t", ",", "\"\<\>\""}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AppendTo", "[", 
    RowBox[{
    "DataPaclets`ColorDataDump`colorSchemeNames", ",", "\"\<EEBlues\>\""}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"DataPaclets`ColorDataDump`colorSchemes", ",", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<EEBrowns\>\"", ",", "\"\<\>\"", ",", 
        RowBox[{"{", "}"}]}], "}"}], ",", 
      RowBox[{"{", "\"\<Gradients\>\"", "}"}], ",", "1", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorConvert", "[", 
          RowBox[{"#", ",", "\"\<RGB\>\""}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Lighter", "[", 
           RowBox[{"Brown", ",", "0.5"}], "]"}], ",", 
          RowBox[{"Lighter", "[", 
           RowBox[{
            RowBox[{"Blend", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Brown", ",", "Orange"}], "}"}], ",", "0.5"}], "]"}], 
            ",", "0.5"}], "]"}], ",", 
          RowBox[{"Blend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Brown", ",", "Orange"}], "}"}], ",", "0.5"}], "]"}], 
          ",", 
          RowBox[{"Darker", "[", 
           RowBox[{
            RowBox[{"Blend", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Brown", ",", "Orange"}], "}"}], ",", "0.5"}], "]"}], 
            ",", "0.5"}], "]"}], ",", 
          RowBox[{"Darker", "[", 
           RowBox[{"Brown", ",", "0.5"}], "]"}]}], "}"}]}], "]"}], "\n", "\t",
       ",", "\"\<\>\""}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AppendTo", "[", 
    RowBox[{
    "DataPaclets`ColorDataDump`colorSchemeNames", ",", "\"\<EEBrowns\>\""}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"DataPaclets`ColorDataDump`colorSchemes", ",", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<EEGrays\>\"", ",", "\"\<\>\"", ",", 
        RowBox[{"{", "}"}]}], "}"}], ",", 
      RowBox[{"{", "\"\<Gradients\>\"", "}"}], ",", "1", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", "\n", "\t", 
      RowBox[{"{", 
       RowBox[{"LightGray", ",", "Black"}], "}"}], "\n", "\t", ",", 
      "\"\<\>\""}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AppendTo", "[", 
    RowBox[{
    "DataPaclets`ColorDataDump`colorSchemeNames", ",", "\"\<EEGrays\>\""}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"DataPaclets`ColorDataDump`colorSchemes", ",", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Black\>\"", ",", "\"\<\>\"", ",", 
        RowBox[{"{", "}"}]}], "}"}], ",", 
      RowBox[{"{", "\"\<Gradients\>\"", "}"}], ",", "1", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", "\n", "\t", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Black"}], "}"}], "\n", "\t", ",", "\"\<\>\""}], 
     "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AppendTo", "[", 
    RowBox[{
    "DataPaclets`ColorDataDump`colorSchemeNames", ",", "\"\<Black\>\""}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"DataPaclets`ColorDataDump`colorSchemes", ",", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Gray\>\"", ",", "\"\<\>\"", ",", 
        RowBox[{"{", "}"}]}], "}"}], ",", 
      RowBox[{"{", "\"\<Gradients\>\"", "}"}], ",", "1", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", "\n", "\t", 
      RowBox[{"{", 
       RowBox[{"Gray", ",", "Gray"}], "}"}], "\n", "\t", ",", "\"\<\>\""}], 
     "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AppendTo", "[", 
    RowBox[{
    "DataPaclets`ColorDataDump`colorSchemeNames", ",", "\"\<Gray\>\""}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GrayScale", "[", "x_", "]"}], ":=", 
   RowBox[{"GrayLevel", "[", 
    RowBox[{"1", "-", "x"}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.69476948327812*^9, 3.694769483279935*^9}, 
   3.694769872484418*^9, {3.6947700379578123`*^9, 3.694770089005789*^9}, {
   3.6947701292881947`*^9, 3.694770130494711*^9}, 3.6947708501647863`*^9, {
   3.694770889052162*^9, 3.694770951596655*^9}, {3.6947737536308804`*^9, 
   3.694773772541191*^9}, {3.694775268869513*^9, 3.694775311956152*^9}, {
   3.6947753511894007`*^9, 3.694775372205158*^9}, {3.694779891745264*^9, 
   3.694779923839469*^9}, {3.6947831052246437`*^9, 3.694783140879889*^9}, {
   3.694789951773131*^9, 3.694789954097926*^9}, {3.694790038493805*^9, 
   3.69479005396327*^9}, {3.694790249205636*^9, 3.694790251450923*^9}, {
   3.694790320493782*^9, 3.6947903257968063`*^9}, {3.69479046745709*^9, 
   3.69479047041265*^9}, {3.694790523174727*^9, 3.694790537557352*^9}, {
   3.694790598910811*^9, 3.694790603560039*^9}, {3.6947906545027122`*^9, 
   3.694790658133209*^9}, {3.6947907269879713`*^9, 3.6947907723466587`*^9}, {
   3.69479081487438*^9, 3.69479081996202*^9}, {3.6947908692180653`*^9, 
   3.694790876471733*^9}, {3.694790967825206*^9, 3.6947909768873987`*^9}, {
   3.694791074609494*^9, 3.694791105291287*^9}, {3.694791157579941*^9, 
   3.694791270384616*^9}, {3.694791353597101*^9, 3.6947913701468363`*^9}, {
   3.6947914169903603`*^9, 3.6947914524817657`*^9}, {3.694791487628923*^9, 
   3.694791498276554*^9}, {3.694791592156805*^9, 3.694791611067457*^9}, {
   3.694791796957844*^9, 3.69479180322029*^9}, {3.694792861975728*^9, 
   3.6947928720687227`*^9}, {3.694792904076208*^9, 3.694792939975664*^9}, {
   3.694793518112763*^9, 3.694793546788571*^9}, {3.6947936072932*^9, 
   3.694793631989109*^9}, 3.694793663232052*^9, {3.694793731586725*^9, 
   3.69479375491432*^9}, {3.694793820589184*^9, 3.694793839746401*^9}, {
   3.694793894713262*^9, 3.694794065928474*^9}, {3.694794163785286*^9, 
   3.694794192958207*^9}, {3.694794311986534*^9, 3.694794354555914*^9}, {
   3.694794654254499*^9, 3.6947946902157917`*^9}, {3.694794748880672*^9, 
   3.694794809418996*^9}, {3.694794946356922*^9, 3.69479500590238*^9}, {
   3.694795087491493*^9, 3.6947951839945097`*^9}, {3.727619451904771*^9, 
   3.727619502237753*^9}, {3.769184009560527*^9, 3.769184015537675*^9}, {
   3.769492997802972*^9, 3.769493005911912*^9}, 3.769493116342476*^9, {
   3.7947462694665747`*^9, 3.7947464469799137`*^9}, {3.807722340719132*^9, 
   3.807722378239848*^9}, {3.807722423712945*^9, 3.807722424519335*^9}, {
   3.8077224777314262`*^9, 3.807722484865417*^9}, {3.807722515163218*^9, 
   3.807722515576174*^9}, {3.8077227056587954`*^9, 3.8077227157621317`*^9}, 
   3.8077227634804077`*^9, {3.8077228145170183`*^9, 3.8077228151558857`*^9}, {
   3.807723055198319*^9, 3.807723062626793*^9}, {3.807723676583798*^9, 
   3.8077236781328077`*^9}, {3.8198342420568123`*^9, 
   3.819834242422844*^9}},ExpressionUUID->"0eae6244-9806-46cf-b937-\
416d2ab5c463"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["ClearCache", "Subsection",
 CellChangeTimes->{{3.69123082807414*^9, 
  3.691230830120575*^9}},ExpressionUUID->"f8b9c8aa-f6cd-4c19-9378-\
ebffd3f80170"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769493022036942*^9, 
  3.769493022487153*^9}},ExpressionUUID->"1ab1211f-a644-4e47-bd20-\
69e5691bab2e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ClearCache", "::", "usage"}], "=", "\n", 
   "\"\<ClearCache[\!\(\*StyleBox[\"f\", \"TI\"]\), \!\(\*StyleBox[\"g\", \
\"TI\"]\), ...] removes memoized DownValues of \!\(\*StyleBox[\"f\", \
\"TI\"]\), \!\(\*StyleBox[\"g\", \"TI\"]\), etc.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.7691841460261097`*^9, 3.769184146951468*^9}, 
   3.7691844880299*^9},ExpressionUUID->"e988b9aa-06e5-4504-9b43-d07b176ee6e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.769493082659854*^9, 3.769493083062611*^9}, 
   3.7694933333741407`*^9},ExpressionUUID->"771bbf9c-7ac0-4d72-9bfb-\
bd0f709e9ed7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"mostly", " ", "by", " ", "Simon"}], " ", "-", " ", "see"}], 
     " ", "<", 
     RowBox[{"http", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"stackoverflow", ".", "com"}], "/", "questions"}], "/", 
        "5086749"}], "/", "mathematica"}], "-", "how", "-", "to", "-", 
      "clear", "-", "the", "-", "cache", "-", "for", "-", "a", "-", "symbol", 
      "-", "i", "-", "e", "-", "unset", "-", "pattern", "-", "free", "-", 
      "downva"}], ">"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ClearCache", "[", "f_", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"DownValues", "[", "f", "]"}], "=", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"DownValues", "[", "f", "]"}], ",", 
          RowBox[{"_", "?", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"FreeQ", "[", 
              RowBox[{
               RowBox[{"First", "[", "#", "]"}], ",", "Pattern"}], "]"}], 
             "&"}], ")"}]}]}], "]"}]}], ";"}], ")"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "make", " ", "work", " ", "on", " ", "multiple", " ", "arguments"}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ClearCache", "[", "f__", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"ClearCache", ",", 
         RowBox[{"{", "f", "}"}]}], "]"}], ";"}], ")"}]}], ";"}]}]}]], "Code",\

 CellChangeTimes->{{3.69123083124872*^9, 3.691230856633144*^9}, 
   3.691232443029517*^9, {3.691232987813581*^9, 3.691233072197899*^9}, {
   3.6912601117106457`*^9, 
   3.6912601134761333`*^9}},ExpressionUUID->"5fc760c5-8bff-4d54-ab52-\
4b2c0cbcf97b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["InterpolatingFunctionFunctionQ", "Subsection",
 CellChangeTimes->{{3.690410140909267*^9, 3.690410142154057*^9}, 
   3.7116415864149513`*^9, 3.7116427477096243`*^9, 3.711643501643952*^9, 
   3.727619508926581*^9, 3.727619846767035*^9, 3.7689241291075068`*^9, 
   3.769522713923162*^9},ExpressionUUID->"7b346daf-5a2b-4b50-b585-\
0f3d866a562e"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769493035726989*^9, 
  3.769493036192533*^9}},ExpressionUUID->"18accf27-ae83-47d7-b35c-\
af3707455d1f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"InterpolatingFunctionFunctionQ", "::", "usage"}], "=", "\n", 
   "\"\<InterpolatingFunctionFunctionQ[\!\(\*StyleBox[\"x\", \"TI\"]\)] is \
True if \!\(\*StyleBox[\"x\", \"TI\"]\) is a InterpolatingFunction \
function.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.7691841751054363`*^9, 3.7691841763422832`*^9}, 
   3.769184495068898*^9, {3.769522713933302*^9, 
   3.769522713936644*^9}},ExpressionUUID->"c13f6a20-7fe6-456b-8294-\
2dbb6dba89be"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.769493060560253*^9, 3.769493062649105*^9}, 
   3.769493334051694*^9},ExpressionUUID->"dbf98e20-2b28-4070-b71d-\
8cfc78f60ab7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"InterpolatingFunctionFunctionQ", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"Cases", "[", 
        RowBox[{"x", ",", "_InterpolatingFunction", ",", "\[Infinity]", ",", 
         RowBox[{"Heads", "\[Rule]", "True"}]}], "]"}], "]"}], "\[NotEqual]", 
      "0"}], ",", "True", ",", "False"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"InterpolatingFunctionFunctionQ", "[", "x_", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "[", 
         RowBox[{"Head", "[", "x", "]"}], "]"}], "===", 
        "InterpolatingFunction"}], ",", "True", ",", "False"}], "]"}]}], 
    ";"}], "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"why", " ", "did", " ", "I", " ", "write", " ", 
     RowBox[{"this", "?"}]}], " ", "<", 
    RowBox[{
     RowBox[{"-", " ", "breaks"}], " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"c", "[", "t", "]"}], "/.", "sol"}], ")"}], "^", "2"}]}]}], 
   " ", "*)"}]}]}], "Code",
 CellChangeTimes->{{3.690410089411117*^9, 3.69041011070678*^9}, 
   3.6904105118698807`*^9, 3.7116415864348297`*^9, 3.711642747722727*^9, {
   3.711643440476159*^9, 3.7116434416200857`*^9}, {3.7116435016689043`*^9, 
   3.711643501675763*^9}, {3.7220374578448067`*^9, 3.7220374598213053`*^9}, {
   3.7220377455458717`*^9, 3.722037766093894*^9}, {3.7689241291148043`*^9, 
   3.7689241291172247`*^9}, {3.769522713939559*^9, 
   3.769522713941895*^9}},ExpressionUUID->"5d57f349-d9b8-466a-b18f-\
e91620f5bdbb"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["TemporalDataFunctionQ", "Subsection",
 CellChangeTimes->{{3.7689235155286922`*^9, 3.7689235210380774`*^9}, {
  3.768924304400831*^9, 
  3.7689243107464113`*^9}},ExpressionUUID->"32e0792c-676a-4118-b390-\
e1b2f4e206e4"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769493671038848*^9, 
  3.769493671546782*^9}},ExpressionUUID->"f98067d7-71f3-4200-bb39-\
072f3fbc68a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TemporalDataFunctionQ", "::", "usage"}], "=", "\n", 
   "\"\<TemporalDataFunctionQ[\!\(\*StyleBox[\"x\", \"TI\"]\)] is True if \
\!\(\*StyleBox[\"x\", \"TI\"]\) is a TemporalData function.\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{
  3.769184500358201*^9},ExpressionUUID->"18e3002d-40a4-4500-8500-\
988de4b4393e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"1ba47c63-b5f1-45da-b0b9-\
2bf27b78f228"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TemporalDataFunctionQ", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"Cases", "[", 
        RowBox[{"x", ",", "_TemporalData", ",", "\[Infinity]", ",", 
         RowBox[{"Heads", "\[Rule]", "True"}]}], "]"}], "]"}], "\[NotEqual]", 
      "0"}], ",", "True", ",", "False"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.76892354156194*^9, 3.7689235509978523`*^9}, 
   3.7689243132669067`*^9},ExpressionUUID->"00572da9-93db-492d-99f0-\
243c0ad66211"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["TemporalMean", "Subsection",
 CellChangeTimes->{{3.6902825801654367`*^9, 3.690282580502798*^9}, {
   3.690407466104957*^9, 3.69040746647934*^9}, 3.690408297629696*^9, 
   3.694128986678575*^9, 
   3.784795854058021*^9},ExpressionUUID->"c906219e-d31a-46bd-a319-\
ad22d2c917b1"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769493684653846*^9, 
  3.7694936861635513`*^9}},ExpressionUUID->"75ca1073-0436-458b-9291-\
da9a75f1df7c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TemporalMean", "::", "usage"}], "=", "\n", 
   "\"\<TemporalMean[\!\(\*StyleBox[\"f\", \"TI\"]\), \!\(\*StyleBox[\"var\", \
\"TI\"]\)] gives the average of \!\(\*StyleBox[\"f\", \"TI\"]\) with respect \
to \!\(\*StyleBox[\"var\", \"TI\"]\)\!\(\*StyleBox[\" \", \"TI\"]\)(default \
\!\(\*StyleBox[\"var\", \"TI\"]\)=t).\nTemporalMean[\!\(\*StyleBox[\"f\", \
\"TI\"]\), {\!\(\*StyleBox[\"var\", \"TI\"]\), \!\(\*StyleBox[\"varmin\", \
\"TI\"]\), \!\(\*StyleBox[\"varmax\", \"TI\"]\)}] ranges from \!\(\*StyleBox[\
\"varmin\", \"TI\"]\) to \!\(\*StyleBox[\"varmax\", \"TI\"]\).\nTemporalMean[\
\!\(\*StyleBox[\"rulelist\", \"TI\"]\)] threads over \
\!\(\*StyleBox[\"rulelist\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769184282405851*^9, 3.7691842838447533`*^9}, {
  3.784795854898197*^9, 
  3.784795856580805*^9}},ExpressionUUID->"a743c8c6-ac8a-49c5-9061-\
6811c048158d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"ba23e4e9-e158-4bb4-8c6d-\
e5ee393c2ceb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"thread", " ", "over", " ", "RuleLists"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TemporalMean", "[", 
      RowBox[{
       RowBox[{"f_", "?", "RuleListQ"}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<rulelist1\>\"", "]"}], ";"}], "*)"}], 
      RowBox[{"f", "/.", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x_", "\[Rule]", "val_"}], ")"}], "\[RuleDelayed]", 
        RowBox[{"(", 
         RowBox[{"x", "\[Rule]", 
          RowBox[{"TemporalMean", "[", 
           RowBox[{"val", ",", "opts"}], "]"}]}], ")"}]}]}], ")"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"TemporalMean", "[", 
      RowBox[{
       RowBox[{"f_", "?", "RuleListQ"}], ",", 
       RowBox[{"{", 
        RowBox[{"var_Symbol", ",", 
         RowBox[{"varmin_", "?", "NumericQ"}], ",", 
         RowBox[{"varmax_", "?", "NumericQ"}]}], "}"}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<rulelist2\>\"", "]"}], ";"}], "*)"}], "\n", 
      RowBox[{"f", "/.", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x_", "\[Rule]", "val_"}], ")"}], "\[RuleDelayed]", 
        RowBox[{"(", 
         RowBox[{"x", "\[Rule]", 
          RowBox[{"TemporalMean", "[", 
           RowBox[{"val", ",", 
            RowBox[{"{", 
             RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", 
            "opts"}], "]"}]}], ")"}]}]}], ")"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.7805093247642393`*^9, 3.780509327125401*^9}, {
  3.784795857373622*^9, 
  3.78479585946804*^9}},ExpressionUUID->"e3744e1f-dec0-4f02-b178-\
5177dc4759aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"thread", " ", "over", " ", "Lists"}], " ", "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"TemporalMean", "[", 
      RowBox[{"list_List", ",", "rest___"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"TemporalMean", "[", 
        RowBox[{"#", ",", "rest"}], "]"}], "&"}], "/@", "list"}]}], ";"}], 
   "*)"}]}]], "Code",
 CellChangeTimes->{{3.780509300717428*^9, 3.780509304533176*^9}, {
   3.780509354412703*^9, 3.780509354695228*^9}, {3.78050943216265*^9, 
   3.780509438856485*^9}, 3.780659286650784*^9, {3.784795860203557*^9, 
   3.7847958608839684`*^9}},ExpressionUUID->"44633a54-5b9b-4612-9885-\
c77b3bbc7cd2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "main", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"TemporalMean", "[", 
     RowBox[{"f_", ",", 
      RowBox[{"{", 
       RowBox[{"var_Symbol", ",", 
        RowBox[{"varmin_", "?", "NumericQ"}], ",", 
        RowBox[{"varmax_", "?", "NumericQ"}]}], "}"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"integrateopts", ",", "nintegrateopts", ",", "method"}], "}"}],
       ",", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<main\>\"", "]"}], ";"}], "*)"}], "\n", 
      "\t", 
      RowBox[{
       RowBox[{"method", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Method", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "TemporalMean", "]"}]}], "}"}], "]"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"InterpolatingFunctionFunctionQ", "[", "f", "]"}], 
          "\[Equal]", "True"}], ",", 
         RowBox[{"method", "=", "\"\<NIntegrate\>\""}]}], "]"}], ";", "\n", 
       "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"TemporalDataFunctionQ", "[", "f", "]"}], "\[Equal]", 
          "True"}], ",", 
         RowBox[{"method", "=", "\"\<Sum\>\""}]}], "]"}], ";", "\n", "\t", 
       RowBox[{"integrateopts", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"IntegrateOpts", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "TemporalMean", "]"}]}], "}"}], "]"}]}], 
         "]"}]}], ";", "\n", "\t", 
       RowBox[{"nintegrateopts", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"NIntegrateOpts", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "TemporalMean", "]"}]}], "}"}], "]"}]}], 
         "]"}]}], ";", "\n", "\t", 
       RowBox[{"Which", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"method", "\[Equal]", "\"\<Integrate\>\""}], ",", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{"Return", "[", 
          RowBox[{
           RowBox[{"Integrate", "[", 
            RowBox[{"f", ",", 
             RowBox[{"{", 
              RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"Sequence", "@@", "integrateopts"}], "]"}]}], "]"}], 
           "/", 
           RowBox[{"(", 
            RowBox[{"varmax", "-", "varmin"}], ")"}]}], "]"}], ",", "\n", 
         "\t\t", 
         RowBox[{"method", "\[Equal]", "\"\<NIntegrate\>\""}], ",", "\n", 
         "\t\t", 
         RowBox[{"Return", "[", 
          RowBox[{
           RowBox[{"NIntegrate", "[", 
            RowBox[{"f", ",", 
             RowBox[{"{", 
              RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"Sequence", "@@", "nintegrateopts"}], "]"}]}], "]"}], 
           "/", 
           RowBox[{"(", 
            RowBox[{"varmax", "-", "varmin"}], ")"}]}], "]"}], ",", "\n", 
         "\t\t", 
         RowBox[{"method", "\[Equal]", "\"\<Sum\>\""}], ",", "\n", "\t\t", 
         RowBox[{"Return", "[", 
          RowBox[{
           RowBox[{"Sum", "[", 
            RowBox[{"f", ",", 
             RowBox[{"{", 
              RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}]}], "]"}], 
           "/", 
           RowBox[{"(", 
            RowBox[{"varmax", "-", "varmin", "+", "1"}], ")"}]}], "]"}], ",", 
         "\n", "\t\t", "Else", ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"General", "::", "badmtd"}], "]"}], ";", 
          RowBox[{"Return", "[", "$Failed", "]"}]}]}], "\n", "\t", "]"}], 
       ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.690287863246601*^9, 3.690287918330853*^9}, {
   3.690287949953002*^9, 3.690287984470213*^9}, {3.690288202492288*^9, 
   3.690288203165351*^9}, {3.690288269859326*^9, 3.690288279058405*^9}, {
   3.69028838310036*^9, 3.6902883884881496`*^9}, {3.690289459451592*^9, 
   3.6902895415673*^9}, 3.69029023501518*^9, {3.690388888336788*^9, 
   3.6903888902170763`*^9}, {3.690390055292741*^9, 3.690390055387116*^9}, {
   3.6903903991779747`*^9, 3.690390404783087*^9}, {3.690407440603863*^9, 
   3.690407446063837*^9}, {3.6904075021773167`*^9, 3.690407508645743*^9}, {
   3.690412867733841*^9, 3.690412869860298*^9}, {3.6904765494883738`*^9, 
   3.6904765497100563`*^9}, {3.693593361533389*^9, 3.693593366023024*^9}, {
   3.694125504733014*^9, 3.694125506918964*^9}, {3.6941255581918097`*^9, 
   3.694125577933239*^9}, {3.694128999820868*^9, 3.694129002004552*^9}, 
   3.710105934791916*^9, 3.7116415864563723`*^9, 3.7116427477332373`*^9, 
   3.71164350169057*^9, {3.768920812808662*^9, 3.7689208256991863`*^9}, {
   3.768921021810925*^9, 3.768921087525177*^9}, {3.768921120327437*^9, 
   3.7689211257100897`*^9}, 3.768924129120323*^9, {3.768924329304533*^9, 
   3.768924348481145*^9}, {3.768924434016081*^9, 3.768924478844796*^9}, 
   3.768924815290928*^9, {3.768925114841753*^9, 3.768925154199295*^9}, {
   3.7689320234381237`*^9, 3.768932033370878*^9}, 3.768975094438635*^9, {
   3.7689759890838757`*^9, 3.768975995729841*^9}, {3.76897655910501*^9, 
   3.768976612232573*^9}, 3.769522713949548*^9, {3.784795861442957*^9, 
   3.784795864282344*^9}, 
   3.794137240363329*^9},ExpressionUUID->"feb7193e-ddf1-4236-931d-\
b6ad1c65fb79"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "InterpolatingFunctionFunctions", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"TemporalMean", "[", 
     RowBox[{
      RowBox[{"f_", "?", "InterpolatingFunctionFunctionQ"}], ",", 
      RowBox[{"var_Symbol", ":", "t"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "nintegrateopts", ",", "ifdomains", ",", "numifdomains", ",", "varmin",
         ",", "varmax"}], "}"}], ",", "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"nintegrateopts", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"NIntegrateOpts", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "TemporalMean", "]"}]}], "}"}], "]"}]}], 
         "]"}]}], ";", "\n", "\t", "\n", "\t", 
       RowBox[{"ifdomains", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", "\"\<Domain\>\"", "]"}], "\[LeftDoubleBracket]",
             "1", "\[RightDoubleBracket]"}], "&"}], ",", 
          RowBox[{"Cases", "[", 
           RowBox[{
           "f", ",", "_InterpolatingFunction", ",", "\[Infinity]", ",", 
            RowBox[{"Heads", "\[Rule]", "True"}]}], "]"}]}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"numifdomains", "=", 
        RowBox[{"Length", "[", 
         RowBox[{"Union", "[", "ifdomains", "]"}], "]"}]}], ";", "\n", "\t", 
       "\n", "\t", 
       RowBox[{"Which", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"numifdomains", "\[Equal]", "0"}], ",", "\n", "\t\t", 
         RowBox[{"Message", "[", 
          RowBox[{"TemporalMean", "::", "norange"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"numifdomains", ">", "1"}], ",", "\n", "\t\t", 
         RowBox[{"Message", "[", 
          RowBox[{"TemporalMean", "::", "unkrange"}], "]"}], ",", "\n", 
         "\t\t", "Else", ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"varmin", ",", "varmax"}], "}"}], "=", 
           RowBox[{
           "ifdomains", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", "\t\t", 
          RowBox[{"Return", "[", 
           RowBox[{"TemporalMean", "[", 
            RowBox[{"f", ",", 
             RowBox[{"{", 
              RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", 
             RowBox[{"Method", "\[Rule]", "\"\<NIntegrate\>\""}], ",", 
             RowBox[{"NIntegrateOpts", "\[Rule]", "nintegrateopts"}]}], "]"}],
            "]"}]}]}], "\n", "\t", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.690288357462304*^9, 3.6902883580090103`*^9}, {
   3.690289582493618*^9, 3.690289584258432*^9}, {3.690317796159708*^9, 
   3.6903177985636187`*^9}, {3.690318804083301*^9, 3.690318805137845*^9}, {
   3.6903881916382313`*^9, 3.690388278197209*^9}, {3.690388413809268*^9, 
   3.690388435179152*^9}, {3.690388499184197*^9, 3.690388520277877*^9}, {
   3.6903886012184143`*^9, 3.6903886091307983`*^9}, 3.690388883757769*^9, {
   3.690388971530364*^9, 3.690388980552248*^9}, 3.690389033272348*^9, {
   3.6903900638460484`*^9, 3.690390067774722*^9}, 3.690390408603043*^9, {
   3.6903988456005583`*^9, 3.690398884077207*^9}, {3.690399713988106*^9, 
   3.6903997926007833`*^9}, {3.690402777064375*^9, 3.690402781794685*^9}, {
   3.6904031240208187`*^9, 3.69040314721561*^9}, {3.690403195892778*^9, 
   3.690403201823271*^9}, {3.690407479108864*^9, 3.690407498882142*^9}, {
   3.690410326161085*^9, 3.690410330362163*^9}, {3.690412874849804*^9, 
   3.6904128821499443`*^9}, {3.690476552255224*^9, 3.690476552468194*^9}, 
   3.690476677930087*^9, {3.694128204130086*^9, 3.694128226254518*^9}, {
   3.694128551527742*^9, 3.6941285523522778`*^9}, {3.694129003236915*^9, 
   3.694129008309512*^9}, {3.6941292947892437`*^9, 3.6941292964816093`*^9}, {
   3.710105935857864*^9, 3.7101059370138187`*^9}, 3.711641586477942*^9, 
   3.7116427477448606`*^9, 3.7116435017079563`*^9, {3.768832758447291*^9, 
   3.768832764965494*^9}, {3.768837777593522*^9, 3.768837778887732*^9}, 
   3.7689241291234007`*^9, {3.768925176680003*^9, 3.76892518627526*^9}, {
   3.768932051521277*^9, 3.7689320524238453`*^9}, 3.769522713956626*^9, {
   3.78479586574542*^9, 3.7847958738675957`*^9}, {3.7941372403664503`*^9, 
   3.7941372403681498`*^9}},ExpressionUUID->"9283a4f1-96ef-4a04-b05f-\
f5f69d61ec96"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "InterpolatingFunctions", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TemporalMean", "[", 
      RowBox[{"f_InterpolatingFunction", ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<IF\>\"", "]"}], ";"}], "*)"}], 
      RowBox[{"TemporalMean", "[", 
       RowBox[{
        RowBox[{"f", "[", "t", "]"}], ",", "opts"}], "]"}], ")"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"TemporalMean", "[", 
      RowBox[{"f_InterpolatingFunction", ",", 
       RowBox[{"{", 
        RowBox[{"var_Symbol", ",", 
         RowBox[{"varmin_", "?", "NumericQ"}], ",", 
         RowBox[{"varmax_", "?", "NumericQ"}]}], "}"}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\t", 
     RowBox[{"(", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<IF2\>\"", "]"}], ";"}], "*)"}], 
      RowBox[{"TemporalMean", "[", 
       RowBox[{
        RowBox[{"f", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", "opts"}], 
       "]"}], ")"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.768832281802766*^9, 3.768832331476403*^9}, {
   3.7688360874460907`*^9, 3.768836098653079*^9}, {3.7688394165449457`*^9, 
   3.768839417455431*^9}, {3.768904643816844*^9, 3.768904647268787*^9}, {
   3.7689052310401993`*^9, 3.768905277011986*^9}, {3.7689207569295692`*^9, 
   3.768920766752754*^9}, 3.768924838199293*^9, {3.768925191111698*^9, 
   3.76892520187668*^9}, 3.768975071855074*^9, {3.768975698963626*^9, 
   3.768975729761654*^9}, {3.768975968891733*^9, 3.7689759767767687`*^9}, {
   3.768976026691292*^9, 3.768976031074623*^9}, 3.7690547411660547`*^9, {
   3.7847958746189632`*^9, 
   3.784795876953837*^9}},ExpressionUUID->"3d13a2f8-a69a-4e4d-8957-\
f1858c2433ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "TemporalData", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TemporalMean", "[", 
      RowBox[{"f_TemporalData", ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<td\>\"", "]"}], ";"}], "*)"}], 
      RowBox[{"Mean", "[", "f", "]"}], ")"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"TemporalMean", "[", 
      RowBox[{"f_TemporalData", ",", 
       RowBox[{"{", 
        RowBox[{"var_Symbol", ",", 
         RowBox[{"varmin_", "?", "NumericQ"}], ",", 
         RowBox[{"varmax_", "?", "NumericQ"}]}], "}"}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<td2\>\"", "]"}], ";"}], "*)"}], "\n", 
      RowBox[{"Mean", "[", 
       RowBox[{"TimeSeriesWindow", "[", 
        RowBox[{"f", ",", 
         RowBox[{"{", 
          RowBox[{"varmin", ",", "varmax"}], "}"}]}], "]"}], "]"}], ")"}]}], 
    ";"}]}]}]], "Code",
 CellChangeTimes->{{3.768904652479669*^9, 3.768904678681436*^9}, {
   3.768904743030691*^9, 3.768904747190234*^9}, {3.7689052019982147`*^9, 
   3.768905202416562*^9}, {3.768920744258587*^9, 3.768920749653892*^9}, 
   3.76892484454923*^9, {3.76892520404871*^9, 3.768925229678919*^9}, {
   3.768975077170294*^9, 3.768975081119945*^9}, {3.76897603580505*^9, 
   3.7689760414402227`*^9}, {3.784795877675832*^9, 
   3.784795877942898*^9}},ExpressionUUID->"09888ab4-f138-4243-ac61-\
89c3170e66d3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "TemporalDataFunctions", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"TemporalMean", "[", 
     RowBox[{
      RowBox[{"f_", "?", "TemporalDataFunctionQ"}], ",", 
      RowBox[{"var_Symbol", ":", "t"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"domains", ",", "numdomains", ",", "varmin", ",", "varmax"}], 
       "}"}], ",", "\n", "\t", "\n", "\t", 
      RowBox[{
       RowBox[{"domains", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", "\"\<FirstTimes\>\"", "]"}], 
              "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
             RowBox[{
              RowBox[{"#", "[", "\"\<LastTimes\>\"", "]"}], 
              "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "}"}],
            "&"}], ",", 
          RowBox[{"Cases", "[", 
           RowBox[{"f", ",", "_TemporalData", ",", "\[Infinity]", ",", 
            RowBox[{"Heads", "\[Rule]", "True"}]}], "]"}]}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"numdomains", "=", 
        RowBox[{"Length", "[", 
         RowBox[{"Union", "[", "domains", "]"}], "]"}]}], ";", "\n", "\t", 
       "\n", "\t", 
       RowBox[{"Which", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"numdomains", "\[Equal]", "0"}], ",", "\n", "\t\t", 
         RowBox[{"Message", "[", 
          RowBox[{"TemporalMean", "::", "norange"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"numdomains", ">", "1"}], ",", "\n", "\t\t", 
         RowBox[{"Message", "[", 
          RowBox[{"TemporalMean", "::", "unkrange"}], "]"}], ",", "\n", 
         "\t\t", "Else", ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"varmin", ",", "varmax"}], "}"}], "=", 
           RowBox[{
           "domains", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", "\t\t", 
          RowBox[{"Return", "[", 
           RowBox[{"TemporalMean", "[", 
            RowBox[{"f", ",", 
             RowBox[{"{", 
              RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", 
             "opts"}], "]"}], "]"}]}]}], "\n", "\t", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.690288357462304*^9, 3.6902883580090103`*^9}, {
   3.690289582493618*^9, 3.690289584258432*^9}, {3.690317796159708*^9, 
   3.6903177985636187`*^9}, {3.690318804083301*^9, 3.690318805137845*^9}, {
   3.6903881916382313`*^9, 3.690388278197209*^9}, {3.690388413809268*^9, 
   3.690388435179152*^9}, {3.690388499184197*^9, 3.690388520277877*^9}, {
   3.6903886012184143`*^9, 3.6903886091307983`*^9}, 3.690388883757769*^9, {
   3.690388971530364*^9, 3.690388980552248*^9}, 3.690389033272348*^9, {
   3.6903900638460484`*^9, 3.690390067774722*^9}, 3.690390408603043*^9, {
   3.6903988456005583`*^9, 3.690398884077207*^9}, {3.690399713988106*^9, 
   3.6903997926007833`*^9}, {3.690402777064375*^9, 3.690402781794685*^9}, {
   3.6904031240208187`*^9, 3.69040314721561*^9}, {3.690403195892778*^9, 
   3.690403201823271*^9}, {3.690407479108864*^9, 3.690407498882142*^9}, {
   3.690410326161085*^9, 3.690410330362163*^9}, {3.690412874849804*^9, 
   3.6904128821499443`*^9}, {3.690476552255224*^9, 3.690476552468194*^9}, 
   3.690476677930087*^9, {3.694128204130086*^9, 3.694128226254518*^9}, {
   3.694128551527742*^9, 3.6941285523522778`*^9}, {3.694129003236915*^9, 
   3.694129008309512*^9}, {3.6941292947892437`*^9, 3.6941292964816093`*^9}, {
   3.710105935857864*^9, 3.7101059370138187`*^9}, 3.711641586477942*^9, 
   3.7116427477448606`*^9, 3.7116435017079563`*^9, {3.768832758447291*^9, 
   3.768832764965494*^9}, {3.768837777593522*^9, 3.768837778887732*^9}, 
   3.7689241291234007`*^9, {3.768925176680003*^9, 3.76892518627526*^9}, {
   3.768932051521277*^9, 3.7689320524238453`*^9}, {3.769087616890835*^9, 
   3.769087628068468*^9}, {3.769087993195689*^9, 3.769088106756604*^9}, {
   3.7690890231245947`*^9, 3.769089040580469*^9}, {3.769089190141038*^9, 
   3.7690891906328983`*^9}, {3.7847958800467253`*^9, 3.784795888858522*^9}, {
   3.79413724037117*^9, 
   3.794137240372815*^9}},ExpressionUUID->"38197ba4-98dd-4aab-82aa-\
536c6eaeffeb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "fallthrough", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"TemporalMean", "[", 
     RowBox[{
      RowBox[{"f_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"RuleListQ", "[", "#", "]"}]}], "&&", 
           RowBox[{"!", 
            RowBox[{"InterpolatingFunctionFunctionQ", "[", "#", "]"}]}]}], 
          ")"}], "&"}], ")"}]}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "\"\<otherwise\>\"", "]"}], ";"}], "*)"}], "f", 
     ")"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.7688355114150057`*^9, 3.768835518981251*^9}, {
   3.768835960055153*^9, 3.7688359908633966`*^9}, {3.768836026145281*^9, 
   3.768836039111224*^9}, {3.768836342078354*^9, 3.768836391825111*^9}, {
   3.768836519741185*^9, 3.7688365314438467`*^9}, 3.76883658809653*^9, {
   3.768836775918283*^9, 3.7688367889720917`*^9}, {3.768836897941394*^9, 
   3.768836902671323*^9}, 3.768837017689007*^9, {3.7688373926741323`*^9, 
   3.768837457728087*^9}, {3.768837534266614*^9, 3.768837550581992*^9}, {
   3.7688381174470253`*^9, 3.76883817671975*^9}, {3.768838210458063*^9, 
   3.7688382379335814`*^9}, {3.768839419760922*^9, 3.768839420102852*^9}, {
   3.76892072561456*^9, 3.768920732773628*^9}, 3.7689241291278*^9, 
   3.768924851866302*^9, {3.768925240425166*^9, 3.768925246061204*^9}, 
   3.7689750864550753`*^9, 3.768976045840116*^9, 3.7695227139608803`*^9, 
   3.784795889658963*^9},ExpressionUUID->"c15d6be1-1711-4727-81de-\
0b38477c59c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.7694936975807343`*^9, 
  3.769493698279965*^9}},ExpressionUUID->"64211cf7-3200-4fd8-9990-\
482cd2487ea7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "TemporalMean", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Method", "\[Rule]", "\"\<Integrate\>\""}], ",", 
     RowBox[{"IntegrateOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"NIntegrateOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.690285754694715*^9, 3.6902857723199673`*^9}, 
   3.690286509899975*^9, {3.690288211046316*^9, 3.690288267166891*^9}, {
   3.690388473885751*^9, 3.690388493729035*^9}, {3.6903903913244343`*^9, 
   3.690390391432948*^9}, 3.690407473094401*^9, 3.6941290095319223`*^9, {
   3.710113803881811*^9, 3.710113811552946*^9}, 
   3.784795890588913*^9},ExpressionUUID->"a57e5873-dfea-48f7-8bdd-\
84f3ef9b590c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["TemporalVariance", "Subsection",
 CellChangeTimes->{{3.6902825801654367`*^9, 3.690282580502798*^9}, 
   3.6902866313642807`*^9, 3.690380077368309*^9, 
   3.784795965499724*^9},ExpressionUUID->"50590707-fde7-488d-963b-\
7e96ce6483bd"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769493720563191*^9, 
  3.769493721054977*^9}},ExpressionUUID->"057ea6c1-d4bd-4f2f-879d-\
6620025b80a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TemporalVariance", "::", "usage"}], "=", "\n", 
   "\"\<TemporalVariance[\!\(\*StyleBox[\"f\", \"TI\"]\), \
\!\(\*StyleBox[\"var\", \"TI\"]\)] gives the variance of \
\!\(\*StyleBox[\"f\", \"TI\"]\) with respect to \!\(\*StyleBox[\"var\", \
\"TI\"]\)\!\(\*StyleBox[\" \", \"TI\"]\)(default \!\(\*StyleBox[\"var\", \"TI\
\"]\)=\!\(\*StyleBox[\"t\", \"TI\"]\)).\n\
TemporalVariance[\!\(\*StyleBox[\"f\", \"TI\"]\), {\!\(\*StyleBox[\"var\", \
\"TI\"]\), \!\(\*StyleBox[\"varmin\", \"TI\"]\), \!\(\*StyleBox[\"varmax\", \
\"TI\"]\)}] ranges from \!\(\*StyleBox[\"varmin\", \"TI\"]\) to \
\!\(\*StyleBox[\"varmax\", \"TI\"]\).\n\
TemporalVariance[\!\(\*StyleBox[\"rulelist\", \"TI\"]\)] threads over \
\!\(\*StyleBox[\"rulelist\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.7691843036545067`*^9, 3.769184304700852*^9}, {
  3.784795966996243*^9, 
  3.784795969593032*^9}},ExpressionUUID->"0b6cdca0-bcbe-402f-8396-\
fd45f0427948"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"aef6bb57-aae0-4654-af06-\
453d3cace02c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "main", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"TemporalVariance", "[", 
     RowBox[{"f_", ",", 
      RowBox[{"{", 
       RowBox[{"var_", ",", "varmin_", ",", "varmax_"}], "}"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "integrateopts", ",", "nintegrateopts", ",", "avgopts", ",", "method", 
        ",", "avg"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"method", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Method", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "TemporalVariance", "]"}]}], "}"}], 
           "]"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"InterpolatingFunctionFunctionQ", "[", "f", "]"}], 
          "\[Equal]", "True"}], ",", 
         RowBox[{"method", "=", "\"\<NIntegrate\>\""}]}], "]"}], ";", "\n", 
       "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"TemporalDataFunctionQ", "[", "f", "]"}], "\[Equal]", 
          "True"}], ",", 
         RowBox[{"method", "=", "\"\<Sum\>\""}]}], "]"}], ";", "\n", "\t", 
       RowBox[{"integrateopts", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"IntegrateOpts", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "TemporalVariance", "]"}]}], "}"}], 
           "]"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"nintegrateopts", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"NIntegrateOpts", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "TemporalVariance", "]"}]}], "}"}], 
           "]"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"avgopts", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"TemporalMeanOpts", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "TemporalVariance", "]"}]}], "}"}], 
           "]"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"avg", "=", 
        RowBox[{"TemporalMean", "[", 
         RowBox[{"f", ",", 
          RowBox[{"{", 
           RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", "method"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"Which", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"method", "\[Equal]", "\"\<Integrate\>\""}], ",", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{"Return", "[", 
          RowBox[{
           RowBox[{"Integrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"f", "-", "avg"}], ")"}], "^", "2"}], ",", 
             RowBox[{"{", 
              RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"Sequence", "@@", "integrateopts"}], "]"}]}], "]"}], 
           "/", 
           RowBox[{"(", 
            RowBox[{"varmax", "-", "varmin"}], ")"}]}], "]"}], ",", "\n", 
         "\t\t", 
         RowBox[{"method", "\[Equal]", "\"\<NIntegrate\>\""}], ",", "\n", 
         "\t\t", 
         RowBox[{"Return", "[", 
          RowBox[{
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"f", "-", "avg"}], ")"}], "^", "2"}], ",", 
             RowBox[{"{", 
              RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"Sequence", "@@", "nintegrateopts"}], "]"}]}], "]"}], 
           "/", 
           RowBox[{"(", 
            RowBox[{"varmax", "-", "varmin"}], ")"}]}], "]"}], ",", "\n", 
         "\t\t", 
         RowBox[{"method", "\[Equal]", "\"\<Sum\>\""}], ",", "\n", "\t\t", 
         RowBox[{"Return", "[", 
          RowBox[{
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"f", "-", "avg"}], ")"}], "^", "2"}], ",", 
             RowBox[{"{", 
              RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}]}], "]"}], 
           "/", 
           RowBox[{"(", 
            RowBox[{"varmax", "-", "varmin", "+", "1"}], ")"}]}], "]"}], ",", 
         "\n", "\t\t", "Else", ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"General", "::", "badmtd"}], "]"}], ";", 
          RowBox[{"Return", "[", "$Failed", "]"}], ";"}]}], "\n", "\t", "]"}],
        ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.690287863246601*^9, 3.690287918330853*^9}, {
   3.690287949953002*^9, 3.690287984470213*^9}, {3.690288202492288*^9, 
   3.690288203165351*^9}, {3.690288269859326*^9, 3.690288279058405*^9}, {
   3.69028838310036*^9, 3.6902883884881496`*^9}, {3.690289459451592*^9, 
   3.6902895415673*^9}, {3.690289607356846*^9, 3.6902896177143087`*^9}, {
   3.6902896562246523`*^9, 3.690289728915841*^9}, {3.690289944640999*^9, 
   3.690289958237813*^9}, 3.6902902294882517`*^9, {3.690318605667149*^9, 
   3.690318614784339*^9}, {3.690318795337082*^9, 3.69031879563405*^9}, {
   3.6903800751157827`*^9, 3.690380109483981*^9}, {3.690398022786777*^9, 
   3.6903980246116047`*^9}, {3.690400360478425*^9, 3.690400374657851*^9}, {
   3.690412835627973*^9, 3.690412850939123*^9}, {3.693593369645336*^9, 
   3.6935933713013573`*^9}, {3.6941250129095163`*^9, 3.694125014179628*^9}, {
   3.694125059357633*^9, 3.6941250633158817`*^9}, {3.69412516588358*^9, 
   3.6941251802240763`*^9}, {3.694125211555581*^9, 3.694125235176145*^9}, {
   3.694129023741926*^9, 3.694129024560474*^9}, {3.694129438354104*^9, 
   3.6941294565046377`*^9}, 3.710105937832038*^9, 3.7116415864973373`*^9, 
   3.7116427477564573`*^9, 3.711643501723898*^9, 3.7689241291337843`*^9, {
   3.7689320979964857`*^9, 3.768932098362067*^9}, {3.768970546771709*^9, 
   3.76897057561931*^9}, {3.7689715588296347`*^9, 3.7689715663953047`*^9}, {
   3.76897296104355*^9, 3.768972962376038*^9}, {3.768973483649396*^9, 
   3.76897349283584*^9}, 3.768976334026267*^9, {3.768977376752125*^9, 
   3.7689774050390177`*^9}, {3.769089429918887*^9, 3.7690894360986357`*^9}, {
   3.769090240441593*^9, 3.769090255073748*^9}, 3.769522713968618*^9, {
   3.7847958943032093`*^9, 3.784795896196136*^9}, {3.784795970556892*^9, 
   3.784795975272562*^9}, 
   3.794137240377955*^9},ExpressionUUID->"0769eb6a-9477-410a-8dc8-\
53ab14b2b01e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"thread", " ", "over", " ", "RuleLists"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TemporalVariance", "[", 
      RowBox[{
       RowBox[{"f_", "?", "RuleListQ"}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<rulelist1\>\"", "]"}], ";"}], "*)"}], 
      RowBox[{"f", "/.", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x_", "\[Rule]", "val_"}], ")"}], "\[RuleDelayed]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Var", "[", "x", "]"}], "\[Rule]", 
          RowBox[{"TemporalVariance", "[", 
           RowBox[{"val", ",", "opts"}], "]"}]}], ")"}]}]}], ")"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"TemporalVariance", "[", 
      RowBox[{
       RowBox[{"f_", "?", "RuleListQ"}], ",", 
       RowBox[{"{", 
        RowBox[{"var_Symbol", ",", 
         RowBox[{"varmin_", "?", "NumericQ"}], ",", 
         RowBox[{"varmax_", "?", "NumericQ"}]}], "}"}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<rulelist2\>\"", "]"}], ";"}], "*)"}], "\n", 
      RowBox[{"f", "/.", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x_", "\[Rule]", "val_"}], ")"}], "\[RuleDelayed]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Var", "[", "x", "]"}], "\[Rule]", 
          RowBox[{"TemporalVariance", "[", 
           RowBox[{"val", ",", 
            RowBox[{"{", 
             RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", 
            "opts"}], "]"}]}], ")"}]}]}], ")"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.768832281802766*^9, 3.768832331476403*^9}, {
   3.768832622600795*^9, 3.768832633791518*^9}, {3.7688328831693153`*^9, 
   3.768832907853252*^9}, {3.768832938078471*^9, 3.768832961202097*^9}, {
   3.768833498509152*^9, 3.768833506546966*^9}, {3.768833644706731*^9, 
   3.768833664562096*^9}, {3.76883373383224*^9, 3.768833735027413*^9}, {
   3.768837748789187*^9, 3.768837788489131*^9}, 3.7688378229988403`*^9, {
   3.7688393681313753`*^9, 3.76883936946539*^9}, {3.7688394073977413`*^9, 
   3.768839408544999*^9}, {3.768905280181653*^9, 3.768905342174307*^9}, {
   3.768905454568213*^9, 3.768905458856352*^9}, {3.768905509839073*^9, 
   3.768905513470085*^9}, {3.768920859511714*^9, 3.76892088492864*^9}, {
   3.768924824369542*^9, 3.768924827579837*^9}, {3.768925132164144*^9, 
   3.768925145154291*^9}, {3.768972981726612*^9, 3.7689729912589397`*^9}, {
   3.769179306720381*^9, 3.769179311628037*^9}, {3.784795977256949*^9, 
   3.784795980508895*^9}, {3.7847961112841787`*^9, 
   3.7847961157711487`*^9}},ExpressionUUID->"705ad888-5e07-4179-823a-\
ffbf4922774c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "InterpolatingFunctionFunctions", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"TemporalVariance", "[", 
     RowBox[{
      RowBox[{"if_", "?", "InterpolatingFunctionFunctionQ"}], ",", 
      RowBox[{"var_", ":", "t"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "nintegrateopts", ",", "avgopts", ",", "ifdomains", ",", 
        "numifdomains", ",", "varmin", ",", "varmax"}], "}"}], ",", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"nintegrateopts", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"NIntegrateOpts", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "TemporalVariance", "]"}]}], "}"}], 
           "]"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"avgopts", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"TemporalMeanOpts", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "TemporalVariance", "]"}]}], "}"}], 
           "]"}]}], "]"}]}], ";", "\n", "\t\t", "\n", "\t", 
       RowBox[{"ifdomains", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", "\"\<Domain\>\"", "]"}], "\[LeftDoubleBracket]",
             "1", "\[RightDoubleBracket]"}], "&"}], ",", 
          RowBox[{"Cases", "[", 
           RowBox[{
           "if", ",", "_InterpolatingFunction", ",", "\[Infinity]", ",", 
            RowBox[{"Heads", "\[Rule]", "True"}]}], "]"}]}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"numifdomains", "=", 
        RowBox[{"Length", "[", 
         RowBox[{"Union", "[", "ifdomains", "]"}], "]"}]}], ";", "\n", "\t", 
       "\n", "\t", 
       RowBox[{"Which", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"numifdomains", "\[Equal]", "0"}], ",", "\n", "\t\t", 
         RowBox[{"Message", "[", 
          RowBox[{"TemporalVariance", "::", "norange"}], "]"}], ",", "\n", 
         "\t\t", 
         RowBox[{"numifdomains", ">", "1"}], ",", "\n", "\t\t", 
         RowBox[{"Message", "[", 
          RowBox[{"TemporalVariance", "::", "unkrange"}], "]"}], ",", "\n", 
         "\t\t", "Else", ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"varmin", ",", "varmax"}], "}"}], "=", 
           RowBox[{
           "ifdomains", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", "\t\t", 
          RowBox[{"Return", "[", 
           RowBox[{"TemporalVariance", "[", 
            RowBox[{"if", ",", 
             RowBox[{"{", 
              RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", 
             RowBox[{"Method", "\[Rule]", "\"\<NIntegrate\>\""}], ",", 
             RowBox[{"NIntegrateOpts", "\[Rule]", "nintegrateopts"}]}], "]"}],
            "]"}]}]}], "\[IndentingNewLine]", "\t", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.6902825860308123`*^9, 3.690282586336006*^9}, 
   3.690283427926217*^9, {3.690283959951191*^9, 3.690284042220743*^9}, {
   3.690284123103416*^9, 3.690284123307719*^9}, {3.690285634420931*^9, 
   3.690285634452784*^9}, {3.69028571252498*^9, 3.690285751449379*^9}, {
   3.69028620701888*^9, 3.6902862180093393`*^9}, {3.69028624866474*^9, 
   3.690286296379609*^9}, 3.690286633705567*^9, 3.690286809121889*^9, {
   3.690286953016643*^9, 3.6902870061667233`*^9}, {3.690287109693028*^9, 
   3.6902871491447287`*^9}, {3.690289789036126*^9, 3.690289798076704*^9}, {
   3.6902899269860277`*^9, 3.690289933491602*^9}, {3.690317773704399*^9, 
   3.6903177826181583`*^9}, {3.6903185842783012`*^9, 3.690318601029388*^9}, {
   3.690318738423196*^9, 3.6903187465110197`*^9}, {3.690318792250821*^9, 
   3.6903187928456793`*^9}, {3.69038008312903*^9, 3.6903801012837276`*^9}, {
   3.690381040207081*^9, 3.69038104061723*^9}, {3.690400328062758*^9, 
   3.690400344618637*^9}, {3.690400379873869*^9, 3.690400400260622*^9}, {
   3.690400512422421*^9, 3.690400522871809*^9}, {3.690400617467576*^9, 
   3.6904006178373823`*^9}, {3.690400863113646*^9, 3.690400871160748*^9}, {
   3.6904010165196257`*^9, 3.690401017186185*^9}, {3.690403154456511*^9, 
   3.690403158253292*^9}, 3.690403190188095*^9, {3.694123758796323*^9, 
   3.694123760157484*^9}, 3.694129025995729*^9, {3.694129275361885*^9, 
   3.694129291005376*^9}, {3.6941294248762074`*^9, 3.6941294297189007`*^9}, {
   3.7101059385591927`*^9, 3.710105939150214*^9}, 3.71164158651703*^9, 
   3.711642747772388*^9, 3.711643501743761*^9, 3.768924129139351*^9, {
   3.7689730034896727`*^9, 3.768973004079047*^9}, {3.7690893471348553`*^9, 
   3.769089355552808*^9}, 3.769522713975627*^9, 3.784795899301661*^9, {
   3.7847959812131157`*^9, 3.784795986406193*^9}, {3.794137240381765*^9, 
   3.794137240383789*^9}},ExpressionUUID->"646d2b5e-f6f9-41ff-92a3-\
892caf83f8a8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "InterpolatingFunctions", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TemporalVariance", "[", 
      RowBox[{"f_InterpolatingFunction", ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<raw IF\>\"", "]"}], ";"}], "*)"}], 
      RowBox[{"TemporalVariance", "[", 
       RowBox[{
        RowBox[{"f", "[", "t", "]"}], ",", "opts"}], "]"}], ")"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"TemporalVariance", "[", 
      RowBox[{"f_InterpolatingFunction", ",", 
       RowBox[{"{", 
        RowBox[{"var_Symbol", ",", 
         RowBox[{"varmin_", "?", "NumericQ"}], ",", 
         RowBox[{"varmax_", "?", "NumericQ"}]}], "}"}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\t", 
     RowBox[{"(", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<IF2\>\"", "]"}], ";"}], "*)"}], 
      RowBox[{"TemporalVariance", "[", 
       RowBox[{
        RowBox[{"f", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", "opts"}], 
       "]"}], ")"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.768832281802766*^9, 3.768832331476403*^9}, {
   3.7688360874460907`*^9, 3.768836098653079*^9}, {3.7688394165449457`*^9, 
   3.768839417455431*^9}, {3.768904643816844*^9, 3.768904647268787*^9}, {
   3.7689052310401993`*^9, 3.768905277011986*^9}, {3.7689207569295692`*^9, 
   3.768920766752754*^9}, 3.768924838199293*^9, {3.768925191111698*^9, 
   3.76892520187668*^9}, {3.768972817106908*^9, 3.768972820304393*^9}, {
   3.768976343408691*^9, 3.768976366928795*^9}, 3.769054734345091*^9, {
   3.7847959873115377`*^9, 
   3.784795989324785*^9}},ExpressionUUID->"b55eaa50-1be8-46c3-ace2-\
4ff1fabda70b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "TemporalData", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TemporalVariance", "[", 
      RowBox[{"f_TemporalData", ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "n", "}"}], ",", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", "\"\<td\>\"", "]"}], ";"}], "*)"}], "\n", "\t", 
       RowBox[{
        RowBox[{"n", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"f", "[", "\"\<LastTimes\>\"", "]"}], "-", 
             RowBox[{"f", "[", "\"\<FirstTimes\>\"", "]"}]}], ")"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", "1"}]}], ";", "\n", "\t", 
        RowBox[{
         RowBox[{"Variance", "[", "f", "]"}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}], "/", "n"}]}]}]}], "\n", "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"TemporalVariance", "[", 
      RowBox[{"f_TemporalData", ",", 
       RowBox[{"{", 
        RowBox[{"var_Symbol", ",", 
         RowBox[{"varmin_", "?", "NumericQ"}], ",", 
         RowBox[{"varmax_", "?", "NumericQ"}]}], "}"}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "n", "}"}], ",", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", "\"\<td2\>\"", "]"}], ";"}], "*)"}], "\n", 
       "\t", 
       RowBox[{
        RowBox[{"n", "=", 
         RowBox[{"varmax", "-", "varmin", "+", "1"}]}], ";", "\n", "\t", 
        RowBox[{
         RowBox[{"Variance", "[", 
          RowBox[{"TimeSeriesWindow", "[", 
           RowBox[{"f", ",", 
            RowBox[{"{", 
             RowBox[{"varmin", ",", "varmax"}], "}"}]}], "]"}], "]"}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}], "/", "n"}]}]}]}], "\n", "]"}]}], 
    ";"}]}]}]], "Code",
 CellChangeTimes->{{3.768904652479669*^9, 3.768904678681436*^9}, {
   3.768904743030691*^9, 3.768904747190234*^9}, {3.7689052019982147`*^9, 
   3.768905202416562*^9}, {3.768920744258587*^9, 3.768920749653892*^9}, 
   3.76892484454923*^9, {3.76892520404871*^9, 3.768925229678919*^9}, {
   3.768971966924591*^9, 3.768971985068715*^9}, {3.769090273433362*^9, 
   3.769090368258415*^9}, {3.76909040052238*^9, 3.769090407785018*^9}, {
   3.769090451978217*^9, 3.769090459347036*^9}, {3.7690908775509777`*^9, 
   3.769090883369114*^9}, {3.769090981368639*^9, 3.7690909950364447`*^9}, {
   3.769100257123624*^9, 3.769100264611047*^9}, {3.769100605947752*^9, 
   3.7691006170888233`*^9}, {3.7847959905143833`*^9, 
   3.78479601279414*^9}},ExpressionUUID->"86861291-aa26-4a8e-8fce-\
3fc2138099e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "TemporalDataFunctions", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"TemporalVariance", "[", 
     RowBox[{
      RowBox[{"f_", "?", "TemporalDataFunctionQ"}], ",", 
      RowBox[{"var_Symbol", ":", "t"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"domains", ",", "numdomains", ",", "varmin", ",", "varmax"}], 
       "}"}], ",", "\n", "\t", "\n", "\t", 
      RowBox[{
       RowBox[{"domains", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", "\"\<FirstTimes\>\"", "]"}], 
              "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
             RowBox[{
              RowBox[{"#", "[", "\"\<LastTimes\>\"", "]"}], 
              "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "}"}],
            "&"}], ",", 
          RowBox[{"Cases", "[", 
           RowBox[{"f", ",", "_TemporalData", ",", "\[Infinity]", ",", 
            RowBox[{"Heads", "\[Rule]", "True"}]}], "]"}]}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"numdomains", "=", 
        RowBox[{"Length", "[", 
         RowBox[{"Union", "[", "domains", "]"}], "]"}]}], ";", "\n", "\n", 
       "\t", 
       RowBox[{"Which", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"numdomains", "\[Equal]", "0"}], ",", "\n", "\t\t", 
         RowBox[{"Message", "[", 
          RowBox[{"TemporalVariance", "::", "norange"}], "]"}], ",", "\n", 
         "\t\t", 
         RowBox[{"numdomains", ">", "1"}], ",", "\n", "\t\t", 
         RowBox[{"Message", "[", 
          RowBox[{"TemporalVariance", "::", "unkrange"}], "]"}], ",", "\n", 
         "\t\t", "Else", ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"varmin", ",", "varmax"}], "}"}], "=", 
           RowBox[{
           "domains", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", "\t\t", 
          RowBox[{"Return", "[", 
           RowBox[{"TemporalVariance", "[", 
            RowBox[{"f", ",", 
             RowBox[{"{", 
              RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", 
             "opts"}], "]"}], "]"}]}]}], "\n", "\t", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.690288357462304*^9, 3.6902883580090103`*^9}, {
   3.690289582493618*^9, 3.690289584258432*^9}, {3.690317796159708*^9, 
   3.6903177985636187`*^9}, {3.690318804083301*^9, 3.690318805137845*^9}, {
   3.6903881916382313`*^9, 3.690388278197209*^9}, {3.690388413809268*^9, 
   3.690388435179152*^9}, {3.690388499184197*^9, 3.690388520277877*^9}, {
   3.6903886012184143`*^9, 3.6903886091307983`*^9}, 3.690388883757769*^9, {
   3.690388971530364*^9, 3.690388980552248*^9}, 3.690389033272348*^9, {
   3.6903900638460484`*^9, 3.690390067774722*^9}, 3.690390408603043*^9, {
   3.6903988456005583`*^9, 3.690398884077207*^9}, {3.690399713988106*^9, 
   3.6903997926007833`*^9}, {3.690402777064375*^9, 3.690402781794685*^9}, {
   3.6904031240208187`*^9, 3.69040314721561*^9}, {3.690403195892778*^9, 
   3.690403201823271*^9}, {3.690407479108864*^9, 3.690407498882142*^9}, {
   3.690410326161085*^9, 3.690410330362163*^9}, {3.690412874849804*^9, 
   3.6904128821499443`*^9}, {3.690476552255224*^9, 3.690476552468194*^9}, 
   3.690476677930087*^9, {3.694128204130086*^9, 3.694128226254518*^9}, {
   3.694128551527742*^9, 3.6941285523522778`*^9}, {3.694129003236915*^9, 
   3.694129008309512*^9}, {3.6941292947892437`*^9, 3.6941292964816093`*^9}, {
   3.710105935857864*^9, 3.7101059370138187`*^9}, 3.711641586477942*^9, 
   3.7116427477448606`*^9, 3.7116435017079563`*^9, {3.768832758447291*^9, 
   3.768832764965494*^9}, {3.768837777593522*^9, 3.768837778887732*^9}, 
   3.7689241291234007`*^9, {3.768925176680003*^9, 3.76892518627526*^9}, {
   3.768932051521277*^9, 3.7689320524238453`*^9}, {3.769087616890835*^9, 
   3.769087628068468*^9}, {3.769087993195689*^9, 3.769088106756604*^9}, {
   3.7690890231245947`*^9, 3.769089040580469*^9}, {3.7690890857980747`*^9, 
   3.7690890920087137`*^9}, {3.769089183812051*^9, 3.7690891840013943`*^9}, {
   3.769089374308374*^9, 3.769089379050879*^9}, {3.769100629750411*^9, 
   3.769100630654978*^9}, {3.769175489107079*^9, 3.769175491733735*^9}, {
   3.784796016474285*^9, 3.7847960192174683`*^9}, {3.794137240386901*^9, 
   3.794137240388637*^9}},ExpressionUUID->"e6ff9756-6cac-4bc7-8f6c-\
2d75fae7fa4b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "fallthrough", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"TemporalVariance", "[", 
     RowBox[{
      RowBox[{"f_", "?", "NumericQ"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "\"\<otherwise\>\"", "]"}], ";"}], "*)"}], "0", 
     ")"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.7688355114150057`*^9, 3.768835518981251*^9}, {
   3.768835960055153*^9, 3.7688359908633966`*^9}, {3.768836026145281*^9, 
   3.768836039111224*^9}, {3.768836342078354*^9, 3.768836391825111*^9}, {
   3.768836519741185*^9, 3.7688365314438467`*^9}, 3.76883658809653*^9, {
   3.768836775918283*^9, 3.7688367889720917`*^9}, {3.768836897941394*^9, 
   3.768836902671323*^9}, 3.768837017689007*^9, {3.7688373926741323`*^9, 
   3.768837457728087*^9}, {3.768837534266614*^9, 3.768837550581992*^9}, {
   3.7688381174470253`*^9, 3.76883817671975*^9}, {3.768838210458063*^9, 
   3.7688382379335814`*^9}, {3.768839419760922*^9, 3.768839420102852*^9}, {
   3.76892072561456*^9, 3.768920732773628*^9}, 3.7689241291278*^9, 
   3.768924851866302*^9, {3.768925240425166*^9, 3.768925246061204*^9}, {
   3.76897282455011*^9, 3.768972829516733*^9}, {3.769178925519332*^9, 
   3.769178927456957*^9}, 
   3.784796020964776*^9},ExpressionUUID->"a28b7234-f9ea-4dc7-8937-\
3bc7d7b411c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.769493728415483*^9, 
  3.76949372910131*^9}},ExpressionUUID->"c2a06834-bd7c-4523-8de3-\
b1ff3f3ec6aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "TemporalVariance", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"IntegrateOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"NIntegrateOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"TemporalMeanOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Integrate\>\""}]}], "}"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.690285754694715*^9, 3.6902857723199673`*^9}, 
   3.690286509899975*^9, 3.690286813150622*^9, {3.6902870532833443`*^9, 
   3.6902870695436563`*^9}, 3.6902905754284143`*^9, 3.690290606660974*^9, {
   3.690380087890491*^9, 3.690380095834154*^9}, {3.690380174155045*^9, 
   3.690380175192892*^9}, 3.694129031017063*^9, 3.784795901250319*^9, 
   3.784796021981744*^9},ExpressionUUID->"0fbe3a77-6c75-4b6a-8f3c-\
10391b4e5d68"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["TemporalCovariance", "Subsection",
 CellChangeTimes->{{3.6902825801654367`*^9, 3.690282580502798*^9}, 
   3.6902866313642807`*^9, 3.6902908662738132`*^9, {3.690379928130348*^9, 
   3.690379929203802*^9}, 
   3.784799182773622*^9},ExpressionUUID->"68a5ea3f-91cd-4d3c-99df-\
26946fe640a9"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769493735953105*^9, 
  3.769493736467226*^9}},ExpressionUUID->"2160da0c-6fc6-4f38-b84d-\
c1ae5237caf6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TemporalCovariance", "::", "usage"}], "=", "\n", 
   "\"\<TemporalCovariance[\!\(\*StyleBox[\"f1\", \"TI\"]\), \
\!\(\*StyleBox[\"f2\", \"TI\"]\), \!\(\*StyleBox[\"var\", \"TI\"]\)] gives \
the covariance of \!\(\*StyleBox[\"f1\", \"TI\"]\) and \!\(\*StyleBox[\"f2\", \
\"TI\"]\) with respect to \!\(\*StyleBox[\"var\", \"TI\"]\)\!\(\*StyleBox[\" \
\", \"TI\"]\)(default \!\(\*StyleBox[\"var\", \"TI\"]\)=\!\(\*StyleBox[\"t\", \
\"TI\"]\)).\nTemporalCovariance[\!\(\*StyleBox[\"f1\", \"TI\"]\), \
\!\(\*StyleBox[\"f2\", \"TI\"]\), {\!\(\*StyleBox[\"var\", \"TI\"]\), \
\!\(\*StyleBox[\"varmin\", \"TI\"]\), \!\(\*StyleBox[\"varmax\", \"TI\"]\)}] \
ranges from \!\(\*StyleBox[\"varmin\", \"TI\"]\) to \
\!\(\*StyleBox[\"varmax\", \"TI\"]\).\n\
TemporalCovariance[\!\(\*StyleBox[\"rulelist\", \"TI\"]\)] threads over \
\!\(\*StyleBox[\"rulelist\", \"TI\"]\) to give variances and \
covariances.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769849021736622*^9, 3.769849061273924*^9}, {
  3.7698492187731524`*^9, 3.7698492348661013`*^9}, {3.784799183789171*^9, 
  3.784799185810545*^9}},ExpressionUUID->"058cfd5d-22f7-42b8-98cb-\
7f3281744a4f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"8d747166-254e-43c2-a13a-\
31fc250441d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "main", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"TemporalCovariance", "[", 
     RowBox[{"f1_", ",", "f2_", ",", 
      RowBox[{"{", 
       RowBox[{"var_Symbol", ",", 
        RowBox[{"varmin_", "?", "NumericQ"}], ",", 
        RowBox[{"varmax_", "?", "NumericQ"}]}], "}"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "integrateopts", ",", "nintegrateopts", ",", "avgopts", ",", "method", 
        ",", "avg1", ",", "avg2"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"method", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Method", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "TemporalCovariance", "]"}]}], "}"}], 
           "]"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"InterpolatingFunctionFunctionQ", "[", "f1", "]"}], 
            "\[Equal]", "True"}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"InterpolatingFunctionFunctionQ", "[", "f2", "]"}], 
            "\[Equal]", "True"}], ")"}]}], ",", 
         RowBox[{"method", "=", "\"\<NIntegrate\>\""}]}], "]"}], ";", "\n", 
       "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"TemporalDataFunctionQ", "[", "f1", "]"}], "\[Equal]", 
            "True"}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"TemporalDataFunctionQ", "[", "f2", "]"}], "\[Equal]", 
            "True"}], ")"}]}], ",", 
         RowBox[{"method", "=", "\"\<Sum\>\""}]}], "]"}], ";", "\n", "\t", 
       RowBox[{"integrateopts", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"IntegrateOpts", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "TemporalCovariance", "]"}]}], "}"}], 
           "]"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"nintegrateopts", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"NIntegrateOpts", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "TemporalCovariance", "]"}]}], "}"}], 
           "]"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"avgopts", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"TemporalMeanOpts", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "TemporalCovariance", "]"}]}], "}"}], 
           "]"}]}], "]"}]}], ";", "\n", "\t", "\n", "\t", 
       RowBox[{"avg1", "=", 
        RowBox[{"TemporalMean", "[", 
         RowBox[{"f1", ",", 
          RowBox[{"{", 
           RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", "method"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"avg2", "=", 
        RowBox[{"TemporalMean", "[", 
         RowBox[{"f2", ",", 
          RowBox[{"{", 
           RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", "method"}]}], "]"}]}], ";", "\n", "\t",
        "\n", "\t", 
       RowBox[{"Which", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"method", "\[Equal]", "\"\<Integrate\>\""}], ",", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{"Return", "[", 
          RowBox[{
           RowBox[{"Integrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"f1", "-", "avg1"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"f2", "-", "avg2"}], ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"Sequence", "@@", "integrateopts"}], "]"}]}], "]"}], 
           "/", 
           RowBox[{"(", 
            RowBox[{"varmax", "-", "varmin"}], ")"}]}], "]"}], ",", "\n", 
         "\t\t", 
         RowBox[{"method", "\[Equal]", "\"\<NIntegrate\>\""}], ",", "\n", 
         "\t\t", 
         RowBox[{"Return", "[", 
          RowBox[{
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"f1", "-", "avg1"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"f2", "-", "avg2"}], ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"Sequence", "@@", "nintegrateopts"}], "]"}]}], "]"}], 
           "/", 
           RowBox[{"(", 
            RowBox[{"varmax", "-", "varmin"}], ")"}]}], "]"}], ",", "\n", 
         "\t\t", 
         RowBox[{"method", "\[Equal]", "\"\<Sum\>\""}], ",", "\n", "\t\t", 
         RowBox[{"Return", "[", 
          RowBox[{
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"f1", "-", "avg1"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"f2", "-", "avg2"}], ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}]}], "]"}], 
           "/", 
           RowBox[{"(", 
            RowBox[{"varmax", "-", "varmin", "+", "1"}], ")"}]}], "]"}], ",", 
         "\n", "\t\t", "Else", ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"General", "::", "badmtd"}], "]"}], ";", 
          RowBox[{"Return", "[", "$Failed", "]"}], ";"}]}], "\n", "\t", "]"}],
        ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.690287863246601*^9, 3.690287918330853*^9}, {
   3.690287949953002*^9, 3.690287984470213*^9}, {3.690288202492288*^9, 
   3.690288203165351*^9}, {3.690288269859326*^9, 3.690288279058405*^9}, {
   3.69028838310036*^9, 3.6902883884881496`*^9}, {3.690289459451592*^9, 
   3.6902895415673*^9}, {3.690289607356846*^9, 3.6902896177143087`*^9}, {
   3.6902896562246523`*^9, 3.690289728915841*^9}, {3.690289944640999*^9, 
   3.690289958237813*^9}, 3.6902902294882517`*^9, {3.6902908694612083`*^9, 
   3.690290942528583*^9}, {3.690327388583004*^9, 3.690327390152213*^9}, {
   3.690379924506555*^9, 3.690379924958449*^9}, {3.6903801177319803`*^9, 
   3.690380122428493*^9}, {3.690398029283079*^9, 3.6903980346607237`*^9}, {
   3.690411454729187*^9, 3.6904115046970997`*^9}, {3.690411551877288*^9, 
   3.690411557640525*^9}, 3.690412823904641*^9, 3.690413319115198*^9, 
   3.690476739929735*^9, {3.693593373477764*^9, 3.693593374943089*^9}, {
   3.6941252482646*^9, 3.6941252504495077`*^9}, {3.694125922366151*^9, 
   3.694125937974535*^9}, {3.694129032827969*^9, 3.6941290340907917`*^9}, {
   3.694129369273045*^9, 3.6941294010987043`*^9}, 3.710105939853644*^9, {
   3.711641586535746*^9, 3.7116415865468893`*^9}, {3.7116427477924833`*^9, 
   3.7116427478003273`*^9}, {3.71164350176329*^9, 3.7116435017708*^9}, {
   3.7689241291456957`*^9, 3.768924129148822*^9}, {3.76905391553366*^9, 
   3.769053940311289*^9}, {3.769053998004611*^9, 3.7690540478263893`*^9}, {
   3.769054092395093*^9, 3.7690540941369133`*^9}, {3.7691746358712463`*^9, 
   3.769174643180559*^9}, {3.7691754202917223`*^9, 3.769175425592548*^9}, {
   3.7691756482290487`*^9, 3.769175648427161*^9}, 3.769184310134725*^9, {
   3.769522713983685*^9, 3.769522713987047*^9}, {3.7773704140155687`*^9, 
   3.777370418460307*^9}, {3.777540158132691*^9, 3.777540164331419*^9}, {
   3.784795903872534*^9, 3.784795905999735*^9}, {3.7847991885139503`*^9, 
   3.7847991906093388`*^9}, 
   3.794137240392973*^9},ExpressionUUID->"fccb2e1d-a5d1-4620-aee0-\
fee3f7649c09"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"thread", " ", "over", " ", "rule", " ", "lists"}], " ", "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TemporalCovariance", "[", 
      RowBox[{
       RowBox[{"f_", "?", "RuleListQ"}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"vars", ",", "pairs"}], "}"}], ",", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", "\"\<threading 1\>\"", "]"}], ";"}], "*)"}], 
       "\n", "\t", 
       RowBox[{
        RowBox[{"vars", "=", 
         RowBox[{"Keys", "[", "f", "]"}]}], ";", "\n", "\t", 
        RowBox[{"pairs", "=", 
         RowBox[{"Subsets", "[", 
          RowBox[{"vars", ",", 
           RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\n", "\t", 
        RowBox[{"Return", "[", 
         RowBox[{"Join", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Var", "[", "var", "]"}], "\[Rule]", 
              RowBox[{"TemporalVariance", "[", 
               RowBox[{
                RowBox[{"var", "/.", "f"}], ",", "opts"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"var", ",", "vars"}], "}"}]}], "]"}], ",", "\n", "\t\t", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Cov", "[", 
               RowBox[{"Evaluate", "@@", 
                RowBox[{"Sequence", "[", "pair", "]"}]}], "]"}], "\[Rule]", 
              RowBox[{"TemporalCovariance", "[", 
               RowBox[{
                RowBox[{"Evaluate", "@@", 
                 RowBox[{"Sequence", "[", 
                  RowBox[{"pair", "/.", "f"}], "]"}]}], ",", "opts"}], 
               "]"}]}], "\n", "\t", ",", 
             RowBox[{"{", 
              RowBox[{"pair", ",", "pairs"}], "}"}]}], "]"}]}], "]"}], 
         "]"}]}]}], "\n", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"TemporalCovariance", "[", 
      RowBox[{
       RowBox[{"f_", "?", "RuleListQ"}], ",", 
       RowBox[{"{", 
        RowBox[{"var_Symbol", ",", 
         RowBox[{"varmin_", "?", "NumericQ"}], ",", 
         RowBox[{"varmax_", "?", "NumericQ"}]}], "}"}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"vars", ",", "pairs"}], "}"}], ",", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", "\"\<threading 2\>\"", "]"}], ";"}], "*)"}], 
       "\n", "\t", 
       RowBox[{
        RowBox[{"vars", "=", 
         RowBox[{"Keys", "[", "f", "]"}]}], ";", "\n", "\t", 
        RowBox[{"pairs", "=", 
         RowBox[{"Subsets", "[", 
          RowBox[{"vars", ",", 
           RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\n", "\t", 
        RowBox[{"Return", "[", 
         RowBox[{"Join", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Var", "[", "var", "]"}], "\[Rule]", 
              RowBox[{"TemporalVariance", "[", 
               RowBox[{
                RowBox[{"var", "/.", "f"}], ",", 
                RowBox[{"{", 
                 RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", 
                "opts"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"var", ",", "vars"}], "}"}]}], "]"}], ",", "\n", "\t\t", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Cov", "[", 
               RowBox[{"Evaluate", "@@", 
                RowBox[{"Sequence", "[", "pair", "]"}]}], "]"}], "\[Rule]", 
              RowBox[{"TemporalCovariance", "[", 
               RowBox[{
                RowBox[{"Evaluate", "@@", 
                 RowBox[{"Sequence", "[", 
                  RowBox[{"pair", "/.", "f"}], "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", 
                "opts"}], "]"}]}], "\n", "\t", ",", 
             RowBox[{"{", 
              RowBox[{"pair", ",", "pairs"}], "}"}]}], "]"}]}], "]"}], 
         "]"}]}]}], "\n", "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQnZVrpqQk+sZR9vR0AxAdVbfaCkS/rGe3BtH39s2K
A9EJ+s2pIDou+XMRmB/9ogREN6WeqgTRSrJ61SCaI+ZRF4j2XnelB0Qv1t0w
G0TndH6ZC6ILln1ZDdZ3THMHiDY8//IoiD7H73AMLB/NcgpE79niBaZ13M6e
B9EHJIUvgOgJ5997KwNpG65nfiDa74tcFoh+y+gJpr3Yq6pANEOKWw2ITg/e
chJEL9hx4gKI/jbbbGO22BtHpsDmTSB6w6ToCyBaefIjML2iV//jG6M3js+K
JoPpnQ8Vqt8BaQUVp3oQDQBfR4d4
  
  "],ExpressionUUID->"e5b6b9b1-5322-476f-b437-8f60a35d8e0b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "InterpolatingFunctionFunctions", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TemporalCovariance", "[", 
      RowBox[{"if1_", ",", 
       RowBox[{"if2_", "?", "InterpolatingFunctionFunctionQ"}], ",", 
       RowBox[{"var_", ":", "t"}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "nintegrateopts", ",", "avgopts", ",", "ifdomains", ",", 
         "numifdomains", ",", "varmin", ",", "varmax"}], "}"}], ",", "\n", 
       "\t", 
       RowBox[{
        RowBox[{"nintegrateopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"NIntegrateOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "TemporalCovariance", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", "\t", 
        RowBox[{"avgopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"TemporalMeanOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "TemporalCovariance", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\n", "\t", 
        RowBox[{"ifdomains", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", "\"\<Domain\>\"", "]"}], 
             "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "&"}], 
           ",", 
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"if1", ",", "if2"}], "}"}], ",", 
             "_InterpolatingFunction", ",", "\[Infinity]", ",", 
             RowBox[{"Heads", "\[Rule]", "True"}]}], "]"}]}], "]"}]}], ";", 
        "\n", "\t", 
        RowBox[{"numifdomains", "=", 
         RowBox[{"Length", "[", 
          RowBox[{"Union", "[", "ifdomains", "]"}], "]"}]}], ";", "\n", "\t", 
        "\n", "\t", 
        RowBox[{"Which", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{"numifdomains", "\[Equal]", "0"}], ",", "\n", "\t\t", 
          RowBox[{"Message", "[", 
           RowBox[{"TemporalCovariance", "::", "norange"}], "]"}], ",", "\n", 
          "\t\t", 
          RowBox[{"numifdomains", ">", "1"}], ",", "\n", "\t\t", 
          RowBox[{"Message", "[", 
           RowBox[{"TemporalCovariance", "::", "unkrange"}], "]"}], ",", "\n",
           "\t\t", "Else", ",", "\n", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"varmin", ",", "varmax"}], "}"}], "=", 
            RowBox[{
            "ifdomains", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", "\t\t", 
           
           RowBox[{"Return", "[", 
            RowBox[{"TemporalCovariance", "[", 
             RowBox[{"if1", ",", "if2", ",", 
              RowBox[{"{", 
               RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", 
              RowBox[{"Method", "\[Rule]", "\"\<NIntegrate\>\""}], ",", 
              RowBox[{"NIntegrateOpts", "\[Rule]", "nintegrateopts"}]}], 
             "]"}], "]"}]}]}], "\[IndentingNewLine]", "\t", "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"TemporalCovariance", "[", 
      RowBox[{
       RowBox[{"if1_", "?", "InterpolatingFunctionFunctionQ"}], ",", "if2_", 
       ",", 
       RowBox[{"var_", ":", "t"}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"TemporalCovariance", "[", 
      RowBox[{"if2", ",", "if1", ",", "var", ",", "opts"}], "]"}]}], 
    ";"}]}]}]], "Code",
 CellChangeTimes->{{3.6902825860308123`*^9, 3.690282586336006*^9}, 
   3.690283427926217*^9, {3.690283959951191*^9, 3.690284042220743*^9}, {
   3.690284123103416*^9, 3.690284123307719*^9}, {3.690285634420931*^9, 
   3.690285634452784*^9}, {3.69028571252498*^9, 3.690285751449379*^9}, {
   3.69028620701888*^9, 3.6902862180093393`*^9}, {3.69028624866474*^9, 
   3.690286296379609*^9}, 3.690286633705567*^9, 3.690286809121889*^9, {
   3.690286953016643*^9, 3.6902870061667233`*^9}, {3.690287109693028*^9, 
   3.6902871491447287`*^9}, {3.690289789036126*^9, 3.690289798076704*^9}, {
   3.6902899269860277`*^9, 3.690289933491602*^9}, {3.6902909514288387`*^9, 
   3.690290966453299*^9}, {3.690290997741214*^9, 3.69029101411274*^9}, 
   3.6903188411234713`*^9, {3.6903778841714077`*^9, 3.690377887982587*^9}, {
   3.6903790483596992`*^9, 3.690379054514027*^9}, {3.690379920393053*^9, 
   3.69037992076075*^9}, {3.690380127144643*^9, 3.690380129927813*^9}, {
   3.690400542374116*^9, 3.690400611434642*^9}, {3.690400664016159*^9, 
   3.69040072456695*^9}, {3.690411609451578*^9, 3.690411611225864*^9}, 
   3.690412818679573*^9, {3.6904173719712343`*^9, 3.690417375480257*^9}, {
   3.69041746736761*^9, 3.690417467873968*^9}, {3.6904759952553587`*^9, 
   3.690476002838469*^9}, {3.690476744215679*^9, 3.69047674455567*^9}, 
   3.6941290350524893`*^9, {3.694129314343873*^9, 3.6941293636581917`*^9}, {
   3.69412940594727*^9, 3.69412940624159*^9}, {3.710105940598199*^9, 
   3.7101059411880713`*^9}, 3.711641586558845*^9, 3.711642747816203*^9, 
   3.711643501787431*^9, 3.768924129154086*^9, {3.7690543876284637`*^9, 
   3.7690543993116713`*^9}, {3.769522713994321*^9, 3.7695227139967203`*^9}, 
   3.784795907325718*^9, {3.78479922700115*^9, 3.7847992323795233`*^9}, {
   3.79413724039644*^9, 
   3.794137240398349*^9}},ExpressionUUID->"d83813d2-8ab0-4208-9097-\
1bad2412f669"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "InterpolatingFunctions", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TemporalCovariance", "[", 
      RowBox[{
      "f1_InterpolatingFunction", ",", "f2_InterpolatingFunction", ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<raw IF\>\"", "]"}], ";"}], "*)"}], 
      RowBox[{"TemporalCovariance", "[", 
       RowBox[{
        RowBox[{"f1", "[", "t", "]"}], ",", 
        RowBox[{"f2", "[", "t", "]"}], ",", "opts"}], "]"}], ")"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"TemporalCovariance", "[", 
      RowBox[{
      "f1_InterpolatingFunction", ",", "f2_InterpolatingFunction", ",", 
       RowBox[{"{", 
        RowBox[{"var_Symbol", ",", 
         RowBox[{"varmin_", "?", "NumericQ"}], ",", 
         RowBox[{"varmax_", "?", "NumericQ"}]}], "}"}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\t", 
     RowBox[{"(", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<IF2\>\"", "]"}], ";"}], "*)"}], 
      RowBox[{"TemporalCovariance", "[", 
       RowBox[{
        RowBox[{"f1", "[", "t", "]"}], ",", 
        RowBox[{"f2", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", "opts"}], 
       "]"}], ")"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.768832281802766*^9, 3.768832331476403*^9}, {
   3.7688360874460907`*^9, 3.768836098653079*^9}, {3.7688394165449457`*^9, 
   3.768839417455431*^9}, {3.768904643816844*^9, 3.768904647268787*^9}, {
   3.7689052310401993`*^9, 3.768905277011986*^9}, {3.7689207569295692`*^9, 
   3.768920766752754*^9}, 3.768924838199293*^9, {3.768925191111698*^9, 
   3.76892520187668*^9}, {3.768972817106908*^9, 3.768972820304393*^9}, {
   3.768976343408691*^9, 3.768976366928795*^9}, {3.76905441997887*^9, 
   3.769054420342186*^9}, {3.769054688275703*^9, 3.769054725416444*^9}, {
   3.784799233244726*^9, 
   3.784799235477511*^9}},ExpressionUUID->"c7568b08-d664-4379-9b83-\
a81ea95d3584"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "TemporalData", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TemporalCovariance", "[", 
      RowBox[{"f1_TemporalData", ",", "f2_TemporalData", ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "n", "}"}], ",", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", "\"\<td\>\"", "]"}], ";"}], "*)"}], "\n", "\t", 
       RowBox[{
        RowBox[{"n", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"f1", "[", "\"\<LastTimes\>\"", "]"}], "-", 
             RowBox[{"f1", "[", "\"\<FirstTimes\>\"", "]"}]}], ")"}], 
           "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "+", 
          "1"}]}], ";", "\n", "\t", 
        RowBox[{
         RowBox[{"Covariance", "[", 
          RowBox[{
           RowBox[{"f1", "[", "\"\<Values\>\"", "]"}], ",", 
           RowBox[{"f2", "[", "\"\<Values\>\"", "]"}]}], "]"}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}], "/", "n"}]}]}]}], "\n", "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"TemporalCovariance", "[", 
      RowBox[{"f1_TemporalData", ",", "f2_TemporalData", ",", 
       RowBox[{"{", 
        RowBox[{"var_Symbol", ",", 
         RowBox[{"varmin_", "?", "NumericQ"}], ",", 
         RowBox[{"varmax_", "?", "NumericQ"}]}], "}"}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "n", "}"}], ",", "\n", "\t", 
       RowBox[{
        RowBox[{"n", "=", 
         RowBox[{"varmax", "-", "varmin", "+", "1"}]}], ";", "\n", "\t", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", "\"\<td2\>\"", "]"}], ";"}], "*)"}], "\n", 
        "\t", 
        RowBox[{
         RowBox[{"Covariance", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"TimeSeriesWindow", "[", 
             RowBox[{"f1", ",", 
              RowBox[{"{", 
               RowBox[{"varmin", ",", "varmax"}], "}"}]}], "]"}], "[", 
            "\"\<Values\>\"", "]"}], ",", 
           RowBox[{
            RowBox[{"TimeSeriesWindow", "[", 
             RowBox[{"f2", ",", 
              RowBox[{"{", 
               RowBox[{"varmin", ",", "varmax"}], "}"}]}], "]"}], "[", 
            "\"\<Values\>\"", "]"}]}], "]"}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}], "/", "n"}]}]}]}], "\n", "]"}]}], 
    ";"}]}]}]], "Code",
 CellChangeTimes->{{3.768904652479669*^9, 3.768904678681436*^9}, {
   3.768904743030691*^9, 3.768904747190234*^9}, {3.7689052019982147`*^9, 
   3.768905202416562*^9}, {3.768920744258587*^9, 3.768920749653892*^9}, 
   3.76892484454923*^9, {3.76892520404871*^9, 3.768925229678919*^9}, {
   3.768971966924591*^9, 3.768971985068715*^9}, {3.769054434271874*^9, 
   3.769054456236843*^9}, {3.769054668654099*^9, 3.769054684576782*^9}, {
   3.769086792335428*^9, 3.7690867953125257`*^9}, {3.769174859636086*^9, 
   3.7691748671633043`*^9}, {3.769174909636252*^9, 3.7691749477035017`*^9}, {
   3.769175026963633*^9, 3.769175066617797*^9}, 3.777370213277534*^9, {
   3.777370502391522*^9, 3.777370508788168*^9}, {3.7773705777829733`*^9, 
   3.777370580468672*^9}, 3.7775401717195063`*^9, {3.7775403207895803`*^9, 
   3.777540340017177*^9}, {3.7847992362781353`*^9, 
   3.7847992475624523`*^9}},ExpressionUUID->"9f09e03d-bcd2-4273-b844-\
a36c520d923f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "TemporalDataFunctions", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TemporalCovariance", "[", 
      RowBox[{"f1_", ",", 
       RowBox[{"f2_", "?", "TemporalDataFunctionQ"}], ",", 
       RowBox[{"var_Symbol", ":", "t"}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"domains", ",", "numdomains", ",", "varmin", ",", "varmax"}], 
        "}"}], ",", "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", "\"\<tdf2\>\"", "]"}], ";"}], "*)"}], "\n", 
       "\t", "\n", "\t", 
       RowBox[{
        RowBox[{"domains", "=", 
         RowBox[{"Join", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", "\"\<FirstTimes\>\"", "]"}], 
                 "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
                
                RowBox[{
                 RowBox[{"#", "[", "\"\<LastTimes\>\"", "]"}], 
                 "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
               "}"}], "&"}], ",", 
             RowBox[{"Cases", "[", 
              RowBox[{"f1", ",", "_TemporalData", ",", "\[Infinity]", ",", 
               RowBox[{"Heads", "\[Rule]", "True"}]}], "]"}]}], "]"}], ",", 
           "\n", "\t\t", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", "\"\<FirstTimes\>\"", "]"}], 
                 "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
                
                RowBox[{
                 RowBox[{"#", "[", "\"\<LastTimes\>\"", "]"}], 
                 "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
               "}"}], "&"}], ",", 
             RowBox[{"Cases", "[", 
              RowBox[{"f2", ",", "_TemporalData", ",", "\[Infinity]", ",", 
               RowBox[{"Heads", "\[Rule]", "True"}]}], "]"}]}], "]"}]}], "\n",
           "\t", "]"}]}], ";", "\n", "\t", 
        RowBox[{"numdomains", "=", 
         RowBox[{"Length", "[", 
          RowBox[{"Union", "[", "domains", "]"}], "]"}]}], ";", "\n", "\t", 
        "\n", "\t", 
        RowBox[{"Which", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{"numdomains", "\[Equal]", "0"}], ",", "\n", "\t\t", 
          RowBox[{"Message", "[", 
           RowBox[{"TemporalCovariance", "::", "norange"}], "]"}], ",", "\n", 
          "\t\t", 
          RowBox[{"numdomains", ">", "1"}], ",", "\n", "\t\t", 
          RowBox[{"Message", "[", 
           RowBox[{"TemporalCovariance", "::", "unkrange"}], "]"}], ",", "\n",
           "\t\t", "Else", ",", "\n", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"varmin", ",", "varmax"}], "}"}], "=", 
            RowBox[{
            "domains", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", "\t\t", 
           
           RowBox[{"Return", "[", 
            RowBox[{"TemporalCovariance", "[", 
             RowBox[{"f1", ",", "f2", ",", 
              RowBox[{"{", 
               RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", 
              "opts"}], "]"}], "]"}]}]}], "\n", "\t", "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"TemporalCovariance", "[", 
      RowBox[{
       RowBox[{"f1_", "?", "TemporalDataFunctionQ"}], ",", "f2_", ",", 
       RowBox[{"var_", ":", "t"}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<tdf1\>\"", "]"}], ";"}], "*)"}], 
      RowBox[{"TemporalCovariance", "[", 
       RowBox[{"f2", ",", "f1", ",", "var", ",", "opts"}], "]"}], ")"}]}], 
    ";"}]}]}]], "Code",
 CellChangeTimes->{{3.690288357462304*^9, 3.6902883580090103`*^9}, {
   3.690289582493618*^9, 3.690289584258432*^9}, {3.690317796159708*^9, 
   3.6903177985636187`*^9}, {3.690318804083301*^9, 3.690318805137845*^9}, {
   3.6903881916382313`*^9, 3.690388278197209*^9}, {3.690388413809268*^9, 
   3.690388435179152*^9}, {3.690388499184197*^9, 3.690388520277877*^9}, {
   3.6903886012184143`*^9, 3.6903886091307983`*^9}, 3.690388883757769*^9, {
   3.690388971530364*^9, 3.690388980552248*^9}, 3.690389033272348*^9, {
   3.6903900638460484`*^9, 3.690390067774722*^9}, 3.690390408603043*^9, {
   3.6903988456005583`*^9, 3.690398884077207*^9}, {3.690399713988106*^9, 
   3.6903997926007833`*^9}, {3.690402777064375*^9, 3.690402781794685*^9}, {
   3.6904031240208187`*^9, 3.69040314721561*^9}, {3.690403195892778*^9, 
   3.690403201823271*^9}, {3.690407479108864*^9, 3.690407498882142*^9}, {
   3.690410326161085*^9, 3.690410330362163*^9}, {3.690412874849804*^9, 
   3.6904128821499443`*^9}, {3.690476552255224*^9, 3.690476552468194*^9}, 
   3.690476677930087*^9, {3.694128204130086*^9, 3.694128226254518*^9}, {
   3.694128551527742*^9, 3.6941285523522778`*^9}, {3.694129003236915*^9, 
   3.694129008309512*^9}, {3.6941292947892437`*^9, 3.6941292964816093`*^9}, {
   3.710105935857864*^9, 3.7101059370138187`*^9}, 3.711641586477942*^9, 
   3.7116427477448606`*^9, 3.7116435017079563`*^9, {3.768832758447291*^9, 
   3.768832764965494*^9}, {3.768837777593522*^9, 3.768837778887732*^9}, 
   3.7689241291234007`*^9, {3.768925176680003*^9, 3.76892518627526*^9}, {
   3.768932051521277*^9, 3.7689320524238453`*^9}, {3.769087616890835*^9, 
   3.769087628068468*^9}, {3.769087993195689*^9, 3.769088106756604*^9}, {
   3.7690890231245947`*^9, 3.769089040580469*^9}, {3.7690890857980747`*^9, 
   3.769089174212036*^9}, 3.769175169573151*^9, {3.769175477310965*^9, 
   3.769175480220107*^9}, {3.7691755978930264`*^9, 3.76917563511413*^9}, {
   3.7698511123037233`*^9, 3.7698511163673487`*^9}, {3.769851318590794*^9, 
   3.7698513485336323`*^9}, {3.769851545628716*^9, 3.7698515502479477`*^9}, 
   3.7773702099951067`*^9, 3.777370392598381*^9, {3.7775401771334763`*^9, 
   3.777540189930209*^9}, {3.784799260822825*^9, 3.78479926513361*^9}, {
   3.794137240401908*^9, 
   3.794137240403857*^9}},ExpressionUUID->"63af9682-547d-493e-8fd1-\
b70bdae59baf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.7694937428154984`*^9, 
  3.769493743502386*^9}},ExpressionUUID->"a5017321-4655-42e5-a681-\
3751e46e87a7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "TemporalCovariance", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"IntegrateOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"NIntegrateOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"TemporalMeanOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Integrate\>\""}]}], "}"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.690285754694715*^9, 3.6902857723199673`*^9}, 
   3.690286509899975*^9, 3.690286813150622*^9, {3.6902870532833443`*^9, 
   3.6902870695436563`*^9}, 3.6902905754284143`*^9, 3.690290606660974*^9, {
   3.6902908595737457`*^9, 3.690290861480461*^9}, {3.690380145996565*^9, 
   3.690380152860821*^9}, 3.6941290361222963`*^9, 3.784795908335861*^9, 
   3.784799265901492*^9},ExpressionUUID->"da6716aa-2588-4a38-97df-\
8e751b4e61f8"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["ExtractPlotPoints", "Subsection",
 CellChangeTimes->{{3.68917332588813*^9, 3.68917332908529*^9}, {
   3.689173764304393*^9, 3.6891737649808893`*^9}, 3.68917439559696*^9, 
   3.7116213557367067`*^9},ExpressionUUID->"77ac0e8f-57d0-4044-93f4-\
0d9998e7dea8"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.7694937498131323`*^9, 
  3.769493752642623*^9}},ExpressionUUID->"35735037-467a-4dc5-9119-\
1980613239fa"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExtractPlotPoints", "::", "usage"}], "=", "\n", 
   "\"\<ExtractPlotPoints[\!\(\*StyleBox[\"plot\", \"TI\"]\)] extracts lists \
of points from lines in \!\(\*StyleBox[\"plot\", \"TI\"]\).\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.769184694407236*^9, 
  3.769184695174663*^9}},ExpressionUUID->"a7ab6946-7961-4858-9b72-\
196f64686d24"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"f50788cd-9397-45dd-ac12-\
8e2936df37ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"by", " ", "Jens"}], " ", "<", 
     RowBox[{"http", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", "a"}],
        "/", "20282"}], "/", "6358"}], ">"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"ExtractPlotPoints", "[", "plot_Graphics", "]"}], ":=", 
    RowBox[{"Cases", "[", 
     RowBox[{
      RowBox[{"Normal", "@", "plot"}], ",", 
      RowBox[{
       RowBox[{"Line", "[", "x_", "]"}], "\[RuleDelayed]", "x"}], ",", 
      "\[Infinity]"}], "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.6891731164981318`*^9, 3.689173138669693*^9}, {
   3.689173337156083*^9, 3.68917333789207*^9}, {3.689173747361622*^9, 
   3.689173804104391*^9}, {3.689174284008299*^9, 3.6891742855777407`*^9}, {
   3.689174320478813*^9, 3.6891743237877493`*^9}, {3.689174363001788*^9, 
   3.689174398346958*^9}, 3.711621355753667*^9, {3.71162209038614*^9, 
   3.711622091677738*^9}, 3.711632230547645*^9, {3.7116329475785913`*^9, 
   3.7116329509537573`*^9}},ExpressionUUID->"9031e534-1577-4d94-b5f8-\
b07a89ed0e43"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["GetPlotRange", "Subsection",
 CellChangeTimes->{{3.815778303147049*^9, 
  3.815778304712442*^9}},ExpressionUUID->"54d234c6-a413-4897-ba82-\
d9ded5620d39"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"prF2", " ", "by", " ", "kglr"}], " ", "<", 
     RowBox[{"https", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", "a"}],
        "/", "156783"}], "/", "6358"}], ">"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"GetPlotRange", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Through", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Min", ",", "Max"}], "}"}], "@", "#"}], "]"}], "&"}], "/@", 
      
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{"Join", "@@", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"#", "//", "ToBoxes"}], ",", 
           RowBox[{
            RowBox[{"RectangleBox", "[", 
             RowBox[{"x_", ",", "y_", ",", "___"}], "]"}], "\[RuleDelayed]", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}]}], ",", "\[Infinity]"}], "]"}]}], 
        "/.", 
        RowBox[{
         RowBox[{"NCache", "[", 
          RowBox[{"_", ",", "vals_"}], "]"}], "\[Rule]", "vals"}]}], "]"}]}], 
     "&"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.815778307402853*^9, 3.815778392911399*^9}, 
   3.815779603585181*^9},ExpressionUUID->"20b7acb1-2d86-41d8-ad83-\
0ac7a231f86d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Else", "Subsection",
 CellChangeTimes->{{3.6885759728386517`*^9, 
  3.688575973134968*^9}},ExpressionUUID->"3400c6dc-4cea-4bdd-bbfc-\
22ca704d8fae"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.7694937721773148`*^9, 
  3.7694937726552143`*^9}},ExpressionUUID->"e435ab6f-1759-4abd-b148-\
4d8aaacbd581"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Else", "::", "usage"}], "=", "\n", 
   "\"\<Else is an alias for True.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769184725063306*^9, 
  3.769184727017116*^9}},ExpressionUUID->"00046ded-d472-4971-add5-\
0d497411c4d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"d95ef452-6e79-45d0-9777-\
087feb7fd1bf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Else", "=", "True"}], ";"}]], "Code",
 CellChangeTimes->{{3.6885759741288233`*^9, 
  3.68857597592712*^9}},ExpressionUUID->"3db227ac-b126-4796-abe6-\
3a7b94bd7ec3"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["SpFrac", "Subsection",
 CellChangeTimes->{{3.6879640516646233`*^9, 
  3.687964052933432*^9}},ExpressionUUID->"3a213472-3450-4976-9e39-\
a2bb5395ed47"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769493779014058*^9, 
  3.769493779475491*^9}},ExpressionUUID->"8158ae23-a0f7-4262-b827-\
7958708edd72"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SpFrac", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<\!\(\*StyleBox[\"SpFrac\", \"InlineCode\"]\)\!\(\*StyleBox[\"[\", \
\"InlineCode\"]\)\!\(\*StyleBox[\"sp\", \"TI\"]\)\!\(\*StyleBox[\",\", \
\"InlineCode\"]\)\!\(\*StyleBox[\" \", \
\"InlineCode\"]\)\!\(\*StyleBox[\"nsp\", \"TI\"]\)] gives \!\(\*StyleBox[\"sp\
\", \"TI\"]\)/(\!\(\*StyleBox[\"nsp\", \"TI\"]\)\!\(\*StyleBox[\"+\", \
\"TI\",FontSlant->\"Plain\"]\)1).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769184781722391*^9, 3.769184782998945*^9}, {
  3.8288033856193323`*^9, 
  3.828803393352021*^9}},ExpressionUUID->"6ee6c4c7-5ad7-43cb-8919-\
5df685457786"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"7ea9b595-10f0-415d-9057-\
ceeec4ba6ae6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SpFrac", "[", 
    RowBox[{"sp_Integer", ",", "nsp_Integer"}], "]"}], ":=", 
   RowBox[{"sp", "/", 
    RowBox[{"(", 
     RowBox[{"nsp", "+", "1."}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"SpFrac", "[", 
      RowBox[{"sp_Integer", ",", "nsp_Integer"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"sp", "-", "1"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"nsp", "-", "0.99999"}], ")"}]}]}], ";"}], "*)"}]}]}], "Code",
 CellChangeTimes->{{3.687964060466292*^9, 3.687964080899601*^9}, {
   3.6947841982632847`*^9, 3.694784209205868*^9}, {3.6947891519691963`*^9, 
   3.6947891641350393`*^9}, 3.694796215114437*^9, 3.769184773378274*^9, {
   3.82878919664625*^9, 3.8287892128124847`*^9}, {3.828802522800304*^9, 
   3.8288025346480494`*^9}, {3.828803401172261*^9, 
   3.828803403251748*^9}},ExpressionUUID->"a00631cd-4493-4998-a32a-\
a12bd1a0cb2e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["ModPart", "Subsection",
 CellChangeTimes->{{3.687784433359955*^9, 
  3.6877844343086777`*^9}},ExpressionUUID->"26931e65-f1d9-40a9-aef3-\
a32b9dadf192"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769493789732089*^9, 
  3.769493790155518*^9}},ExpressionUUID->"064334f2-ccb2-4346-a524-\
37ded89eeb0e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ModPart", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<ModPart[\!\(\*StyleBox[\"list\", \"TI\"]\), \!\(\*StyleBox[\"part\", \
\"TI\"]\)] returns part number \!\(\*StyleBox[\"part\", \"TI\"]\) of \
\!\(\*StyleBox[\"list\", \"TI\"]\) like Part, but wraps around.\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.769184811312398*^9, 
  3.769184811933758*^9}},ExpressionUUID->"c424ccfc-1589-4052-9bc6-\
85d2f0301671"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"0818eecb-d15a-40ef-96a1-\
f6c3ecc6c265"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ModPart", "[", 
    RowBox[{"list_List", ",", "part_Integer"}], "]"}], ":=", 
   RowBox[{"Part", "[", 
    RowBox[{"list", ",", 
     RowBox[{"Mod", "[", 
      RowBox[{"part", ",", 
       RowBox[{"Length", "[", "list", "]"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"e3051963-851b-4e9f-9057-0462ce01abe9"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["NumberedGridForm", "Subsection",
 CellChangeTimes->{{3.6869548364110003`*^9, 
  3.686954839706789*^9}},ExpressionUUID->"41535405-13f0-43c8-abf7-\
232a2b08a557"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769493799158922*^9, 
  3.7694937996353683`*^9}},ExpressionUUID->"304729b3-49ab-4e16-befa-\
19c0705e4516"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NumberedGridForm", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<NumberedGridForm[\!\(\*StyleBox[\"list\", \
\"TI\",FontSlant->\"Italic\"]\)] formats \!\(\*StyleBox[\"list\", \
\"TI\",FontSlant->\"Italic\"]\) in a table with numbers\>\""}], ";"}]], "Code",\

 CellChangeTimes->{{3.769184857471122*^9, 
  3.76918485818047*^9}},ExpressionUUID->"6eb3143a-a579-443f-9b69-\
84be634bf643"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"7f6a9c88-3830-4106-9e1d-\
fcc83c0bef7b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NumberedGridForm", "[", "list_List", "]"}], ":=", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "list", "]"}], "]"}], ",", "list"}], "}"}], 
      "]"}], ",", 
     RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.68695484146947*^9, 
  3.686954866468338*^9}},ExpressionUUID->"8a3f6984-a0d4-4ae1-8ee1-\
62ca495a1ee8"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["FindMinima\.00", "Subsection",
 CellChangeTimes->{{3.685702666758609*^9, 3.6857026739026337`*^9}, 
   3.711644444851967*^9, {3.7116445174290037`*^9, 3.711644521168236*^9}, {
   3.779511756570612*^9, 
   3.779511756596142*^9}},ExpressionUUID->"5d732cf5-1cb8-473f-b845-\
d7d4752231d7"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.7694938149173603`*^9, 
  3.769493815450994*^9}},ExpressionUUID->"1e8c604a-e04e-413d-8f8e-\
c6c58ef2ac7e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindMinima", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<FindMinima[\!\(\*StyleBox[\"f\", \"TI\"]\), {\!\(\*StyleBox[\"tmin\", \
\"TI\"]\), \!\(\*StyleBox[\"tmax\", \"TI\"]\)}] finds local minima of \
temporal rule list \!\(\*StyleBox[\"f\", \"TI\"]\) between \
\!\(\*StyleBox[\"tmin\", \"TI\"]\) and \!\(\*StyleBox[\"tmax\", \"TI\"]\).\n\
FindMinima[\!\(\*StyleBox[\"f\", \"TI\"]\)] looks over entire domain of \
\!\(\*StyleBox[\"f\", \"TI\"]\).\nFindMinima[\!\(\*StyleBox[\"rulelist\", \
\"TI\"]\)] threads over \!\(\*StyleBox[\"rulelist\", \"TI\"]\).\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.769184877863133*^9, 3.769184880534238*^9}, {
  3.779444713646358*^9, 3.779444750414105*^9}, {3.779474269219183*^9, 
  3.779474286222629*^9}, {3.7795117981241503`*^9, 
  3.779511801778405*^9}},ExpressionUUID->"ecf0cbdf-b649-469a-9d10-\
26ba9393b578"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"10b840c2-ce7f-4002-aa26-\
90c1f15c3a50"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
    "based", " ", "on", " ", "idea", " ", "from", " ", "Daniel", " ", 
     "Lichtblau"}], " ", "<", 
    RowBox[{"http", ":"}]}], "//", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
          "a"}], "/", "5591"}], "/", "6358"}], ">"}], "\n", "&"}], " ", "a", 
     " ", "trick", " ", "from", " ", "Mr", " ", "Wizard", " ", 
     ButtonBox[
      RowBox[{
       RowBox[{"<", 
        RowBox[{"http", ":"}]}], "//", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
          "a"}], "/", "67671"}], "/", "6358"}]}],
      BaseStyle->"Hyperlink",
      ButtonData->{
        URL["http://mathematica.stackexchange.com/a/67671/6358"], None}]}], 
    ">"}]}], " ", "*)"}]], "Code",
 CellChangeTimes->{{3.685702776700158*^9, 3.6857027780435047`*^9}, {
  3.685702842441348*^9, 3.685702850743945*^9}, {3.6857042717933693`*^9, 
  3.6857042800615273`*^9}, {3.711644983455364*^9, 3.71164498368927*^9}, {
  3.779511857475438*^9, 
  3.7795118578026943`*^9}},ExpressionUUID->"ae3cd843-d7a8-4c4d-ae61-\
e5d4f60f722d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "InterpolatingFunction", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"FindMinima", "[", 
      RowBox[{"if_InterpolatingFunction", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tmin_", "?", "NumericQ"}], ",", 
         RowBox[{"tmax_", "?", "NumericQ"}]}], "}"}]}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"Reap", "[", "\[IndentingNewLine]", "\t", 
        RowBox[{"NDSolve", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"y", "'"}], "[", "t", "]"}], "\[Equal]", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"if", "[", "t", "]"}], ",", "t"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"WhenEvent", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"y", "'"}], "[", "t", "]"}], ">", "0"}], ",", 
              RowBox[{"Sow", "[", 
               RowBox[{"{", 
                RowBox[{"t", ",", 
                 RowBox[{"y", "[", "t", "]"}]}], "}"}], "]"}]}], "]"}], ",", 
            RowBox[{
             RowBox[{"y", "[", "tmin", "]"}], "\[Equal]", 
             RowBox[{"if", "[", "tmin", "]"}]}]}], "}"}], ",", "\n", "\t", 
          RowBox[{"y", "[", "t", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "tmin", ",", "tmax"}], "}"}]}], "]"}], "]"}], 
       "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "/.", 
      RowBox[{
       RowBox[{"{", "x_List", "}"}], "\[RuleDelayed]", "x"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"FindMinima", "[", "if_InterpolatingFunction", "]"}], ":=", 
     RowBox[{"FindMinima", "[", 
      RowBox[{"if", ",", 
       RowBox[{
        RowBox[{"if", "[", "\"\<Domain\>\"", "]"}], "\[LeftDoubleBracket]", 
        "1", "\[RightDoubleBracket]"}]}], "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.685702685437323*^9, 3.685702689685252*^9}, {
   3.6857041613064947`*^9, 3.685704162264572*^9}, {3.6941178840516853`*^9, 
   3.694117885435462*^9}, {3.694118089062586*^9, 3.6941180945586367`*^9}, {
   3.711634888127334*^9, 3.7116349006180696`*^9}, 3.711635739193421*^9, 
   3.711644444670548*^9, 3.7116445174482927`*^9, {3.779512638353945*^9, 
   3.7795126558967648`*^9}, 3.7795127373712397`*^9, 
   3.779512964938363*^9},ExpressionUUID->"7e79943d-9d59-42be-8460-\
da92c2a595f5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "TemporalData", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"FindMinima", "[", "td_TemporalData", "]"}], ":=", 
     RowBox[{"Normal", "[", 
      RowBox[{"TimeSeriesMap", "[", 
       RowBox[{"Minus", ",", 
        RowBox[{"FindPeaks", "[", 
         RowBox[{"TimeSeriesMap", "[", 
          RowBox[{"Minus", ",", "td"}], "]"}], "]"}]}], "]"}], "]"}]}], ";"}],
    "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"FindMinima", "[", 
      RowBox[{"td_TemporalData", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tmin_", "?", "NumericQ"}], ",", 
         RowBox[{"tmax_", "?", "NumericQ"}]}], "}"}]}], "]"}], ":=", 
     RowBox[{"FindMinima", "[", 
      RowBox[{"TimeSeriesWindow", "[", 
       RowBox[{"td", ",", 
        RowBox[{"{", 
         RowBox[{"tmin", ",", "tmax"}], "}"}]}], "]"}], "]"}]}], 
    ";"}]}]}]], "Code",
 CellChangeTimes->{{3.7794675845231743`*^9, 3.77946762629592*^9}, {
   3.77946792648538*^9, 3.779467928145234*^9}, {3.7794680029713707`*^9, 
   3.779468012112309*^9}, {3.779468052159136*^9, 3.779468057099848*^9}, {
   3.779473080446652*^9, 3.7794730895475616`*^9}, {3.779476272203949*^9, 
   3.779476287212811*^9}, 3.77947638350345*^9, {3.779512658800959*^9, 
   3.779512704185611*^9}},ExpressionUUID->"af5c363e-acef-4011-8f1f-\
22f7aa7dba13"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"thread", " ", "over", " ", "RuleLists"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"FindMinima", "[", 
      RowBox[{
       RowBox[{"f_", "?", "RuleListQ"}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"f", "/.", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x_", "\[Rule]", "val_"}], ")"}], "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{"x", "\[Rule]", 
         RowBox[{"FindMinima", "[", 
          RowBox[{"val", ",", "opts"}], "]"}]}], ")"}]}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"FindMinima", "[", 
      RowBox[{
       RowBox[{"f_", "?", "RuleListQ"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tmin_", "?", "NumericQ"}], ",", 
         RowBox[{"tmax_", "?", "NumericQ"}]}], "}"}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"f", "/.", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x_", "\[Rule]", "val_"}], ")"}], "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{"x", "\[Rule]", 
         RowBox[{"FindMinima", "[", 
          RowBox[{"val", ",", 
           RowBox[{"{", 
            RowBox[{"tmin", ",", "tmax"}], "}"}], ",", "opts"}], "]"}]}], 
        ")"}]}]}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.779441910615285*^9, 3.779441915500267*^9}, {
  3.7794419791284637`*^9, 3.779441990292905*^9}, {3.779442171930941*^9, 
  3.7794421899443293`*^9}, {3.779442236778884*^9, 3.779442240850514*^9}, {
  3.7794446654507093`*^9, 3.779444670258047*^9}, {3.77951183931597*^9, 
  3.779511846842774*^9}},ExpressionUUID->"c69231c6-babe-46c0-9f6d-\
c035ee544233"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "List", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"FindMinima", "[", "l_List", "]"}], ":=", 
     RowBox[{"FindMinima", "[", 
      RowBox[{"TimeSeries", "[", "l", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"FindMinima", "[", 
      RowBox[{"l_List", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tmin_", "?", "NumericQ"}], ",", 
         RowBox[{"tmax_", "?", "NumericQ"}]}], "}"}]}], "]"}], ":=", 
     RowBox[{"FindMinima", "[", 
      RowBox[{
       RowBox[{"TimeSeries", "[", "l", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"tmin", ",", "tmax"}], "}"}]}], "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.779512044020628*^9, 3.779512054068001*^9}, {
   3.779512390151762*^9, 3.7795124294392433`*^9}, {3.7795126307545767`*^9, 
   3.7795126323617*^9}, {3.7795127112013273`*^9, 3.7795127132257843`*^9}, 
   3.779512966377655*^9},ExpressionUUID->"9b1d4dd8-a7f6-4b36-9834-\
ea05fd925164"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["FindMaxima", "Subsection",
 CellChangeTimes->{{3.685702666758609*^9, 3.6857026739026337`*^9}, 
   3.711644444851967*^9, {3.7116445174290037`*^9, 3.711644521168236*^9}, {
   3.779511760576972*^9, 
   3.7795117620579157`*^9}},ExpressionUUID->"10ccc410-b16f-498a-aa76-\
1374362a5d2a"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.7694938149173603`*^9, 
  3.769493815450994*^9}},ExpressionUUID->"e2c17728-92e0-424d-80f5-\
a505e53d744d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindMaxima", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<FindMaxima[\!\(\*StyleBox[\"f\", \"TI\"]\), {\!\(\*StyleBox[\"tmin\", \
\"TI\"]\), \!\(\*StyleBox[\"tmax\", \"TI\"]\)}] finds local maxima of \
temporal rule list \!\(\*StyleBox[\"f\", \"TI\"]\) between \
\!\(\*StyleBox[\"tmin\", \"TI\"]\) and \!\(\*StyleBox[\"tmax\", \"TI\"]\).\n\
FindMaxima[\!\(\*StyleBox[\"f\", \"TI\"]\)] looks over entire domain of \
\!\(\*StyleBox[\"f\", \"TI\"]\).\nFindMaxima[\!\(\*StyleBox[\"rulelist\", \
\"TI\"]\)] threads over \!\(\*StyleBox[\"rulelist\", \"TI\"]\).\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.769184877863133*^9, 3.769184880534238*^9}, {
  3.779444713646358*^9, 3.779444750414105*^9}, {3.779474269219183*^9, 
  3.779474286222629*^9}, {3.7795119184693327`*^9, 
  3.779511918698226*^9}},ExpressionUUID->"4cf81534-36ff-4f41-b7d6-\
faf67e18651f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"d45ac66e-9352-419c-9987-\
9a21cc9daada"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
    "based", " ", "on", " ", "idea", " ", "from", " ", "Daniel", " ", 
     "Lichtblau"}], " ", "<", 
    RowBox[{"http", ":"}]}], "//", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
          "a"}], "/", "5591"}], "/", "6358"}], ">"}], "\n", "&"}], " ", "a", 
     " ", "trick", " ", "from", " ", "Mr", " ", "Wizard", " ", 
     ButtonBox[
      RowBox[{
       RowBox[{"<", 
        RowBox[{"http", ":"}]}], "//", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
          "a"}], "/", "67671"}], "/", "6358"}]}],
      BaseStyle->"Hyperlink",
      ButtonData->{
        URL["http://mathematica.stackexchange.com/a/67671/6358"], None}]}], 
    ">"}]}], " ", "*)"}]], "Code",
 CellChangeTimes->{{3.685702776700158*^9, 3.6857027780435047`*^9}, {
  3.685702842441348*^9, 3.685702850743945*^9}, {3.6857042717933693`*^9, 
  3.6857042800615273`*^9}, {3.711644983455364*^9, 3.71164498368927*^9}, {
  3.779511922083187*^9, 
  3.779511922347025*^9}},ExpressionUUID->"906e25eb-0859-4a27-a478-\
cfe9e7bd15b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "InterpolatingFunction", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"FindMaxima", "[", 
      RowBox[{"if_InterpolatingFunction", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tmin_", "?", "NumericQ"}], ",", 
         RowBox[{"tmax_", "?", "NumericQ"}]}], "}"}]}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"Reap", "[", "\n", "\t", 
        RowBox[{"NDSolve", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"y", "'"}], "[", "t", "]"}], "\[Equal]", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"if", "[", "t", "]"}], ",", "t"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"WhenEvent", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"y", "'"}], "[", "t", "]"}], "<", "0"}], ",", 
              RowBox[{"Sow", "[", 
               RowBox[{"{", 
                RowBox[{"t", ",", 
                 RowBox[{"y", "[", "t", "]"}]}], "}"}], "]"}]}], "]"}], ",", 
            RowBox[{
             RowBox[{"y", "[", "tmin", "]"}], "\[Equal]", 
             RowBox[{"if", "[", "tmin", "]"}]}]}], "}"}], ",", "\n", "\t", 
          RowBox[{"y", "[", "t", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "tmin", ",", "tmax"}], "}"}]}], "]"}], "]"}], 
       "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "/.", 
      RowBox[{
       RowBox[{"{", "x_List", "}"}], "\[RuleDelayed]", "x"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"FindMaxima", "[", "if_InterpolatingFunction", "]"}], ":=", 
     RowBox[{"FindMaxima", "[", 
      RowBox[{"if", ",", 
       RowBox[{
        RowBox[{"if", "[", "\"\<Domain\>\"", "]"}], "\[LeftDoubleBracket]", 
        "1", "\[RightDoubleBracket]"}]}], "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.685703980631134*^9, 3.6857039829321938`*^9}, {
   3.685704154534136*^9, 3.6857041556883497`*^9}, {3.69411787956806*^9, 
   3.6941178977409687`*^9}, {3.6941180445809603`*^9, 3.69411807702491*^9}, {
   3.6941181196800337`*^9, 3.694118126096818*^9}, 3.711635733353395*^9, 
   3.711644433172019*^9, 3.7116445089229403`*^9, {3.779512927312149*^9, 
   3.779512962566719*^9}},ExpressionUUID->"9fcc4916-5cd0-49ab-9214-\
b2952034b5ff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "TemporalData", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"FindMaxima", "[", "td_TemporalData", "]"}], ":=", 
     RowBox[{"Normal", "[", 
      RowBox[{"FindPeaks", "[", "td", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"FindMaxima", "[", 
      RowBox[{"td_TemporalData", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tmin_", "?", "NumericQ"}], ",", 
         RowBox[{"tmax_", "?", "NumericQ"}]}], "}"}]}], "]"}], ":=", 
     RowBox[{"FindMaxima", "[", 
      RowBox[{"TimeSeriesWindow", "[", 
       RowBox[{"td", ",", 
        RowBox[{"{", 
         RowBox[{"tmin", ",", "tmax"}], "}"}]}], "]"}], "]"}]}], 
    ";"}]}]}]], "Code",
 CellChangeTimes->{{3.7794675845231743`*^9, 3.77946762629592*^9}, {
  3.77946792648538*^9, 3.779467928145234*^9}, {3.7794680029713707`*^9, 
  3.779468012112309*^9}, {3.779468052159136*^9, 3.779468057099848*^9}, {
  3.779512941611421*^9, 
  3.779512984786195*^9}},ExpressionUUID->"7aca4b28-dffd-4f81-aeea-\
d77b61024115"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"thread", " ", "over", " ", "RuleLists"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"FindMaxima", "[", 
      RowBox[{
       RowBox[{"f_", "?", "RuleListQ"}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"f", "/.", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x_", "\[Rule]", "val_"}], ")"}], "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{"x", "\[Rule]", 
         RowBox[{"FindMaxima", "[", 
          RowBox[{"val", ",", "opts"}], "]"}]}], ")"}]}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"FindMaxima", "[", 
      RowBox[{
       RowBox[{"f_", "?", "RuleListQ"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tmin_", "?", "NumericQ"}], ",", 
         RowBox[{"tmax_", "?", "NumericQ"}]}], "}"}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"f", "/.", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x_", "\[Rule]", "val_"}], ")"}], "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{"x", "\[Rule]", 
         RowBox[{"FindMaxima", "[", 
          RowBox[{"val", ",", 
           RowBox[{"{", 
            RowBox[{"tmin", ",", "tmax"}], "}"}], ",", "opts"}], "]"}]}], 
        ")"}]}]}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.779441910615285*^9, 3.779441915500267*^9}, {
   3.7794419791284637`*^9, 3.779441990292905*^9}, {3.779442171930941*^9, 
   3.7794421899443293`*^9}, {3.779442236778884*^9, 3.779442240850514*^9}, {
   3.779446449843832*^9, 3.779446455058899*^9}, 
   3.7795131886043*^9},ExpressionUUID->"b1ecf1b6-1b37-48f7-bcac-aeb9e5c955bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "List", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"FindMaxima", "[", "l_List", "]"}], ":=", 
     RowBox[{"FindMaxima", "[", 
      RowBox[{"TimeSeries", "[", "l", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"FindMaxima", "[", 
      RowBox[{"l_List", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tmin_", "?", "NumericQ"}], ",", 
         RowBox[{"tmax_", "?", "NumericQ"}]}], "}"}]}], "]"}], ":=", 
     RowBox[{"FindMaxima", "[", 
      RowBox[{
       RowBox[{"TimeSeries", "[", "l", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"tmin", ",", "tmax"}], "}"}]}], "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.779512044020628*^9, 3.779512054068001*^9}, {
   3.779512390151762*^9, 3.7795124294392433`*^9}, {3.7795126307545767`*^9, 
   3.7795126323617*^9}, {3.7795127112013273`*^9, 3.7795127132257843`*^9}, 
   3.779512966377655*^9, {3.779512997296767*^9, 
   3.779513003002336*^9}},ExpressionUUID->"5d70f647-5b16-4f69-ad31-\
ec65525b0b6f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["FindExtrema", "Subsection",
 CellChangeTimes->{{3.685702666758609*^9, 3.6857026739026337`*^9}, 
   3.711644444851967*^9, {3.7116445174290037`*^9, 3.711644521168236*^9}, {
   3.779511764721755*^9, 
   3.779511764897834*^9}},ExpressionUUID->"dba77544-15b5-4c31-b647-\
34aef9021138"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.7694938149173603`*^9, 
  3.769493815450994*^9}},ExpressionUUID->"bc448c71-90f1-43cd-8265-\
f12533926ae3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindExtrema", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<FindExtrema[\!\(\*StyleBox[\"f\", \"TI\"]\), \
{\!\(\*StyleBox[\"tmin\", \"TI\"]\), \!\(\*StyleBox[\"tmax\", \"TI\"]\)}] \
finds local extrema of temporal rule list \!\(\*StyleBox[\"f\", \"TI\"]\) \
between \!\(\*StyleBox[\"tmin\", \"TI\"]\) and \!\(\*StyleBox[\"tmax\", \
\"TI\"]\).\nFindExtrema[\!\(\*StyleBox[\"f\", \"TI\"]\)] looks over entire \
domain of \!\(\*StyleBox[\"f\", \"TI\"]\).\n\
FindExtrema[\!\(\*StyleBox[\"rulelist\", \"TI\"]\)] threads over \
\!\(\*StyleBox[\"rulelist\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769184877863133*^9, 3.769184880534238*^9}, {
   3.779444713646358*^9, 3.779444750414105*^9}, {3.779474269219183*^9, 
   3.779474286222629*^9}, 
   3.7795119700609913`*^9},ExpressionUUID->"e8f020e9-ac70-45f9-b747-\
ebcd2487cd07"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"66cd79b0-5b42-45e4-8a6f-\
824c01279ac3"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
    "based", " ", "on", " ", "idea", " ", "from", " ", "Daniel", " ", 
     "Lichtblau"}], " ", "<", 
    RowBox[{"http", ":"}]}], "//", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
          "a"}], "/", "5591"}], "/", "6358"}], ">"}], "\n", "&"}], " ", "a", 
     " ", "trick", " ", "from", " ", "Mr", " ", "Wizard", " ", 
     ButtonBox[
      RowBox[{
       RowBox[{"<", 
        RowBox[{"http", ":"}]}], "//", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
          "a"}], "/", "67671"}], "/", "6358"}]}],
      BaseStyle->"Hyperlink",
      ButtonData->{
        URL["http://mathematica.stackexchange.com/a/67671/6358"], None}]}], 
    ">"}]}], " ", "*)"}]], "Code",
 CellChangeTimes->{{3.685702776700158*^9, 3.6857027780435047`*^9}, {
  3.685702842441348*^9, 3.685702850743945*^9}, {3.6857042717933693`*^9, 
  3.6857042800615273`*^9}, {3.711644983455364*^9, 3.71164498368927*^9}, {
  3.779511973875454*^9, 
  3.7795119741394463`*^9}},ExpressionUUID->"13eb846e-624c-4b2d-9acc-\
6c96d3e62366"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "InterpolatingFunction", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"FindExtrema", "[", 
      RowBox[{"if_InterpolatingFunction", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tmin_", "?", "NumericQ"}], ",", 
         RowBox[{"tmax_", "?", "NumericQ"}]}], "}"}]}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"Reap", "[", "\[IndentingNewLine]", "\t", 
        RowBox[{"NDSolve", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"y", "'"}], "[", "t", "]"}], "\[Equal]", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"if", "[", "t", "]"}], ",", "t"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"WhenEvent", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"y", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
              RowBox[{"Sow", "[", 
               RowBox[{"{", 
                RowBox[{"t", ",", 
                 RowBox[{"y", "[", "t", "]"}]}], "}"}], "]"}]}], "]"}], ",", 
            RowBox[{
             RowBox[{"y", "[", "tmin", "]"}], "\[Equal]", 
             RowBox[{"if", "[", "tmin", "]"}]}]}], "}"}], ",", "\n", "\t", 
          RowBox[{"y", "[", "t", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "tmin", ",", "tmax"}], "}"}]}], "]"}], "]"}], 
       "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "/.", 
      RowBox[{
       RowBox[{"{", "x_List", "}"}], "\[RuleDelayed]", "x"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"FindExtrema", "[", "if_InterpolatingFunction", "]"}], ":=", 
     RowBox[{"FindExtrema", "[", 
      RowBox[{"if", ",", 
       RowBox[{
        RowBox[{"if", "[", "\"\<Domain\>\"", "]"}], "\[LeftDoubleBracket]", 
        "1", "\[RightDoubleBracket]"}]}], "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.6857026926897*^9, 3.685702699544488*^9}, {
   3.685704164726482*^9, 3.685704165879361*^9}, {3.694117886707739*^9, 
   3.694117888275161*^9}, {3.694118103694105*^9, 3.694118110717997*^9}, {
   3.711634892749762*^9, 3.7116349051600523`*^9}, 3.7116357440825977`*^9, {
   3.779513127262498*^9, 
   3.77951313503297*^9}},ExpressionUUID->"de8083a9-38cf-4405-ae42-\
a382bce0dda1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "TemporalData", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"FindExtrema", "[", "td_TemporalData", "]"}], ":=", 
     RowBox[{"Sort", "[", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"FindMinima", "[", "td", "]"}], ",", 
        RowBox[{"FindMaxima", "[", "td", "]"}]}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"FindExtrema", "[", 
      RowBox[{"td_TemporalData", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tmin_", "?", "NumericQ"}], ",", 
         RowBox[{"tmax_", "?", "NumericQ"}]}], "}"}]}], "]"}], ":=", 
     RowBox[{"FindExtrema", "[", 
      RowBox[{"TimeSeriesWindow", "[", 
       RowBox[{"td", ",", 
        RowBox[{"{", 
         RowBox[{"tmin", ",", "tmax"}], "}"}]}], "]"}], "]"}]}], 
    ";"}]}]}]], "Code",
 CellChangeTimes->{{3.7794675845231743`*^9, 3.77946762629592*^9}, {
   3.77946792648538*^9, 3.779467928145234*^9}, {3.7794680029713707`*^9, 
   3.779468012112309*^9}, {3.779468052159136*^9, 3.779468057099848*^9}, {
   3.779473080446652*^9, 3.7794730895475616`*^9}, 3.779473412458919*^9, {
   3.779473458286231*^9, 3.779473480789445*^9}, {3.779513141701284*^9, 
   3.7795131729649267`*^9}},ExpressionUUID->"1ed622d3-70c3-40bd-81de-\
4f169cc79855"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"thread", " ", "over", " ", "RuleLists"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"FindExtrema", "[", 
      RowBox[{
       RowBox[{"f_", "?", "RuleListQ"}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<rulelist1\>\"", "]"}], ";"}], "*)"}], 
      RowBox[{"f", "/.", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x_", "\[Rule]", "val_"}], ")"}], "\[RuleDelayed]", 
        RowBox[{"(", 
         RowBox[{"x", "\[Rule]", 
          RowBox[{"FindExtrema", "[", 
           RowBox[{"val", ",", "opts"}], "]"}]}], ")"}]}]}], ")"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"FindExtrema", "[", 
      RowBox[{
       RowBox[{"f_", "?", "RuleListQ"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tmin_", "?", "NumericQ"}], ",", 
         RowBox[{"tmax_", "?", "NumericQ"}]}], "}"}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"f", "/.", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x_", "\[Rule]", "val_"}], ")"}], "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{"x", "\[Rule]", 
         RowBox[{"FindExtrema", "[", 
          RowBox[{"val", ",", 
           RowBox[{"{", 
            RowBox[{"tmin", ",", "tmax"}], "}"}], ",", "opts"}], "]"}]}], 
        ")"}]}]}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.779441910615285*^9, 3.779441915500267*^9}, {
  3.7794419791284637`*^9, 3.779441990292905*^9}, {3.779442171930941*^9, 
  3.7794421899443293`*^9}, {3.779442236778884*^9, 3.779442240850514*^9}, {
  3.7794446654507093`*^9, 3.779444685402969*^9}, {3.779513178885172*^9, 
  3.779513181092201*^9}},ExpressionUUID->"27cce7e4-3e73-4b67-a0d7-\
1f34ca251475"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "List", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"FindExtrema", "[", "l_List", "]"}], ":=", 
     RowBox[{"FindExtrema", "[", 
      RowBox[{"TimeSeries", "[", "l", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"FindExtrema", "[", 
      RowBox[{"l_List", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tmin_", "?", "NumericQ"}], ",", 
         RowBox[{"tmax_", "?", "NumericQ"}]}], "}"}]}], "]"}], ":=", 
     RowBox[{"FindExtrema", "[", 
      RowBox[{
       RowBox[{"TimeSeries", "[", "l", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"tmin", ",", "tmax"}], "}"}]}], "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.779512044020628*^9, 3.779512054068001*^9}, {
   3.779512390151762*^9, 3.7795124294392433`*^9}, {3.7795126307545767`*^9, 
   3.7795126323617*^9}, {3.7795127112013273`*^9, 3.7795127132257843`*^9}, 
   3.779512966377655*^9, {3.779512997296767*^9, 3.779513003002336*^9}, {
   3.7795131995546618`*^9, 
   3.779513203851066*^9}},ExpressionUUID->"52da6e04-6d59-48ce-90d6-\
6496b77d7bf4"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["MaximumValues", "Subsection",
 CellChangeTimes->{{3.7794652632280617`*^9, 3.7794652719701223`*^9}, {
   3.77946532775737*^9, 3.7794653285125093`*^9}, 
   3.779513713961588*^9},ExpressionUUID->"af3caa1b-b477-4ed5-80f4-\
0cf2cd168d6d"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.779465276447298*^9, 
  3.779465277534028*^9}},ExpressionUUID->"7fa46a7d-56e2-4f6c-8842-\
e340f8fcc10c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MaximumValues", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<MaximumValues[\!\(\*StyleBox[\"f\", \"TI\"]\), {\!\(\*StyleBox[\"tmin\
\", \"TI\"]\), \!\(\*StyleBox[\"tmax\", \"TI\"]\)}] finds local maximum \
values of temporal rule list \!\(\*StyleBox[\"f\", \"TI\"]\) between \
\!\(\*StyleBox[\"tmin\", \"TI\"]\) and \!\(\*StyleBox[\"tmax\", \"TI\"]\).\n\
MaximumValues[\!\(\*StyleBox[\"f\", \"TI\"]\)] looks over entire domain of \!\
\(\*StyleBox[\"f\", \"TI\"]\).\nMaximumValues[\!\(\*StyleBox[\"rulelist\", \
\"TI\"]\)] threads over \!\(\*StyleBox[\"rulelist\", \"TI\"]\).\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.779465737419361*^9, 3.77946574515506*^9}, {
  3.779466128475945*^9, 3.779466206400531*^9}, {3.7794742923410387`*^9, 
  3.779474296039365*^9}, {3.779513717657412*^9, 
  3.77951371794588*^9}},ExpressionUUID->"cb56d244-7189-469b-89bf-\
312bcee090fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7794652796007338`*^9, 
  3.779465283004031*^9}},ExpressionUUID->"104058af-257f-4b8d-bcdd-\
9ea2200849be"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MaximumValues", "[", 
    RowBox[{
     RowBox[{"x", ":", 
      RowBox[{"(", 
       RowBox[{"_InterpolatingFunction", "|", "_TemporalData"}], ")"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "samethreshold", "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"samethreshold", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"SameThreshold", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "MaximumValues", "]"}]}], "}"}], "]"}]}], 
        "]"}]}], ";", "\n", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"samethreshold", "\[NotEqual]", "0"}], ",", "\n", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"Sort", "[", 
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"FindMaxima", "[", "x", "]"}], "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"#1", "-", "#2"}], "]"}], "<", "samethreshold"}], 
             "&"}]}], "]"}], "]"}], "]"}], ",", "\n", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"Sort", "[", 
          RowBox[{
           RowBox[{"FindMaxima", "[", "x", "]"}], "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], 
         "]"}]}], "\n", "\t", "]"}], ";"}]}], "\n", "]"}]}], ";"}]], "Code",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQPbPp6vwdGm8cDexFF4Jop8vyu0D0GifHI2DxeYwn
QPSliQ5guoZ70RkQPfO49QMQ7anQEbYTSKe1WUWA6CWddXEgenrIs0QQ/af7
ShqILtpnlg2iV23hKwDRDo4OYLqmeW43iN63fnMPiBbxnTEHrN6pdx6IvvLF
eQmILmeNXwqiI45wHgHR/rfswLT9VcMXu4D0iTcnPoBovWSRvyD6N9uD/yB6
9Xchlt1AWuHxOVYQzW++UOAokA65Xy0Coq8kiXqA6B++UWDa4qxFJIhuuKoQ
BaIPMtRx3QbSp0ITuUE0AGCimaY=
  
  "],ExpressionUUID->"80192735-760b-41b2-9f91-0f5d95b21a04"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MaximumValues", "[", 
    RowBox[{
     RowBox[{"x", ":", 
      RowBox[{"(", 
       RowBox[{"_InterpolatingFunction", "|", "_TemporalData"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"tmin_", "?", "NumericQ"}], ",", 
       RowBox[{"tmax_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "samethreshold", "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"samethreshold", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"SameThreshold", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "MaximumValues", "]"}]}], "}"}], "]"}]}], 
        "]"}]}], ";", "\n", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"samethreshold", "\[NotEqual]", "0"}], ",", "\n", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"Sort", "[", 
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"FindMaxima", "[", 
              RowBox[{"x", ",", 
               RowBox[{"{", 
                RowBox[{"tmin", ",", "tmax"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"#1", "-", "#2"}], "]"}], "<", "samethreshold"}], 
             "&"}]}], "]"}], "]"}], "]"}], ",", "\n", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"Sort", "[", 
          RowBox[{
           RowBox[{"FindMaxima", "[", 
            RowBox[{"x", ",", 
             RowBox[{"{", 
              RowBox[{"tmin", ",", "tmax"}], "}"}]}], "]"}], 
           "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], 
         "]"}]}], "\n", "\t", "]"}], ";"}]}], "\n", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.77944810900189*^9, 3.779448122727264*^9}, {
  3.7794483359733753`*^9, 3.779448343108032*^9}, {3.779450765360924*^9, 
  3.779450784263646*^9}, {3.77945084922596*^9, 3.7794509082891073`*^9}, {
  3.779451023612252*^9, 3.779451027609367*^9}, {3.7794720693306026`*^9, 
  3.7794720784132357`*^9}, {3.779516510098724*^9, 
  3.779516515769968*^9}},ExpressionUUID->"26021095-b484-4373-a99c-\
7728d3c555a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"thread", " ", "over", " ", "RuleLists"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"MaximumValues", "[", 
      RowBox[{
       RowBox[{"f_", "?", "TemporalRuleListQ"}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"f", "/.", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x_", "\[Rule]", "val_"}], ")"}], "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{"x", "\[Rule]", 
         RowBox[{"MaximumValues", "[", 
          RowBox[{"val", ",", "opts"}], "]"}]}], ")"}]}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"MaximumValues", "[", 
      RowBox[{
       RowBox[{"f_", "?", "TemporalRuleListQ"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tmin_", "?", "NumericQ"}], ",", 
         RowBox[{"tmax_", "?", "NumericQ"}]}], "}"}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\t", 
     RowBox[{"f", "/.", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x_", "\[Rule]", "val_"}], ")"}], "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{"x", "\[Rule]", 
         RowBox[{"MaximumValues", "[", 
          RowBox[{"val", ",", 
           RowBox[{"{", 
            RowBox[{"tmin", ",", "tmax"}], "}"}], ",", "opts"}], "]"}]}], 
        ")"}]}]}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{
  3.7794481150263147`*^9, {3.779465457196691*^9, 
   3.779465460678917*^9}},ExpressionUUID->"ce5fa5c9-9951-4a18-9093-\
5919b00f3539"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"non", "-", "TemporalRuleLists"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"MaximumValues", "[", 
     RowBox[{"f_", "?", "RuleListQ"}], "]"}], ":=", 
    RowBox[{"f", "/.", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x_", "\[Rule]", "val_"}], ")"}], "\[RuleDelayed]", 
      RowBox[{"(", 
       RowBox[{"x", "\[Rule]", 
        RowBox[{"{", "val", "}"}]}], ")"}]}]}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.779465474091296*^9, 3.7794655347840023`*^9}, {
  3.779474124377572*^9, 
  3.779474124835277*^9}},ExpressionUUID->"d0e152ce-dd12-4707-89e0-\
bc2494b4802f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Lists", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"MaximumValues", "[", "l_List", "]"}], ":=", 
     RowBox[{"MaximumValues", "[", 
      RowBox[{"TimeSeries", "[", "l", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"MaximumValues", "[", 
      RowBox[{"l_List", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tmin_", "?", "NumericQ"}], ",", 
         RowBox[{"tmax_", "?", "NumericQ"}]}], "}"}]}], "]"}], ":=", 
     RowBox[{"MaximumValues", "[", 
      RowBox[{
       RowBox[{"TimeSeries", "[", "l", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"tmin", ",", "tmax"}], "}"}]}], "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.7795153242938232`*^9, 3.779515327918063*^9}, 
   3.779522824366046*^9},ExpressionUUID->"ab88e05c-e6b8-489d-937e-\
0340555f4711"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Numeric", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"MaximumValues", "[", 
      RowBox[{"x_", "?", "NumericQ"}], "]"}], ":=", 
     RowBox[{"{", "x", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"MaximumValues", "[", 
      RowBox[{
       RowBox[{"x_", "?", "NumericQ"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tmin_", "?", "NumericQ"}], ",", 
         RowBox[{"tmax_", "?", "NumericQ"}]}], "}"}]}], "]"}], ":=", 
     RowBox[{"{", "x", "}"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.7795153242938232`*^9, 3.779515327918063*^9}, {
  3.779515537740718*^9, 3.779515558887944*^9}, {3.779522210954329*^9, 
  3.7795222180016537`*^9}, {3.779522311295166*^9, 3.779522352530569*^9}, {
  3.779522388827567*^9, 3.779522400258958*^9}, {3.779522794039421*^9, 
  3.779522809025997*^9}},ExpressionUUID->"05f4ac98-90a9-47b1-9854-\
83b1cf6d79b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.7794652909884233`*^9, 
  3.779465291779591*^9}},ExpressionUUID->"75714df9-fcce-48a1-a0fb-\
075dee3a2824"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "MaximumValues", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"SameThreshold", "\[Rule]", 
     RowBox[{"10", "^", 
      RowBox[{"-", "4"}]}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.779447916479889*^9, 3.779447952527731*^9}, {
  3.779448453982057*^9, 
  3.779448463396509*^9}},ExpressionUUID->"a1e31b93-9ed9-4c06-9718-\
7952fd511f4b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["MinimumValues", "Subsection",
 CellChangeTimes->{{3.7794652632280617`*^9, 3.7794652719701223`*^9}, {
  3.77946532775737*^9, 3.7794653285125093`*^9}, {3.7795137535223703`*^9, 
  3.779513756417238*^9}},ExpressionUUID->"6b32c6e2-297f-436a-bd9b-\
9ba8ec725bcc"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.779465276447298*^9, 
  3.779465277534028*^9}},ExpressionUUID->"b4ad4ba5-4af6-45a5-b00b-\
a2415b5d52bd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MinimumValues", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<MinimumValues[\!\(\*StyleBox[\"f\", \"TI\"]\), {\!\(\*StyleBox[\"tmin\
\", \"TI\"]\), \!\(\*StyleBox[\"tmax\", \"TI\"]\)}] finds local minimum \
values of temporal rule list \!\(\*StyleBox[\"f\", \"TI\"]\) between \
\!\(\*StyleBox[\"tmin\", \"TI\"]\) and \!\(\*StyleBox[\"tmax\", \"TI\"]\).\n\
MinimumValues[\!\(\*StyleBox[\"f\", \"TI\"]\)] looks over entire domain of \!\
\(\*StyleBox[\"f\", \"TI\"]\).\nMinimumValues[\!\(\*StyleBox[\"rulelist\", \
\"TI\"]\)] threads over \!\(\*StyleBox[\"rulelist\", \"TI\"]\).\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.779465737419361*^9, 3.77946574515506*^9}, {
  3.779466128475945*^9, 3.779466206400531*^9}, {3.7794742923410387`*^9, 
  3.779474296039365*^9}, {3.779513764712821*^9, 
  3.779513766497691*^9}},ExpressionUUID->"ae4c481b-beb0-4688-909a-\
bbd788559142"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7794652796007338`*^9, 
  3.779465283004031*^9}},ExpressionUUID->"4258f6e5-4f47-429a-bb48-\
2e5872472df2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MinimumValues", "[", 
    RowBox[{
     RowBox[{"x", ":", 
      RowBox[{"(", 
       RowBox[{"_InterpolatingFunction", "|", "_TemporalData"}], ")"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "samethreshold", "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"samethreshold", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"SameThreshold", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "MinimumValues", "]"}]}], "}"}], "]"}]}], 
        "]"}]}], ";", "\n", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"samethreshold", "\[NotEqual]", "0"}], ",", "\n", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"Sort", "[", 
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"FindMinima", "[", "x", "]"}], "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"#1", "-", "#2"}], "]"}], "<", "samethreshold"}], 
             "&"}]}], "]"}], "]"}], "]"}], ",", "\n", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"Sort", "[", 
          RowBox[{
           RowBox[{"FindMinima", "[", "x", "]"}], "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], 
         "]"}]}], "\n", "\t", "]"}], ";"}]}], "\n", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.779446014672192*^9, 3.7794460246639633`*^9}, {
   3.7794462249945383`*^9, 3.7794463060393887`*^9}, {3.77944633605056*^9, 
   3.7794463380178003`*^9}, {3.779446373063902*^9, 3.779446529868115*^9}, {
   3.779447476253941*^9, 3.779447489828906*^9}, {3.779447539954302*^9, 
   3.779447567197826*^9}, {3.779447606642088*^9, 3.7794476417107477`*^9}, {
   3.7794476804595537`*^9, 3.779447682007965*^9}, {3.7794479009223003`*^9, 
   3.779447909615203*^9}, {3.779448036759409*^9, 3.779448052414361*^9}, {
   3.7794480981236362`*^9, 3.779448106969417*^9}, {3.7794483523052177`*^9, 
   3.779448353964149*^9}, {3.779450689557281*^9, 3.779450758278904*^9}, {
   3.779450856637107*^9, 3.779450879000852*^9}, {3.779450912592733*^9, 
   3.779450926465225*^9}, {3.779471493037971*^9, 3.7794715238710117`*^9}, {
   3.779471936668314*^9, 3.7794719388220177`*^9}, {3.779472073775051*^9, 
   3.779472081026062*^9}, {3.779473810479401*^9, 3.7794738279170847`*^9}, 
   3.7795139673313923`*^9, {3.779516362058488*^9, 3.779516364496409*^9}, {
   3.779516547130723*^9, 
   3.779516548825933*^9}},ExpressionUUID->"1db3ae77-ce1d-4eaa-90f0-\
3d990704b12c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MinimumValues", "[", 
    RowBox[{
     RowBox[{"x", ":", 
      RowBox[{"(", 
       RowBox[{"_InterpolatingFunction", "|", "_TemporalData"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"tmin_", "?", "NumericQ"}], ",", 
       RowBox[{"tmax_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "samethreshold", "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"samethreshold", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"SameThreshold", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "MinimumValues", "]"}]}], "}"}], "]"}]}], 
        "]"}]}], ";", "\n", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"samethreshold", "\[NotEqual]", "0"}], ",", "\n", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"Sort", "[", 
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"FindMinima", "[", 
              RowBox[{"x", ",", 
               RowBox[{"{", 
                RowBox[{"tmin", ",", "tmax"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"#1", "-", "#2"}], "]"}], "<", "samethreshold"}], 
             "&"}]}], "]"}], "]"}], "]"}], ",", "\n", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"Sort", "[", 
          RowBox[{
           RowBox[{"FindMinima", "[", 
            RowBox[{"x", ",", 
             RowBox[{"{", 
              RowBox[{"tmin", ",", "tmax"}], "}"}]}], "]"}], 
           "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], 
         "]"}]}], "\n", "\t", "]"}], ";"}]}], "\n", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.77944810900189*^9, 3.779448122727264*^9}, {
  3.7794483359733753`*^9, 3.779448343108032*^9}, {3.779450765360924*^9, 
  3.779450784263646*^9}, {3.77945084922596*^9, 3.7794509082891073`*^9}, {
  3.779451023612252*^9, 3.779451027609367*^9}, {3.7794720693306026`*^9, 
  3.7794720784132357`*^9}, {3.7794738139803343`*^9, 3.779473853999661*^9}, {
  3.7795163675846367`*^9, 3.779516369048685*^9}, {3.7795165437792063`*^9, 
  3.77951654498604*^9}},ExpressionUUID->"e9c5e4c6-f322-4f16-ae95-\
90cd36a2c260"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"thread", " ", "over", " ", "RuleLists"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"MinimumValues", "[", 
      RowBox[{
       RowBox[{"f_", "?", "TemporalRuleListQ"}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"f", "/.", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x_", "\[Rule]", "val_"}], ")"}], "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{"x", "\[Rule]", 
         RowBox[{"MinimumValues", "[", 
          RowBox[{"val", ",", "opts"}], "]"}]}], ")"}]}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"MinimumValues", "[", 
      RowBox[{
       RowBox[{"f_", "?", "TemporalRuleListQ"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tmin_", "?", "NumericQ"}], ",", 
         RowBox[{"tmax_", "?", "NumericQ"}]}], "}"}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\t", 
     RowBox[{"f", "/.", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x_", "\[Rule]", "val_"}], ")"}], "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{"x", "\[Rule]", 
         RowBox[{"MinimumValues", "[", 
          RowBox[{"val", ",", 
           RowBox[{"{", 
            RowBox[{"tmin", ",", "tmax"}], "}"}], ",", "opts"}], "]"}]}], 
        ")"}]}]}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{
  3.7794481150263147`*^9, {3.779465427324288*^9, 3.7794654325244007`*^9}, {
   3.779465549772387*^9, 
   3.779465552039796*^9}},ExpressionUUID->"12c774f6-d113-4c02-bbe6-\
4c11f8e51327"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"non", "-", "TemporalRuleLists"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"MinimumValues", "[", 
     RowBox[{"f_", "?", "RuleListQ"}], "]"}], ":=", 
    RowBox[{"f", "/.", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x_", "\[Rule]", "val_"}], ")"}], "\[RuleDelayed]", 
      RowBox[{"(", 
       RowBox[{"x", "\[Rule]", 
        RowBox[{"{", "val", "}"}]}], ")"}]}]}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.779465555204845*^9, 3.779465568103063*^9}, {
  3.779474111852515*^9, 
  3.779474119980494*^9}},ExpressionUUID->"9d075dc9-e317-44eb-90a1-\
6b3059869fe5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Lists", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"MinimumValues", "[", "l_List", "]"}], ":=", 
     RowBox[{"MinimumValues", "[", 
      RowBox[{"TimeSeries", "[", "l", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"MinimumValues", "[", 
      RowBox[{"l_List", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tmin_", "?", "NumericQ"}], ",", 
         RowBox[{"tmax_", "?", "NumericQ"}]}], "}"}]}], "]"}], ":=", 
     RowBox[{"MinimumValues", "[", 
      RowBox[{
       RowBox[{"TimeSeries", "[", "l", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"tmin", ",", "tmax"}], "}"}]}], "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.7795153242938232`*^9, 3.779515327918063*^9}, {
  3.779515537740718*^9, 3.7795155407761497`*^9}, {3.779522777525309*^9, 
  3.779522778685217*^9}},ExpressionUUID->"6528cfce-897f-4dd4-816e-\
c865a958a599"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Numeric", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"MinimumValues", "[", 
      RowBox[{"x_", "?", "NumericQ"}], "]"}], ":=", 
     RowBox[{"{", "x", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"MinimumValues", "[", 
      RowBox[{
       RowBox[{"x_", "?", "NumericQ"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tmin_", "?", "NumericQ"}], ",", 
         RowBox[{"tmax_", "?", "NumericQ"}]}], "}"}]}], "]"}], ":=", 
     RowBox[{"{", "x", "}"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.7795153242938232`*^9, 3.779515327918063*^9}, {
  3.779515537740718*^9, 3.779515558887944*^9}, {3.779522210954329*^9, 
  3.7795222180016537`*^9}, {3.779522311295166*^9, 3.779522352530569*^9}, {
  3.779522388827567*^9, 3.779522400258958*^9}, {3.779522794039421*^9, 
  3.7795227950667753`*^9}},ExpressionUUID->"11a0b5b2-d213-4d1e-9843-\
0315314df536"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.7794652909884233`*^9, 
  3.779465291779591*^9}},ExpressionUUID->"88af5868-402e-4b4d-a354-\
860fc96940c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "MinimumValues", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"SameThreshold", "\[Rule]", 
     RowBox[{"10", "^", 
      RowBox[{"-", "4"}]}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.779447916479889*^9, 3.779447952527731*^9}, {
  3.779448453982057*^9, 3.779448463396509*^9}, {3.77946530099091*^9, 
  3.77946530109521*^9}},ExpressionUUID->"c8fee30f-0eec-456c-80a5-\
0a958f559064"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["ExtremumValues", "Subsection",
 CellChangeTimes->{{3.7794652632280617`*^9, 3.7794652719701223`*^9}, {
   3.77946532775737*^9, 3.7794653285125093`*^9}, 
   3.7795137598647738`*^9},ExpressionUUID->"8652e52c-39a8-404e-8dc0-\
94f6de9b8b4b"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.779465276447298*^9, 
  3.779465277534028*^9}},ExpressionUUID->"6e22cbef-8482-49ae-bf20-\
b9351485e12d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExtremumValues", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<ExtremumValues[\!\(\*StyleBox[\"f\", \"TI\"]\), \
{\!\(\*StyleBox[\"tmin\", \"TI\"]\), \!\(\*StyleBox[\"tmax\", \"TI\"]\)}] \
finds local extremum values of temporal rule list \!\(\*StyleBox[\"f\", \
\"TI\"]\) between \!\(\*StyleBox[\"tmin\", \"TI\"]\) and \
\!\(\*StyleBox[\"tmax\", \"TI\"]\).\nExtremumValues[\!\(\*StyleBox[\"f\", \
\"TI\"]\)] looks over entire domain of \!\(\*StyleBox[\"f\", \"TI\"]\).\n\
ExtremumValues[\!\(\*StyleBox[\"rulelist\", \"TI\"]\)] threads over \
\!\(\*StyleBox[\"rulelist\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.779465737419361*^9, 3.77946574515506*^9}, {
   3.779466128475945*^9, 3.779466206400531*^9}, {3.7794742923410387`*^9, 
   3.779474296039365*^9}, 
   3.7795137907065773`*^9},ExpressionUUID->"df314428-4f8a-41cb-b972-\
7e615143ee09"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7794652796007338`*^9, 
  3.779465283004031*^9}},ExpressionUUID->"5c2d9894-bc06-40e6-9913-\
35fb7e9237fd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExtremumValues", "[", 
    RowBox[{
     RowBox[{"x", ":", 
      RowBox[{"(", 
       RowBox[{"_InterpolatingFunction", "|", "_TemporalData"}], ")"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "samethreshold", "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"samethreshold", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"SameThreshold", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "ExtremumValues", "]"}]}], "}"}], "]"}]}],
         "]"}]}], ";", "\n", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"samethreshold", "\[NotEqual]", "0"}], ",", "\n", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"Sort", "[", 
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"FindExtrema", "[", "x", "]"}], "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"#1", "-", "#2"}], "]"}], "<", "samethreshold"}], 
             "&"}]}], "]"}], "]"}], "]"}], ",", "\n", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"Sort", "[", 
          RowBox[{
           RowBox[{"FindExtrema", "[", "x", "]"}], "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], 
         "]"}]}], "\n", "\t", "]"}], ";"}]}], "\n", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.779446014672192*^9, 3.7794460246639633`*^9}, {
   3.7794462249945383`*^9, 3.7794463060393887`*^9}, {3.77944633605056*^9, 
   3.7794463380178003`*^9}, {3.779446373063902*^9, 3.779446529868115*^9}, {
   3.779447476253941*^9, 3.779447489828906*^9}, {3.779447539954302*^9, 
   3.779447567197826*^9}, {3.779447606642088*^9, 3.7794476417107477`*^9}, {
   3.7794476804595537`*^9, 3.779447682007965*^9}, {3.7794479009223003`*^9, 
   3.779447909615203*^9}, {3.779448036759409*^9, 3.779448052414361*^9}, {
   3.7794480981236362`*^9, 3.779448106969417*^9}, {3.7794483523052177`*^9, 
   3.779448353964149*^9}, {3.779450689557281*^9, 3.779450758278904*^9}, {
   3.779450856637107*^9, 3.779450879000852*^9}, {3.779450912592733*^9, 
   3.779450926465225*^9}, {3.779471493037971*^9, 3.7794715238710117`*^9}, {
   3.779471936668314*^9, 3.7794719388220177`*^9}, {3.779472073775051*^9, 
   3.779472081026062*^9}, {3.779473810479401*^9, 3.7794738279170847`*^9}, {
   3.779473872195552*^9, 3.779473901830482*^9}, 3.779514163635394*^9, {
   3.779515864384431*^9, 3.779515868165081*^9}, {3.77951590611026*^9, 
   3.7795159111583652`*^9}, {3.779516285856783*^9, 
   3.779516291647059*^9}},ExpressionUUID->"a7141a8b-6c9d-47b2-86d5-\
f405c73d9be9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExtremumValues", "[", 
    RowBox[{
     RowBox[{"x", ":", 
      RowBox[{"(", 
       RowBox[{"_InterpolatingFunction", "|", "_TemporalData"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"tmin_", "?", "NumericQ"}], ",", 
       RowBox[{"tmax_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "samethreshold", "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"samethreshold", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"SameThreshold", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "ExtremumValues", "]"}]}], "}"}], "]"}]}],
         "]"}]}], ";", "\n", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"samethreshold", "\[NotEqual]", "0"}], ",", "\n", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"Sort", "[", 
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"FindExtrema", "[", 
              RowBox[{"x", ",", 
               RowBox[{"{", 
                RowBox[{"tmin", ",", "tmax"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"#1", "-", "#2"}], "]"}], "<", "samethreshold"}], 
             "&"}]}], "]"}], "]"}], "]"}], ",", "\n", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"Sort", "[", 
          RowBox[{
           RowBox[{"FindExtrema", "[", 
            RowBox[{"x", ",", 
             RowBox[{"{", 
              RowBox[{"tmin", ",", "tmax"}], "}"}]}], "]"}], 
           "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], 
         "]"}]}], "\n", "\t", "]"}], ";"}]}], "\n", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.77944810900189*^9, 3.779448122727264*^9}, {
   3.7794483359733753`*^9, 3.779448343108032*^9}, {3.779450765360924*^9, 
   3.779450784263646*^9}, {3.77945084922596*^9, 3.7794509082891073`*^9}, {
   3.779451023612252*^9, 3.779451027609367*^9}, {3.7794720693306026`*^9, 
   3.7794720784132357`*^9}, {3.7794738139803343`*^9, 3.779473905048131*^9}, 
   3.7795141589337263`*^9, {3.779515870773279*^9, 3.779515872229162*^9}, {
   3.779515913989811*^9, 3.7795159174055147`*^9}, {3.779516270505846*^9, 
   3.779516279959919*^9}},ExpressionUUID->"003e78c5-8b3e-40cf-bf6e-\
fa272e3e3704"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"thread", " ", "over", " ", "TemporalRuleLists"}], " ", "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ExtremumValues", "[", 
      RowBox[{
       RowBox[{"f_", "?", "TemporalRuleListQ"}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"f", "/.", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x_", "\[Rule]", "val_"}], ")"}], "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{"x", "\[Rule]", 
         RowBox[{"ExtremumValues", "[", 
          RowBox[{"val", ",", "opts"}], "]"}]}], ")"}]}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ExtremumValues", "[", 
      RowBox[{
       RowBox[{"f_", "?", "TemporalRuleListQ"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tmin_", "?", "NumericQ"}], ",", 
         RowBox[{"tmax_", "?", "NumericQ"}]}], "}"}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\t", 
     RowBox[{"f", "/.", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x_", "\[Rule]", "val_"}], ")"}], "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{"x", "\[Rule]", 
         RowBox[{"ExtremumValues", "[", 
          RowBox[{"val", ",", 
           RowBox[{"{", 
            RowBox[{"tmin", ",", "tmax"}], "}"}], ",", "opts"}], "]"}]}], 
        ")"}]}]}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{
  3.7794481150263147`*^9, {3.779465427324288*^9, 3.7794654325244007`*^9}, {
   3.779465549772387*^9, 3.779465552039796*^9}, {3.779465708141487*^9, 
   3.779465711880681*^9}, {3.779522755340581*^9, 
   3.779522765307817*^9}},ExpressionUUID->"a240ebe2-7568-453e-ad05-\
95afa4677067"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"non", "-", "TemporalRuleLists"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"ExtremumValues", "[", 
     RowBox[{"f_", "?", "RuleListQ"}], "]"}], ":=", 
    RowBox[{"f", "/.", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x_", "\[Rule]", "val_"}], ")"}], "\[RuleDelayed]", 
      RowBox[{"(", 
       RowBox[{"x", "\[Rule]", 
        RowBox[{"{", "val", "}"}]}], ")"}]}]}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.779465555204845*^9, 3.779465568103063*^9}, 
   3.779465713467475*^9, {3.7794740892166023`*^9, 3.77947409125858*^9}, {
   3.7795223032337627`*^9, 3.779522320018395*^9}, {3.779522581947488*^9, 
   3.779522586594717*^9}, 
   3.779522750512911*^9},ExpressionUUID->"a55de117-fc22-4c9a-986f-\
be63bf016d06"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Lists", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ExtremumValues", "[", "l_List", "]"}], ":=", 
     RowBox[{"ExtremumValues", "[", 
      RowBox[{"TimeSeries", "[", "l", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ExtremumValues", "[", 
      RowBox[{"l_List", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tmin_", "?", "NumericQ"}], ",", 
         RowBox[{"tmax_", "?", "NumericQ"}]}], "}"}]}], "]"}], ":=", 
     RowBox[{"ExtremumValues", "[", 
      RowBox[{
       RowBox[{"TimeSeries", "[", "l", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"tmin", ",", "tmax"}], "}"}]}], "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.7795153242938232`*^9, 3.779515327918063*^9}, {
  3.779515537740718*^9, 3.779515558887944*^9}, {3.779522210954329*^9, 
  3.7795222180016537`*^9}, {3.779522311295166*^9, 3.779522328836541*^9}, {
  3.779522548404911*^9, 
  3.779522555683331*^9}},ExpressionUUID->"ddc546e2-1c84-4279-8ed4-\
61e7158cd249"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Numeric", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ExtremumValues", "[", 
      RowBox[{"x_", "?", "NumericQ"}], "]"}], ":=", 
     RowBox[{"{", "x", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ExtremumValues", "[", 
      RowBox[{
       RowBox[{"x_", "?", "NumericQ"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tmin_", "?", "NumericQ"}], ",", 
         RowBox[{"tmax_", "?", "NumericQ"}]}], "}"}]}], "]"}], ":=", 
     RowBox[{"{", "x", "}"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.7795153242938232`*^9, 3.779515327918063*^9}, {
  3.779515537740718*^9, 3.779515558887944*^9}, {3.779522210954329*^9, 
  3.7795222180016537`*^9}, {3.779522311295166*^9, 3.779522352530569*^9}, {
  3.779522388827567*^9, 
  3.779522400258958*^9}},ExpressionUUID->"a132fa67-c8c6-4e87-95ad-\
452f9266bb04"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.7794652909884233`*^9, 
  3.779465291779591*^9}},ExpressionUUID->"33603662-f101-4c4c-b2cc-\
559d7c1e6673"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ExtremumValues", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"SameThreshold", "\[Rule]", 
     RowBox[{"10", "^", 
      RowBox[{"-", "4"}]}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.779447916479889*^9, 3.779447952527731*^9}, {
  3.779448453982057*^9, 3.779448463396509*^9}, {3.7794653088691387`*^9, 
  3.779465319862438*^9}},ExpressionUUID->"6bdf0d36-38db-40e1-9415-\
ba62871ee5af"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["FindPeriod", "Subsection",ExpressionUUID->"e446d061-1f10-4ad3-afa5-bbdc051d700e"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.76949383178372*^9, 
  3.769493832319249*^9}},ExpressionUUID->"6a724745-8128-4254-a911-\
46d17da30227"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindPeriod", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<FindPeriod[\!\(\*StyleBox[\"rulelist\", \"TI\"]\)] returns the period \
of temporal \!\(\*StyleBox[\"rulelist\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769185038697867*^9, 
  3.769185040607667*^9}},ExpressionUUID->"9cd22eaa-f358-4fad-acdd-\
d640ce887a46"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"48d3746e-12c5-4044-9077-\
c77daf7c3550"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindPeriod", "[", 
    RowBox[{"sol_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"var1", ",", "res", ",", "tmp"}], "}"}], ",", "\n", "\n", 
     RowBox[{
      RowBox[{"Which", "[", "\n", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", 
          RowBox[{"sol", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], "===", 
         "TemporalData"}], ",", "\n", "\t", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "based", " ", "on", " ", "idea", " ", "from", " ", "bbgodfrey"}], 
          ",", " ", 
          RowBox[{
           RowBox[{"http", ":"}], "//", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
              "a"}], "/", "107741"}], "/", "6358"}]}]}], " ", "*)"}], "\n", 
        "\t", 
        RowBox[{"res", "=", 
         RowBox[{"Length", "[", 
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", "\n", "\t\t", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"#", "/.", "sol"}], ")"}], "[", "\"\<Values\>\"", 
                  "]"}], "\[LeftDoubleBracket]", 
                 RowBox[{
                  RowBox[{"Max", "[", 
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    RowBox[{"sol", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "[", 
                    "\"\<PathLength\>\"", "]"}]}], ",", 
                    RowBox[{"-", 
                    RowBox[{"OptionValue", "[", "MaxPeriod", "]"}]}]}], "]"}],
                   ";;"}], "\[RightDoubleBracket]"}], "&"}], ",", 
               RowBox[{"sol", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}],
              "]"}], ",", "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"Norm", "[", 
               RowBox[{"#1", "-", "#2"}], "]"}], "<", 
              RowBox[{
               RowBox[{"10", "^", 
                RowBox[{"-", 
                 RowBox[{"OptionValue", "[", "AccuracyGoal", "]"}]}]}], "+", 
               RowBox[{
                RowBox[{"Norm", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"#1", "-", "#2"}], ")"}], "/", "#1"}], "]"}], "*", 
                
                RowBox[{"10", "^", 
                 RowBox[{"-", 
                  RowBox[{
                  "OptionValue", "[", "PrecisionGoal", "]"}]}]}]}]}]}], 
             "&"}]}], "]"}], "]"}]}], "\n", ",", "\n", "\t", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", 
           RowBox[{"sol", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], "===", 
          "InterpolatingFunction"}], "&&", 
         RowBox[{
          RowBox[{"OptionValue", "[", "BasePeriod", "]"}], "=!=", "None"}]}], 
        ",", "\n", "\t", 
        RowBox[{
         RowBox[{"var1", "=", 
          RowBox[{"sol", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
         "\t", 
         RowBox[{"tmp", "=", 
          RowBox[{"{", 
           RowBox[{"var1", "\[Rule]", 
            RowBox[{"TimeSeries", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"t", ",", 
                 RowBox[{"var1", "/.", 
                  RowBox[{"Slice", "[", 
                   RowBox[{"sol", ",", "t"}], "]"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", 
                 RowBox[{"InitialTime", "[", "sol", "]"}], ",", 
                 RowBox[{"FinalTime", "[", "sol", "]"}], ",", 
                 RowBox[{"OptionValue", "[", "BasePeriod", "]"}]}], "}"}]}], 
              "]"}], "]"}]}], "}"}]}], ";", "\n", "\t", 
         RowBox[{"res", "=", 
          RowBox[{
           RowBox[{"FindPeriod", "[", "tmp", "]"}], "*", 
           RowBox[{"OptionValue", "[", "BasePeriod", "]"}]}]}]}], "\n", ",", 
        "\n", "\t", "True", ",", " ", 
        RowBox[{"(*", " ", "else", " ", "*)"}], "\n", "\t", 
        RowBox[{
         RowBox[{"Return", "[", "]"}], ";"}]}], "\n", "]"}], ";", "\n", "\n", 
      
      RowBox[{"Return", "[", "res", "]"}]}]}], "\n", "\n", "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{
  3.688571719508432*^9, {3.688571777518642*^9, 3.688571777533386*^9}, {
   3.688571808230686*^9, 3.688571808244776*^9}, 3.693869696839148*^9, {
   3.69387005467272*^9, 3.693870062470398*^9}, {3.696678568121819*^9, 
   3.6966785751418953`*^9}, {3.696678929120338*^9, 3.696678942905458*^9}, {
   3.6966789902261543`*^9, 3.6966790028411503`*^9}, {3.696679219618834*^9, 
   3.696679228417509*^9}, {3.696679270194675*^9, 3.696679272024164*^9}, {
   3.696679392172038*^9, 3.69667940437072*^9}, {3.696679617900676*^9, 
   3.6966796191010647`*^9}, {3.696679857716091*^9, 3.696679858229629*^9}, {
   3.69667998491054*^9, 
   3.6966799852292747`*^9}},ExpressionUUID->"b772a55d-9174-402b-bfc7-\
5d2fa90999d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.769493837633617*^9, 
  3.769493838337916*^9}},ExpressionUUID->"c90d9638-cac2-4cde-8d92-\
b9530eac3dae"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "FindPeriod", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MaxPeriod", "\[Rule]", "4"}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "5"}], ",", 
     RowBox[{"PrecisionGoal", "\[Rule]", "5"}], ",", 
     RowBox[{"BasePeriod", "\[Rule]", "None"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.6885717195343723`*^9, 
  3.688571719577883*^9}},ExpressionUUID->"de15622b-e2ba-432c-abdf-\
3890b556ac30"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["MyStreamPlot", "Subsection",
 CellChangeTimes->{{3.685659045578321*^9, 3.685659051907084*^9}, 
   3.76918509760675*^9, 
   3.769185221810936*^9},ExpressionUUID->"60516b59-40e1-4b4e-8a5e-\
efe596b9e7c0"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769493844935597*^9, 
  3.769493845785757*^9}},ExpressionUUID->"bf592729-4066-4fe5-aed2-\
8c17d934f878"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MyStreamPlot", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<MyStreamPlot[\!\(\*StyleBox[\"f\", \"TI\"]\), {\!\(\*StyleBox[\"x\", \
\"TI\"]\), \!\(\*StyleBox[\"xmin\", \"TI\"]\), \!\(\*StyleBox[\"xmax\", \
\"TI\"]\)}, {\!\(\*StyleBox[\"y\", \"TI\"]\), \!\(\*StyleBox[\"ymin\", \
\"TI\"]\), \!\(\*StyleBox[\"ymax\", \"TI\"]\)}] is like StreamPlot, but with \
better arrow spacing.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.7691851942564287`*^9, 
  3.7691852218163033`*^9}},ExpressionUUID->"e09046af-8210-435a-87d8-\
4057977e67fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"8c04a195-f9fc-4c92-ae02-\
aa48a7d0c794"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"originally", " ", "by", " ", "Rahul"}], " ", "<", 
      RowBox[{"http", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
         "a"}], "/", "42770"}], "/", "6358"}], ">"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"tweaked", " ", "by", " ", "me"}], " ", "<", 
      RowBox[{"https", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
         "a"}], "/", "157613"}], "/", "6358"}], ">"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"RegionFunction", " ", "fixed", " ", "by", " ", "kglr"}], " ", 
      "<", 
      RowBox[{"https", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
         "a"}], "/", "193304"}], "/", "6358"}], ">"}]}]}], " ", "*)"}], "\n", 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"MyStreamPlot", "[", 
     RowBox[{"f_", ",", 
      RowBox[{"{", 
       RowBox[{"x_", ",", "x0_", ",", "x1_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y_", ",", "y0_", ",", "y1_"}], "}"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", 
       RowBox[{"a", ",", "rf", ",", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "u", ",", 
        "v", ",", "res", ",", "opts2"}], "}"}], ",", "\n", "\n", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"AspectRatio", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "StreamPlot", "]"}]}], "}"}], "]"}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"rf", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"RegionFunction", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "StreamPlot", "]"}]}], "}"}], "]"}]}], 
         "]"}]}], ";", "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "hack", " ", "to", " ", "fix", " ", "visible", " ", "region", " ", 
          "introduced", " ", "in", " ", "v12", ".1"}], ",", "\n", 
         RowBox[{
          RowBox[{"see", " ", "<", 
           RowBox[{"https", ":"}]}], "//", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/",
                "questions"}], "/", "216865"}], "/", "blue"}], "-", 
            "background", "-", "in", "-", "streamplot", "-", "output"}], 
           ">"}]}]}], " ", "*)"}], "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"$VersionNumber", "\[GreaterEqual]", "12.1"}], ",", 
         RowBox[{"opts2", "=", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", "opts", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"RegionBoundaryStyle", "\[Rule]", "None"}], ",", 
              RowBox[{"RegionFillingStyle", "\[Rule]", "None"}]}], "}"}]}], 
           "]"}]}], ",", 
         RowBox[{"opts2", "=", 
          RowBox[{"{", "opts", "}"}]}]}], "]"}], ";", "\n", "\n", 
       RowBox[{"res", "=", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StreamPlot", "[", "\n", "\t", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"EcoEvo`Private`xmon", ",", "EcoEvo`Private`ymon"}], 
                 "}"}], "=", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Rescale", "[", 
                   RowBox[{"u", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x0", ",", "x1"}], "}"}]}], "]"}], ",", 
                  RowBox[{"Rescale", "[", 
                   RowBox[{"v", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "a"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"y0", ",", "y1"}], "}"}]}], "]"}]}], "}"}]}], ";",
                "\n", "\t", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1", "/", 
                   RowBox[{"(", 
                    RowBox[{"x1", "-", "x0"}], ")"}]}], ",", 
                  RowBox[{"a", "/", 
                   RowBox[{"(", 
                    RowBox[{"y1", "-", "y0"}], ")"}]}]}], "}"}], " ", 
                RowBox[{"(", 
                 RowBox[{"f", "/.", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"x", "\[Rule]", 
                    RowBox[{"Rescale", "[", 
                    RowBox[{"u", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x0", ",", "x1"}], "}"}]}], "]"}]}], ",", 
                    RowBox[{"y", "\[Rule]", 
                    RowBox[{"Rescale", "[", 
                    RowBox[{"v", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "a"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"y0", ",", "y1"}], "}"}]}], "]"}]}]}], "}"}]}], 
                 ")"}]}]}], ")"}], ",", 
             RowBox[{"{", 
              RowBox[{"u", ",", "0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"v", ",", "0", ",", "a"}], "}"}], ",", "\n", "\t", 
             RowBox[{"RegionFunction", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"rf", "[", 
                 RowBox[{
                  RowBox[{"Rescale", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x0", ",", "x1"}], "}"}]}], "]"}], ",", 
                  RowBox[{"Rescale", "[", 
                   RowBox[{"#2", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "a"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"y0", ",", "y1"}], "}"}]}], "]"}], ",", "##3"}], 
                 "]"}], "&"}], ")"}]}], ",", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"Sequence", "@@", "opts2"}], "]"}]}], "]"}], "\n", "\t",
            "/.", 
           RowBox[{
            RowBox[{"Arrow", "[", "pts_", "]"}], "\[RuleDelayed]", 
            RowBox[{"Arrow", "[", 
             RowBox[{"Transpose", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Rescale", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x0", ",", "x1"}], "}"}]}], "]"}], ",", 
                  RowBox[{"Rescale", "[", 
                   RowBox[{"#2", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "a"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"y0", ",", "y1"}], "}"}]}], "]"}]}], "}"}], "&"}],
                "@@", 
               RowBox[{"Transpose", "[", "pts", "]"}]}], "]"}], "]"}]}]}], 
          ",", "\n", "\t", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x0", ",", "x1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"y0", ",", "y1"}], "}"}]}], "}"}]}]}], "]"}]}], ";", 
       "\n", "\t", "\n", "\t", 
       RowBox[{"Return", "[", "res", "]"}]}]}], "\n", "]"}]}], 
   ";"}]}]], "Code",
 CellChangeTimes->{{3.761625409460265*^9, 3.761625441585602*^9}, {
   3.761625542686037*^9, 3.761625550908391*^9}, {3.761625582064361*^9, 
   3.761625605298296*^9}, {3.761625640460998*^9, 3.761625698374462*^9}, {
   3.761626268452546*^9, 3.761626277457034*^9}, 3.7616271128070307`*^9, {
   3.761670231164906*^9, 3.7616702610586576`*^9}, {3.761670765905801*^9, 
   3.761670815960142*^9}, 3.7616712054294853`*^9, {3.761825100515819*^9, 
   3.7618251184871473`*^9}, {3.769185221820284*^9, 3.769185221825728*^9}, {
   3.774603707564166*^9, 3.774603718393962*^9}, {3.774604032654038*^9, 
   3.774604032966367*^9}, 3.774604718772715*^9, {3.774604752109332*^9, 
   3.7746047660299053`*^9}, {3.7746048047188463`*^9, 3.77460481048628*^9}, {
   3.7746048465439787`*^9, 3.774604854592064*^9}, {3.774604926401116*^9, 
   3.774604936959278*^9}, {3.774605244169096*^9, 3.7746053269538507`*^9}, {
   3.774605446860964*^9, 3.7746054644769983`*^9}, {3.7746055416530647`*^9, 
   3.7746055969815903`*^9}, {3.774605752029696*^9, 3.77460575654342*^9}, {
   3.7746058125669193`*^9, 3.774605844680791*^9}, {3.7746059740725613`*^9, 
   3.774605992824121*^9}, {3.774606478053591*^9, 3.7746065381726*^9}, {
   3.774606646406452*^9, 3.7746066925413103`*^9}, {3.780291340828126*^9, 
   3.780291341076049*^9}, {3.794085582534771*^9, 3.7940855989178658`*^9}, {
   3.794085753385866*^9, 3.794085810263742*^9}, {3.7940858618498697`*^9, 
   3.794085863592187*^9}, {3.79408590060185*^9, 3.794085960113014*^9}, {
   3.7940860530909777`*^9, 3.7940860546996727`*^9}, 3.794086092749425*^9, {
   3.794086661442321*^9, 3.794086879375865*^9}, {3.7940870113742247`*^9, 
   3.794087034949543*^9}, {3.794087379338434*^9, 3.79408738526471*^9}, 
   3.794087422947076*^9, {3.794087525347188*^9, 3.794087529810381*^9}, {
   3.794087562747777*^9, 3.794087607059156*^9}, 3.794088187089652*^9, {
   3.7940882365791388`*^9, 3.79408824100172*^9}, {3.817999148006486*^9, 
   3.817999196981769*^9}},ExpressionUUID->"9fb01c63-7ca2-4656-b12b-\
a27a2778d039"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["RealSimplify", "Subsection",ExpressionUUID->"dbc19b57-acbc-4764-acfc-8b642d35e469"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.76949386646731*^9, 
  3.7694938669746933`*^9}},ExpressionUUID->"6050bab0-fabf-4c2f-8cdd-\
a3c73afbc653"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RealSimplify", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<RealSimplify[\!\(\*StyleBox[\"expression\", \"TI\"]\)] Simplifies \
\!\(\*StyleBox[\"expression\", \"TI\"]\) assuming everything is Real.\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.769185306996496*^9, 
  3.769185307731181*^9}},ExpressionUUID->"15b54065-656b-46f6-9678-\
438f35618eb7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"db2147a8-c31b-42c6-8206-\
5d28b0715211"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RealSimplify", "[", "foo_", "]"}], ":=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"foo", ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"_", "\[Element]", "Reals"}], "}"}]}]}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{
  3.688571718778743*^9},ExpressionUUID->"89c82ee0-f421-4f1c-99c5-\
655222a347ff"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["CompoundAnd", "Subsection",ExpressionUUID->"7b4a298a-8bac-4698-9931-d6c4228734be"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.7694938898311157`*^9, 
  3.76949389029948*^9}},ExpressionUUID->"def3dd9a-da6f-4053-abc4-\
97b5d0589a44"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CompoundAnd", "::", "usage"}], 
   StyleBox["=", "TI"], 
   StyleBox["\[IndentingNewLine]", "TI"], 
   "\"\<CompoundAnd[\!\(\*StyleBox[\"conds\", \"TI\"]\)] is True if all \
\!\(\*StyleBox[\"conds\", \"TI\"]\) are True.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769223314046924*^9, 
  3.769223314830102*^9}},ExpressionUUID->"cae004cd-15a3-4722-805d-\
16de6d83c2ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"e25e6d1b-e579-4d62-831e-\
9eb3989c060a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CompoundAnd", "[", "list_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"And", "[", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"Sequence", "@@", "list"}], "]"}], "]"}]}], "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"17d323c9-412f-437e-926f-b78b9d3849ab"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["CompoundOr", "Subsection",ExpressionUUID->"4d369ef8-a66c-4465-9714-81c6bc9efeaa"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769493895917355*^9, 
  3.769493898458009*^9}},ExpressionUUID->"22133e83-09a3-4275-adc8-\
eefb9d295c9a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CompoundOr", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<CompoundOr[\!\(\*StyleBox[\"conds\", \"TI\"]\)] is True if any of \
\!\(\*FormBox[StyleBox[\"conds\", \"TI\"],TraditionalForm]\) are True.\>\""}],
   ";"}]], "Code",
 CellChangeTimes->{{3.7692233274859333`*^9, 
  3.7692233287342777`*^9}},ExpressionUUID->"88f0321c-024d-4066-ae8e-\
1c09df633ccb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"961541ad-3072-4662-9f01-\
f66af3172004"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CompoundOr", "[", "list_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"Or", "[", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"Sequence", "@@", "list"}], "]"}], "]"}]}], "]"}]}], 
  ";"}]], "Code",ExpressionUUID->"571b7fd4-c4c8-48a6-9d5f-663a4f933956"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["NumericListQ", "Subsection",
 CellChangeTimes->{{3.710240465866942*^9, 
  3.7102404886090727`*^9}},ExpressionUUID->"a489b1c5-8bdb-4715-bd84-\
b125fa26f01f"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769493905669788*^9, 
  3.769493906234179*^9}},ExpressionUUID->"8b456804-31e6-4dee-9d52-\
e058f8351fb4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NumericListQ", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<NumericListQ[\!\(\*StyleBox[\"x\", \"TI\"]\)] returns True if \
\!\(\*StyleBox[\"x\", \"TI\"]\) is a list of numbers, False otherwise.\>\""}],
   ";"}]], "Code",
 CellChangeTimes->{
  3.769223425980504*^9},ExpressionUUID->"579d6557-2764-4d7a-aa67-\
0f5ba65a4d84"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"a2bd03ad-0765-45fb-a594-\
f541743485ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NumericListQ", "[", "x_", "]"}], ":=", 
   RowBox[{"VectorQ", "[", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"NumericQ", "[", "#", "]"}], "&"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.710240167648121*^9, {3.7102402302409277`*^9, 3.7102402318474283`*^9}, 
   3.7102404891077423`*^9, 
   3.7129116645300617`*^9},ExpressionUUID->"623c72e1-7841-426d-ab52-\
60be8250f4d8"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["NumericFlattenedListQ", "Subsection",
 CellChangeTimes->{
  3.710240822093184*^9},ExpressionUUID->"05cc40a3-d46f-4798-9061-\
50cb49951b83"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769493912359804*^9, 
  3.769493912788088*^9}},ExpressionUUID->"0d4c28e0-1feb-459b-8675-\
05f792e72c14"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NumericFlattenedListQ", "::", "usage"}], " ", "=", 
   "\[IndentingNewLine]", 
   "\"\<NumericFlattenedListQ[\!\(\*StyleBox[\"x\", \"TI\"]\)] returns True \
if \!\(\*StyleBox[\"x\", \"TI\"]\) is a list of numbers when Flattened, False \
otherwise.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769223437321931*^9, 
  3.769223437871709*^9}},ExpressionUUID->"bc10e9da-d019-455f-9695-\
8197fe912994"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"b8d7ae27-8651-4594-8e69-\
485ebd13a6ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NumericFlattenedListQ", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"ListQ", "[", "x", "]"}], ",", 
     RowBox[{"NumericListQ", "[", 
      RowBox[{"Flatten", "[", "x", "]"}], "]"}], ",", "False"}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.71024036596973*^9, 3.710240385704095*^9}, 
   3.71024053571239*^9, 3.7102408221019363`*^9, {3.71043503641862*^9, 
   3.710435091038265*^9}},ExpressionUUID->"7b5bf8fb-a0c6-4bac-bfbf-\
fbc0f8b13fc7"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["NumericRuleListQ", "Subsection",
 CellChangeTimes->{
  3.710240048380145*^9},ExpressionUUID->"f2869814-5ebf-4166-aca9-\
c0aed4dc9372"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.7694939466817207`*^9, 
  3.769493947135108*^9}},ExpressionUUID->"6811cefc-ca10-4b63-a042-\
33afe2d3d750"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NumericRuleListQ", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<NumericRuleListQ[\!\(\*StyleBox[\"x\", \"TI\"]\)] returns True if \
\!\(\*StyleBox[\"x\", \"TI\"]\) is a RuleList with numeric values, False \
otherwise.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769354733161172*^9, 3.769354733943328*^9}, {
  3.77935970646115*^9, 
  3.779359722194701*^9}},ExpressionUUID->"07e778bb-8cbd-4ddd-a62b-\
2d01136d35ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"d5a64abb-7ff4-433a-8d20-\
932280a4bd30"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NumericRuleListQ", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"RuleListQ", "[", "x", "]"}], ",", 
     RowBox[{"VectorQ", "[", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"NumericQ", "[", 
         RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         "]"}], "&"}]}], "]"}], ",", "False"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.68857177699957*^9, 3.7102400599807787`*^9, {3.710240145164674*^9, 
   3.7102401508286953`*^9}, {3.710245761525463*^9, 3.7102457657528267`*^9}, {
   3.710438970991184*^9, 3.710439015004156*^9}, {3.710439063943872*^9, 
   3.71043910110842*^9}},ExpressionUUID->"425acadd-6c82-489f-ad9b-\
f7d3bd8d834f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["MakeRuleList", "Subsection",
 CellChangeTimes->{{3.6938656423257732`*^9, 3.693865645125914*^9}, 
   3.7102510477740097`*^9, {3.769968808432534*^9, 
   3.7699688089090147`*^9}},ExpressionUUID->"bae94a03-8229-46b7-aa9b-\
9d10f5d22f4f"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769493918391198*^9, 
  3.769493918834601*^9}},ExpressionUUID->"8e146a52-66d5-4776-9fa4-\
e10ad1fc692e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MakeRuleList", "::", "usage"}], "=", "\n", 
   "\"\<MakeRuleList[\!\(\*StyleBox[\"var\", \"TI\"]\), \!\(\*StyleBox[\"n\", \
\"TI\"]\), \!\(\*StyleBox[\"val\", \"TI\"]\)] makes a list of \!\(\*StyleBox[\
\"n\", \"TI\"]\) rules where \!\(\*StyleBox[\"var\", \"TI\"]\) takes on value \
\!\(\*StyleBox[\"val\", \"TI\"]\).\nMakeRuleList[\!\(\*StyleBox[\"var\", \"TI\
\"]\), \!\(\*StyleBox[\"n\", \"TI\"]\), {\!\(\*StyleBox[\"min\", \"TI\"]\), \
\!\(\*StyleBox[\"max\", \"TI\"]\)}] makes a list of \!\(\*StyleBox[\"n\", \
\"TI\"]\) rules where \!\(\*StyleBox[\"var\", \"TI\"]\) ranges from \
\!\(\*StyleBox[\"min\", \"TI\"]\) to \!\(\*StyleBox[\"max\", \"TI\"]\).\n\
MakeRuleList[\!\(\*StyleBox[\"vars\", \"TI\"]\), \!\(\*StyleBox[\"n\", \
\"TI\"]\), \!\(\*StyleBox[\"vals\", \"TI\"]\)] makes a list of rules between \
corresponding elements of the lists \!\(\*StyleBox[\"vars\", \"TI\"]\) and \!\
\(\*StyleBox[\"vals\", \"TI\"]\).\nMakeRuleList[\!\(\*StyleBox[\"var\", \
\"TI\"]\), \!\(\*StyleBox[\"ns\", \"TI\"]\), \!\(\*StyleBox[\"val\", \
\"TI\"]\)] makes a list of rules with dimensions \!\(\*StyleBox[\"ns\", \
\"TI\"]\) where \!\(\*StyleBox[\"var\", \"TI\"]\) takes on value \
\!\(\*StyleBox[\"val\", \"TI\"]\).\n\
MakeRuleList[{\!\(\*SubscriptBox[StyleBox[\"var\", \"TI\"], \"1\"]\), \
\[Ellipsis], \!\(\*SubscriptBox[StyleBox[\"var\", \"TI\"], \"nv\"]\)}, \
{\!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], \"1\"]\), \[Ellipsis] , \
\!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], \"nv\"]\)}, \
{{\!\(\*SubscriptBox[StyleBox[\"min\", \"TI\"], \"1\"]\), \
\!\(\*SubscriptBox[StyleBox[\"max\", \"TI\"], \"1\"]\)}, \[Ellipsis] , \
{\!\(\*SubscriptBox[StyleBox[\"min\", \"TI\"], \"nv\"]\), \
\!\(\*SubscriptBox[StyleBox[\"max\", \"TI\"], \"nv\"]\)}}] makes a list of \
rules with dimensions \!\(\*StyleBox[\"ns\", \"TI\"]\) where \
\!\(\*SubscriptBox[StyleBox[\"var\", \"TI\"], \"i\"]\) ranges from \
\!\(\*SubscriptBox[StyleBox[\"min\", \"TI\"], \"i\"]\) to \
\!\(\*SubscriptBox[StyleBox[\"max\", \"TI\"], \"i\"]\).\>\""}], ";"}]], "Code",\

 CellChangeTimes->{{3.769184055223081*^9, 3.7691840558464603`*^9}, {
  3.7699688131788597`*^9, 
  3.7699688231817417`*^9}},ExpressionUUID->"78b79a9e-18b2-41da-9bf5-\
e4944b4193a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"4de241e4-724f-4f91-a0fe-\
1436901379ef"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MakeRuleList", "[", 
    RowBox[{"vars_List", ",", "n_", ",", "vals_List"}], "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Subscript", "[", 
        RowBox[{
         RowBox[{
         "vars", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], ",", 
         "i"}], "]"}], "\[Rule]", 
       RowBox[{
       "vals", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}], ",", 
      
      RowBox[{"{", 
       RowBox[{"i", ",", "n"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"Length", "[", "vars", "]"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.69403491189785*^9, 3.694034934590578*^9}, {
   3.694035107196002*^9, 3.694035183777555*^9}, {3.694035215675296*^9, 
   3.694035216649177*^9}, {3.694035265885208*^9, 3.694035374463439*^9}, 
   3.694035648929644*^9, {3.69403607741477*^9, 3.694036102168415*^9}, {
   3.694106688932398*^9, 3.694106723944767*^9}, {3.6947860689732857`*^9, 
   3.694786076140802*^9}, 3.694786123607205*^9, 3.710251047817553*^9, 
   3.769968830106498*^9},ExpressionUUID->"cbbf181c-1cbf-4a10-bf30-\
7517becc6a6b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MakeRuleList", "[", 
   RowBox[{"vars_List", ",", "ns_List", ",", "vals_List"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", "min", ",", "max"}], "}"}], ",", "\n", "\t", 
    RowBox[{"Thread", "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"#", ",", "i"}], "]"}], "&"}], ",", "vars"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Times", "[", 
            RowBox[{"Sequence", "@@", "ns"}], "]"}]}], "}"}]}], "]"}], "]"}], 
      "\n", "\t\t", "\[Rule]", "\n", "\t\t", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Outer", "[", 
        RowBox[{"List", ",", 
         RowBox[{"Sequence", "@@", 
          RowBox[{"Table", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"n", "=", 
              RowBox[{
              "ns", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}], 
             ";", "\n", "\t\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"ListQ", "[", 
                RowBox[{
                "vals", "\[LeftDoubleBracket]", "j", 
                 "\[RightDoubleBracket]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"min", ",", "max"}], "}"}], "=", 
                RowBox[{
                "vals", "\[LeftDoubleBracket]", "j", 
                 "\[RightDoubleBracket]"}]}], ",", 
               RowBox[{"min", "=", 
                RowBox[{"max", "=", 
                 RowBox[{
                 "vals", "\[LeftDoubleBracket]", "j", 
                  "\[RightDoubleBracket]"}]}]}]}], "]"}], ";", "\n", "\t\t\t", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"min", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"max", "-", "min"}], ")"}], "*", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"i", "-", "1"}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"n", "-", "1"}], ")"}]}]}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], "\n", "\t\t", ",", 
            
            RowBox[{"{", 
             RowBox[{"j", ",", 
              RowBox[{"Length", "[", "ns", "]"}]}], "}"}]}], "]"}]}]}], "]"}],
        "]"}]}], "\n", "\t\t", "]"}]}], "\n", "\t", "]"}]}]], "Code",
 CellChangeTimes->{{3.694107049684195*^9, 3.694107095288486*^9}, {
   3.694107139945345*^9, 3.6941072728285713`*^9}, {3.6941073628776283`*^9, 
   3.694107377242366*^9}, {3.694107407969146*^9, 3.694107418729557*^9}, {
   3.694107844715856*^9, 3.6941079609661913`*^9}, {3.694108007191203*^9, 
   3.6941080103733587`*^9}, {3.69410837392626*^9, 3.6941083754056597`*^9}, {
   3.694109125917302*^9, 3.6941095427349873`*^9}, {3.69410960763441*^9, 
   3.694109830875614*^9}, {3.694109892455859*^9, 3.694109916492159*^9}, {
   3.694109986393936*^9, 3.694109993342967*^9}, {3.69411003005512*^9, 
   3.694110088213925*^9}, {3.694785060048889*^9, 3.694785061266922*^9}, 
   3.7102510478425207`*^9, 
   3.769968834894329*^9},ExpressionUUID->"cea4cd3d-d493-4744-bfa8-\
ceed2a41c344"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MakeRuleList", "[", 
    RowBox[{"var_", ",", "n_", ",", "val_"}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Subscript", "[", 
        RowBox[{"var", ",", "i"}], "]"}], "\[Rule]", "val"}], "/.", 
      RowBox[{"\[IGrave]", "\[Rule]", "i"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.693865693696254*^9, 3.693865701445835*^9}, 
   3.694034366907428*^9, {3.694035018271508*^9, 3.694035020524955*^9}, {
   3.69403511216334*^9, 3.694035113645142*^9}, {3.6940357908675137`*^9, 
   3.694035840010625*^9}, 3.694036059321824*^9, {3.694106674414954*^9, 
   3.694106676859124*^9}, {3.694106718518457*^9, 3.694106719532486*^9}, {
   3.6947850663057528`*^9, 3.6947850681920958`*^9}, 3.694785203082122*^9, 
   3.694786063752236*^9, {3.704726766142116*^9, 3.704726768532481*^9}, {
   3.704726806522924*^9, 3.704726817070753*^9}, {3.704726907191565*^9, 
   3.704726930156382*^9}, 3.7047275896573677`*^9, 3.7102510477923937`*^9, 
   3.769968825891202*^9, 
   3.780663762869063*^9},ExpressionUUID->"e8aeb53e-507f-401f-9a38-\
530527e3896d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MakeRuleList", "[", 
    RowBox[{"var_", ",", "n_", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"min_", "?", "NumericQ"}], ",", 
       RowBox[{"max_", "?", "NumericQ"}]}], "}"}]}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"var", ",", "i"}], "]"}], "\[Rule]", 
      RowBox[{"min", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"max", "-", "min"}], ")"}], "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"i", "-", "1"}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"n", "-", "1"}], ")"}]}]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.693865663870858*^9, 3.693865682750389*^9}, {
   3.694035023407735*^9, 3.694035025413265*^9}, {3.694035116086833*^9, 
   3.69403511718935*^9}, {3.694106680401587*^9, 3.694106714849468*^9}, 
   3.6947860659325047`*^9, {3.7086572439537973`*^9, 3.708657245583734*^9}, 
   3.710251047805561*^9, 3.769968827163949*^9, 
   3.7806637656746492`*^9},ExpressionUUID->"afc16961-ef64-4afa-aefe-\
ea724d2a04a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MakeRuleList", "[", 
   RowBox[{"var_", ",", "ns_List", ",", "val_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Thread", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"var", ",", "i"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Times", "[", 
         RowBox[{"Sequence", "@@", "ns"}], "]"}]}], "}"}]}], "]"}], "\[Rule]",
     "\n", "\t\t", 
    RowBox[{"Table", "[", 
     RowBox[{"val", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Times", "[", 
         RowBox[{"Sequence", "@@", "ns"}], "]"}]}], "}"}]}], "]"}]}], "\n", 
   "\t", "]"}]}]], "Code",
 CellChangeTimes->{{3.694107049684195*^9, 3.694107095288486*^9}, {
   3.694107139945345*^9, 3.6941072728285713`*^9}, {3.6941073628776283`*^9, 
   3.694107377242366*^9}, {3.694107407969146*^9, 3.694107418729557*^9}, {
   3.694107844715856*^9, 3.6941079609661913`*^9}, 3.7102510478295603`*^9, 
   3.769968831232999*^9, 
   3.7806637679577847`*^9},ExpressionUUID->"c3c949c9-442e-4fb2-b78b-\
95005b0d47e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"MakeRuleList", ",", "HoldAll"}], "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.694034970206361*^9, 3.694034981965995*^9}, {
   3.694035101422332*^9, 3.6940351038192873`*^9}, 3.694784643385989*^9, {
   3.694785047041531*^9, 3.6947850484080276`*^9}, 3.71025104785432*^9, 
   3.7699688364797*^9},ExpressionUUID->"8d92236c-d0f6-4cee-9e72-5050e8491f47"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["ArrayToRuleList", "Subsection",
 CellChangeTimes->{{3.798031813087031*^9, 
  3.798031815581683*^9}},ExpressionUUID->"e9079f1a-3118-498f-89b8-\
003be029bf5a"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.798031818597785*^9, 
  3.798031819110381*^9}},ExpressionUUID->"6247a4ff-6535-4674-b2d8-\
0b5b7437f27d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ArrayToRuleList", "::", "usage"}], "=", "\n", 
  "\"\<ArrayToRuleList[\!\(\*StyleBox[\"var\", \"TI\"]\), \
\!\(\*StyleBox[\"arr\", \"TI\"]\)] makes an indexed rule list from \
\!\(\*StyleBox[\"arr\", \"TI\"]\).\>\""}]], "Code",
 CellChangeTimes->{{3.798032109259076*^9, 3.7980321244034443`*^9}, {
  3.798032535471196*^9, 3.798032555486781*^9}, {3.807310208730563*^9, 
  3.807310210617071*^9}},ExpressionUUID->"56d655dd-c463-447f-928f-\
034d1fb8157c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.798031925736363*^9, 
  3.798031928423007*^9}},ExpressionUUID->"51a35c9c-3d2d-4c56-8a7d-\
aa695d4a1cf9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ArrayToRuleList", "[", 
    RowBox[{"var_Symbol", ",", "arr_List"}], "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"MapIndexed", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["var", 
         RowBox[{"Sequence", "@@", "#2"}]], "\[Rule]", "#1"}], "&"}], ",", 
      "arr", ",", 
      RowBox[{"{", 
       RowBox[{"-", "1"}], "}"}]}], "]"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.798031932664009*^9, 3.798031940638619*^9}, {
  3.798032040522174*^9, 
  3.798032104090107*^9}},ExpressionUUID->"7000f0c0-3a3d-41e6-a874-\
62f507447f8d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["RuleListQ", "Subsection",
 CellChangeTimes->{
  3.710240029407032*^9},ExpressionUUID->"265feb73-edbc-4eda-acf1-\
401ae4c3d978"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769493932137555*^9, 
  3.7694939326267767`*^9}},ExpressionUUID->"2f5b5727-b5c7-4854-943d-\
58f380342fcf"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleListQ", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<RuleListQ[\!\(\*StyleBox[\"x\", \"TI\"]\)] returns True if \
\!\(\*StyleBox[\"x\", \"TI\"]\) is a list of replacement rules, False \
otherwise.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769231735992979*^9, 
  3.769231737802967*^9}},ExpressionUUID->"050e3417-2d54-4111-8d51-\
3c61d2142acf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"041fcc10-cea8-4003-9d95-\
71c31e82084b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleListQ", "[", "x_", "]"}], ":=", 
   RowBox[{"VectorQ", "[", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}], 
         "\[Equal]", "Rule"}], "||", 
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}], 
         "\[Equal]", "RuleDelayed"}]}], ")"}], "&"}]}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.6885717769255047`*^9, 3.688571776945587*^9}, {
   3.710239953188046*^9, 3.710239959113847*^9}, 3.710240031180707*^9, 
   3.7129116689417152`*^9},ExpressionUUID->"6be2eba5-6ea8-44e8-a150-\
3eae921bdd5e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["TemporalRuleListQ", "Subsection",
 CellChangeTimes->{{3.7793582064605722`*^9, 
  3.779358209282401*^9}},ExpressionUUID->"b9c8c0d0-7d3d-4f56-97ab-\
81eeaa6fa8a4"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.779358233575316*^9, 
  3.779358234080916*^9}},ExpressionUUID->"d8bee110-e2fc-4282-aa42-\
f0641a82229a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TemporalRuleListQ", "::", "usage"}], "=", 
   "\"\<TemporalRuleListQ[\!\(\*StyleBox[\"x\", \"TI\"]\)] returns True if \!\
\(\*StyleBox[\"x\", \"TI\"]\) is a RuleList with temporal values, False \
otherwise.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.779359642297866*^9, 3.7793596680864983`*^9}, {
  3.779359729978632*^9, 
  3.779359744746724*^9}},ExpressionUUID->"c5ad63d9-d1b7-4ccf-911f-\
013f46bbb3db"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7793582366972027`*^9, 
  3.779358238661395*^9}},ExpressionUUID->"2a914011-f574-4a5e-92fe-\
50ba93e2acc9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TemporalRuleListQ", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"RuleListQ", "[", "x", "]"}], ",", 
     RowBox[{"VectorQ", "[", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"MatchQ", "[", 
         RowBox[{"#", ",", 
          RowBox[{"(*", 
           RowBox[{"_Symbol", "|", "_Subscript"}], "*)"}], 
          RowBox[{"_", "\[Rule]", 
           RowBox[{"_InterpolatingFunction", 
            StyleBox[
             RowBox[{"(*", 
              RowBox[{"|", "_List"}], "*)"}],
             Background->RGBColor[1, 0.5, 0.5]], "|", "_TemporalData"}]}]}], 
         "]"}], "&"}]}], "]"}], ",", "False"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.779358268401828*^9, 3.779358274476667*^9}, 
   3.779358361116325*^9, {3.779358747384392*^9, 3.7793587650408993`*^9}, {
   3.779358824941428*^9, 3.779358832398767*^9}, 3.779359633673551*^9, {
   3.7793613468292923`*^9, 3.779361349274775*^9}, {3.799019265226392*^9, 
   3.799019268720339*^9}, 
   3.829166151662409*^9},ExpressionUUID->"b953d438-bd57-4d04-ac88-\
3b8e1106cff9"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["RuleListListQ", "Subsection",
 CellChangeTimes->{{3.712911198903387*^9, 
  3.712911207732692*^9}},ExpressionUUID->"4c71738a-9ffe-4d3d-93c8-\
89aff95bbf31"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.7694939391035233`*^9, 
  3.769493940602792*^9}},ExpressionUUID->"0922e993-3254-47e0-80a0-\
e6e07181f648"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleListListQ", "::", "usage"}], "=", "\n", 
   "\"\<RuleListListQ[\!\(\*StyleBox[\"x\", \"TI\"]\)] returns True if \
\!\(\*StyleBox[\"x\", \"TI\"]\) is a list of RuleLists, False \
otherwise.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.7692317755901203`*^9, 
  3.7692317774682493`*^9}},ExpressionUUID->"d01240db-d4d3-4705-9b7f-\
1eb63ac29ce1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"3c50faac-4e30-4e65-8e9c-\
04659770850b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleListListQ", "[", "x_", "]"}], ":=", 
   RowBox[{"VectorQ", "[", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"RuleListQ", "[", "#", "]"}], "&"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.712911212860231*^9, 3.712911226730488*^9}, 
   3.712911670102631*^9},ExpressionUUID->"89dbd965-adae-4c0a-b1c8-\
29f90f747183"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["RuleListDistance", "Subsection",
 CellChangeTimes->{{3.710202543609768*^9, 3.710202544108862*^9}, 
   3.710250340695993*^9},ExpressionUUID->"757509bb-1f88-4aa4-b326-\
77026ab687ad"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769493952902972*^9, 
  3.7694939533968782`*^9}},ExpressionUUID->"8502af78-66a1-47af-a791-\
39c234f7b24b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleListDistance", "::", "usage"}], "=", "\n", 
   "\"\<RuleListDistance[\!\(\*StyleBox[\"rulelist1\", \"TI\"]\), \
\!\(\*StyleBox[\"rulelist2\", \"TI\"]\)] gives the distance between two rule \
lists.\nRuleListDistance[\!\(\*StyleBox[\"rulelist\", \"TI\"]\)] gives the \
distance between a rule list and the origin.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.7692316309460583`*^9, 3.769231632632921*^9}, 
   3.7889728020493402`*^9, {3.7889754383316936`*^9, 3.788975447332449*^9}, {
   3.794700745414358*^9, 3.7947007706208963`*^9}, 
   3.7947010825465183`*^9},ExpressionUUID->"1325ea7e-989d-4359-aa38-\
7257520f2711"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"a56ee9fa-2b1a-4510-9038-\
ebdf5b3817cd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleListDistance", "[", 
    RowBox[{
     RowBox[{"in1_", "?", "NumericRuleListQ"}], ",", 
     RowBox[{"in2", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "NumericRuleListQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{"(*", " ", "options", " ", "*)"}], "\n", 
      RowBox[{
       RowBox[{"distancefunction", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"DistanceFunction", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "RuleListDistance", "]"}]}], "}"}], 
           "]"}]}], "]"}]}], ",", "\n", 
       RowBox[{"weights", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Weights", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "RuleListDistance", "]"}]}], "}"}], 
           "]"}]}], "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "list1", ",", 
       "list2"}], "}"}], ",", "\n", "\n", 
     RowBox[{
      RowBox[{"list1", "=", 
       RowBox[{"RuleListMultiply", "[", 
        RowBox[{"in1", ",", "weights"}], "]"}]}], ";", "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"in2", "\[NotEqual]", 
         RowBox[{"{", "}"}]}], ",", "\n", "\t", 
        RowBox[{"list2", "=", 
         RowBox[{"RuleListMultiply", "[", 
          RowBox[{"in2", ",", "weights"}], "]"}]}], ",", "\n", "\t", 
        RowBox[{"list2", "=", 
         RowBox[{"RuleListMultiply", "[", 
          RowBox[{"in1", ",", "0"}], "]"}]}]}], "\n", "]"}], ";", "\n", "\n", 
      
      RowBox[{"Return", "[", 
       RowBox[{"distancefunction", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Sort", "[", "list1", "]"}], "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{
          RowBox[{"Sort", "[", "list2", "]"}], "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}], 
       "]"}]}]}], "\n", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.710202471671939*^9, 3.710202484218748*^9}, {
   3.710202549862443*^9, 3.7102025503409023`*^9}, {3.710250306821698*^9, 
   3.710250308509453*^9}, 3.7102503413027983`*^9, 3.788972805300178*^9, {
   3.7889745328389273`*^9, 3.7889745533417597`*^9}, {3.7889747473494987`*^9, 
   3.788974788836464*^9}, {3.788974831362464*^9, 3.7889748914405537`*^9}, {
   3.788979185698216*^9, 3.788979232642787*^9}, {3.788979288720765*^9, 
   3.7889793519693727`*^9}, {3.794700527085101*^9, 3.7947005574034853`*^9}, {
   3.794700598046297*^9, 
   3.794700601188615*^9}},ExpressionUUID->"7601c93d-d640-46b5-99c2-\
fbe819b0bd13"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "RuleListDistance", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"DistanceFunction", "\[Rule]", "EuclideanDistance"}], ",", 
     RowBox[{"Weights", "\[Rule]", 
      RowBox[{"{", "}"}]}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.78897489723983*^9, 3.788974918541696*^9}, {
  3.78897864053163*^9, 
  3.788978667577834*^9}},ExpressionUUID->"11e77ce3-32d0-48d4-98c7-\
57e896ff9cf4"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["RuleListTweak", "Subsection",
 CellChangeTimes->{
  3.7104969082128267`*^9},ExpressionUUID->"cf7e94f1-d30e-4145-bfbb-\
48be937a284f"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769493958562039*^9, 
  3.769493959004998*^9}},ExpressionUUID->"8c4228fa-ea53-4b81-8da3-\
e8fe7a85d0f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleListTweak", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<RuleListTweak[\!\(\*StyleBox[\"point\", \"TI\"]\), \
\!\(\*StyleBox[\"var\", \"TI\"]\), \!\(\*StyleBox[\"h\", \"TI\"]\)] perturbs \
variable \!\(\*StyleBox[\"var\", \"TI\"]\) in rulelist \!\(\*StyleBox[\"point\
\", \"TI\"]\) by \!\(\*StyleBox[\"h\", \"TI\"]\).\n\
RuleListTweak[\!\(\*StyleBox[\"point\", \"TI\"]\), \!\(\*StyleBox[\"vars\", \
\"TI\"]\), \!\(\*StyleBox[\"h\", \"TI\"]\)] perturbs variables \
\!\(\*StyleBox[\"vars\", \"TI\"]\) in rulelist \!\(\*StyleBox[\"point\", \"TI\
\"]\) by \!\(\*StyleBox[\"h\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.7693547843573103`*^9, 
  3.769354785074066*^9}},ExpressionUUID->"c72a7a08-52d0-4395-a9b2-\
c767e32aab0d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"fec384f4-ae34-42af-a93f-\
2194a4ab2f2e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RuleListTweak", "[", 
    RowBox[{
     RowBox[{"point_", "?", "RuleListQ"}], ",", "var_Symbol", ",", "h_"}], 
    "]"}], ":=", 
   RowBox[{"Append", "[", 
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{"point", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         "=!=", "var"}], "&"}]}], "]"}], ",", 
     RowBox[{"var", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"var", "/.", "point"}], ")"}], "+", "h"}], ")"}]}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RuleListTweak", "[", 
    RowBox[{
     RowBox[{"point_", "?", "RuleListQ"}], ",", "var_Subscript", ",", "h_"}], 
    "]"}], ":=", 
   RowBox[{"Append", "[", 
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{"point", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         "=!=", "var"}], "&"}]}], "]"}], ",", 
     RowBox[{"var", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"var", "/.", "point"}], ")"}], "+", "h"}], ")"}]}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RuleListTweak", "[", 
    RowBox[{
     RowBox[{"point_", "?", "RuleListQ"}], ",", "var_List", ",", "h_List"}], 
    "]"}], ":=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{"point", ",", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"var", ",", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
          "]"}]}], "&"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "/.", "point"}], ")"}], "+", 
          RowBox[{"h", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"var", ",", "#"}], "]"}], "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
           "\[RightDoubleBracket]"}]}], ")"}]}], "&"}], "/@", "var"}]}], 
    "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{
  3.688409481375136*^9, {3.688571718805376*^9, 3.6885717188261423`*^9}, {
   3.696164797413574*^9, 3.696164815757712*^9}, {3.696165297465616*^9, 
   3.696165302617202*^9}, {3.710245792245047*^9, 3.71024580759614*^9}, {
   3.710496908229487*^9, 
   3.710496908240161*^9}},ExpressionUUID->"162ea259-d218-49e2-bf7b-\
e9f6bce6d318"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["RuleListAdd",
 Background->RGBColor[1, 0.5, 0.5]]], "Subsection",
 CellChangeTimes->{3.710245934177114*^9, 
  3.710246289067247*^9},ExpressionUUID->"58e1e633-fe5d-4d3c-9b11-\
8c4e58e8844c"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769493964874564*^9, 
  3.769493965369343*^9}},ExpressionUUID->"6ff71524-c9d4-40e3-aaf9-\
b25afa3db46e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleListAdd", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<RuleListAdd[\!\(\*StyleBox[\"rulelist1\", \"TI\"]\), \
\!\(\*StyleBox[\"rulelist2\", \"TI\"]\)] adds corresponding elements of two \
rulelists.\nRuleListAdd[\!\(\*StyleBox[\"rulelist\", \"TI\"]\), \
\!\(\*StyleBox[\"x\", \"TI\"]\)] or RuleListAdd[\!\(\*StyleBox[\"x\", \"TI\"]\
\), \!\(\*StyleBox[\"rulelist\", \"TI\"]\)] adds number \!\(\*StyleBox[\"x\", \
\"TI\"]\) to all elements of rulelist \!\(\*StyleBox[\"rulelist\", \"TI\"]\).\
\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769354830641511*^9, 3.769354867355837*^9}, {
  3.844342548956025*^9, 
  3.844342579387349*^9}},ExpressionUUID->"43bf5dd4-e4d4-4e46-827a-\
ff498da15827"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"1c416056-97e9-4324-9523-\
d8f9ef07cfc8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RuleListAdd", "[", 
    RowBox[{
     RowBox[{"a_", "?", "RuleListQ"}], ",", 
     RowBox[{"b_", "?", "RuleListQ"}]}], "]"}], ":=", 
   RowBox[{"Normal", "[", 
    RowBox[{"Merge", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], ",", "Total"}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RuleListAdd", "[", 
    RowBox[{
     RowBox[{"a_", "?", "RuleListQ"}], ",", 
     RowBox[{"x_", "?", "NumericQ"}]}], "]"}], ":=", 
   RowBox[{"Normal", "[", 
    RowBox[{"Merge", "[", 
     RowBox[{"a", ",", 
      RowBox[{
       RowBox[{"x", "+", 
        RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
        "&"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RuleListAdd", "[", 
    RowBox[{
     RowBox[{"x_", "?", "NumericQ"}], ",", 
     RowBox[{"a_", "?", "RuleListQ"}]}], "]"}], ":=", 
   RowBox[{"Normal", "[", 
    RowBox[{"Merge", "[", 
     RowBox[{"a", ",", 
      RowBox[{
       RowBox[{"x", "+", 
        RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
        "&"}]}], "]"}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{
  3.688571718843539*^9, {3.7102458891085157`*^9, 3.710245934186613*^9}, {
   3.710440039449045*^9, 3.710440077873204*^9}, 3.7234791316989737`*^9, {
   3.76949397644904*^9, 3.7694939780851727`*^9}, {3.84434239213837*^9, 
   3.84434240744939*^9}, {3.844342520267851*^9, 
   3.8443425407227383`*^9}},ExpressionUUID->"1a6452ed-75ea-4c27-82d9-\
85d5292300fb"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["RuleListSubtract", "Subsection",
 CellChangeTimes->{
  3.710245934177114*^9, 3.710246289067247*^9, {3.75925569996496*^9, 
   3.759255700997251*^9}},ExpressionUUID->"add7cbe2-a15d-414a-9f7d-\
dd3b36252b31"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769493985029171*^9, 
  3.7694939856036386`*^9}},ExpressionUUID->"1192edd3-8d96-45d5-8088-\
1a4d5dfd450f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleListSubtract", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<RuleListSubtract[\!\(\*StyleBox[\"rulelist1\", \"TI\"]\), \
\!\(\*StyleBox[\"rulelist2\", \"TI\"]\)] subtracts corresponding elements of \
\!\(\*StyleBox[\"rulelist2\", \"TI\"]\) from \!\(\*StyleBox[\"rulelist1\", \
\"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769354843762107*^9, 3.7693548446569138`*^9}, 
   3.769356496573391*^9, {3.7704824814560328`*^9, 
   3.770482483100892*^9}},ExpressionUUID->"dc9db62f-8c8c-4744-9820-\
f78777c79417"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"6025f154-ba41-47ef-b69c-\
d68239ee368e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleListSubtract", "[", 
    RowBox[{
     RowBox[{"a_", "?", "RuleListQ"}], ",", 
     RowBox[{"b_", "?", "RuleListQ"}]}], "]"}], ":=", 
   RowBox[{"RuleListAdd", "[", 
    RowBox[{"a", ",", 
     RowBox[{"RuleListMultiply", "[", 
      RowBox[{"b", ",", 
       RowBox[{"-", "1"}]}], "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.688571718843539*^9, {3.7102458891085157`*^9, 3.710245934186613*^9}, {
   3.710440039449045*^9, 3.710440077873204*^9}, 3.7234791316989737`*^9, 
   3.7592558064478188`*^9, {3.759255992301937*^9, 3.759255993758088*^9}, {
   3.759256051338532*^9, 3.75925605153528*^9}, {3.7592561417901287`*^9, 
   3.759256161950488*^9}},ExpressionUUID->"7d4be5f3-48ed-4cf0-ad3c-\
dcc7dca4e64b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["RuleListMultiply", "Subsection",
 CellChangeTimes->{{3.72347931336963*^9, 
  3.723479318208311*^9}},ExpressionUUID->"9db61aaf-d555-4ada-b650-\
1011e65458ce"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.76949399177544*^9, 
  3.769493992314679*^9}},ExpressionUUID->"1b9c6c67-5a66-4efd-a8ae-\
077e4ba9c40e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleListMultiply", "::", "usage"}], "=", "\n", 
   "\"\<RuleListMultiply[\!\(\*StyleBox[\"rulelist1\", \"TI\"]\), \
\!\(\*StyleBox[\"rulelist2\", \"TI\"]\)] multiplies corresponding elements of \
rulelists.\nRuleListMultiply[\!\(\*StyleBox[\"rulelist\", \"TI\"]\), \
\!\(\*StyleBox[\"x\", \"TI\"]\)] or RuleListMultiply[\!\(\*StyleBox[\"x\", \
\"TI\"]\), \!\(\*StyleBox[\"rulelist\", \"TI\"]\)] multiplies elements of \
rulelist \!\(\*StyleBox[\"rulelist\", \"TI\"]\) by number \
\!\(\*StyleBox[\"x\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769361638099803*^9, 3.769361665637562*^9}, {
  3.788944107324751*^9, 
  3.788944139576597*^9}},ExpressionUUID->"5cb9aad8-cfe8-4f48-912b-\
79cc82abea99"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"adede948-5996-4b39-bee5-\
61ff001f4036"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RuleListMultiply", "[", 
    RowBox[{
     RowBox[{"a_", "?", "RuleListQ"}], ",", 
     RowBox[{"x_", "?", "NumericQ"}]}], "]"}], ":=", 
   RowBox[{"Normal", "[", 
    RowBox[{"Merge", "[", 
     RowBox[{"a", ",", 
      RowBox[{
       RowBox[{"x", "*", 
        RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
        "&"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RuleListMultiply", "[", 
    RowBox[{
     RowBox[{"x_", "?", "NumericQ"}], ",", 
     RowBox[{"a_", "?", "RuleListQ"}]}], "]"}], ":=", 
   RowBox[{"Normal", "[", 
    RowBox[{"Merge", "[", 
     RowBox[{"a", ",", 
      RowBox[{
       RowBox[{"x", "*", 
        RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
        "&"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RuleListMultiply", "[", 
    RowBox[{
     RowBox[{"a_", "?", "RuleListQ"}], ",", 
     RowBox[{"b_", "?", "RuleListQ"}]}], "]"}], ":=", 
   RowBox[{"Normal", "[", 
    RowBox[{"Merge", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], ",", 
      RowBox[{"Apply", "[", "Times", "]"}]}], "]"}], "]"}]}], ";"}]}], "Code",\

 CellChangeTimes->{{3.7234794521554813`*^9, 3.723479484306864*^9}, {
  3.723479574296317*^9, 3.723479600698317*^9}, {3.7234811617822742`*^9, 
  3.7234811688355923`*^9}, {3.788943925636929*^9, 
  3.788943958512536*^9}},ExpressionUUID->"254b370f-5310-4803-9a48-\
0ddd4ebe581e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["NumericRuleListToNumericList", "Subsection",
 CellChangeTimes->{{3.759306972886874*^9, 
  3.759307004331427*^9}},ExpressionUUID->"be38bb34-4efd-4bbf-a3b3-\
fbf17f6fd155"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494003296822*^9, 
  3.7694940037993383`*^9}},ExpressionUUID->"012e14e1-b3f6-4076-9844-\
fbc1cace0b17"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NumericRuleListToNumericList", "::", "usage"}], "=", "\n", 
   "\"\<NumericRuleListToNumericList[\!\(\*StyleBox[\"rulelist\", \"TI\"]\), \
\!\(\*StyleBox[\"vars\", \"TI\"]\)] converts numeric rulelist \!\(\*StyleBox[\
\"rulelist\", \"TI\"]\) to a numeric list, in order of \
\!\(\*StyleBox[\"vars\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.7693643043338413`*^9, 3.769364305449391*^9}, {
  3.770484406468625*^9, 
  3.77048441408956*^9}},ExpressionUUID->"3a021a1e-1628-45c2-9e9d-\
17e0d3d8abba"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"1dc51ca1-eccd-48b3-8072-\
39d77319aa61"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NumericRuleListToNumericList", "[", 
    RowBox[{
     RowBox[{"rl_", "?", "NumericRuleListQ"}], ",", "vars_List"}], "]"}], ":=", 
   RowBox[{"vars", "/.", "rl"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.759307022070628*^9},ExpressionUUID->"3ef8ad6f-3e09-4e28-912a-\
9c7818bffbc9"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["RuleListInterpolation", "Subsection",
 CellChangeTimes->{{3.807043690910727*^9, 3.8070436971232367`*^9}, {
  3.807229520645015*^9, 
  3.8072295301235332`*^9}},ExpressionUUID->"cadd76c0-6fbd-469d-bf9b-\
9036076b0202"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.807043701952903*^9, 
  3.8070437025456467`*^9}},ExpressionUUID->"a5caa320-97c4-4f44-9fc7-\
2dc2f8b7e8ec"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleListInterpolation", "::", "usage"}], "=", "\n", 
   "\"\<RuleListInterpolation[\!\(\*StyleBox[\"list\", \"TI\"]\)] converts a \
list of the form {{\!\(\*StyleBox[SubscriptBox[\"x\", \"1\"], \
\"TI\"]\),\!\(\*StyleBox[SubscriptBox[\"rulelist\", \"1\"], \
\"TI\"]\)},{\!\(\*StyleBox[SubscriptBox[\"x\", \"2\"], \
\"TI\"]\),\!\(\*StyleBox[SubscriptBox[\"rulelist\", \"2\"], \"TI\"]\)},...} \
to a rule list of InterpolatingFunctions.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.807043739858952*^9, 3.807043742250856*^9}, {
  3.807043775428192*^9, 
  3.807043866991953*^9}},ExpressionUUID->"93ae4386-3408-4463-9580-\
ecea87b2741e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.80704370581325*^9, 
  3.807043707109228*^9}},ExpressionUUID->"9f205721-a4ad-4476-8618-\
23afdc5fecc2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleListInterpolation", "[", 
    RowBox[{"list_List", ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "interpolationopts", "}"}], ",", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{
      RowBox[{"interpolationopts", "=", 
       RowBox[{"FilterRules", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "RuleListInterpolation", "]"}]}], "}"}], 
          "]"}], ",", 
         RowBox[{"Options", "[", "Interpolation", "]"}]}], "]"}]}], ";", "\n",
       "\t", "\n", "\t", 
      RowBox[{"Normal", "@", 
       RowBox[{"Merge", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ReplaceAll", "[", 
             RowBox[{
              RowBox[{
              "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"var_", "\[Rule]", 
                 RowBox[{"val_", "?", "NumericQ"}]}], ")"}], "\[Rule]", 
               RowBox[{"(", 
                RowBox[{"var", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                   "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", "val"}], "}"}]}], 
                ")"}]}]}], "]"}], "&"}], ",", "list"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Interpolation", "[", 
           RowBox[{"#", ",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"Sequence", "@@", "interpolationopts"}], "]"}]}], "]"}], 
          "&"}]}], "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Code",\

 CellChangeTimes->{{3.807043708952508*^9, 3.807043732216065*^9}, {
  3.8070444023561563`*^9, 3.807044407266843*^9}, {3.807044449749189*^9, 
  3.807044453793356*^9}, {3.8073566523245897`*^9, 
  3.807356660084639*^9}},ExpressionUUID->"142376db-638e-4ab9-8146-\
6b690f603855"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.807044414282033*^9, 
  3.8070444148819113`*^9}},ExpressionUUID->"2fba3d4a-2513-4b50-ab7d-\
6222588a1b4d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "RuleListInterpolation", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.807044418144081*^9, 
  3.807044425051037*^9}},ExpressionUUID->"46b3f9a3-02c9-4ad4-b69a-\
a709e5ff38ab"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["InterpolatingFunctionTake", "Subsection",
 CellChangeTimes->{{3.711552490690751*^9, 
  3.711552496731229*^9}},ExpressionUUID->"4cc5017c-4f25-455f-a836-\
a40431f4d51e"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.76949401055549*^9, 
  3.7694940185928507`*^9}},ExpressionUUID->"af7c6a08-3016-4486-b00c-\
7a71393e9df6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"InterpolatingFunctionTake", "::", "usage"}], "=", "\n", 
   "\"\<InterpolatingFunctionTake[\!\(\*StyleBox[\"if\", \"TI\"]\), \
{\!\(\*StyleBox[\"tmin\", \"TI\"]\), \!\(\*StyleBox[\"tmax\", \"TI\"]\)}] \
takes part of an InterpolatingFunction from \!\(\*StyleBox[\"tmin\", \
\"TI\"]\) to \!\(\*StyleBox[\"tmax\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.7693643637513647`*^9, 
  3.769364364402937*^9}},ExpressionUUID->"d0f02ec5-c407-4dd4-8b0d-\
61ae656ea055"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"ae63d2b8-e578-4941-b8f3-\
e09ce4d6b6eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"based", " ", "on", " ", "code", " ", "by", " ", "MichaelE2"}], 
     " ", "<", 
     RowBox[{"https", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", "a"}],
        "/", "152861"}], "/", "6358"}], ">"}]}], " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "ifnPart", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ifnPart", "[", "\"\<Domain\>\"", "]"}], "=", 
     RowBox[{"Sequence", "[", "1", "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"bounding", " ", "box", " ", "for", " ", "domain"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ifnPart", "[", "\"\<X1\>\"", "]"}], "=", 
     RowBox[{"Sequence", "[", 
      RowBox[{"1", ",", "1"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "lower", " ", "bound", " ", "for", " ", "first", " ", "coordinate"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ifnPart", "[", "\"\<X2\>\"", "]"}], "=", 
     RowBox[{"Sequence", "[", 
      RowBox[{"1", ",", "2"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "upper", " ", "bound", " ", "for", " ", "first", " ", "coordinate"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ifnPart", "[", "\"\<Version\>\"", "]"}], "=", 
     RowBox[{"Sequence", "[", 
      RowBox[{"2", ",", "1"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ifnPart", "[", "\"\<Flags\>\"", "]"}], "=", 
     RowBox[{"Sequence", "[", 
      RowBox[{"2", ",", "2"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"flags", " ", "indicating", " ", 
      RowBox[{"properties", ":", 
       RowBox[{
        RowBox[{"bit", " ", "field", " ", "positions"}], "-", 
        "inferred"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"perhaps", " ", "mistaken", " ", "$extrapolation"}], "=", 
       "0"}], ";", 
      RowBox[{
       RowBox[{
       "whether", " ", "to", " ", "warn", " ", "about", " ", "extrapolation", 
        " ", "$fullArrayBit"}], "=", "1"}], ";", 
      RowBox[{
       RowBox[{
       "interpolation", " ", "data", " ", "is", " ", "a", " ", "full", " ", 
        "array", " ", 
        RowBox[{"(", 
         RowBox[{"not", " ", "ragged"}], ")"}], " ", "$packed"}], "=", "2"}], 
      ";", 
      RowBox[{
       RowBox[{"packed", " ", "array", " ", "form", " ", 
        RowBox[{"(", 
         RowBox[{"??", "?"}], ")"}], " ", "$repeatedBit"}], "=", "4"}], ";", 
      RowBox[{
      "whether", " ", "repeated", " ", "abscissae", " ", "are", " ", 
       "permitted"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ifnPart", "[", "\"\<DerivativeOrder\>\"", "]"}], "=", 
     RowBox[{"Sequence", "[", 
      RowBox[{"2", ",", "3"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"max", " ", "derivative", " ", "order"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ifnPart", "[", "\"\<NGrid\>\"", "]"}], "=", 
     RowBox[{"Sequence", "[", 
      RowBox[{"2", ",", "4"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "number", " ", "of", " ", "points", " ", "in", " ", "each", " ", 
     "coordinate", " ", "grid"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ifnPart", "[", "\"\<InterpolationOrder\>\"", "]"}], "=", 
     RowBox[{"Sequence", "[", 
      RowBox[{"2", ",", "5"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"interpolation", " ", "order"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ifnPart", "[", "\"\<Derivative\>\"", "]"}], "=", 
     RowBox[{"Sequence", "[", 
      RowBox[{"2", ",", "6"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"derivative", " ", "to", " ", 
      RowBox[{"evaluate", ":", 
       RowBox[{
        RowBox[{"0", "--"}], ">", 
        RowBox[{"f", "[", "x", "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"1", "--"}], ">", 
      RowBox[{
       RowBox[{"f", "'"}], "[", "x", "]"}]}], ",", "..."}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ifnPart", "[", "\"\<Periodic\>\"", "]"}], "=", 
     RowBox[{"Sequence", "[", 
      RowBox[{"2", ",", "7"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ifnPart", "[", "\"\<ExtrapolationHandler\>\"", "]"}], "=", 
     RowBox[{"Sequence", "[", 
      RowBox[{"2", ",", "10"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ifnPart", "[", "\"\<Coordinates\>\"", "]"}], "=", 
     RowBox[{"Sequence", "[", "3", "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"list", " ", "of", " ", "lists"}], ",", 
     RowBox[{"abscissae", " ", "of", " ", "interpolation", " ", "grid"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ifnPart", "[", "\"\<InterpolationData\>\"", "]"}], "=", 
     RowBox[{"Sequence", "[", "4", "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"interpolation", " ", "data", " ", 
     RowBox[{"(", 
      RowBox[{"values", " ", "or", " ", "coefficients"}], ")"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ifnPart", "[", "\"\<Offsets\>\"", "]"}], "=", 
     RowBox[{"Sequence", "[", 
      RowBox[{"4", ",", "2"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"offsets", " ", "in", " ", 
     RowBox[{"function", "/", "derivative"}], " ", "array", " ", 
     RowBox[{"(", "PackedArrayForm", ")"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ifnPart", "[", "\"\<FlatData\>\"", "]"}], "=", 
     RowBox[{"Sequence", "[", 
      RowBox[{"4", ",", "3"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"flattened", " ", 
     RowBox[{"function", "/", "derivative"}], " ", "values", " ", 
     RowBox[{"(", "PackedArrayForm", ")"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ifnPart", "[", "\"\<InterpolationStructure\>\"", "]"}], "=", 
     RowBox[{"Sequence", "[", "5", "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"{", "Automatic", "}"}], ",", 
      RowBox[{"or", " ", "dense", " ", "output", " ", "interpolation", " ", 
       RowBox[{"structure", ":", 
        RowBox[{"list", " ", "of", " ", "types", " ", "for", " ", "each", " ", 
         RowBox[{"unit", "/", "subinterval"}]}]}]}]}], "*)"}], 
    RowBox[{
     RowBox[{"ifnPart", "[", "\"\<UnitIndices\>\"", "]"}], "=", 
     RowBox[{"Sequence", "[", 
      RowBox[{"5", ",", "1", ",", "1"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"dense", " ", 
     RowBox[{"output", ":", 
      RowBox[{"Indices", " ", 
       RowBox[{"(", 
        RowBox[{"to", " ", "grid"}], ")"}], " ", "for", " ", "corresponding", 
       " ", "coefficients"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ifnPart", "[", "\"\<UnitTypes\>\"", "]"}], "=", 
     RowBox[{"Sequence", "[", 
      RowBox[{"5", ",", "1", ",", "2"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"dense", " ", "output", " ", 
     RowBox[{"types", ":", 
      RowBox[{
      "Automatic", "|", "NDSolve`CubicHermite", "|", "NDSolve`LocalSeries", 
       "|", "ChebyshevT"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ifnPart", "[", "\"\<Properties\>\"", "]"}], "=", 
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"DownValues", "[", "ifnPart", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Verbatim", "[", "ifnPart", "]"}], "[", "prop_", "]"}], 
        "\[RuleDelayed]", "prop"}], ",", "Infinity"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ifnPart", "[", 
      RowBox[{"\"\<ValidPartQ\>\"", ",", 
       RowBox[{"\"\<Chebyshev\>\"", "|", "\"\<Local Taylor Series\>\""}], ",", 
       RowBox[{"\"\<UnitIndices\>\"", "|", "\"\<UnitTypes\>\""}], ",", "_"}], 
      "]"}], ":=", "True"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ifnPart", "[", 
      RowBox[{"\"\<ValidPartQ\>\"", ",", "_", ",", 
       RowBox[{"\"\<UnitIndices\>\"", "|", "\"\<UnitTypes\>\""}], ",", "_"}], 
      "]"}], ":=", "False"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ifnPart", "[", 
      RowBox[{"\"\<ValidPartQ\>\"", ",", "\"\<Hermite\>\"", ",", 
       RowBox[{"\"\<Offsets\>\"", "|", "\"\<FlatData\>\""}], ",", 
       "Developer`PackedArrayForm"}], "]"}], ":=", "True"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ifnPart", "[", 
      RowBox[{"\"\<ValidPartQ\>\"", ",", "_", ",", 
       RowBox[{"\"\<Offsets\>\"", "|", "\"\<FlatData\>\""}], ",", "_"}], 
      "]"}], ":=", "False"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ifnPart", "[", 
       RowBox[{
       "\"\<ValidPartQ\>\"", ",", "method_String", ",", "part_String", ",", 
        "_"}], "]"}], "/;", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"method", ",", 
         RowBox[{
         "\"\<Chebyshev\>\"", "|", "\"\<Local Taylor Series\>\"", "|", 
          "\"\<Hermite\>\""}]}], "]"}], "&&", 
       RowBox[{"MemberQ", "[", 
        RowBox[{"part", ",", 
         RowBox[{"ifnPart", "[", "\"\<Properties\>\"", "]"}]}], "]"}]}]}], ":=",
      "True"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ifnPart", "[", 
      RowBox[{"\"\<ValidPartQ\>\"", ",", "_", ",", "_", ",", "_"}], "]"}], ":=",
      "False"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ifnPart", "[", 
       RowBox[{"if_InterpolatingFunction", ",", "part_String"}], "]"}], "/;", 
      
      RowBox[{"ifnPart", "[", 
       RowBox[{"\"\<ValidPartQ\>\"", ",", 
        RowBox[{"if", "[", "\"\<InterpolationMethod\>\"", "]"}], ",", "part", 
        ",", 
        RowBox[{"if", "\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}]}], ":=", 
     
     RowBox[{"if", "~", "Part", "~", 
      RowBox[{"ifnPart", "[", "part", "]"}]}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.711559867113413*^9, 3.71155987533477*^9}, {
  3.769364369984508*^9, 
  3.7693643724705763`*^9}},ExpressionUUID->"3b2dcfe8-3773-49e3-9cd8-\
6031ff93b2fd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dupeLast", "[", "list_", "]"}], ":=", 
    RowBox[{"Append", "[", 
     RowBox[{"list", ",", 
      RowBox[{"Last", "@", "list"}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"iDataTake", "[", 
    RowBox[{
     RowBox[{"\"\<Local Taylor series\>\"", "|", "\"\<Chebyshev\>\""}], ",", 
     "data_", ",", "span_"}], "]"}], ":=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{"First", "@", "span"}], ",", 
        RowBox[{"1", ";;", "2"}]}], "\[RightDoubleBracket]"}], "}"}], ",", 
     RowBox[{"data", "\[LeftDoubleBracket]", 
      RowBox[{
       RowBox[{
        RowBox[{"First", "@", "span"}], "+", "1"}], ";;", 
       RowBox[{"Last", "@", "span"}]}], "\[RightDoubleBracket]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"iDataTake", "[", 
    RowBox[{"\"\<Hermite\>\"", ",", 
     RowBox[{"data", ":", 
      RowBox[{"{", 
       RowBox[{"Developer`PackedArrayForm", ",", "_", ",", "_"}], "}"}]}], 
     ",", 
     RowBox[{"span", ":", 
      RowBox[{"{", 
       RowBox[{"s1_", ",", "s2_"}], "}"}]}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"ReplacePart", "[", 
    RowBox[{"data", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Rest", "@", 
         RowBox[{"{", 
          RowBox[{"ifnPart", "[", "\"\<Offsets\>\"", "]"}], "}"}]}], 
        "\[Rule]", 
        RowBox[{
         RowBox[{"data", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", 
           RowBox[{"s1", ";;", 
            RowBox[{"s2", "+", "1"}]}]}], "\[RightDoubleBracket]"}], "-", 
         RowBox[{"data", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "s1"}], "\[RightDoubleBracket]"}]}]}], ",", 
       RowBox[{
        RowBox[{"Rest", "@", 
         RowBox[{"{", 
          RowBox[{"ifnPart", "[", "\"\<FlatData\>\"", "]"}], "}"}]}], 
        "\[Rule]", 
        RowBox[{"data", "\[LeftDoubleBracket]", 
         RowBox[{"3", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"data", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "s1"}], "\[RightDoubleBracket]"}], "+", "1"}], 
           ";;", 
           RowBox[{"data", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", 
             RowBox[{"s2", "+", "1"}]}], "\[RightDoubleBracket]"}]}]}], 
         "\[RightDoubleBracket]"}]}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"iDataTake", "[", 
     RowBox[{"\"\<Hermite\>\"", ",", 
      RowBox[{"data", ":", 
       RowBox[{"{", "__List", "}"}]}], ",", "span_"}], "]"}], ":=", 
    RowBox[{"data", "\[LeftDoubleBracket]", 
     RowBox[{"Span", "@@", "span"}], "\[RightDoubleBracket]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"iStructureTake", "[", 
    RowBox[{
     RowBox[{"\"\<Local Taylor series\>\"", "|", "\"\<Chebyshev\>\""}], ",", 
     "structure_", ",", "span_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"ReplacePart", "[", 
    RowBox[{"structure", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Rest", "@", 
         RowBox[{"{", 
          RowBox[{"ifnPart", "[", "\"\<UnitIndices\>\"", "]"}], "}"}]}], 
        "\[Rule]", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", "1", "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"1", "+", 
            RowBox[{"structure", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{
                RowBox[{"##2", "&"}], "@", 
                RowBox[{"ifnPart", "[", "\"\<UnitIndices\>\"", "]"}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"First", "@", "span"}], "+", "1"}], ";;", 
                RowBox[{"Last", "@", "span"}]}]}], "]"}], "]"}], "-", 
            RowBox[{"structure", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{
                RowBox[{"##2", "&"}], "@", 
                RowBox[{"ifnPart", "[", "\"\<UnitIndices\>\"", "]"}]}], ",", 
               RowBox[{"First", "@", "span"}], ",", 
               RowBox[{"-", "1"}]}], "]"}], "]"}]}], "//", "dupeLast"}]}], 
         "]"}]}], ",", 
       RowBox[{
        RowBox[{"Rest", "@", 
         RowBox[{"{", 
          RowBox[{"ifnPart", "[", "\"\<UnitTypes\>\"", "]"}], "}"}]}], 
        "\[Rule]", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", "Automatic", "}"}], ",", 
          RowBox[{
           RowBox[{"structure", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{
               RowBox[{"##2", "&"}], "@", 
               RowBox[{"ifnPart", "[", "\"\<UnitTypes\>\"", "]"}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"First", "@", "span"}], "+", "1"}], ";;", 
               RowBox[{"Last", "@", "span"}]}]}], "]"}], "]"}], "//", 
           "dupeLast"}]}], "]"}]}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"iStructureTake", "[", 
     RowBox[{"\"\<Hermite\>\"", ",", "structure_", ",", "span_"}], "]"}], ":=",
     "structure"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InterpolatingFunctionTake", "[", 
     RowBox[{"if_InterpolatingFunction", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"tmin_", "?", "NumericQ"}], ",", 
        RowBox[{"tmax_", "?", "NumericQ"}]}], "}"}]}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "@", 
      RowBox[{"if", "[", "\"\<Domain\>\"", "]"}]}], "\[Equal]", "1"}]}], ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"coords", ",", 
       RowBox[{"newif", "=", 
        RowBox[{"Hold", "@@", "if"}]}], ",", "span", ",", "method"}], "}"}], 
     ",", "\n", "\n", 
     RowBox[{
      RowBox[{"method", "=", 
       RowBox[{"if", "[", "\"\<InterpolationMethod\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"coords", "=", 
       RowBox[{"First", "@", 
        RowBox[{"if", "[", "\"\<Coordinates\>\"", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"span", "=", 
       RowBox[{"Clip", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"SparseArray", "[", 
             RowBox[{
              RowBox[{"UnitStep", "[", 
               RowBox[{"coords", "-", "tmin"}], "]"}], " ", 
              RowBox[{"UnitStep", "[", 
               RowBox[{"tmax", "-", "coords"}], "]"}]}], "]"}], "[", 
            "\"\<AdjacencyLists\>\"", "]"}], "\[LeftDoubleBracket]", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "1"}]}], "}"}], "\[RightDoubleBracket]"}], "+", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"Length", "@", "coords"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"newif", "\[LeftDoubleBracket]", 
        RowBox[{"ifnPart", "[", "\"\<Domain\>\"", "]"}], 
        "\[RightDoubleBracket]"}], "=", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"tmin", ",", "tmax"}], "}"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"newif", "\[LeftDoubleBracket]", 
        RowBox[{"ifnPart", "[", "\"\<NGrid\>\"", "]"}], 
        "\[RightDoubleBracket]"}], "=", 
       RowBox[{"1", "+", 
        RowBox[{"Differences", "@", "span"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"newif", "\[LeftDoubleBracket]", 
        RowBox[{"ifnPart", "[", "\"\<Coordinates\>\"", "]"}], 
        "\[RightDoubleBracket]"}], "=", 
       RowBox[{"Developer`ToPackedArray", "@", 
        RowBox[{"{", 
         RowBox[{"coords", "\[LeftDoubleBracket]", 
          RowBox[{"Span", "@@", "span"}], "\[RightDoubleBracket]"}], 
         "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"newif", "\[LeftDoubleBracket]", 
        RowBox[{"ifnPart", "[", "\"\<InterpolationData\>\"", "]"}], 
        "\[RightDoubleBracket]"}], "=", 
       RowBox[{"iDataTake", "[", 
        RowBox[{"method", ",", 
         RowBox[{"if", "\[LeftDoubleBracket]", 
          RowBox[{"ifnPart", "[", "\"\<InterpolationData\>\"", "]"}], 
          "\[RightDoubleBracket]"}], ",", "span"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"newif", "\[LeftDoubleBracket]", 
        RowBox[{"ifnPart", "[", "\"\<InterpolationStructure\>\"", "]"}], 
        "\[RightDoubleBracket]"}], "=", 
       RowBox[{"iStructureTake", "[", 
        RowBox[{"method", ",", 
         RowBox[{"if", "\[LeftDoubleBracket]", 
          RowBox[{"ifnPart", "[", "\"\<InterpolationStructure\>\"", "]"}], 
          "\[RightDoubleBracket]"}], ",", "span"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"InterpolatingFunction", "@@", "newif"}]}]}], "\n", "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.711105644934021*^9, 3.7111056449346*^9}, 
   3.711106077122067*^9, {3.71111404900695*^9, 3.711114057957386*^9}, {
   3.711114090587434*^9, 3.711114120037383*^9}, {3.711114153755972*^9, 
   3.711114154935883*^9}, {3.711551540572699*^9, 3.7115517571953697`*^9}, {
   3.711552557274246*^9, 3.711552586371377*^9}, 
   3.807369442714223*^9},ExpressionUUID->"08ad98d7-7b39-4d8d-a745-\
5cc81f20119d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Slice", "Subsection",
 CellChangeTimes->{
  3.693869696796332*^9},ExpressionUUID->"2272c246-6e3f-44f8-a579-\
3c020e95e38c"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494032219985*^9, 
  3.769494032728971*^9}},ExpressionUUID->"80389554-1b6f-4daa-970b-\
dd9ac3cf8867"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Slice", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<Slice[\!\(\*StyleBox[\"rulelist\", \"TI\"]\), \!\(\*StyleBox[\"t\", \
\"TI\"]\)] replaces temporal \!\(\*StyleBox[\"rulelist\", \"TI\"]\) with its \
values at \!\(\*StyleBox[\"t\", \"TI\"]\).\n\
Slice[\!\(\*StyleBox[\"rulelist\", \"TI\"]\), {\!\(\*StyleBox[\"tmin\", \
\"TI\"]\), \!\(\*StyleBox[\"tmax\", \"TI\"]\)}] extracts values from \
\!\(\*StyleBox[\"tmin\", \"TI\"]\) to \!\(\*StyleBox[\"tmax\", \
\"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769364422592732*^9, 
  3.769364423295657*^9}},ExpressionUUID->"944e72b4-8d3c-4149-aedf-\
9f2e7ba88a7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"d9219a55-5c6e-48ed-99af-\
defc3c8b5a58"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Slice", "[", 
     RowBox[{
      RowBox[{"sol_", "?", 
       RowBox[{"(*", "Temporal", "*)"}], "RuleListQ"}], ",", 
      RowBox[{"t", ":", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"_", "?", "NumericQ"}], "|", "_DirectedInfinity"}], 
        ")"}]}]}], "]"}], ":=", "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"Which", "[", "\n", "\t", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"InterpolatingFunction", ",", "TemporalData"}], "}"}], ",", 
          RowBox[{"Head", "[", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           "]"}]}], "]"}], ",", "\n", "\t", 
        RowBox[{"ReplacePart", "[", 
         RowBox[{"#", ",", 
          RowBox[{"2", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "[", "t", "]"}], "/.", "#"}], ")"}]}]}], "]"}], "\n", ",", "\n",
         "\t", 
        RowBox[{
         RowBox[{"Head", "[", 
          RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
           "]"}], "===", "List"}], ",", "\n", "\t", 
        RowBox[{"ReplacePart", "[", 
         RowBox[{"#", ",", 
          RowBox[{"2", "\[Rule]", 
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"sol", "\[LeftDoubleBracket]", 
               RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "\[Equal]", "t"}], "&"}], ",", "1"}], "]"}], 
            "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}]}], "]"}], 
        "\n", ",", "\n", "\t", "Else", ",", "#"}], "\n", "]"}], "&"}], "/@", 
     "sol"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Slice", "[", 
    RowBox[{
     RowBox[{"sol_", "?", 
      RowBox[{"(*", "Temporal", "*)"}], "RuleListQ"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"t1_", "?", "NumericQ"}], ",", 
       RowBox[{"t2_", "?", "NumericQ"}]}], "}"}]}], "]"}], ":=", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Which", "[", "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "[", 
         RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         "]"}], "===", "InterpolatingFunction"}], ",", "\n", "\t", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{"#", ",", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"InterpolatingFunctionTake", "[", 
           RowBox[{
            RowBox[{
            "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
            
            RowBox[{"{", 
             RowBox[{"t1", ",", "t2"}], "}"}]}], "]"}]}]}], "]"}], "\n", ",", 
       "\n", "\t", 
       RowBox[{
        RowBox[{"Head", "[", 
         RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         "]"}], "===", "List"}], ",", "\n", "\t", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{"#", ",", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"sol", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
            RowBox[{
             RowBox[{"t1", "\[LessEqual]", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "\[LessEqual]", "t2"}], "&"}]}], "]"}]}]}], "]"}], "\n", ",", 
       "\n", "\t", 
       RowBox[{
        RowBox[{"Head", "[", 
         RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         "]"}], "===", "TemporalData"}], ",", "\n", "\t", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{"#", ",", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"TimeSeries", "[", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                "[", "\"\<Times\>\"", "]"}], "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{"t1", "+", "1"}], ";;", 
                RowBox[{"t2", "+", "1"}]}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                "[", "\"\<Values\>\"", "]"}], "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{"t1", "+", "1"}], ";;", 
                RowBox[{"t2", "+", "1"}]}], "\[RightDoubleBracket]"}]}], 
             "}"}], "]"}], "]"}]}]}], "]"}], "\n", ",", "\n", "\t", "Else", 
       ",", "#"}], "\n", "]"}], "&"}], "/@", "sol"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Slice", "[", 
    RowBox[{
     RowBox[{"sol_", "?", "RuleListQ"}], ",", "___"}], "]"}], ":=", "sol"}], 
  ";"}]}], "Code",
 CellChangeTimes->{
  3.688409481882379*^9, 3.6938696968207693`*^9, {3.6938697976200542`*^9, 
   3.693869812035348*^9}, {3.696601015244042*^9, 3.696601074234323*^9}, {
   3.696601503188765*^9, 3.696601533763588*^9}, {3.696601624914488*^9, 
   3.6966016789808607`*^9}, {3.69660173166234*^9, 3.69660178342656*^9}, {
   3.696601824639659*^9, 3.6966018328300667`*^9}, {3.696602382145833*^9, 
   3.696602399274035*^9}, {3.696602477603319*^9, 3.6966024903611097`*^9}, {
   3.696604793175268*^9, 3.696604799724617*^9}, {3.6966056399534187`*^9, 
   3.69660564853788*^9}, {3.711554722778556*^9, 3.711554725883841*^9}, {
   3.7115618775583572`*^9, 3.711561878193462*^9}, {3.7115713322303267`*^9, 
   3.711571346080482*^9}, {3.711576288426737*^9, 3.711576308219507*^9}, {
   3.711576394583687*^9, 3.7115764907296457`*^9}, {3.7115777592517757`*^9, 
   3.711577761564786*^9}, {3.71157780320555*^9, 3.711577809217905*^9}, {
   3.71157865951108*^9, 3.711578733694038*^9}, {3.711579169167437*^9, 
   3.711579183103889*^9}, {3.7793619828032417`*^9, 3.779362007696313*^9}, {
   3.780510285393856*^9, 3.780510297726857*^9}, {3.780510339034844*^9, 
   3.780510339766239*^9}, {3.829951005621903*^9, 3.8299510168602467`*^9}, 
   3.829951101729455*^9, 3.829952660229951*^9, 
   3.829954064441628*^9},ExpressionUUID->"6d1f288d-c23c-419c-b3e5-\
f7b69b515f09"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["InitialSlice", "Subsection",
 CellChangeTimes->{
  3.693869710362833*^9},ExpressionUUID->"175ed360-d00d-46ea-9b47-\
689e813eafc5"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.7694940467157183`*^9, 
  3.769494047217217*^9}},ExpressionUUID->"96f203ed-ecd7-419e-844f-\
2b25610e20e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"InitialSlice", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<InitialSlice[\!\(\*StyleBox[\"rulelist\", \"TI\"]\)] extracts the \
initial values from temporal \!\(\*StyleBox[\"rulelist\", \"TI\"]\).\n\
InitialSlice[\!\(\*StyleBox[\"rulelist\", \"TI\"]\), \!\(\*StyleBox[\"tmax\", \
\"TI\"]\)] extracts the initial values ending at \!\(\*StyleBox[\"tmax\", \
\"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769364464367828*^9, 
  3.769364465056521*^9}},ExpressionUUID->"f97b6322-c8a4-40a1-8fec-\
da21965ed294"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"cc2aa371-a2fd-4ad8-a3c9-\
07e3eac1d6a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"InitialSlice", "[", 
    RowBox[{
     RowBox[{"sol_", "?", "RuleListQ"}], ",", 
     RowBox[{"n", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "NumericQ"}], ")"}], ":", "0"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "x", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"x", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], ",", 
         RowBox[{"10.", "^", 
          RowBox[{"-", "100"}]}], ",", "0"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"n", "\[Equal]", "0"}], ",", "\n", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"Slice", "[", 
          RowBox[{"sol", ",", 
           RowBox[{
            RowBox[{"InitialTime", "[", "sol", "]"}], "+", "x"}]}], "]"}], 
         "]"}], ",", "\n", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"Slice", "[", 
          RowBox[{"sol", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"InitialTime", "[", "sol", "]"}], "x"}], ",", 
             RowBox[{
              RowBox[{"InitialTime", "[", "sol", "]"}], "+", "n"}]}], "}"}]}],
           "]"}], "]"}]}], "\n", "\t", "]"}]}]}], "\n", "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.6885717191657867`*^9, 3.688571719200466*^9}, {
   3.6885717772152452`*^9, 3.688571777239335*^9}, {3.6885718079688263`*^9, 
   3.688571808054414*^9}, 3.693869710387249*^9, {3.696590926001998*^9, 
   3.6965909727059917`*^9}, {3.696592651554957*^9, 3.696592708155037*^9}, {
   3.696592834284741*^9, 3.696592894244049*^9}, {3.6965938846261377`*^9, 
   3.696593923945304*^9}, {3.6965951944892673`*^9, 3.696595203838542*^9}, {
   3.696598417000312*^9, 3.6965984611169662`*^9}, {3.696598679711795*^9, 
   3.696598681976096*^9}, {3.696603073237365*^9, 3.6966031208358183`*^9}, {
   3.696603357046036*^9, 3.696603362909396*^9}, {3.6966037924807873`*^9, 
   3.696603834751506*^9}, 3.6966042364273252`*^9, {3.696604311450961*^9, 
   3.6966043125856237`*^9}, {3.696604978565135*^9, 3.696604978634736*^9}, {
   3.696605729736561*^9, 3.696605729912896*^9}, {3.739574335626891*^9, 
   3.73957434417268*^9}, {3.739574380930203*^9, 3.739574384029958*^9}, 
   3.7550271865381403`*^9, {3.777485353399364*^9, 3.777485360307066*^9}, {
   3.77748635493083*^9, 3.777486436040493*^9}, 3.7793619471180143`*^9, 
   3.8299507135885153`*^9, 
   3.8299531747162933`*^9},ExpressionUUID->"79f96a6b-adb8-454f-ba4d-\
a48cd876d0d0"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"InitialSlice", "[", 
     RowBox[{
      RowBox[{"sol_", "?", "RuleListQ"}], ",", "___"}], "]"}], ":=", "sol"}], 
   ";"}], "*)"}]], "Code",
 CellChangeTimes->{{3.779361959750355*^9, 3.779361961551436*^9}, 
   3.8299507169217157`*^9},ExpressionUUID->"fa2fd9b2-3daf-44c8-bb78-\
326c14eaabf1"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["FinalSlice", "Subsection",
 CellChangeTimes->{
  3.693869717797543*^9},ExpressionUUID->"0f4ee5f0-78d3-438b-9e68-\
f44b978cad2c"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.76949405303236*^9, 
  3.769494055673177*^9}},ExpressionUUID->"0ada3a19-935d-4994-93a6-\
4ee6fc7c197d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FinalSlice", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<FinalSlice[\!\(\*StyleBox[\"rulelist\", \"TI\"]\)] extracts the final \
values from temporal \!\(\*StyleBox[\"rulelist\", \"TI\"]\).\nFinalSlice[\!\(\
\*StyleBox[\"rulelist\", \"TI\"]\), \!\(\*StyleBox[\"tmin\", \"TI\"]\)] \
extracts the final values starting at \!\(\*StyleBox[\"tmin\", \
\"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.7693644829249353`*^9, 
  3.769364483495838*^9}},ExpressionUUID->"ab4225af-cac5-483a-b364-\
b8f181b308f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"63caa562-7b57-4ce1-a01d-\
bafdd29ee17a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FinalSlice", "[", 
    RowBox[{
     RowBox[{"sol_", "?", "RuleListQ"}], ",", 
     RowBox[{"n", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "NumericQ"}], ")"}], ":", "0"}]}], "]"}], ":=", "\n",
    "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"n", "\[Equal]", "0"}], ",", "\n", "\t\t", 
     RowBox[{"Return", "[", 
      RowBox[{"Slice", "[", 
       RowBox[{"sol", ",", 
        RowBox[{"FinalTime", "[", "sol", "]"}]}], "]"}], "]"}], ",", "\n", 
     "\t\t", 
     RowBox[{"Return", "[", 
      RowBox[{"Slice", "[", 
       RowBox[{"sol", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"FinalTime", "[", "sol", "]"}], "-", "n"}], ",", 
          RowBox[{"FinalTime", "[", "sol", "]"}]}], "}"}]}], "]"}], "]"}]}], 
    "\n", "\t", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.688571719062545*^9, 3.688571719147092*^9}, {
   3.6885717770947104`*^9, 3.688571777188101*^9}, {3.688571807872262*^9, 
   3.688571807944956*^9}, 3.693869717830854*^9, {3.696590991706997*^9, 
   3.696591092322603*^9}, {3.696593929769368*^9, 3.6965939603615217`*^9}, {
   3.696595255552868*^9, 3.696595258855796*^9}, {3.696598655322014*^9, 
   3.6965986963922977`*^9}, {3.696602977389617*^9, 3.696603069211898*^9}, 
   3.696603799462949*^9, {3.696603840423477*^9, 3.6966038439914093`*^9}, {
   3.696603980481254*^9, 3.696603983471485*^9}, 3.696604029081642*^9, {
   3.696604095553693*^9, 3.696604105887484*^9}, {3.696604289595524*^9, 
   3.696604314905676*^9}, {3.696604985742319*^9, 3.696604985884633*^9}, {
   3.696605727346181*^9, 3.69660572752081*^9}, {3.779361453823926*^9, 
   3.7793614570740356`*^9}, 3.829925159330965*^9, 
   3.829953162796526*^9},ExpressionUUID->"8af99e05-5103-47fc-ba8e-\
67543d0fb65d"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"FinalSlice", "[", 
     RowBox[{
      RowBox[{"sol_", "?", "RuleListQ"}], ",", "___"}], "]"}], ":=", "sol"}], 
   ";"}], "*)"}]], "Code",
 CellChangeTimes->{{3.7793614644477386`*^9, 3.779361488721192*^9}, 
   3.829925177687196*^9},ExpressionUUID->"a6225ac8-69a4-49f4-9780-\
8d18469a2256"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["FinalDerivatives", "Subsection",ExpressionUUID->"5b9f956d-b9a1-4ff3-9967-3ca5fb1bd1ee"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494062290228*^9, 
  3.769494068652905*^9}},ExpressionUUID->"5f6cb098-7071-4ff6-9497-\
70354a4a1e15"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FinalDerivatives", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<FinalDerivatives[\!\(\*StyleBox[\"rulelist\", \"TI\"]\)] replaces \
temporal \!\(\*StyleBox[\"rulelist\", \"TI\"]\) with their final derivatives.\
\nFinalDerivatives[\!\(\*StyleBox[\"rulelist\", \"TI\"]\), \!\(\*StyleBox[\"\
\[Delta]\", \"TI\"]\)] averages over the final values starting at \
\!\(\*StyleBox[\"\[Delta]\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.7693645124432707`*^9, 
  3.769364513106771*^9}},ExpressionUUID->"4c7b35ec-eafd-48c6-8671-\
8f8fa5f4a2ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"ae8c58ba-da38-497b-8f55-\
8ecabc78bb56"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FinalDerivatives", "[", 
   RowBox[{
    RowBox[{"sol_", "?", "TemporalRuleListQ"}], ",", 
    RowBox[{"dt", ":", 
     RowBox[{"(", 
      RowBox[{"_", "?", "NumericQ"}], ")"}], ":", "0"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "res", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"dt", "\[Equal]", "0"}], ",", "\n", "\t\t", 
       RowBox[{"res", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Which", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "]"}], "===", "InterpolatingFunction"}], ",", "\n", "\t\t\t", 
            RowBox[{"ReplacePart", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "\[Rule]", 
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   "'"}]}], ",", 
                RowBox[{"2", "\[Rule]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "'"}], "[", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1", ",", "1", ",", "2"}], 
                    "\[RightDoubleBracket]"}], "]"}], "/.", "#"}], ")"}]}]}], 
               "}"}]}], "]"}], "\n", "\t\t\t", 
            RowBox[{"(*", 
             RowBox[{"ReplacePart", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"2", "\[Rule]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "'"}], "[", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1", ",", "1", ",", "2"}], 
                    "\[RightDoubleBracket]"}], "]"}], "/.", "#"}], ")"}]}], 
                "}"}]}], "]"}], "*)"}], "\n", "\t\t", ",", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "]"}], "===", "List"}], ",", "\n", "\t\t\t", 
            RowBox[{"ReplacePart", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "\[Rule]", 
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   "'"}]}], ",", 
                RowBox[{"2", "\[Rule]", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "1"}], ",", "2"}], "\[RightDoubleBracket]"}],
                     "-", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "2"}], ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "\[RightDoubleBracket]"}],
                     "-", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "2"}], ",", "1"}], 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}]}], "}"}]}], "]"}], 
            "\n", "\t\t\t", 
            RowBox[{"(*", 
             RowBox[{"ReplacePart", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"2", "\[Rule]", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "1"}], ",", "2"}], "\[RightDoubleBracket]"}],
                     "-", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "2"}], ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "\[RightDoubleBracket]"}],
                     "-", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "2"}], ",", "1"}], 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}], "}"}]}], "]"}], 
             "*)"}], "\n", "\t\t", ",", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "]"}], "===", "TemporalData"}], ",", "\n", "\t\t\t", 
            RowBox[{"ReplacePart", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "\[Rule]", 
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   "'"}]}], ",", 
                RowBox[{"2", "\[Rule]", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Values\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Values\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "2"}], "\[RightDoubleBracket]"}]}], ")"}], 
                  "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Times\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Times\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "2"}], "\[RightDoubleBracket]"}]}], 
                   ")"}]}]}]}], "}"}]}], "]"}], "\n", "\t\t\t", 
            RowBox[{"(*", 
             RowBox[{"ReplacePart", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"2", "\[Rule]", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Values\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Values\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "2"}], "\[RightDoubleBracket]"}]}], ")"}], 
                  "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Times\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Times\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "2"}], "\[RightDoubleBracket]"}]}], 
                   ")"}]}]}], "}"}]}], "]"}], "*)"}], "\n", "\t\t", ",", "\n",
             "\t\t\t", "Else", ",", "#"}], "\n", "\t\t", "]"}], "&"}], "/@", 
         "sol"}]}], "\n", "\t", ",", "\n", "\t\t", 
       RowBox[{"res", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Which", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "]"}], "===", "InterpolatingFunction"}], ",", "\n", "\t\t\t", 
            RowBox[{"ReplacePart", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "\[Rule]", 
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   "'"}]}], ",", 
                RowBox[{
                 RowBox[{"2", "\[Rule]", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "[", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1", ",", "1", ",", "2"}], 
                    "\[RightDoubleBracket]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "[", 
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1", ",", "1", ",", "2"}], 
                    "\[RightDoubleBracket]"}], "-", "dt"}], "]"}]}], ")"}], 
                   "/", "dt"}]}], "/.", "#"}]}], "}"}]}], "]"}], "\n", 
            "\t\t\t", 
            RowBox[{"(*", 
             RowBox[{"ReplacePart", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"2", "\[Rule]", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "[", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1", ",", "1", ",", "2"}], 
                    "\[RightDoubleBracket]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "[", 
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1", ",", "1", ",", "2"}], 
                    "\[RightDoubleBracket]"}], "-", "dt"}], "]"}]}], ")"}], 
                   "/", "dt"}]}], "/.", "#"}], "}"}]}], "]"}], "*)"}], "\n", 
            "\t\t", ",", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "]"}], "===", "List"}], ",", "\n", "\t\t\t", 
            RowBox[{"ReplacePart", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "\[Rule]", 
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   "'"}]}], ",", 
                RowBox[{"2", "\[Rule]", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "1"}], ",", "2"}], "\[RightDoubleBracket]"}],
                     "-", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "dt"}], ")"}]}], ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "\[RightDoubleBracket]"}],
                     "-", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "dt"}], ")"}]}], ",", "1"}], 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}]}], "}"}]}], "]"}], 
            "\n", "\t\t\t", 
            RowBox[{"(*", 
             RowBox[{"ReplacePart", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"2", "\[Rule]", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "1"}], ",", "2"}], "\[RightDoubleBracket]"}],
                     "-", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "dt"}], ")"}]}], ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "\[RightDoubleBracket]"}],
                     "-", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "dt"}], ")"}]}], ",", "1"}], 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}], "}"}]}], "]"}], 
             "*)"}], "\n", "\t\t", ",", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "]"}], "===", "TemporalData"}], ",", "\n", "\t\t\t", 
            RowBox[{"ReplacePart", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "\[Rule]", 
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   "'"}]}], ",", 
                RowBox[{"2", "\[Rule]", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Values\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Values\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "dt"}], ")"}]}], 
                    "\[RightDoubleBracket]"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Times\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Times\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "dt"}], ")"}]}], 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}]}], "}"}]}], "]"}], 
            "\n", "\t\t\t", 
            RowBox[{"(*", 
             RowBox[{"ReplacePart", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"2", "\[Rule]", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Values\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Values\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "dt"}], ")"}]}], 
                    "\[RightDoubleBracket]"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Times\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Times\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "dt"}], ")"}]}], 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}], "}"}]}], "]"}], 
             "*)"}], "\n", "\t\t", ",", "\n", "\t\t\t", "Else", ",", "#"}], 
           "\n", "\t\t", "]"}], "&"}], "/@", "sol"}]}]}], "\n", "\t", "]"}], 
     ";", "\n", "\t", 
     RowBox[{"Return", "[", "res", "]"}]}]}], "\n", "]"}]}]], "Code",
 CellChangeTimes->{{3.6885717192202168`*^9, 3.6885717193028183`*^9}, {
   3.688571777267274*^9, 3.688571777296155*^9}, {3.688571808081353*^9, 
   3.688571808109118*^9}, {3.696590077606003*^9, 3.6965901903838053`*^9}, 
   3.696590327289241*^9, {3.69659040450349*^9, 3.696590538232264*^9}, {
   3.6965905977709293`*^9, 3.696590639500061*^9}, {3.696590716489375*^9, 
   3.696590744177958*^9}, {3.696590778012137*^9, 3.696590818516485*^9}, {
   3.696591190718431*^9, 3.6965911981404448`*^9}, {3.696591576063525*^9, 
   3.6965916224868603`*^9}, {3.696591703887327*^9, 3.696591705727127*^9}, {
   3.6965918125357323`*^9, 3.6965918766180363`*^9}, {3.6965919654659433`*^9, 
   3.696591982672152*^9}, {3.6965939839160748`*^9, 3.6965940017734528`*^9}, 
   3.696597401027027*^9, {3.696604430959165*^9, 3.6966044379479*^9}, {
   3.722038291330578*^9, 3.722038341323505*^9}, {3.722039357736128*^9, 
   3.7220393970921097`*^9}, {3.7793625114848633`*^9, 
   3.779362522047867*^9}},ExpressionUUID->"30b00826-7b67-4a64-98e6-\
eaaf2e957a06"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FinalDerivatives", "[", 
   RowBox[{
    RowBox[{"sol_", "?", "NumericRuleListQ"}], ",", "___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"ReplacePart", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[Rule]", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           "'"}]}], ",", 
        RowBox[{"2", "\[Rule]", "0"}]}], "}"}]}], "]"}], "&"}], "/@", 
   "sol"}]}]], "Code",
 CellChangeTimes->{{3.779362527789496*^9, 3.779362529645175*^9}, {
   3.779362569118285*^9, 3.779362576210465*^9}, 3.779362618194418*^9, {
   3.779362672911565*^9, 
   3.779362691461166*^9}},ExpressionUUID->"14e7d230-462c-47e7-ad29-\
dafcd44d8ac9"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["InitialTime", "Subsection",
 CellChangeTimes->{
  3.693870054628004*^9},ExpressionUUID->"9294cf2e-5be7-4cd7-b934-\
40d4e5a604b2"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494079627952*^9, 
  3.769494080097622*^9}},ExpressionUUID->"806ba4c0-553e-4709-8294-\
e936c9549dee"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"InitialTime", "::", "usage"}], "=", "\n", 
   "\"\<InitialTime[\!\(\*StyleBox[\"rulelist\", \"TI\"]\)] returns the \
initial time of temporal \!\(\*StyleBox[\"rulelist\", \"TI\"]\).\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.7693645225659103`*^9, 
  3.769364523175878*^9}},ExpressionUUID->"e110d418-7b14-4654-b453-\
0a6f2547bde3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"32d3b364-949d-4e79-b260-\
2610872966b6"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"InitialTime", "[", "sol_", "]"}], ":=", 
    RowBox[{"Which", "[", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"Head", "[", 
        RowBox[{"sol", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], "===", 
       "InterpolatingFunction"}], ",", 
      RowBox[{"sol", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "2", ",", "1", ",", "1", ",", "1"}], 
       "\[RightDoubleBracket]"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Head", "[", 
        RowBox[{"sol", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], "===", 
       "List"}], ",", 
      RowBox[{"sol", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "2", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}],
       ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Head", "[", 
        RowBox[{"sol", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], "===", 
       "TemporalData"}], ",", 
      RowBox[{
       RowBox[{"sol", "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "[", 
       "\"\<FirstTime\>\"", "]"}]}], "\n", "]"}]}], ";"}], "*)"}]], "Code",
 CellChangeTimes->{{3.6885717773150377`*^9, 3.68857177734839*^9}, {
   3.688571808132567*^9, 3.688571808156169*^9}, 3.693870054652923*^9, {
   3.696593053452365*^9, 3.696593081740223*^9}, 
   3.829952929976673*^9},ExpressionUUID->"3c6e4a63-ac34-4438-a90f-\
3c76391ed5c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"InitialTime", "[", 
    RowBox[{"sol_", "?", "RuleListQ"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tmp", ",", "numtmp"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"tmp", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Which", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"Head", "[", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             "]"}], "===", "InterpolatingFunction"}], ",", 
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "1", ",", "1", ",", "1"}], 
            "\[RightDoubleBracket]"}], ",", "\n", "\t\t", 
           RowBox[{
            RowBox[{"Head", "[", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             "]"}], "===", "List"}], ",", 
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}], ",",
            "\n", "\t\t", 
           RowBox[{
            RowBox[{"Head", "[", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             "]"}], "===", "TemporalData"}], ",", 
           RowBox[{
            RowBox[{
            "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "[", 
            "\"\<FirstTime\>\"", "]"}], ",", "\n", "\t\t", "Else", ",", 
           RowBox[{"-", "\[Infinity]"}]}], "\n", "\t", "]"}], "&"}], "/@", 
        "sol"}]}], ";", "\n", "\t", 
      RowBox[{"numtmp", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"tmp", ",", "NumericQ"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"Union", "[", "numtmp", "]"}], "]"}], ">", "1"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"InitialTime", "::", "notime"}], ",", "numtmp"}], "]"}], 
           ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";"}], "*)"}], 
      "\n", "\t", 
      RowBox[{"Return", "[", 
       RowBox[{"Max", "[", "tmp", "]"}], "]"}], ";"}]}], "\n", "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.6885717773150377`*^9, 3.68857177734839*^9}, {
   3.688571808132567*^9, 3.688571808156169*^9}, 3.693870054652923*^9, {
   3.696593053452365*^9, 3.696593081740223*^9}, {3.829952929976673*^9, 
   3.829953118009625*^9}, {3.829953723793619*^9, 3.8299537686645603`*^9}, 
   3.8301004213177567`*^9},ExpressionUUID->"99a6197a-d366-4ccd-aa10-\
aaa9ebee68b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Messages", "Subsubsection",
 CellChangeTimes->{{3.829952059746073*^9, 
  3.829952061169443*^9}},ExpressionUUID->"b8e896c1-e598-4b67-a6be-\
93ce68c3a632"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"InitialTime", "::", "notime"}], "=", 
   "\"\<No common final time among `1`.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.829952064154236*^9, 3.82995206695466*^9}, {
   3.829952097986554*^9, 3.829952151883627*^9}, {3.829952256900922*^9, 
   3.829952305573793*^9}, 3.829952339959716*^9, {3.8299531286010857`*^9, 
   3.8299531315618973`*^9}},ExpressionUUID->"c98cea5f-266d-415d-8365-\
d69576849b5b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["FinalTime", "Subsection",
 CellChangeTimes->{
  3.693870062711915*^9},ExpressionUUID->"b60bf42e-b7b5-4a26-950e-\
1d733b8ee6ac"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.7694940860422373`*^9, 
  3.769494086547689*^9}},ExpressionUUID->"bbc209f6-dfea-409f-96f4-\
9ff7be9855f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FinalTime", "::", "usage"}], "=", "\n", 
   "\"\<FinalTime[\!\(\*StyleBox[\"rulelist\", \"TI\"]\)] returns the final \
time of temporal \!\(\*StyleBox[\"rulelist\", \"TI\"]\).\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{
  3.7693645321013613`*^9},ExpressionUUID->"99c2788a-8643-4792-b134-\
1f9caaae8d9f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"8ea2f9ef-48da-462c-b2a7-\
240c4bbdaa5f"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"FinalTime", "[", "sol_", "]"}], ":=", 
    RowBox[{"Which", "[", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"Head", "[", 
        RowBox[{"sol", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], "===", 
       "InterpolatingFunction"}], ",", 
      RowBox[{"sol", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "2", ",", "1", ",", "1", ",", "2"}], 
       "\[RightDoubleBracket]"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Head", "[", 
        RowBox[{"sol", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], "===", 
       "List"}], ",", 
      RowBox[{"sol", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "2", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "\[RightDoubleBracket]"}], ",", "\n", 
      "\t", 
      RowBox[{
       RowBox[{"Head", "[", 
        RowBox[{"sol", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], "===", 
       "TemporalData"}], ",", 
      RowBox[{
       RowBox[{"sol", "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "[", 
       "\"\<LastTime\>\"", "]"}]}], "\n", "]"}]}], ";"}], "*)"}]], "Code",
 CellChangeTimes->{{3.688571777365953*^9, 3.688571777400709*^9}, {
   3.688571808180593*^9, 3.6885718082039022`*^9}, 3.693870062738048*^9, {
   3.696593091772633*^9, 3.696593117548478*^9}, 
   3.8299512346999493`*^9},ExpressionUUID->"ff3cfd44-6236-44dc-859c-\
fb688445ca7e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FinalTime", "[", 
    RowBox[{"sol_", "?", "RuleListQ"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tmp", ",", "numtmp"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"tmp", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Which", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"Head", "[", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             "]"}], "===", "InterpolatingFunction"}], ",", 
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "1", ",", "1", ",", "2"}], 
            "\[RightDoubleBracket]"}], ",", "\n", "\t\t", 
           RowBox[{
            RowBox[{"Head", "[", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             "]"}], "===", "List"}], ",", 
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", 
             RowBox[{"-", "1"}], ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           "\n", "\t\t", 
           RowBox[{
            RowBox[{"Head", "[", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             "]"}], "===", "TemporalData"}], ",", 
           RowBox[{
            RowBox[{
            "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "[", 
            "\"\<LastTime\>\"", "]"}], ",", "\n", "\t\t", "Else", ",", 
           "\[Infinity]"}], "\n", "\t", "]"}], "&"}], "/@", "sol"}]}], ";", 
      "\n", "\t", 
      RowBox[{"numtmp", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"tmp", ",", "NumericQ"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"Union", "[", 
             RowBox[{"numtmp", ",", 
              RowBox[{"SameTest", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Abs", "[", 
                   RowBox[{"#1", "-", "#2"}], "]"}], "<", 
                  "$MachinePrecision"}], "&"}], ")"}]}]}], "]"}], "]"}], ">", 
           "1"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"FinalTime", "::", "notime"}], ",", "numtmp"}], "]"}], 
           ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";"}], "*)"}], 
      "\n", "\t", 
      RowBox[{"Return", "[", 
       RowBox[{"Min", "[", "tmp", "]"}], "]"}], ";"}]}], "\n", "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.688571777365953*^9, 3.688571777400709*^9}, {
   3.688571808180593*^9, 3.6885718082039022`*^9}, 3.693870062738048*^9, {
   3.696593091772633*^9, 3.696593117548478*^9}, {3.8299512381292143`*^9, 
   3.829951319641534*^9}, {3.829951413636361*^9, 3.829951421794738*^9}, 
   3.82995162558936*^9, {3.8299518610573177`*^9, 3.829951873264462*^9}, {
   3.829951918282799*^9, 3.82995205418722*^9}, {3.829952093347844*^9, 
   3.829952094818932*^9}, {3.8299523443110447`*^9, 3.829952371167355*^9}, {
   3.829953060193865*^9, 3.829953094129384*^9}, {3.829954283478777*^9, 
   3.829954319134965*^9}, {3.829954366368354*^9, 3.829954379950905*^9}, 
   3.8299545227370443`*^9},ExpressionUUID->"5ae73c1f-ff17-4d97-8f08-\
cdf81a14b853"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Messages", "Subsubsection",
 CellChangeTimes->{{3.829952059746073*^9, 
  3.829952061169443*^9}},ExpressionUUID->"6395016d-abf8-4b6f-b973-\
4c3066ca85ac"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FinalTime", "::", "notime"}], "=", 
   "\"\<No common final time among `1`.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.829952064154236*^9, 3.82995206695466*^9}, {
   3.829952097986554*^9, 3.829952151883627*^9}, {3.829952256900922*^9, 
   3.829952305573793*^9}, 
   3.829952339959716*^9},ExpressionUUID->"a12f20c0-cc5f-4d02-adfd-\
a2031d79487e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["SortedEigensystem", "Subsection",
 CellChangeTimes->{3.711581537141165*^9, 
  3.711582411238762*^9},ExpressionUUID->"28edf3c2-d873-4264-9b8f-\
09814781b6f3"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494093645153*^9, 
  3.769494094091547*^9}},ExpressionUUID->"354c1a80-ac28-49ea-9478-\
b2bc96901a3f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SortedEigensystem", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<SortedEigensystem[\!\(\*StyleBox[\"matrix\", \"TI\"]\)] is \
Eigensystem[\!\(\*StyleBox[\"matrix\", \"TI\"]\)], sorted from largest to \
smallest Re[eigenvalue].\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769364680362555*^9, 
  3.769364680988803*^9}},ExpressionUUID->"8c441654-cb0e-432d-9f3a-\
4ee70421671c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"479f1f73-52e3-45e0-b7c9-\
7d447cfc602b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"by", " ", "Jens"}], " ", "<", 
     RowBox[{"http", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
         "questions"}], "/", "59172"}], "/", "should"}], "-", "eigenvalues", 
      "-", "be", "-", "ordered"}], ">"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"SortedEigensystem", "[", 
     RowBox[{
      RowBox[{"matrix_", "?", "MatrixQ"}], ",", "opts___"}], "]"}], ":=", 
    "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Eigensystem", "[", 
         RowBox[{
          RowBox[{"matrix", "+", 
           RowBox[{"#", " ", 
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"Dimensions", "[", "matrix", "]"}], "]"}]}]}], ",", 
          "opts"}], "]"}], "-", 
        RowBox[{"{", 
         RowBox[{"#", ",", "0"}], "}"}]}], ")"}], "&"}], "@", 
     RowBox[{"Norm", "[", 
      RowBox[{"Flatten", "[", "matrix", "]"}], "]"}]}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.711581542338729*^9, 3.711581591619627*^9}, {
  3.711582400069806*^9, 
  3.711582400312333*^9}},ExpressionUUID->"92e6bff0-db68-4106-81f2-\
e053afbe37cd"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["ListMultiplier", "Subsection",
 CellChangeTimes->{
  3.711583999727496*^9},ExpressionUUID->"c29556f0-b3dc-4a54-82bd-\
975c81278bb0"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494099507184*^9, 
  3.769494100018593*^9}},ExpressionUUID->"9fff178f-13ff-4b33-af5b-\
8d15079a9376"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ListMultiplier", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<ListMultiplier[\!\(\*StyleBox[\"list\", \"TI\"]\)] multiplies a list \
of matrices.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769364593636321*^9, 
  3.769364594262083*^9}},ExpressionUUID->"e32ee77c-c8ec-442a-95ec-\
98c0979ca118"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"dc0516ad-dfdd-45c7-ae6d-\
c7860d907abf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"by", " ", "Joel", " ", "Wallman"}], " ", "<", 
     RowBox[{"http", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", "a"}],
        "/", "113113"}], "/", "6358"}], ">"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"ListMultiplier", "[", 
     RowBox[{"list_", ",", 
      RowBox[{"partitionwidth_", ":", "5"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"NestWhile", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Dot", "@@@", 
         RowBox[{"Partition", "[", 
          RowBox[{
          "#", ",", "partitionwidth", ",", "partitionwidth", ",", "1", ",", 
           RowBox[{"{", "}"}]}], "]"}]}], "&"}], ",", "list", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Dimensions", "[", "#", "]"}], "\[LeftDoubleBracket]", "1", 
          "\[RightDoubleBracket]"}], ">", "1"}], "&"}]}], "]"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
   ";"}]}]], "Code",
 CellChangeTimes->{{3.711583999743464*^9, 
  3.711584027767131*^9}},ExpressionUUID->"7a3dae09-e320-4a86-9103-\
d3f873a2d20b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["RouthHurwitzCriteria", "Subsection",
 CellChangeTimes->{{3.68486378218758*^9, 
  3.684863786818391*^9}},ExpressionUUID->"e1fc9dbe-01f0-4d23-aaef-\
50e8b6ba0b34"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494112579443*^9, 
  3.7694941130780697`*^9}},ExpressionUUID->"7cb22b7f-cb0c-45a6-9603-\
52fbfd6c1c63"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RouthHurwitzCriteria", "::", "usage"}], "=", 
   "\[IndentingNewLine]", 
   "\"\<RouthHurwitzCriteria[\!\(\*StyleBox[\"matrix\", \"TI\"]\)] gives the \
modified Routh-Hurwitz stability criteria (up to 3x3).\>\""}], ";"}]], "Code",\

 CellChangeTimes->{{3.7693646589372263`*^9, 
  3.769364660435944*^9}},ExpressionUUID->"135c82e7-c907-4f99-95cb-\
0aa756615cb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"32559b1c-4d9c-412b-9a2f-\
51cda9694d69"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RouthHurwitzCriteria", "[", 
    RowBox[{"a_", "?", "MatrixQ"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "c3", "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"SquareMatrixQ", "[", "a", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"RouthHurwitzCriteria", "::", "nonsq"}], "]"}], ";", 
         RowBox[{"Return", "[", "a", "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"Which", "[", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "1"}], ",", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"Piecewise", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"True", ",", 
               RowBox[{
                RowBox[{"a", "\[LeftDoubleBracket]", 
                 RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "<", 
                "0"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"False", ",", 
               RowBox[{
                RowBox[{"a", "\[LeftDoubleBracket]", 
                 RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ">", 
                "0"}]}], "}"}]}], "}"}], ",", "Indeterminate"}], "]"}], "]"}],
         ",", "\[IndentingNewLine]", "\t\t", 
        RowBox[{
         RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "2"}], ",", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"Piecewise", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"True", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Tr", "[", "a", "]"}], "<", "0"}], "&&", 
                RowBox[{
                 RowBox[{"Det", "[", "a", "]"}], ">", "0"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"False", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Tr", "[", "a", "]"}], ">", "0"}], "||", 
                RowBox[{
                 RowBox[{"Det", "[", "a", "]"}], "<", "0"}]}]}], "}"}]}], 
            "}"}], ",", "Indeterminate"}], "]"}], "]"}], ",", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{
         RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "3"}], ",", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{
         RowBox[{"c3", "=", 
          RowBox[{"Det", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"a", "\[LeftDoubleBracket]", 
                 RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
                RowBox[{"a", "\[LeftDoubleBracket]", 
                 RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], ",", 
               RowBox[{"a", "\[LeftDoubleBracket]", 
                RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}], ",", 
               RowBox[{"-", 
                RowBox[{"a", "\[LeftDoubleBracket]", 
                 RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}]}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"a", "\[LeftDoubleBracket]", 
                RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
               RowBox[{
                RowBox[{"a", "\[LeftDoubleBracket]", 
                 RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
                RowBox[{"a", "\[LeftDoubleBracket]", 
                 RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]}], ",", 
               RowBox[{"a", "\[LeftDoubleBracket]", 
                RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"a", "\[LeftDoubleBracket]", 
                 RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
               RowBox[{"a", "\[LeftDoubleBracket]", 
                RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
               RowBox[{
                RowBox[{"a", "\[LeftDoubleBracket]", 
                 RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "+", 
                RowBox[{"a", "\[LeftDoubleBracket]", 
                 RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]}]}], 
              "}"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", "\t\t", 
         RowBox[{"Return", "[", 
          RowBox[{"Piecewise", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"True", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Tr", "[", "a", "]"}], "<", "0"}], "&&", 
                 RowBox[{
                  RowBox[{"Det", "[", "a", "]"}], "<", "0"}], "&&", 
                 RowBox[{"c3", "<", "0"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"False", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Tr", "[", "a", "]"}], ">", "0"}], "||", 
                 RowBox[{
                  RowBox[{"Det", "[", "a", "]"}], ">", "0"}], "||", 
                 RowBox[{"c3", ">", "0"}]}]}], "}"}]}], "}"}], ",", 
            "Indeterminate"}], "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        "\t\t", 
        RowBox[{
         RowBox[{"Length", "[", "a", "]"}], ">", "3"}], ",", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"RouthHurwitzCriteria", "::", "toobig"}], "]"}], ";", 
         RowBox[{"Return", "[", "a", "]"}]}]}], "\[IndentingNewLine]", "\t", 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.684863331038703*^9, 3.684863371301766*^9}, {
  3.684863405124865*^9, 3.684863558475471*^9}, {3.684863616337388*^9, 
  3.684863751243958*^9}, {3.685093592800758*^9, 3.6850935944207478`*^9}, {
  3.6850941873709106`*^9, 3.685094187660965*^9}, {3.685304695018196*^9, 
  3.685304782498827*^9}, {3.685310811705975*^9, 3.685310832463999*^9}, {
  3.6853108838924847`*^9, 3.685310886032216*^9}, {3.685311835167028*^9, 
  3.685311958423547*^9}, {3.693593161199779*^9, 3.6935931783732224`*^9}, {
  3.696872234003128*^9, 3.696872333105813*^9}, {3.7101059424744473`*^9, 
  3.7101059432757263`*^9}, {3.794137240408617*^9, 
  3.794137240410749*^9}},ExpressionUUID->"90085df8-d9b8-4865-a1de-\
8cc7c818573f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["JoinFirst", "Subsection",
 CellChangeTimes->{{3.786260456068973*^9, 
  3.786260457122501*^9}},ExpressionUUID->"960bb267-5788-4813-805f-\
57794c4aae84"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.786260483418373*^9, 
  3.7862604838939857`*^9}},ExpressionUUID->"8a3fdfa6-d289-4b9e-bb3e-\
1c01d221e436"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"JoinFirst", "::", "usage"}], "=", 
   "\"\<JoinFirst[\!\(\*StyleBox[\"l1\", \"TI\"]\), \!\(\*StyleBox[\"l2\", \
\"TI\"]\)] joins two rulelists, taking the first definition in case of \
multiple.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.786260498283257*^9, 3.786260550259369*^9}, {
  3.786276639388183*^9, 
  3.786276640505766*^9}},ExpressionUUID->"24119e3e-3a17-4116-b310-\
306c6ef6867b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.786260488441606*^9, 
  3.7862604914069653`*^9}},ExpressionUUID->"62a9a5ec-73bc-43ac-941a-\
e8f438e180d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"JoinFirst", "[", 
    RowBox[{"l1_List", ",", "l2_List"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"l1", "\[NotEqual]", 
       RowBox[{"{", "}"}]}], "||", 
      RowBox[{"l2", "\[NotEqual]", 
       RowBox[{"{", "}"}]}]}], ",", 
     RowBox[{"Normal", "@", 
      RowBox[{"Merge", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"l1", ",", "l2"}], "}"}], ",", "First"}], "]"}]}], ",", 
     RowBox[{"{", "}"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7862604730521383`*^9, 3.7862604779332438`*^9}, 
   3.786260588120946*^9, {3.786262630480143*^9, 
   3.786262630936603*^9}},ExpressionUUID->"67267c1d-12d6-41d2-836b-\
c4a6510172ee"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["MyListLinePlot3D",
 Background->RGBColor[1, 1, 0]]], "Subsection",
 CellChangeTimes->{{3.787501652797903*^9, 3.787501654997445*^9}, {
  3.8307758388414383`*^9, 
  3.830775839329443*^9}},ExpressionUUID->"4cfc0ca7-6981-4be0-8943-\
90b4d5dcc762"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.787501658317361*^9, 
  3.787501658809621*^9}},ExpressionUUID->"3b4b9d7a-2144-4336-b4b8-\
701dbf6e531b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MyListLinePlot3D", "::", "usage"}], "=", 
   "\"\<MyListLinePlot3D[{{\!\(\*SubscriptBox[StyleBox[\"x\", \"TI\"], \
StyleBox[\"1\", \"TR\"]]\),\!\(\*SubscriptBox[StyleBox[\"y\", \"TI\"], \
StyleBox[\"1\", \"TR\"]]\),\!\(\*SubscriptBox[StyleBox[\"z\", \"TI\"], \
StyleBox[\"1\", \"TR\"]]\)},{\!\(\*SubscriptBox[StyleBox[\"x\", \"TI\"], \
StyleBox[\"2\", \"TR\"]]\),\!\(\*SubscriptBox[StyleBox[\"y\", \"TI\"], \
StyleBox[\"2\", \"TR\"]]\),\!\(\*SubscriptBox[StyleBox[\"z\", \"TI\"], \
StyleBox[\"2\", \"TR\"]]\)},\!\(\*StyleBox[\"\[Ellipsis]\", \"TR\"]\)}] \
generates a 3D line plot of points with coordinates \
{\!\(\*SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"i\", \
\"TI\"]]\),\!\(\*SubscriptBox[StyleBox[\"y\", \"TI\"], StyleBox[\"i\", \
\"TI\"]]\),\!\(\*SubscriptBox[StyleBox[\"z\", \"TI\"], StyleBox[\"i\", \
\"TI\"]]\)}.\nMyListLinePlot3D[{\!\(\*SubscriptBox[StyleBox[\"data\", \
\"TI\"], StyleBox[\"1\", \"TR\"]]\),\!\(\*SubscriptBox[StyleBox[\"data\", \
\"TI\"], StyleBox[\"2\", \"TR\"]]\),\!\(\*StyleBox[\"\[Ellipsis]\", \
\"TR\"]\)}] plots several collections of points, by default in different \
colors.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.787491498539131*^9, 3.78749150325231*^9}, {
  3.787491685430891*^9, 3.787491687238194*^9}, {3.787491720076079*^9, 
  3.787491768747707*^9}, {3.787491802207486*^9, 3.787491825357319*^9}, {
  3.8307758651401978`*^9, 3.8307758739964647`*^9}, {3.830775996982422*^9, 
  3.830776004670079*^9}},ExpressionUUID->"2447c3e3-8c25-4bdd-8477-\
ac0130973221"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.787501666846005*^9, 
  3.7875016678533792`*^9}},ExpressionUUID->"9d719231-04d0-4890-b52b-\
f0b58b29d399"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"based", " ", "on", " ", "user37744"}], " ", "<", 
      RowBox[{"https", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
         "a"}], "/", "107450"}], "/"}], ">"}]}], " ", "*)"}],
   FontWeight->"Bold"], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"MyListLinePlot3D", "[", 
     RowBox[{"arg_", ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "listpointplot3dopts", "}"}], ",", "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"$VersionNumber", ">=", "12.3"}], ",", 
        RowBox[{"(*", " ", 
         RowBox[{
         "use", " ", "builtin", " ", "ListLinePlot3D", " ", "if", " ", 
          "available"}], " ", "*)"}], "\n", "\t", 
        RowBox[{"ListLinePlot3D", "[", 
         RowBox[{"arg", ",", "opts"}], "]"}], ",", "\n", "\t", 
        RowBox[{"(*", " ", 
         RowBox[{"otherwise", " ", "use", " ", "homemade", " ", "version"}], 
         " ", "*)"}], "\n", "\t", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<{opts}=\>\"", ",", 
            RowBox[{"{", "opts", "}"}]}], "]"}], ";"}], "*)"}], "\n", "\t", 
        RowBox[{
         RowBox[{"listpointplot3dopts", "=", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"{", "opts", "}"}], ",", 
            RowBox[{"Options", "[", "ListPointPlot3D", "]"}]}], "]"}]}], ";", 
         "\n", "\t", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<listpointplot3dopts=\>\"", ",", "listpointplot3dopts"}], 
            "]"}], ";"}], "*)"}], "\n", "\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{"Joined", "/.", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"opts", ",", 
                 RowBox[{"Options", "[", "MyListLinePlot3D", "]"}]}], "}"}], 
               "]"}]}], "]"}], "===", "False"}], ",", "\n", "\t\t", 
           RowBox[{"ListPointPlot3D", "[", 
            RowBox[{"arg", ",", 
             RowBox[{"Sequence", "@@", "listpointplot3dopts"}]}], "]"}], ",", 
           "\n", "\t\t", 
           RowBox[{
            RowBox[{"ListPointPlot3D", "[", 
             RowBox[{"arg", ",", 
              RowBox[{"Sequence", "@@", "listpointplot3dopts"}]}], "]"}], "/.", 
            RowBox[{
             RowBox[{"Point", "[", "a___", "]"}], "\[RuleDelayed]", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", 
               RowBox[{"Line", "[", "a", "]"}]}], "}"}]}]}]}], "\n", "\t", 
          "]"}]}]}], "\n", "]"}]}], "\n", "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.7874886282843847`*^9, 3.7874886581263037`*^9}, {
   3.787489065578946*^9, 3.787489082235688*^9}, {3.787490085031118*^9, 
   3.787490092078992*^9}, {3.787490179783345*^9, 3.787490180592305*^9}, {
   3.787490227613146*^9, 3.787490316709138*^9}, {3.787490361105063*^9, 
   3.787490377211349*^9}, 3.787490432095758*^9, {3.787490537804558*^9, 
   3.787490543170681*^9}, {3.78749074474995*^9, 3.7874907562047453`*^9}, {
   3.787490983443446*^9, 3.787491022159141*^9}, {3.78749124040312*^9, 
   3.7874912898754168`*^9}, {3.787491424668339*^9, 3.7874914400748453`*^9}, 
   3.787501681341187*^9, {3.787530537716248*^9, 3.7875305396594267`*^9}, {
   3.7875306368255367`*^9, 3.787530640183538*^9}, {3.787531136739936*^9, 
   3.787531173410451*^9}, {3.7875312065426693`*^9, 3.787531228309328*^9}, {
   3.8307758968032303`*^9, 3.830775938085998*^9}, {3.830776074319014*^9, 
   3.830776195361557*^9}, {3.8307763695884438`*^9, 3.8307763700923843`*^9}, {
   3.830781766080868*^9, 3.8307817884853153`*^9}, {3.830782170476326*^9, 
   3.830782304593611*^9}, {3.8307823793820553`*^9, 3.830782450437545*^9}, {
   3.83078289021701*^9, 3.830782913395255*^9}, {3.830783007124713*^9, 
   3.830783023625884*^9}, {3.830783065522472*^9, 3.830783073564767*^9}, 
   3.83078320511875*^9, 3.8307832580951433`*^9, {3.830789767982169*^9, 
   3.830789768695023*^9}, {3.8307921879149227`*^9, 3.8307922106626062`*^9}, {
   3.8307923352877827`*^9, 3.830792345780452*^9}, {3.8307924607210217`*^9, 
   3.830792483541896*^9}, {3.830792581704363*^9, 
   3.830792583697391*^9}},ExpressionUUID->"e12f67f7-6abc-4e79-81f8-\
a4f0737fd674"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.787501683189659*^9, 
  3.787501683829567*^9}},ExpressionUUID->"d002705a-eb6e-4c35-9fa7-\
78d3a99040c9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "MyListLinePlot3D", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"Joined", "\[Rule]", "True"}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.787501684929844*^9, 3.7875016882777243`*^9}, {
   3.8198325793103456`*^9, 3.819832593513513*^9}, 3.83077594306166*^9, {
   3.83077632543684*^9, 3.830776373795932*^9}, {3.8307814625300493`*^9, 
   3.830781472034622*^9}, {3.830782113987953*^9, 3.830782121264868*^9}, {
   3.830789684871991*^9, 3.8307897079664717`*^9}, {3.830789746097845*^9, 
   3.830789759020627*^9}},ExpressionUUID->"7f8a2193-f748-454b-b319-\
b4d900c6b274"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "MyListLinePlot3D", "]"}], "=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"$VersionNumber", ">=", "12.3"}], ",", 
      RowBox[{"(*", " ", 
       RowBox[{
       "use", " ", "builtin", " ", "ListLinePlot3D", " ", "if", " ", 
        "available"}], " ", "*)"}], "\n", "\t", 
      RowBox[{"Options", "[", "ListLinePlot3D", "]"}], ","}], "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"otherwise", " ", "use", " ", "homemade", " ", "version"}], " ",
       "*)"}], "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{"FilterRules", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Options", "[", "ListPointPlot3D", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"Joined", "\[Rule]", "True"}], "}"}]}], "]"}], ",", 
        RowBox[{"Except", "[", "ColorFunction", "]"}]}], "]"}], "*)"}], "\n", 
     "\t", 
     RowBox[{"(*", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"FilterRules", "[", 
         RowBox[{
          RowBox[{"Options", "[", "ListPointPlot3D", "]"}], ",", 
          RowBox[{"Except", "[", "ColorFunction", "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Joined", "\[Rule]", "True"}], "}"}]}], "]"}], "*)"}], "\n", 
     "]"}]}], ";"}], "*)"}]], "Code",
 CellChangeTimes->{{3.787501684929844*^9, 3.7875016882777243`*^9}, {
   3.8198325793103456`*^9, 3.819832593513513*^9}, 3.83077594306166*^9, {
   3.83077632543684*^9, 3.830776373795932*^9}, {3.8307814625300493`*^9, 
   3.830781472034622*^9}, {3.830782113987953*^9, 3.830782121264868*^9}, {
   3.830789684871991*^9, 3.8307897079664717`*^9}},
 $CellContext`ExpressionUUID -> 
 "7f8a2193-f748-454b-b319-b4d900c6b274",ExpressionUUID->"6fc7e8e5-0542-4201-\
b11e-9656cd934c1e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["PlotDynamics / PlotInterpolatingFunction", "Subsection",
 CellChangeTimes->{
  3.69114527838172*^9, 3.6911455885674267`*^9, {3.784747553429123*^9, 
   3.784747554032794*^9}, {3.794066772396276*^9, 
   3.794066777545443*^9}},ExpressionUUID->"34bdabbd-8623-4d8b-8abf-\
d1a160a499ef"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"d711f46f-3977-4964-92a5-\
f2fdee0f929c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotDynamics", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<PlotDynamics[\!\(\*StyleBox[\"sol\", \"TI\"]\)] plots the functions \
in \!\(\*StyleBox[\"sol\", \"TI\"]\) across their entire domain.\n\
PlotDynamics[\!\(\*StyleBox[\"sol\", \"TI\"]\), \!\(\*StyleBox[\"vars\", \"TI\
\"]\)] plots \!\(\*StyleBox[\"vars\", \"TI\"]\) in \!\(\*StyleBox[\"sol\", \
\"TI\"]\) across their entire domain.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotInterpolatingFunction", "::", "usage"}], "=", "\n", 
   "\"\<PlotInterpolatingFunction[\!\(\*StyleBox[\"sol\", \"TI\"]\)] plots \
the InterpolatingFunctions in \!\(\*StyleBox[\"sol\", \"TI\"]\) across their \
entire domain.\nPlotInterpolatingFunction[\!\(\*StyleBox[\"sol\", \"TI\"]\), \
\!\(\*StyleBox[\"vars\", \"TI\"]\)] plots \!\(\*StyleBox[\"vars\", \"TI\"]\) \
in \!\(\*StyleBox[\"sol\", \"TI\"]\) across their entire domain.\>\""}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.769482495887718*^9, 3.7694824971082706`*^9}, {
  3.787680310073431*^9, 3.7876803116154346`*^9}, {3.794011017197051*^9, 
  3.794011078550078*^9}},ExpressionUUID->"b786382d-f495-4199-a07e-\
d3f7b5ccd282"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"3cafed4b-b092-4856-8435-\
d27cfee87353"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotDynamics", "[", 
    RowBox[{
     RowBox[{"sol_", "?", "RuleListQ"}], ",", "plotvarsin_List", ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{"(*", " ", "options", " ", "*)"}], "\n", 
      RowBox[{
      "logged", ",", "plotstyle", ",", "plotmarkers", ",", "axeslabel", ",", 
       "plotopts", ",", "plotrange", ",", "linestyles", ",", "plottype", ",", 
       "\n", "histogram", ",", "histogrampoints", ",", "histogramscale", ",", 
       "histogramposition", ",", "histogramopts", ",", "histogramopacity", 
       ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "lookup", ",",
        "vars", ",", "plotvars", ",", "plotcolor", ",", "ls", ",", "i", ",", 
       "yaxislabel", ",", "xinit", ",", "xfinal", ",", "ifvars", ",", 
       "tdvars", ",", "cvars", ",", "tdsol", ",", "ifplot", ",", "tdplot", 
       ",", "cplot", ",", "\n", "xrange", ",", "hmax", ",", "histo", ",", 
       "hplot"}], "}"}], ",", "\n", "\t", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
           RowBox[{
            RowBox[{"Message", "[", 
             RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
            RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";"}], "*)"}],
        "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
       RowBox[{
        RowBox[{"logged", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Logged", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotDynamics", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"plotstyle", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PlotStyle", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotDynamics", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"plotmarkers", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PlotMarkers", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotDynamics", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"axeslabel", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"AxesLabel", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotDynamics", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"linestyles", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"LineStyles", "/.", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"opts", ",", 
                RowBox[{"Options", "[", "PlotDynamics", "]"}]}], "}"}], 
              "]"}]}], "]"}], "}"}], "]"}]}], ";", "\n", 
        RowBox[{"histogram", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Histogram", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotDynamics", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"histogrampoints", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"HistogramPoints", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotDynamics", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"histogramscale", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"HistogramScale", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotDynamics", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"histogramposition", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"HistogramPosition", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotDynamics", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"histogramopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"HistogramOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotDynamics", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"histogramopacity", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"HistogramOpacity", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotDynamics", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"plottype", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PlotType", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotDynamics", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", "\n", 
        RowBox[{"vars", "=", 
         RowBox[{"sol", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<vars=\>\"", ",", "vars"}], "]"}], ";"}], "*)"}], 
        "\[IndentingNewLine]", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"If", "[", 
         RowBox[{"modelloaded", ",", "\n", "\t", 
          RowBox[{"Do", "[", "\n", "\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], "=", 
              RowBox[{"Max", "[", "\n", "\t\t\t", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Max", "[", 
                   RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"vars", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "0", 
                    "\[RightDoubleBracket]"}], "===", "Subscript"}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "gcomp"}], ")"}]}],
                     "&"}]}], "]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], 
                   "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"gcomp", ",", 
                    RowBox[{"gcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ",",
                 "\n", "\t\t\t", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Max", "[", 
                   RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"vars", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "0", 
                    "\[RightDoubleBracket]"}], "===", "Subscript"}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "gtrait"}], 
                    ")"}]}], "&"}]}], "]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], 
                   "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"gtrait", ",", 
                    RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}]}], 
               "\n", "\t\t", "]"}]}], ";", "\n", "\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], "\[Equal]", 
                RowBox[{"-", "\[Infinity]"}]}], ",", 
               RowBox[{
                RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], "=", "0"}]}], 
              "]"}], ";", "\n", "\t\t", 
             RowBox[{"If", "[", 
              RowBox[{"Global`debug", ",", 
               RowBox[{"Print", "[", 
                RowBox[{
                "\"\<\[ScriptCapitalN][\>\"", ",", "gu", ",", "\"\<]=\>\"", 
                 ",", 
                 RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}]}], "]"}]}], 
              "]"}], ";"}], "\n", "\t", ",", 
            RowBox[{"{", 
             RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "\n", "]"}], 
        ";", "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<plotvarsin=\>\"", ",", "plotvarsin"}], "]"}], ";"}], 
         "*)"}], "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"plotvarsin", "===", 
           RowBox[{"{", "All", "}"}]}], ",", "\n", "\t", 
          RowBox[{"plotvars", "=", "vars"}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"plotvars", "=", 
            RowBox[{"{", "}"}]}], ";", "\n", "\t", 
           RowBox[{"Do", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"lookup", "=", 
               RowBox[{"LookUp", "[", "var", "]"}]}], ";", "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"MemberQ", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\<gcomp\>\"", ",", "\"\<gtrait\>\""}], "}"}], 
                   ",", 
                   RowBox[{
                   "lookup", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], "&&", 
                 RowBox[{
                  RowBox[{"Length", "[", "lookup", "]"}], "\[Equal]", "3"}], "&&", 
                 RowBox[{
                  RowBox[{"\[ScriptCapitalN]", "[", 
                   RowBox[{
                   "lookup", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "]"}], "\[NotEqual]", "0"}]}], 
                ",", "\n", "\t\t\t", 
                RowBox[{"Do", "[", 
                 RowBox[{
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"plotvars", ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"var", ",", "sp"}], "]"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"sp", ",", 
                    RowBox[{"\[ScriptCapitalN]", "[", 
                    RowBox[{
                    "lookup", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], "]"}], ",", 
                "\n", "\t\t\t", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"plotvars", ",", "var"}], "]"}]}], "\n", "\t\t", 
               "]"}], ";"}], "\n", "\t", ",", 
             RowBox[{"{", 
              RowBox[{"var", ",", "plotvarsin"}], "}"}]}], "]"}]}]}], "\n", 
         "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<plotvars=\>\"", ",", "plotvars"}], "]"}], ";"}], 
         "*)"}], "\n", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"axeslabel", "===", "Automatic"}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"yaxislabel", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"var", "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"v_", ",", "sp_"}], "]"}], "\[Rule]", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"v", ",", "\"\<i\>\""}], "]"}]}], "}"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"var", ",", "plotvars"}], "}"}]}], "]"}]}], ";", "\n", 
           "\t", 
           RowBox[{"yaxislabel", "=", 
            RowBox[{"Sort", "[", 
             RowBox[{"Union", "[", "yaxislabel", "]"}], "]"}]}], ";", "\n", 
           "\t", 
           RowBox[{"axeslabel", "=", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"Row", "[", 
               RowBox[{"yaxislabel", ",", "\"\<,\>\""}], "]"}]}], "}"}]}]}]}],
          "\n", "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<axeslabel=\>\"", ",", "axeslabel"}], "]"}], ";"}], 
         "*)"}], "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"split", " ", "into", " ", "InterpolatingFunctions"}], ",", 
          " ", "TemporalData", ",", " ", 
          RowBox[{"and", " ", "constants"}]}], " ", "*)"}], "\n", 
        RowBox[{"ifvars", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"plotvars", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{"#", "/.", "sol"}], "]"}], "\[Equal]", 
             "InterpolatingFunction"}], "&"}]}], "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<ifvars=\>\"", ",", "ifvars"}], "]"}], ";"}], "*)"}], 
        "\n", 
        RowBox[{"tdvars", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"plotvars", ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", 
               RowBox[{"#", "/.", "sol"}], "]"}], "\[Equal]", 
              "TemporalData"}], "||", 
             RowBox[{
              RowBox[{"Head", "[", 
               RowBox[{"#", "/.", "sol"}], "]"}], "\[Equal]", "List"}]}], 
            "&"}]}], "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<tdvars=\>\"", ",", "tdvars"}], "]"}], ";"}], "*)"}], 
        "\n", 
        RowBox[{"cvars", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"plotvars", ",", 
           RowBox[{
            RowBox[{"NumericQ", "[", 
             RowBox[{"#", "/.", "sol"}], "]"}], "&"}]}], "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<cvars=\>\"", ",", "cvars"}], "]"}], ";"}], "*)"}], 
        "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"plotstyle", "===", 
           RowBox[{"{", "}"}]}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"i", "=", "0"}], ";", "\n", "\t", 
           RowBox[{"Do", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"i", "++"}], ";", "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"linestyles", "===", 
                 RowBox[{"{", "}"}]}], ",", 
                RowBox[{"ls", "=", 
                 RowBox[{"linestyle", "[", "var", "]"}]}], ",", 
                RowBox[{"ls", "=", 
                 RowBox[{"ModPart", "[", 
                  RowBox[{"linestyles", ",", "i"}], "]"}]}]}], "]"}], ";", 
              "\n", "\t\t", 
              RowBox[{"lookup", "=", 
               RowBox[{"LookUp", "[", "var", "]"}]}], ";", "\n", "\t\t", 
              RowBox[{"Which", "[", "\n", "\t\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "lookup", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "===", "\"\<gcomp\>\""}], "||", 
                   RowBox[{
                    RowBox[{
                    "lookup", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "===", "\"\<gtrait\>\""}]}], 
                  ")"}], "&&", 
                 RowBox[{
                  RowBox[{"Length", "[", "lookup", "]"}], "\[Equal]", "4"}]}],
                 ",", "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"plotcolor", "[", "var", "]"}], "=", 
                 RowBox[{
                  RowBox[{"color", "[", "var", "]"}], "[", 
                  RowBox[{"SpFrac", "[", 
                   RowBox[{
                    RowBox[{
                    "lookup", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"\[ScriptCapitalN]", "[", 
                    RowBox[{
                    "lookup", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "]"}]}], "]"}], "]"}]}], "\n", 
                "\t\t", ",", "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "lookup", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "===", "\"\<gcomp\>\""}], "||", 
                   RowBox[{
                    RowBox[{
                    "lookup", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "===", "\"\<gtrait\>\""}]}], 
                  ")"}], "&&", 
                 RowBox[{
                  RowBox[{"Length", "[", "lookup", "]"}], "\[Equal]", "3"}]}],
                 ",", "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"plotcolor", "[", "var", "]"}], "=", 
                 RowBox[{"color", "[", "var", "]"}]}], "\n", "\t\t", ",", 
                "\[IndentingNewLine]", "\t\t\t", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "lookup", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "===", "\"\<pcomp\>\""}], "||", 
                 
                 RowBox[{
                  RowBox[{
                  "lookup", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "===", "\"\<aux\>\""}]}], ",", 
                "\[IndentingNewLine]", "\t\t\t", 
                RowBox[{
                 RowBox[{"plotcolor", "[", "var", "]"}], "=", 
                 RowBox[{"color", "[", "var", "]"}]}], "\n", "\t\t", ",", 
                "\n", "\t\t\t", "Else", ",", "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{
                  RowBox[{"plotcolor", "[", "var", "]"}], "=", 
                  RowBox[{
                   RowBox[{"ColorData", "[", "97", "]"}], "[", "i", "]"}]}], 
                 ";"}]}], "\[IndentingNewLine]", "\t\t", "]"}], ";", "\n", 
              "\t\t", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"plotstyle", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"plotcolor", "[", "var", "]"}], ",", "ls"}], 
                 "}"}]}], "]"}]}], "\n", "\t", ",", 
             RowBox[{"{", 
              RowBox[{"var", ",", "plotvars"}], "}"}]}], "]"}]}]}], "\n", 
         "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"CompoundAnd", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"comptype", "[", "var", "]"}], "===", 
              "\"\<Extensive\>\""}], ",", 
             RowBox[{"{", 
              RowBox[{"var", ",", "plotvars"}], "}"}]}], "]"}], "]"}], ",", 
          "\n", "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"logged", "\[Equal]", "True"}], ",", "\n", "\t\t", 
            RowBox[{"plotrange", "=", "All"}], ",", "\n", "\t\t", 
            RowBox[{"plotrange", "=", 
             RowBox[{"{", 
              RowBox[{"0", ",", "All"}], "}"}]}]}], "\n", "\t", "]"}], ",", 
          "\n", "\t", 
          RowBox[{"(*", 
           RowBox[{"plotrange", "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"IntervalUnion", "[", 
                RowBox[{"Sequence", "@@", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"range", "[", "var", "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"var", ",", "plotvars"}], "}"}]}], "]"}]}], "]"}],
                "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "\[Infinity]"}], "\[Rule]", "All"}], ",", 
                 RowBox[{"\[Infinity]", "\[Rule]", "All"}]}], "}"}]}], ")"}], 
             "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "*)"}],
           "\n", "\t", 
          RowBox[{"plotrange", "=", "All"}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ifvars", "\[NotEqual]", 
           RowBox[{"{", "}"}]}], ",", "\n", "\t", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"\"\<ifvars=\>\"", ",", "ifvars"}], "]"}], ";"}], "*)"}],
           "\n", "\t", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"xinit", ",", "xfinal"}], "}"}], "=", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "ifvars", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "/.", "sol"}], ")"}], "[", 
              "\"\<Domain\>\"", "]"}], "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}]}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{"extract", " ", "domain"}], " ", "*)"}], "\n", "\t", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"\"\<{xinit,xfinal}=\>\"", ",", 
               RowBox[{"{", 
                RowBox[{"xinit", ",", "xfinal"}], "}"}]}], "]"}], ";"}], 
            "*)"}], "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"logged", "\[Equal]", "True"}], ",", "\n", "\t\t", 
             RowBox[{"Which", "[", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"plottype", "\[Equal]", "\"\<ListPlot\>\""}], ",", 
               "\n", "\t\t\t", 
               RowBox[{
                RowBox[{"plotopts", "=", 
                 RowBox[{"FilterRules", "[", 
                  RowBox[{
                   RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"opts", ",", 
                    RowBox[{"AxesLabel", "\[Rule]", "axeslabel"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", "plotstyle"}], ",", 
                    RowBox[{"Options", "[", "PlotDynamics", "]"}]}], "}"}], 
                    "]"}], ",", 
                   RowBox[{"Options", "[", "ListPlot", "]"}]}], "]"}]}], ";", 
                "\n", "\t\t\t", 
                RowBox[{"ifplot", "=", 
                 RowBox[{"ListLogPlot", "[", 
                  RowBox[{
                   RowBox[{"ifvars", "/.", "sol"}], ",", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
                   RowBox[{"PlotRange", "\[Rule]", "plotrange"}]}], "]"}]}]}],
                ",", "\n", "\t\t\t", "Else", ",", "\n", "\t\t\t", 
               RowBox[{
                RowBox[{"plotopts", "=", 
                 RowBox[{"FilterRules", "[", 
                  RowBox[{
                   RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"opts", ",", 
                    RowBox[{"AxesLabel", "\[Rule]", "axeslabel"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", "plotstyle"}], ",", 
                    RowBox[{"Options", "[", "PlotDynamics", "]"}]}], "}"}], 
                    "]"}], ",", 
                   RowBox[{"Options", "[", "LogPlot", "]"}]}], "]"}]}], ";", 
                "\n", "\t\t\t", 
                RowBox[{"ifplot", "=", 
                 RowBox[{"LogPlot", "[", 
                  RowBox[{
                   RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"var", "[", "x", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"var", ",", "ifvars"}], "}"}]}], "]"}], "/.", 
                    "sol"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", "xinit", ",", "xfinal"}], "}"}], ",", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
                   RowBox[{"PlotRange", "\[Rule]", "plotrange"}]}], 
                  "]"}]}]}]}], "\n", "\t\t", "]"}], "\n", "\t", ",", "\n", 
             "\t\t", 
             RowBox[{"Which", "[", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"plottype", "\[Equal]", "\"\<ListPlot\>\""}], ",", 
               "\n", "\t\t\t", 
               RowBox[{
                RowBox[{"plotopts", "=", 
                 RowBox[{"FilterRules", "[", 
                  RowBox[{
                   RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"opts", ",", 
                    RowBox[{"AxesLabel", "\[Rule]", "axeslabel"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", "plotstyle"}], ",", 
                    RowBox[{"Options", "[", "PlotDynamics", "]"}]}], "}"}], 
                    "]"}], ",", 
                   RowBox[{"Options", "[", "ListPlot", "]"}]}], "]"}]}], ";", 
                "\n", "\t\t\t", 
                RowBox[{"ifplot", "=", 
                 RowBox[{"ListPlot", "[", 
                  RowBox[{
                   RowBox[{"ifvars", "/.", "sol"}], ",", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
                   RowBox[{"PlotRange", "\[Rule]", "plotrange"}]}], "]"}]}]}],
                ",", "\n", "\t\t\t", "Else", ",", "\n", "\t\t\t", 
               RowBox[{
                RowBox[{"plotopts", "=", 
                 RowBox[{"FilterRules", "[", 
                  RowBox[{
                   RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"opts", ",", 
                    RowBox[{"AxesLabel", "\[Rule]", "axeslabel"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", "plotstyle"}], ",", 
                    RowBox[{"Options", "[", "PlotDynamics", "]"}]}], "}"}], 
                    "]"}], ",", 
                   RowBox[{"Options", "[", "Plot", "]"}]}], "]"}]}], ";", 
                "\n", "\t\t\t", 
                RowBox[{"ifplot", "=", 
                 RowBox[{"Plot", "[", 
                  RowBox[{
                   RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"var", "[", "x", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"var", ",", "ifvars"}], "}"}]}], "]"}], "/.", 
                    "sol"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", "xinit", ",", "xfinal"}], "}"}], ",", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
                   RowBox[{"PlotRange", "\[Rule]", "plotrange"}]}], 
                  "]"}]}]}]}], "\n", "\t\t", "]"}]}], "\n", "\t", "]"}]}], 
          "\n", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"ifplot", "=", 
            RowBox[{"{", "}"}]}], ";"}]}], "\n", "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", "ifplot", "]"}], ";"}], "*)"}], "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"tdvars", "\[NotEqual]", 
           RowBox[{"{", "}"}]}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"plotmarkers", "===", 
               RowBox[{"{", "}"}]}], "&&", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"Joined", "/.", 
                 RowBox[{"{", "opts", "}"}]}], ")"}], "===", "False"}]}], ",",
              "\n", "\t\t", 
             RowBox[{"plotmarkers", "=", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"plotmarker", "[", "var", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"var", ",", "tdvars"}], "}"}]}], "]"}]}]}], "\n", 
            "\t", "]"}], ";", "\n", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"plotmarkers", "\[Equal]", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{"plotmarkers", "=", "None"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{"plotopts", "=", 
            RowBox[{"FilterRules", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"opts", ",", 
                 RowBox[{"AxesLabel", "\[Rule]", "axeslabel"}], ",", 
                 RowBox[{"PlotStyle", "\[Rule]", "plotstyle"}], ",", 
                 RowBox[{"PlotMarkers", "\[Rule]", "plotmarkers"}], ",", 
                 RowBox[{"Options", "[", "PlotDynamics", "]"}]}], "}"}], 
               "]"}], ",", 
              RowBox[{"Options", "[", "ListPlot", "]"}]}], "]"}]}], ";", "\n",
            "\t", 
           RowBox[{"tdsol", "=", 
            RowBox[{"Select", "[", 
             RowBox[{"sol", ",", 
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{"tdvars", ",", 
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}], "]"}], "&"}]}], "]"}]}], ";", 
           "\n", "\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"xinit", ",", "xfinal"}], "}"}], "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"InitialTime", "[", "tdsol", "]"}], ",", 
              RowBox[{"FinalTime", "[", "tdsol", "]"}]}], "}"}]}], ";", "\n", 
           "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"logged", "\[Equal]", "True"}], ",", "\n", "\t\t", 
             RowBox[{"tdplot", "=", 
              RowBox[{"ListLogPlot", "[", 
               RowBox[{
                RowBox[{"tdvars", "/.", "sol"}], ",", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
                RowBox[{"PlotRange", "\[Rule]", "plotrange"}]}], "]"}]}], 
             "\n", "\t", ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"tdplot", "=", 
               RowBox[{"ListPlot", "[", 
                RowBox[{
                 RowBox[{"tdvars", "/.", "sol"}], ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
                 RowBox[{"AxesOrigin", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"xinit", ",", "0"}], "}"}]}], ",", 
                 RowBox[{"PlotRange", "\[Rule]", "plotrange"}]}], "]"}]}], 
              ";"}]}], "\n", "\t", "]"}]}], "\n", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"tdplot", "=", 
            RowBox[{"{", "}"}]}], ";"}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"cvars", "\[NotEqual]", 
           RowBox[{"{", "}"}]}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"plotopts", "=", 
            RowBox[{"FilterRules", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"opts", ",", 
                 RowBox[{"AxesLabel", "\[Rule]", "axeslabel"}], ",", 
                 RowBox[{"PlotStyle", "\[Rule]", "plotstyle"}], ",", 
                 RowBox[{"Options", "[", "PlotDynamics", "]"}]}], "}"}], 
               "]"}], ",", 
              RowBox[{"Options", "[", "Plot", "]"}]}], "]"}]}], ";", "\n", 
           "\t", 
           RowBox[{"cplot", "=", 
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"Evaluate", "[", 
               RowBox[{"cvars", "/.", "sol"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "xinit", ",", "xfinal"}], "}"}], ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "plotrange"}]}], "]"}]}]}], 
          "\n", ",", "\n", "\t", 
          RowBox[{"cplot", "=", 
           RowBox[{"{", "}"}]}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"histogram", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"xrange", "=", 
            RowBox[{"(", 
             RowBox[{"xfinal", "-", "xinit"}], ")"}]}], ";", "\n", "\t", 
           RowBox[{"hmax", "=", 
            RowBox[{"Max", "[", 
             RowBox[{"Table", "[", "\n", "\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"histo", "[", "ifvar", "]"}], "=", 
                 RowBox[{"Histogram", "[", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ifvar", "[", "t", "]"}], "/.", "sol"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "xinit", ",", "xfinal", ",", 
                    RowBox[{"xrange", "/", "histogrampoints"}]}], "}"}]}], 
                    "]"}], ",", "Automatic", ",", "\"\<PDF\>\"", ",", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "histogramopts"}], "]"}]}], 
                  "]"}]}], ";", "\n", "\t\t", 
                RowBox[{
                 RowBox[{"GetPlotRange", "[", 
                  RowBox[{"histo", "[", "ifvar", "]"}], "]"}], 
                 "\[LeftDoubleBracket]", 
                 RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], "\n", 
               "\t", ",", 
               RowBox[{"{", 
                RowBox[{"ifvar", ",", "ifvars"}], "}"}]}], "]"}], "]"}]}], 
           ";", "\n", "\t", 
           RowBox[{"Global`tmp", "=", 
            RowBox[{"hplot", "=", 
             RowBox[{"Graphics", "[", "\n", "\t\t", 
              RowBox[{"Flatten", "[", "\n", "\t\t", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", "\n", "\t\t\t", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "histogramopacity", "]"}]}], 
                    "]"}], "]"}], ",", 
                    RowBox[{"plotcolor", "[", "ifvar", "]"}], ",", 
                    RowBox[{"Opacity", "[", "histogramopacity", "]"}]}], 
                    "]"}], "}"}], ",", "\n", "\t\t\t", 
                   RowBox[{"Cases", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"histo", "[", "ifvar", "]"}], "/.", 
                    RowBox[{
                    RowBox[{"NCache", "[", 
                    RowBox[{"_", ",", "vals_"}], "]"}], "\[Rule]", "vals"}]}],
                     "\n", "\t\t\t", "/.", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"List", "[", 
                    RowBox[{"x1_", ",", "y1_"}], "]"}], ",", 
                    RowBox[{"List", "[", 
                    RowBox[{"x2_", ",", "y2_"}], "]"}], ",", "optz___"}], 
                    "]"}], "\[Rule]", 
                    RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"List", "[", 
                    RowBox[{
                    RowBox[{"y1", "+", "xfinal", "+", 
                    RowBox[{"xrange", "*", "histogramposition"}]}], ",", 
                    "x1"}], "]"}], ",", 
                    RowBox[{"List", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"y2", "*", 
                    RowBox[{"xrange", "/", "hmax"}], "*", "histogramscale"}], 
                    "+", "xfinal", "+", 
                    RowBox[{"xrange", "*", "histogramposition"}]}], ",", 
                    "x2"}], "]"}], ",", "optz"}], "]"}]}], ")"}]}], "\n", 
                    "\t\t\t", "/.", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"RectangleBox", "[", 
                    RowBox[{
                    RowBox[{"List", "[", 
                    RowBox[{"x1_", ",", "y1_"}], "]"}], ",", 
                    RowBox[{"List", "[", 
                    RowBox[{"x2_", ",", "y2_"}], "]"}], ",", "optz___"}], 
                    "]"}], "\[Rule]", 
                    RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"List", "[", 
                    RowBox[{
                    RowBox[{"y1", "+", "xfinal", "+", 
                    RowBox[{"xrange", "*", "histogramposition"}]}], ",", 
                    "x1"}], "]"}], ",", 
                    RowBox[{"List", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"y2", "*", 
                    RowBox[{"xrange", "/", "hmax"}], "*", "histogramscale"}], 
                    "+", "xfinal", "+", 
                    RowBox[{"xrange", "*", "histogramposition"}]}], ",", 
                    "x2"}], "]"}], ",", "optz"}], "]"}]}], ")"}]}], ",", "\n",
                     "\t\t\t", 
                    RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"List", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], ",", 
                    RowBox[{"List", "[", 
                    RowBox[{"_", ",", "_"}], "]"}], ",", "___"}], "]"}], ",", 
                    "\[Infinity]"}], "]"}]}], "\n", "\t\t", "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"ifvar", ",", "ifvars"}], "}"}]}], "]"}], "]"}], 
              "\n", "\t\t", "]"}]}]}]}], "\n", ",", "\n", "\t", 
          RowBox[{"hplot", "=", 
           RowBox[{"{", "}"}]}]}], "\n", "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", "hplot", "]"}], ";"}], "*)"}], "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"histogram", ",", "\n", "\t", 
          RowBox[{"Return", "[", 
           RowBox[{"Show", "[", 
            RowBox[{
            "ifplot", ",", "tdplot", ",", "cplot", ",", "hplot", ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"xinit", ",", "xfinal"}], "}"}], ",", "All"}], 
               "}"}]}], ",", 
             RowBox[{"PlotRangeClipping", "\[Rule]", "False"}], ",", 
             RowBox[{"ImagePadding", "\[Rule]", "All"}]}], 
            RowBox[{"(*", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"20", ",", 
                 RowBox[{
                  RowBox[{"400", "*", "histogramposition"}], "+", 
                  RowBox[{"250", "*", "histogramscale"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"20", ",", "20"}], "}"}]}], "}"}], "*)"}], "]"}], 
           "]"}], ",", "\n", "\t", 
          RowBox[{"Return", "[", 
           RowBox[{"Show", "[", 
            RowBox[{"ifplot", ",", "tdplot", ",", "cplot"}], "]"}], "]"}]}], 
         "\n", "]"}], ";"}]}], "\n", "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.687797595945695*^9, 3.6877976126384373`*^9}, {
   3.687798012105939*^9, 3.6877980546833267`*^9}, {3.68779813797402*^9, 
   3.687798139111555*^9}, {3.687798190262157*^9, 3.68779828043355*^9}, {
   3.6877990150284557`*^9, 3.687799065129637*^9}, {3.687799198469445*^9, 
   3.687799260300704*^9}, {3.687799328510298*^9, 3.687799415225224*^9}, {
   3.6877995134303083`*^9, 3.687799632500143*^9}, {3.687799802447369*^9, 
   3.68779983918661*^9}, {3.6877998936600323`*^9, 3.687799950964031*^9}, {
   3.687800544045809*^9, 3.687800548027688*^9}, {3.687800604344677*^9, 
   3.687800609128182*^9}, {3.687800640340139*^9, 3.687800641759902*^9}, {
   3.687800771078271*^9, 3.687800826471121*^9}, {3.6878010061579857`*^9, 
   3.68780101424544*^9}, {3.687801155915491*^9, 3.687801171386804*^9}, {
   3.687801477581217*^9, 3.6878015179289083`*^9}, {3.687801561951027*^9, 
   3.687801659601326*^9}, {3.687801721911297*^9, 3.687801723770015*^9}, {
   3.6878017637412977`*^9, 3.687801773742324*^9}, {3.6878018071620197`*^9, 
   3.687801836241912*^9}, {3.687801950464526*^9, 3.687801977183444*^9}, {
   3.687802022266906*^9, 3.687802075212785*^9}, {3.687802138936084*^9, 
   3.687802144531447*^9}, {3.6878021813556833`*^9, 3.687802193476531*^9}, {
   3.6878022347787724`*^9, 3.6878022378169394`*^9}, {3.6878023008517237`*^9, 
   3.687802304898903*^9}, {3.687802401549431*^9, 3.6878024062675*^9}, {
   3.687802559767239*^9, 3.687802572890172*^9}, {3.687802723668665*^9, 
   3.687802727116705*^9}, {3.687802773572485*^9, 3.687802777702862*^9}, {
   3.687803180472237*^9, 3.68780318540973*^9}, {3.687803272182111*^9, 
   3.687803275809757*^9}, {3.687803308221483*^9, 3.68780333947058*^9}, {
   3.6878033859875307`*^9, 3.687803413558372*^9}, {3.6878034613758183`*^9, 
   3.687803481258868*^9}, {3.687803538450075*^9, 3.687803562180738*^9}, {
   3.6878035941245937`*^9, 3.687803598511615*^9}, {3.687807720047435*^9, 
   3.687807846519615*^9}, {3.687808002481988*^9, 3.687808031326634*^9}, {
   3.687808088923676*^9, 3.687808100767116*^9}, {3.687808201573749*^9, 
   3.687808220812063*^9}, 3.687808263907771*^9, {3.687808402727716*^9, 
   3.687808417252698*^9}, {3.6878085881872807`*^9, 3.687808592021963*^9}, {
   3.687808794473014*^9, 3.6878088430594797`*^9}, {3.687884562787938*^9, 
   3.687884570372387*^9}, {3.687884627249402*^9, 3.6878846347765837`*^9}, {
   3.687884677617752*^9, 3.687884677825844*^9}, {3.6879638734181557`*^9, 
   3.68796387548654*^9}, {3.68796409137381*^9, 3.6879641017659407`*^9}, {
   3.687967346069304*^9, 3.687967350387145*^9}, {3.687967380448333*^9, 
   3.6879673910273027`*^9}, {3.6879674502234783`*^9, 3.687967454915112*^9}, {
   3.687970755680019*^9, 3.6879707583057528`*^9}, 3.6884671495844097`*^9, {
   3.6884942254082613`*^9, 3.688494229855308*^9}, {3.688494689277803*^9, 
   3.688494747740714*^9}, {3.688571683810927*^9, 3.68857168383834*^9}, {
   3.688571744364574*^9, 3.688571754730345*^9}, {3.688571805014709*^9, 
   3.6885718051513577`*^9}, {3.6885726975615177`*^9, 3.688572714180806*^9}, {
   3.688575084993104*^9, 3.688575091233644*^9}, {3.688575790981965*^9, 
   3.688575867083603*^9}, {3.688575916509324*^9, 3.688575921692882*^9}, {
   3.688575994497368*^9, 3.688576032921064*^9}, {3.688576063080514*^9, 
   3.688576176820436*^9}, {3.688576465353076*^9, 3.688576498077526*^9}, {
   3.688577145266102*^9, 3.68857725711866*^9}, {3.6885777829077044`*^9, 
   3.688577794204474*^9}, {3.691142002969569*^9, 3.69114203292557*^9}, 
   3.691142082513001*^9, {3.691142275010704*^9, 3.691142284574493*^9}, {
   3.691142389691537*^9, 3.691142408630239*^9}, {3.691142495468259*^9, 
   3.6911425351805696`*^9}, {3.693749188933136*^9, 3.693749195977385*^9}, {
   3.6937492458836184`*^9, 3.693749269376172*^9}, {3.6937494384632874`*^9, 
   3.693749531083006*^9}, {3.693750110716283*^9, 3.6937501604224052`*^9}, {
   3.693750209780904*^9, 3.6937502516061077`*^9}, {3.693750300864674*^9, 
   3.6937503165943127`*^9}, {3.693750461132622*^9, 3.693750463032606*^9}, {
   3.693750666513946*^9, 3.6937506686117*^9}, {3.693750824368888*^9, 
   3.6937508578483763`*^9}, {3.693750984764461*^9, 3.6937510629949512`*^9}, {
   3.693751115005555*^9, 3.6937511453292847`*^9}, {3.693751177944715*^9, 
   3.69375117859371*^9}, {3.693751230583714*^9, 3.693751256951168*^9}, 
   3.693770799178801*^9, {3.6937717446086206`*^9, 3.693771817726036*^9}, {
   3.693771927147447*^9, 3.693772021203672*^9}, {3.6937753403950233`*^9, 
   3.6937753419200497`*^9}, 3.693776556840626*^9, {3.693776695109477*^9, 
   3.693776695657991*^9}, {3.693776731502718*^9, 3.693776735012163*^9}, {
   3.693776766508161*^9, 3.693776772749055*^9}, {3.6937785654745607`*^9, 
   3.693778597331914*^9}, {3.694028034250482*^9, 3.694028041253819*^9}, {
   3.694028075522159*^9, 3.694028116606131*^9}, {3.6940281494122133`*^9, 
   3.694028168923747*^9}, {3.694028226198368*^9, 3.694028243482809*^9}, {
   3.6940283709071703`*^9, 3.6940283714165573`*^9}, {3.69402841450386*^9, 
   3.6940284293845778`*^9}, {3.694033591183434*^9, 3.69403359174398*^9}, {
   3.694092671097624*^9, 3.694092673787722*^9}, {3.6940958090373907`*^9, 
   3.694095814257915*^9}, {3.694777655533149*^9, 3.694777656612506*^9}, {
   3.694778221781942*^9, 3.694778222781255*^9}, {3.694778342487958*^9, 
   3.6947783526611423`*^9}, {3.6947784266701927`*^9, 3.694778445198332*^9}, {
   3.694778665566568*^9, 3.694778666526476*^9}, {3.694779066556843*^9, 
   3.694779069877314*^9}, 3.694779634091433*^9, {3.694779677300881*^9, 
   3.694779678978817*^9}, {3.694779709588132*^9, 3.694779710827602*^9}, {
   3.6947797653339777`*^9, 3.6947797928275003`*^9}, 3.69477984422288*^9, {
   3.694796262559032*^9, 3.694796269702836*^9}, {3.694796469496366*^9, 
   3.694796480337871*^9}, {3.694797251437091*^9, 3.694797322951721*^9}, {
   3.694797588812976*^9, 3.69479760306625*^9}, {3.709336684405711*^9, 
   3.70933669049654*^9}, 3.710105949733848*^9, {3.71149866451517*^9, 
   3.711498671635769*^9}, {3.711498729167775*^9, 3.711498730047673*^9}, {
   3.711498865426173*^9, 3.711498877714971*^9}, {3.71355433600957*^9, 
   3.713554349784276*^9}, 3.713554445850088*^9, {3.7135544783882*^9, 
   3.71355449073857*^9}, 3.71355483694092*^9, {3.7140598756705723`*^9, 
   3.714059902976322*^9}, {3.71405994989933*^9, 3.714059960408486*^9}, 
   3.7140606049573717`*^9, {3.7140612389450502`*^9, 3.714061264401244*^9}, 
   3.7140613173736057`*^9, {3.714069679031745*^9, 3.7140696864685717`*^9}, {
   3.714073250101633*^9, 3.714073357351878*^9}, {3.7140734370125628`*^9, 
   3.714073561514372*^9}, {3.714073592985911*^9, 3.71407369019762*^9}, {
   3.714073722412621*^9, 3.714073737354879*^9}, {3.7140745452674513`*^9, 
   3.714074571659171*^9}, {3.714074622862561*^9, 3.7140746237221127`*^9}, {
   3.7140755404377213`*^9, 3.714075554791675*^9}, 3.7140766071509113`*^9, {
   3.714078465478487*^9, 3.714078489602256*^9}, {3.714079034845374*^9, 
   3.714079054294339*^9}, {3.7140791137758303`*^9, 3.714079149751906*^9}, {
   3.7149275037674017`*^9, 3.7149275500809*^9}, {3.714951816596364*^9, 
   3.714951942976797*^9}, {3.714952254294626*^9, 3.714952263303997*^9}, {
   3.7149533639065247`*^9, 3.714953420195266*^9}, {3.714954076675434*^9, 
   3.714954139173443*^9}, {3.714954177515128*^9, 3.7149541811759357`*^9}, {
   3.714954293507196*^9, 3.714954304212686*^9}, {3.715039192425651*^9, 
   3.7150391958422403`*^9}, 3.715258008965784*^9, {3.7165470034731617`*^9, 
   3.716547009938635*^9}, 3.71654704279543*^9, {3.716547138792574*^9, 
   3.716547148755787*^9}, {3.724634128269587*^9, 3.724634147655245*^9}, {
   3.724634178211616*^9, 3.724634243138918*^9}, {3.724634321760565*^9, 
   3.724634326238226*^9}, {3.724634364332995*^9, 3.72463447294419*^9}, {
   3.724634524025531*^9, 3.724634534256383*^9}, 3.724635288866126*^9, {
   3.725140957956243*^9, 3.72514095796167*^9}, 3.725141965204257*^9, {
   3.732571788702252*^9, 3.732571816854514*^9}, {3.732571884780836*^9, 
   3.732571888691463*^9}, 3.735296292192141*^9, 3.742834297270978*^9, 
   3.7428354526349297`*^9, {3.755130819850513*^9, 3.755130832334594*^9}, {
   3.755131161631352*^9, 3.7551311900674143`*^9}, {3.755131623385973*^9, 
   3.755131658542264*^9}, {3.755131705035862*^9, 3.755131713996413*^9}, {
   3.755131763771255*^9, 3.755131769980175*^9}, 3.755131808198929*^9, {
   3.75513212200031*^9, 3.755132138653077*^9}, {3.7551322376299067`*^9, 
   3.75513224023241*^9}, {3.755132416530065*^9, 3.755132482581834*^9}, 
   3.755132829421893*^9, {3.7551333939902687`*^9, 3.755133407669578*^9}, 
   3.755179882013747*^9, {3.759330060629739*^9, 3.759330089614102*^9}, {
   3.759330205388632*^9, 3.7593302204447412`*^9}, {3.759330319669526*^9, 
   3.7593303395756607`*^9}, {3.75933062068467*^9, 3.759330671412463*^9}, {
   3.759330738159605*^9, 3.759330774275729*^9}, {3.7593308050062237`*^9, 
   3.759330815908123*^9}, {3.759330853494788*^9, 3.759330889259322*^9}, {
   3.7593309629117603`*^9, 3.7593309633876657`*^9}, {3.759331005866084*^9, 
   3.759331098373446*^9}, {3.759336413759241*^9, 3.759336458142355*^9}, {
   3.7593378483101883`*^9, 3.759337857775445*^9}, {3.759338019652596*^9, 
   3.759338066966915*^9}, {3.7593794608828707`*^9, 3.7593794693873587`*^9}, {
   3.7593796218260813`*^9, 3.759379640791288*^9}, {3.759379934801901*^9, 
   3.7593800627398*^9}, {3.7593801323716993`*^9, 3.7593802334131107`*^9}, {
   3.759380324423193*^9, 3.7593804170234613`*^9}, {3.759380469110422*^9, 
   3.759380475271708*^9}, {3.759380539042782*^9, 3.7593805425927687`*^9}, 
   3.759380964567342*^9, {3.759382455712289*^9, 3.759382469036578*^9}, {
   3.759382687244749*^9, 3.759382731064433*^9}, {3.759382765147448*^9, 
   3.759382772662837*^9}, {3.759382837223068*^9, 3.759382915450329*^9}, {
   3.759382962310432*^9, 3.759383113762197*^9}, {3.7593832089109507`*^9, 
   3.759383242834505*^9}, {3.759383274029776*^9, 3.7593832744869537`*^9}, 
   3.759383366712426*^9, {3.7593834160197697`*^9, 3.759383442630396*^9}, {
   3.759383554821507*^9, 3.759383559979125*^9}, 3.759468002817011*^9, {
   3.760249855459161*^9, 3.7602498636226587`*^9}, 3.760249894529167*^9, {
   3.760249949611412*^9, 3.76024996656306*^9}, 3.760550598167951*^9, {
   3.7605507101518917`*^9, 3.7605507115154743`*^9}, 3.760551314904929*^9, 
   3.7605514646955023`*^9, 3.7605515272836447`*^9, {3.760637142677814*^9, 
   3.760637186869975*^9}, {3.7606373579855337`*^9, 3.760637360657824*^9}, {
   3.760637451231152*^9, 3.760637512212364*^9}, {3.760637579562015*^9, 
   3.760637601553969*^9}, 3.769760705289506*^9, 3.769872584647765*^9, {
   3.769872897087037*^9, 3.769872940458447*^9}, {3.769872982418722*^9, 
   3.7698730860802307`*^9}, {3.769873139330635*^9, 3.769873140901227*^9}, {
   3.769873234438382*^9, 3.769873250229458*^9}, {3.769873317634653*^9, 
   3.7698733225484533`*^9}, 3.769873354976248*^9, {3.76987350802048*^9, 
   3.769873511725178*^9}, {3.769873674907434*^9, 3.769873680880578*^9}, {
   3.770187351318561*^9, 3.77018735175432*^9}, 3.770438264935774*^9, {
   3.770721430798633*^9, 3.770721432154749*^9}, {3.784734405005077*^9, 
   3.784734414505447*^9}, {3.7847358419251223`*^9, 3.784735879812621*^9}, {
   3.78473637832489*^9, 3.784736391636701*^9}, {3.7847475813477297`*^9, 
   3.784747587363514*^9}, {3.784792343612198*^9, 3.784792353677659*^9}, 
   3.784792486262114*^9, {3.784793785493167*^9, 3.784793788453137*^9}, {
   3.787749061884665*^9, 3.787749087124875*^9}, {3.792074177948708*^9, 
   3.792074223568161*^9}, 3.7920757535148287`*^9, {3.7920763680954437`*^9, 
   3.792076368576313*^9}, {3.7920769232490053`*^9, 3.7920769251078176`*^9}, {
   3.792077077940193*^9, 3.79207709582761*^9}, {3.792077143146451*^9, 
   3.792077183051627*^9}, {3.793446843505219*^9, 3.793446845163101*^9}, 
   3.793918348073669*^9, {3.7939813042538767`*^9, 3.793981305485408*^9}, 
   3.794137240422666*^9, {3.807621920244636*^9, 3.8076219242119637`*^9}, {
   3.807622062375392*^9, 3.807622070007518*^9}, {3.8076221514184732`*^9, 
   3.8076221540542297`*^9}, {3.807622237375145*^9, 3.8076223058879538`*^9}, {
   3.807622346433228*^9, 3.807622407216962*^9}, 3.807622470197474*^9, {
   3.807622533874342*^9, 3.807622535220354*^9}, {3.80762481217059*^9, 
   3.807624816657441*^9}, {3.80762664372289*^9, 3.807626644021356*^9}, 
   3.807655409820592*^9, {3.807655805385717*^9, 3.807655816769113*^9}, 
   3.807659180515048*^9, 3.8077215496333237`*^9, 3.80772299994519*^9, {
   3.813009442635996*^9, 3.813009455404615*^9}, {3.813009762630714*^9, 
   3.813009763604328*^9}, {3.813009807061947*^9, 3.8130098108854847`*^9}, {
   3.813009987913917*^9, 3.813009994706874*^9}, {3.8130100282587013`*^9, 
   3.8130101618906803`*^9}, {3.813010345064884*^9, 3.813010519084783*^9}, {
   3.813010598889381*^9, 3.813010618782895*^9}, {3.8130107069393682`*^9, 
   3.813010742635828*^9}, {3.813010854797256*^9, 3.8130108612464113`*^9}, {
   3.81301093503649*^9, 3.813010957239402*^9}, {3.81301103150567*^9, 
   3.8130110664921627`*^9}, {3.813011123082736*^9, 3.813011209458909*^9}, {
   3.8130126910981607`*^9, 3.813012776817424*^9}, {3.813012908380052*^9, 
   3.8130129299145308`*^9}, {3.813055525882422*^9, 3.813055530682034*^9}, {
   3.813056551600168*^9, 3.813056604245566*^9}, {3.813056838230891*^9, 
   3.813056972615922*^9}, 3.81305704400067*^9, {3.8130571439008417`*^9, 
   3.813057180153759*^9}, {3.8130572267535467`*^9, 3.81305724467198*^9}, {
   3.813057279007559*^9, 3.8130573145875387`*^9}, {3.813057696302684*^9, 
   3.8130577083406487`*^9}, {3.813058266126677*^9, 3.813058317889345*^9}, {
   3.813058422691264*^9, 3.813058423065317*^9}, {3.8130615554019957`*^9, 
   3.8130615993710747`*^9}, {3.813061643578555*^9, 3.813061648711194*^9}, {
   3.813061712268708*^9, 3.8130617136009283`*^9}, {3.81306197003253*^9, 
   3.813062001614352*^9}, {3.813062048548624*^9, 3.813062056010435*^9}, {
   3.813062506874072*^9, 3.813062508815001*^9}, {3.813062562272085*^9, 
   3.8130625630506163`*^9}, {3.813063118646647*^9, 3.813063162178993*^9}, {
   3.8130632013650427`*^9, 3.8130632512682753`*^9}, {3.81306329257414*^9, 
   3.813063293610828*^9}, {3.8130634879587317`*^9, 3.813063509111033*^9}, {
   3.8130636207746553`*^9, 3.8130637976303473`*^9}, {3.813063834655137*^9, 
   3.813063843220653*^9}, {3.813063963823406*^9, 3.813064022010192*^9}, {
   3.8130640680915747`*^9, 3.813064080708632*^9}, {3.813064141698081*^9, 
   3.813064147124157*^9}, {3.8130641832652283`*^9, 3.8130642166991377`*^9}, {
   3.813064252969266*^9, 3.8130642803039637`*^9}, {3.813064406448947*^9, 
   3.813064453299181*^9}, {3.8130645402091618`*^9, 3.813064573301436*^9}, {
   3.81306578297003*^9, 3.813065970648176*^9}, {3.813092013054447*^9, 
   3.8130920518051033`*^9}, {3.813092359408059*^9, 3.8130923801434593`*^9}, {
   3.813092537734668*^9, 3.8130925631296797`*^9}, {3.813092606267475*^9, 
   3.813092632106637*^9}, {3.813094969333473*^9, 3.813094975035128*^9}, {
   3.813095008837537*^9, 3.8130950109433937`*^9}, {3.813095221488811*^9, 
   3.813095249040742*^9}, {3.813095295384923*^9, 3.813095347520713*^9}, {
   3.813095440771542*^9, 3.813095512270364*^9}, {3.8130955586694202`*^9, 
   3.813095617124763*^9}, {3.813095845289853*^9, 3.813095901773481*^9}, {
   3.813095973115828*^9, 3.813095974727881*^9}, {3.813096013598238*^9, 
   3.8130960227660646`*^9}, {3.813096062922299*^9, 3.813096083667432*^9}, {
   3.813096117341764*^9, 3.8130961173806868`*^9}, {3.813442230608219*^9, 
   3.813442250451388*^9}, {3.8134426749914494`*^9, 3.813442716516621*^9}, {
   3.813443077444343*^9, 3.8134430919424343`*^9}, {3.813443130447995*^9, 
   3.81344313511726*^9}, {3.81344331378189*^9, 3.813443335723215*^9}, {
   3.81344341129725*^9, 3.81344347140125*^9}, {3.8134448950689077`*^9, 
   3.8134448992343283`*^9}, {3.813444949445635*^9, 3.813444950501286*^9}, {
   3.8134449865682287`*^9, 3.813444995027199*^9}, {3.813445044128646*^9, 
   3.813445051393908*^9}, {3.813445126752068*^9, 3.813445241405026*^9}, 
   3.81344529803195*^9, {3.813445329685514*^9, 3.813445420506381*^9}, {
   3.813445863396221*^9, 3.813445865126845*^9}, {3.813447852353551*^9, 
   3.8134478573351593`*^9}, {3.813447892225812*^9, 3.8134478995681257`*^9}, {
   3.813448877584757*^9, 3.813448899457719*^9}, {3.8134489623757267`*^9, 
   3.81344899055766*^9}, {3.813449495662668*^9, 3.8134495069534273`*^9}, {
   3.813449602021119*^9, 3.8134496052810297`*^9}, 3.81344967144289*^9, {
   3.8134497322079697`*^9, 3.813449736327798*^9}, {3.8134497904678183`*^9, 
   3.813449791276804*^9}, {3.813449874428656*^9, 3.8134498785205173`*^9}, {
   3.813449943571664*^9, 3.813449996207921*^9}, {3.813450060626333*^9, 
   3.8134500661359787`*^9}, {3.813450125668795*^9, 3.813450132320709*^9}, {
   3.8143703508131657`*^9, 3.814370354291939*^9}, {3.814370617105242*^9, 
   3.8143706215534477`*^9}, {3.814371372473521*^9, 3.814371430688406*^9}, {
   3.81438905995875*^9, 3.814389061914422*^9}, 3.815748486266281*^9, {
   3.815748698428279*^9, 3.815748708471941*^9}, 3.8157737423959827`*^9, {
   3.815773776367083*^9, 3.815773777000493*^9}, {3.81577520262926*^9, 
   3.815775222243999*^9}, {3.815775257327734*^9, 3.815775284037161*^9}, {
   3.815775629646854*^9, 3.815775630044839*^9}, {3.815775690478771*^9, 
   3.815775691292165*^9}, {3.815776771012426*^9, 3.81577677364816*^9}, {
   3.8157784579645033`*^9, 3.8157784987483063`*^9}, {3.815778567942034*^9, 
   3.815778581641811*^9}, {3.815779852412196*^9, 3.8157798587457542`*^9}, {
   3.815780092956242*^9, 3.815780095797936*^9}, {3.8157803476249847`*^9, 
   3.815780364865279*^9}, 3.8157804533735533`*^9, {3.815780584669012*^9, 
   3.815780594001257*^9}, {3.815780665455079*^9, 3.815780674865533*^9}, {
   3.8157809483083572`*^9, 3.81578095025025*^9}, 
   3.819719360872426*^9},ExpressionUUID->"61d6e73d-fe1c-47e5-b92b-\
37662d3f48de"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",
 CellChangeTimes->{{3.770187359075592*^9, 
  3.770187362633389*^9}},ExpressionUUID->"cef33477-b16d-4f6d-98d6-\
aaaf8e0737f5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"if", " ", "only", " ", "one", " ", "plotvar", " ", "given"}], 
    ",", " ", 
    RowBox[{
     RowBox[{"doesn", "'"}], "t", " ", "need", " ", "to", " ", "be", " ", 
     "in", " ", "a", " ", "list"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"PlotDynamics", "[", 
      RowBox[{
       RowBox[{"sol_", "?", "RuleListQ"}], ",", 
       RowBox[{"plotvarin_Symbol", ":", "All"}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"PlotDynamics", "[", 
      RowBox[{"sol", ",", 
       RowBox[{"{", "plotvarin", "}"}], ",", "opts"}], "]"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"if", " ", "only", " ", "a", " ", "rule", " ", "given"}], ",", 
     " ", 
     RowBox[{
      RowBox[{"doesn", "'"}], "t", " ", "need", " ", "to", " ", "be", " ", 
      "in", " ", "a", " ", "list"}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"PlotDynamics", "[", 
      RowBox[{"sol_Rule", ",", "plotvarsin_List", ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"PlotDynamics", "[", 
      RowBox[{
       RowBox[{"{", "sol", "}"}], ",", "plotvarsin", ",", "opts"}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"PlotDynamics", "[", 
      RowBox[{"sol_Rule", ",", "plotvarin_Symbol", ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"PlotDynamics", "[", 
      RowBox[{
       RowBox[{"{", "sol", "}"}], ",", 
       RowBox[{"{", "plotvarin", "}"}], ",", "opts"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"PlotDynamics", "[", 
      RowBox[{"sol_Rule", ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"PlotDynamics", "[", 
      RowBox[{
       RowBox[{"{", "sol", "}"}], ",", "All", ",", "opts"}], "]"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"thread", " ", "over", " ", "sols"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"PlotDynamics", "[", 
      RowBox[{
       RowBox[{"list_", "?", "RuleListListQ"}], ",", "rest___"}], "]"}], ":=", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"PlotDynamics", "[", 
         RowBox[{"#", ",", "rest"}], "]"}], "&"}], "/@", "list"}], "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"PlotInterpolatingFunction", "[", 
      RowBox[{"sol_", ",", "plotvarsin___", ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
     RowBox[{"PlotDynamics", "[", 
      RowBox[{"sol", ",", "plotvarsin", ",", "opts", ",", 
       RowBox[{"AxesLabel", "\[Rule]", "None"}]}], "]"}]}], ";"}]}]}]], "Code",\

 CellChangeTimes->{{3.6947790816327868`*^9, 3.694779103255664*^9}, {
   3.7701873880964813`*^9, 3.77018740233455*^9}, {3.793918354357768*^9, 
   3.793918391604932*^9}, {3.793980813794703*^9, 3.793980827541067*^9}, {
   3.793981134734708*^9, 3.7939811602784224`*^9}, {3.793981251505044*^9, 
   3.793981259215467*^9}, {3.793981443595338*^9, 3.793981464673636*^9}, {
   3.794010726251096*^9, 3.794010818576934*^9}, 3.794010900920224*^9, {
   3.7947448544773817`*^9, 3.794744884525454*^9}, {3.794744955285426*^9, 
   3.794744976093326*^9}},ExpressionUUID->"fe1c920e-c6dd-43bd-a208-\
6fbd600e9a4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.770187365714447*^9, 
  3.770187367734182*^9}},ExpressionUUID->"4dc05325-9f15-4fed-8006-\
fa12ef487f25"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "PlotDynamics", "]"}], "=", "\n", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Logged", "\[Rule]", "False"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"PlotMarkers", "\[Rule]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"LineStyles", "\[Rule]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"PlotType", "\[Rule]", "\"\<Plot\>\""}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", "\n", 
      RowBox[{"Histogram", "\[Rule]", "False"}], ",", 
      RowBox[{"HistogramPoints", "\[Rule]", 
       RowBox[{"10", "^", "5"}]}], ",", 
      RowBox[{"HistogramScale", "\[Rule]", "0.1"}], ",", 
      RowBox[{"HistogramPosition", "\[Rule]", "0.08"}], ",", 
      RowBox[{"HistogramOpts", "\[Rule]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"HistogramOpacity", "\[Rule]", "0.6"}]}], "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PlotInterpolatingFunction", "]"}], "=", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Logged", "\[Rule]", "False"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"LineStyles", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"PlotType", "\[Rule]", "\"\<Plot\>\""}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", "\n", 
     RowBox[{"Histogram", "\[Rule]", "False"}], ",", 
     RowBox[{"HistogramPoints", "\[Rule]", 
      RowBox[{"10", "^", "5"}]}], ",", 
     RowBox[{"HistogramScale", "\[Rule]", "0.1"}], ",", 
     RowBox[{"HistogramPosition", "\[Rule]", "0.08"}], ",", 
     RowBox[{"HistogramOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"HistogramOpacity", "\[Rule]", "0.6"}]}], "}"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.770187374817916*^9, 3.7701873791637373`*^9}, {
   3.794076017422456*^9, 3.7940760365579653`*^9}, {3.807622126618088*^9, 
   3.80762214252149*^9}, {3.813010526487658*^9, 3.813010529973404*^9}, {
   3.813010657717041*^9, 3.81301065798221*^9}, 3.8130108000846567`*^9, {
   3.813092644098105*^9, 3.81309267384363*^9}, {3.813093373175331*^9, 
   3.813093391510334*^9}, {3.8130953107713327`*^9, 3.81309532407481*^9}, 
   3.813095430557248*^9, 3.813095625824977*^9, 3.813095707779735*^9, {
   3.813095742469685*^9, 3.813095744210433*^9}, {3.813442262033164*^9, 
   3.813442265665598*^9}, {3.813447881565976*^9, 3.813447886837578*^9}, {
   3.813449887908132*^9, 3.8134498896671762`*^9}, {3.8134499736325407`*^9, 
   3.813449977432898*^9}, {3.8134501009440193`*^9, 3.813450101639243*^9}, 
   3.814370297697899*^9, {3.8143891363582973`*^9, 
   3.814389141906192*^9}},ExpressionUUID->"021901a2-b2eb-4c81-9563-\
bdc3366f649b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["RuleListPlot", "Subsection",
 CellChangeTimes->{{3.787499914917968*^9, 
  3.787499917813352*^9}},ExpressionUUID->"5a82203c-71d2-4cbb-b6eb-\
6b921a7c7e4b"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.7874999221943903`*^9, 
  3.7874999226385393`*^9}},ExpressionUUID->"580b57ff-fa7b-43ce-945d-\
82984af79ee4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleListPlot", "::", "usage"}], "=", "\n", 
   "\"\<RuleListPlot[\!\(\*StyleBox[\"sol\", \"TI\"]\)] plots a two- or \
three-dimensional rule list.\nRuleListPlot[\!\(\*StyleBox[\"sol\", \"TI\"]\), \
\!\(\*StyleBox[\"vars\", \"TI\"]\)] plots \!\(\*StyleBox[\"vars\", \"TI\"]\).\
\nRuleListPlot[{\!\(\*SubscriptBox[StyleBox[\"sol\", \"TI\"], \"1\"]\), \
\!\(\*SubscriptBox[StyleBox[\"sol\", \"TI\"], \"2\"]\), \[Ellipsis]}] plots \
multiple rule lists.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.78749992644551*^9, 3.78749992931301*^9}, {
   3.78750052832353*^9, 3.7875005287387877`*^9}, {3.7875005697519836`*^9, 
   3.787500582259738*^9}, {3.787500750821693*^9, 3.787500830910192*^9}, {
   3.787500885790709*^9, 3.787500892726677*^9}, 3.78767349062764*^9, {
   3.787680292480987*^9, 
   3.787680295615917*^9}},ExpressionUUID->"23dc5efb-32f0-4e53-83d1-\
02008dc8f3d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.787500895894462*^9, 
  3.787500898718338*^9}},ExpressionUUID->"9fd57180-3556-4df5-b2c4-\
b80f02687613"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleListPlot", "[", 
    RowBox[{
     RowBox[{"solsin_", "?", "RuleListListQ"}], ",", 
     RowBox[{"varsin_List", ":", 
      RowBox[{"{", "All", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<RuleListPlot\>\"", "]"}]}], ",", "\n", 
       
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "plotstyle", ",", 
       "plotmarkers", ",", "axeslabel", ",", "plotrange", ",", "\n", 
       "stablemarker", ",", "unstablemarker", ",", "indeterminatemarker", ",",
        "\n", "parametricplotopts", ",", "parametricplot3dopts", ",", 
       "listplotopts", ",", "listlineplotopts", ",", "listpointplot3dopts", 
       ",", "listlineplot3dopts", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "sol", ",", 
       "sols", ",", "lookup", ",", "vars"}], "}"}], ",", "\n", "\t", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
           RowBox[{
            RowBox[{"Message", "[", 
             RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
            RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";"}], "*)"}],
        "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"plotstyle", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PlotStyle", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "RuleListPlot", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"plotstyle", "===", "Automatic"}], ",", 
          RowBox[{"plotstyle", "=", 
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}]}]}], "]"}], ";", 
        "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"ListQ", "[", "plotstyle", "]"}]}], ",", 
          RowBox[{"plotstyle", "=", 
           RowBox[{"{", "plotstyle", "}"}]}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"stablemarker", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"StableMarker", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "RuleListPlot", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"unstablemarker", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"UnstableMarker", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "RuleListPlot", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"indeterminatemarker", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"IndeterminateMarker", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "RuleListPlot", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"plotmarkers", "=", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{"PlotMarkers", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "RuleListPlot", "]"}]}], "}"}], 
             "]"}]}], "]"}], "/.", "\n", "\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"True", "\[Rule]", "stablemarker"}], ",", 
            RowBox[{"False", "\[Rule]", "unstablemarker"}], ",", 
            RowBox[{"Indeterminate", "\[Rule]", "indeterminatemarker"}]}], 
           "}"}]}]}], ";", "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"plotmarkers", "===", "Automatic"}], ",", "\n", "\t", 
          RowBox[{"plotmarkers", "=", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\[FilledCircle]\>\"", ",", "\"\<\[FilledSquare]\>\"", ",", 
             "\"\<\[FilledDiamond]\>\"", ",", "\"\<\[FilledUpTriangle]\>\"", 
             ",", "\"\<\[FilledDownTriangle]\>\"", ",", 
             "\"\<\[EmptyCircle]\>\"", ",", "\"\<\[EmptySquare]\>\"", ",", 
             "\"\<\[EmptyDiamond]\>\"", ",", "\"\<\[EmptyUpTriangle]\>\"", 
             ",", "\"\<\[EmptyDownTriangle]\>\""}], "}"}]}], ",", "\n", "\t", 
          
          RowBox[{"plotmarkers", "===", "\"\<OpenMarkers\>\""}], ",", "\n", 
          "\t", 
          RowBox[{"plotmarkers", "=", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\[EmptyCircle]\>\"", ",", "\"\<\[EmptySquare]\>\"", ",", 
             "\"\<\[EmptyDiamond]\>\"", ",", "\"\<\[EmptyUpTriangle]\>\"", 
             ",", "\"\<\[EmptyDownTriangle]\>\""}], "}"}]}], ",", "\n", "\t", 
          
          RowBox[{"plotmarkers", "===", "\"\<FilledMarkers\>\""}], ",", "\n", 
          "\t", 
          RowBox[{"plotmarkers", "=", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\[FilledCircle]\>\"", ",", "\"\<\[FilledSquare]\>\"", ",", 
             "\"\<\[FilledDiamond]\>\"", ",", "\"\<\[FilledUpTriangle]\>\"", 
             ",", "\"\<\[FilledDownTriangle]\>\""}], "}"}]}]}], "\n", "]"}], 
        ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", "plotmarkers", "]"}], ";"}], "*)"}], "\n", 
        "\n", 
        RowBox[{"axeslabel", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"AxesLabel", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "RuleListPlot", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"plotrange", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PlotRange", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "RuleListPlot", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", "\n", 
        RowBox[{"parametricplotopts", "=", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "RuleListPlot", "]"}]}], "}"}], "]"}], 
           ",", 
           RowBox[{"Options", "[", "ParametricPlot", "]"}]}], "]"}]}], ";", 
        "\n", 
        RowBox[{"parametricplot3dopts", "=", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "RuleListPlot", "]"}]}], "}"}], "]"}], 
           ",", 
           RowBox[{"Options", "[", "ParametricPlot3D", "]"}]}], "]"}]}], ";", 
        "\n", 
        RowBox[{"listplotopts", "=", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "RuleListPlot", "]"}]}], "}"}], "]"}], 
           ",", 
           RowBox[{"Options", "[", "ListPlot", "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"listlineplotopts", "=", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "RuleListPlot", "]"}]}], "}"}], "]"}], 
           ",", 
           RowBox[{"Options", "[", "ListLinePlot", "]"}]}], "]"}]}], ";", 
        "\n", 
        RowBox[{"listpointplot3dopts", "=", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "RuleListPlot", "]"}]}], "}"}], "]"}], 
           ",", 
           RowBox[{"Options", "[", "ListPointPlot3D", "]"}]}], "]"}]}], ";", 
        "\n", 
        RowBox[{"listlineplot3dopts", "=", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "RuleListPlot", "]"}]}], "}"}], "]"}], 
           ",", 
           RowBox[{"Options", "[", "MyListLinePlot3D", "]"}]}], "]"}]}], ";", 
        "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Set\[ScriptCapitalN]", "[", 
           RowBox[{
            RowBox[{"ExtractTraits", "[", 
             RowBox[{
             "solsin", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
              "]"}], ",", 
            RowBox[{"ExtractVariables", "[", 
             RowBox[{
             "solsin", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
              "]"}]}], "]"}], ";", "\n", 
          RowBox[{"If", "[", 
           RowBox[{"Global`debug", ",", 
            RowBox[{"Print", "[", 
             RowBox[{"func", ",", "\"\<: \[ScriptCapitalN]=\>\"", ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "]"}]}], 
           "]"}], ";"}], "*)"}], "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"find", " ", "vars", " ", "for", " ", "plotting"}], " ", 
         "*)"}], "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"varsin", "===", 
           RowBox[{"{", "All", "}"}]}], ",", "\n", "\t", 
          RowBox[{"vars", "=", 
           RowBox[{"solsin", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}]}], 
          ",", "\n", "\t", 
          RowBox[{"vars", "=", "varsin"}]}], "\n", "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<vars=\>\"", ",", "vars"}], "]"}], ";"}], "*)"}], "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "vars", "]"}], "\[NotEqual]", "2"}], "&&", 
           
           RowBox[{
            RowBox[{"Length", "[", "vars", "]"}], "\[NotEqual]", "3"}]}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"RuleListPlot", "::", "baddim"}], ",", 
             RowBox[{"Length", "[", "vars", "]"}]}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "split", " ", "up", " ", "subscripted", " ", "variables", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"gcomps", " ", "&"}], " ", "gtraits"}], ")"}]}], " ", 
         "*)"}], "\n", 
        RowBox[{"lookup", "=", 
         RowBox[{"LookUp", "[", 
          RowBox[{
          "vars", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<gcomp\>\"", ",", "\"\<gtrait\>\""}], "}"}], ",", 
             RowBox[{
             "lookup", "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}]}], "]"}], "&&", 
           RowBox[{
            RowBox[{"Length", "[", "lookup", "]"}], "\[Equal]", "3"}]}], ",", 
          "\n", "\t", 
          RowBox[{"sols", "=", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"GatherBy", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{
                   RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], 
                   "&"}]}], "]"}], "&"}], "/@", "solsin"}], ",", "1"}], "]"}],
             "/.", 
            RowBox[{"Replace", "[", 
             RowBox[{"vars", ",", 
              RowBox[{"var_", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["var", "_"], "\[Rule]", "var"}], ")"}]}], ",", 
              "1"}], "]"}]}]}], ",", "\n", "\t", 
          RowBox[{"sols", "=", "solsin"}]}], "\n", "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", "sols", "]"}], ";"}], "*)"}], "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"axeslabel", "===", "Automatic"}], ",", 
          RowBox[{"axeslabel", "=", "vars"}]}], "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<axeslabel=\>\"", ",", "axeslabel"}], "]"}], ";"}], 
         "*)"}], "\n", "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "vars", "]"}], "\[Equal]", "2"}], ",", "\n",
           "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"plotrange", "===", "Automatic"}], ",", "\n", "\t\t", 
             RowBox[{"(*", 
              RowBox[{"plotrange", "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"LookUp", "[", 
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}], "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}], "===", "\"\<gcomp\>\""}], 
                    "||", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"LookUp", "[", 
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}], "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}], "===", 
                    "\"\<pcomp\>\""}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "All"}], "}"}], ",", "All"}], "]"}], 
                 ",", "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"LookUp", "[", 
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "]"}], "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}], "===", "\"\<gcomp\>\""}], 
                    "||", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"LookUp", "[", 
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "]"}], "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}], "===", 
                    "\"\<pcomp\>\""}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "All"}], "}"}], ",", "All"}], "]"}]}], 
                "}"}]}], "*)"}], "\n", "\t\t", 
             RowBox[{"plotrange", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"comptype", "[", 
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}], "===", 
                   "\"\<Extensive\>\""}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "All"}], "}"}], ",", "All"}], "]"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"comptype", "[", 
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "]"}], "===", 
                   "\"\<Extensive\>\""}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "All"}], "}"}], ",", "All"}], "]"}]}], 
               "}"}]}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"\"\<plotrange=\>\"", ",", "plotrange"}], "]"}], ";"}], 
            "*)"}], "\n", "\t", 
           RowBox[{"Return", "[", 
            RowBox[{"Show", "[", 
             RowBox[{
              RowBox[{"Table", "[", "\n", "\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{"sol", "=", 
                  RowBox[{
                  "sols", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}]}], ";", "\n", "\t\t", 
                 RowBox[{"Which", "[", "\n", "\t\t\t", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Head", "[", 
                    RowBox[{"sol", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}],
                     "===", "InterpolatingFunction"}], ",", "\n", "\t\t\t", 
                   RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<parametricplotopts=\>\"", ",", 
                    "parametricplotopts"}], "]"}], ";"}], "*)"}], "\n", 
                   "\t\t\t", 
                   RowBox[{"ParametricPlot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "[", "t", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "t", "]"}]}], "}"}], "/.",
                     "sol"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", 
                    RowBox[{"InitialTime", "[", "sol", "]"}], ",", 
                    RowBox[{"FinalTime", "[", "sol", "]"}]}], "}"}], ",", 
                    "\n", "\t\t\t\t", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"ModPart", "[", 
                    RowBox[{"plotstyle", ",", "i"}], "]"}]}], ",", 
                    RowBox[{"PlotRange", "\[Rule]", "plotrange"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "parametricplotopts"}], "]"}]}],
                     "]"}], ",", "\n", "\t\t\t", 
                   RowBox[{
                    RowBox[{"Head", "[", 
                    RowBox[{"sol", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}],
                     "===", "List"}], ",", "\n", "\t\t\t", 
                   RowBox[{"ListLinePlot", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"vars", "/.", "sol"}], ")"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "All", ",", "2"}], 
                    "\[RightDoubleBracket]"}], "]"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"ModPart", "[", 
                    RowBox[{"plotstyle", ",", "i"}], "]"}]}], ",", "\n", 
                    "\t\t\t\t", 
                    RowBox[{"PlotRange", "\[Rule]", "plotrange"}], ",", 
                    RowBox[{"PlotMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "listlineplotopts"}], "]"}]}], 
                    "]"}], ",", "\n", "\t\t\t", 
                   RowBox[{
                    RowBox[{"Head", "[", 
                    RowBox[{"sol", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}],
                     "===", "TemporalData"}], ",", "\n", "\t\t\t", 
                   RowBox[{"ListLinePlot", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "/.", "sol"}], ")"}], "[", "\"\<Values\>\"", 
                    "]"}], "&"}], ",", "vars"}], "]"}], "]"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"ModPart", "[", 
                    RowBox[{"plotstyle", ",", "i"}], "]"}]}], ",", "\n", 
                    "\t\t\t\t", 
                    RowBox[{"PlotRange", "\[Rule]", "plotrange"}], ",", 
                    RowBox[{"PlotMarkers", "\[Rule]", "None"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "listlineplotopts"}], "]"}]}], 
                    "]"}], ",", "\n", "\t\t\t", "Else", ",", "\n", "\t\t\t", 
                   RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{"\"\<listplotopts=\>\"", ",", "listplotopts"}], 
                    "]"}], ";"}], "*)"}], "\n", "\t\t\t", 
                   RowBox[{"ListPlot", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"vars", "/.", "sol"}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"ModPart", "[", 
                    RowBox[{"plotstyle", ",", "i"}], "]"}]}], ",", 
                    RowBox[{"PlotMarkers", "\[Rule]", 
                    RowBox[{"ModPart", "[", 
                    RowBox[{"plotmarkers", ",", "i"}], "]"}]}], ",", "\n", 
                    "\t\t\t\t", 
                    RowBox[{"PlotRange", "\[Rule]", "plotrange"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "listplotopts"}], "]"}]}], 
                    "]"}]}], "\n", "\t\t", "]"}]}], "\n", "\t", ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"Length", "[", "sols", "]"}]}], "}"}]}], "]"}], ",", 
              RowBox[{"AxesLabel", "\[Rule]", "axeslabel"}], ",", 
              RowBox[{"FrameLabel", "\[Rule]", "axeslabel"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "plotrange"}]}], "]"}], "]"}]}],
           ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Length", "[", "vars", "]"}], "\[Equal]", "3"}], ",", "\n",
           "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"plotrange", "===", "Automatic"}], ",", "\n", "\t\t", 
             RowBox[{"plotrange", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"comptype", "[", 
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}], "===", 
                   "\"\<Extensive\>\""}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "All"}], "}"}], ",", "All"}], "]"}], ",",
                 "\n", "\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"comptype", "[", 
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "]"}], "===", 
                   "\"\<Extensive\>\""}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "All"}], "}"}], ",", "All"}], "]"}], ",",
                 "\n", "\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"comptype", "[", 
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "]"}], "===", 
                   "\"\<Extensive\>\""}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "All"}], "}"}], ",", "All"}], "]"}]}], 
               "}"}]}]}], "\n", "\t\t", 
            RowBox[{"(*", 
             RowBox[{"plotrange", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"LookUp", "[", 
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}], "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}], "===", "\"\<gcomp\>\""}], 
                   "||", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"LookUp", "[", 
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}], "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}], "===", 
                    "\"\<pcomp\>\""}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "All"}], "}"}], ",", "All"}], "]"}], ",",
                 "\n", "\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"LookUp", "[", 
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "]"}], "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}], "===", "\"\<gcomp\>\""}], 
                   "||", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"LookUp", "[", 
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "]"}], "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}], "===", 
                    "\"\<pcomp\>\""}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "All"}], "}"}], ",", "All"}], "]"}], ",",
                 "\n", "\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"LookUp", "[", 
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "]"}], "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}], "===", "\"\<gcomp\>\""}], 
                   "||", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"LookUp", "[", 
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "]"}], "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}], "===", 
                    "\"\<pcomp\>\""}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "All"}], "}"}], ",", "All"}], "]"}]}], 
               "}"}]}], "*)"}], "\n", "\t", "]"}], ";", "\n", "\t", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"\"\<plotrange=\>\"", ",", "plotrange"}], "]"}], ";"}], 
            "*)"}], "\n", "\t", 
           RowBox[{"Return", "[", 
            RowBox[{"Show", "[", 
             RowBox[{
              RowBox[{"Table", "[", "\n", "\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{"sol", "=", 
                  RowBox[{
                  "sols", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}]}], ";", "\n", "\t\t", 
                 RowBox[{"Which", "[", "\n", "\t\t\t", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Head", "[", 
                    RowBox[{"sol", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}],
                     "===", "InterpolatingFunction"}], ",", "\n", "\t\t\t", 
                   RowBox[{"ParametricPlot3D", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "[", "t", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "t", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "[", "t", "]"}]}], "}"}], "/.",
                     "sol"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", 
                    RowBox[{"InitialTime", "[", "sol", "]"}], ",", 
                    RowBox[{"FinalTime", "[", "sol", "]"}]}], "}"}], ",", 
                    "\n", "\t\t\t\t", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"ModPart", "[", 
                    RowBox[{"plotstyle", ",", "i"}], "]"}]}], ",", 
                    RowBox[{"PlotRange", "\[Rule]", "plotrange"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "parametricplot3dopts"}], 
                    "]"}]}], "]"}], ",", "\n", "\t\t\t", 
                   RowBox[{
                    RowBox[{"Head", "[", 
                    RowBox[{"sol", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}],
                     "===", "List"}], ",", "\n", "\t\t\t", 
                   RowBox[{"MyListLinePlot3D", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"vars", "/.", "sol"}], "]"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"ModPart", "[", 
                    RowBox[{"plotstyle", ",", "i"}], "]"}]}], ",", "\n", 
                    "\t\t\t\t", 
                    RowBox[{"PlotRange", "\[Rule]", "plotrange"}], ",", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"PlotMarkers", "\[Rule]", "None"}], ","}], "*)"}], 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "listlineplot3dopts"}], "]"}]}],
                     "]"}], ",", "\n", "\t\t\t", 
                   RowBox[{
                    RowBox[{"Head", "[", 
                    RowBox[{"sol", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}],
                     "===", "TemporalData"}], ",", "\n", "\t\t\t", 
                   RowBox[{"MyListLinePlot3D", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "/.", "sol"}], ")"}], "[", "\"\<Values\>\"", 
                    "]"}], "&"}], ",", "vars"}], "]"}], "]"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"ModPart", "[", 
                    RowBox[{"plotstyle", ",", "i"}], "]"}]}], ",", "\n", 
                    "\t\t\t\t", 
                    RowBox[{"PlotRange", "\[Rule]", "plotrange"}], ",", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"PlotMarkers", "\[Rule]", "None"}], ","}], "*)"}], 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "listlineplot3dopts"}], "]"}]}],
                     "]"}], ",", "\n", "\t\t\t", "Else", ",", "\n", "\t\t\t", 
                   
                   RowBox[{"ListPointPlot3D", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"vars", "/.", "sol"}], "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"ModPart", "[", 
                    RowBox[{"plotstyle", ",", "i"}], "]"}]}], ",", 
                    RowBox[{"PlotRange", "\[Rule]", "plotrange"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "listpointplot3dopts"}], 
                    "]"}]}], "]"}]}], "\n", "\t\t\t\t", 
                  RowBox[{"(*", 
                   RowBox[{"/.", 
                    RowBox[{
                    RowBox[{"Point", "[", "a___", "]"}], "\[RuleDelayed]", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"ModPart", "[", 
                    RowBox[{"plotmarkers", ",", "i"}], "]"}], ",", "a"}], 
                    "]"}]}]}], "*)"}], "\n", "\t\t", "]"}]}], "\n", "\t", ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"Length", "[", "sols", "]"}]}], "}"}]}], "]"}], ",", 
              RowBox[{"AxesLabel", "\[Rule]", "axeslabel"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "plotrange"}]}], "]"}], 
            "]"}]}]}], "\n", "]"}], ";"}]}], "\n", "\n", "]"}]}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.787500901719795*^9, 3.787500901724001*^9}, {
   3.787501264661449*^9, 3.7875012805892067`*^9}, {3.7875015872803173`*^9, 
   3.787501591672102*^9}, {3.787504138479166*^9, 3.7875041894943323`*^9}, {
   3.787504233991659*^9, 3.787504237463374*^9}, 3.787504306956737*^9, {
   3.787504567711994*^9, 3.787504613161132*^9}, {3.7875049067489853`*^9, 
   3.78750491578058*^9}, 3.7875051707273893`*^9, 3.787505303726404*^9, {
   3.7875053598714037`*^9, 3.78750540210351*^9}, {3.787507361331086*^9, 
   3.787507364697976*^9}, {3.7875078156636343`*^9, 3.787507816543283*^9}, {
   3.787512396521821*^9, 3.7875124066832037`*^9}, 3.7875128874101677`*^9, {
   3.787528128533202*^9, 3.7875281398424377`*^9}, {3.7875281759236937`*^9, 
   3.7875282127722197`*^9}, 3.7875282527227488`*^9, {3.787528444533531*^9, 
   3.787528542415618*^9}, {3.787528880016673*^9, 3.7875289022717047`*^9}, {
   3.787528952586567*^9, 3.7875289672798777`*^9}, {3.787529059249999*^9, 
   3.787529079164708*^9}, {3.7875301035685377`*^9, 3.7875301316768217`*^9}, {
   3.787530224262044*^9, 3.7875302256075287`*^9}, {3.7875302579793158`*^9, 
   3.787530282137412*^9}, {3.787531820638143*^9, 3.787531835009223*^9}, {
   3.787532580642927*^9, 3.787532616931753*^9}, {3.787532968287065*^9, 
   3.787532972837208*^9}, {3.787574060899796*^9, 3.78757407054381*^9}, {
   3.787574134408606*^9, 3.787574160109831*^9}, 3.787574199334215*^9, {
   3.7875744725905933`*^9, 3.787574508763846*^9}, {3.787574557545168*^9, 
   3.7875745841982517`*^9}, {3.787574970639862*^9, 3.787574973996476*^9}, {
   3.7875751221033287`*^9, 3.787575133438793*^9}, 3.787575280823246*^9, 
   3.7875753300161324`*^9, {3.78757537723355*^9, 3.7875754923892307`*^9}, {
   3.787576017886484*^9, 3.787576050504835*^9}, {3.7875761267459297`*^9, 
   3.7875761278726273`*^9}, 3.787576201657073*^9, {3.787578598566033*^9, 
   3.787578665663457*^9}, {3.787578738462919*^9, 3.7875787418303137`*^9}, 
   3.787578779360058*^9, {3.78757881683692*^9, 3.787578819439475*^9}, 
   3.787580352387759*^9, {3.7875803910761337`*^9, 3.787580491774576*^9}, {
   3.7875805620068483`*^9, 3.787580611390231*^9}, {3.787580720160453*^9, 
   3.787580764641069*^9}, {3.787580864207962*^9, 3.787581026162611*^9}, {
   3.787581155260008*^9, 3.7875811687623053`*^9}, {3.7875812135958433`*^9, 
   3.787581214594545*^9}, 3.7875813311061897`*^9, {3.7875860537861*^9, 
   3.787586054809835*^9}, {3.787586114298996*^9, 3.787586152354974*^9}, {
   3.7875868404552727`*^9, 3.787586840525141*^9}, {3.787586943456438*^9, 
   3.787586981312841*^9}, {3.787587087563272*^9, 3.787587098410828*^9}, {
   3.7875885990638847`*^9, 3.7875885999903507`*^9}, {3.7875886595589857`*^9, 
   3.787588672568981*^9}, {3.787588714136808*^9, 3.787588717144598*^9}, 
   3.7875887954273157`*^9, {3.787589113179552*^9, 3.787589171213963*^9}, {
   3.787589835889112*^9, 3.787589855987668*^9}, {3.78759008542197*^9, 
   3.787590125311702*^9}, {3.787591443068727*^9, 3.7875914507741413`*^9}, {
   3.7875918352467413`*^9, 3.7875918447104473`*^9}, {3.787591881735077*^9, 
   3.78759188646972*^9}, {3.787592002254891*^9, 3.787592015417153*^9}, {
   3.787592058681899*^9, 3.7875920592085533`*^9}, {3.7876537924041357`*^9, 
   3.7876538097793922`*^9}, 3.787666137100095*^9, {3.787675464196354*^9, 
   3.787675482550935*^9}, 3.7877475744010687`*^9, {3.787753350133457*^9, 
   3.7877534171470337`*^9}, {3.78775378767269*^9, 3.787753792721814*^9}, {
   3.787753957694219*^9, 3.787754001553938*^9}, {3.787754283086804*^9, 
   3.787754324501687*^9}, {3.794137240436783*^9, 3.794137240444448*^9}, {
   3.8307760597845716`*^9, 3.8307760605288057`*^9}, {3.8307769558193502`*^9, 
   3.830776984435234*^9}, {3.830782845740583*^9, 
   3.8307828559749517`*^9}},ExpressionUUID->"cc02d15c-de27-45d1-aa6e-\
e68e8c35077b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",
 CellChangeTimes->{{3.787501314475175*^9, 
  3.787501317146351*^9}},ExpressionUUID->"8926fbef-1d43-42a0-9009-\
3508cadbcafb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleListPlot", "[", 
    RowBox[{
     RowBox[{"sol_", "?", "RuleListQ"}], ",", "rest___"}], "]"}], ":=", 
   RowBox[{"RuleListPlot", "[", 
    RowBox[{
     RowBox[{"{", "sol", "}"}], ",", "rest"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.78749277849233*^9, 3.78749281490476*^9}, {
  3.787492900499502*^9, 
  3.7874929064255*^9}},ExpressionUUID->"d0d5440a-9239-46b6-b8cf-37e93caf2f4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.787501327530854*^9, 
  3.787501328298284*^9}},ExpressionUUID->"9f29c44c-f393-4122-ba9e-\
b3a3dc3791be"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "RuleListPlot", "]"}], "=", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"PlotStyle", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", "\n", "\t", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Disk", "[", "]"}], "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "6.5"}], ",", 
         RowBox[{"AlignmentPoint", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], "}"}]}], ",", "\n", 
     "\t", 
     RowBox[{"StableMarker", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Black", ",", 
           RowBox[{"Disk", "[", "]"}]}], "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "6.5"}], ",", 
         RowBox[{"AlignmentPoint", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], "}"}]}], ",", "\n", 
     "\t", 
     RowBox[{"UnstableMarker", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"EdgeForm", "[", 
            RowBox[{"{", "Black", "}"}], "]"}], ",", 
           RowBox[{"FaceForm", "[", "White", "]"}], ",", 
           RowBox[{"Disk", "[", "]"}]}], "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "6.5"}], ",", 
         RowBox[{"AlignmentPoint", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], "}"}]}], ",", "\n", 
     "\t", 
     RowBox[{"IndeterminateMarker", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"EdgeForm", "[", 
            RowBox[{"{", "Black", "}"}], "]"}], ",", 
           RowBox[{"FaceForm", "[", "Gray", "]"}], ",", 
           RowBox[{"Disk", "[", "]"}]}], "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "6.5"}], ",", 
         RowBox[{"AlignmentPoint", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], "}"}]}], ",", "\n", 
     "\t", 
     RowBox[{"PlotRangeClipping", "\[Rule]", "False"}], ",", 
     RowBox[{"BoxRatios", "\[Rule]", "1"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{"1", "/", "GoldenRatio"}]}]}], "\n", "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.78736250834746*^9, 3.78736254045562*^9}, {
   3.787408352901496*^9, 3.787408360053959*^9}, {3.787410235541479*^9, 
   3.787410241598185*^9}, {3.787419831019977*^9, 3.787419835057035*^9}, {
   3.787423255453384*^9, 3.7874232561422987`*^9}, {3.787488379821196*^9, 
   3.7874883843236094`*^9}, 3.787492140450397*^9, {3.787497286127331*^9, 
   3.7874972921900587`*^9}, {3.7875077785062428`*^9, 3.787507780432378*^9}, {
   3.787512759897767*^9, 3.787512771138749*^9}, {3.787528310351479*^9, 
   3.787528353076065*^9}, {3.7875290431523323`*^9, 3.787529052125415*^9}, {
   3.787530178535309*^9, 3.7875301809294853`*^9}, 3.787530216160533*^9, {
   3.787532786518793*^9, 3.787532799300123*^9}, {3.787532916900177*^9, 
   3.787532920518817*^9}, {3.787569629218863*^9, 3.787569629367869*^9}, {
   3.787573985498416*^9, 3.78757398815327*^9}, {3.787574981287614*^9, 
   3.787575021527335*^9}, {3.78757509631208*^9, 3.78757509673181*^9}, {
   3.787575341505731*^9, 3.7875753419620543`*^9}, {3.78757591436865*^9, 
   3.787575924615575*^9}, {3.787575970561048*^9, 3.787575981944211*^9}, {
   3.787576227138361*^9, 3.7875762438332157`*^9}, {3.787576358843906*^9, 
   3.7875763850161467`*^9}, {3.787576453037628*^9, 3.78757652428321*^9}, {
   3.787576584458632*^9, 3.787576598750012*^9}, {3.7875766528615847`*^9, 
   3.787576681278062*^9}, {3.787576751590427*^9, 3.7875768028131523`*^9}, {
   3.7875768464629383`*^9, 3.787576881047027*^9}, {3.7875769264553947`*^9, 
   3.787576979575289*^9}, {3.7875772217240877`*^9, 3.787577412674781*^9}, {
   3.7875774445614443`*^9, 3.7875775068107033`*^9}, {3.787577601228544*^9, 
   3.787577638076295*^9}, {3.787577707928317*^9, 3.7875777881928988`*^9}, {
   3.787577844255555*^9, 3.7875778727668056`*^9}, {3.7875779039644413`*^9, 
   3.787577932657098*^9}, {3.787578247218466*^9, 3.787578249369853*^9}, {
   3.787580666504203*^9, 3.787580668389921*^9}, {3.787678036304346*^9, 
   3.7876780387448063`*^9}},ExpressionUUID->"92636d25-691b-4293-8b55-\
f6c2a79a4d87"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Messages", "Subsubsection",
 CellChangeTimes->{{3.787501456339449*^9, 
  3.7875014578675957`*^9}},ExpressionUUID->"bab8ef3b-7be0-4a60-8b6e-\
bf6a512244f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleListPlot", "::", "baddim"}], "=", 
   "\"\<RuleListPlot requires two- or three-dimensional data (# of \
dimensions=`1`).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.787501459585704*^9, 3.787501470547846*^9}, {
  3.787501530236463*^9, 3.78750156400459*^9}, {3.787501896368977*^9, 
  3.78750189856776*^9}},ExpressionUUID->"2ba8f199-94e3-4dd2-ac1a-\
78fed489abdb"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["TrackRoot", "Subsection",
 CellChangeTimes->{{3.792081945596583*^9, 
  3.792081946729877*^9}},ExpressionUUID->"c916bf6d-e0ad-41a6-97f2-\
f08557c5c1f7"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.792082316098196*^9, 
  3.7920823165968323`*^9}},ExpressionUUID->"ec0c526c-2879-4a3b-8ebf-\
bce7d6cfe54b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TrackRoot", "::", "usage"}], "=", "\n", 
   "\"\<TrackRoot[\!\(\*StyleBox[\"eqns\", \"TI\"]\), {{\!\(\*StyleBox[\"x\", \
\"TI\"]\), \!\(\*SubscriptBox[StyleBox[\"x\", \"TI\"], \"0\"]\)}, \
{\!\(\*StyleBox[\"y\", \"TI\"]\), \!\(\*SubscriptBox[StyleBox[\"y\", \"TI\"], \
\"0\"]\)},...}, {\!\(\*StyleBox[\"par\", \"TI\"]\), \
\!\(\*StyleBox[\"initpar\", \"TI\"]\), \!\(\*StyleBox[\"parmin\", \"TI\"]\), \
\!\(\*StyleBox[\"parmax\", \"TI\"]\)}] tracks a root of \!\(\*StyleBox[\"eqns\
\", \"TI\"]\), varying \!\(\*StyleBox[\"par\", \"TI\"]\) from \!\(\*StyleBox[\
\"parmin\", \"TI\"]\) to \!\(\*StyleBox[\"parmax\", \"TI\"]\), starting at \!\
\(\*StyleBox[\"initpar\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.792082318838216*^9, 3.792082325192884*^9}, {
  3.7921130969874887`*^9, 3.792113173626642*^9}, {3.792176298967155*^9, 
  3.7921763013105307`*^9}, {3.7924226833292503`*^9, 3.792422685553852*^9}, {
  3.793962587430159*^9, 3.793962603068974*^9}, {3.793962954736147*^9, 
  3.793962956777444*^9}, {3.794067098941722*^9, 
  3.794067099885524*^9}},ExpressionUUID->"fa0588f8-82a7-46c8-b8f9-\
d89a6c8f4136"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Messages", "Subsubsection",
 CellChangeTimes->{{3.792084761751257*^9, 
  3.792084763854271*^9}},ExpressionUUID->"d02e11f1-967e-494e-8d20-\
363bb3d5cc8f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TrackRoot", "::", "badmtd"}], "=", 
   "\"\<The Method option should be a built-in method name (\\\"Direct\\\" or \
\\\"PseudoArcLength\\\")\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.7920847671289587`*^9, 3.792084776271222*^9}, {
  3.792112977112053*^9, 
  3.792112999998404*^9}},ExpressionUUID->"49e2f9fc-ad92-44ea-b820-\
f151af48c32a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.792082330731756*^9, 
  3.792082333973146*^9}},ExpressionUUID->"06d220ed-6529-45b8-83b4-\
c3bcb4666ba0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TrackRoot", "[", 
   RowBox[{"eqns_List", ",", "unksnics_List", ",", 
    RowBox[{"{", 
     RowBox[{"par_Symbol", ",", 
      RowBox[{"ipar_", "?", "NumericQ"}], ",", 
      RowBox[{"parmin_", "?", "NumericQ"}], ",", 
      RowBox[{"parmax_", "?", "NumericQ"}]}], "}"}], ",", 
    RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "options", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
     "method", ",", "findrootopts", ",", "ndsolveopts", ",", "smin", ",", 
      "smax", ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"other", " ", "variables"}], " ", "*)"}], 
      "\[IndentingNewLine]", "whenevents", ",", "unks", ",", "subrule", ",", 
      "breaks", ",", "isol", ",", "ics", ",", "deqns", ",", "j", ",", "sol", 
      ",", "s1", ",", "s2", ",", "res", ",", "respart", ",", "pts"}], "}"}], 
    ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"handle", " ", "options"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"method", "=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"Method", "/.", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"opts", ",", 
           RowBox[{"Options", "[", "TrackRoot", "]"}]}], "}"}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"findrootopts", "=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"FindRootOpts", "/.", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"opts", ",", 
           RowBox[{"Options", "[", "TrackRoot", "]"}]}], "}"}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ndsolveopts", "=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"NDSolveOpts", "/.", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"opts", ",", 
           RowBox[{"Options", "[", "TrackRoot", "]"}]}], "}"}], "]"}]}], 
       "]"}]}], ";", "\n", 
     RowBox[{"smin", "=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"SMin", "/.", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"opts", ",", 
           RowBox[{"Options", "[", "TrackRoot", "]"}]}], "}"}], "]"}]}], 
       "]"}]}], ";", "\n", 
     RowBox[{"smax", "=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"SMax", "/.", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"opts", ",", 
           RowBox[{"Options", "[", "TrackRoot", "]"}]}], "}"}], "]"}]}], 
       "]"}]}], ";", "\n", "\n", 
     RowBox[{"(*", " ", "jacobian", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"j", ":=", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{"eqns", ",", 
         RowBox[{"{", "unks", "}"}]}], "]"}], "/.", "subrule"}]}], ";", "\n", 
     "\[IndentingNewLine]", 
     RowBox[{"unks", "=", 
      RowBox[{"unksnics", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<unks=\>\"", ",", "unks"}], "]"}], ";"}], "*)"}], "\n", 
     "\n", 
     RowBox[{"(*", " ", 
      RowBox[{
      "use", " ", "FindRoot", " ", "to", " ", "improve", " ", "initial", " ", 
       "guess"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"isol", "=", 
      RowBox[{"FindRoot", "[", 
       RowBox[{
        RowBox[{"eqns", "/.", 
         RowBox[{"par", "\[Rule]", "ipar"}]}], ",", "unksnics", ",", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Sequence", "@@", "findrootopts"}], "]"}]}], "]"}]}], ";", 
     "\n", 
     RowBox[{"If", "[", 
      RowBox[{"Global`debug", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<isol=\>\"", ",", "isol"}], "]"}]}], "]"}], ";", "\n", 
     "\n", 
     RowBox[{"whenevents", "=", 
      RowBox[{"{", "}"}]}], ";", "\n", "\n", 
     RowBox[{"Which", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"method", "\[Equal]", "\"\<Direct\>\""}], ",", "\n", "\t", 
       RowBox[{
        RowBox[{"subrule", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"unk", "\[Rule]", 
            RowBox[{"unk", "[", "par", "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"unk", ",", "unks"}], "}"}]}], "]"}]}], ";", "\n", "\t", 
        RowBox[{"ics", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"unk", "[", "ipar", "]"}], "==", 
            RowBox[{"(", 
             RowBox[{"unk", "/.", "isol"}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"unk", ",", "unks"}], "}"}]}], "]"}]}], ";", "\n", "\t", 
        RowBox[{"deqns", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "\[Equal]", "0"}], "&"}], ",", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"eqns", "/.", "subrule"}], ",", "par"}], "]"}]}], 
          "]"}]}], ";", "\t", "\n", "\t", 
        RowBox[{"(*", " ", 
         RowBox[{"track", " ", "root", " ", "with", " ", "NDSolve"}], " ", 
         "*)"}], "\n", "\t", 
        RowBox[{"sol", "=", 
         RowBox[{
          RowBox[{"NDSolve", "[", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{"deqns", ",", "ics", ",", "whenevents"}], "]"}], ",", 
            "unks", ",", 
            RowBox[{"{", 
             RowBox[{"par", ",", "parmin", ",", "parmax"}], "}"}], ",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"Sequence", "@@", "ndsolveopts"}], "]"}]}], "]"}], 
          "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";", "\n",
         "\t", 
        RowBox[{"Return", "[", "sol", "]"}]}], "\n", "\t", ",", "\n", "\t", 
       RowBox[{"method", "\[Equal]", "\"\<PseudoArcLength\>\""}], ",", "\n", 
       "\t", 
       RowBox[{
        RowBox[{"subrule", "=", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"unk", "\[Rule]", 
              RowBox[{"unk", "[", "s", "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"unk", ",", "unks"}], "}"}]}], "]"}], ",", 
           RowBox[{"par", "\[Rule]", 
            RowBox[{"par", "[", "s", "]"}]}]}], "]"}]}], ";", "\n", "\t", 
        RowBox[{"ics", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"unk", "[", "0", "]"}], "==", 
              RowBox[{"(", 
               RowBox[{"unk", "/.", "isol"}], ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"unk", ",", "unks"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"par", "[", "0", "]"}], "\[Equal]", "ipar"}], "}"}]}], 
          "]"}]}], ";", "\n", "\t", 
        RowBox[{"whenevents", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"whenevents", ",", 
           RowBox[{"{", "\n", "\t\t", 
            RowBox[{
             RowBox[{"WhenEvent", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"par", "'"}], "[", "s", "]"}], "\[Equal]", "0"}], 
               ",", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"breaks", ",", "s"}], "]"}]}], "]"}], ",", "\n", 
             "\t\t", 
             RowBox[{"WhenEvent", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"par", "[", "s", "]"}], "\[Equal]", "parmax"}], ",", 
               "\"\<StopIntegration\>\""}], "]"}], ",", "\n", "\t\t", 
             RowBox[{"WhenEvent", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"par", "[", "s", "]"}], "\[Equal]", "parmin"}], ",", 
               "\"\<StopIntegration\>\""}], "]"}]}], "\n", "\t", "}"}]}], 
          "]"}]}], ";", "\n", "\t", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", "\"\<whenevents=\>\"", "]"}], ";", 
          RowBox[{"Print", "[", "whenevents", "]"}], ";"}], "*)"}], "\n", 
        "\t", 
        RowBox[{"deqns", "=", 
         RowBox[{"Join", "[", "\[IndentingNewLine]", "\t\t", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "\[Equal]", "0"}], "&"}], ",", 
             RowBox[{"eqns", "/.", "subrule"}]}], "]"}], ",", 
           "\[IndentingNewLine]", "\t\t", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Total", "[", 
                RowBox[{"D", "[", 
                 RowBox[{
                  RowBox[{"unks", "/.", "subrule"}], ",", "s"}], "]"}], "]"}],
                "^", "2"}], "+", 
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"par", "[", "s", "]"}], ",", "s"}], "]"}], "^", 
               "2"}]}], "\[Equal]", "1"}], "}"}], ",", "\[IndentingNewLine]", 
           "\t\t", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"unk", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"unk", ",", "unks"}], "}"}]}], "]"}], ",", 
           "\[IndentingNewLine]", "\t\t", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"par", "'"}], "[", "0", "]"}], "\[Equal]", "1"}], 
            "}"}]}], "\[IndentingNewLine]", "\t", "]"}]}], ";", "\n", "\t", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{
           RowBox[{"Print", "[", "\"\<deqns=\>\"", "]"}], ";", 
           RowBox[{"Print", "[", "deqns", "]"}]}]}], "]"}], ";", "\n", "\t", 
        RowBox[{"(*", " ", 
         RowBox[{"track", " ", "root", " ", "with", " ", "NDSolve"}], " ", 
         "*)"}], "\n", "\t", 
        RowBox[{"breaks", "=", 
         RowBox[{"{", "}"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"capture", " ", "turning", " ", "points"}], " ", "*)"}], 
        "\n", "\t", 
        RowBox[{"sol", "=", 
         RowBox[{
          RowBox[{"NDSolve", "[", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{"deqns", ",", "ics", ",", "whenevents"}], "]"}], ",", 
            RowBox[{"Append", "[", 
             RowBox[{"unks", ",", "par"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"s", ",", "smin", ",", "smax"}], "}"}], ",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"Sequence", "@@", "ndsolveopts"}], "]"}]}], "]"}], 
          "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"(*", " ", 
         RowBox[{"beginning", " ", "and", " ", "ending", " ", "s"}], " ", 
         "*)"}], "\n", "\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"s1", ",", "s2"}], "}"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"par", "/.", "sol"}], ")"}], "[", "\"\<Domain\>\"", "]"}],
           "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"(*", " ", 
         RowBox[{"add", " ", "endpoints", " ", "to", " ", "breaks"}], " ", 
         "*)"}], "\n", "\t", 
        RowBox[{"breaks", "=", 
         RowBox[{"Sort", "[", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"s1", ",", "s2"}], "}"}], ",", "breaks"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\t", 
        RowBox[{"(*", " ", 
         RowBox[{"construct", " ", "interpolatingfunctions", " ", 
          RowBox[{"(", 
           RowBox[{"unk", " ", "vs", " ", "par"}], ")"}], " ", "for", " ", 
          "each", " ", "segment", " ", 
          RowBox[{"(", 
           RowBox[{"between", " ", "breaks"}], ")"}]}], " ", "*)"}], "\n", 
        "\t", 
        RowBox[{"res", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", "\t", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"respart", "=", 
            RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", "\t\t", 
           RowBox[{"Do", "[", "\[IndentingNewLine]", "\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"pts", "=", 
               RowBox[{"Transpose", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"par", "/.", "sol"}], ")"}], "[", 
                    "\"\<Coordinates\>\"", "]"}], "\[LeftDoubleBracket]", "1",
                    "\[RightDoubleBracket]"}], ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"par", "/.", "sol"}], ")"}], "[", 
                   "\"\<ValuesOnGrid\>\"", "]"}], ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"unk", "/.", "sol"}], ")"}], "[", 
                   "\"\<ValuesOnGrid\>\"", "]"}]}], "}"}], "]"}]}], ";", 
              "\[IndentingNewLine]", "\t\t\t", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"respart", ",", 
                RowBox[{"unk", "\[Rule]", 
                 RowBox[{"Interpolation", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"pts", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "breaks", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "<=", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{"breaks", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}]}], 
                    "&"}]}], "]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", 
                    RowBox[{"2", ";;", "3"}]}], "\[RightDoubleBracket]"}], 
                   ",", 
                   RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Indeterminate", "&"}], ",", 
                    RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
                    "}"}]}]}], "]"}]}]}], "]"}], ";"}], "\[IndentingNewLine]",
              "\t\t", ",", 
             RowBox[{"{", 
              RowBox[{"unk", ",", "unks"}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\t\t", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"res", ",", "respart"}], "]"}], ";"}], 
          "\[IndentingNewLine]", "\t", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{
             RowBox[{"Length", "[", "breaks", "]"}], "-", "1"}]}], "}"}]}], 
         "]"}], ";", "\[IndentingNewLine]", "\t", 
        RowBox[{"Return", "[", "res", "]"}]}], "\n", "\t", ",", "\n", "\t", 
       "Else", ",", "\n", "\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"TrackRoot", "::", "badmtd"}], "]"}], ";", 
        RowBox[{"Return", "[", "$Failed", "]"}]}]}], "\n", "]"}], ";"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Code",
 CellChangeTimes->{{3.792082293478599*^9, 3.792082294690708*^9}, {
   3.792082897180333*^9, 3.792082962855348*^9}, {3.792083384876978*^9, 
   3.792083389402775*^9}, {3.79208443590401*^9, 3.792084459434153*^9}, {
   3.7920846245536118`*^9, 3.7920846521443377`*^9}, {3.79208471434976*^9, 
   3.7920847524902077`*^9}, {3.79208531652735*^9, 3.792085338606886*^9}, {
   3.792108957458539*^9, 3.792109004054038*^9}, {3.792109975972933*^9, 
   3.792110048234527*^9}, {3.7921102445619593`*^9, 3.79211034084619*^9}, {
   3.792110501938385*^9, 3.792110540903002*^9}, {3.792110679966239*^9, 
   3.792110692621729*^9}, {3.7921107748446283`*^9, 3.7921107841919622`*^9}, {
   3.7921108741220303`*^9, 3.792110882726708*^9}, {3.792110936968295*^9, 
   3.7921109449136543`*^9}, {3.792111620854663*^9, 3.7921116439175367`*^9}, {
   3.792111880235963*^9, 3.7921119152220287`*^9}, {3.7921120176895313`*^9, 
   3.79211215499679*^9}, {3.792112555989953*^9, 3.792112581899164*^9}, 
   3.792112831579233*^9, {3.792112911108679*^9, 3.792112917757841*^9}, {
   3.792113405565559*^9, 3.792113420045259*^9}, {3.7921135419871197`*^9, 
   3.792113548837288*^9}, {3.792113681197524*^9, 3.792113700769087*^9}, {
   3.792113775387373*^9, 3.79211382619917*^9}, 3.7921138728409033`*^9, 
   3.792114034201847*^9, {3.79214988443646*^9, 3.79214988503531*^9}, {
   3.7921504613183928`*^9, 3.792150483726385*^9}, {3.7921506825787888`*^9, 
   3.7921506834490433`*^9}, {3.7921535955418577`*^9, 3.792153597296914*^9}, 
   3.79217651556022*^9, 3.794137240452183*^9, {3.795950800662895*^9, 
   3.7959508150135107`*^9}, {3.7959510051931133`*^9, 
   3.795951014160039*^9}},ExpressionUUID->"cf9c1ac9-9160-4f81-aa35-\
05ed4e7f6e4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",
 CellChangeTimes->{{3.7921143878405323`*^9, 
  3.7921143896192493`*^9}},ExpressionUUID->"398da4aa-ca55-4b45-a6ff-\
696614ff1690"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"no", " ", "initpar"}], " ", "-", " ", 
     RowBox[{"assume", " ", "initpar"}]}], "=", "parmin"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TrackRoot", "[", 
      RowBox[{"eqns_List", ",", "unksnics_List", ",", 
       RowBox[{"{", 
        RowBox[{"par_Symbol", ",", 
         RowBox[{"parmin_", "?", "NumericQ"}], ",", 
         RowBox[{"parmax_", "?", "NumericQ"}]}], "}"}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
     RowBox[{"TrackRoot", "[", 
      RowBox[{"eqns", ",", "unksnics", ",", 
       RowBox[{"{", 
        RowBox[{"par", ",", "parmin", ",", "parmin", ",", "parmax"}], "}"}], 
       ",", "opts", ",", 
       RowBox[{"SMin", "\[Rule]", "0"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"one", " ", "equation"}], ",", " ", 
     RowBox[{"one", " ", "unknown"}], ",", " ", 
     RowBox[{"no", " ", 
      RowBox[{"{", "}"}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"TrackRoot", "[", 
      RowBox[{"eqns_", ",", "unksnics_List", ",", 
       RowBox[{"{", 
        RowBox[{"par_Symbol", ",", 
         RowBox[{"ipar_", "?", "NumericQ"}], ",", 
         RowBox[{"parmin_", "?", "NumericQ"}], ",", 
         RowBox[{"parmax_", "?", "NumericQ"}]}], "}"}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
     RowBox[{"TrackRoot", "[", 
      RowBox[{
       RowBox[{"{", "eqns", "}"}], ",", 
       RowBox[{"{", "unksnics", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"par", ",", "ipar", ",", "parmin", ",", "parmax"}], "}"}], 
       ",", "opts"}], "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.792114391380422*^9, 3.792114453471377*^9}, {
  3.7921507457437763`*^9, 3.792150747335795*^9}, {3.792151025221871*^9, 
  3.7921511086397123`*^9}, {3.7921511522317057`*^9, 3.7921511526075478`*^9}, {
  3.7921766150667677`*^9, 
  3.792176615659555*^9}},ExpressionUUID->"f83d1d9c-9d15-4d72-969c-\
74a819b3c6fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.7920823374849367`*^9, 
  3.7920823398708477`*^9}},ExpressionUUID->"7b206c77-18cd-4263-a8d0-\
89741d445cbd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "TrackRoot", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FindRootOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"NDSolveOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<PseudoArcLength\>\""}], ",", 
     RowBox[{"SMin", "\[Rule]", 
      RowBox[{"-", "100"}]}], ",", 
     RowBox[{"SMax", "\[Rule]", "100"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.792084388197598*^9, 
  3.792084391065733*^9}},ExpressionUUID->"bfbc5c29-ccb0-411c-b343-\
bc7b6dced32f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["PartsAboveDiagonal", "Subsection",
 CellChangeTimes->{{3.812062079689711*^9, 
  3.8120620840114107`*^9}},ExpressionUUID->"1eb52944-ff7c-415c-98f0-\
df1e3dc94173"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PartsAboveDiagonal", "[", 
   RowBox[{"arr_", "?", "MatrixQ"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "dim", "}"}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"dim", "=", 
      RowBox[{"Dimensions", "[", "arr", "]"}]}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"arr", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"dim", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"i", "+", "1"}], ",", 
          RowBox[{"dim", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}]}]}], "\n", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.812062085467245*^9, 
  3.8120620968740063`*^9}},ExpressionUUID->"f0b8b4ef-9bc0-4ec8-8e01-\
9b1f7adefc0e"]
}, Closed]],

Cell[CellGroupData[{

Cell["PrintMessage", "Subsection",
 CellChangeTimes->{{3.812063333406104*^9, 
  3.812063335013538*^9}},ExpressionUUID->"393278e2-30a5-4089-93e3-\
9fc7bbdc4862"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"by", " ", "xzczd"}], " ", "<", 
     RowBox[{"https", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", "a"}],
        "/", "233122"}], "/", "6358"}], ">"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"PrintMessage", "[", 
     RowBox[{"mess_", ",", " ", "val__"}], "]"}], " ", ":=", " ", 
    RowBox[{"Print", "@", 
     RowBox[{"StringForm", "[", 
      RowBox[{"mess", ",", " ", "val"}], "]"}]}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.8120633363321953`*^9, 
  3.812063359902966*^9}},ExpressionUUID->"4f6e8745-a4b5-455d-9ec0-\
a2907540859a"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Internal EcoEvo Utilities", "Section",
 CellChangeTimes->{{3.769364842312839*^9, 3.769364846142503*^9}, {
   3.769365845481473*^9, 3.769365847838582*^9}, 
   3.811345970326442*^9},ExpressionUUID->"2cc023c3-42cc-4546-96aa-\
ce2e4a0795dc"],

Cell[CellGroupData[{

Cell["Set\[ScriptCapitalN]", "Subsection",
 CellChangeTimes->{{3.759999725506592*^9, 3.759999728190651*^9}, 
   3.7707213850910482`*^9},ExpressionUUID->"b1023c06-2b7b-4e99-8f38-\
a1f977756565"],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"44e52bef-7f83-4e71-b1de-\
68280c2fc6f8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Set\[ScriptCapitalN]", "[", 
    RowBox[{
     RowBox[{"attributes", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "AttributesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"variables", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "tmp", ",", "interxns", ",", "tnsp", ",", "pnsp", ",", "insp"}], "}"}],
       ",", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<In Set\[ScriptCapitalN], attributes=\>\"", ",", "attributes", 
          ",", "\"\< variables=\>\"", ",", "variables"}], "]"}], ";"}], 
       "*)"}], "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], "/.", 
            "attributes"}], ",", 
           RowBox[{"{", 
            RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "]"}], ";"}], 
       "*)"}], "\n", "\n", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ninteractions", "\[NotEqual]", "0"}], ",", 
         RowBox[{"interxns", "=", 
          RowBox[{"ExtractInteractions", "[", "attributes", "]"}]}]}], "]"}], 
       ";", "\n", "\n", 
       RowBox[{"Do", "[", "\n", "\t", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"IntegerQ", "[", 
             RowBox[{
              RowBox[{"\[FormalCapitalN]", "[", "gu", "]"}], "/.", 
              "attributes"}], "]"}], ",", " ", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{"if", " ", "\[FormalCapitalN]", " ", "passed"}], ",", 
              " ", 
              RowBox[{"just", " ", "use", " ", "that"}]}], " ", "*)"}], "\n", 
            "\t\t", 
            RowBox[{
             RowBox[{"tnsp", "[", "gu", "]"}], "=", 
             RowBox[{
              RowBox[{"insp", "[", "gu", "]"}], "=", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[FormalCapitalN]", "[", "gu", "]"}], "/.", 
                "attributes"}], ")"}]}]}], ",", "\n", "\t\t", 
            RowBox[{"(*", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"attributes", "\[NotEqual]", 
                RowBox[{"{", "}"}]}], ","}]}], "*)"}], "\n", "\t\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{"tnsp", " ", "=", " ", 
              RowBox[{
              "nsp", " ", "determined", " ", "from", " ", "traits"}]}], " ", 
             "*)"}], "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"ngtraits", "[", "gu", "]"}], "\[NotEqual]", "0"}], 
               ",", "\n", "\t\t\t\t", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"tmp", "=", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"attributes", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], 
                    "\[Equal]", "Subscript"}], "&"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "\[Equal]", "gtrait"}], "&"}]}], "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1", ",", "2"}], 
                    "\[RightDoubleBracket]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"gtrait", ",", 
                    RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}]}], 
                 ";"}], "*)"}], "\n", "\t\t\t\t", 
               RowBox[{
                RowBox[{"tmp", "=", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"attributes", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], 
                    "\[Equal]", "Subscript"}], "&"}]}], "]"}], ",", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "\[Equal]", "gtrait"}], "||", 
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1", ",", "0"}], 
                    "\[RightDoubleBracket]"}], "\[Equal]", "gtrait"}]}], ")"}],
                    Background->RGBColor[1, 1, 0]], "&"}]}], "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1", ",", "2"}], 
                    "\[RightDoubleBracket]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"gtrait", ",", 
                    RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}]}], 
                ";", "\n", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"Print", "[", 
                   RowBox[{"ExtractTraits", "[", 
                    RowBox[{"attributes", ",", "gu"}], "]"}], "]"}], ";", 
                  "\n", 
                  RowBox[{"Print", "[", 
                   RowBox[{
                    RowBox[{"ExtractTraits", "[", 
                    RowBox[{"attributes", ",", "gu"}], "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1", ",", "2"}], 
                    "\[RightDoubleBracket]"}], "]"}], ";", "\n", "\t\t\t\t", 
                  RowBox[{"tmp", "=", 
                   RowBox[{
                    RowBox[{"ExtractTraits", "[", 
                    RowBox[{"attributes", ",", "gu"}], "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1", ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], ";"}], "*)"}], "\n", 
                "\t\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Union", "[", "tmp", "]"}], "]"}], "\[Equal]", 
                   "1"}], ",", "\n", "\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{"tnsp", "[", "gu", "]"}], "=", 
                   RowBox[{
                   "tmp", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ",", "\n", "\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{"Message", "[", 
                    RowBox[{
                    RowBox[{"Set\[ScriptCapitalN]", "::", "badtrait"}], ",", 
                    "gu", ",", "tmp"}], "]"}], ";", "\n", "\t\t\t\t\t", 
                   RowBox[{"Abort", "[", "]"}]}]}], "\n", "\t\t\t\t", "]"}], 
                ";", "\n", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"Print", "[", 
                   RowBox[{"\"\<tnsp[gu]=\>\"", ",", 
                    RowBox[{"tnsp", "[", "gu", "]"}]}], "]"}], ";"}], "*)"}], 
                "\n", "\t\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"tnsp", "[", "gu", "]"}], "\[Equal]", 
                   RowBox[{"-", "\[Infinity]"}]}], ",", 
                  RowBox[{
                   RowBox[{"tnsp", "[", "gu", "]"}], "=", "0"}]}], "]"}], 
                ";"}], "\n", "\t\t\t", ",", "\n", "\t\t\t\t", 
               RowBox[{
                RowBox[{"tnsp", "[", "gu", "]"}], "=", "None"}]}], "\n", 
              "\t\t\t", "]"}], ";", "\n", "\t\t\t", 
             RowBox[{"(*", " ", 
              RowBox[{"insp", " ", "=", " ", 
               RowBox[{
               "nsp", " ", "determined", " ", "from", " ", "interactions"}]}],
               " ", "*)"}], "\n", "\t\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"interactionpos", "[", "gu", "]"}], "]"}], 
                "\[NotEqual]", "0"}], ",", "\n", "\t\t\t\t", 
               RowBox[{
                RowBox[{"tmp", "=", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"interxns", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "\[Equal]", 
                    RowBox[{
                    "pos", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "&"}]}], "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1", ",", 
                    RowBox[{
                    RowBox[{
                    "pos", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", "1"}]}], 
                    "\[RightDoubleBracket]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"pos", ",", 
                    RowBox[{"interactionpos", "[", "gu", "]"}]}], "}"}]}], 
                  "]"}]}], ";", "\n", "\t\t\t\t", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"Print", "[", "tmp", "]"}], ";"}], "*)"}], "\n", 
                "\t\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Union", "[", "tmp", "]"}], "]"}], "\[Equal]", 
                   "1"}], ",", "\n", "\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{"insp", "[", "gu", "]"}], "=", 
                   RowBox[{
                   "tmp", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ",", "\n", "\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{"Message", "[", 
                    RowBox[{
                    RowBox[{"Set\[ScriptCapitalN]", "::", "badinterxn"}], ",",
                     "gu", ",", "tmp"}], "]"}], ";", "\n", "\t\t\t\t\t", 
                   RowBox[{"Abort", "[", "]"}]}]}], "\n", "\t\t\t\t", "]"}], 
                ";"}], "\n", "\t\t\t", ",", "\n", "\t\t\t\t", 
               RowBox[{
                RowBox[{"insp", "[", "gu", "]"}], "=", "None"}]}], "\n", 
              "\t\t\t", "]"}]}]}], "\n", "\t\t", 
           RowBox[{"(*", 
            RowBox[{"]", ";"}], "*)"}], "\n", "\t", "]"}], ";", "\n", "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"IntegerQ", "[", 
             RowBox[{
              RowBox[{"\[FormalCapitalN]", "[", "gu", "]"}], "/.", 
              "variables"}], "]"}], ",", " ", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{"if", " ", "\[FormalCapitalN]", " ", "passed"}], ",", 
              " ", 
              RowBox[{"just", " ", "use", " ", "that"}]}], " ", "*)"}], "\n", 
            "\t\t", 
            RowBox[{
             RowBox[{"pnsp", "[", "gu", "]"}], "=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[FormalCapitalN]", "[", "gu", "]"}], "/.", 
               "variables"}], ")"}]}], ",", "\n", "\t\t", 
            RowBox[{"(*", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"variables", "\[NotEqual]", 
                RowBox[{"{", "}"}]}], ","}]}], "*)"}], "\n", "\t\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{"pnsp", " ", "=", " ", 
              RowBox[{
              "nsp", " ", "determined", " ", "from", " ", "variables"}]}], 
             " ", "*)"}], "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"tmp", "=", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Max", "[", 
                 RowBox[{
                  RowBox[{"Select", "[", 
                   RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{"variables", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], 
                    "\[Equal]", "Subscript"}], "&"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "\[Equal]", "gcomp"}], "&"}]}], "]"}], 
                  "\[LeftDoubleBracket]", 
                  RowBox[{"All", ",", "1", ",", "2"}], 
                  "\[RightDoubleBracket]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"gcomp", ",", 
                  RowBox[{"gcomps", "[", "gu", "]"}]}], "}"}]}], "]"}]}], ";",
              "\n", "\t\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"Union", "[", "tmp", "]"}], "]"}], "\[Equal]", "1"}],
                ",", "\n", "\t\t\t\t", 
               RowBox[{
                RowBox[{"pnsp", "[", "gu", "]"}], "=", 
                RowBox[{
                "tmp", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}], ",", "\n", "\t\t\t\t", 
               RowBox[{
                RowBox[{"Message", "[", 
                 RowBox[{
                  RowBox[{"Set\[ScriptCapitalN]", "::", "badcomm"}], ",", 
                  "gu", ",", "tmp"}], "]"}], ";", "\n", "\t\t\t\t", 
                RowBox[{"Abort", "[", "]"}]}]}], "\n", "\t\t\t", "]"}], ";", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{
                RowBox[{",", "\n", "\t\t\t", 
                 RowBox[{
                  RowBox[{"pnsp", "[", "gu", "]"}], "=", "None"}]}], "\n", 
                "\t\t", "]"}], ";"}], "*)"}], "\n", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"Print", "[", 
                RowBox[{"\"\<pnsp[gu]=\>\"", ",", 
                 RowBox[{"pnsp", "[", "gu", "]"}]}], "]"}], ";"}], "*)"}], 
             "\n", "\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"pnsp", "[", "gu", "]"}], "\[Equal]", 
                RowBox[{"-", "\[Infinity]"}]}], ",", 
               RowBox[{
                RowBox[{"pnsp", "[", "gu", "]"}], "=", "0"}]}], "]"}], 
             ";"}]}], "\n", "\t", "]"}], ";", "\n", "\n", "\t", 
          RowBox[{"If", "[", 
           RowBox[{"Global`debug", ",", 
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<Set\[ScriptCapitalN]: (\>\"", ",", "gu", ",", 
              "\"\< tnsp=\>\"", ",", 
              RowBox[{"tnsp", "[", "gu", "]"}], ",", "\"\< insp=\>\"", ",", 
              RowBox[{"insp", "[", "gu", "]"}], ",", "\"\< pnsp=\>\"", ",", 
              RowBox[{"pnsp", "[", "gu", "]"}], ",", "\"\<)\>\""}], "]"}]}], 
           "]"}], ";", "\n", "\t", "\n", "\t", 
          RowBox[{"Which", "[", "\n", "\t\t", 
           RowBox[{"(*", " ", 
            RowBox[{"no", " ", "traits", " ", "given"}], " ", "*)"}], "\n", 
           "\t\t", 
           RowBox[{
            RowBox[{"attributes", "\[Equal]", 
             RowBox[{"{", "}"}]}], ",", "\n", "\t\t", 
            RowBox[{
             RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], "=", 
             RowBox[{"pnsp", "[", "gu", "]"}]}], ",", "\n", "\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"gu", " ", "has", " ", "traits"}], " ", "&"}], " ", 
              "interactions"}], " ", "*)"}], "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"ngtraits", "[", "gu", "]"}], "\[NotEqual]", "0"}], "&&", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"interactionpos", "[", "gu", "]"}], "]"}], 
              "\[NotEqual]", "0"}]}], ",", "\n", "\t\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"pnsp", "[", "gu", "]"}], "\[Equal]", 
                RowBox[{"tnsp", "[", "gu", "]"}], "\[Equal]", 
                RowBox[{"insp", "[", "gu", "]"}]}], "||", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"variables", "\[Equal]", 
                  RowBox[{"{", "}"}]}], "&&", 
                 RowBox[{
                  RowBox[{"tnsp", "[", "gu", "]"}], "\[Equal]", 
                  RowBox[{"insp", "[", "gu", "]"}]}]}], ")"}]}], ",", "\n", 
              "\t\t\t", 
              RowBox[{
               RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], "=", 
               RowBox[{"tnsp", "[", "gu", "]"}]}], ",", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"Message", "[", 
                RowBox[{
                 RowBox[{"Set\[ScriptCapitalN]", "::", "badnsp"}], ",", "gu", 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"pnsp", "[", "gu", "]"}], ",", 
                   RowBox[{"tnsp", "[", "gu", "]"}], ",", 
                   RowBox[{"insp", "[", "gu", "]"}]}], "}"}]}], "]"}], ";", 
               "\n", "\t\t\t", 
               RowBox[{"Abort", "[", "]"}]}]}], "\n", "\t\t", "]"}], ",", 
            "\n", "\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{"gu", " ", "has", " ", "only", " ", "interactions"}], 
             " ", "*)"}], "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"ngtraits", "[", "gu", "]"}], "\[Equal]", "0"}], "&&", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"interactionpos", "[", "gu", "]"}], "]"}], 
              "\[NotEqual]", "0"}]}], ",", "\n", "\t\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"pnsp", "[", "gu", "]"}], "\[Equal]", 
                RowBox[{"insp", "[", "gu", "]"}]}], "||", 
               RowBox[{"variables", "\[Equal]", 
                RowBox[{"{", "}"}]}]}], ",", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], "=", 
               RowBox[{"insp", "[", "gu", "]"}]}], ",", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"Message", "[", 
                RowBox[{
                 RowBox[{"Set\[ScriptCapitalN]", "::", "badnsp"}], ",", "gu", 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"pnsp", "[", "gu", "]"}], ",", "None", ",", 
                   RowBox[{"insp", "[", "gu", "]"}]}], "}"}]}], "]"}], ";", 
               "\n", "\t\t\t", 
               RowBox[{"Abort", "[", "]"}]}]}], "\n", "\t\t", "]"}], ",", 
            "\n", "\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{"gu", " ", "has", " ", "only", " ", "traits"}], " ", 
             "*)"}], "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"ngtraits", "[", "gu", "]"}], "\[NotEqual]", "0"}], "&&", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"interactionpos", "[", "gu", "]"}], "]"}], "\[Equal]", 
              "0"}]}], ",", "\n", "\t\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"pnsp", "[", "gu", "]"}], "\[Equal]", 
                RowBox[{"tnsp", "[", "gu", "]"}]}], "||", 
               RowBox[{"variables", "\[Equal]", 
                RowBox[{"{", "}"}]}]}], ",", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], "=", 
               RowBox[{"tnsp", "[", "gu", "]"}]}], ",", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"Message", "[", 
                RowBox[{
                 RowBox[{"Set\[ScriptCapitalN]", "::", "badnsp"}], ",", "gu", 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"pnsp", "[", "gu", "]"}], ",", 
                   RowBox[{"insp", "[", "gu", "]"}], ",", "None"}], "}"}]}], 
                "]"}], ";", "\n", "\t\t\t", 
               RowBox[{"Abort", "[", "]"}]}]}], "\n", "\t\t", "]"}]}], "\n", 
           "\t", "]"}]}], "\n", ",", 
         RowBox[{"{", 
          RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}]}], "\n", "\n", 
     "]"}], "/;", 
    RowBox[{"(", 
     RowBox[{"nguilds", "\[NotEqual]", "0"}], ")"}]}]}], ";"}]], "Code",
 CellChangeTimes->{{3.688579086955159*^9, 3.688579180193223*^9}, {
   3.688580555989731*^9, 3.688580566388729*^9}, {3.68858065030599*^9, 
   3.6885806721948147`*^9}, {3.6885826303201113`*^9, 
   3.6885826783752337`*^9}, {3.688582924455892*^9, 3.688582925530192*^9}, {
   3.688582970672365*^9, 3.688582978502492*^9}, {3.688583020561263*^9, 
   3.688583025007845*^9}, {3.688583105125451*^9, 3.688583105808675*^9}, {
   3.68858369069287*^9, 3.688583698406364*^9}, 3.688584478036951*^9, {
   3.688585261986971*^9, 3.688585265026821*^9}, {3.6885883334818277`*^9, 
   3.688588335501728*^9}, {3.6885883762288837`*^9, 3.688588378909995*^9}, {
   3.688588416859016*^9, 3.688588485019401*^9}, {3.688588529892256*^9, 
   3.688588590643197*^9}, {3.688588642096621*^9, 3.688588778290824*^9}, {
   3.688589265020664*^9, 3.6885893715253067`*^9}, {3.6885945191752977`*^9, 
   3.688594519893338*^9}, {3.688594603505329*^9, 3.688594611820771*^9}, {
   3.688594746041967*^9, 3.688594753248499*^9}, {3.6885950331636467`*^9, 
   3.6885950509754143`*^9}, {3.688595146261627*^9, 3.688595193082739*^9}, 
   3.688596043934252*^9, {3.68859640426191*^9, 3.6885964804259577`*^9}, {
   3.688596582016201*^9, 3.688596675350301*^9}, {3.688596733553178*^9, 
   3.688596735151145*^9}, {3.688596792051854*^9, 3.68859683348696*^9}, {
   3.688596896449972*^9, 3.688596915270768*^9}, {3.688597014906212*^9, 
   3.688597022695496*^9}, {3.688601787805529*^9, 3.688601833259913*^9}, {
   3.688601886667426*^9, 3.688601956064496*^9}, {3.6886019886131372`*^9, 
   3.688602071462656*^9}, {3.6886021345965652`*^9, 3.6886021568432703`*^9}, {
   3.6886022176261168`*^9, 3.688602245178185*^9}, {3.688602374408743*^9, 
   3.688602378267004*^9}, {3.6886394764181843`*^9, 3.688639477041656*^9}, {
   3.6886424239326963`*^9, 3.688642549139924*^9}, {3.688642596996933*^9, 
   3.688642649802576*^9}, {3.6886429083153677`*^9, 3.688642927405645*^9}, {
   3.688643214460284*^9, 3.688643219957947*^9}, {3.688643315932542*^9, 
   3.688643319258267*^9}, {3.68864335047991*^9, 3.688643352838253*^9}, {
   3.688644048547125*^9, 3.6886440549116917`*^9}, {3.688644120293647*^9, 
   3.6886441243133173`*^9}, {3.688645308730304*^9, 3.68864531123003*^9}, {
   3.6890808439516478`*^9, 3.689080848557065*^9}, {3.689085242375984*^9, 
   3.689085259587859*^9}, {3.689087272529121*^9, 3.6890872911434298`*^9}, {
   3.6890947553367157`*^9, 3.689094757780344*^9}, 3.689095508373808*^9, 
   3.69365130669004*^9, {3.693698503518755*^9, 3.693698522762718*^9}, {
   3.693700243462899*^9, 3.6937002490997877`*^9}, {3.701793006399646*^9, 
   3.701793010858263*^9}, {3.701793062040805*^9, 3.70179309104665*^9}, {
   3.701793518537808*^9, 3.701793588361517*^9}, {3.70179369292321*^9, 
   3.70179371765716*^9}, {3.701793987274589*^9, 3.701793990959119*^9}, {
   3.7086595279303417`*^9, 3.708659535934751*^9}, {3.708659624523223*^9, 
   3.7086596260939407`*^9}, {3.708660654188656*^9, 3.708660655904091*^9}, {
   3.7091354907105083`*^9, 3.70913549271692*^9}, 3.709136311115431*^9, {
   3.710105946964546*^9, 3.710105948938019*^9}, {3.712285815806229*^9, 
   3.7122858164453497`*^9}, {3.7122886932658863`*^9, 3.712288693701004*^9}, 
   3.712738534292192*^9, 3.731528153095213*^9, 3.731529317336763*^9, {
   3.755177734281653*^9, 3.755177758340517*^9}, {3.7595904859049883`*^9, 
   3.7595905264337807`*^9}, 3.7605505923324537`*^9, {3.7605506934485073`*^9, 
   3.760550694275228*^9}, 3.760551308631708*^9, {3.760551464663541*^9, 
   3.7605514646711607`*^9}, 3.7605515234759912`*^9, 3.7606154303851748`*^9, {
   3.76061594452129*^9, 3.760615992996706*^9}, {3.760616356890478*^9, 
   3.760616365439826*^9}, {3.760623895119946*^9, 3.760623895988104*^9}, {
   3.760625636656412*^9, 3.760625652538871*^9}, {3.7606261567009697`*^9, 
   3.760626166449196*^9}, 3.76062650715695*^9, {3.760627471808597*^9, 
   3.760627495957676*^9}, 3.760628069448444*^9, {3.760628126037175*^9, 
   3.76062816115499*^9}, {3.760636891643258*^9, 3.760636907056164*^9}, {
   3.760637073516046*^9, 3.760637076650299*^9}, {3.760637910082148*^9, 
   3.760637913730654*^9}, {3.760668254307096*^9, 3.7606682600025597`*^9}, {
   3.760668617388033*^9, 3.760668621978903*^9}, {3.7606686841372643`*^9, 
   3.760668688745413*^9}, {3.77072138591361*^9, 3.770721392619376*^9}, {
   3.79413724045713*^9, 3.7941372404624977`*^9}, 3.797866585176319*^9, {
   3.797869937356763*^9, 3.797869949521891*^9}, {3.797870024428936*^9, 
   3.7978700508041*^9}, {3.797870122516041*^9, 3.7978701611974487`*^9}, {
   3.797870843451703*^9, 3.797870843802787*^9}, {3.797885975019435*^9, 
   3.797886019418931*^9}, {3.797891739681287*^9, 3.797891739776729*^9}, {
   3.797891772746668*^9, 3.797891899171234*^9}, {3.7978919316831827`*^9, 
   3.7978919369871883`*^9}, {3.7978919723949833`*^9, 3.797892028582658*^9}, {
   3.797892258559853*^9, 3.797892273183084*^9}, {3.797892735411415*^9, 
   3.7978927851083117`*^9}, {3.7978931076605253`*^9, 3.797893138559667*^9}, {
   3.797893194620205*^9, 3.797893202079686*^9}, {3.7978957866301203`*^9, 
   3.79789582330942*^9}, {3.7978958893300133`*^9, 3.797895908933775*^9}, {
   3.79789633131485*^9, 3.7978963313690987`*^9}, {3.7978964418507977`*^9, 
   3.7978964585934677`*^9}, {3.797896514186295*^9, 3.797896525578762*^9}, {
   3.797896565961071*^9, 3.797896566578582*^9}, {3.797896615265828*^9, 
   3.797896628547521*^9}, {3.7978966597963333`*^9, 3.797896661051648*^9}, {
   3.7978967186599827`*^9, 3.79789704834702*^9}, {3.797897364630279*^9, 
   3.797897421512493*^9}, {3.7978975034183893`*^9, 3.797897503568529*^9}, {
   3.7978975368915577`*^9, 3.7978976428995743`*^9}, {3.797897703788604*^9, 
   3.7978977041191998`*^9}, {3.7978985525403023`*^9, 3.797898566652182*^9}, {
   3.797898759068881*^9, 3.7978988340220013`*^9}, {3.797898866910235*^9, 
   3.797898937725832*^9}, {3.797899188532153*^9, 3.79789943951724*^9}, {
   3.797899471563953*^9, 3.797899527594707*^9}, {3.7978995910783253`*^9, 
   3.797899620924056*^9}, {3.798043110523572*^9, 3.798043112560824*^9}, {
   3.798125916890283*^9, 3.7981259387475643`*^9}, 3.798126236819881*^9, {
   3.798126282997624*^9, 3.798126290315753*^9}, {3.798128346910372*^9, 
   3.798128376981735*^9}, {3.798203335090163*^9, 3.798203336584807*^9}, {
   3.7982036030995083`*^9, 3.798203653004026*^9}, {3.7982036936683607`*^9, 
   3.798203809941498*^9}, {3.798203933496579*^9, 3.7982039559987907`*^9}, 
   3.7983021902803383`*^9, {3.798302242577051*^9, 3.7983022453561287`*^9}, {
   3.798302371588092*^9, 3.7983023796406393`*^9}, {3.798302416295971*^9, 
   3.7983024186872263`*^9}, {3.798302464032983*^9, 3.798302497753756*^9}, {
   3.798318184314975*^9, 3.798318194935727*^9}, {3.798318755258068*^9, 
   3.798318801698216*^9}, {3.79831883842765*^9, 3.7983188521887617`*^9}, {
   3.798319093131319*^9, 3.798319113675652*^9}, {3.7983192246626797`*^9, 
   3.798319247095872*^9}, {3.7983192854901953`*^9, 3.798319289268354*^9}, 
   3.798321186019738*^9, {3.798321543440645*^9, 3.798321644238131*^9}, {
   3.798321692761035*^9, 3.798321716296431*^9}, {3.7983217502073193`*^9, 
   3.7983219048883333`*^9}, {3.798321988241201*^9, 3.7983220076113358`*^9}, {
   3.799967651131256*^9, 3.799967660826454*^9}, {3.799967756793439*^9, 
   3.79996776928526*^9}, {3.79996785372996*^9, 3.79996786778121*^9}, {
   3.7999685515761623`*^9, 3.7999685651992493`*^9}, {3.799968618173606*^9, 
   3.7999686543902397`*^9}, {3.8002300792583714`*^9, 3.800230096850733*^9}, {
   3.800230161388159*^9, 3.800230164323394*^9}, {3.8002303361890907`*^9, 
   3.80023034465904*^9}, {3.800230389195024*^9, 3.800230400662952*^9}, {
   3.800273878280162*^9, 3.800273883855537*^9}, 3.800462621471805*^9, 
   3.807369395318701*^9, {3.8073695621442003`*^9, 3.807369574928194*^9}, {
   3.8181770347677937`*^9, 3.8181770371497517`*^9}, {3.818177492488937*^9, 
   3.818177498386355*^9}, {3.8181778220642643`*^9, 3.818177836430193*^9}, {
   3.818198107561122*^9, 3.818198120142838*^9}, {3.818203195562542*^9, 
   3.818203218339629*^9}},ExpressionUUID->"344ab327-90e3-4d65-9c10-\
8a057b0ee504"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Messages", "Subsubsection",
 CellChangeTimes->{{3.7695012300455523`*^9, 
  3.769501232527727*^9}},ExpressionUUID->"c12bb37b-385e-43f3-9ffc-\
0e0d463bdff6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Set\[ScriptCapitalN]", "::", "badnsp"}], "=", "\n", 
    "\"\<Number of species in guild `1` inconsistent: {pnsp,tnsp,insp}= \
`2`.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Set\[ScriptCapitalN]", "::", "badtrait"}], "=", "\n", 
    "\"\<Number of traits in guild `1` inconsistent: `2`.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Set\[ScriptCapitalN]", "::", "badcomm"}], "=", "\n", 
    "\"\<Number of components in guild `1` inconsistent: `2`.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Set\[ScriptCapitalN]", "::", "badinterxn"}], "=", "\n", 
   "\"\<Number of interactions in guild `1` inconsistent: `2`.\>\""}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.769501234093089*^9, 3.769501234867045*^9}, {
  3.770721392835815*^9, 3.7707213931650887`*^9}, {3.797892806841638*^9, 
  3.7978928161538887`*^9}, {3.797897066751667*^9, 
  3.797897086441345*^9}},ExpressionUUID->"de4ed89b-995a-4b5a-8798-\
712006e002d1"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["FromUnks / ToUnks / ToUnkRules", "Subsection",
 CellChangeTimes->{{3.688579068634553*^9, 3.688579071254909*^9}, {
   3.688583913731683*^9, 3.688583916564062*^9}, {3.693700257044292*^9, 
   3.693700287486*^9}, {3.709124914994886*^9, 3.7091249170748787`*^9}, 
   3.712738534268155*^9, {3.731980085042235*^9, 3.731980090946699*^9}, {
   3.7352306562892857`*^9, 3.735230657889414*^9}, {3.755725048979398*^9, 
   3.755725051063348*^9}, {3.758537894410185*^9, 3.758537899521847*^9}, {
   3.758539253436051*^9, 3.758539255912182*^9}, {3.758713504660163*^9, 
   3.758713506305879*^9}, {3.759918415394607*^9, 3.759918418269453*^9}, {
   3.759993650404483*^9, 3.759993650909848*^9}, {3.759999735593145*^9, 
   3.759999736948765*^9}, {3.7693657580946503`*^9, 
   3.769365758676792*^9}},ExpressionUUID->"e4da1fc9-cb7f-429a-854d-\
97db80612312"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FromUnks", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ToUnks", "::", "usage"}], "=", "\"\<Internal usage only ;)\>\""}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ToUnkRules", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.769365734873726*^9, 
  3.7693657364213247`*^9}},ExpressionUUID->"4157956f-5478-4cb6-9482-\
31d2e987b288"],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"ca1c1191-123a-4c8e-822e-\
c577d411ced9"],

Cell[BoxData[
 RowBox[{"FromUnks", ":=", 
  RowBox[{
   RowBox[{"Unk", "[", "stuff___", "]"}], "\[Rule]", "stuff"}]}]], "Code",
 CellChangeTimes->{{3.7352306469005136`*^9, 3.7352306533618517`*^9}, 
   3.755177709734589*^9, 3.755179828029705*^9, {3.7585203794127817`*^9, 
   3.758520384873486*^9}, {3.759993545046631*^9, 3.759993546055109*^9}, {
   3.760330174616209*^9, 3.760330196607451*^9}, {3.760548844181795*^9, 
   3.760548847378439*^9}, {3.7605495918435926`*^9, 3.7605496007787848`*^9}, {
   3.760550554782784*^9, 3.760550569248288*^9}, {3.760551279015315*^9, 
   3.760551289117098*^9}, {3.760551443352663*^9, 3.760551455939803*^9}, {
   3.760591334861492*^9, 3.760591339150917*^9}, {3.760592130924405*^9, 
   3.760592136565714*^9}, {3.7618987435059443`*^9, 3.761898745726904*^9}, {
   3.761932168029855*^9, 3.761932168041896*^9}, {3.761932225490781*^9, 
   3.761932225502795*^9}, {3.761932432798402*^9, 3.7619324328102283`*^9}, {
   3.769365779384173*^9, 3.7693657939981813`*^9}, 
   3.7946987495765457`*^9},ExpressionUUID->"5825cf09-27c2-45c9-8333-\
7a2c10e9c458"],

Cell[BoxData[
 RowBox[{"ToUnks", ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"gcomp", ",", "\[FormalS]_"}], "]"}], "\[Rule]", 
          RowBox[{"Unk", "[", 
           RowBox[{"Subscript", "[", 
            RowBox[{"gcomp", ",", "\[FormalS]"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"gcomp", ",", 
           RowBox[{"gcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", "\t", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"pcomp", "\[Rule]", 
          RowBox[{"Unk", "[", "pcomp", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"pcomp", ",", 
           RowBox[{"pcomps", "[", "pop", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"pop", ",", "pops"}], "}"}]}], "]"}], ",", "\n", "\t", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"aux", "\[Rule]", 
        RowBox[{"Unk", "[", "aux", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"aux", ",", "auxs"}], "}"}]}], "]"}], ",", "\n", "\t", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"gtrait", ",", "\[FormalS]_"}], "]"}], "\[Rule]", 
          RowBox[{"Unk", "[", 
           RowBox[{"Subscript", "[", 
            RowBox[{"gtrait", ",", "\[FormalS]"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"gtrait", ",", 
           RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "\n", "}"}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.7352306469005136`*^9, 3.7352306533618517`*^9}, 
   3.755177709734589*^9, 3.755179828029705*^9, {3.7585203794127817`*^9, 
   3.758520384873486*^9}, {3.7585392082667923`*^9, 3.7585392469298153`*^9}, {
   3.7585408800685177`*^9, 3.758540886661631*^9}, {3.758826413647697*^9, 
   3.758826423455049*^9}, {3.758826788003377*^9, 3.7588267904063253`*^9}, 
   3.759993558626235*^9, {3.760330177904707*^9, 3.760330194092504*^9}, 
   3.760548853337874*^9, {3.760549608638008*^9, 3.760549617842059*^9}, {
   3.760550579759663*^9, 3.760550581279601*^9}, 3.760550656593055*^9, {
   3.760551294749756*^9, 3.760551295299239*^9}, {3.760551474699689*^9, 
   3.760551481340373*^9}, {3.7605913245435038`*^9, 3.760591329792354*^9}, {
   3.7605921401362247`*^9, 3.760592147399194*^9}, {3.761198349120476*^9, 
   3.7611983499728928`*^9}, 3.761198440085966*^9, {3.76189874785743*^9, 
   3.7618987504601297`*^9}, {3.761932168056693*^9, 3.7619321680687428`*^9}, {
   3.7619322255098658`*^9, 3.761932225520257*^9}, {3.7619324328222857`*^9, 
   3.761932432832065*^9}},ExpressionUUID->"b9a01b2a-626c-4ac6-bd60-\
794d3b786b22"],

Cell[BoxData[
 RowBox[{"ToUnkRules", ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Join", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"gcomp", ",", "\[FormalS]_"}], "]"}], "\[Rule]", 
            RowBox[{"Subscript", "[", 
             RowBox[{"gcomp", ",", "\[FormalS]_"}], "]"}]}], ")"}], "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"gcomp", ",", "\[FormalS]"}], "]"}], "\[Rule]", 
            RowBox[{"Unk", "[", 
             RowBox[{"Subscript", "[", 
              RowBox[{"gcomp", ",", "\[FormalS]"}], "]"}], "]"}]}], ")"}]}], 
         "\n", "\t", ",", 
         RowBox[{"{", 
          RowBox[{"gcomp", ",", 
           RowBox[{"gcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", "\t", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"gcomp", ",", "\[FormalS]_"}], "]"}], "\[Rule]", 
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{"gcomp", ",", "\[FormalS]_"}], "]"}], "[", "t", "]"}]}],
            ")"}], "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"gcomp", ",", "\[FormalS]"}], "]"}], "\[Rule]", 
            RowBox[{
             RowBox[{"Unk", "[", 
              RowBox[{"Subscript", "[", 
               RowBox[{"gcomp", ",", "\[FormalS]"}], "]"}], "]"}], "[", "t", 
             "]"}]}], ")"}]}], "\n", "\t", ",", 
         RowBox[{"{", 
          RowBox[{"gcomp", ",", 
           RowBox[{"gcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", "\t", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pcomp", "\[Rule]", "pcomp"}], ")"}], "\[Rule]", 
          RowBox[{"(", 
           RowBox[{"pcomp", "\[Rule]", 
            RowBox[{"Unk", "[", "pcomp", "]"}]}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"pcomp", ",", 
           RowBox[{"pcomps", "[", "pop", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"pop", ",", "pops"}], "}"}]}], "]"}], ",", "\n", "\t", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pcomp", "\[Rule]", 
            RowBox[{"pcomp", "[", "t", "]"}]}], ")"}], "\[Rule]", 
          RowBox[{"(", 
           RowBox[{"pcomp", "\[Rule]", 
            RowBox[{
             RowBox[{"Unk", "[", "pcomp", "]"}], "[", "t", "]"}]}], ")"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"pcomp", ",", 
           RowBox[{"pcomps", "[", "pop", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"pop", ",", "pops"}], "}"}]}], "]"}], ",", "\n", "\t", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"aux", "\[Rule]", "aux"}], ")"}], "\[Rule]", 
        RowBox[{"(", 
         RowBox[{"aux", "\[Rule]", 
          RowBox[{"Unk", "[", "aux", "]"}]}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"aux", ",", "auxs"}], "}"}]}], "]"}], ",", "\n", "\t", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"aux", "\[Rule]", 
          RowBox[{"aux", "[", "t", "]"}]}], ")"}], "\[Rule]", 
        RowBox[{"(", 
         RowBox[{"aux", "\[Rule]", 
          RowBox[{
           RowBox[{"Unk", "[", "aux", "]"}], "[", "t", "]"}]}], ")"}]}], ",", 
       
       RowBox[{"{", 
        RowBox[{"aux", ",", "auxs"}], "}"}]}], "]"}], ",", "\n", "\t", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"gtrait", ",", "\[FormalS]_"}], "]"}], "\[Rule]", 
            RowBox[{"Subscript", "[", 
             RowBox[{"gtrait", ",", "\[FormalS]_"}], "]"}]}], ")"}], 
          "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"gtrait", ",", "\[FormalS]"}], "]"}], "\[Rule]", 
            RowBox[{"Unk", "[", 
             RowBox[{"Subscript", "[", 
              RowBox[{"gtrait", ",", "\[FormalS]"}], "]"}], "]"}]}], ")"}]}], 
         "\n", "\t", ",", 
         RowBox[{"{", 
          RowBox[{"gtrait", ",", 
           RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", "\t", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"gtrait", ",", "\[FormalS]_"}], "]"}], "\[Rule]", 
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{"gtrait", ",", "\[FormalS]_"}], "]"}], "[", "t", 
             "]"}]}], ")"}], "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"gtrait", ",", "\[FormalS]"}], "]"}], "\[Rule]", 
            RowBox[{
             RowBox[{"Unk", "[", 
              RowBox[{"Subscript", "[", 
               RowBox[{"gtrait", ",", "\[FormalS]"}], "]"}], "]"}], "[", "t", 
             "]"}]}], ")"}]}], "\n", "\t", ",", 
         RowBox[{"{", 
          RowBox[{"gtrait", ",", 
           RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "\n", "]"}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.758713547034795*^9, 3.758713593727838*^9}, {
   3.7587138895687237`*^9, 3.7587138922111263`*^9}, {3.758825249181641*^9, 
   3.758825269261628*^9}, {3.75882530433006*^9, 3.7588253083958597`*^9}, {
   3.7588253431792192`*^9, 3.758825348841372*^9}, {3.758826459456697*^9, 
   3.758826487343869*^9}, {3.7590416355776463`*^9, 3.759041691948291*^9}, 
   3.759993564775784*^9, {3.760330191233616*^9, 3.760330192311503*^9}, 
   3.76054886216968*^9, {3.7605496245636787`*^9, 3.760549637006084*^9}, {
   3.7605505830425873`*^9, 3.7605505874318647`*^9}, {3.760550669468933*^9, 
   3.7605506754397173`*^9}, {3.7605512960681667`*^9, 
   3.7605512999331636`*^9}, {3.7605514646247787`*^9, 3.760551464632956*^9}, {
   3.760551513012294*^9, 3.7605515139077168`*^9}, {3.7605913086700478`*^9, 
   3.760591318085334*^9}, {3.760592151880183*^9, 3.76059217418187*^9}, {
   3.761830166663875*^9, 3.7618301856423273`*^9}, {3.761898751510532*^9, 
   3.761898756263328*^9}, {3.761932168076787*^9, 3.7619321681056633`*^9}, {
   3.761932225524494*^9, 3.761932225553059*^9}, {3.761932432838378*^9, 
   3.761932432866774*^9}, {3.7946925625574408`*^9, 3.794692562905046*^9}, 
   3.794692664346573*^9, 
   3.7946987423406467`*^9},ExpressionUUID->"7f83a836-b362-4692-aae3-\
8578687c719f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["AllTraits / AllVariables / AllPopsAndAuxs", "Subsection",
 CellChangeTimes->{{3.769365763995139*^9, 3.7693657668608522`*^9}, {
  3.769365821567066*^9, 
  3.76936582198849*^9}},ExpressionUUID->"a1ce38d6-d808-406c-8ab9-\
904e21b23cd5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"AllTraits", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AllVariables", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AllPopsAndAuxs", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.769365889005204*^9, 3.769365889613229*^9}, 
   3.769365964970542*^9},ExpressionUUID->"273fc28b-5d85-4725-ab95-\
06c41aa24b56"],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"f083b8b3-e1b1-434e-af51-\
2cd9148369e3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AllTraits", ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"gtrait", ",", "sp"}], "]"}], 
            StyleBox[
             RowBox[{",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{
                  RowBox[{"gtrait", "[", "gcomp", "]"}], ",", "sp"}], "]"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"gcomp", ",", 
                  RowBox[{"gcomps", "[", "gu", "]"}]}], "}"}]}], "]"}]}],
             Background->RGBColor[1, 1, 0]]}], 
           StyleBox["}",
            Background->RGBColor[1, 1, 0]]}], "\n", ",", 
          RowBox[{"{", 
           RowBox[{"gtrait", ",", 
            RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"sp", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], "\[Equal]", "0"}],
             ",", "0", ",", "1"}], "]"}], ",", 
          RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}]}], "}"}]}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "]"}]}], ";"}]], "Code",\

 CellChangeTimes->{{3.69364937464179*^9, 3.6936494153621387`*^9}, 
   3.693649466736812*^9, {3.710285824408537*^9, 3.710285827279024*^9}, {
   3.73163249856693*^9, 3.731632514469075*^9}, {3.731980100934689*^9, 
   3.73198011119555*^9}, 3.755177712838704*^9, {3.759918406126446*^9, 
   3.75991840626589*^9}, 3.7605513010629387`*^9, 3.760551464637692*^9, 
   3.7605515155315447`*^9, {3.760592177962378*^9, 3.760592182947206*^9}, {
   3.7707213933950853`*^9, 3.77072139350985*^9}, {3.8185265137325153`*^9, 
   3.818526537211191*^9}, {3.818526572908429*^9, 
   3.8185266266603727`*^9}},ExpressionUUID->"63cfbb51-bd04-4f6a-a1af-\
02a808cf6bd5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AllVariables", ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Join", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"gcomp", ",", "sp"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"gcomp", ",", 
              RowBox[{"gcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"sp", ",", 
            RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}]}], "}"}]}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", "\t", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"pcomp", ",", 
          RowBox[{"{", 
           RowBox[{"pcomp", ",", 
            RowBox[{"pcomps", "[", "pop", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"pop", ",", "pops"}], "}"}]}], "]"}], ",", "\n", "\t", 
      RowBox[{"Table", "[", 
       RowBox[{"aux", ",", 
        RowBox[{"{", 
         RowBox[{"aux", ",", "auxs"}], "}"}]}], "]"}]}], "\n", "]"}], "]"}]}],
   ";"}]], "Code",
 CellChangeTimes->{{3.6936494467363777`*^9, 3.693649486696768*^9}, {
   3.693700283097127*^9, 3.693700283368709*^9}, 3.709337119782999*^9, {
   3.710285813154852*^9, 3.710285816774274*^9}, 3.712738534281795*^9, {
   3.731980122530922*^9, 3.731980134569532*^9}, 3.755177714767127*^9, {
   3.7599183998193083`*^9, 3.7599184005861683`*^9}, 3.7599935783991747`*^9, 
   3.760330207999462*^9, 3.760548866933312*^9, {3.760549642909148*^9, 
   3.760549645040902*^9}, 3.760550588683875*^9, {3.760550681527598*^9, 
   3.760550683240164*^9}, {3.760591294271977*^9, 3.760591296381484*^9}, 
   3.770721393731861*^9},ExpressionUUID->"2aa0e65a-de59-4f61-b191-\
ed6fd6263af1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AllPopsAndAuxs", ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Join", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"pcomp", ",", 
          RowBox[{"{", 
           RowBox[{"pcomp", ",", 
            RowBox[{"pcomps", "[", "pop", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"pop", ",", "pops"}], "}"}]}], "]"}], ",", "\n", "\t", 
      RowBox[{"Table", "[", 
       RowBox[{"aux", ",", 
        RowBox[{"{", 
         RowBox[{"aux", ",", "auxs"}], "}"}]}], "]"}]}], "\n", "]"}], "]"}]}],
   ";"}]], "Code",
 CellChangeTimes->{{3.6936494467363777`*^9, 3.693649486696768*^9}, {
   3.693700283097127*^9, 3.693700283368709*^9}, 3.709337119782999*^9, {
   3.710285813154852*^9, 3.710285816774274*^9}, 3.712738534281795*^9, {
   3.731980122530922*^9, 3.731980134569532*^9}, 3.755177714767127*^9, {
   3.7599183843781767`*^9, 3.759918392536137*^9}, 3.759993581443099*^9, 
   3.760330209083541*^9, 3.7605488680150414`*^9, {3.76054964868954*^9, 
   3.76054965500819*^9}, {3.760591290120627*^9, 
   3.76059129204698*^9}},ExpressionUUID->"2265fbcf-4517-41ef-8393-\
5f33c10a832c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
BlankTraits / BlankUnkTraits / BlankVariables / BlankUnkVariables\
\>", "Subsection",
 CellChangeTimes->{{3.7693658248122663`*^9, 3.7693658316781054`*^9}, {
  3.769398840553957*^9, 3.7693988412210407`*^9}, {3.769398877383669*^9, 
  3.769398882644765*^9}},ExpressionUUID->"bdb1be11-dfc9-487b-84d1-\
73a589e05136"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"BlankTraits", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BlankUnkTraits", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BlankVariables", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BlankUnkVariables", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.769398867561357*^9, 
  3.769398869948689*^9}},ExpressionUUID->"27046c8d-6e50-475a-8747-\
383919e96c8b"],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"f29f55e0-ad3f-4fd5-878f-\
c5aa559bfe30"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BlankTraits", ":=", 
   RowBox[{"Flatten", "[", "\n", "\t", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"gtrait", ",", "sp"}], "]"}], "\[Rule]", 
           RowBox[{"Subscript", "[", 
            RowBox[{"gtrait", ",", "sp"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"gtrait", ",", 
            RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"sp", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], "\[Equal]", "0"}],
             ",", "0", ",", "1"}], "]"}], ",", 
          RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}]}], "}"}]}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "]"}]}], ";"}]], "Code",\

 CellChangeTimes->{{3.69364937464179*^9, 3.6936494153621387`*^9}, 
   3.693649466736812*^9, {3.710285824408537*^9, 3.710285827279024*^9}, {
   3.73163249856693*^9, 3.731632514469075*^9}, 3.755177718663726*^9, {
   3.7605513019439573`*^9, 3.760551302559701*^9}, 3.760551464644024*^9, 
   3.760551516848897*^9, {3.7605921921692677`*^9, 3.760592195896019*^9}, {
   3.770721393960456*^9, 
   3.7707213940790453`*^9}},ExpressionUUID->"19b50a83-122e-4c84-81b2-\
36da6ceb31fd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BlankUnkTraits", ":=", 
   RowBox[{"Flatten", "[", "\n", "\t", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"gtrait", ",", "sp"}], "]"}], "\[Rule]", 
           RowBox[{"Unk", "[", 
            RowBox[{"Subscript", "[", 
             RowBox[{"gtrait", ",", "sp"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"gtrait", ",", 
            RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"sp", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], "\[Equal]", "0"}],
             ",", "0", ",", "1"}], "]"}], ",", 
          RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}]}], "}"}]}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "]"}]}], ";"}]], "Code",\

 CellChangeTimes->{{3.69364937464179*^9, 3.6936494153621387`*^9}, 
   3.693649466736812*^9, {3.710285824408537*^9, 3.710285827279024*^9}, {
   3.73163249856693*^9, 3.731632514469075*^9}, 3.755177718663726*^9, {
   3.758817424038797*^9, 3.75881742679858*^9}, {3.75881788563667*^9, 
   3.75881788780518*^9}, {3.758826499836075*^9, 3.758826502932578*^9}, {
   3.758826565905765*^9, 3.758826612865366*^9}, {3.7588267134796047`*^9, 
   3.758826714569168*^9}, 3.760551303197822*^9, 3.7605514646498632`*^9, 
   3.7605515174971657`*^9, {3.760592200487118*^9, 3.760592203656878*^9}, {
   3.761805948949956*^9, 3.761805952366542*^9}, 3.76180602257171*^9, 
   3.7618987570799303`*^9, 3.7619321681113777`*^9, 3.761932225556176*^9, 
   3.761932432872023*^9, {3.7707213942978487`*^9, 
   3.770721394517171*^9}},ExpressionUUID->"0a712bba-d86d-4906-93c5-\
42ca9b32e0bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BlankVariables", ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Join", "[", "\t\t\t\t", "\n", "\t", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{"gcomp", ",", "sp"}], "]"}], "\[Rule]", 
             RowBox[{"Subscript", "[", 
              RowBox[{"gcomp", ",", "sp"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"gcomp", ",", 
              RowBox[{"gcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"sp", ",", 
            RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}]}], "}"}]}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", "\t", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"pcomp", "\[Rule]", "pcomp"}], ",", 
          RowBox[{"{", 
           RowBox[{"pcomp", ",", 
            RowBox[{"pcomps", "[", "pop", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"pop", ",", "pops"}], "}"}]}], "]"}], ",", "\n", "\t", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"aux", "\[Rule]", "aux"}], ",", 
        RowBox[{"{", 
         RowBox[{"aux", ",", "auxs"}], "}"}]}], "]"}]}], "\n", "]"}], "]"}]}],
   ";"}]], "Code",
 CellChangeTimes->{{3.6936494467363777`*^9, 3.693649486696768*^9}, {
   3.693700283097127*^9, 3.693700283368709*^9}, 3.709337119782999*^9, {
   3.710285813154852*^9, 3.710285816774274*^9}, 3.712738534281795*^9, 
   3.7551777209488783`*^9, {3.75881842318817*^9, 3.758818436727421*^9}, {
   3.758823777038122*^9, 3.758823789290497*^9}, {3.759993612397463*^9, 
   3.7599936134024467`*^9}, 3.7603302099236193`*^9, 3.760548869599391*^9, {
   3.7605496600119867`*^9, 3.7605496658864326`*^9}, {3.7605505893877993`*^9, 
   3.760550589970159*^9}, {3.7605506852881002`*^9, 3.760550686190517*^9}, {
   3.7605912552937593`*^9, 3.7605912689371843`*^9}, 3.770721394632951*^9, {
   3.792764401223851*^9, 
   3.792764403343451*^9}},ExpressionUUID->"90c24a8d-2990-4409-b739-\
d66b13e0d2f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BlankUnkVariables", ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Join", "[", "\t\t\t\t", "\n", "\t", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{"gcomp", ",", "sp"}], "]"}], "\[Rule]", 
             RowBox[{"Unk", "[", 
              RowBox[{"Subscript", "[", 
               RowBox[{"gcomp", ",", "sp"}], "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"gcomp", ",", 
              RowBox[{"gcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"sp", ",", 
            RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}]}], "}"}]}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", "\t", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"pcomp", "\[Rule]", 
           RowBox[{"Unk", "[", "pcomp", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"pcomp", ",", 
            RowBox[{"pcomps", "[", "pop", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"pop", ",", "pops"}], "}"}]}], "]"}], ",", "\n", "\t", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"aux", "\[Rule]", 
         RowBox[{"Unk", "[", "aux", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"aux", ",", "auxs"}], "}"}]}], "]"}]}], "\n", "]"}], "]"}]}],
   ";"}]], "Code",
 CellChangeTimes->{{3.6936494467363777`*^9, 3.693649486696768*^9}, {
   3.693700283097127*^9, 3.693700283368709*^9}, 3.709337119782999*^9, {
   3.710285813154852*^9, 3.710285816774274*^9}, 3.712738534281795*^9, 
   3.7551777209488783`*^9, {3.75881842318817*^9, 3.758818436727421*^9}, {
   3.75882650943286*^9, 3.75882651180029*^9}, {3.7599936172997313`*^9, 
   3.75999361789815*^9}, 3.760330210704319*^9, 3.7605488710501738`*^9, {
   3.760549670324209*^9, 3.7605496757176647`*^9}, {3.7605505908501873`*^9, 
   3.7605505915055637`*^9}, {3.7605506887533607`*^9, 
   3.7605506905628223`*^9}, {3.760591241764987*^9, 3.7605912497322083`*^9}, {
   3.761898757778133*^9, 3.761898759267354*^9}, {3.7619321681175127`*^9, 
   3.76193216812399*^9}, {3.761932225559523*^9, 3.761932225565673*^9}, {
   3.761932432877656*^9, 3.7619324328838987`*^9}, 
   3.770721424771494*^9},ExpressionUUID->"09a2d3a4-ab0a-420b-88b8-\
36b49efa5486"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["FixAttributes / FixVariables", "Subsection",
 CellChangeTimes->{
  3.769398846100878*^9, {3.769399355893752*^9, 3.769399365152405*^9}, {
   3.7693996539142447`*^9, 3.769399655038033*^9}, {3.7707214249281683`*^9, 
   3.7707214250837717`*^9}, {3.8002697504483337`*^9, 3.8002697507035303`*^9}, 
   3.8002697931729403`*^9, 3.800269958143313*^9, 
   3.8073692888122253`*^9},ExpressionUUID->"bff8f10f-23e7-4604-bfaa-\
3477b3290c4a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FixAttributes", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FixVariables", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.7693995781707172`*^9, 3.769399584021892*^9}, {
   3.770721425311617*^9, 3.770721425431561*^9}, {3.800269729023756*^9, 
   3.8002697301277933`*^9}, {3.800269787760303*^9, 3.8002697998564577`*^9}, 
   3.807369291523108*^9},ExpressionUUID->"d4363be8-d76e-4268-929d-\
44f427181b04"],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"9d8b3bb3-b1e9-4084-8f51-\
513c1d46f3e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FixAttributes", "[", "attributes_", "]"}], ":=", 
   RowBox[{
    RowBox[{"attributes", "/.", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"var_", "\[Rule]", 
        RowBox[{"arr_", "?", "ArrayQ"}]}], ")"}], "\[RuleDelayed]", 
      RowBox[{"Sequence", "@@", 
       RowBox[{"ArrayToRuleList", "[", 
        RowBox[{"var", ",", "arr"}], "]"}]}]}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[ScriptCapitalN]", "gu_"], "\[Rule]", 
       SubscriptBox["\[FormalCapitalN]", "gu"]}], ",", 
      RowBox[{
       RowBox[{"\[ScriptCapitalN]", "[", "gu_", "]"}], "\[Rule]", 
       RowBox[{"\[FormalCapitalN]", "[", "gu", "]"}]}]}], "}"}]}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.693699746990479*^9, 3.693699747001142*^9}, {
   3.693699778264751*^9, 3.69369978404256*^9}, {3.709124768363275*^9, 
   3.7091247942582893`*^9}, {3.7605513037699223`*^9, 3.760551304370201*^9}, 
   3.7605514646556273`*^9, 3.760551518295466*^9, {3.760591581667818*^9, 
   3.760591594402966*^9}, {3.7707214255444613`*^9, 3.770721427897716*^9}, {
   3.8001048307810717`*^9, 3.800104874084075*^9}, {3.80010490957337*^9, 
   3.800104948276902*^9}, {3.8001429078964853`*^9, 3.800142944537019*^9}, {
   3.80014366606109*^9, 3.800143721327313*^9}, {3.800143767269807*^9, 
   3.800143775253221*^9}, {3.800143893733498*^9, 3.800143910274753*^9}, 
   3.800144215457551*^9, {3.800269732704816*^9, 3.800269744208664*^9}, 
   3.800269803762433*^9, {3.800274219972117*^9, 3.800274226237452*^9}, 
   3.8073692922893887`*^9, {3.807369576211228*^9, 
   3.8073695767959213`*^9}},ExpressionUUID->"00d145dd-00b1-43d2-a935-\
00af1c782bb3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FixVariables", "[", "variables_", "]"}], ":=", 
   RowBox[{"variables", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[ScriptCapitalN]", "gu_"], "\[Rule]", 
       SubscriptBox["\[FormalCapitalN]", "gu"]}], ",", 
      RowBox[{
       RowBox[{"\[ScriptCapitalN]", "[", "gu_", "]"}], "\[Rule]", 
       RowBox[{"\[FormalCapitalN]", "[", "gu", "]"}]}]}], "}"}]}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.709124778756534*^9, 3.7091248314890747`*^9}, {
  3.70913598735986*^9, 3.709135987505537*^9}, {3.760591215175722*^9, 
  3.760591227239943*^9}, {3.770721428526178*^9, 3.7707214290496817`*^9}, {
  3.8002698066902723`*^9, 3.800269808841105*^9}, {3.8002742316776943`*^9, 
  3.800274244863064*^9}},ExpressionUUID->"b25ed788-ff3e-4b3c-bf7c-\
946d85648891"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["ExpandTraits", "Subsection",
 CellChangeTimes->{{3.818203821810515*^9, 
  3.818203824233437*^9}},ExpressionUUID->"d5255a85-689c-4875-9e00-\
c7dfffb503f4"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.8182039486193733`*^9, 
  3.818203949274516*^9}},ExpressionUUID->"6e2b9e1d-ca98-4386-a370-\
b2d1b42adfa3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExpandTraits", "::", "usage"}], "=", "\"\<\>\""}], ";"}]], "Code",\

 CellChangeTimes->{{3.818203960632709*^9, 
  3.818203963242813*^9}},ExpressionUUID->"36993993-0408-4c48-b321-\
c0e5f5c6f488"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.818203952457459*^9, 
  3.818203953650962*^9}},ExpressionUUID->"f2194c58-6ffb-4d6b-8e47-\
3507906c7eec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExpandTraits", "[", "traits_", "]"}], ":=", 
  RowBox[{"traits", "/.", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["trait", "i_"], "\[Rule]", "val_"}], ")"}], "\[Rule]", 
       RowBox[{"(", 
        RowBox[{"Sequence", "@@", 
         RowBox[{"Prepend", "[", "\n", "\t", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              SubscriptBox[
               RowBox[{"trait", "[", "gcomp", "]"}], "i"], "\[Rule]", "val"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"gcomp", ",", 
               RowBox[{"gcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
           RowBox[{
            SubscriptBox["trait", "i"], "\[Rule]", "val"}]}], "]"}]}], 
        ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"gu", ",", "guilds"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"trait", ",", 
        RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}]}]}]}]], "Code",
 CellChangeTimes->{{3.818203827673374*^9, 3.818203934275371*^9}, {
  3.818204140869808*^9, 3.818204144076953*^9}, {3.8182045921452*^9, 
  3.818204669463491*^9}},ExpressionUUID->"39d4c7ff-01d2-4a65-b4d1-\
444c1d08840c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["ExpRule", "Subsection",
 CellChangeTimes->{
  3.769399368074445*^9},ExpressionUUID->"b1472905-9889-4791-8002-\
bdb0ad4824b3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExpRule", "::", "usage"}], "=", 
   "\"\<Internal: make rule list var[t]\[Rule]E^log[var][t] for all logged \
vars.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769399778520631*^9, 3.76939978060634*^9}, {
  3.794693602975401*^9, 
  3.794693709902587*^9}},ExpressionUUID->"a365d682-5d4d-410b-b7a4-\
3f162f96aac8"],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"8882bd07-bc13-4acf-905f-\
f15dc6bf01e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"ExpRule", "[", 
      RowBox[{"vars_List", ",", "logged_"}], "]"}], ":=", 
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"logged", "===", "True"}], "&&", 
            RowBox[{
             RowBox[{"comptype", "[", "var", "]"}], "===", 
             "\"\<Extensive\>\""}]}], ",", 
           RowBox[{
            RowBox[{"var", "[", "t", "]"}], "\[Rule]", 
            RowBox[{"E", "^", 
             RowBox[{
              RowBox[{"log", "[", "var", "]"}], "[", "t", "]"}]}]}]}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"var", ",", "vars"}], "}"}]}], "]"}], ",", "Null"}], 
      "]"}]}], ";"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"ExpRule", "[", 
     RowBox[{"vars_List", ",", "logged_"}], "]"}], ":=", 
    RowBox[{"DeleteCases", "[", 
     RowBox[{
      RowBox[{"Flatten", "@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"logged", "===", "True"}], "&&", 
            RowBox[{
             RowBox[{"comptype", "[", "var", "]"}], "===", 
             "\"\<Extensive\>\""}]}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"var", "[", "t", "]"}], "\[Rule]", 
              RowBox[{"E", "^", 
               RowBox[{
                RowBox[{"log", "[", "var", "]"}], "[", "t", "]"}]}]}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"var", "\[Rule]", 
                RowBox[{
                 RowBox[{"Unk", "[", "var", "]"}], "[", "t", "]"}]}], ")"}], 
              "\[Rule]", 
              RowBox[{"(", 
               RowBox[{"var", "\[Rule]", 
                RowBox[{"E", "^", 
                 RowBox[{
                  RowBox[{"log", "[", 
                   RowBox[{"Unk", "[", "var", "]"}], "]"}], "[", "t", 
                  "]"}]}]}], ")"}]}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"var", ",", "vars"}], "}"}]}], "]"}]}], ",", "Null"}], 
     "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.7557092886304913`*^9, 3.755709339878284*^9}, {
   3.755709397273024*^9, 3.755709510551127*^9}, {3.7557254394763517`*^9, 
   3.755725442738577*^9}, {3.755796931534617*^9, 3.755796932005772*^9}, 
   3.7557970465609093`*^9, 3.760933107942115*^9, {3.774683827116836*^9, 
   3.774683833241415*^9}, {3.7746839209955397`*^9, 3.774683927204212*^9}, {
   3.7946117324663477`*^9, 3.79461173281783*^9}, {3.794691203537415*^9, 
   3.7946912686826763`*^9}, {3.794691313744752*^9, 3.794691344076475*^9}, {
   3.794691613493889*^9, 3.794691614861577*^9}, {3.79469284509264*^9, 
   3.794692883663056*^9}, 3.794692913703693*^9, {3.7946930316431503`*^9, 
   3.7946930537447243`*^9}, {3.794693115003907*^9, 3.7946931164032707`*^9}, {
   3.794693393548308*^9, 
   3.794693424371769*^9}},ExpressionUUID->"995641e2-e257-413a-909c-\
a8ec2b39fced"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
AddUnkts / AddVariablets / AddTraitts / FixVarCovts / RemoveVariablets / \
RemoveTraitts\
\>", "Subsection",
 CellChangeTimes->{{3.731534149563897*^9, 3.7315341787515173`*^9}, {
   3.731534781274663*^9, 3.731534788017005*^9}, 3.761377916317441*^9, 
   3.7613779726012373`*^9, {3.7694000795511713`*^9, 3.769400082346445*^9}, {
   3.816129499243806*^9, 
   3.816129502681608*^9}},ExpressionUUID->"9cba5aa2-666f-49bd-bf60-\
cd978b5f8989"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"AddUnkts", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AddVariablets", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AddTraitts", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FixVarCovts", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RemoveVariablets", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RemoveTraitts", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.7694001178281937`*^9, 3.769400146273016*^9}, {
  3.816129443555464*^9, 
  3.816129449473151*^9}},ExpressionUUID->"0cd3f122-ded4-48b7-9db3-\
0b1c8a41997d"],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"bdadb260-462d-42fc-8cb2-\
5ce54fabc919"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AddUnkts", ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"var_", "\[Rule]", 
      RowBox[{"Unk", "[", "stuff___", "]"}]}], ")"}], "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"var", "\[Rule]", 
      RowBox[{
       RowBox[{"Unk", "[", "stuff", "]"}], "[", "t", "]"}]}], ")"}]}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.758823285667995*^9, 3.7588233152779703`*^9}, {
   3.758823398267837*^9, 3.758823415264544*^9}, {3.7618987599856358`*^9, 
   3.761898760751514*^9}, {3.761932168129352*^9, 3.7619321681322727`*^9}, {
   3.7619322255686274`*^9, 3.761932225571561*^9}, {3.761932432889127*^9, 
   3.761932432891954*^9}, 
   3.7694001204921*^9},ExpressionUUID->"b0d57085-3cec-4640-84cf-523b8ab006e3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AddVariablets", ":=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Join", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"gcomp", ",", "\[FormalS]_"}], "]"}], "'"}], 
               "\[Rule]", 
               RowBox[{
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"gcomp", ",", "\[FormalS]"}], "]"}], "'"}], "[", 
                "t", "]"}]}], ","}], "*)"}], 
            RowBox[{
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"gcomp", ",", "\[FormalS]_"}], "]"}], "\[Rule]", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"gcomp", ",", "\[FormalS]"}], "]"}], "[", "t", 
               "]"}]}], ",", 
             RowBox[{
              RowBox[{"Unk", "[", 
               RowBox[{"gcomp", ",", "\[FormalS]_"}], "]"}], "\[Rule]", 
              RowBox[{
               RowBox[{"Unk", "[", 
                RowBox[{"gcomp", ",", "\[FormalS]"}], "]"}], "[", "t", 
               "]"}]}]}], "}"}], "\n", "\t", ",", 
           RowBox[{"{", 
            RowBox[{"gcomp", ",", 
             RowBox[{"gcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", "\t", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"pcomp", "\[Rule]", 
              RowBox[{"pcomp", "[", "t", "]"}]}], ",", 
             RowBox[{
              RowBox[{"Unk", "[", "pcomp", "]"}], "\[Rule]", 
              RowBox[{
               RowBox[{"Unk", "[", "pcomp", "]"}], "[", "t", "]"}]}]}], "}"}],
            "\n", "\t", ",", 
           RowBox[{"{", 
            RowBox[{"pcomp", ",", 
             RowBox[{"pcomps", "[", "pop", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"pop", ",", "pops"}], "}"}]}], "]"}], ",", "\n", "\t", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"aux", "\[Rule]", 
            RowBox[{"aux", "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"Unk", "[", "aux", "]"}], "\[Rule]", 
            RowBox[{
             RowBox[{"Unk", "[", "aux", "]"}], "[", "t", "]"}]}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"aux", ",", "auxs"}], "}"}]}], "]"}]}], "\n", "]"}], "]"}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7584816559846163`*^9, 3.7584816745074368`*^9}, {
   3.758519884495825*^9, 3.7585198859273577`*^9}, {3.758821068634445*^9, 
   3.758821135826847*^9}, 3.759992227263707*^9, 3.760330216152997*^9, 
   3.760548876608273*^9, {3.7605496801914454`*^9, 3.760549698107368*^9}, {
   3.760550593358289*^9, 3.760550595337738*^9}, {3.7605506969494877`*^9, 
   3.7605506986514387`*^9}, {3.7606711695160227`*^9, 3.760671180941361*^9}, 
   3.761377972611351*^9, 3.761378100983787*^9, {3.76183117620781*^9, 
   3.761831177772791*^9}, 3.7618312129414997`*^9, {3.761898761603327*^9, 
   3.7618987648220882`*^9}, {3.7619321681385*^9, 3.76193216815582*^9}, {
   3.761932225574917*^9, 3.761932225591367*^9}, {3.761932432897567*^9, 
   3.761932432915599*^9}, {3.817914142647663*^9, 3.817914177070942*^9}, 
   3.817914280911674*^9},ExpressionUUID->"81ee0f5f-5716-464d-a4e9-\
475509ba22b8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AddTraitts", ":=", 
   RowBox[{"Flatten", "[", "\n", "\t", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"gtrait", ",", "\[FormalS]_"}], "]"}], "\[Rule]", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"gtrait", ",", "\[FormalS]"}], "]"}], "[", "t", "]"}]}], 
          ",", "\n", "\t\t", 
          StyleBox[
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              SubscriptBox[
               RowBox[{"gtrait", "[", "gcomp", "]"}], "\[FormalS]_"], 
              "\[Rule]", 
              RowBox[{
               SubscriptBox[
                RowBox[{"gtrait", "[", "gcomp", "]"}], "\[FormalS]"], "[", 
               "t", "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"gcomp", ",", 
               RowBox[{"gcomps", "[", "gu", "]"}]}], "}"}]}], "]"}],
           Background->RGBColor[1, 1, 0]], 
          StyleBox[",",
           Background->RGBColor[1, 1, 0]], "\n", "\t\t", 
          RowBox[{
           RowBox[{"Unk", "[", 
            RowBox[{"gtrait", ",", "\[FormalS]_"}], "]"}], "\[Rule]", 
           RowBox[{
            RowBox[{"Unk", "[", 
             RowBox[{"gtrait", ",", "\[FormalS]"}], "]"}], "[", "t", 
            "]"}]}]}], "\n", "\t\t", "}"}], "\n", "\t", ",", 
        RowBox[{"{", 
         RowBox[{"gtrait", ",", 
          RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "\n", "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.731534102201387*^9, 3.731534130560973*^9}, {
   3.731534202254236*^9, 3.731534207377954*^9}, 3.731535957210956*^9, {
   3.731540735515911*^9, 3.731540763111388*^9}, {3.731631980824448*^9, 
   3.731631981281142*^9}, 3.755182423974742*^9, {3.758481685432131*^9, 
   3.7584816905767*^9}, {3.7585198786799*^9, 3.758519881061221*^9}, {
   3.758821474778405*^9, 3.758821476406591*^9}, {3.7588215114096727`*^9, 
   3.758821521303838*^9}, {3.760551310626953*^9, 3.760551312559985*^9}, 
   3.760551464675728*^9, 3.760551524686832*^9, {3.7608894290499477`*^9, 
   3.7608894369254313`*^9}, 3.761378111496436*^9, {3.7618311798831387`*^9, 
   3.7618311819375877`*^9}, 3.761831215310953*^9, {3.7618987655873623`*^9, 
   3.761898766306183*^9}, {3.761932168162553*^9, 3.761932168165885*^9}, {
   3.761932225594596*^9, 3.761932225597602*^9}, {3.761932432920904*^9, 
   3.7619324329240913`*^9}, {3.816128444520767*^9, 3.816128543929553*^9}, {
   3.816128603280855*^9, 3.816128677777708*^9}, 3.8161287373020144`*^9, {
   3.816128968902543*^9, 3.816128972884041*^9}, {3.8161290029267397`*^9, 
   3.8161290283664637`*^9}, {3.8161290887440643`*^9, 3.816129104805573*^9}, {
   3.816129416530046*^9, 3.81612942327299*^9}, {3.818364745926517*^9, 
   3.8183647987095203`*^9}},ExpressionUUID->"77fd7795-74a1-4446-aab5-\
78cda0976f80"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FixVarCovts", ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Var", "[", 
       RowBox[{
        RowBox[{"Subscript", "[", 
         RowBox[{"\[FormalT]_", ",", "\[FormalS]_"}], "]"}], "[", "t", "]"}], 
       "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"Var", "[", 
        RowBox[{"Subscript", "[", 
         RowBox[{"\[FormalT]", ",", "\[FormalS]"}], "]"}], "]"}], "[", "t", 
       "]"}]}], ",", 
     RowBox[{
      RowBox[{"Cov", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[FormalT]_", ",", "\[FormalS]_"}], "]"}], "[", "t", "]"}],
         ",", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[FormalCapitalT]_", ",", "\[FormalS]_"}], "]"}], "[", "t",
          "]"}]}], "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"Cov", "[", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[FormalT]", ",", "\[FormalS]"}], "]"}], ",", 
         RowBox[{"Subscript", "[", 
          RowBox[{"\[FormalCapitalT]", ",", "\[FormalS]"}], "]"}]}], "]"}], 
       "[", "t", "]"}]}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.8161294264329033`*^9, 3.816129434753419*^9}, {
  3.816129539276239*^9, 
  3.816129541811037*^9}},ExpressionUUID->"d9072340-d773-4fd7-bcaa-\
ba6d32a68645"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RemoveVariablets", ":=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Join", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{"gcomp", ",", "\[FormalS]_"}], "]"}], "[", "t", "]"}], 
            "\[Rule]", 
            RowBox[{"Subscript", "[", 
             RowBox[{"gcomp", ",", "\[FormalS]"}], "]"}]}], "\n", "\t", ",", 
           RowBox[{"{", 
            RowBox[{"gcomp", ",", 
             RowBox[{"gcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", "\t", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"pcomp", "[", "t", "]"}], "\[Rule]", "pcomp"}], ",", 
           RowBox[{"{", 
            RowBox[{"pcomp", ",", 
             RowBox[{"pcomps", "[", "pop", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"pop", ",", "pops"}], "}"}]}], "]"}], ",", "\n", "\t", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"aux", "[", "t", "]"}], "\[Rule]", "aux"}], ",", 
         RowBox[{"{", 
          RowBox[{"aux", ",", "auxs"}], "}"}]}], "]"}]}], "\n", "]"}], "]"}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7315341908259172`*^9, 3.731534195922613*^9}, {
   3.731534842787018*^9, 3.731534857513844*^9}, {3.731540861977981*^9, 
   3.731540869418703*^9}, {3.731631973702667*^9, 3.7316319743101883`*^9}, {
   3.731977846408972*^9, 3.7319778655033407`*^9}, {3.731979841111958*^9, 
   3.731979848640787*^9}, 3.755182419930862*^9, {3.755305438364966*^9, 
   3.75530544058921*^9}, {3.755346358125218*^9, 3.755346381612784*^9}, {
   3.758517578150181*^9, 3.75851758657201*^9}, {3.758518773164575*^9, 
   3.7585187765813227`*^9}, {3.758518807634006*^9, 3.758518815237708*^9}, {
   3.758518860899128*^9, 3.758518863888505*^9}, {3.758518900831294*^9, 
   3.758518902493078*^9}, {3.758519274099189*^9, 3.758519278730657*^9}, 
   3.75999223701198*^9, 3.760330218980772*^9, 3.760548877684125*^9, {
   3.760549703647882*^9, 3.760549719108775*^9}, {3.760550596105587*^9, 
   3.760550596615868*^9}, {3.760550702106985*^9, 3.7605507028711452`*^9}, {
   3.760671138329138*^9, 3.7606711443908663`*^9}, 
   3.761377917247423*^9},ExpressionUUID->"74ed862e-fd58-417e-b9f0-\
4b9109ef04ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RemoveTraitts", ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", "\n", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"gtrait", ",", "\[FormalS]_"}], "]"}], "[", "t", "]"}], 
         "\[Rule]", 
         RowBox[{"Subscript", "[", 
          RowBox[{"gtrait", ",", "\[FormalS]"}], "]"}]}], "\n", ",", 
        RowBox[{"{", 
         RowBox[{"gtrait", ",", 
          RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "]"}]}], ";"}]], "Code",\

 CellChangeTimes->{{3.758481413451056*^9, 3.7584814217502832`*^9}, {
   3.7585193410788183`*^9, 3.758519342886611*^9}, {3.7605513132140093`*^9, 
   3.760551313715143*^9}, 3.760551464681499*^9, 3.7605515255929327`*^9, {
   3.760671196050251*^9, 
   3.760671202037372*^9}},ExpressionUUID->"164f4b33-4055-4354-ba4e-\
865cb7012810"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["DefaultICs", "Subsection",
 CellChangeTimes->{{3.689288343730604*^9, 3.689288346032034*^9}, 
   3.714059650081333*^9},ExpressionUUID->"abd25943-d488-42df-8b14-\
66b86607838c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DefaultICs", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769410863280982*^9, 
  3.769410872561665*^9}},ExpressionUUID->"45c7a397-86e3-4468-8e06-\
e9786ab5c9f2"],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"03a3e299-245d-4c0f-b531-\
c865c2df1d16"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DefaultICs", ":=", 
   RowBox[{"Quiet", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"gcomp", ",", "sp"}], "]"}], "\[Rule]", 
                RowBox[{"Min", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"range", "[", "gcomp", "]"}], "]"}], "+", 
                    RowBox[{"Max", "[", 
                    RowBox[{"range", "[", "gcomp", "]"}], "]"}]}], ")"}], "/",
                    "2"}], ",", 
                  RowBox[{
                   RowBox[{"Min", "[", 
                    RowBox[{"range", "[", "gcomp", "]"}], "]"}], "+", "1"}]}],
                  "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"gcomp", ",", 
                 RowBox[{"gcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"sp", ",", 
               RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}]}], "}"}]}], 
            "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", "\t", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"pcomp", "\[Rule]", 
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Min", "[", 
                    RowBox[{"range", "[", "pcomp", "]"}], "]"}], "+", 
                   RowBox[{"Max", "[", 
                    RowBox[{"range", "[", "pcomp", "]"}], "]"}]}], ")"}], "/",
                  "2"}], ",", 
                RowBox[{
                 RowBox[{"Min", "[", 
                  RowBox[{"range", "[", "pcomp", "]"}], "]"}], "+", "1"}]}], 
               "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"pcomp", ",", 
               RowBox[{"pcomps", "[", "pop", "]"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"pop", ",", "pops"}], "}"}]}], "]"}], ",", "\n", "\t", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"aux", "\[Rule]", 
            RowBox[{"Min", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Min", "[", 
                  RowBox[{"range", "[", "aux", "]"}], "]"}], "+", 
                 RowBox[{"Max", "[", 
                  RowBox[{"range", "[", "aux", "]"}], "]"}]}], ")"}], "/", 
               "2"}], ",", 
              RowBox[{
               RowBox[{"Min", "[", 
                RowBox[{"range", "[", "aux", "]"}], "]"}], "+", "1"}]}], 
             "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"aux", ",", "auxs"}], "}"}]}], "]"}]}], "\n", "}"}], 
       "]"}], 
      StyleBox[
       RowBox[{"/.", 
        RowBox[{"Indeterminate", "\[Rule]", "0"}]}],
       Background->RGBColor[1, 1, 0]]}], 
     StyleBox[",",
      Background->RGBColor[1, 1, 0]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"Infinity", "::", "indet"}], "}"}],
      Background->RGBColor[1, 1, 0]]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.689288347867447*^9, 3.689288350913559*^9}, {
   3.689289052158764*^9, 3.6892890713175*^9}, 3.7140596500932293`*^9, 
   3.755392955071602*^9, 3.7599938210306387`*^9, 3.7603302218602667`*^9, 
   3.760548879301434*^9, {3.760549723954247*^9, 3.76054975078916*^9}, 
   3.760550597318928*^9, {3.760550705800119*^9, 3.7605507070227203`*^9}, {
   3.760694572526499*^9, 3.7606946154788647`*^9}, {3.7610400234658537`*^9, 
   3.761040043987863*^9}, 3.7707214292823467`*^9, {3.821448019949327*^9, 
   3.821448060095174*^9}},ExpressionUUID->"0b8b96bd-cddd-48d1-b5a4-\
c28122f7cba5"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["UnpackDoubleRightArrows", "Subsection",
 CellChangeTimes->{{3.817765781870462*^9, 
  3.817765786022325*^9}},ExpressionUUID->"ce337e42-3142-4642-bb08-\
c4cf34c94f84"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"DoubleRightArrow", ",", "HoldAllComplete"}], "]"}], ";"}]], "Code",\

 CellChangeTimes->{
  3.8177658306851788`*^9},ExpressionUUID->"38cccf2f-09f9-4249-acf8-\
450c55067370"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"UnpackDoubleRightArrows", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.817765787611462*^9, 
  3.817765804054818*^9}},ExpressionUUID->"d57dc447-3e88-4675-aed8-\
f594bc58face"],

Cell[BoxData[
 RowBox[{"UnpackDoubleRightArrows", ":=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DoubleRightArrow", "[", 
      RowBox[{
       RowBox[{"Times", "[", 
        RowBox[{"c1_", ",", "var1_"}], "]"}], ",", 
       RowBox[{"Times", "[", 
        RowBox[{"c2_", ",", "var2_"}], "]"}]}], "]"}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"var1", "\[Rule]", 
        RowBox[{"var1", "-", "c1"}]}], ",", 
       RowBox[{"var2", "\[Rule]", 
        RowBox[{"var2", "+", "c2"}]}]}], "}"}]}], ",", "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"DoubleRightArrow", "[", 
      RowBox[{"var1_", ",", 
       RowBox[{"Times", "[", 
        RowBox[{"c2_", ",", "var2_"}], "]"}]}], "]"}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"var1", "\[Rule]", 
        RowBox[{"var1", "-", "1"}]}], ",", 
       RowBox[{"var2", "\[Rule]", 
        RowBox[{"var2", "+", "c2"}]}]}], "}"}]}], ",", "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"DoubleRightArrow", "[", 
      RowBox[{
       RowBox[{"Times", "[", 
        RowBox[{"c1_", ",", "var1_"}], "]"}], ",", "var2_"}], "]"}], 
     "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"var1", "\[Rule]", 
        RowBox[{"var1", "-", "c1"}]}], ",", 
       RowBox[{"var2", "\[Rule]", 
        RowBox[{"var2", "+", "1"}]}]}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"DoubleRightArrow", "[", 
      RowBox[{"var1_", ",", "var2_"}], "]"}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"var1", "\[Rule]", 
        RowBox[{"var1", "-", "1"}]}], ",", 
       RowBox[{"var2", "\[Rule]", 
        RowBox[{"var2", "+", "1"}]}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "}"}]}]], "Code",
 CellChangeTimes->{
  3.8177658106702337`*^9},ExpressionUUID->"df581828-0d9a-4a3a-8843-\
601ec8214d49"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["External EcoEvo Utilities", "Section",
 CellChangeTimes->{{3.769411539605648*^9, 
  3.769411545792008*^9}},ExpressionUUID->"2fcbbfa2-d027-44b2-967b-\
eeb030aa0f4d"],

Cell[CellGroupData[{

Cell["EcoEvoDocs", "Subsection",
 CellChangeTimes->{{3.7709732370563707`*^9, 
  3.770973239064177*^9}},ExpressionUUID->"6a44a643-dcbe-4ee1-b434-\
747dd1df28fd"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.770973247815833*^9, 
  3.77097324829732*^9}},ExpressionUUID->"e1cf47bf-d96a-4bbc-947c-\
35c82ab311ec"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoEvoDocs", "::", "usage"}], "=", 
   "\"\<EcoEvoDocs opens the main EcoEvo guide.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.770973252960753*^9, 
  3.770973278985108*^9}},ExpressionUUID->"1159b705-673a-43c1-9ab5-\
73613f19e3f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.770973283056822*^9, 
  3.770973284088749*^9}},ExpressionUUID->"f1b14103-4223-4dc1-822f-\
e68faffdc0ec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EcoEvoDocs", ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"NotebookOpen", "[", "\"\<paclet:EcoEvo/guide/EcoEvo\>\"", "]"}],
      ";", "Null"}], ")"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.770973240584649*^9, 
  3.770973241809462*^9}},ExpressionUUID->"431ff3fc-e538-48c3-9e5b-\
71b8be074e1c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
ExtractTraits / ExtractInteractions / ExtractAttributes / ExtractAuxs / \
ExtractPops / ExtractGuilds / ExtractVariables / ExtractSpecies\
\>", "Subsection",
 CellChangeTimes->{
  3.712738534355612*^9, {3.7981287487597733`*^9, 3.798128760486023*^9}, 
   3.807369293337575*^9, {3.812025024128833*^9, 
   3.812025026456085*^9}},ExpressionUUID->"3ef6ddd7-ed26-4962-9db9-\
65d3472f6a6a"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"ccb52fa9-eb35-47e8-a3ae-\
882094e2ec39"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExtractInteractions", "::", "usage"}], "=", "\n", 
    "\"\<ExtractInteractions[\!\(\*StyleBox[\"x\", \"TI\"]\)] extracts \
interactions from rulelist or list-of-rulelists \!\(\*StyleBox[\"x\", \"TI\"]\
\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExtractTraits", "::", "usage"}], "=", "\n", 
    "\"\<ExtractTraits[x] extracts traits from rulelist or list-of-rulelists \
\!\(\*StyleBox[\"x\", \"TI\"]\).\nExtractTraits[\!\(\*StyleBox[\"x\", \"TI\"]\
\), \!\(\*StyleBox[\"target\", \"TI\"]\)] extracts only traits from guild or \
species \!\(\*StyleBox[\"target\", \"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExtractAttributes", "::", "usage"}], "=", "\n", 
    "\"\<ExtractAttributes[\!\(\*StyleBox[\"x\", \"TI\"]\)] extracts traits \
and interactions from rulelist or list-of-rulelists \!\(\*StyleBox[\"x\", \
\"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExtractGuilds", "::", "usage"}], "=", "\n", 
    "\"\<ExtractGuilds[\!\(\*StyleBox[\"x\", \"TI\"]\)] extracts guilds from \
rulelist or list-of-rulelists \!\(\*StyleBox[\"x\", \"TI\"]\).\n\
ExtractGuilds[\!\(\*StyleBox[\"x\", \"TI\"]\), \!\(\*StyleBox[\"target\", \
\"TI\"]\)] extracts only guilds from guild or species \!\(\*StyleBox[\"target\
\", \"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExtractPops", "::", "usage"}], "=", "\n", 
    "\"\<ExtractPops[\!\(\*StyleBox[\"x\", \"TI\"]\)] extracts pops from \
rulelist or list-of-rulelists \!\(\*StyleBox[\"x\", \"TI\"]\).\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExtractAuxs", "::", "usage"}], "=", "\n", 
    "\"\<ExtractAuxs[\!\(\*StyleBox[\"x\", \"TI\"]\)] extracts auxs from \
rulelist or list-of-rulelists \!\(\*StyleBox[\"x\", \"TI\"]\).\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExtractVariables", "::", "usage"}], "=", "\n", 
    "\"\<ExtractVariables[\!\(\*StyleBox[\"x\", \"TI\"]\)] extracts pops, \
guilds, and auxs from rulelist or list-of-rulelists \!\(\*StyleBox[\"x\", \
\"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtractSpecies", "::", "usage"}], "=", "\n", 
   "\"\<ExtractSpecies[\!\(\*StyleBox[\"x\", \"TI\"]\)] extracts pops and \
guilds from rulelist or list-of-rulelists \!\(\*StyleBox[\"x\", \
\"TI\"]\).\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.769437110680235*^9, 3.769437111608778*^9}, {
  3.788937977865283*^9, 3.788937985099709*^9}, {3.788938032751066*^9, 
  3.7889380385792093`*^9}, {3.7889380690186768`*^9, 3.788938080744104*^9}, {
  3.788938123879369*^9, 3.788938144028455*^9}, {3.79787184086532*^9, 
  3.797871877169051*^9}, {3.797872139547431*^9, 3.7978721658615932`*^9}, {
  3.798042313903335*^9, 3.798042354845627*^9}, {3.807310437493854*^9, 
  3.807310464004532*^9}, {3.807348792841753*^9, 3.807348793048642*^9}, {
  3.807369294888605*^9, 3.807369295442027*^9}, {3.8120244196682158`*^9, 
  3.812024447037324*^9}},ExpressionUUID->"4ff1b352-5311-4ce2-908b-\
84191aebcee7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definitions", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 3.769493676072991*^9}, 
   3.78893731109571*^9},ExpressionUUID->"371ab853-678a-4458-aeae-\
fea57938dab7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExtractInteractions", "[", 
    RowBox[{"in_", "?", "RuleListQ"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "pattern", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"pattern", "=", 
       RowBox[{"Join", "[", "\n", "\t\t", 
        RowBox[{"interactions", ",", "\n", "\t\t", 
         RowBox[{"Table", "[", 
          RowBox[{
           SubscriptBox["interaction", 
            RowBox[{"_", ",", "_"}]], ",", 
           RowBox[{"{", 
            RowBox[{"interaction", ",", "interactions"}], "}"}]}], "]"}], ",",
          "\n", "\t\t", 
         RowBox[{"Table", "[", 
          RowBox[{
           SubscriptBox["\[ScriptCapitalN]", "gu"], ",", 
           RowBox[{"{", 
            RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", "\t\t", 
         
         RowBox[{
          StyleBox["Table",
           Background->RGBColor[1, 0.5, 0.5]], "[", 
          RowBox[{
           SubscriptBox["\[FormalCapitalN]", "gu"], 
           StyleBox[",",
            Background->RGBColor[1, 0.5, 0.5]], 
           StyleBox[
            RowBox[{"{", 
             RowBox[{"gu", ",", "guilds"}], "}"}],
            Background->RGBColor[1, 0.5, 0.5]]}], 
          StyleBox["]",
           Background->RGBColor[1, 0.5, 0.5]]}]}], "\n", "\t", "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"Return", "[", 
       RowBox[{"FilterRules", "[", 
        RowBox[{"in", ",", "pattern"}], "]"}], "]"}]}]}], "\n", "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{
  3.6885717778700447`*^9, {3.688577368197812*^9, 3.688577393049588*^9}, {
   3.693749622310945*^9, 3.693749634802327*^9}, 3.693750076711399*^9, {
   3.7128302310469112`*^9, 3.712830232158642*^9}, {3.712837497471251*^9, 
   3.712837498555839*^9}, {3.7218463563633204`*^9, 3.721846356739352*^9}, 
   3.721846695351218*^9, {3.721848617442614*^9, 3.721848617873474*^9}, {
   3.760268000452673*^9, 3.760268002013647*^9}, {3.76034904191365*^9, 
   3.7603490425220423`*^9}, {3.760627807865922*^9, 3.760627808114243*^9}, 
   3.760627860352873*^9, {3.761327037705061*^9, 3.7613270450796223`*^9}, 
   3.7613271027463703`*^9, {3.769882865724286*^9, 3.769882867799795*^9}, 
   3.7704670803222113`*^9, 3.770721429515737*^9, {3.788895343217702*^9, 
   3.788895364022966*^9}, {3.7888958635187387`*^9, 3.788895920144249*^9}, {
   3.7888961177942953`*^9, 3.788896137547245*^9}, {3.788896207370467*^9, 
   3.788896355174231*^9}, {3.788896447618429*^9, 3.788896450520863*^9}, {
   3.788896499568675*^9, 3.7888965690530024`*^9}, {3.7888966964098883`*^9, 
   3.788896834261051*^9}, {3.788896965405735*^9, 3.788897075157218*^9}, {
   3.788928403870023*^9, 3.788928462364789*^9}, {3.788933745506369*^9, 
   3.7889337515044518`*^9}, {3.788933827514214*^9, 3.788933863635253*^9}, {
   3.7889339015623407`*^9, 3.788933914696512*^9}, {3.7889339719779663`*^9, 
   3.788934004923729*^9}, {3.788934095079214*^9, 3.788934163088644*^9}, 
   3.788935409995368*^9, {3.7978709772032337`*^9, 3.797871011211113*^9}, 
   3.797871382873053*^9, {3.797871771966765*^9, 3.797871832569708*^9}, 
   3.797885930792571*^9, {3.7978862801595078`*^9, 3.797886284996449*^9}, {
   3.797886641834188*^9, 3.797886643112557*^9}, 3.7980409363918*^9, {
   3.807348713213335*^9, 3.807348764599547*^9}, {3.815478640905169*^9, 
   3.815478661559869*^9}, {3.829319434662746*^9, 
   3.8293194357190742`*^9}},ExpressionUUID->"c8c9cbdd-0ec0-4a24-8d68-\
e5b3f50d6047"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExtractTraits", "[", 
    RowBox[{
     RowBox[{"in_", "?", "RuleListQ"}], ",", 
     RowBox[{"target_", ":", "All"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", ",", "pattern", ",", "gu", ",", "sp"}], "}"}], ",", "\n",
      "\t", 
     RowBox[{
      RowBox[{"Which", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"target", "===", "All"}], ",", "\n", "\t\t", 
        RowBox[{"pattern", "=", 
         RowBox[{"Join", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                SubscriptBox["gtrait", "_"], ",", 
                RowBox[{"{", 
                 RowBox[{"gtrait", ",", 
                  RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
              
              RowBox[{"{", 
               RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "]"}], ",", 
           "\n", "\t\t\t", 
           StyleBox[
            RowBox[{"Flatten", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   SubscriptBox[
                    RowBox[{"gtrait", "[", "gcomp", "]"}], "_"], ",", 
                   RowBox[{"{", 
                    RowBox[{"gcomp", ",", 
                    RowBox[{"gcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"gtrait", ",", 
                   RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "]"}],
            Background->RGBColor[1, 1, 0]], 
           StyleBox[",",
            Background->RGBColor[1, 1, 0]], "\n", "\t\t\t", 
           RowBox[{"Table", "[", 
            RowBox[{
             SubscriptBox["\[ScriptCapitalN]", "gu"], ",", 
             RowBox[{"{", 
              RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", 
           "\t\t\t", 
           RowBox[{
            StyleBox["Table",
             Background->RGBColor[1, 0.5, 0.5]], "[", 
            RowBox[{
             SubscriptBox["\[FormalCapitalN]", "gu"], 
             StyleBox[",",
              Background->RGBColor[1, 0.5, 0.5]], 
             StyleBox[
              RowBox[{"{", 
               RowBox[{"gu", ",", "guilds"}], "}"}],
              Background->RGBColor[1, 0.5, 0.5]]}], 
            StyleBox["]",
             Background->RGBColor[1, 0.5, 0.5]]}]}], "\n", "\t\t", "]"}]}], 
        ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Head", "[", "target", "]"}], "===", "Subscript"}], ",", 
        "\n", "\t\t", 
        RowBox[{
         RowBox[{"gu", "=", 
          RowBox[{
          "target", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         ";", 
         RowBox[{"sp", "=", 
          RowBox[{
          "target", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         ";", "\n", "\t\t", 
         RowBox[{"pattern", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            SubscriptBox["gtrait", "sp"], ",", 
            RowBox[{"{", 
             RowBox[{"gtrait", ",", 
              RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}]}]}], ",", 
        "\n", "\t\t", "Else", ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"gu", "=", "target"}], ";", "\n", "\t\t", 
         RowBox[{"pattern", "=", 
          RowBox[{"Join", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              SubscriptBox["gtrait", "_"], ",", 
              RowBox[{"{", 
               RowBox[{"gtrait", ",", 
                RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
            "\n", "\t\t\t", 
            StyleBox[
             RowBox[{"Flatten", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  SubscriptBox[
                   RowBox[{"gtrait", "[", "gcomp", "]"}], "_"], ",", 
                  RowBox[{"{", 
                   RowBox[{"gcomp", ",", 
                    RowBox[{"gcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"gtrait", ",", 
                  RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}], "]"}],
             Background->RGBColor[1, 1, 0]], 
            StyleBox[",",
             Background->RGBColor[1, 1, 0]], "\n", "\t\t\t", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["\[ScriptCapitalN]", "gu"], ",", 
              SubscriptBox["\[FormalCapitalN]", "gu"]}], "}"}]}], "]"}]}]}]}],
        "\n", "\t", "]"}], ";", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<pattern=\>\"", ",", "pattern"}], "]"}], ";"}], "*)"}], 
      "\n", "\t", 
      RowBox[{"res", "=", 
       RowBox[{"FilterRules", "[", 
        RowBox[{"in", ",", "pattern"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"Return", "[", "res", "]"}]}]}], "\n", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.6885717778700447`*^9, {3.688577368197812*^9, 3.688577393049588*^9}, {
   3.693749622310945*^9, 3.693749634802327*^9}, 3.693750076711399*^9, {
   3.7128302310469112`*^9, 3.712830232158642*^9}, {3.712837497471251*^9, 
   3.712837498555839*^9}, {3.7218463563633204`*^9, 3.721846356739352*^9}, 
   3.721846695351218*^9, {3.721848617442614*^9, 3.721848617873474*^9}, {
   3.760268000452673*^9, 3.760268002013647*^9}, {3.76034904191365*^9, 
   3.7603490425220423`*^9}, {3.760627807865922*^9, 3.760627808114243*^9}, 
   3.760627860352873*^9, {3.761327037705061*^9, 3.7613270450796223`*^9}, 
   3.7613271027463703`*^9, {3.769882865724286*^9, 3.769882867799795*^9}, 
   3.7704670803222113`*^9, 3.770721429515737*^9, {3.788895343217702*^9, 
   3.788895364022966*^9}, {3.7888958635187387`*^9, 3.788895920144249*^9}, {
   3.7888961177942953`*^9, 3.788896137547245*^9}, {3.788896207370467*^9, 
   3.788896355174231*^9}, {3.788896447618429*^9, 3.788896450520863*^9}, {
   3.788896499568675*^9, 3.7888965690530024`*^9}, {3.7888966964098883`*^9, 
   3.788896834261051*^9}, {3.788896965405735*^9, 3.788897075157218*^9}, {
   3.788928403870023*^9, 3.788928462364789*^9}, {3.788933745506369*^9, 
   3.7889337515044518`*^9}, {3.788933827514214*^9, 3.788933863635253*^9}, {
   3.7889339015623407`*^9, 3.788933914696512*^9}, {3.7889339719779663`*^9, 
   3.788934004923729*^9}, {3.788934095079214*^9, 3.788934163088644*^9}, 
   3.788935409995368*^9, {3.818170521860725*^9, 3.8181706051598787`*^9}, {
   3.8293194033671513`*^9, 
   3.82931941347717*^9}},ExpressionUUID->"b1420268-b51e-4720-b9ae-\
61a3178a715b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExtractAttributes", "[", 
    RowBox[{"in_", "?", "RuleListQ"}], "]"}], ":=", 
   RowBox[{
    StyleBox["Union",
     Background->RGBColor[1, 0.5, 0.5]], "[", 
    RowBox[{
     RowBox[{"ExtractTraits", "[", "in", "]"}], ",", 
     RowBox[{"ExtractInteractions", "[", "in", "]"}]}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{
  3.712738534369461*^9, 3.712837533682328*^9, {3.7218463818390293`*^9, 
   3.721846382270219*^9}, 3.7602680180357656`*^9, 3.760349052450103*^9, {
   3.761327054718958*^9, 3.7613270867014227`*^9}, {3.7980423758692093`*^9, 
   3.798042391454452*^9}, 3.807369296546276*^9, {3.829319488031814*^9, 
   3.829319489285749*^9}},ExpressionUUID->"82154185-087d-4411-baac-\
3e681f5cc747"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExtractGuilds", "[", 
    RowBox[{
     RowBox[{"in_", "?", "RuleListQ"}], ",", 
     RowBox[{"target_", ":", "All"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", ",", "pattern", ",", "gu", ",", "sp"}], "}"}], ",", "\n",
      "\t", 
     RowBox[{
      RowBox[{"Which", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"target", "===", "All"}], ",", "\n", "\t\t", 
        RowBox[{"pattern", "=", 
         RowBox[{"Join", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                SubscriptBox["gcomp", "_"], ",", 
                RowBox[{"{", 
                 RowBox[{"gcomp", ",", 
                  RowBox[{"gcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "]"}], ",", 
           "\n", "\t\t\t", 
           RowBox[{"Table", "[", 
            RowBox[{
             SubscriptBox["\[ScriptCapitalN]", "gu"], ",", 
             RowBox[{"{", 
              RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", 
           "\t\t\t", 
           RowBox[{
            StyleBox["Table",
             Background->RGBColor[1, 0.5, 0.5]], "[", 
            RowBox[{
             SubscriptBox["\[FormalCapitalN]", "gu"], 
             StyleBox[",",
              Background->RGBColor[1, 0.5, 0.5]], 
             StyleBox[
              RowBox[{"{", 
               RowBox[{"gu", ",", "guilds"}], "}"}],
              Background->RGBColor[1, 0.5, 0.5]]}], 
            StyleBox["]",
             Background->RGBColor[1, 0.5, 0.5]]}], 
           StyleBox[",",
            Background->RGBColor[1, 0.5, 0.5]], "\n", "\t\t\t", 
           RowBox[{"Table", "[", 
            RowBox[{
             SubscriptBox["gu", "_"], ",", 
             RowBox[{"{", 
              RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "\n", "\t\t", 
          "]"}]}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Head", "[", "target", "]"}], "===", "Subscript"}], ",", 
        "\n", "\t\t", 
        RowBox[{
         RowBox[{"gu", "=", 
          RowBox[{
          "target", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         ";", 
         RowBox[{"sp", "=", 
          RowBox[{
          "target", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         ";", "\n", "\t\t", 
         RowBox[{"pattern", "=", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              SubscriptBox["gcomp", "sp"], ",", 
              RowBox[{"{", 
               RowBox[{"gcomp", ",", 
                RowBox[{"gcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             SubscriptBox["gu", "sp"], "}"}]}], "]"}]}]}], ",", "\n", "\t\t", 
        "Else", ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"gu", "=", "target"}], ";", "\n", "\t\t", 
         RowBox[{"pattern", "=", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              SubscriptBox["gcomp", "_"], ",", 
              RowBox[{"{", 
               RowBox[{"gcomp", ",", 
                RowBox[{"gcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              SubscriptBox["gu", "_"], ",", 
              SubscriptBox["\[ScriptCapitalN]", "gu"]}], "}"}]}], "]"}]}]}]}],
        "\n", "\t", "]"}], ";", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<pattern=\>\"", ",", "pattern"}], "]"}], ";"}], "*)"}], 
      "\n", "\t", 
      RowBox[{"res", "=", 
       RowBox[{"FilterRules", "[", 
        RowBox[{"in", ",", "pattern"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"Return", "[", "res", "]"}]}]}], "\n", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.688571777896756*^9, {3.688577411224319*^9, 3.688577420028517*^9}, {
   3.693749885161036*^9, 3.693749891813983*^9}, 3.6937499410629587`*^9, 
   3.693750081086241*^9, {3.712830225346066*^9, 3.712830225999054*^9}, 
   3.7128375310358143`*^9, {3.721846368243229*^9, 3.7218463686206503`*^9}, {
   3.721846688286047*^9, 3.721846689122287*^9}, {3.7218486256614857`*^9, 
   3.7218486260638943`*^9}, 3.760268014956057*^9, 3.760349065282054*^9, {
   3.7606278721710987`*^9, 3.760627872565806*^9}, 3.761327052369128*^9, 
   3.761327091551917*^9, {3.769882852269857*^9, 3.769882858032569*^9}, 
   3.7704670561333237`*^9, 3.7707214296339684`*^9, {3.788936053135*^9, 
   3.788936073930478*^9}, {3.788936161151848*^9, 3.78893621693232*^9}, 
   3.811951326862667*^9, {3.811951488539486*^9, 3.81195155634848*^9}, {
   3.8119515939422417`*^9, 3.811951633996196*^9}, 3.811951810369782*^9, {
   3.829319261920949*^9, 
   3.829319282439126*^9}},ExpressionUUID->"38659521-1994-41eb-861b-\
7ab28ab3dbdd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExtractAuxs", "[", 
    RowBox[{"in_", "?", "RuleListQ"}], "]"}], ":=", 
   RowBox[{"FilterRules", "[", 
    RowBox[{"in", ",", "auxs"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.688577400280003*^9, 3.68857740321148*^9}, 
   3.712837525104989*^9, {3.721846359986237*^9, 3.7218463604413967`*^9}, 
   3.721846693392199*^9, {3.721848621479903*^9, 3.721848622577486*^9}, {
   3.760268007048152*^9, 3.760268008445224*^9}, 3.760330284959484*^9, {
   3.7603490465983458`*^9, 3.7603490469389687`*^9}, 3.761327047757061*^9, 
   3.761327097474118*^9, {3.7704607698483257`*^9, 3.770460770490244*^9}, {
   3.788935591137528*^9, 3.7889356165652018`*^9}, {3.788935648440753*^9, 
   3.78893565437731*^9}},ExpressionUUID->"a421e90b-3be3-4e5e-9ece-\
3d82f12eb928"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExtractPops", "[", 
    RowBox[{"in_", "?", "RuleListQ"}], "]"}], ":=", 
   RowBox[{"FilterRules", "[", 
    RowBox[{"in", ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"pcomps", "[", "pop", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"pop", ",", "pops"}], "}"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.6885774052677393`*^9, 3.688577407763575*^9}, 
   3.71283752654624*^9, {3.721846363931897*^9, 3.721846364641821*^9}, 
   3.721846691821311*^9, {3.721848653211532*^9, 3.721848653604781*^9}, 
   3.7602680117938213`*^9, 3.7603490493705463`*^9, {3.760549249558888*^9, 
   3.760549249859106*^9}, 3.761327049633895*^9, 3.7613270944595413`*^9, 
   3.770467170363895*^9, {3.788935686225439*^9, 3.78893570336728*^9}, 
   3.788935840951283*^9},ExpressionUUID->"d09c50d8-e42a-44c4-b7f3-\
3b4dadd8f25f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExtractVariables", "[", 
    RowBox[{"in_", "?", "RuleListQ"}], "]"}], ":=", 
   RowBox[{
    StyleBox["Union",
     Background->RGBColor[1, 0.5, 0.5]], "[", 
    RowBox[{
     RowBox[{"ExtractAuxs", "[", "in", "]"}], ",", 
     RowBox[{"ExtractPops", "[", "in", "]"}], ",", 
     RowBox[{"ExtractGuilds", "[", "in", "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.712738534369461*^9, 3.712837533682328*^9, {3.7218463818390293`*^9, 
   3.721846382270219*^9}, 3.7602680180357656`*^9, 3.760349052450103*^9, {
   3.761327054718958*^9, 3.7613270867014227`*^9}, {3.829319514135494*^9, 
   3.8293195149099703`*^9}},ExpressionUUID->"fdb77459-dbad-4f0c-91d8-\
77fde33488a7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExtractSpecies", "[", 
    RowBox[{"in_", "?", "RuleListQ"}], "]"}], ":=", 
   RowBox[{
    StyleBox["Union",
     Background->RGBColor[1, 0.5, 0.5]], "[", 
    RowBox[{
     RowBox[{"ExtractPops", "[", "in", "]"}], ",", 
     RowBox[{"ExtractGuilds", "[", "in", "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.712738534369461*^9, 3.712837533682328*^9, {3.7218463818390293`*^9, 
   3.721846382270219*^9}, 3.7602680180357656`*^9, 3.760349052450103*^9, {
   3.761327054718958*^9, 3.7613270867014227`*^9}, {3.812024866815687*^9, 
   3.8120248718628607`*^9}, 3.81202499919282*^9, {3.829319505815425*^9, 
   3.829319506783184*^9}},ExpressionUUID->"2d7f9a18-e161-4975-ba9e-\
171bea55de23"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"make", " ", "Listable"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ExtractTraits", "[", 
      RowBox[{
       RowBox[{"in_", "?", "RuleListListQ"}], ",", "target___"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"ExtractTraits", "[", 
        RowBox[{"#", ",", "target"}], "]"}], "&"}], "/@", "in"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ExtractTraits", "[", 
      RowBox[{
       RowBox[{"in_", "?", "RuleListQ"}], ",", "target_List"}], "]"}], ":=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Union", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ExtractTraits", "[", 
          RowBox[{"in", ",", "#"}], "]"}], "&"}], "/@", "target"}], "]"}], 
      "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ExtractInteractions", "[", 
      RowBox[{"in_", "?", "RuleListListQ"}], "]"}], ":=", 
     RowBox[{"ExtractInteractions", "/@", "in"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ExtractAttributes", "[", 
      RowBox[{"in_", "?", "RuleListListQ"}], "]"}], ":=", 
     RowBox[{"ExtractAttributes", "/@", "in"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ExtractGuilds", "[", 
      RowBox[{
       RowBox[{"in_", "?", "RuleListListQ"}], ",", "target___"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"ExtractGuilds", "[", 
        RowBox[{"#", ",", "target"}], "]"}], "&"}], "/@", "in"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ExtractGuilds", "[", 
      RowBox[{
       RowBox[{"in_", "?", "RuleListQ"}], ",", "target_List"}], "]"}], ":=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Union", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ExtractGuilds", "[", 
          RowBox[{"in", ",", "#"}], "]"}], "&"}], "/@", "target"}], "]"}], 
      "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ExtractAuxs", "[", 
      RowBox[{"in_", "?", "RuleListListQ"}], "]"}], ":=", 
     RowBox[{"ExtractAuxs", "/@", "in"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ExtractPops", "[", 
      RowBox[{"in_", "?", "RuleListListQ"}], "]"}], ":=", 
     RowBox[{"ExtractPops", "/@", "in"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ExtractVariables", "[", 
      RowBox[{"in_", "?", "RuleListListQ"}], "]"}], ":=", 
     RowBox[{"ExtractVariables", "/@", "in"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ExtractSpecies", "[", 
      RowBox[{"in_", "?", "RuleListListQ"}], "]"}], ":=", 
     RowBox[{"ExtractSpecies", "/@", "in"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.712738534381083*^9, 3.71273853438449*^9}, {
  3.712914115067301*^9, 3.712914122632641*^9}, {3.7889344244495163`*^9, 
  3.7889344294666147`*^9}, {3.788934679182316*^9, 3.788934690005019*^9}, {
  3.788934724619598*^9, 3.788934789563463*^9}, {3.7889349046418047`*^9, 
  3.788934910036866*^9}, {3.7889349576333857`*^9, 3.78893496142562*^9}, {
  3.788934993260954*^9, 3.788934997011826*^9}, {3.788935032171843*^9, 
  3.788935040865541*^9}, {3.788935196853129*^9, 3.788935197079936*^9}, {
  3.788936332262185*^9, 3.788936351569697*^9}, {3.788937950027893*^9, 
  3.788937951586451*^9}, {3.807349029615239*^9, 3.8073490673338623`*^9}, {
  3.8073692988261347`*^9, 3.807369299519277*^9}, {3.812025010943688*^9, 
  3.81202501831363*^9}},ExpressionUUID->"688fd88b-075c-4154-bc76-\
10d2eb22ddbd"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
TraitsQ / InteractionsQ / AttributesQ / VariablesQ / AttributesAndVariablesQ \
/ ListOfVariablesQ \
\>", "Subsection",
 CellChangeTimes->{{3.6850943774759493`*^9, 3.685094378210535*^9}, {
  3.712738534442067*^9, 3.7127385345778112`*^9}, {3.729615042876402*^9, 
  3.72961504567223*^9}, {3.731892410516787*^9, 3.731892411931158*^9}, {
  3.798128765150104*^9, 3.79812877828622*^9}, {3.7981488207086763`*^9, 
  3.7981488298829947`*^9}, {3.807369300628269*^9, 
  3.80736930149118*^9}},ExpressionUUID->"c2bc71c5-9b2a-427c-b666-\
5bd7c3ca8461"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"f761e716-52ba-49e2-8de1-\
df236770ee31"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TraitsQ", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<TraitsQ[\!\(\*StyleBox[\"x\", \"TI\"]\)] returns True if \
\!\(\*StyleBox[\"x\", \"TI\"]\) is a rulelist of traits.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InteractionsQ", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<InteractionsQ[\!\(\*StyleBox[\"x\", \"TI\"]\)] returns True if \
\!\(\*StyleBox[\"x\", \"TI\"]\) is a rulelist of interactions.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AttributesQ", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<AttributesQ[\!\(\*StyleBox[\"x\", \"TI\"]\)] returns True if \
\!\(\*StyleBox[\"x\", \"TI\"]\) is a rulelist of traits and/or \
interactions.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"VariablesQ", "::", "usage"}], "=", "\n", 
    "\"\<VariablesQ[\!\(\*StyleBox[\"x\", \"TI\"]\)] returns True if \
\!\(\*StyleBox[\"x\", \"TI\"]\) is a rulelist of variables.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ListOfVariablesQ", "::", "usage"}], "=", "\n", 
    "\"\<ListOfVariablesQ[\!\(\*StyleBox[\"x\", \"TI\"]\)] returns True if \!\
\(\*StyleBox[\"x\", \"TI\"]\) is a list of rulelists of variables.\>\""}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AttributesAndVariablesQ", "::", "usage"}], "=", "\n", 
   "\"\<AttributesAndVariablesQ[\!\(\*StyleBox[\"x\", \"TI\"]\)] returns True \
if \!\(\*StyleBox[\"x\", \"TI\"]\) is a rulelist of attributes (traits or \
interactions) and variables (auxs, pops, guilds).\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.7694509509346848`*^9, 3.769450960945455*^9}, {
   3.798041234716812*^9, 3.798041247403247*^9}, {3.798041372148944*^9, 
   3.798041383422418*^9}, {3.798041430276506*^9, 3.798041451052403*^9}, {
   3.7980415220627832`*^9, 3.798041523230444*^9}, {3.798041669382866*^9, 
   3.798041693685617*^9}, {3.7980417435440493`*^9, 3.798041756111302*^9}, {
   3.798041986077198*^9, 3.798042009067277*^9}, {3.7981488460681963`*^9, 
   3.798148846267271*^9}, {3.7983005854828777`*^9, 3.7983006020123158`*^9}, {
   3.807369303252307*^9, 3.807369305403288*^9}, 
   3.807369577631584*^9},ExpressionUUID->"397917a9-cb7c-41f9-92ef-\
0e35c7fdf1c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"0ef051dc-b55c-482d-9b86-\
c5392df80e25"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TraitsQ", "[", "list_", "]"}], ":=", 
  RowBox[{"VectorQ", "[", 
   RowBox[{"list", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}], 
         "===", "Rule"}], "||", 
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}], 
         "===", "RuleDelayed"}]}], ")"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"First", "@", 
          RowBox[{"LookUp", "[", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "]"}]}], "===", "\"\<gtrait\>\""}], "||", 
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], "===", 
         "\[ScriptCapitalN]"}], "||", 
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], "===", 
         "\[FormalCapitalN]"}]}], ")"}]}], "&"}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.685094385419814*^9, 3.68509438699021*^9}, {
   3.6884103468055573`*^9, 3.68841034684472*^9}, {3.688571777923759*^9, 
   3.688571777970282*^9}, {3.688574862053771*^9, 3.688574880436173*^9}, 
   3.6885750159533*^9, 3.688575067552972*^9, {3.688577270307032*^9, 
   3.688577297349419*^9}, {3.714672518778007*^9, 3.714672533955903*^9}, 
   3.734026349774651*^9, 3.760637032620634*^9, 3.770721429865418*^9, {
   3.7978663059075727`*^9, 3.797866309438093*^9}, 3.798041364004179*^9, 
   3.815351521817395*^9},ExpressionUUID->"899fa9e3-ba6e-4fe1-a47b-\
43792ddea20a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"InteractionsQ", "[", "list_", "]"}], ":=", 
  RowBox[{"VectorQ", "[", 
   RowBox[{"list", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}], 
         "===", "Rule"}], "||", 
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}], 
         "===", "RuleDelayed"}]}], ")"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"First", "@", 
          RowBox[{"LookUp", "[", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "]"}]}], "===", "\"\<interaction\>\""}], "||", 
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], "===", 
         "\[ScriptCapitalN]"}], "||", 
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], "===", 
         "\[FormalCapitalN]"}]}], ")"}]}], "&"}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.685094385419814*^9, 3.68509438699021*^9}, {
   3.6884103468055573`*^9, 3.68841034684472*^9}, {3.688571777923759*^9, 
   3.688571777970282*^9}, {3.688574862053771*^9, 3.688574880436173*^9}, 
   3.6885750159533*^9, 3.688575067552972*^9, {3.688577270307032*^9, 
   3.688577297349419*^9}, {3.714672518778007*^9, 3.714672533955903*^9}, 
   3.734026349774651*^9, 3.760637032620634*^9, 3.770721429865418*^9, {
   3.7978663059075727`*^9, 3.797866309438093*^9}, {3.798041328300983*^9, 
   3.798041341396192*^9}, 
   3.815351514976144*^9},ExpressionUUID->"41f558fe-72ce-4edf-8f83-\
753a7bc9d658"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AttributesQ", "[", "list_", "]"}], ":=", 
  RowBox[{"VectorQ", "[", 
   RowBox[{"list", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}], 
         "===", "Rule"}], "||", 
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}], 
         "===", "RuleDelayed"}]}], ")"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"First", "@", 
          RowBox[{"LookUp", "[", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "]"}]}], "===", "\"\<gtrait\>\""}], "||", 
        RowBox[{
         RowBox[{"First", "@", 
          RowBox[{"LookUp", "[", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "]"}]}], "===", "\"\<interaction\>\""}], "||", 
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], "===", 
         "\[ScriptCapitalN]"}], "||", 
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], "===", 
         "\[FormalCapitalN]"}]}], ")"}]}], "&"}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.798041351022028*^9, 3.798041355098723*^9}, {
   3.798041661351028*^9, 3.7980416632542963`*^9}, 3.798041979740637*^9, {
   3.800230542178965*^9, 3.80023056031775*^9}, 
   3.807369306261561*^9},ExpressionUUID->"180b3602-5637-4e9a-928b-\
9038c45ca08f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"VariablesQ", "[", "list_", "]"}], ":=", 
  RowBox[{
   RowBox[{"list", "===", "\"\<FindEcoAttractor\>\""}], "||", 
   RowBox[{"VectorQ", "[", 
    RowBox[{"list", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}],
           "===", "Rule"}], "||", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}],
           "===", "RuleDelayed"}]}], ")"}], "&&", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<pcomp\>\"", ",", "\"\<gcomp\>\"", ",", "\"\<aux\>\""}], 
            "}"}], ",", 
           RowBox[{"First", "@", 
            RowBox[{"LookUp", "[", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "]"}]}]}], "]"}], "||", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], "===", 
          "\[ScriptCapitalN]"}], "||", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], "===", 
          "\[FormalCapitalN]"}]}], ")"}]}], "&"}]}], "]"}]}]}]], "Code",
 CellChangeTimes->{{3.685094385425008*^9, 3.68509438700746*^9}, {
   3.688410346871194*^9, 3.688410346897923*^9}, {3.6885717779886293`*^9, 
   3.6885717780304003`*^9}, {3.688574890268084*^9, 3.6885749108207207`*^9}, 
   3.688575013529243*^9, {3.688577300429867*^9, 3.688577337985496*^9}, 
   3.712738534588655*^9, {3.7146725251878433`*^9, 3.714672537299164*^9}, {
   3.727314415150532*^9, 3.7273144497426243`*^9}, 3.770721430091138*^9, 
   3.815351507278802*^9},ExpressionUUID->"6078d0a6-d9ca-4cbe-9f64-\
7ac5aec4001d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AttributesAndVariablesQ", "[", "list_", "]"}], ":=", "\n", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"RuleListQ", "[", "list", "]"}], "&&", 
     RowBox[{
      RowBox[{"FixAttributes", "[", 
       RowBox[{
        StyleBox["Union",
         Background->RGBColor[1, 0.5, 0.5]], "[", 
        RowBox[{
         RowBox[{"ExtractTraits", "[", "list", "]"}], ",", 
         RowBox[{"ExtractInteractions", "[", "list", "]"}]}], "]"}], "]"}], "=!=",
       "list"}], "&&", 
     RowBox[{
      RowBox[{"FixVariables", "[", 
       RowBox[{"ExtractVariables", "[", "list", "]"}], "]"}], "=!=", 
      "list"}]}], ",", "True", ",", "False", ",", "False"}], "]"}]}]], "Code",\

 CellChangeTimes->{{3.712909677064527*^9, 3.712909685426083*^9}, {
   3.7129099816012363`*^9, 3.712909981927301*^9}, {3.712910026391035*^9, 
   3.712910064318368*^9}, {3.712910473044516*^9, 3.71291047745501*^9}, {
   3.712933041063407*^9, 3.712933080085595*^9}, {3.712933201536586*^9, 
   3.712933202222687*^9}, {3.712933441418971*^9, 3.712933500964047*^9}, 
   3.712933598900647*^9, 3.727141788333399*^9, {3.727141991542884*^9, 
   3.727141995727724*^9}, {3.7640444858528023`*^9, 3.7640444870107393`*^9}, {
   3.7707214302088737`*^9, 3.770721430424119*^9}, {3.79804145892443*^9, 
   3.798041460436368*^9}, 3.798041497646431*^9, {3.798041766135079*^9, 
   3.79804180227859*^9}, {3.798042125443239*^9, 3.798042127260404*^9}, 
   3.800272278136031*^9, 3.800272353655249*^9, {3.807369307458601*^9, 
   3.807369308080781*^9}, {3.8293200727335033`*^9, 
   3.829320073620866*^9}},ExpressionUUID->"0fc3e62a-5e9c-4ac2-acd0-\
d8f28e135083"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ListOfVariablesQ", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"x", "===", 
      RowBox[{"{", "}"}]}], ",", "False", ",", 
     RowBox[{"VectorQ", "[", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"VariablesQ", "[", "#", "]"}], "&"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.685029723592835*^9, 3.685029755014036*^9}, {
  3.685094385434823*^9, 3.6850943870427303`*^9}, {3.688575019602787*^9, 
  3.688575024240135*^9}, {3.712738534607686*^9, 3.712738534611191*^9}, {
  3.712785582276157*^9, 3.712785596491372*^9}, {3.714672548288992*^9, 
  3.714672549143828*^9}},ExpressionUUID->"6bbc6363-df66-4db0-b7e3-\
08ac2e6e6c29"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["InvaderQ / NotInvaderTraitsQ / GsQ", "Subsection",
 CellChangeTimes->{{3.7981488373873787`*^9, 
  3.798148840210524*^9}},ExpressionUUID->"2a54b519-bd3e-4b53-a73e-\
08df8112affd"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.798148853042705*^9, 
  3.798148853586273*^9}},ExpressionUUID->"347d4f2b-6cef-49ce-9e98-\
469015b22779"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InvaderQ", "::", "usage"}], "=", "\n", 
    "\"\<InvaderQ[\!\(\*StyleBox[\"x\", \"TI\"]\)] returns True if \
\!\(\*StyleBox[\"x\", \"TI\"]\) is a possible invader.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NotInvaderTraitsQ", "::", "usage"}], "=", "\n", 
    "\"\<NotInvaderTraitsQ[\!\(\*StyleBox[\"x\", \"TI\"]\)] returns True if \
\!\(\*StyleBox[\"x\", \"TI\"]\) is a rulelist of traits with no \
invaders.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GsQ", "::", "usage"}], "=", "\n", 
   "\"\<GsQ[\!\(\*StyleBox[\"x\", \"TI\"]\)] returns True if \
\!\(\*StyleBox[\"x\", \"TI\"]\) is a list of G matrices or V \
variances.\>\""}], ";"}]}], "Code",
 CellChangeTimes->{
  3.7981488649633837`*^9},ExpressionUUID->"78128b0f-bc35-44c1-bfbc-\
f32cb778370d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.798148874459464*^9, 
  3.79814887562679*^9}},ExpressionUUID->"312f7649-43be-482d-9694-\
10a5a7b7118d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"InvaderQ", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "===", "Automatic"}], " ", "||", "\n", "\t", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"pcomps", "[", "pop", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"pop", ",", "pops"}], "}"}]}], "]"}], "]"}], ",", 
          "pops"}], "]"}], ",", "x"}], "]"}], "||", "\n", "\t", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"LookUp", "[", "x", "]"}], "\[LeftDoubleBracket]", "1", 
          "\[RightDoubleBracket]"}], "===", "\"\<gcomp\>\""}], "||", 
        RowBox[{
         RowBox[{
          RowBox[{"LookUp", "[", "x", "]"}], "\[LeftDoubleBracket]", "1", 
          "\[RightDoubleBracket]"}], "===", "\"\<guild\>\""}]}], ")"}], "||", 
      "\n", "\t", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}], 
         "===", "Rule"}], "&&", 
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"LookUp", "[", 
           RowBox[{
           "x", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "]"}],
           "]"}], "\[GreaterEqual]", "4"}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{"LookUp", "[", 
           RowBox[{
           "x", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "]"}],
           "\[LeftDoubleBracket]", 
          RowBox[{"{", 
           RowBox[{"1", ",", "4"}], "}"}], "\[RightDoubleBracket]"}], "===", 
         RowBox[{"{", 
          RowBox[{"\"\<gtrait\>\"", ",", "0"}], "}"}]}]}], ")"}], "||", "\n", 
      "\t", 
      RowBox[{"VectorQ", "[", 
       RowBox[{"x", ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
           "#", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}], "===",
            "Rule"}], "&&", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"LookUp", "[", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "]"}], "]"}], "\[GreaterEqual]", "4"}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{"LookUp", "[", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "]"}], "\[LeftDoubleBracket]", 
            RowBox[{"{", 
             RowBox[{"1", ",", "4"}], "}"}], "\[RightDoubleBracket]"}], "===", 
           RowBox[{"{", 
            RowBox[{"\"\<gtrait\>\"", ",", "0"}], "}"}]}]}], "&"}]}], "]"}], "||",
       "\n", "\t", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}], 
         "===", "Rule"}], "&&", 
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"LookUp", "[", 
           RowBox[{
           "x", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "]"}],
           "]"}], "\[GreaterEqual]", "5"}], "&&", 
        RowBox[{
         RowBox[{
          RowBox[{"LookUp", "[", 
           RowBox[{
           "x", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "]"}],
           "\[LeftDoubleBracket]", 
          RowBox[{"{", 
           RowBox[{"1", ",", "5"}], "}"}], "\[RightDoubleBracket]"}], "===", 
         RowBox[{"{", 
          RowBox[{"\"\<interaction\>\"", ",", "0"}], "}"}]}]}], ")"}], "||", 
      "\n", "\t", 
      RowBox[{"VectorQ", "[", 
       RowBox[{"x", ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
           "#", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}], "===",
            "Rule"}], "&&", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"LookUp", "[", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "]"}], "]"}], "\[GreaterEqual]", "5"}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{"LookUp", "[", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "]"}], "\[LeftDoubleBracket]", 
            RowBox[{"{", 
             RowBox[{"1", ",", "5"}], "}"}], "\[RightDoubleBracket]"}], "===", 
           RowBox[{"{", 
            RowBox[{"\"\<interaction\>\"", ",", "0"}], "}"}]}]}], "&"}]}], 
       "]"}]}], ",", "\n", "\t", "True", ",", "False"}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.7296141658833237`*^9, 3.7296142510971603`*^9}, {
   3.7296143372996798`*^9, 3.729614347163463*^9}, {3.729614438676077*^9, 
   3.729614525164071*^9}, {3.729615160515861*^9, 3.7296152185715237`*^9}, {
   3.729615792473963*^9, 3.729615834352541*^9}, 3.7599400177387743`*^9, {
   3.760549252680098*^9, 3.7605492530092487`*^9}, {3.760637043075551*^9, 
   3.760637044851983*^9}, 3.7704671812288427`*^9, {3.787620495416019*^9, 
   3.7876205013370934`*^9}, 3.798149139237954*^9, 3.798149839551054*^9, {
   3.798150116168736*^9, 3.798150138768731*^9}, {3.798151521912578*^9, 
   3.798151525280512*^9}, {3.800101729956189*^9, 3.8001017517042513`*^9}, {
   3.800101835273425*^9, 3.800101875415739*^9}, {3.800102266437707*^9, 
   3.8001022873020153`*^9}, {3.8001023236943502`*^9, 
   3.8001023343259783`*^9}, {3.800102492679953*^9, 3.8001024972711554`*^9}, {
   3.800102601521963*^9, 3.800102618281207*^9}, {3.800102699474205*^9, 
   3.800102752705406*^9}, {3.800102836300156*^9, 3.8001028848034*^9}, {
   3.800102925236848*^9, 3.800102937258685*^9}, {3.8001058175166883`*^9, 
   3.800105819645371*^9}},ExpressionUUID->"49e84c1a-f647-4c66-aeeb-\
bc826bbd6663"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NotInvaderTraitsQ", "[", "list_", "]"}], ":=", 
   RowBox[{"VectorQ", "[", 
    RowBox[{"list", ",", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}],
           "===", "Rule"}], "||", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}],
           "===", "RuleDelayed"}]}], ")"}], "&&", "\n", "\t", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"LookUp", "[", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "]"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "===", "\"\<gtrait\>\""}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{"LookUp", "[", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "]"}], "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], "=!=",
             "0"}]}], ")"}], "||", "\n", "\t", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"LookUp", "[", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "]"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "===", "\"\<interaction\>\""}], "&&", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"LookUp", "[", 
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "]"}], "]"}], "\[Equal]", "4"}], "||", 
             RowBox[{
              RowBox[{
               RowBox[{"LookUp", "[", 
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "]"}], "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}],
               "=!=", "0"}]}], ")"}]}], ")"}], "||", "\n", "\t", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], "===", 
          "\[ScriptCapitalN]"}], "||", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], "===", 
          "\[FormalCapitalN]"}]}], ")"}]}], "\n", "&"}]}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.734026345983852*^9, 3.734026370544599*^9}, {
   3.734026423128497*^9, 3.734026451697287*^9}, {3.7340978743958893`*^9, 
   3.7340978773533783`*^9}, 3.760637035134163*^9, 3.770721430645666*^9, {
   3.798149070968843*^9, 3.798149134301632*^9}, {3.798149446793483*^9, 
   3.798149448344861*^9}, {3.800105241592204*^9, 3.800105242062541*^9}, {
   3.8001057752216673`*^9, 3.8001057752847643`*^9}, {3.800105999784644*^9, 
   3.800106041327095*^9}, {3.800115938637607*^9, 3.8001159416201153`*^9}, {
   3.815266359328372*^9, 
   3.8152663634734163`*^9}},ExpressionUUID->"5ccd08d1-f015-4c4f-a675-\
bc051696076c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GsQ", "[", "list_", "]"}], ":=", 
   RowBox[{"VectorQ", "[", 
    RowBox[{"list", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}],
           "===", "Rule"}], "||", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}],
           "===", "RuleDelayed"}]}], ")"}], "&&", 
       RowBox[{"(", 
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"G", ",", "V"}], "}"}], ",", 
          RowBox[{"#", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}]}], "]"}], 
        ")"}]}], "&"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.731891664340337*^9, 3.731891727039733*^9}, 
   3.7318923351664667`*^9, 
   3.798149140885735*^9},ExpressionUUID->"c7e424ce-c040-44c6-9da4-\
a6b81e641849"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["DeleteInvaders", "Subsection",
 CellChangeTimes->{{3.7352280013063*^9, 
  3.735228003585195*^9}},ExpressionUUID->"e5fa1016-75d8-4e8b-ae67-\
83c71bc65cbe"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"9639104e-21f3-4605-bd77-\
17b0819d1241"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DeleteInvaders", "::", "usage"}], "=", "\n", 
   "\"\<DeleteInvaders[\!\(\*StyleBox[\"list\", \"TI\"]\)] removes invaders \
(with subscript 0) from \!\(\*StyleBox[\"list\", \"TI\"]\).\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.7694516127483063`*^9, 
  3.7694516135024567`*^9}},ExpressionUUID->"ee564172-ae55-4d37-b785-\
ed253e5259e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"4dbf0506-3926-4702-987c-\
275c3c7de4b9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DeleteInvaders", "[", "list_List", "]"}], ":=", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{"list", ",", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"_", ",", "0", ",", "___"}], "]"}], "\[Rule]", "_"}]}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.735228005746393*^9, 3.735228019289205*^9}, {
  3.798301326164632*^9, 
  3.798301342283511*^9}},ExpressionUUID->"5368694f-6195-41cd-b13f-\
9a5f339afd7f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["SelectValid", "Subsection",ExpressionUUID->"2f001460-ba96-496e-854d-e5316ae00074"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"27b3153a-23ee-416b-950b-\
b5f919bc8578"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SelectValid", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<SelectValid[\!\(\*StyleBox[\"sol\", \"TI\"]\)] selects valid \
solutions in list of rule lists \!\(\*StyleBox[\"sol\", \"TI\"]\).\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.7694835983504*^9, 
  3.769483599083385*^9}},ExpressionUUID->"249f4e09-bc3a-4512-b7f4-\
c08737e45bcf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"37a72122-4579-4eb9-b58a-\
331eb69929f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SelectValid", "[", 
    RowBox[{"sol", ":", 
     RowBox[{"(", 
      RowBox[{"_", "?", "RuleListListQ"}], ")"}], ":", 
     RowBox[{"{", "}"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "res", "}"}], ",", "\n", "\n", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
         RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", "\n", 
      
      RowBox[{"res", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"Do", "[", "\n", "\t", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"CompoundAnd", "[", 
           RowBox[{"Flatten", "@", 
            RowBox[{"Table", "[", "\n", "\t\t", 
             RowBox[{
              RowBox[{"Which", "[", "\n", "\t\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{"Head", "[", 
                  RowBox[{
                  "el", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}], "]"}], "===", "TemporalData"}], 
                ",", "\n", "\t\t\t", 
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"IntervalMemberQ", "[", 
                    RowBox[{
                    RowBox[{"range", "[", 
                    RowBox[{
                    "el", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}], ",", "#"}], "]"}], 
                   "&"}], ",", 
                  RowBox[{
                   RowBox[{"Normal", "[", 
                    RowBox[{
                    "el", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "]"}], "\[LeftDoubleBracket]", 
                   
                   RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], 
                 "]"}], ",", "\n", "\t\t\t", "Else", ",", "\n", "\t\t\t", 
                RowBox[{"IntervalMemberQ", "[", 
                 RowBox[{
                  RowBox[{"range", "[", 
                   RowBox[{
                   "el", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}], ",", 
                  RowBox[{
                  "el", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}]}], "]"}]}], "\n", "\t\t\t", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"Min", "[", 
                  RowBox[{"range", "[", 
                   RowBox[{
                   "el", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}], "]"}], "\[LessEqual]", 
                 RowBox[{
                 "el", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
                  "\[LessEqual]", 
                 RowBox[{"Max", "[", 
                  RowBox[{"range", "[", 
                   RowBox[{
                   "el", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}], "]"}]}], "*)"}], "\n", 
               "\t\t", "]"}], "\n", "\t", ",", 
              RowBox[{"{", 
               RowBox[{"el", ",", "eq"}], "}"}]}], "]"}]}], "]"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"res", ",", "eq"}], "]"}]}], "]"}], "\n", ",", 
        RowBox[{"{", 
         RowBox[{"eq", ",", "sol"}], "}"}]}], "]"}], ";", "\n", "\n", 
      RowBox[{"Return", "[", "res", "]"}]}]}], "\n", "\n", "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.688571758711397*^9, 3.688571758779146*^9}, {
   3.688571805769764*^9, 3.688571805808754*^9}, {3.688596296305945*^9, 
   3.688596343803912*^9}, {3.688596388163796*^9, 3.688596391457307*^9}, {
   3.688597080025927*^9, 3.688597118394058*^9}, {3.688597156493305*^9, 
   3.688597170073834*^9}, {3.688597238786375*^9, 3.688597248193912*^9}, {
   3.688597279227922*^9, 3.688597283595931*^9}, {3.6885973417880793`*^9, 
   3.688597538588483*^9}, {3.68859761503491*^9, 3.688597700634725*^9}, {
   3.709336743303987*^9, 3.709336744416458*^9}, 3.71010596051061*^9, 
   3.712738534731523*^9, {3.7151242794038773`*^9, 3.7151242803430853`*^9}, {
   3.715124614918346*^9, 3.715124615444268*^9}, {3.71512473562722*^9, 
   3.715124833268942*^9}, {3.715125959879683*^9, 3.7151259993498287`*^9}, {
   3.7151260953360443`*^9, 3.7151261036884527`*^9}, {3.715162545499557*^9, 
   3.715162545637548*^9}, {3.715255472125362*^9, 3.715255512523314*^9}, {
   3.71525559188104*^9, 3.715255596839315*^9}, {3.715256213190209*^9, 
   3.715256267065208*^9}, {3.715256510607285*^9, 3.715256613136565*^9}, {
   3.715256648824877*^9, 3.715256708610546*^9}, {3.715256848267054*^9, 
   3.7152568731900063`*^9}, {3.715256963561351*^9, 3.715256996800877*^9}, {
   3.715257778715033*^9, 3.715257784803192*^9}, {3.7152578339186077`*^9, 
   3.715257867523587*^9}, {3.715556865281728*^9, 3.715556877066525*^9}, {
   3.715556922488647*^9, 3.715556934795897*^9}, {3.715557054045401*^9, 
   3.715557058557568*^9}, {3.7155571165792522`*^9, 3.715557165087747*^9}, 
   3.7697607052969837`*^9, 3.7704382649420223`*^9, {3.7862579100213327`*^9, 
   3.7862579353604593`*^9}, {3.7862580531524982`*^9, 
   3.7862580545405083`*^9}, {3.786258095383791*^9, 3.786258097179205*^9}, {
   3.786258148135645*^9, 3.7862581755500813`*^9}, {3.786258409698909*^9, 
   3.786258413684407*^9}, 3.7862584544444733`*^9, 
   3.794137240466197*^9},ExpressionUUID->"2a8a8890-398b-474d-ae14-\
4e49a08f7791"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["SplitSpecies", "Subsection",
 CellChangeTimes->{{3.811344487831479*^9, 
  3.811344490503697*^9}},ExpressionUUID->"60cd7c9d-8eae-4860-addd-\
ce6a0cac9f78"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.811344495977648*^9, 
  3.8113444964379673`*^9}},ExpressionUUID->"8913fef5-67db-4141-ade4-\
451fd38450bc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SplitSpecies", "::", "usage"}], "=", "\n", 
   "\"\<SplitSpecies[\!\(\*StyleBox[\"sol\", \"TI\"]\), \
\!\(\*StyleBox[\"target\", \"TI\"]\)] splits \!\(\*StyleBox[\"target\", \
\"TI\"]\) in two.\nSplitSpecies[\!\(\*StyleBox[\"sol\", \"TI\"]\), \
\!\(\*StyleBox[\"target\", \"TI\"]\), \!\(\*StyleBox[\"dtraits\", \"TI\"]\)] \
uses distance \!\(\*StyleBox[\"dtraits\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.811344502871355*^9, 3.8113445626101017`*^9}, {
  3.811344965714991*^9, 3.811344992561994*^9}, {3.811345231567843*^9, 
  3.8113452438926487`*^9}, {3.811345423734877*^9, 3.811345430950485*^9}, {
  3.811952552133017*^9, 3.8119525629881783`*^9}, {3.812235817114822*^9, 
  3.8122358770008907`*^9}},ExpressionUUID->"ce28c2c1-1935-46d2-ad67-\
d71a33483cbc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.8113444977378674`*^9, 
  3.811344499406023*^9}},ExpressionUUID->"047a4258-b290-4f99-8c47-\
36b0af4694ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SplitSpecies", "[", 
    RowBox[{
     RowBox[{"sol_", "?", "AttributesAndVariablesQ"}], ",", "target_", ",", 
     RowBox[{"dtraitsin_", ":", "Automatic"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<SplitSpecies\>\"", "]"}]}], ",", "\n", 
       
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "gu", ",", 
       "sp", ",", "dtraits", ",", "ecomps", ",", "tmp"}], "\n", "}"}], ",", 
     "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"figure", " ", "out", " ", "target", " ", "sp"}], " ", "*)"}],
        "\n", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"gu", ",", "sp"}], "}"}], "=", 
         RowBox[{
          RowBox[{"LookUp", "[", "target", "]"}], "\[LeftDoubleBracket]", 
          RowBox[{"{", 
           RowBox[{"2", ",", "4"}], "}"}], "\[RightDoubleBracket]"}]}], ";", 
        "\n", "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"dtraitsin", "===", "Automatic"}], ",", "\n", "\t", 
          RowBox[{"dtraits", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"trait", "\[Rule]", "0.01"}], ",", 
             RowBox[{"{", 
              RowBox[{"trait", ",", 
               RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}]}], ",", 
          "\n", "\t", 
          RowBox[{"NumericQ", "[", "dtraitsin", "]"}], ",", "\n", "\t", 
          RowBox[{"dtraits", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"trait", "\[Rule]", "dtraitsin"}], ",", 
             RowBox[{"{", 
              RowBox[{"trait", ",", 
               RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}]}], ",", 
          "\n", "\t", "Else", ",", "\n", "\t", 
          RowBox[{"dtraits", "=", "dtraitsin"}]}], "\n", "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<dtraits=\>\"", ",", "dtraits"}], "]"}], ";"}], "*)"}],
         "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"Set\[ScriptCapitalN]", "[", 
         RowBox[{
          RowBox[{"ExtractAttributes", "[", "sol", "]"}], ",", 
          RowBox[{"ExtractVariables", "[", "sol", "]"}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: \[ScriptCapitalN]=\>\"", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "]"}]}], 
         "]"}], ";", "\n", "\n", 
        RowBox[{"ecomps", "=", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"gcomps", "[", "gu", "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"comptype", "[", "#", "]"}], "\[Equal]", 
             "\"\<Extensive\>\""}], "&"}]}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"split", " ", "target", " ", 
          RowBox[{"species", "'"}], " ", "extensive", " ", "components"}], 
         " ", "*)"}], "\n", 
        RowBox[{"tmp", "=", 
         RowBox[{"sol", "/.", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["var", "sp"], "\[Rule]", "val_"}], ")"}], 
             "\[Rule]", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["var", "sp"], "\[Rule]", 
               RowBox[{"val", "/", "2"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"var", ",", "ecomps"}], "}"}]}], "]"}]}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", "tmp", "]"}], ";"}], "*)"}], "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"add", " ", "new", " ", 
          RowBox[{"species", "'"}], " ", "components"}], " ", "*)"}], "\n", 
        RowBox[{"tmp", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"tmp", ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              SubscriptBox["var", 
               RowBox[{
                RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], "+", "1"}]], 
              "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["var", "sp"], "/.", "tmp"}], ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"var", ",", 
               RowBox[{"gcomps", "[", "gu", "]"}]}], "}"}]}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", "tmp", "]"}], ";"}], "*)"}], "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"add", " ", "new", " ", 
          RowBox[{"species", "'"}], " ", "traits"}], " ", "*)"}], "\n", 
        RowBox[{"tmp", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"tmp", ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              SubscriptBox["trait", 
               RowBox[{
                RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], "+", "1"}]], 
              "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  SubscriptBox["trait", "sp"], "/.", "tmp"}], ")"}], "+", 
                RowBox[{"(", 
                 RowBox[{"trait", "/.", "dtraits"}], ")"}]}], ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"trait", ",", 
               RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", "tmp", "]"}], ";"}], "*)"}], "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"change", " ", "target", " ", 
          RowBox[{"species", "'"}], " ", "traits"}], " ", "*)"}], "\n", 
        RowBox[{"tmp", "=", 
         RowBox[{"RuleListSubtract", "[", 
          RowBox[{"tmp", ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              SubscriptBox["trait", "sp"], "\[Rule]", 
              RowBox[{"(", 
               RowBox[{"trait", "/.", "dtraits"}], ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"trait", ",", 
               RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", "tmp", "]"}], ";"}], "*)"}], "\n", "\n", 
        RowBox[{"Return", "[", 
         RowBox[{"Sort", "[", "tmp", "]"}], "]"}], ";"}]}], "\n", "]"}]}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.811344502871355*^9, 3.8113445626101017`*^9}, {
   3.811345176516151*^9, 3.811345179327285*^9}, {3.8113452971205606`*^9, 
   3.811345351825704*^9}, {3.811345396739921*^9, 3.811345418687499*^9}, {
   3.811345500681964*^9, 3.811345503390733*^9}, {3.811345535602709*^9, 
   3.811345546293475*^9}, 3.811345906609544*^9, {3.811345956683634*^9, 
   3.811345991170438*^9}, {3.8113465426088133`*^9, 3.811346686719741*^9}, {
   3.811347167806396*^9, 3.811347198878368*^9}, {3.811347421910317*^9, 
   3.811347435721059*^9}, {3.8113476839516573`*^9, 3.811347731780102*^9}, {
   3.811347914553289*^9, 3.811347923999611*^9}, {3.8113481638810997`*^9, 
   3.811348254326375*^9}, {3.811348498783869*^9, 3.811348520684121*^9}, {
   3.811348553656905*^9, 3.811348932856223*^9}, {3.811349033654603*^9, 
   3.811349068839267*^9}, {3.811349156896147*^9, 3.811349207930746*^9}, {
   3.8113492394136887`*^9, 3.8113492408548107`*^9}, {3.811349285103552*^9, 
   3.8113493197841797`*^9}, {3.811349652674642*^9, 3.811349656246682*^9}, {
   3.811349696058908*^9, 3.81134975507343*^9}, {3.811349801453174*^9, 
   3.811349827458417*^9}, {3.811349866292266*^9, 
   3.811349905126082*^9}},ExpressionUUID->"30c8c9e3-4ecd-44b8-b4b5-\
680dabcf8fd3"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Model Related", "Section",
 CellChangeTimes->{{3.769483444807362*^9, 
  3.769483446455855*^9}},ExpressionUUID->"abe0c0e0-89f6-4432-be8a-\
1ef2c1459dac"],

Cell[CellGroupData[{

Cell["SetModel", "Subsection",ExpressionUUID->"57e7b90f-fb29-438d-80ae-054ee7e41371"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"6f1fc0e3-315c-42d2-904a-\
9bfce1fd7b6a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SetModel", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<SetModel[\!\(\*StyleBox[\"model\", \"TI\"]\)] sets an EcoEvo \
\!\(\*StyleBox[\"model\", \"TI\"]\) for analysis.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769364968966893*^9, 
  3.769364969620388*^9}},ExpressionUUID->"66e80abd-5a09-4652-827e-\
ea8eb07a0a93"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"851655de-73a0-4e0d-b3bf-\
e52e76b076e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetModel", "[", 
   RowBox[{
    RowBox[{"model_", "?", "RuleListQ"}], ",", 
    RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\n", 
     RowBox[{"(*", " ", "options", " ", "*)"}], "\n", 
     RowBox[{
     "colors", ",", "linestyles", ",", "plotmarkers", ",", "assumptions", ",",
       "parametersin", ",", "\n", 
      RowBox[{"(*", " ", "other", " ", "*)"}], "\n", "parameterstmp", ",", 
      "parintervals", ",", "stylecount", ",", "basestyle", ",", "indexcount", 
      ",", "in", ",", "gradients", ",", "gradient"}], "}"}], ",", "\n", "\n", 
    
    RowBox[{"(*", " ", "options", " ", "*)"}], "\n", 
    RowBox[{
     RowBox[{"colors", "=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"Colors", "/.", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"opts", ",", 
           RowBox[{"Options", "[", "SetModel", "]"}]}], "}"}], "]"}]}], 
       "]"}]}], ";", "\n", 
     RowBox[{"linestyles", "=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"LineStyles", "/.", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"opts", ",", 
           RowBox[{"Options", "[", "SetModel", "]"}]}], "}"}], "]"}]}], 
       "]"}]}], ";", "\n", 
     RowBox[{"plotmarkers", "=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"PlotMarkers", "/.", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"opts", ",", 
           RowBox[{"Options", "[", "SetModel", "]"}]}], "}"}], "]"}]}], 
       "]"}]}], ";", "\n", 
     RowBox[{"assumptions", "=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"Assumptions", "/.", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"model", ",", 
           RowBox[{"Options", "[", "SetModel", "]"}]}], "}"}], "]"}]}], 
       "]"}]}], ";", "\n", "\n", 
     StyleBox["ClearParameters",
      Background->RGBColor[1, 0.5, 0.5]], 
     StyleBox[";",
      Background->RGBColor[1, 0.5, 0.5]], "UnsetModel", ";", "\n", "\n", 
     RowBox[{"parametersin", "=", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"Parameters", "/.", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"model", ",", 
           RowBox[{"Options", "[", "SetModel", "]"}]}], "}"}], "]"}]}], 
       "]"}]}], ";", "\n", 
     RowBox[{"parameterstmp", "=", 
      RowBox[{"Cases", "[", 
       RowBox[{"parametersin", ",", 
        RowBox[{"_Symbol", 
         StyleBox["|",
          Background->RGBColor[1, 0.5, 0.5]], 
         StyleBox[
          RowBox[{"_Symbol", "[", "_", "]"}],
          Background->RGBColor[1, 0.5, 0.5]]}], ",", "\[Infinity]"}], "]"}]}],
      ";", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<parameterstmp=\>\"", ",", "parameterstmp"}], "]"}], 
       ";"}], "*)"}], "\n", 
     RowBox[{"parintervals", "=", 
      RowBox[{"InequalityToInterval", "/@", "parametersin"}]}], ";", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<parintervals=\>\"", ",", "parintervals"}], "]"}], ";"}], 
      "*)"}], "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "parameterstmp", "]"}], "\[NotEqual]", 
         RowBox[{"Length", "[", "parintervals", "]"}]}], "||", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"parameterstmp", ",", 
          RowBox[{"_", "?", "BooleanQ"}]}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"SetModel", "::", "badpar"}], "]"}], ";", 
        RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "\"\<SetModel\>\"", "]"}], ";"}], "*)"}], "\n", 
     "\n", 
     RowBox[{"modelloaded", "=", "True"}], ";", "\n", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"model", " ", "name"}], " ", "-", " ", "default"}], "=", 
       "\"\<UnnamedModel\>\""}], "*)"}], "\n", 
     RowBox[{"modelname", "=", 
      RowBox[{"ModelName", "/.", 
       RowBox[{"Append", "[", 
        RowBox[{"model", ",", 
         RowBox[{"ModelName", "\[Rule]", "\"\<UnnamedModel\>\""}]}], 
        "]"}]}]}], ";", "\n", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"model", " ", "type"}], " ", "-", " ", "default"}], "=", 
       "\"\<ContinuousTime\>\""}], " ", "*)"}], "\n", 
     RowBox[{"modeltype", "=", 
      RowBox[{"ModelType", "/.", 
       RowBox[{"Append", "[", 
        RowBox[{"model", ",", 
         RowBox[{"ModelType", "\[Rule]", "\"\<ContinuousTime\>\""}]}], 
        "]"}]}]}], ";", "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<ContinuousTime\>\"", ",", "\"\<DiscreteTime\>\""}], 
           "}"}], ",", "modeltype"}], "]"}]}], ",", 
       RowBox[{"Message", "[", 
        RowBox[{"SetModel", "::", "unktype"}], "]"}]}], "]"}], ";", "\n", 
     "\n", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"model", " ", "whenevents"}], " ", "-", " ", "default"}], "=", 
       RowBox[{"{", "}"}]}], " ", "*)"}], "\n", 
     RowBox[{"modelwhenevents", ":=", 
      RowBox[{"WhenEvents", "/.", 
       RowBox[{"Append", "[", 
        RowBox[{"model", ",", 
         RowBox[{"WhenEvents", "\[Rule]", 
          RowBox[{"{", "}"}]}]}], "]"}]}]}], ";", "\n", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"period", " ", "-", " ", "default"}], "=", 
       RowBox[{"0", " ", 
        RowBox[{"(", "unforced", ")"}]}]}], " ", "*)"}], "\n", 
     RowBox[{"modelperiod", ":=", 
      RowBox[{"Period", "/.", 
       RowBox[{"Append", "[", 
        RowBox[{"model", ",", 
         RowBox[{"Period", "\[Rule]", "0"}]}], "]"}]}]}], ";", "\n", 
     StyleBox["\n",
      FontSize->16], 
     StyleBox[
      RowBox[{"(*", " ", 
       StyleBox["parameters",
        FontVariations->{"Underline"->True}], " ", "*)"}],
      FontSize->16], "\n", "\n", 
     RowBox[{"parameters", "=", "parameterstmp"}], ";", "\n", 
     RowBox[{"parnames", "=", 
      RowBox[{"ToString", "/@", "parameters"}]}], ";", "\n", 
     RowBox[{"Do", "[", "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"range", "[", 
         RowBox[{
         "parameters", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
          "]"}], "=", 
        RowBox[{
        "parintervals", "\[LeftDoubleBracket]", "i", 
         "\[RightDoubleBracket]"}]}], "\n", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "parameters", "]"}]}], "}"}]}], "]"}], ";", 
     "\n", "\n", "\n", 
     RowBox[{
      StyleBox["(*",
       FontSize->16], 
      StyleBox[" ",
       FontSize->16], 
      StyleBox["transitions",
       FontSize->16,
       FontVariations->{"Underline"->True}], 
      StyleBox[" ",
       FontSize->16], 
      StyleBox[
       RowBox[{
        StyleBox["*",
         FontSize->16], ")"}]]}], " ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"still", " ", "under", " ", "development"}], ",", " ", 
       RowBox[{
        RowBox[{"don", "'"}], "t", " ", 
        RowBox[{"use", "!"}]}]}], " ", "*)"}], "\n", "\n", 
     RowBox[{"transitions", "=", 
      RowBox[{"Transitions", "/.", "model"}]}], ";", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<transitions=\>\"", ",", "transitions"}], "]"}], ";"}], 
      "*)"}], "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"transitions", "=!=", "Transitions"}], ",", "\n", "\t", 
       RowBox[{
        RowBox[{"proc", "=", 
         RowBox[{"transitions", "/.", "UnpackDoubleRightArrows"}]}], ";", 
        "\n", "\t", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<proc=\>\"", ",", "proc"}], "]"}], ";", "\n", "\t", 
        RowBox[{"rules", "=", 
         RowBox[{"proc", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        "\t", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<rules=\>\"", ",", "rules"}], "]"}], ";", "\n", "\t", 
        RowBox[{"rates", "=", 
         RowBox[{"proc", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        "\t", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<rates=\>\"", ",", "rates"}], "]"}], ";", "\n", "\t", 
        RowBox[{"eqns", "=", 
         RowBox[{"Normal", "[", 
          RowBox[{"Merge", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Association", "/@", 
               RowBox[{"(", 
                RowBox[{"rules", "/.", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"key_", "\[Rule]", "val_"}], ")"}], "\[Rule]", 
                  RowBox[{"(", 
                   RowBox[{"key", "\[Rule]", 
                    RowBox[{"val", "-", "key"}]}], ")"}]}]}], ")"}]}], ")"}], 
             "*", "rates"}], ",", "Total"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<eqns=\>\"", ",", "eqns"}], "]"}], ";", "\n", "\t", 
        RowBox[{"percapitaeqns", "=", 
         RowBox[{"Merge", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Association", "/@", 
              RowBox[{"(", 
               RowBox[{"rules", "/.", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"key_", "\[Rule]", "val_"}], ")"}], "\[Rule]", 
                 RowBox[{"(", 
                  RowBox[{"key", "\[Rule]", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"val", "-", "key"}], ")"}], "/", "key"}]}], 
                  ")"}]}]}], ")"}]}], ")"}], "*", "rates"}], ",", "Total"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\t", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<percapitaeqns=\>\"", ",", "percapitaeqns"}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\n", "\n", "\n", 
     RowBox[{"stylecount", "=", "0"}], ";", "\n", "\n", "\n", 
     StyleBox[
      RowBox[{"(*", " ", 
       StyleBox["auxs",
        FontVariations->{"Underline"->True}], " ", "*)"}],
      FontSize->16], "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "\"\<Auxs\>\"", "]"}], ";"}], "*)"}], "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Auxs", "/.", "model"}], ")"}], "===", "Auxs"}], ",", "\n", 
       "\t", 
       RowBox[{"auxs", "=", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{"model", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "\[LeftDoubleBracket]", 
              RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], "\[Equal]", 
             "Aux"}], "&"}]}], "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}]}], 
       ",", "\n", "\t", 
       RowBox[{"auxs", "=", 
        RowBox[{"Auxs", "/.", "model"}]}]}], "\n", "]"}], ";", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<auxs=\>\"", ",", "auxs"}], "]"}], ";"}], "*)"}], "\n", 
     RowBox[{"naux", "=", 
      RowBox[{"Length", "[", "auxs", "]"}]}], ";", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<naux=\>\"", ",", "naux"}], "]"}], ";"}], "*)"}], "\n", 
     RowBox[{
      RowBox[{"auxeqn", "[", "au_", "]"}], ":=", 
      RowBox[{"Equation", "/.", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Aux", "[", "au", "]"}], "/.", "model"}], ")"}]}]}], ";", 
     "\n", "\n", 
     RowBox[{"Do", "[", "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"stylecount", "++"}], ";", "\n", "\t", 
        RowBox[{
         RowBox[{"type", "[", "aux", "]"}], "=", "\"\<aux\>\""}], ";", "\n", 
        "\t", 
        RowBox[{"in", "=", 
         RowBox[{
          RowBox[{"Aux", "[", "aux", "]"}], "/.", "model"}]}], ";", "\n", 
        "\t", 
        RowBox[{
         RowBox[{"range", "[", "aux", "]"}], "=", 
         RowBox[{"Range", "/.", 
          RowBox[{"Append", "[", 
           RowBox[{"in", ",", 
            RowBox[{"Range", "\[Rule]", 
             RowBox[{"Interval", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], 
              "]"}]}]}], "]"}]}]}], ";", "\n", "\t", 
        RowBox[{
         RowBox[{"color", "[", "aux", "]"}], "=", 
         RowBox[{
          RowBox[{"color", "[", 
           RowBox[{"_", "[", "aux", "]"}], "]"}], "=", 
          RowBox[{"Color", "/.", 
           RowBox[{"Append", "[", 
            RowBox[{"in", ",", 
             RowBox[{"Color", "\[Rule]", 
              RowBox[{"ModPart", "[", 
               RowBox[{"colors", ",", "stylecount"}], "]"}]}]}], "]"}]}]}]}], 
        ";", "\n", "\t", 
        RowBox[{
         RowBox[{"linestyle", "[", "aux", "]"}], "=", 
         RowBox[{
          RowBox[{"linestyle", "[", 
           RowBox[{"_", "[", "aux", "]"}], "]"}], "=", 
          RowBox[{"LineStyle", "/.", 
           RowBox[{"Append", "[", 
            RowBox[{"in", ",", 
             RowBox[{"LineStyle", "\[Rule]", 
              RowBox[{"ModPart", "[", 
               RowBox[{"linestyles", ",", "stylecount"}], "]"}]}]}], 
            "]"}]}]}]}], ";", "\n", "\t", 
        RowBox[{
         RowBox[{"plotmarker", "[", "aux", "]"}], "=", 
         RowBox[{
          RowBox[{"plotmarker", "[", 
           RowBox[{"_", "[", "aux", "]"}], "]"}], "=", 
          RowBox[{"PlotMarker", "/.", 
           RowBox[{"Append", "[", 
            RowBox[{"in", ",", 
             RowBox[{"PlotMarker", "\[Rule]", 
              RowBox[{"ModPart", "[", 
               RowBox[{"plotmarkers", ",", "stylecount"}], "]"}]}]}], 
            "]"}]}]}]}], ";", "\n", "\t", 
        RowBox[{
         RowBox[{"LookUp", "[", "aux", "]"}], "=", 
         RowBox[{
          RowBox[{"LookUp", "[", 
           RowBox[{"_", "[", "aux", "]"}], "]"}], "=", 
          RowBox[{"{", 
           RowBox[{"\"\<aux\>\"", ",", "aux"}], "}"}]}]}], ";"}], "\n", ",", 
       RowBox[{"{", 
        RowBox[{"aux", ",", "auxs"}], "}"}]}], "]"}], ";", "\n", "\n", "\n", 
     StyleBox[
      RowBox[{"(*", " ", 
       StyleBox["pops",
        FontVariations->{"Underline"->True}], " ", "*)"}],
      FontSize->16], "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "\"\<Pops\>\"", "]"}], ";"}], "*)"}], "\n", 
     RowBox[{"pops", "=", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{"model", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], "\[Equal]", 
           "Pop"}], "&"}]}], "]"}], "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
     "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<pops=\>\"", ",", "pops"}], "]"}], ";"}], "*)"}], "\n", 
     RowBox[{"npops", "=", 
      RowBox[{"Length", "[", "pops", "]"}]}], ";", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<npops=\>\"", ",", "npops"}], "]"}], ";"}], "*)"}], "\n", 
     
     RowBox[{
      RowBox[{"pcompeqn", "[", 
       RowBox[{"pop_", ",", "pco_"}], "]"}], ":=", 
      RowBox[{"Equation", "/.", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"RuleListQ", "[", 
          RowBox[{
           RowBox[{"Component", "[", "pco", "]"}], "/.", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Pop", "[", "pop", "]"}], "/.", "model"}], ")"}]}], 
          "]"}], ",", 
         RowBox[{
          RowBox[{"Component", "[", "pco", "]"}], "/.", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Pop", "[", "pop", "]"}], "/.", "model"}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"Pop", "[", "pop", "]"}], "/.", "model"}]}], "]"}]}]}], ";",
      "\n", "\n", 
     RowBox[{"Do", "[", "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"in", "=", 
         RowBox[{
          RowBox[{"Pop", "[", "pop", "]"}], "/.", "model"}]}], ";", "\n", 
        "\t", 
        RowBox[{
         RowBox[{"type", "[", "pop", "]"}], "=", "\"\<pop\>\""}], ";", "\n", 
        "\t", 
        RowBox[{
         RowBox[{"LookUp", "[", "pop", "]"}], "=", 
         RowBox[{"{", 
          RowBox[{"\"\<pop\>\"", ",", "pop"}], "}"}]}], ";", "\n", "\t", 
        RowBox[{
         RowBox[{"comps", "[", "pop", "]"}], "=", 
         RowBox[{
          RowBox[{"pcomps", "[", "pop", "]"}], "=", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"in", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "\[LeftDoubleBracket]", 
                RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], 
               "\[Equal]", "Component"}], "&"}]}], "]"}], 
           "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}]}]}],
         ";", "\n", "\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"pcomps", "[", "pop", "]"}], "\[Equal]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{
           RowBox[{"comps", "[", "pop", "]"}], "=", 
           RowBox[{
            RowBox[{"pcomps", "[", "pop", "]"}], "=", 
            RowBox[{"{", "pop", "}"}]}]}]}], "]"}], ";", "\n", "\t", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
            RowBox[{"\"\<pcomps[\>\"", "<>", 
             RowBox[{"ToString", "@", "pop"}], "<>", "\"\<]=\>\""}], ",", 
            RowBox[{"pcomps", "[", "pop", "]"}]}], "]"}], ";"}], "*)"}], "\n",
         "\t", 
        RowBox[{
         RowBox[{"ncomps", "[", "pop", "]"}], "=", 
         RowBox[{
          RowBox[{"npcomps", "[", "pop", "]"}], "=", 
          RowBox[{"Length", "[", 
           RowBox[{"pcomps", "[", "pop", "]"}], "]"}]}]}], ";", "\n", "\t", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
            RowBox[{"\"\<npcomps[\>\"", "<>", 
             RowBox[{"ToString", "[", "pop", "]"}], "<>", "\"\<]=\>\""}], ",", 
            RowBox[{"npcomps", "[", "pop", "]"}]}], "]"}], ";"}], "*)"}], 
        "\n", "\t", 
        RowBox[{"Do", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"stylecount", "++"}], ";", "\n", "\t\t", 
           RowBox[{
            RowBox[{"type", "[", "pcomp", "]"}], "=", "\"\<pcomp\>\""}], ";", 
           "\n", "\t\t", 
           RowBox[{"in", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"RuleListQ", "[", 
               RowBox[{
                RowBox[{"Component", "[", "pcomp", "]"}], "/.", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Pop", "[", "pop", "]"}], "/.", "model"}], ")"}]}], 
               "]"}], ",", 
              RowBox[{
               RowBox[{"Component", "[", "pcomp", "]"}], "/.", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Pop", "[", "pop", "]"}], "/.", "model"}], ")"}]}], 
              ",", 
              RowBox[{
               RowBox[{"Pop", "[", "pop", "]"}], "/.", "model"}]}], "]"}]}], 
           ";", "\n", "\t\t", 
           RowBox[{
            RowBox[{"comptype", "[", "pcomp", "]"}], "=", 
            RowBox[{"Type", "/.", 
             RowBox[{"Append", "[", 
              RowBox[{"in", ",", 
               RowBox[{"Type", "\[Rule]", "\"\<Extensive\>\""}]}], "]"}]}]}], 
           ";", "\n", "\t\t", 
           RowBox[{
            RowBox[{"range", "[", "pcomp", "]"}], "=", 
            RowBox[{"Range", "/.", 
             RowBox[{"Append", "[", 
              RowBox[{"in", ",", 
               RowBox[{"Range", "\[Rule]", 
                RowBox[{"Interval", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "\[Infinity]"}], "}"}], "]"}]}]}], 
              "]"}]}]}], ";", "\n", "\t\t", 
           RowBox[{
            RowBox[{"color", "[", "pcomp", "]"}], "=", 
            RowBox[{
             RowBox[{"color", "[", 
              RowBox[{"_", "[", "pcomp", "]"}], "]"}], "=", 
             RowBox[{"Color", "/.", 
              RowBox[{"Append", "[", 
               RowBox[{"in", ",", 
                RowBox[{"Color", "\[Rule]", 
                 RowBox[{"ModPart", "[", 
                  RowBox[{"colors", ",", "stylecount"}], "]"}]}]}], 
               "]"}]}]}]}], ";", "\n", "\t\t", 
           RowBox[{
            RowBox[{"linestyle", "[", "pcomp", "]"}], "=", 
            RowBox[{
             RowBox[{"linestyle", "[", 
              RowBox[{"_", "[", "pcomp", "]"}], "]"}], "=", 
             RowBox[{"LineStyle", "/.", 
              RowBox[{"Append", "[", 
               RowBox[{"in", ",", 
                RowBox[{"LineStyle", "\[Rule]", 
                 RowBox[{"ModPart", "[", 
                  RowBox[{"linestyles", ",", "stylecount"}], "]"}]}]}], 
               "]"}]}]}]}], ";", "\n", "\t\t", 
           RowBox[{
            RowBox[{"plotmarker", "[", "pcomp", "]"}], "=", 
            RowBox[{
             RowBox[{"plotmarker", "[", 
              RowBox[{"_", "[", "pcomp", "]"}], "]"}], "=", 
             RowBox[{"PlotMarker", "/.", 
              RowBox[{"Append", "[", 
               RowBox[{"in", ",", 
                RowBox[{"PlotMarker", "\[Rule]", 
                 RowBox[{"ModPart", "[", 
                  RowBox[{"plotmarkers", ",", "stylecount"}], "]"}]}]}], 
               "]"}]}]}]}], ";", "\n", "\t\t", 
           RowBox[{
            RowBox[{"LookUp", "[", "pcomp", "]"}], "=", 
            RowBox[{
             RowBox[{"LookUp", "[", 
              RowBox[{"_", "[", "pcomp", "]"}], "]"}], "=", 
             RowBox[{"{", 
              RowBox[{"\"\<pcomp\>\"", ",", "pop", ",", "pcomp"}], "}"}]}]}], 
           ";"}], "\n", "\t", ",", 
          RowBox[{"{", 
           RowBox[{"pcomp", ",", 
            RowBox[{"pcomps", "[", "pop", "]"}]}], "}"}]}], "]"}], ";"}], 
       "\n", ",", 
       RowBox[{"{", 
        RowBox[{"pop", ",", "pops"}], "}"}]}], "]"}], ";", "\n", "\n", 
     StyleBox["\n",
      FontSize->16], 
     StyleBox[
      RowBox[{"(*", " ", 
       StyleBox["guilds",
        FontWeight->"Bold",
        FontVariations->{"Underline"->True}], " ", "*)"}],
      FontSize->16], "\n", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "\"\<Guilds\>\"", "]"}], ";"}], "*)"}], "\n", 
     RowBox[{"stylecount", "=", "0"}], ";", "\n", "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Guilds", "/.", "model"}], ")"}], "===", "Guilds"}], ",", 
       "\n", "\t", 
       RowBox[{"guilds", "=", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{"model", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "0"}], "]"}], "]"}], "==", "Guild"}], 
            "&"}]}], "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}]}], 
       ",", "\n", "\t", 
       RowBox[{"guilds", "=", 
        RowBox[{"Guilds", "/.", "model"}]}]}], "\n", "]"}], ";", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<guilds=\>\"", ",", "guilds"}], "]"}], ";"}], "*)"}], 
     "\n", 
     RowBox[{"nguilds", "=", 
      RowBox[{"Length", "[", "guilds", "]"}]}], ";", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<nguilds=\>\"", ",", "nguilds"}], "]"}], ";"}], "*)"}], 
     "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"gcompeqn", "[", 
         RowBox[{"gu_", ",", "gco_"}], "]"}], ":=", 
        RowBox[{"Equation", "/.", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"RuleListQ", "[", 
            RowBox[{
             RowBox[{"Component", "[", "gco", "]"}], "/.", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Guild", "[", "gu", "]"}], "/.", "model"}], ")"}]}], 
            "]"}], ",", 
           RowBox[{
            RowBox[{"Component", "[", "gco", "]"}], "/.", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Guild", "[", "gu", "]"}], "/.", "model"}], ")"}]}], 
           ",", 
           RowBox[{
            RowBox[{"Guild", "[", "gu", "]"}], "/.", "model"}]}], "]"}]}]}], 
       ";"}], "*)"}], "\n", "\n", 
     RowBox[{"Do", "[", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Guild[\>\"", ",", "gu", ",", "\"\<]=\>\"", ",", 
          RowBox[{
           RowBox[{"Guild", "[", "gu", "]"}], "/.", "model"}]}], "]"}], ";"}],
        "*)"}], "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"type", "[", "gu", "]"}], "=", "\"\<guild\>\""}], ";", "\n", 
        "\t", 
        RowBox[{
         RowBox[{"LookUp", "[", "gu", "]"}], "=", 
         RowBox[{"{", 
          RowBox[{"\"\<guild\>\"", ",", "gu"}], "}"}]}], ";", "\n", "\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Components", "/.", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Guild", "[", "gu", "]"}], "/.", "model"}], ")"}]}], 
            ")"}], "===", "Components"}], ",", "\n", "\t\t", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Print", "[", "\"\<old comps\>\"", "]"}], ";"}], "*)"}], 
          "\n", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"comps", "[", "gu", "]"}], "=", 
            RowBox[{
             RowBox[{"gcomps", "[", "gu", "]"}], "=", 
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Guild", "[", "gu", "]"}], "/.", "model"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "\[LeftDoubleBracket]", 
                   RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], 
                  "\[Equal]", "Component"}], "&"}]}], "]"}], 
              "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", "1", ",", "1"}], 
              "\[RightDoubleBracket]"}]}]}], ";", "\n", "\t\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"gcomps", "[", "gu", "]"}], "]"}], "\[Equal]", "0"}], 
             ",", 
             RowBox[{
              RowBox[{"comps", "[", "gu", "]"}], "=", 
              RowBox[{
               RowBox[{"gcomps", "[", "gu", "]"}], "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Guild", "[", "gu", "]"}], "\[LeftDoubleBracket]", 
                 "1", "\[RightDoubleBracket]"}], "}"}]}]}]}], "]"}]}], "\n", 
          "\t", ",", "\n", "\t\t", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Print", "[", "\"\<new comps\>\"", "]"}], ";"}], "*)"}], 
          "\n", "\t\t", 
          RowBox[{
           RowBox[{"comps", "[", "gu", "]"}], "=", 
           RowBox[{
            RowBox[{"gcomps", "[", "gu", "]"}], "=", 
            RowBox[{
             RowBox[{"Components", "/.", 
              RowBox[{"Guild", "[", "gu", "]"}]}], "/.", "model"}]}]}]}], 
         "\n", "\t", "]"}], ";", "\n", "\t", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<comps[\>\"", ",", "gu", ",", "\"\<]=\>\"", ",", 
            RowBox[{"comps", "[", "gu", "]"}]}], "]"}], ";"}], "*)"}], "\n", 
        "\t", 
        RowBox[{
         RowBox[{"comps", "[", 
          RowBox[{"Subscript", "[", 
           RowBox[{"gu_", ",", "sp_"}], "]"}], "]"}], ":=", 
         RowBox[{"Replace", "[", 
          RowBox[{
           RowBox[{"comps", "[", "gu", "]"}], ",", 
           RowBox[{"var_", "\[Rule]", 
            RowBox[{"Subscript", "[", 
             RowBox[{"var", ",", "sp"}], "]"}]}], ",", "1"}], "]"}]}], ";", 
        "\n", "\t", 
        RowBox[{
         RowBox[{"ncomps", "[", "gu", "]"}], "=", 
         RowBox[{
          RowBox[{"ngcomps", "[", "gu", "]"}], "=", 
          RowBox[{"Length", "[", 
           RowBox[{"gcomps", "[", "gu", "]"}], "]"}]}]}], ";", "\n", "\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Traits", "/.", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Guild", "[", "gu", "]"}], "/.", "model"}], ")"}]}], 
            ")"}], "===", "Traits"}], ",", "\n", "\t\t", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Print", "[", "\"\<old traits\>\"", "]"}], ";"}], "*)"}], 
          "\n", "\t\t", 
          RowBox[{
           RowBox[{"gtraits", "[", "gu", "]"}], "=", 
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Guild", "[", "gu", "]"}], "/.", "model"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "\[LeftDoubleBracket]", 
                 RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], 
                "\[Equal]", "Trait"}], "&"}]}], "]"}], "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}]}], 
          ",", "\n", "\t\t", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Print", "[", "\"\<new traits\>\"", "]"}], ";"}], "*)"}], 
          "\n", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"gtraits", "[", "gu", "]"}], "=", 
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Traits", "/.", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Guild", "[", "gu", "]"}], "/.", "model"}], ")"}]}],
                ")"}], ",", "_Symbol", ",", "\[Infinity]"}], "]"}]}], ";", 
           "\n", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"\"\<gtraits[gu]=\>\"", ",", 
               RowBox[{"gtraits", "[", "gu", "]"}]}], "]"}], ";"}], "*)"}], 
           "\n", "\t\t", 
           RowBox[{"ranges", "=", 
            RowBox[{"InequalityToInterval", "/@", 
             RowBox[{"(", 
              RowBox[{"Traits", "/.", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Guild", "[", "gu", "]"}], "/.", "model"}], ")"}]}], 
              ")"}]}]}], ";", "\n", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"\"\<ranges=\>\"", ",", "ranges"}], "]"}], ";"}], 
            "*)"}], "\n", "\t\t", 
           RowBox[{"Do", "[", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"range", "[", 
                RowBox[{
                 RowBox[{"gtraits", "[", "gu", "]"}], "\[LeftDoubleBracket]", 
                 "i", "\[RightDoubleBracket]"}], "]"}], "=", 
               RowBox[{
               "ranges", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}]}], ";", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"range", "[", 
                RowBox[{"Subscript", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"gtraits", "[", "gu", "]"}], 
                   "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
                  ",", "_"}], "]"}], "]"}], "=", 
               RowBox[{
               "ranges", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}]}], ";"}], "\n", "\t\t", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"gtraits", "[", "gu", "]"}], "]"}]}], "}"}]}], "]"}], 
           ";"}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
        RowBox[{
         RowBox[{"ngtraits", "[", "gu", "]"}], "=", 
         RowBox[{"Length", "[", 
          RowBox[{"gtraits", "[", "gu", "]"}], "]"}]}], ";", "\n", "\t", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<{gcomps[\>\"", ",", "gu", ",", "\"\<], gtraits[\>\"", ",", 
            "gu", ",", "\"\<]}=\>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"gcomps", "[", "gu", "]"}], ",", 
              RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ";"}], 
         "*)"}], "\n", "\n", "\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"nguilds", "\[Equal]", "1"}], "&&", 
           RowBox[{
            RowBox[{"ngcomps", "[", 
             RowBox[{
             "guilds", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
              "]"}], "\[Equal]", "1"}], "&&", 
           RowBox[{
            RowBox[{"ngtraits", "[", 
             RowBox[{
             "guilds", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
              "]"}], "\[Equal]", "1"}]}], ",", "\n", "\t\t", 
          RowBox[{"gradients", "=", 
           RowBox[{"{", "\"\<Rainbow\>\"", "}"}]}], ",", "\n", "\t\t", 
          RowBox[{"gradients", "=", 
           RowBox[{"{", 
            RowBox[{
            "\"\<EEGreens\>\"", ",", "\"\<EEReds\>\"", ",", 
             "\"\<EEBlues\>\""}], "}"}]}]}], "\n", "\t", "]"}], ";", "\n", 
        "\t", 
        RowBox[{"indexcount", "=", "0"}], ";", "\n", "\t", 
        RowBox[{"Do", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"indexcount", "++"}], ";", "\n", "\t\t", 
           RowBox[{"stylecount", "++"}], ";", "\n", "\t\t", 
           RowBox[{
            RowBox[{"basestyle", "[", "gu", "]"}], "=", "stylecount"}], ";", 
           "\n", "\t\t", 
           RowBox[{"in", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"RuleListQ", "[", 
               RowBox[{
                RowBox[{"Component", "[", "gcomp", "]"}], "/.", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Guild", "[", "gu", "]"}], "/.", "model"}], ")"}]}],
                "]"}], ",", 
              RowBox[{
               RowBox[{"Component", "[", "gcomp", "]"}], "/.", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Guild", "[", "gu", "]"}], "/.", "model"}], ")"}]}], 
              ",", 
              RowBox[{
               RowBox[{"Guild", "[", "gu", "]"}], "/.", "model"}]}], "]"}]}], 
           ";", "\n", "\t\t", 
           RowBox[{
            RowBox[{"type", "[", 
             RowBox[{"Subscript", "[", 
              RowBox[{"gcomp", ",", "_"}], "]"}], "]"}], "=", 
            "\"\<gcomp\>\""}], ";", "\n", "\t\t", 
           RowBox[{
            RowBox[{"index", "[", 
             RowBox[{"Subscript", "[", 
              RowBox[{"gcomp", ",", "_"}], "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"index", "[", "gcomp", "]"}], "=", "indexcount"}]}], ";",
            "\n", "\t\t", 
           RowBox[{
            RowBox[{"comptype", "[", 
             RowBox[{"Subscript", "[", 
              RowBox[{"gcomp", ",", "_"}], "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"comptype", "[", "gcomp", "]"}], "=", 
             RowBox[{"Type", "/.", 
              RowBox[{"Append", "[", 
               RowBox[{"in", ",", 
                RowBox[{"Type", "\[Rule]", "\"\<Extensive\>\""}]}], 
               "]"}]}]}]}], ";", "\n", "\t\t", 
           RowBox[{
            RowBox[{"range", "[", 
             RowBox[{"Subscript", "[", 
              RowBox[{"gcomp", ",", "_"}], "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"range", "[", "gcomp", "]"}], "=", 
             RowBox[{"Range", "/.", 
              RowBox[{"Append", "[", 
               RowBox[{"in", ",", 
                RowBox[{"Range", "\[Rule]", 
                 RowBox[{"Interval", "[", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "\[Infinity]"}], "}"}], "]"}]}]}], 
               "]"}]}]}]}], ";", "\n", "\t\t", 
           RowBox[{"gradient", "=", 
            RowBox[{"Color", "/.", 
             RowBox[{"Append", "[", 
              RowBox[{"in", ",", 
               RowBox[{"Color", "\[Rule]", 
                RowBox[{"ModPart", "[", 
                 RowBox[{"gradients", ",", "stylecount"}], "]"}]}]}], 
              "]"}]}]}], ";", "\n", "\t\t", 
           RowBox[{
            RowBox[{"color", "[", 
             RowBox[{"Subscript", "[", 
              RowBox[{"gcomp", ",", "_"}], "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"color", "[", 
              RowBox[{"_", "[", 
               RowBox[{"Subscript", "[", 
                RowBox[{"gcomp", ",", "_"}], "]"}], "]"}], "]"}], "=", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"cd", "=", 
                 RowBox[{"ColorData", "[", "gradient", "]"}]}], "}"}], ",", 
               RowBox[{
                RowBox[{"cd", "[", "#", "]"}], "&"}]}], "]"}]}]}], ";", "\n", 
           "\t\t", 
           RowBox[{
            RowBox[{"color", "[", "gcomp", "]"}], "=", 
            RowBox[{
             RowBox[{"color", "[", 
              RowBox[{"_", "[", "gcomp", "]"}], "]"}], "=", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"cd", "=", 
                 RowBox[{"ColorData", "[", "gradient", "]"}]}], "}"}], ",", 
               RowBox[{"cd", "[", "0.5", "]"}]}], "]"}]}]}], ";", "\n", 
           "\t\t", 
           RowBox[{
            RowBox[{"linestyle", "[", 
             RowBox[{"Subscript", "[", 
              RowBox[{"gcomp", ",", "_"}], "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"linestyle", "[", "gcomp", "]"}], "=", 
             RowBox[{
              RowBox[{"linestyle", "[", 
               RowBox[{"_", "[", "gcomp", "]"}], "]"}], "=", 
              RowBox[{"LineStyle", "/.", 
               RowBox[{"Append", "[", 
                RowBox[{"in", ",", 
                 RowBox[{"LineStyle", "\[Rule]", 
                  RowBox[{"ModPart", "[", 
                   RowBox[{"linestyles", ",", "stylecount"}], "]"}]}]}], 
                "]"}]}]}]}]}], ";", "\n", "\t\t", 
           RowBox[{
            RowBox[{"plotmarker", "[", 
             RowBox[{"Subscript", "[", 
              RowBox[{"gcomp", ",", "_"}], "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"plotmarker", "[", "gcomp", "]"}], "=", 
             RowBox[{
              RowBox[{"plotmarker", "[", 
               RowBox[{"_", "[", "gcomp", "]"}], "]"}], "=", 
              RowBox[{"PlotMarker", "/.", 
               RowBox[{"Append", "[", 
                RowBox[{"in", ",", 
                 RowBox[{"PlotMarker", "\[Rule]", 
                  RowBox[{"ModPart", "[", 
                   RowBox[{"plotmarkers", ",", "stylecount"}], "]"}]}]}], 
                "]"}]}]}]}]}], ";", "\n", "\t\t", 
           RowBox[{
            RowBox[{"LookUp", "[", "gcomp", "]"}], "=", 
            RowBox[{
             RowBox[{"LookUp", "[", 
              RowBox[{"_", "[", "gcomp", "]"}], "]"}], "=", 
             RowBox[{"{", 
              RowBox[{"\"\<gcomp\>\"", ",", "gu", ",", "gcomp"}], "}"}]}]}], 
           ";", "\n", "\t\t", 
           RowBox[{
            RowBox[{"LookUp", "[", 
             RowBox[{"Subscript", "[", 
              RowBox[{"gcomp", ",", "sp_"}], "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"LookUp", "[", 
              RowBox[{"_", "[", 
               RowBox[{"Subscript", "[", 
                RowBox[{"gcomp", ",", "sp_"}], "]"}], "]"}], "]"}], "=", 
             RowBox[{"{", 
              RowBox[{"\"\<gcomp\>\"", ",", "gu", ",", "gcomp", ",", "sp"}], 
              "}"}]}]}], ";", "\n", "\t\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"transitions", "===", "Transitions"}], ",", "\n", 
             "\t\t\t", 
             RowBox[{
              RowBox[{"eqn", "[", 
               SubscriptBox["gcomp", "i_"], "]"}], ":=", 
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{"Equation", "/.", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"RuleListQ", "[", 
                    RowBox[{
                    RowBox[{"Component", "[", "gcomp", "]"}], "/.", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Guild", "[", "gu", "]"}], "/.", "model"}], 
                    ")"}]}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"Component", "[", "gcomp", "]"}], "/.", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Guild", "[", "gu", "]"}], "/.", "model"}], 
                    ")"}]}], ",", 
                   RowBox[{
                    RowBox[{"Guild", "[", "gu", "]"}], "/.", "model"}]}], 
                  "]"}]}], "/.", 
                RowBox[{"\[FormalI]", "\[Rule]", "i"}]}], "]"}]}], ",", "\n", 
             "\t\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"eqn", "[", 
                SubscriptBox["gcomp", "i_"], "]"}], ":=", 
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["gcomp", "\[FormalI]"], "/.", "eqns"}], "/.", 
                 RowBox[{"\[FormalI]", "\[Rule]", "i"}]}], "]"}]}], ";"}]}], 
            "\n", "\t\t", "]"}], ";"}], "\n", "\t", ",", 
          RowBox[{"{", 
           RowBox[{"gcomp", ",", 
            RowBox[{"gcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ";", "\n", 
        "\n", "\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"transitions", "=!=", "Transitions"}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"Flatten", "@", 
             RowBox[{"Table", "[", 
              RowBox[{
               SubscriptBox[
                RowBox[{"gtrait", "[", "gcomp", "]"}], "\[FormalI]"], ",", 
               RowBox[{"{", 
                RowBox[{"gcomp", ",", 
                 RowBox[{"gcomps", "[", "gu", "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"gtrait", ",", 
                 RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}]}], 
            "]"}], ";", "\n", "\t\t", 
           RowBox[{
            RowBox[{"fgs", "[", "gu", "]"}], "=", 
            RowBox[{"Normal", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"{", 
                  RowBox[{"Flatten", "@", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    SubscriptBox[
                    RowBox[{"gtrait", "[", "gcomp", "]"}], "\[FormalI]"], ",", 
                    RowBox[{"{", 
                    RowBox[{"gcomp", ",", 
                    RowBox[{"gcomps", "[", "gu", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"gtrait", ",", 
                    RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}]}], 
                  "}"}]}], "]"}], "&"}], "/@", "percapitaeqns"}], "]"}]}], 
           ";", "\n", "\t\t", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<fgs[\>\"", ",", "gu", ",", "\"\<]=\>\"", ",", 
             RowBox[{"fgs", "[", "gu", "]"}]}], "]"}], ";"}]}], "\n", "\t", 
         "]"}], ";", "\n", "\t", 
        RowBox[{"indexcount", "=", "0"}], ";", "\n", "\t", 
        RowBox[{"Do", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"indexcount", "++"}], ";", "\n", "\t\t", 
           RowBox[{"stylecount", "=", 
            RowBox[{"basestyle", "[", "gu", "]"}]}], ";", "\n", 
           StyleBox["\t\t",
            Background->RGBColor[1, 1, 0]], 
           StyleBox[
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"Traits", "/.", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Guild", "[", "gu", "]"}], "/.", "model"}], 
                  ")"}]}], ")"}], "===", "Traits"}], ",", "\n", "\t\t\t", 
              RowBox[{"in", "=", 
               RowBox[{
                RowBox[{"Trait", "[", "gtrait", "]"}], "/.", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Guild", "[", "gu", "]"}], "/.", "model"}], 
                 ")"}]}]}], ",", "\n", "\t\t\t", 
              RowBox[{"in", "=", 
               RowBox[{"{", "}"}]}]}], "\n", "\t\t", "]"}],
            Background->RGBColor[1, 1, 0]], 
           StyleBox[";",
            Background->RGBColor[1, 1, 0]], "\n", "\t\t", 
           RowBox[{
            RowBox[{"type", "[", 
             RowBox[{"Subscript", "[", 
              RowBox[{"gtrait", ",", "_"}], "]"}], "]"}], "=", 
            "\"\<gtrait\>\""}], ";", "\n", "\t\t", 
           RowBox[{
            RowBox[{"index", "[", 
             RowBox[{"Subscript", "[", 
              RowBox[{"gtrait", ",", "_"}], "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"index", "[", "gtrait", "]"}], "=", "indexcount"}]}], 
           ";", "\n", 
           StyleBox["\t\t",
            Background->RGBColor[1, 1, 0]], 
           StyleBox[
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"Traits", "/.", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Guild", "[", "gu", "]"}], "/.", "model"}], 
                  ")"}]}], ")"}], "===", "Traits"}], ",", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"range", "[", 
                RowBox[{"Subscript", "[", 
                 RowBox[{"gtrait", ",", "_"}], "]"}], "]"}], "=", 
               RowBox[{
                RowBox[{"range", "[", "gtrait", "]"}], "=", 
                RowBox[{"Range", "/.", 
                 RowBox[{"Append", "[", 
                  RowBox[{"in", ",", 
                   RowBox[{"Range", "\[Rule]", 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}],
                     "]"}]}]}], "]"}]}]}]}]}], "\n", "\t\t", "]"}],
            Background->RGBColor[1, 1, 0]], 
           StyleBox[";",
            Background->RGBColor[1, 1, 0]], 
           StyleBox["\n",
            Background->RGBColor[1, 1, 0]], "\t\t", 
           RowBox[{"gradient", "=", 
            RowBox[{"Color", "/.", 
             RowBox[{"Join", "[", 
              RowBox[{"in", ",", 
               RowBox[{
                RowBox[{"Guild", "[", "gu", "]"}], "/.", "model"}], ",", 
               RowBox[{"{", 
                RowBox[{"Color", "\[Rule]", 
                 RowBox[{"ModPart", "[", 
                  RowBox[{"gradients", ",", "stylecount"}], "]"}]}], "}"}]}], 
              "]"}]}]}], ";", "\n", "\t\t", 
           RowBox[{
            RowBox[{"color", "[", 
             RowBox[{"Subscript", "[", 
              RowBox[{"gtrait", ",", "_"}], "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"color", "[", 
              RowBox[{"_", "[", 
               RowBox[{"Subscript", "[", 
                RowBox[{"gtrait", ",", "_"}], "]"}], "]"}], "]"}], "=", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"cd", "=", 
                 RowBox[{"ColorData", "[", "gradient", "]"}]}], "}"}], ",", 
               RowBox[{
                RowBox[{"cd", "[", "#", "]"}], "&"}]}], "]"}]}]}], ";", "\n", 
           "\t\t", 
           RowBox[{
            RowBox[{"color", "[", "gtrait", "]"}], "=", 
            RowBox[{
             RowBox[{"color", "[", 
              RowBox[{"_", "[", "gtrait", "]"}], "]"}], "=", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"cd", "=", 
                 RowBox[{"ColorData", "[", "gradient", "]"}]}], "}"}], ",", 
               RowBox[{"cd", "[", "0.5", "]"}]}], "]"}]}]}], ";", "\n", 
           "\t\t", 
           RowBox[{
            RowBox[{"linestyle", "[", 
             RowBox[{"Subscript", "[", 
              RowBox[{"gtrait", ",", "_"}], "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"linestyle", "[", "gtrait", "]"}], "=", 
             RowBox[{
              RowBox[{"linestyle", "[", 
               RowBox[{"_", "[", "gtrait", "]"}], "]"}], "=", 
              RowBox[{"LineStyle", "/.", 
               RowBox[{"Join", "[", 
                RowBox[{"in", ",", 
                 RowBox[{
                  RowBox[{"Guild", "[", "gu", "]"}], "/.", "model"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"LineStyle", "\[Rule]", 
                   RowBox[{"ModPart", "[", 
                    RowBox[{"linestyles", ",", "stylecount"}], "]"}]}], 
                  "}"}]}], "]"}]}]}]}]}], ";", "\n", "\t\t", 
           RowBox[{
            RowBox[{"plotmarker", "[", 
             RowBox[{"Subscript", "[", 
              RowBox[{"gtrait", ",", "_"}], "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"plotmarker", "[", "gtrait", "]"}], "=", 
             RowBox[{"PlotMarker", "/.", 
              RowBox[{"Join", "[", 
               RowBox[{"in", ",", 
                RowBox[{
                 RowBox[{"Guild", "[", "gu", "]"}], "/.", "model"}], ",", 
                RowBox[{"{", 
                 RowBox[{"PlotMarker", "\[Rule]", 
                  RowBox[{"ModPart", "[", 
                   RowBox[{"plotmarkers", ",", "stylecount"}], "]"}]}], 
                 "}"}]}], "]"}]}]}]}], ";", "\n", "\t\t", 
           RowBox[{
            RowBox[{"LookUp", "[", "gtrait", "]"}], "=", 
            RowBox[{
             RowBox[{"LookUp", "[", 
              RowBox[{"_", "[", "gtrait", "]"}], "]"}], "=", 
             RowBox[{"{", 
              RowBox[{"\"\<gtrait\>\"", ",", "gu", ",", "gtrait"}], "}"}]}]}],
            ";", "\n", "\t\t", 
           RowBox[{
            RowBox[{"LookUp", "[", 
             RowBox[{"Subscript", "[", 
              RowBox[{"gtrait", ",", "sp_"}], "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"LookUp", "[", 
              RowBox[{"_", "[", 
               RowBox[{"Subscript", "[", 
                RowBox[{"gtrait", ",", "sp_"}], "]"}], "]"}], "]"}], "=", 
             RowBox[{"{", 
              RowBox[{"\"\<gtrait\>\"", ",", "gu", ",", "gtrait", ",", "sp"}],
               "}"}]}]}], ";", "\n", "\t\t", 
           StyleBox[
            RowBox[{"Do", "[", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"LookUp", "[", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{
                   RowBox[{"gtrait", "[", "gcomp", "]"}], ",", "sp_"}], "]"}],
                  "]"}], "=", 
                RowBox[{
                 RowBox[{"LookUp", "[", 
                  RowBox[{"_", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"gtrait", "[", "gcomp", "]"}], ",", "sp_"}], 
                    "]"}], "]"}], "]"}], "=", 
                 RowBox[{"{", 
                  RowBox[{"\"\<gtrait\>\"", ",", "gu", ",", 
                   RowBox[{"gtrait", "[", "gcomp", "]"}], ",", "sp"}], 
                  "}"}]}]}], ";"}], "\n", "\t\t", ",", 
              RowBox[{"{", 
               RowBox[{"gcomp", ",", 
                RowBox[{"gcomps", "[", "gu", "]"}]}], "}"}]}], "]"}],
            Background->RGBColor[1, 1, 0]], 
           StyleBox[";",
            Background->RGBColor[1, 1, 0]]}], "\n", "\t\t", 
          RowBox[{"(*", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"transitions", "=!=", "Transitions"}], ",", "\n", 
             "\t\t\t", 
             RowBox[{"Do", "[", "\n", "\t\t\t\t", "\n", "\t\t\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"eqn", "[", 
                 SubscriptBox[
                  RowBox[{"gtrait", "[", "gcomp", "]"}], "i_"], "]"}], ":="}],
                "\n", "\t\t\t", ",", 
               RowBox[{"{", 
                RowBox[{"gcomp", ",", 
                 RowBox[{"gcomps", "[", "gu", "]"}]}], "}"}]}], "]"}]}]}], 
           "*)"}], "\n", "\t", ",", 
          RowBox[{"{", 
           RowBox[{"gtrait", ",", 
            RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ";"}], 
       "\n", ",", 
       RowBox[{"{", 
        RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ";", "\n", "\n", "\n", 
     
     StyleBox[
      RowBox[{"(*", " ", 
       StyleBox["interactions",
        FontVariations->{"Underline"->True}], " ", "*)"}],
      FontSize->16], "\n", "\n", 
     RowBox[{"interactions", "=", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{"model", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], "\[Equal]", 
           "Interaction"}], "&"}]}], "]"}], "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
     "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<interactions=\>\"", ",", "interactions"}], "]"}], ";"}], 
      "*)"}], "\n", 
     RowBox[{"ninteractions", "=", 
      RowBox[{"Length", "[", "interactions", "]"}]}], ";", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<ninteractions=\>\"", ",", "ninteractions"}], "]"}], 
       ";"}], "*)"}], "\n", "\n", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"interactionpos", "[", "gu", "]"}], "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ";", "\n", "\n", 
     RowBox[{"Do", "[", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "interaction", "]"}], ";"}], "*)"}], "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"in", "=", 
         RowBox[{
          RowBox[{"Interaction", "[", "interaction", "]"}], "/.", "model"}]}],
         ";", "\n", "\t", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", "in", "]"}], ";"}], "*)"}], "\n", "\t", 
        RowBox[{
         RowBox[{"type", "[", 
          RowBox[{"Subscript", "[", 
           RowBox[{"interaction", ",", "_"}], "]"}], "]"}], "=", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"index", "[", "gtrait", "]"}], "="}], "*)"}], 
         "\"\<interaction\>\""}], ";", "\n", "\t", 
        RowBox[{
         RowBox[{"index", "[", 
          RowBox[{"Subscript", "[", 
           RowBox[{"interaction", ",", "_"}], "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"index", "[", "interaction", "]"}], "=", "indexcount"}]}], 
        ";", "\n", "\t", 
        RowBox[{
         RowBox[{"range", "[", 
          RowBox[{"Subscript", "[", 
           RowBox[{"interaction", ",", "_"}], "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"range", "[", "interaction", "]"}], "=", 
          RowBox[{"Range", "/.", 
           RowBox[{"Append", "[", 
            RowBox[{"in", ",", 
             RowBox[{"Range", "\[Rule]", 
              RowBox[{"Interval", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], 
               "]"}]}]}], "]"}]}]}]}], ";", "\n", "\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"guild1", "[", "interaction", "]"}], ",", 
           RowBox[{"guild2", "[", "interaction", "]"}]}], "}"}], "=", 
         RowBox[{"Guilds", "/.", "in"}]}], ";", "\n", "\t", 
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"interactionpos", "[", 
           RowBox[{"guild1", "[", "interaction", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"interaction", ",", "1"}], "}"}]}], "]"}], ";", "\n", "\t", 
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"interactionpos", "[", 
           RowBox[{"guild2", "[", "interaction", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"interaction", ",", "2"}], "}"}]}], "]"}], ";", "\n", "\t", 
        RowBox[{
         RowBox[{"LookUp", "[", "interaction", "]"}], "=", 
         RowBox[{
          RowBox[{"LookUp", "[", 
           RowBox[{"_", "[", "interaction", "]"}], "]"}], "=", 
          RowBox[{"{", 
           RowBox[{"\"\<interaction\>\"", ",", 
            RowBox[{"guild1", "[", "interaction", "]"}], ",", 
            RowBox[{"guild2", "[", "interaction", "]"}], ",", "interaction"}],
            "}"}]}]}], ";", "\n", "\t", 
        RowBox[{
         RowBox[{"LookUp", "[", 
          RowBox[{"Subscript", "[", 
           RowBox[{"interaction", ",", "sp1_", ",", "sp2_"}], "]"}], "]"}], 
         "=", 
         RowBox[{
          RowBox[{"LookUp", "[", 
           RowBox[{"_", "[", 
            RowBox[{"Subscript", "[", 
             RowBox[{"interaction", ",", "sp1_", ",", "sp2_"}], "]"}], "]"}], 
           "]"}], "=", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{"\"\<interaction\>\"", ",", 
            RowBox[{"guild1", "[", "interaction", "]"}], ",", 
            RowBox[{"guild2", "[", "interaction", "]"}], ",", "interaction", 
            ",", "sp1", ",", "sp2"}], "}"}]}]}], ";"}], "\n", ",", 
       RowBox[{"{", 
        RowBox[{"interaction", ",", "interactions"}], "}"}]}], "]"}], ";", 
     "\n", "\n", "\n", 
     StyleBox[
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         StyleBox[
          RowBox[{"model", " ", "assumptions"}],
          FontVariations->{"Underline"->True}], " ", "-", " ", "default"}], 
        "=", 
        RowBox[{"{", "}"}]}], " ", "*)"}],
      FontSize->16], "\n", "\n", 
     RowBox[{"$Assumptions", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"assumptions", "/.", 
        RowBox[{"Automatic", "\[Rule]", 
         RowBox[{"Join", "[", "\n", "\t", 
          RowBox[{
           StyleBox[
            RowBox[{"Select", "[", 
             RowBox[{"parametersin", ",", 
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "Greater", ",", "GreaterEqual", ",", "Less", ",", 
                   "LessEqual"}], "}"}], ",", 
                 RowBox[{"Head", "[", "#", "]"}]}], "]"}], "&"}]}], "]"}],
            Background->RGBColor[1, 1, 0]], 
           StyleBox[",",
            Background->RGBColor[1, 1, 0]], "\n", "\t", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Region`SpecialRegionProperty", "[", 
              RowBox[{
               RowBox[{"range", "[", "aux", "]"}], ",", 
               RowBox[{"{", "aux", "}"}], ",", 
               "\"\<ImplicitDescription\>\""}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"aux", ",", "auxs"}], "}"}]}], "]"}], ",", "\n", "\t", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Region`SpecialRegionProperty", "[", 
                RowBox[{
                 RowBox[{"range", "[", "pcomp", "]"}], ",", 
                 RowBox[{"{", "pcomp", "}"}], ",", 
                 "\"\<ImplicitDescription\>\""}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"pcomp", ",", 
                 RowBox[{"pcomps", "[", "pop", "]"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"pop", ",", "pops"}], "}"}]}], "]"}], ",", "\n", "\t", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Table", "[", "\n", "\t\t", 
                RowBox[{
                 RowBox[{"Region`SpecialRegionProperty", "[", 
                  RowBox[{
                   RowBox[{"range", "[", "gcomp", "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"gcomp", ",", "sp"}], "]"}], "}"}], ",", 
                   "\"\<ImplicitDescription\>\""}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"sp", ",", "0", ",", "2"}], "}"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"gcomp", ",", 
                 RowBox[{"gcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", "\t", 
           
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Table", "[", "\n", "\t\t", 
                RowBox[{
                 RowBox[{"Region`SpecialRegionProperty", "[", 
                  RowBox[{
                   RowBox[{"range", "[", "gtrait", "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"gtrait", ",", "sp"}], "]"}], "}"}], ",", 
                   "\"\<ImplicitDescription\>\""}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"sp", ",", "0", ",", "2"}], "}"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"gtrait", ",", 
                 RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "\n", 
          "]"}]}]}], "]"}]}], ";", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<$Assumptions=\>\"", ",", "$Assumptions"}], "]"}], ";"}], 
      "*)"}], "\n", "\n", 
     RowBox[{"Which", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], ",", "\n",
        "\t", 
       RowBox[{
        RowBox[{"DT", "[", "var_", "]"}], ":=", 
        RowBox[{
         RowBox[{"var", "'"}], "[", "t", "]"}]}], "\n", ",", "\n", "\t", 
       RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], ",", "\n", 
       "\t", 
       RowBox[{
        RowBox[{"DT", "[", "var_", "]"}], ":=", 
        RowBox[{"var", "[", 
         RowBox[{"t", "+", "1"}], "]"}]}]}], "\n", "]"}], ";", "\n", "\n", 
     RowBox[{
      RowBox[{"eqn", "[", "var_", "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"luv", "=", 
          RowBox[{"LookUp", "[", "var", "]"}]}], "}"}], ",", "\n", "\t", 
        RowBox[{"Which", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{
           "luv", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "\[Equal]", "\"\<aux\>\""}], ",", 
          RowBox[{"auxeqn", "[", 
           RowBox[{
           "luv", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           "]"}], ",", "\n", "\t\t", 
          RowBox[{
           RowBox[{
           "luv", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "\[Equal]", "\"\<pcomp\>\""}], ",", 
          RowBox[{"pcompeqn", "[", 
           RowBox[{
            RowBox[{
            "luv", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
            ",", 
            RowBox[{
            "luv", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
           "]"}], ",", "\n", "\t\t", 
          RowBox[{
           RowBox[{
           "luv", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "\[Equal]", "\"\<gcomp\>\""}], ",", 
          RowBox[{
           RowBox[{"gcompeqn", "[", 
            RowBox[{
             RowBox[{
             "luv", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             ",", 
             RowBox[{
             "luv", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
            "]"}], "[", 
           RowBox[{
           "luv", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
           "]"}]}], "\n", "\t", "]"}]}], "\n", "]"}]}], ";"}]}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Do", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"Do", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"eqn", "[", 
           SubscriptBox["gcomp", "i_"], "]"}], "=", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["gcomp", "i"], "/.", "eqns"}], ")"}]}], ";", "\n", 
         "\t\t", 
         RowBox[{"Print", "[", 
          RowBox[{"eqn", "[", 
           SubscriptBox["gcomp", "1"], "]"}], "]"}], ";"}], "\n", "\t", ",", 
        RowBox[{"{", 
         RowBox[{"gcomp", ",", 
          RowBox[{"gcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], "\n", ",", 
      RowBox[{"{", 
       RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "*)"}], "\n", "\n", 
   "]"}]}]], "Code",
 CellChangeTimes->{
  3.760636689985487*^9, 3.7606370140281982`*^9, 3.760637250693416*^9, {
   3.760638013341442*^9, 3.7606380145246353`*^9}, 3.76068190946717*^9, {
   3.760769470000443*^9, 3.760769504288315*^9}, {3.760799044900796*^9, 
   3.760799148017531*^9}, {3.7609225797424297`*^9, 3.7609226416305323`*^9}, {
   3.7609228087946978`*^9, 3.760922832051571*^9}, {3.760923070916307*^9, 
   3.760923071839992*^9}, {3.760932970849992*^9, 3.760932978211398*^9}, {
   3.760933023101519*^9, 3.760933024734284*^9}, {3.760933507348053*^9, 
   3.7609336022671423`*^9}, {3.760933691269503*^9, 3.760933697786763*^9}, {
   3.760933774639935*^9, 3.760933783315377*^9}, {3.760933827090962*^9, 
   3.760933856911911*^9}, {3.76093394592118*^9, 3.760933956044045*^9}, 
   3.760934984527405*^9, {3.76129157219175*^9, 3.761291624988249*^9}, {
   3.761292580290545*^9, 3.7612925970317373`*^9}, {3.763981838135127*^9, 
   3.763981879137788*^9}, {3.76398192980157*^9, 3.763982065759302*^9}, {
   3.763982214988133*^9, 3.7639822343178596`*^9}, {3.7639863159260187`*^9, 
   3.763986372634474*^9}, {3.763986931808939*^9, 3.763986936322295*^9}, {
   3.763987004385055*^9, 3.763987061094208*^9}, {3.763987331093162*^9, 
   3.763987457934411*^9}, {3.7639875126586447`*^9, 3.76398752356539*^9}, {
   3.763987566716765*^9, 3.763987588730187*^9}, {3.7639876826321793`*^9, 
   3.763987685886425*^9}, {3.763987850084133*^9, 3.763987857087822*^9}, {
   3.763987887500877*^9, 3.76398788976571*^9}, {3.76398792442454*^9, 
   3.763987972690146*^9}, {3.764039055184188*^9, 3.7640390645255527`*^9}, 
   3.76976070530663*^9, {3.7700106220553503`*^9, 3.770010629408327*^9}, {
   3.770013273322906*^9, 3.770013273381794*^9}, {3.7700135654477997`*^9, 
   3.7700135655068293`*^9}, {3.77002274389347*^9, 3.7700227440520477`*^9}, 
   3.770438264955689*^9, {3.770440261677806*^9, 3.770440262080288*^9}, {
   3.7704413703534727`*^9, 3.77044138254389*^9}, {3.770444215865076*^9, 
   3.770444217435058*^9}, {3.7704442481910954`*^9, 3.770444250513888*^9}, {
   3.770445160080617*^9, 3.7704451712380657`*^9}, {3.7704607734803133`*^9, 
   3.77046077411108*^9}, {3.7704608796112843`*^9, 3.770460906900528*^9}, {
   3.7704616014946003`*^9, 3.770461620070937*^9}, {3.770467063955414*^9, 
   3.7704670846774693`*^9}, {3.7704671859454527`*^9, 3.770467186407992*^9}, {
   3.770552997583317*^9, 3.7705530035623093`*^9}, {3.784734643926626*^9, 
   3.784734654634181*^9}, {3.784734807309803*^9, 3.784734808706011*^9}, {
   3.784734851214034*^9, 3.784734857162919*^9}, 3.784735929782452*^9, {
   3.7847898958550797`*^9, 3.7847899133884068`*^9}, {3.7847899517148542`*^9, 
   3.784790012264447*^9}, 3.784790051536042*^9, {3.78479138766965*^9, 
   3.784791401358374*^9}, {3.784791441506955*^9, 3.7847914784796658`*^9}, {
   3.784793150440178*^9, 3.78479323399971*^9}, {3.784793587349491*^9, 
   3.784793769992152*^9}, 3.794137240482553*^9, {3.7978633512801657`*^9, 
   3.7978633980205603`*^9}, {3.797863552867638*^9, 3.797863590761858*^9}, {
   3.797863775170793*^9, 3.7978637936202707`*^9}, {3.797864109249907*^9, 
   3.7978641154645767`*^9}, {3.797864269642996*^9, 3.797864282835897*^9}, {
   3.7978643224406357`*^9, 3.7978644188651533`*^9}, {3.797864859054043*^9, 
   3.79786492370255*^9}, {3.7978649650174007`*^9, 3.797865040888432*^9}, {
   3.797865321959622*^9, 3.797865332427945*^9}, {3.79786598268329*^9, 
   3.797865993190612*^9}, {3.79789091118927*^9, 3.797890914209978*^9}, {
   3.797891035944363*^9, 3.797891086051805*^9}, {3.797891471789598*^9, 
   3.797891516255001*^9}, {3.7981514243527927`*^9, 3.798151454708041*^9}, {
   3.798218517774452*^9, 3.7982185251624126`*^9}, {3.807573943952002*^9, 
   3.807573946525754*^9}, 3.807631792638258*^9, {3.807653164829797*^9, 
   3.807653229631344*^9}, {3.8076532611894407`*^9, 3.807653384612021*^9}, {
   3.807653457758046*^9, 3.807653470977436*^9}, {3.8076535086260967`*^9, 
   3.8076535117222633`*^9}, {3.807653623690439*^9, 3.807653628341935*^9}, {
   3.807653696413851*^9, 3.807653739218273*^9}, {3.807653770729989*^9, 
   3.8076538502454844`*^9}, {3.807653905292659*^9, 3.807653924371894*^9}, {
   3.8076539645299053`*^9, 3.807654064548883*^9}, {3.807654391984906*^9, 
   3.807654405771583*^9}, {3.807654493132588*^9, 3.807654495104268*^9}, {
   3.807654559561092*^9, 3.8076545817018137`*^9}, {3.807654675391547*^9, 
   3.807654705169045*^9}, {3.80771529257549*^9, 3.8077153008139133`*^9}, {
   3.807715490468001*^9, 3.8077155238040247`*^9}, {3.807716714434061*^9, 
   3.807716734540851*^9}, {3.8077210372499847`*^9, 3.807721055998248*^9}, {
   3.807721226025859*^9, 3.807721256028079*^9}, {3.807721326408135*^9, 
   3.807721369764412*^9}, {3.807721823357109*^9, 3.807721823910838*^9}, {
   3.807721854724042*^9, 3.807721863139216*^9}, {3.8077218931476297`*^9, 
   3.807721906578082*^9}, {3.80772193952138*^9, 3.807721966853125*^9}, {
   3.807721998533119*^9, 3.807722012875038*^9}, 3.807722105148316*^9, {
   3.807722139372171*^9, 3.807722164068307*^9}, {3.807740060325266*^9, 
   3.8077400726274652`*^9}, {3.811943451717561*^9, 3.811943461563143*^9}, {
   3.811943569739887*^9, 3.811943621245728*^9}, {3.811945299213328*^9, 
   3.811945362869637*^9}, {3.811945469719973*^9, 3.811945487558804*^9}, {
   3.811945523599526*^9, 3.811945583470111*^9}, {3.8119457428430357`*^9, 
   3.811945742883556*^9}, {3.811945884285836*^9, 3.81194592257871*^9}, {
   3.8119460156646748`*^9, 3.81194609870048*^9}, {3.811946144055809*^9, 
   3.8119461636248407`*^9}, 3.811946607055505*^9, {3.811946991918314*^9, 
   3.811946996638032*^9}, {3.817763345806149*^9, 3.8177633606482687`*^9}, {
   3.8177634352402973`*^9, 3.817763465807275*^9}, {3.817763665297864*^9, 
   3.8177637016462193`*^9}, {3.817763913427457*^9, 3.817763947243681*^9}, {
   3.817764031126061*^9, 3.8177640553173513`*^9}, {3.817764173915557*^9, 
   3.817764208879087*^9}, {3.8177642655126963`*^9, 3.81776429089535*^9}, {
   3.817764562466153*^9, 3.817764577466361*^9}, {3.817764686282669*^9, 
   3.8177647761861763`*^9}, {3.817764815174975*^9, 3.81776483095774*^9}, {
   3.817765030046084*^9, 3.817765039535796*^9}, {3.817765075136235*^9, 
   3.8177650843881283`*^9}, {3.817766232614552*^9, 3.8177662858167763`*^9}, {
   3.8177663417771063`*^9, 3.8177663446678333`*^9}, {3.817809886332856*^9, 
   3.817809896222414*^9}, {3.81781018011128*^9, 3.8178102050502872`*^9}, {
   3.817810641886496*^9, 3.81781064208634*^9}, {3.817810687997094*^9, 
   3.817810694008246*^9}, 3.817815167095805*^9, {3.817815200798274*^9, 
   3.817815205929665*^9}, {3.8178163532017508`*^9, 3.817816429465858*^9}, {
   3.817816487707247*^9, 3.817816521616126*^9}, 3.817816553035528*^9, {
   3.8178166026412983`*^9, 3.81781661244705*^9}, {3.817816664029852*^9, 
   3.817816673432659*^9}, {3.8178170452914124`*^9, 3.817817148313452*^9}, {
   3.817817210852858*^9, 3.817817237815283*^9}, {3.817817306373848*^9, 
   3.817817318400195*^9}, {3.81781780688221*^9, 3.81781782755453*^9}, {
   3.817817866035708*^9, 3.8178178869224663`*^9}, {3.817826269351634*^9, 
   3.817826272779772*^9}, {3.817826302794464*^9, 3.817826305418378*^9}, {
   3.81782634245846*^9, 3.817826343465817*^9}, {3.817826794695149*^9, 
   3.817826859183868*^9}, {3.817827857164434*^9, 3.817827863642849*^9}, {
   3.81783024187635*^9, 3.817830327477354*^9}, {3.8178426706718884`*^9, 
   3.817842696012298*^9}, {3.8178427775669937`*^9, 3.8178428537475767`*^9}, {
   3.817842905711149*^9, 3.817842906462521*^9}, {3.817843248481721*^9, 
   3.8178432786535463`*^9}, {3.81784332446021*^9, 3.817843331578933*^9}, {
   3.817844129121666*^9, 3.817844196297676*^9}, {3.817857316860162*^9, 
   3.8178573400478573`*^9}, {3.8178574019595833`*^9, 3.81785743879121*^9}, {
   3.817857493620987*^9, 3.81785750120885*^9}, {3.8178963983867397`*^9, 
   3.817896403910466*^9}, {3.817896436224832*^9, 3.8178964534789352`*^9}, {
   3.817896484489911*^9, 3.8178964895903673`*^9}, {3.817905268916819*^9, 
   3.817905276428824*^9}, {3.8179054850480213`*^9, 3.817905558453682*^9}, {
   3.8179056863531647`*^9, 3.817905710151579*^9}, 3.817905892436411*^9, {
   3.817906141546983*^9, 3.8179061537933083`*^9}, {3.817906195122333*^9, 
   3.8179062079529047`*^9}, {3.817906883902135*^9, 3.817906890094273*^9}, {
   3.8179069304310207`*^9, 3.8179069433383923`*^9}, {3.817906988479927*^9, 
   3.8179070435907907`*^9}, {3.8179122173667507`*^9, 
   3.8179122523963633`*^9}, {3.8179137920038757`*^9, 3.817913792403215*^9}, {
   3.8179142908473*^9, 3.817914290997366*^9}, {3.817928144713553*^9, 
   3.817928178783885*^9}, {3.8179285916135817`*^9, 3.817928599492975*^9}, {
   3.818168454257032*^9, 3.818168506233067*^9}, {3.8183507593980427`*^9, 
   3.818350765500163*^9}, {3.818350860239944*^9, 3.818350890382937*^9}, 
   3.818350956358879*^9, {3.818351117959214*^9, 3.818351132592022*^9}, {
   3.818351181712072*^9, 3.818351219479431*^9}, {3.818351674738401*^9, 
   3.818351675082623*^9}, {3.818351790842676*^9, 3.81835179095997*^9}, {
   3.818351893069187*^9, 3.818351922580724*^9}, {3.818351967349371*^9, 
   3.818352004470765*^9}, {3.818352065321553*^9, 3.81835219348129*^9}, {
   3.818353517102645*^9, 3.818353584646353*^9}, 3.818353669677044*^9, 
   3.818357398044293*^9, 3.818357531160275*^9, 3.820234990661874*^9, {
   3.820235063743116*^9, 3.820235117364949*^9}, {3.820235333281514*^9, 
   3.82023533374262*^9}, {3.820235970573822*^9, 3.820235981003359*^9}, {
   3.8202362043644447`*^9, 3.820236286573699*^9}, {3.820236316749496*^9, 
   3.820236365788207*^9}, {3.820237170853774*^9, 3.820237207552856*^9}, {
   3.82023774939704*^9, 3.820237787076832*^9}, {3.820237901757688*^9, 
   3.820237908573244*^9}, {3.820238594033193*^9, 3.8202385988644753`*^9}, {
   3.820238649914665*^9, 3.82023865160336*^9}, {3.820239534529216*^9, 
   3.820239613956873*^9}, {3.820239681334643*^9, 3.82023974585597*^9}, {
   3.820239780187583*^9, 3.82023985992522*^9}, {3.820239894575365*^9, 
   3.8202399897659683`*^9}, {3.820240021392874*^9, 3.8202400262841*^9}, {
   3.820241620111123*^9, 3.820241621956271*^9}, {3.820242268066353*^9, 
   3.820242381315341*^9}, {3.820242460411736*^9, 3.820242500534519*^9}, {
   3.820242574047798*^9, 3.8202426423422527`*^9}, {3.820242687522358*^9, 
   3.820242747950076*^9}, {3.82024280102558*^9, 3.8202428732033033`*^9}, {
   3.820243171568746*^9, 3.820243177414143*^9}, 3.82024532682913*^9, {
   3.821371754885124*^9, 3.821371763934824*^9}, 3.821371941305792*^9, 
   3.821392138412321*^9, 3.8213924379747972`*^9, 3.8213928469950447`*^9, {
   3.821392877257102*^9, 3.821392897731525*^9}, 3.821393109523261*^9, {
   3.821393275417292*^9, 3.8213933053317757`*^9}, 3.8213936019695997`*^9, {
   3.828900895093225*^9, 3.8289009207749243`*^9}, 3.8289152677281113`*^9, 
   3.828955181332364*^9, {3.82895910280287*^9, 3.828959105868239*^9}, {
   3.82895932012083*^9, 3.82895933758219*^9}, {3.8289615837305098`*^9, 
   3.828961612481638*^9}, {3.828976253318288*^9, 3.8289762771091137`*^9}, {
   3.828976716281039*^9, 3.828976727900132*^9}, {3.8289995058773937`*^9, 
   3.828999507582417*^9}, {3.828999935838519*^9, 3.82899996003069*^9}, {
   3.82900027844324*^9, 3.829000280135563*^9}, {3.829000634953761*^9, 
   3.829000658487768*^9}, {3.8290436987062483`*^9, 3.8290437277458687`*^9}, {
   3.829863640643014*^9, 
   3.829863648514036*^9}},ExpressionUUID->"5694f552-59cf-43ff-b182-\
bc3ad66f6774"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.7694947748111753`*^9, 
  3.769494776807325*^9}},ExpressionUUID->"2f1cb091-b27b-42f5-b7c1-\
5624f716b48a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "SetModel", "]"}], "=", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"LineStyles", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", "}"}], "}"}]}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"Graphics`PlotMarkers", "[", "]"}]}], ",", "\n", "\t", 
     RowBox[{"Colors", "\[Rule]", 
      RowBox[{"ColorData", "[", 
       RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}]}], ",", "\n", "\t", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", "Automatic", "}"}]}], ",", "\n", "\t", 
     RowBox[{"Parameters", "\[Rule]", 
      RowBox[{"{", "}"}]}]}], "\n", "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.68778266670955*^9, 3.687782704195657*^9}, {
   3.687782748153638*^9, 3.687782779887557*^9}, {3.687783058221438*^9, 
   3.687783060881928*^9}, {3.687966296138052*^9, 3.6879663037108183`*^9}, {
   3.68796813632402*^9, 3.687968140230082*^9}, {3.687968180450708*^9, 
   3.687968198529475*^9}, {3.687969544662148*^9, 3.687969553485238*^9}, {
   3.6879705894885*^9, 3.687970623173069*^9}, {3.687970735838107*^9, 
   3.6879707459851303`*^9}, 3.688571362569282*^9, {3.693748971272834*^9, 
   3.693748975074456*^9}, {3.693750584587438*^9, 3.693750588758709*^9}, {
   3.694776547024782*^9, 3.6947765552934504`*^9}, {3.694776697727501*^9, 
   3.6947767079017477`*^9}, {3.694783391100212*^9, 3.694783398115305*^9}, {
   3.727619485594096*^9, 3.7276195022465067`*^9}, {3.7639874672848463`*^9, 
   3.763987499723483*^9}, 3.7639877036970577`*^9, {3.807715502272698*^9, 
   3.807715502841689*^9}, {3.807721029381063*^9, 3.807721029396985*^9}, {
   3.807722145891232*^9, 3.807722171333685*^9}, {3.820239623526494*^9, 
   3.820239635903467*^9}},ExpressionUUID->"b0180908-835d-4db1-9245-\
437455ca2cc8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Messages", "Subsubsection",
 CellChangeTimes->{{3.769501276871752*^9, 
  3.769501277878819*^9}},ExpressionUUID->"c8a3b36f-0fe6-4ebd-bd68-\
66418e267d81"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetModel", "::", "unktype"}], "=", "\n", 
   "\"\<Unknown ModelType (\\\"ContinuousTime\\\", \\\"DiscreteTime\\\" \
currently supported).\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetModel", "::", "badpar"}], "=", "\n", 
   "\"\<One or more Parameters already defined. Clear them before running \
SetModel.\>\""}], ";"}]}], "Code",
 CellChangeTimes->{
  3.769501279506226*^9, {3.769502413408001*^9, 3.769502413771572*^9}, {
   3.8289593508758917`*^9, 
   3.8289593786192493`*^9}},ExpressionUUID->"1397ab93-5380-4ac9-8b47-\
81dbb89eb83e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["UnsetModel", "Subsection",
 CellChangeTimes->{{3.76002238748487*^9, 
  3.760022391233427*^9}},ExpressionUUID->"1775e4eb-2610-480a-b584-\
6ae50dce037c"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"2839ff9c-b155-4332-9a9e-\
24a171a9376b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"UnsetModel", "::", "usage"}], "=", "\n", 
   "\"\<UnsetModel clears the currently set EcoEvo model.\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.7693649304405613`*^9, 
  3.7693649310751753`*^9}},ExpressionUUID->"c84be6d4-3a5f-4412-a457-\
0a5fcbcc9cf0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"d4d8ad89-7ac7-4de5-86a0-\
554eb61e2067"],

Cell[BoxData[
 RowBox[{
  RowBox[{"UnsetModel", ":=", 
   RowBox[{"(", "\n", "\t", 
    RowBox[{
     RowBox[{"modelloaded", "=", "False"}], ";", "\n", "\t", 
     RowBox[{"Clear", "[", 
      RowBox[{
      "LookUp", ",", "type", ",", "range", ",", "comptype", ",", "color", ",",
        "linestyle", ",", "plotmarker", ",", "DT", ",", "\n", "\t", 
       "modeltype", ",", "modelwhenevents", ",", "modelperiod", ",", "\n", 
       "\t", "pops", ",", "npops", ",", "npcomps", ",", "pcomps", ",", 
       "pcompeqn", ",", "\n", "\t", "auxs", ",", "nauxs", ",", "auxeqn", ",", 
       "\n", "\t", "guilds", ",", "nguilds", ",", "gcomps", ",", "ngcomps", 
       ",", "gcompeqn", ",", "gtraits", ",", "ngtraits", ",", "\n", "\t", 
       "eqns"}], "]"}], ";", "\n", "\t", 
     RowBox[{"$Assumptions", "=", 
      RowBox[{"{", "}"}]}], ";"}], "\n", ")"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.760327820077806*^9, 3.760327843333289*^9}, {
   3.76058666374704*^9, 3.7605867678096867`*^9}, {3.760591654057308*^9, 
   3.760591655653213*^9}, {3.760638077727275*^9, 3.7606381031796103`*^9}, {
   3.760933005704406*^9, 3.760933011750832*^9}, 3.769364936771368*^9, 
   3.769760705308785*^9, 3.7704382649606457`*^9, {3.770441366718975*^9, 
   3.770441367305458*^9}, {3.770460766971757*^9, 3.770460767402081*^9}, 
   3.770467044583877*^9},ExpressionUUID->"a8435aad-0be8-4fdb-a332-\
576438c9f984"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["ModelInfo", "Subsection",ExpressionUUID->"7ca130ee-1cfb-488a-a622-e4bdc4272a6e"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"0b114fa4-622b-4844-b9bf-\
bbb93106538e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ModelInfo", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<ModelInfo gives a summary of the currently loaded EcoEvo \
model.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.7693651247949057`*^9, 
  3.769365125392818*^9}},ExpressionUUID->"f9074127-4a94-4831-ab53-\
b4f684139ed0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"81e3d78c-10bb-4bc7-a6ec-\
8658daacba13"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ModelInfo", ":=", 
   RowBox[{"(", "\n", "\n", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
        RowBox[{"Return", "[", "]"}]}]}], "]"}], ";", "\n", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{"model", " ", "name"}], " ", "*)"}], "\n", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<modelname=\>\"", ",", "modelname"}], "]"}], ";", "\n", 
     "\n", 
     RowBox[{"(*", " ", 
      RowBox[{"model", " ", "type"}], " ", "*)"}], "\n", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<modeltype=\>\"", ",", "modeltype", ",", "\"\<, modelperiod=\>\"", 
       ",", "modelperiod"}], "]"}], ";", "\n", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{"aux", " ", "vars"}], " ", "*)"}], "\n", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<auxs=\>\"", ",", "auxs", ",", "\"\< (naux=\>\"", ",", "naux", ",", 
       "\"\<)\>\""}], "]"}], ";", "\n", 
     RowBox[{"Do", "[", "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<  \>\"", ",", 
          RowBox[{"FuncStyle", "[", "aux", "]"}]}], "]"}], ";", "\n", "\t", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<  eqn[\>\"", ",", "aux", ",", "\"\<]=\>\"", ",", 
          RowBox[{"eqn", "[", "aux", "]"}]}], "]"}], ";", "\n", "\t", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<  range[\>\"", ",", "aux", ",", "\"\<]=\>\"", ",", 
          RowBox[{"range", "[", "aux", "]"}]}], "]"}], ";"}], "\n", ",", 
       RowBox[{"{", 
        RowBox[{"aux", ",", "auxs"}], "}"}]}], "]"}], ";", "\n", "\n", 
     RowBox[{"(*", " ", "pops", " ", "*)"}], "\n", "\n", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<pops=\>\"", ",", "pops", ",", "\"\< (npops=\>\"", ",", "npops", 
       ",", "\"\<)\>\""}], "]"}], ";", "\n", 
     RowBox[{"Do", "[", "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<  pcomps[\>\"", ",", "pop", ",", "\"\<]=\>\"", ",", 
          RowBox[{"pcomps", "[", "pop", "]"}], ",", "\"\< (npcomps[\>\"", ",",
           "pop", ",", "\"\<]=\>\"", ",", 
          RowBox[{"npcomps", "[", "pop", "]"}], ",", "\"\<)\>\""}], "]"}], 
        ";", "\n", "\t", 
        RowBox[{"Do", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<    \>\"", ",", 
             RowBox[{"FuncStyle", "[", "pcomp", "]"}]}], "]"}], ";", "\n", 
           "\t\t", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<    eqn[\>\"", ",", "pcomp", ",", "\"\<]=\>\"", ",", 
             RowBox[{"eqn", "[", "pcomp", "]"}]}], "]"}], ";", "\n", "\t\t", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<    comptype[\>\"", ",", "pcomp", ",", "\"\<]=\>\"", ",", 
             RowBox[{"comptype", "[", "pcomp", "]"}]}], "]"}], ";", "\n", 
           "\t\t", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<    range[\>\"", ",", "pcomp", ",", "\"\<]=\>\"", ",", 
             RowBox[{"range", "[", "pcomp", "]"}]}], "]"}], ";"}], "\n", "\t",
           ",", 
          RowBox[{"{", 
           RowBox[{"pcomp", ",", 
            RowBox[{"pcomps", "[", "pop", "]"}]}], "}"}]}], "]"}], ";"}], 
       "\n", ",", 
       RowBox[{"{", 
        RowBox[{"pop", ",", "pops"}], "}"}]}], "]"}], ";", "\n", "\n", 
     RowBox[{"(*", " ", "guilds", " ", "*)"}], "\n", "\n", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<guilds=\>\"", ",", "guilds", ",", "\"\< (nguilds=\>\"", ",", 
       "nguilds", ",", "\"\<)\>\""}], "]"}], ";", "\n", 
     RowBox[{"Do", "[", "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<  gcomps[\>\"", ",", "gu", ",", "\"\<]=\>\"", ",", 
          RowBox[{"gcomps", "[", "gu", "]"}], ",", "\"\< (ngcomps[\>\"", ",", 
          "gu", ",", "\"\<]=\>\"", ",", 
          RowBox[{"ngcomps", "[", "gu", "]"}], ",", "\"\<)\>\""}], "]"}], ";",
         "\n", "\t", 
        RowBox[{"Do", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<    \>\"", ",", 
             RowBox[{"FuncStyle", "[", "gcomp", "]"}]}], "]"}], ";", "\n", 
           "\t\t", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<    eqn[\>\"", ",", 
             RowBox[{"Subscript", "[", 
              RowBox[{"gcomp", ",", "Global`i"}], "]"}], ",", "\"\<]=\>\"", 
             ",", 
             RowBox[{"eqn", "[", 
              RowBox[{"Subscript", "[", 
               RowBox[{"gcomp", ",", "Global`i"}], "]"}], "]"}]}], "]"}], ";",
            "\n", "\t\t", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<    comptype[\>\"", ",", "gcomp", ",", "\"\<]=\>\"", ",", 
             RowBox[{"comptype", "[", "gcomp", "]"}]}], "]"}], ";", "\n", 
           "\t\t", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<    range[\>\"", ",", "gcomp", ",", "\"\<]=\>\"", ",", 
             RowBox[{"range", "[", "gcomp", "]"}]}], "]"}], ";"}], "\n", "\t",
           ",", 
          RowBox[{"{", 
           RowBox[{"gcomp", ",", 
            RowBox[{"gcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ";", "\n", 
        "\t", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<  gtraits[\>\"", ",", "gu", ",", "\"\<]=\>\"", ",", 
          RowBox[{"gtraits", "[", "gu", "]"}], ",", "\"\< (ngtraits[\>\"", 
          ",", "gu", ",", "\"\<]=\>\"", ",", 
          RowBox[{"ngtraits", "[", "gu", "]"}], ",", "\"\<)\>\""}], "]"}], 
        ";", "\n", "\t", 
        RowBox[{"Do", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<    \>\"", ",", 
             RowBox[{"FuncStyle", "[", "gtrait", "]"}]}], "]"}], ";", "\n", 
           "\t\t", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<    range[\>\"", ",", "gtrait", ",", "\"\<]=\>\"", ",", 
             RowBox[{"range", "[", "gtrait", "]"}]}], "]"}], ";"}], "\n", 
          "\t", ",", 
          RowBox[{"{", 
           RowBox[{"gtrait", ",", 
            RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ";"}], 
       "\n", ",", 
       RowBox[{"{", 
        RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ";"}], "\n", "\n", 
    ")"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.698942716521473*^9, 3.698942726597053*^9}, {
   3.709337098769092*^9, 3.70933709906194*^9}, 3.7101059450395203`*^9, 
   3.7555382107400846`*^9, {3.7555382696656427`*^9, 3.755538273312888*^9}, 
   3.759993484651682*^9, 3.7600341817289953`*^9, {3.760290576522039*^9, 
   3.760290590258153*^9}, {3.760290635685137*^9, 3.760290646287043*^9}, 
   3.76054923174783*^9, {3.76055065128724*^9, 3.760550655115546*^9}, {
   3.760550938302588*^9, 3.760550953199943*^9}, {3.760551441300035*^9, 
   3.760551442473509*^9}, 3.7606372671813993`*^9, {3.7609330436360903`*^9, 
   3.7609330684106007`*^9}, {3.76128454394134*^9, 3.761284618094783*^9}, {
   3.761284991404299*^9, 3.761285005056342*^9}, {3.761285122893963*^9, 
   3.7612851323378277`*^9}, {3.761285383537568*^9, 3.7612854096943617`*^9}, {
   3.7612854611499968`*^9, 3.761285549971784*^9}, {3.761286000432296*^9, 
   3.76128600116715*^9}, {3.761286147501689*^9, 3.7612861747233763`*^9}, {
   3.7612886803867693`*^9, 3.761288744031342*^9}, {3.761288804821266*^9, 
   3.761288827861092*^9}, {3.761289389160726*^9, 3.7612894199847*^9}, {
   3.7612894659940243`*^9, 3.761289582799768*^9}, {3.761289619616755*^9, 
   3.761289622679571*^9}, {3.76128968141956*^9, 3.7612897093149757`*^9}, {
   3.761289743827208*^9, 3.761289791449345*^9}, {3.761289829711912*^9, 
   3.761289876356819*^9}, 3.769760705312468*^9, 3.770438264968287*^9, 
   3.794137240488571*^9},ExpressionUUID->"886973d3-3542-4e49-be7f-\
8ebd0b0062f6"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["MatrixToPopComponents / MatrixToGuildComponents", "Subsection",
 CellChangeTimes->{{3.732919340241602*^9, 3.732919344560482*^9}, 
   3.733524819988874*^9, {3.769365183846065*^9, 
   3.769365192280744*^9}},ExpressionUUID->"1ca909d6-44d1-4beb-a3aa-\
4a6050f84f65"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"d1253f6b-9e33-4162-97f3-\
805e93d099a8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MatrixToPopComponents", "::", "usage"}], "=", "\n", 
    "\"\<MatrixToPopComponents[\!\(\*StyleBox[\"a\", \"TI\"]\), \
\!\(\*StyleBox[\"var\", \"TI\"]\)] constructs a structured population based \
on square matrix \!\(\*StyleBox[\"a\", \"TI\"]\) and variable \!\(\*StyleBox[\
\"var\", \"TI\"]\).\nMatrixToPopComponents[\!\(\*StyleBox[\"a\", \"TI\"]\), \
\!\(\*StyleBox[\"var\", \"TI\"]\), \!\(\*StyleBox[\"ncomps\", \"TI\"]\)] sets \
the number of components to \!\(\*StyleBox[\"ncomps\", \
\"TI\"]\)\!\(\*StyleBox[\" \", \"TI\"]\)(in case of undefined matrix \
\!\(\*StyleBox[\"a\", \"TI\"]\)).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MatrixToGuildComponents", "::", "usage"}], "=", "\n", 
   "\"\<MatrixToGuildComponents[\!\(\*StyleBox[\"a\", \"TI\"]\), \
\!\(\*StyleBox[\"var\", \"TI\"]\)] constructs a structured population based \
on square matrix \!\(\*StyleBox[\"a\", \"TI\"]\) and variable \!\(\*StyleBox[\
\"var\", \"TI\"]\).\nMatrixToGuildComponents[\!\(\*StyleBox[\"a\", \"TI\"]\), \
\!\(\*StyleBox[\"var\", \"TI\"]\), \!\(\*StyleBox[\"ncomps\", \"TI\"]\)] sets \
the number of components to \!\(\*StyleBox[\"ncomps\", \
\"TI\"]\)\!\(\*StyleBox[\" \", \"TI\"]\)(in case of undefined matrix \
\!\(\*StyleBox[\"a\", \"TI\"]\)).\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.769365326133456*^9, 3.769365335418344*^9}, 
   3.769492297459899*^9},ExpressionUUID->"e5ae8e09-b821-4749-b4a8-\
d3905bcf0495"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"87e8e302-bcbc-4c4c-afc9-\
8e4eb390447f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MatrixToPopComponents", "[", 
    RowBox[{"a_", ",", "var_", ",", 
     RowBox[{"ncompsin_", ":", "Automatic"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ncomps", ",", "res"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ncompsin", "===", "Automatic"}], ",", 
        RowBox[{"ncomps", "=", 
         RowBox[{"Length", "[", "a", "]"}]}], ",", 
        RowBox[{"ncomps", "=", "ncompsin"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"Off", "[", 
       RowBox[{"Part", "::", "partd"}], "]"}], ";", "\n", "\t", 
      RowBox[{"res", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Component", "[", 
           RowBox[{"var", "[", "c", "]"}], "]"}], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Equation", "\[RuleDelayed]", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"(", 
              RowBox[{"Sum", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"a", "\[LeftDoubleBracket]", 
                  RowBox[{"c", ",", "c\[Prime]"}], "\[RightDoubleBracket]"}], 
                 
                 RowBox[{"var", "[", "c\[Prime]", "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"c\[Prime]", ",", "ncomps"}], "}"}]}], "]"}], ")"}], 
             "]"}]}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "ncomps"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"On", "[", 
       RowBox[{"Part", "::", "partd"}], "]"}], ";", "\[IndentingNewLine]", 
      "\t", 
      RowBox[{"Return", "[", "res", "]"}]}]}], "\n", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.732914457886091*^9, 3.732914473319949*^9}, {
   3.7329149075143433`*^9, 3.732914940955312*^9}, {3.7329165572900877`*^9, 
   3.732916572109544*^9}, {3.732918105503191*^9, 3.732918188413595*^9}, {
   3.7329182228003473`*^9, 3.7329182643212023`*^9}, {3.732918583621097*^9, 
   3.732918628442878*^9}, {3.7329193535935793`*^9, 3.732919366916873*^9}, {
   3.7329194470503263`*^9, 3.732919477041768*^9}, {3.7329195587881517`*^9, 
   3.732919564111171*^9}, {3.7329231273727093`*^9, 3.7329231415244303`*^9}, {
   3.732923282777381*^9, 3.7329232834272013`*^9}, {3.7330078204880667`*^9, 
   3.7330078338846893`*^9}, {3.733507774778584*^9, 3.733507825294853*^9}, {
   3.7335079130132303`*^9, 3.733507945316153*^9}, {3.733508068421904*^9, 
   3.7335080697482157`*^9}, {3.7335081062294188`*^9, 3.733508145604743*^9}, {
   3.733508279815361*^9, 3.733508336332361*^9}, {3.733508451150741*^9, 
   3.733508520465949*^9}, {3.733521368783247*^9, 3.733521379435356*^9}, {
   3.733521840156846*^9, 3.733521865783543*^9}, {3.733521906636341*^9, 
   3.733521972802689*^9}, {3.733522015550161*^9, 3.73352206580842*^9}, 
   3.733522294778337*^9, {3.733522852306818*^9, 3.733522854949551*^9}, {
   3.7335232552726593`*^9, 3.73352326581982*^9}, {3.733523399632316*^9, 
   3.733523407765934*^9}, {3.7335237771554947`*^9, 3.7335238018927298`*^9}, {
   3.733524148641231*^9, 3.733524149326105*^9}, {3.761325320644917*^9, 
   3.761325323382916*^9}, {3.761325441103239*^9, 3.761325443419066*^9}, {
   3.761325490339765*^9, 3.76132549065619*^9}, {3.829344774697156*^9, 
   3.829344775207705*^9}},ExpressionUUID->"d25f3230-2978-4202-9e69-\
878618ea6d42"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MatrixToGuildComponents", "[", 
    RowBox[{"a_", ",", "var_", ",", 
     RowBox[{"ncompsin_", ":", "Automatic"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ncomps", ",", "res"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ncompsin", "===", "Automatic"}], ",", 
        RowBox[{"ncomps", "=", 
         RowBox[{"Length", "[", "a", "]"}]}], ",", 
        RowBox[{"ncomps", "=", "ncompsin"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"Off", "[", 
       RowBox[{"Part", "::", "partd"}], "]"}], ";", "\n", "\t", 
      RowBox[{"res", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Component", "[", 
           RowBox[{"var", "[", "c", "]"}], "]"}], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Equation", "\[RuleDelayed]", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"Sum", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"a", "\[LeftDoubleBracket]", 
                  RowBox[{"c", ",", "c\[Prime]"}], "\[RightDoubleBracket]"}], 
                 
                 RowBox[{"var", "[", "c\[Prime]", "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"c\[Prime]", ",", "ncomps"}], "}"}]}], "]"}], 
              "]"}]}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"var", "[", "c_", "]"}], "\[Rule]", 
              RowBox[{"Subscript", "[", 
               RowBox[{
                RowBox[{"var", "[", "c", "]"}], ",", "\[FormalI]"}], "]"}]}], 
             "}"}]}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "ncomps"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"On", "[", 
       RowBox[{"Part", "::", "partd"}], "]"}], ";", "\[IndentingNewLine]", 
      "\t", 
      RowBox[{"Return", "[", 
       RowBox[{"res", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Equation", "\[RuleDelayed]", "eqn_"}], ")"}], "\[Rule]", 
          RowBox[{"(", 
           RowBox[{"Equation", "\[RuleDelayed]", 
            RowBox[{"(", "eqn", ")"}]}], ")"}]}], "}"}]}], "]"}]}]}], "\n", 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.732914457886091*^9, 3.732914473319949*^9}, {
   3.7329149075143433`*^9, 3.732914940955312*^9}, {3.7329165572900877`*^9, 
   3.732916572109544*^9}, {3.732918105503191*^9, 3.732918188413595*^9}, {
   3.7329182228003473`*^9, 3.7329182643212023`*^9}, {3.732918583621097*^9, 
   3.732918628442878*^9}, {3.7329193535935793`*^9, 3.732919366916873*^9}, {
   3.7329194470503263`*^9, 3.732919477041768*^9}, {3.7329195587881517`*^9, 
   3.732919564111171*^9}, {3.7329231273727093`*^9, 3.7329231415244303`*^9}, {
   3.732923282777381*^9, 3.7329232834272013`*^9}, {3.7330078204880667`*^9, 
   3.7330078338846893`*^9}, {3.733507774778584*^9, 3.733507825294853*^9}, {
   3.7335079130132303`*^9, 3.733507945316153*^9}, {3.733508068421904*^9, 
   3.7335080697482157`*^9}, {3.7335081062294188`*^9, 3.733508145604743*^9}, {
   3.733508279815361*^9, 3.733508336332361*^9}, {3.733508451150741*^9, 
   3.733508520465949*^9}, {3.733521368783247*^9, 3.733521379435356*^9}, {
   3.733521840156846*^9, 3.733521865783543*^9}, {3.733521906636341*^9, 
   3.733521972802689*^9}, {3.733522015550161*^9, 3.73352206580842*^9}, 
   3.733522294778337*^9, {3.733522852306818*^9, 3.733522854949551*^9}, {
   3.7335232552726593`*^9, 3.73352326581982*^9}, {3.733523399632316*^9, 
   3.733523401009831*^9}, {3.7335237815605516`*^9, 3.73352378771096*^9}, {
   3.761325505974491*^9, 3.7613255092859383`*^9}, {3.8293447775701313`*^9, 
   3.829344777999971*^9}, {3.829344983486286*^9, 
   3.8293450117391357`*^9}},ExpressionUUID->"3dedea06-2919-4884-bf18-\
5625b0784161"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["WeightedAbundance", "Subsection",
 CellChangeTimes->{{3.780559936943886*^9, 3.780559941749551*^9}, {
   3.780659106034823*^9, 3.780659138161232*^9}, 
   3.784745249019785*^9},ExpressionUUID->"bde68da7-67bd-41c2-b1db-\
886a40077bc9"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.780559949094976*^9, 
  3.7805599498050327`*^9}},ExpressionUUID->"08253f47-3981-4e4f-ad99-\
c35c352a275b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"WeightedAbundance", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<WeightedAbundance[\!\(\*StyleBox[\"pops\", \"TI\"]\)] totals \
components in all guilds and pops.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.780560266709786*^9, 3.780560280917179*^9}, {
   3.7805605268322477`*^9, 3.7805605784166594`*^9}, {3.780561409061764*^9, 
   3.7805614125376873`*^9}, {3.780563000073094*^9, 3.780563007149953*^9}, {
   3.780593445364644*^9, 3.780593472245802*^9}, {3.780659101386215*^9, 
   3.7806591086302*^9}, {3.7806591423971863`*^9, 3.7806591490244293`*^9}, {
   3.780659242836361*^9, 3.780659247585268*^9}, {3.7847452490252333`*^9, 
   3.7847452490296288`*^9}, {3.793449755608665*^9, 3.7934497688615103`*^9}, 
   3.793828215382823*^9, {3.811936494477195*^9, 3.811936512988579*^9}, {
   3.811944313700107*^9, 
   3.81194431709872*^9}},ExpressionUUID->"408a4efc-5f81-4a74-b012-\
3471dbc29a77"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.780560597910359*^9, 
  3.780560600442903*^9}},ExpressionUUID->"1e00de60-e468-45e0-bb1f-\
3f563ceeec9b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"WeightedAbundance", "[", 
    RowBox[{
     RowBox[{"sol_", "?", "RuleListQ"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<WeightedAbundance\>\"", "]"}]}], ",", 
       "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "weightfunction", ",",
        "minpop", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "f", ",", 
       "gu", ",", "sp"}], "\n", "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", 
        RowBox[{"minpop", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"MinPop", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "WeightedAbundance", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"weightfunction", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"WeightFunction", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "WeightedAbundance", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"Set\[ScriptCapitalN]", "[", 
         RowBox[{
          RowBox[{"ExtractAttributes", "[", "sol", "]"}], ",", 
          RowBox[{"ExtractVariables", "[", "sol", "]"}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: \[ScriptCapitalN]=\>\"", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "]"}]}], 
         "]"}], ";", "\n", "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"weightfunction", "===", "\"\<Total\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"f", "[", "var_", "]"}], ":=", 
           RowBox[{"Total", "[", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"comps", "[", "var", "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"comptype", "[", "#", "]"}], "===", 
                "\"\<Extensive\>\""}], "&"}]}], "]"}], "]"}]}], ",", "\n", 
          "\t", 
          RowBox[{"weightfunction", "===", "\"\<Components\>\""}], ",", "\n", 
          "\t", 
          RowBox[{
           RowBox[{"f", "[", "var_", "]"}], ":=", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"comps", "[", "var", "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"comptype", "[", "#", "]"}], "===", 
               "\"\<Extensive\>\""}], "&"}]}], "]"}]}], ",", "\n", "\t", 
          RowBox[{"weightfunction", "===", "\"\<PresenceAbsence\>\""}], ",", 
          "\n", "\t", 
          RowBox[{
           RowBox[{"f", "[", "var_", "]"}], ":=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Total", "[", 
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{"comps", "[", "var", "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"comptype", "[", "#", "]"}], "===", 
                   "\"\<Extensive\>\""}], "&"}]}], "]"}], "]"}], ">", 
              "minpop"}], ",", "1", ",", "0"}], "]"}]}], ",", "\n", "\t", 
          "Else", ",", "\n", "\t", 
          RowBox[{
           RowBox[{
            RowBox[{"f", "[", 
             RowBox[{"Subscript", "[", 
              RowBox[{"gu_", ",", "sp_"}], "]"}], "]"}], ":=", 
            RowBox[{"weightfunction", "/.", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "\[Rule]", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{"#", ",", "sp"}], "]"}]}], "&"}], "/@", 
               RowBox[{"comps", "[", "gu", "]"}]}], ")"}]}]}], ";", "\n", 
           "\t", 
           RowBox[{
            RowBox[{"f", "[", "pop_", "]"}], ":=", "weightfunction"}], 
           ";"}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"Return", "[", 
         RowBox[{"Flatten", "@", 
          RowBox[{"Join", "[", "\n", "\t", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 SubscriptBox["gu", "sp"], "\[Rule]", 
                 RowBox[{"Reinterpolation", "[", 
                  RowBox[{
                   RowBox[{"f", "[", 
                    SubscriptBox["gu", "sp"], "]"}], "/.", "sol"}], "]"}]}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"sp", ",", 
                  RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}]}], "}"}]}], 
               "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", "\t", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"pop", "\[Rule]", 
               RowBox[{"Reinterpolation", "[", 
                RowBox[{
                 RowBox[{"f", "[", "pop", "]"}], "/.", "sol"}], "]"}]}], ",", 
              
              RowBox[{"{", 
               RowBox[{"pop", ",", "pops"}], "}"}]}], "]"}], ",", "\n", "\t", 
            
            RowBox[{"ExtractAuxs", "[", "sol", "]"}], ",", "\n", "\t", 
            RowBox[{"ExtractAttributes", "[", "sol", "]"}]}], "\n", "]"}]}], 
         "]"}]}]}], "\n", "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7805606024080973`*^9, 3.780560661881536*^9}, {
   3.7805606919296837`*^9, 3.780560737344602*^9}, {3.7805610032530813`*^9, 
   3.780561003455559*^9}, {3.780561056716065*^9, 3.780561059145832*^9}, {
   3.7805611260307903`*^9, 3.780561189637072*^9}, {3.7805613468301563`*^9, 
   3.7805613469016314`*^9}, {3.7805614032163477`*^9, 3.780561425192219*^9}, {
   3.780562520340898*^9, 3.7805625487804728`*^9}, {3.7805626100750437`*^9, 
   3.78056264575412*^9}, {3.780562695465979*^9, 3.7805627279761343`*^9}, {
   3.780562802758157*^9, 3.780562807278801*^9}, {3.780593182877863*^9, 
   3.7805931832728777`*^9}, {3.780593435115925*^9, 3.7805934384715433`*^9}, {
   3.780593490167385*^9, 3.780593491724946*^9}, {3.780593542118535*^9, 
   3.780593545775544*^9}, {3.780593904296342*^9, 3.7805939253511333`*^9}, {
   3.780593962902972*^9, 3.7805939895811777`*^9}, {3.780594033635968*^9, 
   3.78059406094716*^9}, {3.780594132766667*^9, 3.780594132855966*^9}, 
   3.78059425462521*^9, {3.780594383434482*^9, 3.780594420028584*^9}, {
   3.780594465868431*^9, 3.780594468257744*^9}, {3.780594599811767*^9, 
   3.780594607970069*^9}, {3.780594665083008*^9, 3.7805947146691933`*^9}, {
   3.7806276879456*^9, 3.780627714985632*^9}, {3.780659253892095*^9, 
   3.7806592554787292`*^9}, {3.7807201171026173`*^9, 3.780720120328066*^9}, {
   3.780720528431926*^9, 3.780720536245401*^9}, {3.780720646632484*^9, 
   3.7807206515693283`*^9}, {3.7807343605681543`*^9, 3.780734363509713*^9}, {
   3.7807353386161337`*^9, 3.78073534242588*^9}, {3.780736087048936*^9, 
   3.780736152836361*^9}, {3.780736281538679*^9, 3.7807363424480143`*^9}, {
   3.780736373590034*^9, 3.780736381706492*^9}, {3.780737891817706*^9, 
   3.7807378944501534`*^9}, 3.780737956636181*^9, 3.780738148935872*^9, {
   3.782987649337784*^9, 3.782987677509638*^9}, {3.782988322698639*^9, 
   3.782988324008401*^9}, {3.784731191404584*^9, 3.7847311917620277`*^9}, {
   3.7847452490325603`*^9, 3.784745249035277*^9}, {3.789063330012227*^9, 
   3.789063340103055*^9}, {3.789063924633823*^9, 3.789063984637895*^9}, {
   3.789064052070333*^9, 3.789064074105524*^9}, {3.789064118868773*^9, 
   3.789064119552953*^9}, 3.789064193463435*^9, {3.789064361147283*^9, 
   3.7890643670109253`*^9}, {3.789108041930771*^9, 3.7891080808355007`*^9}, {
   3.78915335657856*^9, 3.7891533634758787`*^9}, 3.789153428025321*^9, {
   3.7891534626144247`*^9, 3.7891534628176537`*^9}, {3.789153518621108*^9, 
   3.7891535513618307`*^9}, {3.789153621294819*^9, 3.7891536257866163`*^9}, {
   3.789153656727686*^9, 3.789153661705553*^9}, {3.793287730430997*^9, 
   3.7932877360487022`*^9}, {3.793288415580386*^9, 3.79328841630624*^9}, {
   3.793288596136944*^9, 3.7932886599880743`*^9}, {3.793288780489911*^9, 
   3.793288835435328*^9}, {3.793289014495965*^9, 3.79328901494519*^9}, {
   3.79328912720347*^9, 3.793289131789486*^9}, {3.793354328701827*^9, 
   3.793354332162863*^9}, {3.793358173682995*^9, 3.793358187491808*^9}, {
   3.7933964836600313`*^9, 3.793396488572175*^9}, {3.793451746892248*^9, 
   3.793451753688451*^9}, {3.793471217217877*^9, 3.7934712176260777`*^9}, {
   3.794137240493931*^9, 3.7941372404967813`*^9}, {3.8070309477750683`*^9, 
   3.807030954704104*^9}, {3.807031786657961*^9, 3.807031799104089*^9}, {
   3.807031832466054*^9, 3.8070318616656513`*^9}, {3.80703200425788*^9, 
   3.807032035047495*^9}, {3.811943738961317*^9, 3.811943739327341*^9}, {
   3.811944322140965*^9, 3.811944322828948*^9}, {3.811944511336183*^9, 
   3.811944511686565*^9}, 3.811944589072151*^9, {3.8119447676657753`*^9, 
   3.811944774528541*^9}, {3.811944891841655*^9, 3.811944902329866*^9}, {
   3.811945111911834*^9, 3.811945130769458*^9}, {3.8119452559255333`*^9, 
   3.811945257461569*^9}, {3.8119466737322073`*^9, 3.811946683508048*^9}, {
   3.8119468393296947`*^9, 3.81194693175779*^9}, 3.811947020205019*^9, {
   3.811947434035822*^9, 3.811947480162945*^9}, {3.8119475563256903`*^9, 
   3.811947600483597*^9}, {3.8119477743429747`*^9, 3.8119478384384193`*^9}, {
   3.811948447999465*^9, 3.811948462502249*^9}, {3.811948498864449*^9, 
   3.811948503351012*^9}, {3.8119485398488007`*^9, 3.8119485572634783`*^9}, {
   3.811948607513379*^9, 3.8119486099293127`*^9}, 3.811948770258402*^9, {
   3.811948833225977*^9, 3.811948834673972*^9}, {3.811948873890647*^9, 
   3.811948875658408*^9}, {3.811949093845275*^9, 3.811949102188712*^9}, {
   3.81194915291474*^9, 3.811949211926688*^9}, {3.812027236002945*^9, 
   3.812027248282569*^9}, 
   3.812233159643938*^9},ExpressionUUID->"bcad2e3f-192e-430e-b450-\
d6e2468ef5e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.7890640850561037`*^9, 
  3.789064085966503*^9}},ExpressionUUID->"91d02602-dff0-40e7-b47f-\
da9fa3e61865"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "WeightedAbundance", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"WeightFunction", "\[Rule]", "\"\<Total\>\""}], ",", 
     RowBox[{"MinPop", "\[Rule]", 
      RowBox[{"10", "^", 
       RowBox[{"-", "10"}]}]}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.789064087768105*^9, 3.789064111581707*^9}, {
  3.789064373372563*^9, 
  3.789064378501875*^9}},ExpressionUUID->"753c045e-6863-4d1f-831f-\
cce37ac5dcdd"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["TotalAbundance", "Subsection",
 CellChangeTimes->{{3.784728625958181*^9, 3.784728627168737*^9}, {
  3.78474718149946*^9, 
  3.784747184616733*^9}},ExpressionUUID->"1fdd3135-e42f-438c-8aa8-\
826622e1cd14"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.780559949094976*^9, 
  3.7805599498050327`*^9}},ExpressionUUID->"1886e9af-80ab-4627-8f7b-\
49f4da410d1a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TotalAbundance", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<TotalAbundance[\!\(\*StyleBox[\"pops\", \"TI\"]\)] computes the total \
abundance in guilds.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.780560266709786*^9, 3.780560280917179*^9}, {
  3.7805605268322477`*^9, 3.7805605784166594`*^9}, {3.780561409061764*^9, 
  3.7805614125376873`*^9}, {3.780563000073094*^9, 3.780563007149953*^9}, {
  3.780593445364644*^9, 3.780593472245802*^9}, {3.780659101386215*^9, 
  3.7806591086302*^9}, {3.7806591423971863`*^9, 3.7806591490244293`*^9}, {
  3.780659242836361*^9, 3.780659247585268*^9}, {3.7847286516742973`*^9, 
  3.784728691155267*^9}, {3.7847460107177877`*^9, 3.784746017909596*^9}, {
  3.784746067593773*^9, 
  3.7847460690021544`*^9}},ExpressionUUID->"26364af5-6c33-4bf6-b042-\
058aef4c249b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.780560597910359*^9, 
  3.780560600442903*^9}},ExpressionUUID->"7b2150a8-db7c-4df2-a142-\
cd2be7eafb3a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TotalAbundance", "[", 
    RowBox[{"solin_", ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<TotalAbundance\>\"", "]"}]}], ",", 
       "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "weightfunction", ",",
        "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "sol", ",", 
       "wa"}], "\n", "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", 
        RowBox[{"weightfunction", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"WeightFunction", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "TotalAbundance", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"sol", "=", 
         RowBox[{"ExtractVariables", "[", "solin", "]"}]}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"Set\[ScriptCapitalN]", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", "sol"}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: \[ScriptCapitalN]=\>\"", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "]"}]}], 
         "]"}], ";", "\n", "\n", 
        RowBox[{"wa", "=", 
         RowBox[{"WeightedAbundance", "[", 
          RowBox[{"sol", ",", 
           RowBox[{"WeightFunction", "\[Rule]", "weightfunction"}]}], "]"}]}],
         ";", "\n", 
        RowBox[{"Return", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"gu", "\[Rule]", 
            RowBox[{"Reinterpolation", "[", 
             RowBox[{
              RowBox[{"Sum", "[", 
               RowBox[{
                SubscriptBox["gu", "i"], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}]}], "}"}]}], 
               "]"}], "/.", "wa"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "]"}]}]}], "\n", 
      "\n", "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7805606024080973`*^9, 3.780560661881536*^9}, {
   3.7805606919296837`*^9, 3.780560737344602*^9}, {3.7805610032530813`*^9, 
   3.780561003455559*^9}, {3.780561056716065*^9, 3.780561059145832*^9}, {
   3.7805611260307903`*^9, 3.780561189637072*^9}, {3.7805613468301563`*^9, 
   3.7805613469016314`*^9}, {3.7805614032163477`*^9, 3.780561425192219*^9}, {
   3.780562520340898*^9, 3.7805625487804728`*^9}, {3.7805626100750437`*^9, 
   3.78056264575412*^9}, {3.780562695465979*^9, 3.7805627279761343`*^9}, {
   3.780562802758157*^9, 3.780562807278801*^9}, {3.780593182877863*^9, 
   3.7805931832728777`*^9}, {3.780593435115925*^9, 3.7805934384715433`*^9}, {
   3.780593490167385*^9, 3.780593491724946*^9}, {3.780593542118535*^9, 
   3.780593545775544*^9}, {3.780593904296342*^9, 3.7805939253511333`*^9}, {
   3.780593962902972*^9, 3.7805939895811777`*^9}, {3.780594033635968*^9, 
   3.78059406094716*^9}, {3.780594132766667*^9, 3.780594132855966*^9}, 
   3.78059425462521*^9, {3.780594383434482*^9, 3.780594420028584*^9}, {
   3.780594465868431*^9, 3.780594468257744*^9}, {3.780594599811767*^9, 
   3.780594607970069*^9}, {3.780594665083008*^9, 3.7805947146691933`*^9}, {
   3.7806276879456*^9, 3.780627714985632*^9}, {3.780659253892095*^9, 
   3.7806592554787292`*^9}, {3.7807201171026173`*^9, 3.780720120328066*^9}, {
   3.780720528431926*^9, 3.780720536245401*^9}, {3.780720646632484*^9, 
   3.7807206515693283`*^9}, {3.7807343605681543`*^9, 3.780734363509713*^9}, {
   3.7807353386161337`*^9, 3.78073534242588*^9}, {3.780736087048936*^9, 
   3.780736152836361*^9}, {3.780736281538679*^9, 3.7807363424480143`*^9}, {
   3.780736373590034*^9, 3.780736381706492*^9}, {3.780737891817706*^9, 
   3.7807378944501534`*^9}, 3.780737956636181*^9, 3.780738148935872*^9, {
   3.782987649337784*^9, 3.782987677509638*^9}, {3.782988322698639*^9, 
   3.782988324008401*^9}, 3.78472870783993*^9, {3.7847288184673843`*^9, 
   3.784728861625771*^9}, {3.784728945561831*^9, 3.784728958583902*^9}, {
   3.78472929140731*^9, 3.784729387550352*^9}, {3.784729447860347*^9, 
   3.7847294502781553`*^9}, {3.784729483260027*^9, 3.784729552773682*^9}, {
   3.7847297339163723`*^9, 3.78472976256774*^9}, {3.7847298020010366`*^9, 
   3.784729844952401*^9}, {3.784730395565947*^9, 3.7847304276761503`*^9}, {
   3.7847312230237303`*^9, 3.784731231442436*^9}, 3.784737922052528*^9, 
   3.784745249038093*^9, {3.7847460032757874`*^9, 3.78474600656649*^9}, {
   3.784746042874415*^9, 3.7847460629041967`*^9}, {3.7847472913200607`*^9, 
   3.784747344647874*^9}, {3.7847474244943438`*^9, 3.784747441232312*^9}, {
   3.784808369661211*^9, 3.7848084227226057`*^9}, {3.784816343707467*^9, 
   3.784816343862118*^9}, {3.784816375775289*^9, 3.7848164792045527`*^9}, {
   3.788982706497796*^9, 3.788982713230815*^9}, {3.789221904147191*^9, 
   3.789221910291761*^9}, 3.79413724050032*^9, {3.811949871237749*^9, 
   3.811949916940712*^9}, {3.811950217817361*^9, 
   3.811950241536832*^9}},ExpressionUUID->"6c633dd8-0f2d-48a9-9dfd-\
35b12338eeea"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.784806857476272*^9, 
  3.7848068581099358`*^9}},ExpressionUUID->"64e845a6-75c0-4bec-9118-\
c8fd8fc84e17"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "TotalAbundance", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"WeightFunction", "\[Rule]", "\"\<Total\>\""}], "}"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.784806859982396*^9, 3.784806878471085*^9}, {
  3.784808315380149*^9, 3.7848083183736258`*^9}, {3.784808378678712*^9, 
  3.784808381660226*^9}, {3.7889827329048147`*^9, 
  3.7889827340895452`*^9}},ExpressionUUID->"65de8702-f1e0-4cad-b1af-\
2d45ba9da6fc"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["TraitMean", "Subsection",
 CellChangeTimes->{{3.784728625958181*^9, 
  3.784728627168737*^9}},ExpressionUUID->"9345ad3a-47a5-448b-81ad-\
29e01a098e57"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.780559949094976*^9, 
  3.7805599498050327`*^9}},ExpressionUUID->"2d603119-ffd4-4d4c-9a85-\
f09a62afadd3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TraitMean", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<TraitMean[\!\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"pops\
\", \"TI\"]\)] computes the mean traits in guilds.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.780560266709786*^9, 3.780560280917179*^9}, {
  3.7805605268322477`*^9, 3.7805605784166594`*^9}, {3.780561409061764*^9, 
  3.7805614125376873`*^9}, {3.780563000073094*^9, 3.780563007149953*^9}, {
  3.780593445364644*^9, 3.780593472245802*^9}, {3.780659101386215*^9, 
  3.7806591086302*^9}, {3.7806591423971863`*^9, 3.7806591490244293`*^9}, {
  3.780659242836361*^9, 3.780659247585268*^9}, {3.7847286516742973`*^9, 
  3.784728691155267*^9}},ExpressionUUID->"968c40d4-c800-417e-99f9-\
5eca3dfc0e92"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.780560597910359*^9, 
  3.780560600442903*^9}},ExpressionUUID->"bff12ad1-3c61-425b-bc7b-\
0b815491504a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TraitMean", "[", 
    RowBox[{
     RowBox[{"traits_", "?", "TraitsQ"}], ",", 
     RowBox[{"sol_", "?", "VariablesQ"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<TraitMean\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "weightfunction", ",",
        "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "wa"}], "\n", 
      "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", 
        RowBox[{"weightfunction", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"WeightFunction", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "TraitMean", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"Set\[ScriptCapitalN]", "[", 
         RowBox[{"traits", ",", "sol"}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: \[ScriptCapitalN]=\>\"", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "]"}]}], 
         "]"}], ";", "\n", "\n", 
        RowBox[{"wa", "=", 
         RowBox[{"WeightedAbundance", "[", 
          RowBox[{"sol", ",", 
           RowBox[{"WeightFunction", "\[Rule]", "weightfunction"}]}], "]"}]}],
         ";", "\n", "\n", 
        RowBox[{"Return", "[", "\n", "\t", 
         RowBox[{"Flatten", "@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Table", "[", "\n", "\t\t", 
             RowBox[{
              RowBox[{"gtrait", "\[Rule]", 
               RowBox[{"Reinterpolation", "[", 
                RowBox[{
                 RowBox[{"Moment", "[", 
                  RowBox[{
                   RowBox[{"WeightedData", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    SubscriptBox["gtrait", "i"], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}]}], "}"}]}], 
                    "]"}], "/.", "traits"}], ",", 
                    RowBox[{"Chop", "[", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    SubscriptBox["gu", "i"], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}]}], "}"}]}], 
                    "]"}], "]"}]}], "]"}], ",", "1"}], "]"}], "/.", "wa"}], 
                "]"}]}], "\n", "\t", ",", 
              RowBox[{"{", 
               RowBox[{"gtrait", ",", 
                RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "\n", "]"}]}]}],
       "\n", "\n", "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7805606024080973`*^9, 3.780560661881536*^9}, {
   3.7805606919296837`*^9, 3.780560737344602*^9}, {3.7805610032530813`*^9, 
   3.780561003455559*^9}, {3.780561056716065*^9, 3.780561059145832*^9}, {
   3.7805611260307903`*^9, 3.780561189637072*^9}, {3.7805613468301563`*^9, 
   3.7805613469016314`*^9}, {3.7805614032163477`*^9, 3.780561425192219*^9}, {
   3.780562520340898*^9, 3.7805625487804728`*^9}, {3.7805626100750437`*^9, 
   3.78056264575412*^9}, {3.780562695465979*^9, 3.7805627279761343`*^9}, {
   3.780562802758157*^9, 3.780562807278801*^9}, {3.780593182877863*^9, 
   3.7805931832728777`*^9}, {3.780593435115925*^9, 3.7805934384715433`*^9}, {
   3.780593490167385*^9, 3.780593491724946*^9}, {3.780593542118535*^9, 
   3.780593545775544*^9}, {3.780593904296342*^9, 3.7805939253511333`*^9}, {
   3.780593962902972*^9, 3.7805939895811777`*^9}, {3.780594033635968*^9, 
   3.78059406094716*^9}, {3.780594132766667*^9, 3.780594132855966*^9}, 
   3.78059425462521*^9, {3.780594383434482*^9, 3.780594420028584*^9}, {
   3.780594465868431*^9, 3.780594468257744*^9}, {3.780594599811767*^9, 
   3.780594607970069*^9}, {3.780594665083008*^9, 3.7805947146691933`*^9}, {
   3.7806276879456*^9, 3.780627714985632*^9}, {3.780659253892095*^9, 
   3.7806592554787292`*^9}, {3.7807201171026173`*^9, 3.780720120328066*^9}, {
   3.780720528431926*^9, 3.780720536245401*^9}, {3.780720646632484*^9, 
   3.7807206515693283`*^9}, {3.7807343605681543`*^9, 3.780734363509713*^9}, {
   3.7807353386161337`*^9, 3.78073534242588*^9}, {3.780736087048936*^9, 
   3.780736152836361*^9}, {3.780736281538679*^9, 3.7807363424480143`*^9}, {
   3.780736373590034*^9, 3.780736381706492*^9}, {3.780737891817706*^9, 
   3.7807378944501534`*^9}, 3.780737956636181*^9, 3.780738148935872*^9, {
   3.782987649337784*^9, 3.782987677509638*^9}, {3.782988322698639*^9, 
   3.782988324008401*^9}, 3.78472870783993*^9, {3.7847288184673843`*^9, 
   3.784728861625771*^9}, {3.784728945561831*^9, 3.784728958583902*^9}, {
   3.78472929140731*^9, 3.784729387550352*^9}, {3.784729447860347*^9, 
   3.7847294502781553`*^9}, {3.784729483260027*^9, 3.784729552773682*^9}, {
   3.7847297339163723`*^9, 3.78472976256774*^9}, {3.7847298020010366`*^9, 
   3.784729844952401*^9}, {3.784730395565947*^9, 3.7847304276761503`*^9}, {
   3.7847312230237303`*^9, 3.784731231442436*^9}, 3.784737922052528*^9, 
   3.784745249038093*^9, {3.784806839801671*^9, 3.78480685240283*^9}, {
   3.784806897752063*^9, 3.784806925064046*^9}, {3.784807492696031*^9, 
   3.784807493133377*^9}, 3.784808340317246*^9, {3.7848203209507236`*^9, 
   3.78482032563892*^9}, {3.794096059977049*^9, 3.794096064695726*^9}, 
   3.7941372405026207`*^9, {3.8119499969990187`*^9, 3.81195002883106*^9}, {
   3.811950114152232*^9, 
   3.8119501833843727`*^9}},ExpressionUUID->"48dc7474-c553-4690-a23c-\
05c7e2bf99b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.784806857476272*^9, 
  3.7848068581099358`*^9}},ExpressionUUID->"8fc75a8d-9f46-4fd5-b773-\
bc7f7f9fd1f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "TraitMean", "]"}], "=", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{"WeightFunction", "\[Rule]", "\"\<Total\>\""}], "\n", "}"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.784806859982396*^9, 
  3.784806878471085*^9}},ExpressionUUID->"bf5a3a70-d186-4595-bc30-\
23ae48fab1f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",
 CellChangeTimes->{{3.711391826371338*^9, 
  3.7113918281050377`*^9}},ExpressionUUID->"c7d52c02-5608-48fc-848d-\
91e54af1026e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"split", " ", "traitsandvariables"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"TraitMean", "[", 
     RowBox[{
      RowBox[{"eesol_", "?", "AttributesAndVariablesQ"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
    RowBox[{"TraitMean", "[", 
     RowBox[{
      RowBox[{"ExtractTraits", "[", "eesol", "]"}], ",", 
      RowBox[{"ExtractVariables", "[", "eesol", "]"}], ",", "opts"}], "]"}]}],
    ";"}]}]], "Code",
 CellChangeTimes->{{3.7113918351562*^9, 3.7113918740712967`*^9}, 
   3.7114982161331043`*^9, {3.712738534647805*^9, 3.7127385346513844`*^9}, {
   3.769501364239954*^9, 3.769501375253107*^9}, {3.7848147287224493`*^9, 
   3.7848147342390738`*^9}, 3.7848148273861237`*^9, 3.798128800029233*^9, 
   3.807369309110209*^9},ExpressionUUID->"ccebe1c3-f58a-4cc1-9318-\
53f3a834c7d5"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["TraitVariance", "Subsection",
 CellChangeTimes->{{3.784728625958181*^9, 3.784728627168737*^9}, {
  3.784737876555613*^9, 
  3.7847378772009687`*^9}},ExpressionUUID->"5e86da3a-44df-45f9-a4fb-\
a18e0adb1fb9"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.780559949094976*^9, 
  3.7805599498050327`*^9}},ExpressionUUID->"0637d2c7-032d-43c9-b509-\
ae88fbd5bfcd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TraitVariance", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<TraitVariance[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"pops\", \"TI\"]\)] computes the variance of traits in \
guilds.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.780560266709786*^9, 3.780560280917179*^9}, {
  3.7805605268322477`*^9, 3.7805605784166594`*^9}, {3.780561409061764*^9, 
  3.7805614125376873`*^9}, {3.780563000073094*^9, 3.780563007149953*^9}, {
  3.780593445364644*^9, 3.780593472245802*^9}, {3.780659101386215*^9, 
  3.7806591086302*^9}, {3.7806591423971863`*^9, 3.7806591490244293`*^9}, {
  3.780659242836361*^9, 3.780659247585268*^9}, {3.7847286516742973`*^9, 
  3.784728691155267*^9}, {3.784737880131462*^9, 
  3.784737887310095*^9}},ExpressionUUID->"8a65186e-11be-4a03-937a-\
e931927a369d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.780560597910359*^9, 
  3.780560600442903*^9}},ExpressionUUID->"916da872-eea1-46f3-961e-\
3299184a4c7e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TraitVariance", "[", 
    RowBox[{
     RowBox[{"traits_", "?", "TraitsQ"}], ",", 
     RowBox[{"sol_", "?", "VariablesQ"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<TraitVariance\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "weightfunction", ",",
        "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "wa"}], "\n", 
      "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", 
        RowBox[{"weightfunction", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"WeightFunction", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "TraitVariance", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"Set\[ScriptCapitalN]", "[", 
         RowBox[{"traits", ",", "sol"}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: \[ScriptCapitalN]=\>\"", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "]"}]}], 
         "]"}], ";", "\n", "\n", 
        RowBox[{"wa", "=", 
         RowBox[{"WeightedAbundance", "[", 
          RowBox[{"sol", ",", 
           RowBox[{"WeightFunction", "\[Rule]", "weightfunction"}]}], "]"}]}],
         ";", "\n", "\n", 
        RowBox[{"Return", "[", "\n", "\t", 
         RowBox[{"Flatten", "@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Table", "[", "\n", "\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"Var", "[", "gtrait", "]"}], "\[Rule]", 
               RowBox[{"Reinterpolation", "[", 
                RowBox[{"CentralMoment", "[", 
                 RowBox[{
                  RowBox[{"WeightedData", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    SubscriptBox["gtrait", "i"], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}]}], "}"}]}], 
                    "]"}], "/.", "traits"}], ",", 
                    RowBox[{"Chop", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    SubscriptBox["gu", "i"], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}]}], "}"}]}], 
                    "]"}], "/.", "wa"}], "]"}]}], "]"}], ",", "2"}], "]"}], 
                "]"}]}], "\n", "\t", ",", 
              RowBox[{"{", 
               RowBox[{"gtrait", ",", 
                RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "\n", "]"}]}]}],
       "\n", "\n", "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7805606024080973`*^9, 3.780560661881536*^9}, {
   3.7805606919296837`*^9, 3.780560737344602*^9}, {3.7805610032530813`*^9, 
   3.780561003455559*^9}, {3.780561056716065*^9, 3.780561059145832*^9}, {
   3.7805611260307903`*^9, 3.780561189637072*^9}, {3.7805613468301563`*^9, 
   3.7805613469016314`*^9}, {3.7805614032163477`*^9, 3.780561425192219*^9}, {
   3.780562520340898*^9, 3.7805625487804728`*^9}, {3.7805626100750437`*^9, 
   3.78056264575412*^9}, {3.780562695465979*^9, 3.7805627279761343`*^9}, {
   3.780562802758157*^9, 3.780562807278801*^9}, {3.780593182877863*^9, 
   3.7805931832728777`*^9}, {3.780593435115925*^9, 3.7805934384715433`*^9}, {
   3.780593490167385*^9, 3.780593491724946*^9}, {3.780593542118535*^9, 
   3.780593545775544*^9}, {3.780593904296342*^9, 3.7805939253511333`*^9}, {
   3.780593962902972*^9, 3.7805939895811777`*^9}, {3.780594033635968*^9, 
   3.78059406094716*^9}, {3.780594132766667*^9, 3.780594132855966*^9}, 
   3.78059425462521*^9, {3.780594383434482*^9, 3.780594420028584*^9}, {
   3.780594465868431*^9, 3.780594468257744*^9}, {3.780594599811767*^9, 
   3.780594607970069*^9}, {3.780594665083008*^9, 3.7805947146691933`*^9}, {
   3.7806276879456*^9, 3.780627714985632*^9}, {3.780659253892095*^9, 
   3.7806592554787292`*^9}, {3.7807201171026173`*^9, 3.780720120328066*^9}, {
   3.780720528431926*^9, 3.780720536245401*^9}, {3.780720646632484*^9, 
   3.7807206515693283`*^9}, {3.7807343605681543`*^9, 3.780734363509713*^9}, {
   3.7807353386161337`*^9, 3.78073534242588*^9}, {3.780736087048936*^9, 
   3.780736152836361*^9}, {3.780736281538679*^9, 3.7807363424480143`*^9}, {
   3.780736373590034*^9, 3.780736381706492*^9}, {3.780737891817706*^9, 
   3.7807378944501534`*^9}, 3.780737956636181*^9, 3.780738148935872*^9, {
   3.782987649337784*^9, 3.782987677509638*^9}, {3.782988322698639*^9, 
   3.782988324008401*^9}, 3.78472870783993*^9, {3.7847288184673843`*^9, 
   3.784728861625771*^9}, {3.784728945561831*^9, 3.784728958583902*^9}, {
   3.78472929140731*^9, 3.784729387550352*^9}, {3.784729447860347*^9, 
   3.7847294502781553`*^9}, {3.784729483260027*^9, 3.784729552773682*^9}, {
   3.7847297339163723`*^9, 3.78472976256774*^9}, {3.7847298020010366`*^9, 
   3.784729844952401*^9}, {3.784730395565947*^9, 3.7847304276761503`*^9}, {
   3.7847312230237303`*^9, 3.784731231442436*^9}, {3.78473789133985*^9, 
   3.784737941448804*^9}, {3.784738821547489*^9, 3.784738822813395*^9}, 
   3.784745249040894*^9, {3.784808324055976*^9, 3.7848083528353853`*^9}, {
   3.784808400790883*^9, 3.784808403827001*^9}, {3.78482033632796*^9, 
   3.784820354722859*^9}, 3.794096091054226*^9, 3.794137240504922*^9, {
   3.81195028360186*^9, 3.811950308073081*^9}, {3.8119505038191137`*^9, 
   3.81195052236162*^9}},ExpressionUUID->"95410cec-df24-44a5-81e8-\
8af5cac02c19"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.784806857476272*^9, 
  3.7848068581099358`*^9}},ExpressionUUID->"5b7b74f3-b421-4807-8edb-\
b9e87c577a79"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "TraitVariance", "]"}], "=", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{"WeightFunction", "\[Rule]", "\"\<Total\>\""}], "\n", "}"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.784806859982396*^9, 3.784806878471085*^9}, {
  3.784808315380149*^9, 
  3.7848083183736258`*^9}},ExpressionUUID->"27a0a230-df6c-4f60-a9cc-\
29d6262af34f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",
 CellChangeTimes->{{3.711391826371338*^9, 
  3.7113918281050377`*^9}},ExpressionUUID->"9397fb43-e256-45b3-988d-\
0bfaab8c1026"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"split", " ", "traitsandvariables"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"TraitVariance", "[", 
     RowBox[{
      RowBox[{"eesol_", "?", "AttributesAndVariablesQ"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
    RowBox[{"TraitVariance", "[", 
     RowBox[{
      RowBox[{"ExtractTraits", "[", "eesol", "]"}], ",", 
      RowBox[{"ExtractVariables", "[", "eesol", "]"}], ",", "opts"}], "]"}]}],
    ";"}]}]], "Code",
 CellChangeTimes->{{3.7113918351562*^9, 3.7113918740712967`*^9}, 
   3.7114982161331043`*^9, {3.712738534647805*^9, 3.7127385346513844`*^9}, {
   3.769501364239954*^9, 3.769501375253107*^9}, {3.7848147287224493`*^9, 
   3.7848147342390738`*^9}, 3.7848148273861237`*^9, {3.784815920354226*^9, 
   3.784815921271172*^9}, 3.798128800032029*^9, 
   3.8073693098215427`*^9},ExpressionUUID->"f1b35c24-248e-4e76-a293-\
deaa7c469599"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["TraitDistance", "Subsection",
 CellChangeTimes->{{3.788982305382347*^9, 
  3.788982307197983*^9}},ExpressionUUID->"9d73bd5e-d208-45d2-80c1-\
629e8656b647"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.788982427052834*^9, 
  3.788982427609515*^9}},ExpressionUUID->"a4ffcd52-926e-4e61-93e0-\
3f2646be128c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TraitDistance", "::", "usage"}], " ", "=", "\n", 
   "\"\<TraitDistance[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"sp1\", \"TI\"]\), \!\(\*StyleBox[\"sp2\", \"TI\"]\)] returns \
the trait distance between two species.\n\
TraitDistance[\!\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"guild\", \
\"TI\"]\)] returns a trait distance matrix between all species in a guild \
(default=first).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.788982458568865*^9, 3.788982464343936*^9}, {
  3.788982572119158*^9, 3.788982587021665*^9}, {3.7892137280397167`*^9, 
  3.789213747413979*^9}, {3.789213810033326*^9, 3.78921385625485*^9}, {
  3.789214701861991*^9, 
  3.789214704399384*^9}},ExpressionUUID->"a9197e55-366c-4f9e-b94a-\
0a1550ca063e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.788982422548108*^9, 
  3.788982423903461*^9}},ExpressionUUID->"d73eac0f-0101-4045-9f1a-\
38ad783ee513"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TraitDistance", "[", 
    RowBox[{
     RowBox[{"traits_", "?", "RuleListQ"}], ",", "sp1_Subscript", ",", 
     "sp2_Subscript", ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<TraitDistance (2sp)\>\"", "]"}]}], ",",
        "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", 
       "rulelistdistanceopts"}], "\n", "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", 
        RowBox[{"rulelistdistanceopts", "=", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "TraitDistance", "]"}]}], "}"}], "]"}], 
           ",", 
           RowBox[{"Options", "[", "RuleListDistance", "]"}]}], "]"}]}], ";", 
        "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"DeleteSubscripts", "@", 
            RowBox[{"ExtractTraits", "[", 
             RowBox[{"traits", ",", "sp1"}], "]"}]}], "]"}], ";", "\n", 
          RowBox[{"Print", "[", 
           RowBox[{"DeleteSubscripts", "@", 
            RowBox[{"ExtractTraits", "[", 
             RowBox[{"traits", ",", "sp2"}], "]"}]}], "]"}], ";", "\n", 
          RowBox[{"Print", "[", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"Sequence", "@@", "rulelistdistanceopts"}], "]"}], "]"}], 
          ";"}], "*)"}], "\n", "\n", 
        RowBox[{"Return", "[", 
         RowBox[{"Reinterpolation", "[", 
          RowBox[{"RuleListDistance", "[", 
           RowBox[{
            RowBox[{"DeleteSubscripts", "@", 
             RowBox[{"ExtractTraits", "[", 
              RowBox[{"traits", ",", "sp1"}], "]"}]}], ",", 
            RowBox[{"DeleteSubscripts", "@", 
             RowBox[{"ExtractTraits", "[", 
              RowBox[{"traits", ",", "sp2"}], "]"}]}], ",", "\n", "\t", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"Sequence", "@@", "rulelistdistanceopts"}], "]"}]}], 
           "]"}], "]"}], "]"}], ";"}]}], "\n", "\n", "]"}]}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.788982415827293*^9, 3.788982418587566*^9}, {
   3.7889828180213623`*^9, 3.788982873301524*^9}, {3.7889830269138002`*^9, 
   3.7889830304169807`*^9}, {3.7889830675613537`*^9, 3.788983160815856*^9}, {
   3.788983335775404*^9, 3.7889833501039867`*^9}, {3.7889835127457113`*^9, 
   3.788983547121269*^9}, {3.788983845563246*^9, 3.788983862522901*^9}, {
   3.788983999650136*^9, 3.78898403302817*^9}, {3.789020227491825*^9, 
   3.789020228750803*^9}, 3.789020422854257*^9, {3.7938966254139833`*^9, 
   3.7938966343793077`*^9}, 3.794137240508686*^9, {3.829579760327888*^9, 
   3.829579779526119*^9}, 
   3.82957998536899*^9},ExpressionUUID->"20403195-3d97-4015-b2e6-\
51b72b83af6f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TraitDistance", "[", 
    RowBox[{
     RowBox[{"traits_", "?", "RuleListQ"}], ",", 
     RowBox[{"gu", ":", 
      RowBox[{"(", 
       RowBox[{"_Symbol", "|", "_Integer"}], ")"}], ":", "Automatic"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{"func", "=", 
       RowBox[{"FuncStyle", "[", "\"\<TraitDistance (guild)\>\"", "]"}]}], 
      "\n", "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"gu", "===", "\"\<Automatic\>\""}], ",", 
          RowBox[{"gu", "=", 
           RowBox[{
           "guilds", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}]}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"Set\[ScriptCapitalN]", "[", 
         RowBox[{
          RowBox[{"ExtractTraits", "@", "traits"}], ",", 
          RowBox[{"{", "}"}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: \[ScriptCapitalN]=\>\"", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "]"}]}], 
         "]"}], ";", "\n", "\n", 
        RowBox[{"Return", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"TraitDistance", "[", 
            RowBox[{"traits", ",", 
             SubscriptBox["gu", "i"], ",", 
             SubscriptBox["gu", "j"], ",", "opts"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", 
             RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}]}], "}"}]}], "]"}], 
         "]"}], ";"}]}], "\n", "\n", "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.789020223984325*^9, 3.7890202387790422`*^9}, {
   3.789020406917276*^9, 3.789020415184332*^9}, {3.789020468100371*^9, 
   3.789020559923674*^9}, 3.789021609745129*^9, {3.789214585480109*^9, 
   3.789214588304166*^9}, {3.7892146273434267`*^9, 3.789214642237109*^9}, {
   3.793896887472435*^9, 3.793896889951956*^9}, {3.793900227210884*^9, 
   3.7939002277044992`*^9}, 3.79413724051197*^9, {3.829579080249691*^9, 
   3.829579086452227*^9}},ExpressionUUID->"e72a7879-881b-4a25-8aac-\
4db2b294d0b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.7889838670824413`*^9, 
  3.7889838677870283`*^9}},ExpressionUUID->"fa4c2d0e-a5ee-44b6-8d35-\
ea6bc612be80"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "TraitDistance", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.788983869214861*^9, 
  3.788983877202208*^9}},ExpressionUUID->"424de938-2f26-4445-8afd-\
e2b0436eb387"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",
 CellChangeTimes->{{3.793897652718748*^9, 
  3.793897654181984*^9}},ExpressionUUID->"fe482541-e75f-421f-8446-\
a5ebb68a2556"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TraitDistance", "[", 
    RowBox[{
     RowBox[{"traits_", "?", "RuleListQ"}], ",", "sp1_Subscript", ",", 
     "sp1_Subscript", ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "0"}], ";"}]], "Code",\

 CellChangeTimes->{{3.793897655938203*^9, 
  3.793897674302709*^9}},ExpressionUUID->"217af0b0-b3ec-4d45-9e78-\
b37c0c6328c6"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["FunctionalDistinctiveness", "Subsection",
 CellChangeTimes->{{3.789062706729719*^9, 
  3.789062716754613*^9}},ExpressionUUID->"fef3a198-d291-4197-bd1f-\
f62801738006"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.789212916571114*^9, 
  3.7892129182316303`*^9}},ExpressionUUID->"964f797c-1207-4ab7-98ae-\
ad5be812c667"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FunctionalDistinctiveness", "::", "usage"}], " ", "=", "\n", 
   "\"\<FunctionalDistinctiveness[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"sol\", \"TI\"]\), \!\(\*StyleBox[\"target\", \"TI\"]\)] \
calculates the functional distinctiveness of \!\(\*StyleBox[\"target\", \
\"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.789213711000297*^9, 3.789213715032318*^9}, {
  3.789214682390884*^9, 3.789214682766611*^9}, {3.793447505703888*^9, 
  3.7934475093031673`*^9}, {3.793447549198353*^9, 3.7934475658603086`*^9}, {
  3.7934497416613493`*^9, 
  3.793449741946218*^9}},ExpressionUUID->"a415f0eb-34d6-4120-863b-\
9fc7fc22a8ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.789212912807529*^9, 3.789212913921483*^9}, {
  3.7932884081420097`*^9, 
  3.7932884087079773`*^9}},ExpressionUUID->"a1dd39d1-8f8d-4814-a628-\
3ad32366a3af"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FunctionalDistinctiveness", "[", 
   RowBox[{
    RowBox[{"traits_", "?", "TraitsQ"}], ",", 
    RowBox[{"sol", ":", 
     RowBox[{"(", 
      RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
     RowBox[{"{", "}"}]}], ",", 
    RowBox[{"target", ":", 
     RowBox[{"(", 
      RowBox[{"_Symbol", "|", "_Integer", "|", "_Subscript"}], ")"}], ":", 
     "Automatic"}], ",", 
    RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\n", 
     RowBox[{
      RowBox[{"func", "=", 
       RowBox[{"FuncStyle", "[", "\"\<FunctionalDistinctiveness\>\"", "]"}]}],
       ",", "\n", 
      RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
      "method", ",", "weightfunction", ",", "traitdistanceopts", ",", 
      "normalizedistance", ",", "excludefocalspecies", ",", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "gu", ",", 
      "sp", ",", "dists", ",", "distnorm", ",", "denom", ",", "abunds", ",", 
      "totalabundance"}], "\n", "}"}], ",", "\n", "\n", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
          RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
       "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", 
       RowBox[{"verbose", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Verbose", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "FunctionalDistinctiveness", "]"}]}], 
            "}"}], "]"}]}], "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"sol", "===", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"method", "=", "\"\<Species\>\""}], ",", 
         RowBox[{"method", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Method", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "FunctionalDistinctiveness", "]"}]}], 
              "}"}], "]"}]}], "]"}]}]}], "]"}], ";", "\n", 
       RowBox[{"weightfunction", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"WeightFunction", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "FunctionalDistinctiveness", "]"}]}], 
            "}"}], "]"}]}], "]"}]}], ";", "\n", 
       RowBox[{"traitdistanceopts", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"TraitDistanceOpts", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "FunctionalDistinctiveness", "]"}]}], 
            "}"}], "]"}]}], "]"}]}], ";", "\n", 
       RowBox[{"normalizedistance", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"NormalizeDistance", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "FunctionalDistinctiveness", "]"}]}], 
            "}"}], "]"}]}], "]"}]}], ";", "\n", 
       RowBox[{"excludefocalspecies", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"ExcludeFocalSpecies", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "FunctionalDistinctiveness", "]"}]}], 
            "}"}], "]"}]}], "]"}]}], ";", "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{
        "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
         "in", " ", "guilds"}], " ", "*)"}], "\n", 
       RowBox[{"Set\[ScriptCapitalN]", "[", 
        RowBox[{"traits", ",", 
         RowBox[{"{", "}"}]}], "]"}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"func", ",", "\"\<: \[ScriptCapitalN]=\>\"", ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "]"}]}], "]"}],
        ";", "\n", "\n", 
       RowBox[{"Which", "[", "\n", "\t", 
        RowBox[{"(*", " ", 
         RowBox[{"species", " ", "target"}], " ", "*)"}], "\n", "\t", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "target", "]"}], "===", "Subscript"}], ",", 
         "\n", "\t", 
         RowBox[{
          RowBox[{"gu", "=", 
           RowBox[{
           "target", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
           ";", 
          RowBox[{"sp", "=", 
           RowBox[{
           "target", "\[LeftDoubleBracket]", "2", 
            "\[RightDoubleBracket]"}]}]}], ",", "\n", "\t", 
         RowBox[{"(*", " ", "automatic", " ", "*)"}], "\n", "\t", 
         RowBox[{"target", "===", "Automatic"}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{"gu", "=", 
           RowBox[{
           "guilds", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
           ";", 
          RowBox[{"sp", "=", "\"\<All\>\""}]}], ",", "\n", "\t", 
         RowBox[{"(*", " ", 
          RowBox[{"guild", " ", "target"}], " ", "*)"}], "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", "target", "]"}], "===", "Integer"}], "||", 
          RowBox[{
           RowBox[{"Head", "[", "target", "]"}], "\[Equal]", "Symbol"}]}], 
         ",", "\n", "\t", 
         RowBox[{
          RowBox[{"gu", "=", "target"}], ";", 
          RowBox[{"sp", "=", "\"\<All\>\""}]}], ",", "\n", "\t", "Else", ",", 
         "\n", "\t", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"FunctionalDistinctiveness", "::", "badtgt"}], "]"}], ";", 
          "\n", "\t", 
          RowBox[{"Return", "[", "$Aborted", "]"}], ";"}]}], "\n", "]"}], ";",
        "\n", "\n", 
       RowBox[{"dists", "=", 
        RowBox[{"TraitDistance", "[", 
         RowBox[{"traits", ",", "gu", ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Sequence", "@@", "traitdistanceopts"}], "]"}]}], "]"}]}], 
       ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"verbose", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"func", ",", "\"\<: dists=\>\"", ",", "dists"}], "]"}]}], 
        "]"}], ";", "\n", 
       RowBox[{"distnorm", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"normalizedistance", "\[Equal]", "True"}], ",", 
          RowBox[{"Max", "[", 
           RowBox[{"Flatten", "[", "dists", "]"}], "]"}], ",", "1"}], "]"}]}],
        ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"verbose", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"func", ",", "\"\<: distnorm=\>\"", ",", "distnorm"}], 
          "]"}]}], "]"}], ";", "\n", "\n", 
       RowBox[{"Which", "[", "\n", "\t", 
        RowBox[{
         RowBox[{"method", "===", "\"\<Species\>\""}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"excludefocalspecies", "\[Equal]", "True"}], ",", 
            RowBox[{"denom", "=", 
             RowBox[{
              SubscriptBox["\[ScriptCapitalN]", "gu"], "-", "1"}]}], ",", 
            RowBox[{"denom", "=", 
             SubscriptBox["\[ScriptCapitalN]", "gu"]}]}], "]"}], ";", "\n", 
          "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"sp", "===", "\"\<All\>\""}], ",", "\n", "\t\t", 
            RowBox[{"Return", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"FunctionalDistinctiveness", "[", 
                 SubscriptBox["gu", "sp"], "]"}], "\[Rule]", 
                RowBox[{"Reinterpolation", "[", 
                 RowBox[{
                  RowBox[{"Sum", "[", 
                   RowBox[{
                    RowBox[{"dists", "\[LeftDoubleBracket]", 
                    RowBox[{"sp", ",", "sp\[Prime]"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"sp\[Prime]", ",", 
                    SubscriptBox["\[ScriptCapitalN]", "gu"]}], "}"}]}], "]"}],
                   "/", 
                  RowBox[{"(", 
                   RowBox[{"distnorm", "*", "denom"}], ")"}]}], "]"}]}], ",", 
               
               RowBox[{"{", 
                RowBox[{"sp", ",", 
                 SubscriptBox["\[ScriptCapitalN]", "gu"]}], "}"}]}], "]"}], 
             "]"}], ",", "\n", "\t\t", 
            RowBox[{"Return", "[", 
             RowBox[{"Reinterpolation", "[", 
              RowBox[{
               RowBox[{"Sum", "[", 
                RowBox[{
                 RowBox[{"dists", "\[LeftDoubleBracket]", 
                  RowBox[{"sp", ",", "sp\[Prime]"}], 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"sp\[Prime]", ",", 
                   SubscriptBox["\[ScriptCapitalN]", "gu"]}], "}"}]}], "]"}], 
               "/", 
               RowBox[{"(", 
                RowBox[{"distnorm", "*", "denom"}], ")"}]}], "]"}], "]"}]}], 
           "\n", "\t", "]"}]}], ",", "\n", "\t", 
         RowBox[{"method", "===", "\"\<AbundanceWeighted\>\""}], ",", "\n", 
         "\t", 
         RowBox[{
          RowBox[{"abunds", "=", 
           RowBox[{"ExtractGuilds", "[", 
            RowBox[{
             RowBox[{"WeightedAbundance", "[", 
              RowBox[{"sol", ",", 
               RowBox[{"WeightFunction", "\[Rule]", "weightfunction"}]}], 
              "]"}], ",", "gu"}], "]"}]}], ";", "\n", "\t", 
          RowBox[{"If", "[", 
           RowBox[{"verbose", ",", 
            RowBox[{"Print", "[", 
             RowBox[{"func", ",", "\"\<: abunds=\>\"", ",", "abunds"}], 
             "]"}]}], "]"}], ";", "\n", "\t", 
          RowBox[{"totalabundance", "=", 
           RowBox[{"gu", "/.", 
            RowBox[{"TotalAbundance", "[", 
             RowBox[{"sol", ",", 
              RowBox[{"WeightFunction", "\[Rule]", "weightfunction"}]}], 
             "]"}]}]}], ";", "\n", "\t", 
          RowBox[{"If", "[", 
           RowBox[{"verbose", ",", 
            RowBox[{"Print", "[", 
             RowBox[{
             "func", ",", "\"\<: totalabundance=\>\"", ",", 
              "totalabundance"}], "]"}]}], "]"}], ";", "\n", "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"sp", "===", "\"\<All\>\""}], ",", "\n", "\t\t", 
            RowBox[{"Return", "[", 
             RowBox[{"Table", "[", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"excludefocalspecies", "\[Equal]", "True"}], ",", 
                  RowBox[{"denom", "=", 
                   RowBox[{"totalabundance", "-", 
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["gu", "sp"], "/.", "abunds"}], ")"}]}]}], 
                  ",", 
                  RowBox[{"denom", "=", "totalabundance"}]}], "]"}], ";", 
                "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"FunctionalDistinctiveness", "[", 
                  SubscriptBox["gu", "sp"], "]"}], "\[Rule]", 
                 RowBox[{"Reinterpolation", "[", 
                  RowBox[{
                   RowBox[{"Sum", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["gu", "sp\[Prime]"], "/.", "abunds"}], ")"}],
                     "*", 
                    RowBox[{"dists", "\[LeftDoubleBracket]", 
                    RowBox[{"sp", ",", "sp\[Prime]"}], 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"sp\[Prime]", ",", 
                    SubscriptBox["\[ScriptCapitalN]", "gu"]}], "}"}]}], "]"}],
                    "/", 
                   RowBox[{"(", 
                    RowBox[{"distnorm", "*", "denom"}], ")"}]}], "]"}]}]}], 
               "\n", "\t\t", ",", 
               RowBox[{"{", 
                RowBox[{"sp", ",", 
                 SubscriptBox["\[ScriptCapitalN]", "gu"]}], "}"}]}], "]"}], 
             "]"}], ",", "\n", "\t\t", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"excludefocalspecies", "\[Equal]", "True"}], ",", 
               RowBox[{"denom", "=", 
                RowBox[{"totalabundance", "-", 
                 RowBox[{"(", 
                  RowBox[{
                   SubscriptBox["gu", "sp"], "/.", "abunds"}], ")"}]}]}], ",", 
               RowBox[{"denom", "=", "totalabundance"}]}], "]"}], ";", "\n", 
             "\t\t", 
             RowBox[{"Return", "[", 
              RowBox[{"Reinterpolation", "[", 
               RowBox[{
                RowBox[{"Sum", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["gu", "sp"], "/.", "abunds"}], ")"}], "*", 
                   RowBox[{"dists", "\[LeftDoubleBracket]", 
                    RowBox[{"sp", ",", "sp\[Prime]"}], 
                    "\[RightDoubleBracket]"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"sp\[Prime]", ",", 
                    SubscriptBox["\[ScriptCapitalN]", "gu"]}], "}"}]}], "]"}],
                 "/", 
                RowBox[{"(", 
                 RowBox[{"distnorm", "*", "denom"}], ")"}]}], "]"}], 
              "]"}]}]}], "\n", "\t", "]"}]}], ",", "\n", "\t", "Else", ",", 
         "\n", "\t", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"FunctionalDistinctiveness", "::", "badmtd"}], "]"}], ";", 
          
          RowBox[{"Return", "[", "$Failed", "]"}]}]}], "\n", "]"}], ";"}]}], 
     "\n", "\n", "]"}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.789062732943097*^9, 3.789062744289694*^9}, 
   3.789063093347966*^9, {3.789147960124118*^9, 3.789147960237321*^9}, {
   3.7892122096516237`*^9, 3.789212229583637*^9}, {3.7892123143208113`*^9, 
   3.789212338522737*^9}, {3.789212542222712*^9, 3.789212550421157*^9}, {
   3.789212650768957*^9, 3.7892126575261517`*^9}, 3.78921279198915*^9, {
   3.7892131025194807`*^9, 3.789213103079027*^9}, {3.7892132081325827`*^9, 
   3.7892132146204853`*^9}, {3.789213352938236*^9, 3.7892133946681347`*^9}, {
   3.78921401222311*^9, 3.789214021167609*^9}, {3.789214098899732*^9, 
   3.7892141065170517`*^9}, {3.789214164792356*^9, 3.789214237608618*^9}, {
   3.789214296111927*^9, 3.789214324841058*^9}, {3.789214377243207*^9, 
   3.78921441482519*^9}, {3.789214449539744*^9, 3.7892145040001173`*^9}, {
   3.789214685931096*^9, 3.78921468760246*^9}, {3.78921489610562*^9, 
   3.789214898545557*^9}, {3.78921493631044*^9, 3.7892150460771303`*^9}, {
   3.789215165890565*^9, 3.789215189333029*^9}, 3.7892153392236032`*^9, {
   3.789215387694853*^9, 3.789215429713695*^9}, {3.789215517143762*^9, 
   3.7892155173180523`*^9}, {3.789215565810158*^9, 3.7892155850951138`*^9}, {
   3.789215629640254*^9, 3.789215633488937*^9}, {3.7892157122992907`*^9, 
   3.789215732622582*^9}, {3.7892157647932034`*^9, 3.789215768252576*^9}, {
   3.789215830284801*^9, 3.789215842767465*^9}, {3.78921589853372*^9, 
   3.7892159238812037`*^9}, {3.7892159620516644`*^9, 3.789216092848771*^9}, {
   3.789216154377425*^9, 3.789216213370919*^9}, {3.789216244109099*^9, 
   3.789216258575663*^9}, {3.789216288576549*^9, 3.789216409510743*^9}, {
   3.789216460653267*^9, 3.7892164732738523`*^9}, {3.789216512855474*^9, 
   3.7892165131621723`*^9}, 3.7892165531546993`*^9, {3.7892166627111063`*^9, 
   3.7892166646841717`*^9}, {3.7892217075628223`*^9, 3.789221737089563*^9}, {
   3.7892219571146727`*^9, 3.7892219580545692`*^9}, 3.793054715206756*^9, {
   3.793055555896627*^9, 3.7930555566892433`*^9}, {3.793055794953679*^9, 
   3.79305584102628*^9}, {3.793056246913941*^9, 3.7930562492156553`*^9}, {
   3.793056291528872*^9, 3.793056295780006*^9}, {3.7930570802575607`*^9, 
   3.793057113922779*^9}, {3.793057266399329*^9, 3.793057325487502*^9}, {
   3.7930573706569843`*^9, 3.793057375811027*^9}, {3.793057725506384*^9, 
   3.7930578339640627`*^9}, {3.793058435262603*^9, 3.793058449926825*^9}, {
   3.793097594848043*^9, 3.7930975953092957`*^9}, {3.793098058031516*^9, 
   3.7930980674651957`*^9}, {3.793098214123994*^9, 3.793098220526568*^9}, {
   3.7930984963903427`*^9, 3.7930985244670563`*^9}, {3.793107464697361*^9, 
   3.7931074802377253`*^9}, {3.793137975511292*^9, 3.793137984949751*^9}, {
   3.793202879902554*^9, 3.79320291567645*^9}, {3.7932030517013693`*^9, 
   3.793203068940024*^9}, {3.7932037201502438`*^9, 3.7932037218515663`*^9}, {
   3.7932037603627443`*^9, 3.793203790734578*^9}, {3.7932054398473167`*^9, 
   3.793205445489213*^9}, {3.793205508817418*^9, 3.793205514105418*^9}, {
   3.793205944350751*^9, 3.793205967773431*^9}, {3.793206404634968*^9, 
   3.793206425578051*^9}, {3.793206807023663*^9, 3.7932068089776773`*^9}, {
   3.7932069057750196`*^9, 3.793206910403924*^9}, {3.793206992154022*^9, 
   3.793207033361854*^9}, {3.793207086743195*^9, 3.793207087520801*^9}, {
   3.793282171494557*^9, 3.7932821899318733`*^9}, {3.7932823787525253`*^9, 
   3.793282434678019*^9}, {3.793284045068184*^9, 3.793284099050384*^9}, {
   3.7932842996983023`*^9, 3.7932843166122828`*^9}, {3.793284583345147*^9, 
   3.793284596943343*^9}, {3.793284904574748*^9, 3.793284958255397*^9}, {
   3.793285415749813*^9, 3.793285419052288*^9}, {3.793286225036026*^9, 
   3.793286252938689*^9}, {3.7932863283372097`*^9, 3.79328635205898*^9}, 
   3.793286431090479*^9, {3.7932890437839613`*^9, 3.793289090786358*^9}, 
   3.7933965324398737`*^9, {3.7933966541005087`*^9, 3.793396654582223*^9}, {
   3.793443916050065*^9, 3.793443934540259*^9}, 3.7934497852686653`*^9, {
   3.793451788016719*^9, 3.79345179751318*^9}, {3.7934521072694902`*^9, 
   3.793452107678505*^9}, {3.793458349546322*^9, 3.793458407073183*^9}, {
   3.7934711833392467`*^9, 3.793471209970212*^9}, {3.793471894771585*^9, 
   3.7934719030124617`*^9}, {3.7934813030213614`*^9, 
   3.7934813046581917`*^9}, {3.793481481817021*^9, 3.7934815072094193`*^9}, {
   3.7934815651879673`*^9, 3.7934815725252123`*^9}, {3.793482128246067*^9, 
   3.7934821291540337`*^9}, {3.7934825356646767`*^9, 
   3.7934825776473913`*^9}, {3.793482621159842*^9, 3.7934826257506647`*^9}, {
   3.793482669368081*^9, 3.7934826859356956`*^9}, {3.793482966815179*^9, 
   3.7934830127551737`*^9}, {3.7934830446691713`*^9, 3.793483097028264*^9}, {
   3.7934831307854548`*^9, 3.7934831357527514`*^9}, {3.793484443364009*^9, 
   3.793484482745409*^9}, {3.793894262770939*^9, 3.793894276896847*^9}, {
   3.793894691108225*^9, 3.793894696105641*^9}, {3.794137240519858*^9, 
   3.7941372405277987`*^9}, {3.8119521981734447`*^9, 3.811952206635956*^9}, {
   3.829131546061493*^9, 
   3.829131551484845*^9}},ExpressionUUID->"fda570bd-bbac-4c95-a54e-\
ea95f1c38ccd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.789212924251487*^9, 
  3.7892129249776697`*^9}},ExpressionUUID->"61338fe8-ebd7-48be-af0a-\
28ec44b039ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "FunctionalDistinctiveness", "]"}], "=", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", "\n", "\t", 
     RowBox[{"Method", "\[Rule]", "\"\<Species\>\""}], ",", 
     RowBox[{"WeightFunction", "\[Rule]", "\"\<Total\>\""}], ",", 
     RowBox[{"TraitDistanceOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"NormalizeDistance", "\[Rule]", "True"}], ",", 
     RowBox[{"ExcludeFocalSpecies", "\[Rule]", "True"}]}], "\n", "}"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.78921321971348*^9, 3.7892132246299477`*^9}, {
   3.789213267525008*^9, 3.789213301971135*^9}, {3.789216522600634*^9, 
   3.7892165235061817`*^9}, {3.793137992641512*^9, 3.7931379965465193`*^9}, {
   3.793205953140965*^9, 3.793205953204455*^9}, {3.7932059921547327`*^9, 
   3.793205993891798*^9}, {3.793206833733447*^9, 3.793206834233931*^9}, {
   3.793282960024049*^9, 3.793282968173935*^9}, {3.79328627098243*^9, 
   3.793286275974646*^9}, 3.793471177894703*^9, {3.793480955926713*^9, 
   3.793480975207293*^9}, {3.7934812475935698`*^9, 3.7934812896577578`*^9}, {
   3.793482583225371*^9, 
   3.793482588699409*^9}},ExpressionUUID->"b6e60507-fec0-4cc9-a1de-\
feee3bf66454"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",
 CellChangeTimes->{{3.793444210500651*^9, 
  3.793444211526972*^9}},ExpressionUUID->"e150c581-ae7e-4792-bfed-\
c3e4e8e519d3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"break", " ", "up", " ", "combned", " ", "traitsandpops"}], " ", 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"FunctionalDistinctiveness", "[", 
     RowBox[{
      RowBox[{"traitsandpops_", "?", "AttributesAndVariablesQ"}], ",", 
      RowBox[{"target", ":", 
       RowBox[{"(", 
        RowBox[{"_Symbol", "|", "_Integer", "|", "_Subscript"}], ")"}], ":", 
       "Automatic"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
    RowBox[{"FunctionalDistinctiveness", "[", 
     RowBox[{
      RowBox[{"ExtractTraits", "[", "traitsandpops", "]"}], ",", 
      RowBox[{"ExtractVariables", "[", "traitsandpops", "]"}], ",", "target", 
      ",", "opts"}], "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.712779059611342*^9, 3.7127790632484837`*^9}, {
   3.7127802510293913`*^9, 3.7127802541117783`*^9}, {3.7127835820418167`*^9, 
   3.712783593708169*^9}, 3.7127857275024157`*^9, {3.712833990808877*^9, 
   3.71283399247824*^9}, {3.712835769983123*^9, 3.712835775171624*^9}, {
   3.715513114166628*^9, 3.715513114174303*^9}, {3.7700204852441463`*^9, 
   3.770020493555071*^9}, {3.793444220221294*^9, 3.793444255378994*^9}, 
   3.793923084433921*^9, 3.798128800034918*^9, 
   3.8073693106163797`*^9},ExpressionUUID->"92fcd135-096f-4dd7-9fb0-\
bb5679a79d82"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Messages", "Subsubsection",
 CellChangeTimes->{{3.793447780217025*^9, 
  3.7934477812061996`*^9}},ExpressionUUID->"0453b5fe-e95d-4f7a-a194-\
47c916e979e3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FunctionalDistinctiveness", "::", "badmtd"}], "=", 
   "\"\<The Method option should be a built-in method name (\\\"Species\\\" \
or \\\"AbundanceWeighted\\\").\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FunctionalDistinctiveness", "::", "badtgt"}], "=", 
   "\"\<The target should be a guild, a species, or Automatic.\>\""}], 
  ";"}]}], "Code",
 CellChangeTimes->{
  3.7934477835439043`*^9, {3.7934478560918016`*^9, 3.793447877812258*^9}, {
   3.793449512625795*^9, 3.793449519595601*^9}, {3.793449611555045*^9, 
   3.793449617553143*^9}, {3.793449695284971*^9, 3.793449703075049*^9}, {
   3.793451905199524*^9, 
   3.7934519159474297`*^9}},ExpressionUUID->"1ebcca21-8e6a-4895-be19-\
4c4f87040257"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["ExtinctSpecies", "Subsection",
 CellChangeTimes->{{3.8114246778702393`*^9, 3.81142467928655*^9}, {
  3.8116795829123077`*^9, 
  3.8116795860793543`*^9}},ExpressionUUID->"b280b723-4004-4605-9781-\
cdca96c4318c"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.8114249477060347`*^9, 
  3.81142494937716*^9}},ExpressionUUID->"913def41-2902-4490-a08c-\
8a9499377338"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExtinctSpecies", "::", "usage"}], "=", "\n", 
   "\"\<ExtinctSpecies[\!\(\*StyleBox[\"sol\", \"TI\"]\)] gives a list of \
extinct species in \!\(\*StyleBox[\"sol\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.8114249553402452`*^9, 3.811424973337554*^9}, {
  3.811679590975041*^9, 
  3.811679602062264*^9}},ExpressionUUID->"53d55242-0759-4d51-b87d-\
8c1c45c9223d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.811424976609585*^9, 
  3.8114249777616463`*^9}},ExpressionUUID->"df94aab7-12cd-4fe5-9f13-\
7743e246bd65"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExtinctSpecies", "[", 
    RowBox[{
     RowBox[{"sol_", "?", "RuleListQ"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<ExtinctSpecies\>\"", "]"}]}], ",", 
       "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "weightfunction", ",", "time", ",", "minpop", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "wa"}], "\n", 
      "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "ExtinctSpecies", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"weightfunction", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"WeightFunction", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "ExtinctSpecies", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"minpop", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"MinPop", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "ExtinctSpecies", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"time", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Time", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "ExtinctSpecies", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"wa", "=", 
         RowBox[{"ExtractSpecies", "[", 
          RowBox[{"WeightedAbundance", "[", 
           RowBox[{"sol", ",", 
            RowBox[{"WeightFunction", "\[Rule]", "weightfunction"}]}], "]"}], 
          "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{"verbose", ",", 
            RowBox[{"Print", "[", 
             RowBox[{"func", ",", "\"\<: wa=\>\"", ",", "wa"}], "]"}]}], 
           "]"}], ";"}], "*)"}], "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"time", "===", "t"}], ",", "\n", "\t", 
          RowBox[{"Which", "[", "\n", "\t\t", 
           RowBox[{
            RowBox[{"modelperiod", "\[Equal]", "0"}], ",", "\n", "\t\t", 
            RowBox[{"wa", "=", 
             RowBox[{"FinalSlice", "[", "wa", "]"}]}], ",", "\n", "\t\t", 
            RowBox[{"modelperiod", "<", "\[Infinity]"}], ",", "\n", "\t\t", 
            RowBox[{"wa", "=", 
             RowBox[{"TemporalMean", "[", 
              RowBox[{"FinalSlice", "[", 
               RowBox[{"wa", ",", "modelperiod"}], "]"}], "]"}]}], ",", "\n", 
            "\t\t", "Else", ",", "\n", "\t\t", 
            RowBox[{"wa", "=", 
             RowBox[{"TemporalMean", "[", "wa", "]"}]}]}], "\n", "\t", "]"}], 
          "\n", ",", "\n", "\t", 
          RowBox[{"wa", "=", 
           RowBox[{"Slice", "[", 
            RowBox[{"wa", ",", "time"}], "]"}]}]}], "\n", "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: WeightedAbundance=\>\"", ",", "wa"}], 
           "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"Return", "[", 
         RowBox[{"Keys", "[", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Association", "[", "wa", "]"}], ",", 
            RowBox[{
             RowBox[{"#", "\[LessEqual]", "minpop"}], "&"}]}], "]"}], "]"}], 
         "]"}]}]}], "\n", "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.811424979913665*^9, 3.811424990033875*^9}, {
   3.811425083627582*^9, 3.811425087507594*^9}, {3.811425416943074*^9, 
   3.811425525871992*^9}, {3.811426248257588*^9, 3.811426262569021*^9}, 
   3.811679607861587*^9, {3.811680096709621*^9, 3.81168009718863*^9}, {
   3.811680169512781*^9, 3.81168017340545*^9}, {3.811680773111072*^9, 
   3.8116807794035673`*^9}, {3.81195386128238*^9, 3.8119538974497633`*^9}, {
   3.811953932431305*^9, 3.811954001467107*^9}, {3.811954038900844*^9, 
   3.811954043435111*^9}, {3.8119540738204117`*^9, 3.811954077915732*^9}, {
   3.811954198389711*^9, 3.811954208636443*^9}, {3.81195437376728*^9, 
   3.811954382542714*^9}, {3.811954413631379*^9, 3.811954416110327*^9}, {
   3.8119544466931067`*^9, 3.81195446988767*^9}, {3.811954519792721*^9, 
   3.811954521400182*^9}, {3.812021797031333*^9, 3.8120218263192472`*^9}, {
   3.812022507380782*^9, 3.812022512109128*^9}, {3.8120273083963614`*^9, 
   3.8120273138288527`*^9}, {3.8120274364925423`*^9, 3.812027441315974*^9}, {
   3.812027481341301*^9, 3.81202751882847*^9}, {3.812027600518216*^9, 
   3.81202782477635*^9}, {3.812027891929873*^9, 3.812027907704659*^9}, {
   3.812028255300569*^9, 3.812028265418376*^9}, {3.8120284160986834`*^9, 
   3.812028417019775*^9}, {3.8120288697699137`*^9, 3.8120288703282557`*^9}, {
   3.812029053003889*^9, 3.812029053852758*^9}, {3.8120402082082033`*^9, 
   3.8120402100073767`*^9}, {3.812040962121036*^9, 3.812040963824813*^9}, {
   3.812238207839053*^9, 
   3.812238212572851*^9}},ExpressionUUID->"6101d7e8-d904-4a87-b9b5-\
c6c339f3b8e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.8114250257542963`*^9, 
  3.811425026489006*^9}},ExpressionUUID->"4e2418b3-1b7d-42c0-9842-\
cb4fe02cc05d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ExtinctSpecies", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"MinPop", "\[Rule]", 
      RowBox[{"10", "^", 
       RowBox[{"-", "10"}]}]}], ",", 
     RowBox[{"WeightFunction", "\[Rule]", "\"\<Total\>\""}], ",", 
     RowBox[{"Time", "\[Rule]", "t"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.811425031218261*^9, 3.8114250390264063`*^9}, 
   3.811680149626709*^9, 3.811952807648292*^9, {3.811954527968801*^9, 
   3.811954533864482*^9}, {3.812021518445912*^9, 3.8120215234458017`*^9}, {
   3.812027318530905*^9, 3.812027335146364*^9}, {3.8120284543008623`*^9, 
   3.8120284550589943`*^9}},ExpressionUUID->"25f8d4e9-4a5e-44b7-8c58-\
b9edfce37024"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["ExtantSpecies", "Subsection",
 CellChangeTimes->{{3.8114246778702393`*^9, 3.81142467928655*^9}, {
  3.8116795829123077`*^9, 3.8116795860793543`*^9}, {3.812023728241179*^9, 
  3.81202372908247*^9}},ExpressionUUID->"c794cc01-098a-4c1b-8bb4-\
5657fc34beaf"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.8114249477060347`*^9, 
  3.81142494937716*^9}},ExpressionUUID->"8c40e204-4c9a-40a4-8eec-\
e974501e76d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExtantSpecies", "::", "usage"}], "=", "\n", 
   "\"\<ExtantSpecies[\!\(\*StyleBox[\"sol\", \"TI\"]\)] gives a list of \
extant species in \!\(\*StyleBox[\"sol\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.8114249553402452`*^9, 3.811424973337554*^9}, {
  3.811679590975041*^9, 3.811679602062264*^9}, {3.8120237334251738`*^9, 
  3.81202374669718*^9}},ExpressionUUID->"8c35e621-eb66-41ca-be53-\
c4fbe0a5eb37"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.811424976609585*^9, 
  3.8114249777616463`*^9}},ExpressionUUID->"6d58ed34-4571-4f29-b94e-\
129d108fb536"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExtantSpecies", "[", 
    RowBox[{
     RowBox[{"sol_", "?", "RuleListQ"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<ExtantSpecies\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "weightfunction", ",", "time", ",", "minpop", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "wa"}], "\n", 
      "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "ExtantSpecies", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"weightfunction", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"WeightFunction", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "ExtantSpecies", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"minpop", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"MinPop", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "ExtantSpecies", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"time", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Time", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "ExtantSpecies", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"wa", "=", 
         RowBox[{"ExtractSpecies", "[", 
          RowBox[{"WeightedAbundance", "[", 
           RowBox[{"sol", ",", 
            RowBox[{"WeightFunction", "\[Rule]", "weightfunction"}]}], "]"}], 
          "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{"verbose", ",", 
            RowBox[{"Print", "[", 
             RowBox[{"func", ",", "\"\<: wa=\>\"", ",", "wa"}], "]"}]}], 
           "]"}], ";"}], "*)"}], "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"time", "===", "t"}], ",", "\n", "\t", 
          RowBox[{"Which", "[", "\n", "\t\t", 
           RowBox[{
            RowBox[{"modelperiod", "\[Equal]", "0"}], ",", "\n", "\t\t", 
            RowBox[{"wa", "=", 
             RowBox[{"FinalSlice", "[", "wa", "]"}]}], ",", "\n", "\t\t", 
            RowBox[{"modelperiod", "<", "\[Infinity]"}], ",", "\n", "\t\t", 
            RowBox[{"wa", "=", 
             RowBox[{"TemporalMean", "[", 
              RowBox[{"FinalSlice", "[", 
               RowBox[{"wa", ",", "modelperiod"}], "]"}], "]"}]}], ",", "\n", 
            "\t\t", "Else", ",", "\n", "\t\t", 
            RowBox[{"wa", "=", 
             RowBox[{"TemporalMean", "[", "wa", "]"}]}]}], "\n", "\t", "]"}], 
          "\n", ",", "\n", "\t", 
          RowBox[{"wa", "=", 
           RowBox[{"Slice", "[", 
            RowBox[{"wa", ",", "time"}], "]"}]}]}], "\n", "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: WeightedAbundance=\>\"", ",", "wa"}], 
           "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"Return", "[", 
         RowBox[{"Keys", "[", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Association", "[", "wa", "]"}], ",", 
            RowBox[{
             RowBox[{"#", ">", "minpop"}], "&"}]}], "]"}], "]"}], "]"}]}]}], 
      "\n", "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.811424979913665*^9, 3.811424990033875*^9}, {
   3.811425083627582*^9, 3.811425087507594*^9}, {3.811425416943074*^9, 
   3.811425525871992*^9}, {3.811426248257588*^9, 3.811426262569021*^9}, 
   3.811679607861587*^9, {3.811680096709621*^9, 3.81168009718863*^9}, {
   3.811680169512781*^9, 3.81168017340545*^9}, {3.811680773111072*^9, 
   3.8116807794035673`*^9}, {3.81195386128238*^9, 3.8119538974497633`*^9}, {
   3.811953932431305*^9, 3.811954001467107*^9}, {3.811954038900844*^9, 
   3.811954043435111*^9}, {3.8119540738204117`*^9, 3.811954077915732*^9}, {
   3.811954198389711*^9, 3.811954208636443*^9}, {3.81195437376728*^9, 
   3.811954382542714*^9}, {3.811954413631379*^9, 3.811954416110327*^9}, {
   3.8119544466931067`*^9, 3.81195446988767*^9}, {3.811954519792721*^9, 
   3.811954521400182*^9}, {3.812021797031333*^9, 3.8120218263192472`*^9}, {
   3.812022507380782*^9, 3.812022512109128*^9}, {3.812023939670083*^9, 
   3.812023965740164*^9}, {3.812023999732828*^9, 3.8120240056680193`*^9}, {
   3.8120242007678003`*^9, 3.812024244311788*^9}, {3.812024276079537*^9, 
   3.812024322440811*^9}, {3.812026456411448*^9, 3.812026481345924*^9}, {
   3.812028944298028*^9, 3.8120289482725*^9}, {3.8120290116821623`*^9, 
   3.812029018105246*^9}, {3.812029116058715*^9, 3.812029151132016*^9}, {
   3.8120292640205708`*^9, 3.812029282563787*^9}, {3.812040159634742*^9, 
   3.812040204600245*^9}, {3.812040953304522*^9, 3.812040957111094*^9}, {
   3.812238235673554*^9, 
   3.812238236388781*^9}},ExpressionUUID->"663d44d0-2f74-40df-9abd-\
5a2a4965b6b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.812029247795094*^9, 
  3.812029248426312*^9}},ExpressionUUID->"07d80e03-2de6-45ba-b42b-\
b0ccc3709379"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ExtantSpecies", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"MinPop", "\[Rule]", 
      RowBox[{"10", "^", 
       RowBox[{"-", "10"}]}]}], ",", 
     RowBox[{"WeightFunction", "\[Rule]", "\"\<Total\>\""}], ",", 
     RowBox[{"Time", "\[Rule]", "t"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.8120292528024483`*^9, 3.8120292617299128`*^9}, {
  3.812040184089094*^9, 
  3.8120401876950197`*^9}},ExpressionUUID->"1679d9bd-1db6-4bd0-a004-\
9e34382df0f5"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\[ScriptCapitalN] / \[FormalCapitalN] aliases", "Subsection",
 CellChangeTimes->{{3.770783225569263*^9, 3.77078324451917*^9}, {
  3.800463023728215*^9, 
  3.800463032527522*^9}},ExpressionUUID->"144984d4-619b-44fc-86eb-\
b43e6ba0785a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[ScriptCapitalN]", "gu_"], ":=", 
   RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[FormalCapitalN]", "gu_"], ":=", 
   RowBox[{"\[FormalCapitalN]", "[", "gu", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.770722028318844*^9, 3.7707220445035*^9}, {
  3.770783183784397*^9, 3.7707831904741917`*^9}, {3.770783220599105*^9, 
  3.770783221406342*^9}, {3.80023178945438*^9, 
  3.800231799526566*^9}},ExpressionUUID->"9cdc78a2-4f0b-4228-8006-\
54886d0ec90f"]
}, Closed]],

Cell[CellGroupData[{

Cell["ClearParameters", "Subsection",
 CellChangeTimes->{{3.820239178717977*^9, 
  3.820239183421804*^9}},ExpressionUUID->"772c049c-f99f-4c33-8b6f-\
a065e8ac52a2"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.82023918773067*^9, 
  3.8202391881738997`*^9}},ExpressionUUID->"22d0658a-cf2b-4032-85ad-\
d1ec88f1212c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ClearParameters", "::", "usage"}], "=", 
   "\"\<ClearParameters clears all model parameters.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.820239190219844*^9, 3.820239197477564*^9}, {
  3.828957444762453*^9, 
  3.828957469900611*^9}},ExpressionUUID->"5e5bd3bc-19aa-469d-8775-\
116be6140355"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.820239200873084*^9, 
  3.820239202302866*^9}},ExpressionUUID->"97c6ca90-a4e6-4250-8f09-\
410f5e0fd933"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearParameters", ":=", 
   RowBox[{"Clear", "[", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"Sequence", "@@", "EcoEvo`Private`parnames"}], "]"}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.820239203739559*^9, 3.8202392183461113`*^9}, {
  3.828978117846757*^9, 
  3.828978120606125*^9}},ExpressionUUID->"fb9130ae-530c-44ad-8e4c-\
9396e415d9ee"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["ParameterValues", "Subsection",
 CellChangeTimes->{{3.8202608257560787`*^9, 
  3.820260827266059*^9}},ExpressionUUID->"9dcdf6bc-e752-45a8-911a-\
b811da682571"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.820260829284157*^9, 
  3.820260831963372*^9}},ExpressionUUID->"6cd73cc7-e9ce-4bbe-9a74-\
801c97879552"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ParameterValues", "::", "usage"}], "=", 
   "\"\<ParameterValues returns a rulelist of current definitions of model \
parameters.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.820260833467993*^9, 3.820260837287491*^9}, {
  3.828957474656859*^9, 3.828957497728941*^9}, {3.828957532688607*^9, 
  3.828957537431121*^9}, {3.82986582982264*^9, 
  3.8298658308854837`*^9}},ExpressionUUID->"49ec1bd7-48e1-400c-bddf-\
ba4f112e33b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.82026084001226*^9, 
  3.8202608411819057`*^9}},ExpressionUUID->"30e579e3-b584-422f-a643-\
5b39b3c19e28"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ParameterValues", ":=", 
   RowBox[{"Thread", "[", 
    RowBox[{
    "EcoEvo`Private`parnames", "\[Rule]", "EcoEvo`Private`parameters"}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.820260842505035*^9, 3.8202608584330807`*^9}, 
   3.8202613631222887`*^9, {3.828978183705879*^9, 
   3.828978186063843*^9}},ExpressionUUID->"c48024e8-d284-4489-b2eb-\
568b1c8b342c"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ecological Functions", "Section",
 CellChangeTimes->{{3.7694520633423862`*^9, 
  3.7694520671241217`*^9}},ExpressionUUID->"43716e7c-e20d-4543-bdf8-\
0295bf3473cd"],

Cell[CellGroupData[{

Cell["EcoEqns", "Subsection",
 CellChangeTimes->{{3.731532912874427*^9, 
  3.731532914244749*^9}},ExpressionUUID->"1b9fb46b-0ca8-40d5-8fd1-\
2dab555a0d8d"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"d1c960d0-a46f-4690-acc3-\
727e88f706bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoEqns", "::", "usage"}], "=", "\n", 
   "\"\<EcoEqns[\!\(\*StyleBox[\"attributes\", \"TI\"]\)] sets up ecological \
equations using trait values/interaction coefficients \
\!\(\*StyleBox[\"attributes\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.7694830794293957`*^9, 3.7694830828533154`*^9}, {
  3.807371450592733*^9, 3.807371463815584*^9}, {3.807372156237854*^9, 
  3.807372161141265*^9}, {3.807375349293559*^9, 3.80737535186926*^9}, {
  3.8073781847374353`*^9, 
  3.807378197364538*^9}},ExpressionUUID->"0c52117b-e0eb-4ee3-95ed-\
4659a36c03cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"a6fe2546-5afb-4f6f-8a4a-\
abd845c69a1b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoEqns", "[", 
    RowBox[{
     RowBox[{"attributesin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "AttributesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<EcoEqns\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "logged", ",", "fixed", ",", "fixedvars", ",", 
       "fixedvariables", ",", "timescale", ",", "percapita", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "attributes", 
       ",", "nonfixedvars", ",", "fixed2", ",", "eqns"}], "}"}], ",", "\n", 
     "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<attributesin=\>\"", ",", "attributesin"}], "]"}], ";", 
       "\n", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<opts=\>\"", ",", "opts"}], "]"}], ";"}], "*)"}], "\n", 
     "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"attributes", "=", 
         RowBox[{"FixAttributes", "[", "attributesin", "]"}]}], ";", "\n", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEqns", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEqns", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"logged", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Logged", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEqns", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"timescale", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"TimeScale", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEqns", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"percapita", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PerCapita", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEqns", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"nonfixedvars", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"NonFixedVars", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEqns", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"fixed", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Fixed", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEqns", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"fixedvars", "=", 
         RowBox[{"fixed", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        RowBox[{"fixedvariables", "=", 
         RowBox[{"ExtractVariables", "[", "fixed", "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: fixedvars=\>\"", ",", "fixedvars"}], 
           "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"Set\[ScriptCapitalN]", "[", "attributes", "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<\[ScriptCapitalN]=\>\"", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "]"}], ";"}], 
         "*)"}], "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"nonfixedvars", "===", "Automatic"}], ",", 
          RowBox[{"nonfixedvars", "=", 
           RowBox[{"OrderedComplement", "[", 
            RowBox[{"AllVariables", ",", "fixedvars"}], "]"}]}]}], "]"}], ";",
         "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<nonfixedvars=\>\"", ",", "nonfixedvars"}], "]"}]}], 
         "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"add", " ", "[", "t", "]"}], " ", "to", " ", "constant", 
          " ", "fixed", " ", "variables"}], " ", "*)"}], "\n", 
        RowBox[{"fixed2", "=", 
         RowBox[{"ReplaceAll", "[", 
          RowBox[{"fixed", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"var_", "/;", 
              RowBox[{"MemberQ", "[", 
               RowBox[{"AllVariables", ",", "var"}], "]"}]}], ")"}], 
            "\[Rule]", 
            RowBox[{"var", "[", "t", "]"}]}]}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", "\"\<making eqns\>\"", "]"}], ";"}], "*)"}], 
        "\n", 
        RowBox[{"eqns", "=", 
         RowBox[{"Table", "[", "\n", "\t", 
          RowBox[{
           RowBox[{"Which", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"logged", "===", "True"}], "&&", 
              RowBox[{
               RowBox[{"comptype", "[", "var", "]"}], "===", 
               "\"\<Extensive\>\""}]}], ",", "\n", "\t\t", 
             RowBox[{"Which", "[", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"modeltype", "==", "\"\<DiscreteTime\>\""}], ",", "\n",
                "\t\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"log", "[", "var", "]"}], "[", 
                  RowBox[{"t", "+", "1"}], "]"}], "-", 
                 RowBox[{
                  RowBox[{"log", "[", "var", "]"}], "[", "t", "]"}]}], 
                "\[Equal]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"RealSimplify", "[", 
                   RowBox[{"timescale", "*", 
                    RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{"eqn", "[", "var", "]"}], "/", "var"}], "]"}]}], 
                   "]"}], "/.", "AddVariablets"}], ")"}]}], ",", "\n", 
               "\t\t\t", 
               RowBox[{"modeltype", "==", "\"\<ContinuousTime\>\""}], ",", 
               "\n", "\t\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"log", "[", "var", "]"}], "'"}], "[", "t", "]"}], 
                "\[Equal]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"timescale", "*", 
                   RowBox[{
                    RowBox[{"eqn", "[", "var", "]"}], "/", "var"}]}], "/.", 
                  "AddVariablets"}], ")"}]}]}], "\n", "\t\t", "]"}], "\n", 
             "\t", ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"percapita", "===", "True"}], "&&", 
              RowBox[{
               RowBox[{"comptype", "[", "var", "]"}], "===", 
               "\"\<Extensive\>\""}]}], ",", "\n", "\t\t", 
             RowBox[{"Which", "[", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"modeltype", "==", "\"\<DiscreteTime\>\""}], ",", "\n",
                "\t\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{"var", "[", 
                  RowBox[{"t", "+", "1"}], "]"}], "/", 
                 RowBox[{"var", "[", "t", "]"}]}], "\[Equal]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"timescale", "*", 
                   RowBox[{
                    RowBox[{"eqn", "[", "var", "]"}], "/", "var"}]}], "/.", 
                  "AddVariablets"}], ")"}]}], ",", "\n", "\t\t\t", 
               RowBox[{"modeltype", "==", "\"\<ContinuousTime\>\""}], ",", 
               "\n", "\t\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{"var", "'"}], "[", "t", "]"}], "\[Equal]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"timescale", "*", 
                   RowBox[{
                    RowBox[{"eqn", "[", "var", "]"}], "/", "var"}]}], "/.", 
                  "AddVariablets"}], ")"}]}]}], "\n", "\t\t", "]"}], "\n", 
             "\t", ",", "\n", "\t\t", "Else", ",", "\n", "\t\t", 
             RowBox[{"Which", "[", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"modeltype", "==", "\"\<DiscreteTime\>\""}], ",", "\n",
                "\t\t\t", 
               RowBox[{
                RowBox[{"var", "[", 
                 RowBox[{"t", "+", "1"}], "]"}], "\[Equal]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"timescale", "*", 
                   RowBox[{"eqn", "[", "var", "]"}]}], "/.", 
                  "AddVariablets"}], ")"}]}], ",", "\n", "\t\t\t", 
               RowBox[{"modeltype", "==", "\"\<ContinuousTime\>\""}], ",", 
               "\n", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"Print", "[", 
                  RowBox[{"eqn", "[", "var", "]"}], "]"}], ";", "\n", 
                 RowBox[{"Print", "[", "AddVariablets", "]"}], ";", "\n", 
                 RowBox[{"Print", "[", 
                  RowBox[{
                   RowBox[{"eqn", "[", "var", "]"}], "/.", "AddVariablets"}], 
                  "]"}], ";"}], "*)"}], "\n", "\t\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{"var", "'"}], "[", "t", "]"}], "\[Equal]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"timescale", "*", 
                   RowBox[{"eqn", "[", "var", "]"}]}], "/.", 
                  "AddVariablets"}], ")"}]}]}], "\n", "\t\t", "]"}]}], "\n", 
            "\t", "]"}], "\n", ",", 
           RowBox[{"{", 
            RowBox[{"var", ",", "nonfixedvars"}], "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", "\"\<eqns made\>\"", "]"}], ";"}], "*)"}], 
        "\n", "\n", 
        RowBox[{"Return", "[", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"eqns", "/.", 
             RowBox[{"ExpRule", "[", 
              RowBox[{"nonfixedvars", ",", "logged"}], "]"}]}], "/.", 
            RowBox[{"Dispatch", "[", 
             RowBox[{"ExpandTraits", "[", "attributes", "]"}], "]"}]}], "/.", 
           "fixed2"}], "]"}], "]"}]}]}], "\n", "\n", "]"}]}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.73153291508943*^9, 3.73153306480214*^9}, {
   3.731533115319585*^9, 3.73153315088445*^9}, {3.731533245950788*^9, 
   3.7315332729037447`*^9}, {3.7315334204535646`*^9, 3.731533525721775*^9}, {
   3.731533703227294*^9, 3.7315337049086*^9}, {3.731807678738665*^9, 
   3.7318077057774878`*^9}, {3.731975717613166*^9, 3.73197571866803*^9}, {
   3.731975799743685*^9, 3.73197589317135*^9}, {3.7319798828993483`*^9, 
   3.731979885288672*^9}, {3.731980646046186*^9, 3.7319806618113327`*^9}, {
   3.731980700513235*^9, 3.731980717285017*^9}, 3.7322734077947903`*^9, {
   3.755692264028599*^9, 3.7556922644589367`*^9}, {3.755694273443183*^9, 
   3.75569427589289*^9}, {3.755694582132526*^9, 3.7556946368449917`*^9}, {
   3.755694676031395*^9, 3.755694715481515*^9}, {3.755694832859461*^9, 
   3.755694856593852*^9}, {3.7556949555569153`*^9, 3.755694956876268*^9}, 
   3.755708850362474*^9, {3.755709137100767*^9, 3.755709141752791*^9}, {
   3.75572393966397*^9, 3.755723958578627*^9}, {3.755796568077956*^9, 
   3.75579658979016*^9}, {3.7557967000007477`*^9, 3.7557967093409023`*^9}, {
   3.755796752560822*^9, 3.7557967954242897`*^9}, {3.755796916252831*^9, 
   3.7557969165527143`*^9}, 3.755797037475993*^9, {3.755811111301676*^9, 
   3.7558111203301153`*^9}, {3.755813941319138*^9, 3.755813952047359*^9}, {
   3.758538780569724*^9, 3.758538785028316*^9}, {3.758538838628502*^9, 
   3.7585388390071363`*^9}, {3.758538931882943*^9, 3.758538940554407*^9}, {
   3.758539057192698*^9, 3.758539059490943*^9}, {3.758548892059017*^9, 
   3.7585489310658817`*^9}, {3.7585492162866697`*^9, 3.758549225198711*^9}, {
   3.7585502840667877`*^9, 3.758550302625052*^9}, {3.758550360447648*^9, 
   3.758550389113371*^9}, {3.758550450371385*^9, 3.7585504709180202`*^9}, 
   3.7585505493404408`*^9, 3.758551307289364*^9, {3.758551459216346*^9, 
   3.758551539385776*^9}, {3.758552123736377*^9, 3.7585521247598763`*^9}, {
   3.758605937974411*^9, 3.758605951538898*^9}, {3.7586060952641563`*^9, 
   3.75860610557266*^9}, {3.7586062175185537`*^9, 3.758606250442319*^9}, {
   3.7586070232760572`*^9, 3.758607028432029*^9}, {3.758820509052783*^9, 
   3.758820548050082*^9}, {3.758820662676475*^9, 3.758820666715248*^9}, {
   3.759141291282493*^9, 3.759141292038221*^9}, {3.759141745383217*^9, 
   3.759141753555347*^9}, {3.759141801106374*^9, 3.759141809343381*^9}, {
   3.75914199734857*^9, 3.759142021782723*^9}, {3.759999791481742*^9, 
   3.759999797111904*^9}, {3.760000540556222*^9, 3.7600005482947617`*^9}, {
   3.76000072254757*^9, 3.760000734125861*^9}, {3.76000084315156*^9, 
   3.760000843506207*^9}, {3.760591113984684*^9, 3.760591158137648*^9}, {
   3.760615482749753*^9, 3.7606154890157623`*^9}, {3.760628365013764*^9, 
   3.760628368684958*^9}, {3.760636859393547*^9, 3.760636880746944*^9}, {
   3.760637060510496*^9, 3.7606370631815987`*^9}, {3.760668696617566*^9, 
   3.7606687134941053`*^9}, {3.7606687891338673`*^9, 3.760668791610133*^9}, {
   3.760933110370633*^9, 3.760933121312295*^9}, 3.7691824472199574`*^9, 
   3.769760705328278*^9, 3.770438264976678*^9, {3.770721432310377*^9, 
   3.7707214330907097`*^9}, {3.78608460258517*^9, 3.7860846119536123`*^9}, {
   3.786085533456291*^9, 3.786085540651627*^9}, {3.786085680461795*^9, 
   3.786085705202383*^9}, {3.786086040356681*^9, 3.786086040499426*^9}, 
   3.7860865346614323`*^9, {3.786089168832074*^9, 3.786089177640473*^9}, 
   3.794137240534164*^9, {3.797899118171267*^9, 3.797899121750276*^9}, {
   3.7980418589731894`*^9, 3.798041860931637*^9}, 3.798041940887381*^9, {
   3.798302138446209*^9, 3.798302145034191*^9}, {3.798321380931098*^9, 
   3.7983213831813707`*^9}, {3.8001416083079576`*^9, 
   3.8001416111948338`*^9}, {3.800142832475662*^9, 3.800142841565743*^9}, {
   3.800144000721265*^9, 3.800144015371861*^9}, {3.800144119438908*^9, 
   3.800144125731613*^9}, {3.800187011654849*^9, 3.800187024822566*^9}, 
   3.800188357441821*^9, 3.8002723413452663`*^9, {3.800274380579818*^9, 
   3.800274390052394*^9}, {3.800274425658691*^9, 3.800274472049797*^9}, {
   3.800275204723434*^9, 3.8002752050035963`*^9}, 3.800275279262733*^9, {
   3.807369312539143*^9, 3.807369313431149*^9}, {3.807369600856782*^9, 
   3.807369615891921*^9}, 3.807369807742482*^9, {3.816112365393001*^9, 
   3.816112369219667*^9}, {3.816112597045631*^9, 3.816112626927945*^9}, {
   3.8161127795602694`*^9, 3.8161127921452847`*^9}, {3.816112855228087*^9, 
   3.8161128616424227`*^9}, {3.8161131751887417`*^9, 3.816113178394266*^9}, {
   3.816113213916388*^9, 3.8161132769393663`*^9}, {3.816113335871931*^9, 
   3.816113441246426*^9}, {3.8161138221944933`*^9, 3.816113841120133*^9}, {
   3.8161139849610357`*^9, 3.816114002501189*^9}, {3.816114173855238*^9, 
   3.816114292331254*^9}, {3.816114324336791*^9, 3.816114339452805*^9}, {
   3.816114391366473*^9, 3.81611440716475*^9}, {3.816114445248043*^9, 
   3.816114446211321*^9}, 3.816114578509079*^9, {3.816114615608232*^9, 
   3.8161146350372343`*^9}, {3.816114700949193*^9, 3.816114704268787*^9}, 
   3.816114750495338*^9, {3.816117528988409*^9, 3.816117549185622*^9}, {
   3.816117619428883*^9, 3.816117626572197*^9}, {3.816117847421833*^9, 
   3.81611789313382*^9}, {3.81791153117103*^9, 3.817911571661519*^9}, {
   3.817912000688016*^9, 3.817912083982477*^9}, {3.817913727630028*^9, 
   3.8179137704214783`*^9}, {3.8179139645772743`*^9, 3.817913973335887*^9}, {
   3.817914365716391*^9, 3.817914470397355*^9}, {3.817928223555725*^9, 
   3.817928274763802*^9}, {3.818204818671359*^9, 3.818204822590205*^9}, {
   3.818204870792078*^9, 3.818204878838602*^9}, {3.8301002886921883`*^9, 
   3.830100310083255*^9}, 
   3.830100367035616*^9},ExpressionUUID->"d10f7276-c76f-4756-a49c-\
3d5219781273"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.7875014244913807`*^9, 
  3.787501425227401*^9}},ExpressionUUID->"2e1dfde3-f860-4d66-ac05-\
01eb82fd0ce4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "EcoEqns", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"TimeScale", "\[Rule]", "1"}], ",", 
     RowBox[{"Logged", "\[Rule]", "False"}], ",", 
     RowBox[{"PerCapita", "\[Rule]", "False"}], ",", 
     RowBox[{"NonFixedVars", "\[Rule]", "Automatic"}]}], "}"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.731533497765864*^9, 3.731533509812358*^9}, 
   3.731533548227298*^9, {3.7557967403738537`*^9, 3.755796742724206*^9}, {
   3.758548685872842*^9, 3.75854869419556*^9}, {3.760000528932044*^9, 
   3.760000532517095*^9}},ExpressionUUID->"b0ad0756-b486-43f8-aa3d-\
dcf9c3aa94bd"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["EcoSim", "Subsection",
 CellChangeTimes->{{3.688585331661968*^9, 
  3.688585354654958*^9}},ExpressionUUID->"84e888aa-0472-485b-bce8-\
a731b0aacee4"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"438a915e-1229-4804-9ab6-\
95e3886674d1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoSim", "::", "usage"}], "=", "\n", 
   "\"\<EcoSim[\!\(\*StyleBox[\"init\", \"TI\"]\), \!\(\*StyleBox[\"tmax\", \
\"TI\"]\)] simulates ecological dynamics, with initial densities in \
\!\(\*StyleBox[\"init\", \"TI\"]\), from time \!\(\*StyleBox[\"t\", \
\"TI\"]\)=0 to \!\(\*StyleBox[\"tmax\", \"TI\"]\).\n\
EcoSim[\!\(\*StyleBox[\"attributes\", \"TI\"]\), \!\(\*StyleBox[\"init\", \
\"TI\"]\), \!\(\*StyleBox[\"tmax\", \"TI\"]\)] uses trait values/interaction \
coefficients \!\(\*StyleBox[\"attributes\", \"TI\"]\).\>\""}], ";"}]], "Code",\

 CellChangeTimes->{{3.769483229619007*^9, 3.7694832310220547`*^9}, {
   3.770005777182013*^9, 3.7700057774526587`*^9}, {3.807373877049068*^9, 
   3.807373892902878*^9}, {3.807374952241982*^9, 3.8073749561132383`*^9}, {
   3.8073753383332*^9, 3.807375340612926*^9}, {3.807375506576124*^9, 
   3.807375513136053*^9}, 
   3.8073781773613*^9},ExpressionUUID->"cbb024eb-31ee-4cf9-9a5f-d7008612b261"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"908389d4-cb31-4dc3-bb2c-\
387ab2b4a731"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoSim", "[", 
    RowBox[{
     RowBox[{"attributesin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "AttributesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"init", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"tmax_", "?", "NumericQ"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<EcoSim\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "method", ",", "\n", "ndsolveopts", ",", "logged", 
       ",", "interpolationpoints", ",", "interpolationopts", ",", "fixed", 
       ",", "fixedvars", ",", "whenevents", ",", "timescale", ",", 
       "outputtmin", ",", "randomseeding", ",", "\n", "output", ",", "tmin", 
       ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "attributes", 
       ",", "nonfixedvars", ",", "luv", ",", "sp", ",", "eqns", ",", "unks", 
       ",", "ics", ",", "tic", ",", "exprule", ",", "sol", ",", "res", ",", 
       "fixedres"}], "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"attributes", "=", 
         RowBox[{"FixAttributes", "[", "attributesin", "]"}]}], ";", "\n", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoSim", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoSim", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"method", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Method", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoSim", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"ndsolveopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"NDSolveOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoSim", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"logged", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Logged", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoSim", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"whenevents", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"WhenEvents", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoSim", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"timescale", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"TimeScale", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoSim", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"output", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Output", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoSim", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"output", "\[Equal]", "\"\<FinalSlice\>\""}], ",", 
          RowBox[{"outputtmin", "=", "tmax"}]}], "]"}], ";", "\n", 
        RowBox[{"tmin", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"TMin", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoSim", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"outputtmin", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"OutputTMin", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoSim", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"outputtmin", "===", "Automatic"}], ",", 
          RowBox[{"outputtmin", "=", "tmin"}]}], "]"}], ";", "\n", 
        RowBox[{"randomseeding", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"RandomSeeding", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoSim", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"IntegerQ", "[", "randomseeding", "]"}], ",", 
          RowBox[{"SeedRandom", "[", "randomseeding", "]"}]}], "]"}], ";", 
        "\n", "\n", 
        RowBox[{"interpolationopts", "=", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoSim", "]"}]}], "}"}], "]"}], ",", 
           RowBox[{"Options", "[", "Interpolation", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"interpolationpoints", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"InterpolationPoints", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoSim", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"process", " ", "fixed", " ", "variables"}], " ", "*)"}], 
        "\n", 
        RowBox[{"fixed", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Fixed", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoSim", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"fixedvars", "=", 
         RowBox[{"fixed", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        StyleBox[
         RowBox[{"nonfixedvars", "=", 
          RowBox[{"Complement", "[", 
           RowBox[{
            RowBox[{"init", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
            "fixedvars"}], "]"}]}],
         Background->RGBColor[1, 0.5, 0.5]], 
        StyleBox[";",
         Background->RGBColor[1, 0.5, 0.5]], 
        StyleBox[" ",
         Background->RGBColor[1, 0.5, 0.5]], 
        RowBox[{"(*", " ", 
         RowBox[{
         "nonfixedvars", " ", "are", " ", "those", " ", "given", " ", "ICs", 
          " ", "but", " ", "not", " ", "in", " ", "fixedvars"}], " ", "*)"}], 
        "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<nonfixedvars=\>\"", ",", "nonfixedvars"}], "]"}], 
          ";"}], "*)"}], "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "look", " ", "for", " ", "aux", " ", "and", " ", "pcomps", " ", 
           "not", " ", "in", " ", "the", " ", "ICs"}], ",", " ", 
          RowBox[{"treat", " ", "as", " ", "fixed", " ", "at", " ", "0"}]}], 
         " ", "*)"}], "\n", 
        RowBox[{"Do", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{"nonfixedvars", ",", "fixedvars"}], "]"}], ",", 
               "var"}], "]"}]}], ",", "\n", "\t\t", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"fixed", ",", 
               RowBox[{"var", "\[Rule]", "0"}]}], "]"}], ";", "\n", "\t\t", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"fixedvars", ",", "var"}], "]"}], ";"}]}], "\n", "\t", 
           "]"}], "\n", ",", 
          RowBox[{"{", 
           RowBox[{"var", ",", "AllPopsAndAuxs"}], "}"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"Set\[ScriptCapitalN]", "[", 
         RowBox[{"attributes", ",", 
          RowBox[{"Join", "[", 
           RowBox[{"init", ",", "fixed"}], "]"}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: \[ScriptCapitalN]=\>\"", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "]"}]}], 
         "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"find", " ", "time", " ", "for", " ", "ICs"}], " ", "*)"}], 
        "\n", 
        RowBox[{"tic", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"modelwhenevents", "\[Equal]", 
            RowBox[{"{", "}"}]}], ",", "tmin", ",", 
           RowBox[{"tmin", "-", 
            RowBox[{"10", "^", 
             RowBox[{"-", "15"}]}]}]}], "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "hack", " ", "to", " ", "ensure", " ", "that", " ", "events", " ", 
           "are", " ", "triggered", " ", "at", " ", "t"}], "=", "tmin"}], " ",
          "*)"}], "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"set", " ", "eqns"}], ",", " ", 
          RowBox[{"unks", " ", "and", " ", "ics"}]}], " ", "*)"}], "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", "\"\<calling EcoEqns...\>\"", "]"}], ";"}], 
         "*)"}], "\n", 
        RowBox[{"eqns", "=", 
         RowBox[{"EcoEqns", "[", 
          RowBox[{"attributes", ",", 
           RowBox[{"Fixed", "\[Rule]", "fixed"}], ",", 
           RowBox[{"NonFixedVars", "\[Rule]", "nonfixedvars"}], ",", "opts"}],
           "]"}]}], ";", "\n", 
        RowBox[{"unks", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"logged", "===", "True"}], "&&", 
              RowBox[{
               RowBox[{"comptype", "[", "var", "]"}], "===", 
               "\"\<Extensive\>\""}]}], ",", 
             RowBox[{"log", "[", "var", "]"}], ",", "var"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"var", ",", "nonfixedvars"}], "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"ics", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"logged", "===", "True"}], "&&", 
              RowBox[{
               RowBox[{"comptype", "[", "var", "]"}], "===", 
               "\"\<Extensive\>\""}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"log", "[", "var", "]"}], "[", "tic", "]"}], 
              "\[Equal]", 
              RowBox[{"Log", "[", 
               RowBox[{"var", "/.", "init"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"var", "[", "tic", "]"}], "\[Equal]", 
              RowBox[{"(", 
               RowBox[{"var", "/.", "init"}], ")"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"var", ",", "nonfixedvars"}], "}"}]}], "]"}]}], ";", "\n",
         "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: eqns=\>\"", ",", "eqns"}], "]"}]}], 
         "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: unks=\>\"", ",", "unks"}], "]"}]}], 
         "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: ics=\>\"", ",", "ics"}], "]"}]}], 
         "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"solve", " ", "it"}], " ", "*)"}], "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", "\"\<calling NDSolve...\>\"", "]"}], ";"}], 
         "*)"}], "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], ",", 
          "\n", "\t", 
          RowBox[{
           RowBox[{"Off", "[", 
            RowBox[{"NDSolve", "::", "wenset"}], "]"}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "in", " ", "case", " ", "a", " ", "modelwhenevent", " ", 
             "involves", " ", "a", " ", "fixed", " ", "variable"}], " ", 
            "*)"}], "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"ndsolveeqns", "=", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                   "eqns", ",", "ics", ",", "modelwhenevents", ",", 
                    "whenevents"}], "]"}]}], ",", 
                 RowBox[{"unks", "=", "unks"}], ",", 
                 RowBox[{"outputtmin", "=", "outputtmin"}], ",", 
                 RowBox[{"options", "=", 
                  RowBox[{"Sequence", "@@", "ndsolveopts"}]}]}], "}"}], ",", 
               "\n", "\t\t\t", 
               RowBox[{"PrintCall", "[", 
                RowBox[{"Global`sol", "=", 
                 RowBox[{
                  RowBox[{"NDSolve", "[", 
                   RowBox[{"ndsolveeqns", ",", "unks", ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "outputtmin", ",", "tmax"}], "}"}], ",",
                     "options"}], "]"}], "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}], "]"}]}], "\n", "\t", "]"}]}], 
            "]"}], ";", "\n", "\t", 
           RowBox[{"sol", "=", 
            RowBox[{
             RowBox[{"NDSolve", "[", 
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{
                "eqns", ",", "ics", ",", "modelwhenevents", ",", 
                 "whenevents"}], "]"}], ",", "unks", ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "outputtmin", ",", "tmax"}], "}"}], ",", 
               RowBox[{"Evaluate", "[", 
                RowBox[{"Sequence", "@@", "ndsolveopts"}], "]"}]}], "]"}], 
             "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";", 
           "\n", "\t", 
           RowBox[{"On", "[", 
            RowBox[{"NDSolve", "::", "wenset"}], "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"logged", "===", "True"}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"output", "==", "\"\<FinalSlice\>\""}], ",", 
                RowBox[{"Return", "[", 
                 RowBox[{"SortRuleList", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"FinalSlice", "[", "sol", "]"}], "/.", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"log", "[", "var_", "]"}], "\[Rule]", "val_"}], 
                    ")"}], "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{"var", "\[Rule]", 
                    RowBox[{"E", "^", "val"}]}], ")"}]}]}], ",", 
                   "AllVariables"}], "]"}], "]"}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{"res", "=", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"comptype", "[", "var", "]"}], "===", 
                    "\"\<Extensive\>\""}], ",", "\n", "\t\t\t", 
                   RowBox[{"var", "\[Rule]", 
                    RowBox[{"Reinterpolation", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"E", "^", 
                    RowBox[{"log", "[", "var", "]"}]}], "/.", "sol"}], ",", 
                    RowBox[{
                    "InterpolationPoints", "\[Rule]", "interpolationpoints"}],
                     ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "interpolationopts"}], "]"}]}], 
                    "]"}]}], ",", "\n", "\t\t\t", 
                   RowBox[{"var", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{"var", "/.", "sol"}], ")"}]}]}], "]"}], "\n", 
                 "\t\t", ",", 
                 RowBox[{"{", 
                  RowBox[{"var", ",", "nonfixedvars"}], "}"}]}], "]"}]}]}], 
             "\n", "\t", ",", "\n", "\t\t", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"res", "=", "sol"}], ";"}], "*)"}], "\n", "\t\t", 
             StyleBox[
              RowBox[{"res", "=", 
               RowBox[{"FilterRules", "[", 
                RowBox[{"sol", ",", "nonfixedvars"}], "]"}]}],
              Background->RGBColor[1, 0.5, 0.5]]}], "\n", "\t", "]"}], ";", 
           "\n", "\t", 
           RowBox[{"res", "=", 
            RowBox[{"Join", "[", 
             RowBox[{"res", ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"fixedvar", "\[Rule]", 
                 RowBox[{"Interpolation", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"tmin", ",", 
                    RowBox[{"fixedvar", "/.", "fixed"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"tmax", ",", 
                    RowBox[{"fixedvar", "/.", "fixed"}]}], "}"}]}], "}"}], 
                   ",", 
                   RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}]}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"fixedvar", ",", "fixedvars"}], "}"}]}], "]"}]}], 
             "]"}]}], ";"}], "\n", "\t", ",", "\n", "\t", 
          RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], ",", 
          "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"rteqns", "=", 
                  RowBox[{"Join", "[", 
                   RowBox[{"eqns", ",", "ics"}], "]"}]}], ",", 
                 RowBox[{"unks", "=", "unks"}]}], "}"}], ",", "\n", "\t\t\t", 
               
               RowBox[{"PrintCall", "[", 
                RowBox[{"Global`res", "=", 
                 RowBox[{"RecurrenceTable", "[", 
                  RowBox[{"rteqns", ",", "unks", ",", 
                   RowBox[{"{", 
                    RowBox[{"t", ",", "tmin", ",", "tmax"}], "}"}]}], "]"}]}],
                 "]"}]}], "\n", "\t", "]"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{"sol", "=", 
            RowBox[{"Transpose", "[", 
             RowBox[{"Replace", "[", 
              RowBox[{
               RowBox[{"RecurrenceTable", "[", 
                RowBox[{
                 RowBox[{"Join", "[", 
                  RowBox[{"eqns", ",", "ics"}], "]"}], ",", "unks", ",", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "tmin", ",", "tmax"}], "}"}], ",", 
                 RowBox[{"Method", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"Compiled", "\[Rule]", "True"}], "}"}]}]}], "]"}], 
               ",", 
               RowBox[{
                RowBox[{"n_", "?", "NumericQ"}], "\[Rule]", 
                RowBox[{"{", "n", "}"}]}], ",", "1"}], "]"}], "]"}]}], ";", 
           " ", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
              "Replace", " ", "to", " ", "deal", " ", "with", " ", "weird", 
               " ", "RecurrenceTable", " ", "bug"}], " ", "<", 
              RowBox[{"https", ":"}]}], "//", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], 
                 "/", "questions"}], "/", "128371"}], "/"}], ">"}]}], " ", 
            "*)"}], "\n", "\t", 
           RowBox[{"res", "=", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"Table", "[", "\n", "\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Head", "[", 
                    RowBox[{
                    "unks", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "]"}], "===", "log"}], ",", 
                   RowBox[{"unks", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                   RowBox[{
                   "unks", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], "]"}], "\[Rule]", 
                 RowBox[{"TimeSeries", "[", 
                  RowBox[{"Transpose", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"t", ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "outputtmin", ",", "tmax"}], "}"}]}], 
                    "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Head", "[", 
                    RowBox[{
                    "unks", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "]"}], "===", "log"}], ",", 
                    RowBox[{"E", "^", 
                    RowBox[{
                    "sol", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"sol", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", 
                    RowBox[{
                    RowBox[{"outputtmin", "-", "tmin", "+", "1"}], ";;", 
                    RowBox[{"tmax", "-", "tmin", "+", "1"}]}]}], 
                    "\[RightDoubleBracket]"}]}], "]"}]}], "}"}], "]"}], 
                  "]"}]}], "\n", "\t", ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"Length", "[", "unks", "]"}]}], "}"}]}], "]"}], ",",
               "\n", "\t", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"fixedvar", "\[Rule]", 
                 RowBox[{"TimeSeries", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"t", ",", 
                    RowBox[{"fixedvar", "/.", "fixed"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "tmin", ",", "tmax"}], "}"}]}], "]"}], 
                  "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"fixedvar", ",", "fixedvars"}], "}"}]}], "]"}]}], 
             "]"}]}], ";"}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: res=\>\"", ",", "res"}], "]"}]}], 
         "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"output", "==", "\"\<FinalSlice\>\""}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{"SortRuleList", "[", 
            RowBox[{
             RowBox[{"FinalSlice", "[", "res", "]"}], ",", "AllVariables"}], 
            "]"}], "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"Return", "[", 
         RowBox[{"SortRuleList", "[", 
          RowBox[{"res", ",", "AllVariables"}], "]"}], "]"}], ";"}]}], "\n", 
      "\n", "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.6837197916972446`*^9, 3.683719814614541*^9}, {
   3.685099830612578*^9, 3.68509983828614*^9}, {3.685104253459167*^9, 
   3.685104254046667*^9}, {3.685104787061838*^9, 3.685104805451277*^9}, {
   3.685747685072537*^9, 3.685747876861381*^9}, {3.6875994587277517`*^9, 
   3.687599465108343*^9}, {3.6875998110049057`*^9, 3.687599812849204*^9}, 
   3.687601269697361*^9, {3.687803702298744*^9, 3.68780370349183*^9}, {
   3.687881448408225*^9, 3.687881449965784*^9}, {3.688409482424697*^9, 
   3.6884094828866997`*^9}, {3.68847619085579*^9, 3.6884763153855543`*^9}, {
   3.688476552921623*^9, 3.6884765906759157`*^9}, {3.688476640454545*^9, 
   3.6884766624616823`*^9}, {3.688478057858975*^9, 3.688478073819086*^9}, 
   3.688478106553846*^9, {3.688481832019665*^9, 3.6884818637270517`*^9}, {
   3.68848198601797*^9, 3.688481986289852*^9}, {3.68848203648921*^9, 
   3.688482036771994*^9}, {3.688571683922414*^9, 3.688571684564405*^9}, {
   3.688571754787105*^9, 3.688571756162634*^9}, {3.688571805207375*^9, 
   3.688571805400833*^9}, {3.688576534952465*^9, 3.6885765589018593`*^9}, {
   3.6885765973180237`*^9, 3.6885766099200773`*^9}, {3.688576677184456*^9, 
   3.68857670651512*^9}, {3.688576750047225*^9, 3.688576828468412*^9}, {
   3.688576861374028*^9, 3.688576865516281*^9}, {3.688576912302185*^9, 
   3.6885769776473627`*^9}, 3.688577121642941*^9, {3.688577592173789*^9, 
   3.688577596642589*^9}, {3.688579212731928*^9, 3.6885792419927883`*^9}, {
   3.6885802733306007`*^9, 3.688580278653151*^9}, {3.688586414777338*^9, 
   3.6885864462855883`*^9}, {3.6885895249386806`*^9, 3.688589525831869*^9}, {
   3.688589674208198*^9, 3.688589686164362*^9}, {3.6885964627827377`*^9, 
   3.688596463926784*^9}, {3.688597685474613*^9, 3.688597687244441*^9}, {
   3.688597777536826*^9, 3.6885978428089952`*^9}, 3.688637384935658*^9, {
   3.688637467402487*^9, 3.688637495119039*^9}, {3.6886382839697237`*^9, 
   3.6886382968259068`*^9}, {3.6935695128062057`*^9, 3.693569513642687*^9}, {
   3.697549216341201*^9, 3.697549251003508*^9}, {3.697585192455277*^9, 
   3.697585194236335*^9}, {3.6975880743788033`*^9, 3.69758808296707*^9}, {
   3.697634697600371*^9, 3.6976347015374517`*^9}, {3.6976347907966547`*^9, 
   3.697634815012352*^9}, {3.697634846070552*^9, 3.697634846469798*^9}, {
   3.697635021221985*^9, 3.697635027582736*^9}, {3.69772377453892*^9, 
   3.697723794507187*^9}, {3.697731824382801*^9, 3.697731855958313*^9}, {
   3.6977325212727823`*^9, 3.697732525024273*^9}, {3.70865818567872*^9, 
   3.708658187702449*^9}, {3.708658883922175*^9, 3.708658932380825*^9}, {
   3.708658978967927*^9, 3.708658988785028*^9}, {3.708659314987214*^9, 
   3.708659318220418*^9}, {3.708659414049062*^9, 3.7086594369538517`*^9}, {
   3.7086606357678967`*^9, 3.708660641303603*^9}, {3.708860242741111*^9, 
   3.708860256320875*^9}, {3.708863517115827*^9, 3.708863522732519*^9}, {
   3.7088640413773117`*^9, 3.708864043205145*^9}, {3.709336382683031*^9, 
   3.709336395942152*^9}, {3.7093364320313377`*^9, 3.709336434698505*^9}, {
   3.7093365406626472`*^9, 3.709336551061442*^9}, 3.710105950418229*^9, {
   3.710254090139742*^9, 3.710254135927783*^9}, {3.7102542924218893`*^9, 
   3.710254324487406*^9}, {3.710267124446744*^9, 3.710267144662348*^9}, {
   3.7103244341379538`*^9, 3.71032443720581*^9}, {3.711020940367322*^9, 
   3.711020940810072*^9}, {3.711020975480033*^9, 3.711021065813737*^9}, {
   3.711022029319018*^9, 3.7110220799490623`*^9}, {3.711054174444749*^9, 
   3.7110542104450006`*^9}, {3.711054290341386*^9, 3.711054309582295*^9}, {
   3.711054353579789*^9, 3.711054417990508*^9}, {3.711391853068926*^9, 
   3.7113918541986313`*^9}, {3.711396302259658*^9, 3.7113963222792788`*^9}, {
   3.711410431026333*^9, 3.7114104672429047`*^9}, {3.711410576810849*^9, 
   3.711410582779395*^9}, {3.711410638454603*^9, 3.711410640632468*^9}, 
   3.7127385346390533`*^9, {3.7165097127090883`*^9, 3.716509716707183*^9}, {
   3.7165097554390287`*^9, 3.7165099097910433`*^9}, {3.716509964181159*^9, 
   3.716510150447673*^9}, {3.716510221475322*^9, 3.716510222696692*^9}, {
   3.716510321273671*^9, 3.716510399037038*^9}, {3.716510549104228*^9, 
   3.716510701740183*^9}, {3.716510739280116*^9, 3.716510793683608*^9}, {
   3.716510847314308*^9, 3.716511177316183*^9}, {3.716511211881484*^9, 
   3.716511251927143*^9}, {3.716511497572378*^9, 3.7165115662915907`*^9}, {
   3.716548551710128*^9, 3.71654855526655*^9}, {3.716548615615774*^9, 
   3.716548615936906*^9}, {3.716549009807028*^9, 3.716549115590782*^9}, {
   3.716549162036189*^9, 3.7165491630300207`*^9}, {3.716549199117897*^9, 
   3.716549229136222*^9}, {3.716549271360865*^9, 3.7165492742940083`*^9}, {
   3.716549338308134*^9, 3.7165493787273197`*^9}, 3.7168525403146677`*^9, {
   3.7218491650092487`*^9, 3.7218491798236237`*^9}, {3.721849436036684*^9, 
   3.721849444642714*^9}, 3.721849623374535*^9, {3.722040187233363*^9, 
   3.722040312832337*^9}, 3.722041210508938*^9, {3.722041289001911*^9, 
   3.722041331207506*^9}, 3.7220419485067997`*^9, {3.722042038837043*^9, 
   3.722042052756021*^9}, {3.7220420979994993`*^9, 3.722042110652996*^9}, {
   3.722042415992391*^9, 3.722042529278997*^9}, {3.7220426780612717`*^9, 
   3.722042681575458*^9}, {3.722083154310812*^9, 3.7220831756527987`*^9}, {
   3.7220836780018663`*^9, 3.722083739137475*^9}, {3.7246347325389757`*^9, 
   3.7246347534392967`*^9}, {3.724634791495159*^9, 3.7246348110330153`*^9}, {
   3.732397720147819*^9, 3.732397792724414*^9}, {3.7327195399581633`*^9, 
   3.7327196031278954`*^9}, {3.73271963757236*^9, 3.7327197205518293`*^9}, {
   3.7327482240655193`*^9, 3.732748240507607*^9}, {3.732751024072899*^9, 
   3.732751025593628*^9}, {3.732751225986065*^9, 3.732751232584776*^9}, {
   3.732751408830764*^9, 3.732751441377883*^9}, {3.7327934666316853`*^9, 
   3.732793468303685*^9}, {3.732793518143791*^9, 3.732793532858294*^9}, {
   3.73279358957764*^9, 3.7327935900489798`*^9}, {3.732793657445579*^9, 
   3.732793665478195*^9}, {3.732793808529172*^9, 3.732793811049835*^9}, {
   3.732795159408784*^9, 3.732795165677896*^9}, {3.732799015996179*^9, 
   3.732799017105356*^9}, {3.733562962432672*^9, 3.733562968889001*^9}, {
   3.7335630110069513`*^9, 3.7335630213197823`*^9}, {3.734133255870408*^9, 
   3.734133256443324*^9}, 3.7551776828195868`*^9, 3.755177967562162*^9, 
   3.755180801033985*^9, {3.755698417105859*^9, 3.7556984206116323`*^9}, {
   3.755698582512156*^9, 3.755698583440915*^9}, {3.7556987244672956`*^9, 
   3.7556987550875473`*^9}, {3.755698806843412*^9, 3.755698835933962*^9}, {
   3.755698880502845*^9, 3.755698895321845*^9}, {3.755699303333419*^9, 
   3.7556993054258738`*^9}, {3.755716030678047*^9, 3.755716030964797*^9}, {
   3.755795563258087*^9, 3.75579556695955*^9}, {3.755796537533663*^9, 
   3.7557965422907124`*^9}, {3.7557969639625*^9, 3.755796980994426*^9}, {
   3.755797020002678*^9, 3.7557970311604958`*^9}, {3.755811336818635*^9, 
   3.7558113409514427`*^9}, 3.7558219421825037`*^9, 3.755821982249864*^9, {
   3.755876898693664*^9, 3.75587690868122*^9}, {3.755877411305174*^9, 
   3.755877440918792*^9}, {3.7558774825052*^9, 3.755877484798025*^9}, {
   3.755878279044626*^9, 3.7558783324152117`*^9}, {3.755878365271226*^9, 
   3.755878372973558*^9}, {3.7558787640544853`*^9, 3.755878815881917*^9}, {
   3.7558789032637587`*^9, 3.7558789095022593`*^9}, {3.755879568877222*^9, 
   3.755879581918968*^9}, {3.75914192614564*^9, 3.759141926523275*^9}, {
   3.7595874705518513`*^9, 3.75958747175454*^9}, {3.759587550208981*^9, 
   3.75958756654426*^9}, {3.759588574046174*^9, 3.759588633410527*^9}, {
   3.759588686348514*^9, 3.7595887047750607`*^9}, {3.7595888770803623`*^9, 
   3.759588931050766*^9}, {3.759589048022388*^9, 3.7595890481901693`*^9}, {
   3.759918079380793*^9, 3.759918117557625*^9}, {3.759918271715313*^9, 
   3.759918293286161*^9}, {3.7599187578934917`*^9, 3.759918837713181*^9}, {
   3.759918868787376*^9, 3.759918924327952*^9}, {3.759997872920829*^9, 
   3.7599978738870573`*^9}, {3.75999869184888*^9, 3.75999869438686*^9}, {
   3.7599987406436253`*^9, 3.759998743342456*^9}, {3.759998876308449*^9, 
   3.759998882429986*^9}, {3.7600005139094257`*^9, 3.760000519302764*^9}, 
   3.760000855887765*^9, {3.760266276248238*^9, 3.760266282511297*^9}, {
   3.760266404284726*^9, 3.760266452452086*^9}, {3.760345652854246*^9, 
   3.76034566305914*^9}, {3.760345721555544*^9, 3.760345725355283*^9}, {
   3.760346437140493*^9, 3.760346439223386*^9}, {3.7603464708272142`*^9, 
   3.7603464734188757`*^9}, {3.760346566892017*^9, 3.760346568402997*^9}, {
   3.760359499132567*^9, 3.760359499567541*^9}, {3.7603595337945957`*^9, 
   3.7603596224936*^9}, {3.760359688957488*^9, 3.760359841764545*^9}, {
   3.7605507423879147`*^9, 3.760550749120572*^9}, {3.7606358333691072`*^9, 
   3.760635836408339*^9}, {3.760933125778738*^9, 3.760933133001461*^9}, {
   3.761327829973287*^9, 3.761327881553331*^9}, {3.7613279409284887`*^9, 
   3.761327949074862*^9}, {3.761328252094576*^9, 3.7613282694845037`*^9}, {
   3.761328300501361*^9, 3.761328313199523*^9}, {3.761329072095763*^9, 
   3.761329092631069*^9}, {3.761329219530513*^9, 3.761329222384013*^9}, {
   3.761329257471346*^9, 3.761329275185904*^9}, {3.761329320857678*^9, 
   3.761329331537274*^9}, {3.76132940086814*^9, 3.761329419791305*^9}, 
   3.761329453067357*^9, {3.76132961600105*^9, 3.7613296635767612`*^9}, {
   3.761329715501899*^9, 3.7613297570387907`*^9}, {3.761329793778163*^9, 
   3.7613297957582197`*^9}, {3.7613300644363317`*^9, 3.761330073051684*^9}, {
   3.761330106746245*^9, 3.761330156731537*^9}, 3.7613308086811857`*^9, {
   3.761331073395063*^9, 3.7613311273431273`*^9}, {3.761331160777287*^9, 
   3.761331161022748*^9}, {3.7613312763750067`*^9, 3.761331325047887*^9}, {
   3.761331632735194*^9, 3.761331633041376*^9}, {3.761331669043106*^9, 
   3.761331694094407*^9}, {3.761331736983676*^9, 3.761331739865645*^9}, {
   3.761368155471286*^9, 3.761368155647005*^9}, {3.761370667548565*^9, 
   3.761370712500825*^9}, {3.761370750571142*^9, 3.761370758129332*^9}, {
   3.761371801331059*^9, 3.761371813024859*^9}, 3.761371844927044*^9, {
   3.761371895263199*^9, 3.761371903643269*^9}, {3.761371948680127*^9, 
   3.761372011133733*^9}, {3.7613720690107327`*^9, 3.761372100395238*^9}, {
   3.7613721356793127`*^9, 3.761372153167708*^9}, {3.769182368416112*^9, 
   3.7691823684211397`*^9}, 3.769760705354681*^9, 3.770438264989409*^9, {
   3.770471442247822*^9, 3.770471444114455*^9}, {3.7707214332363462`*^9, 
   3.770721433902907*^9}, 3.780593581128171*^9, 3.79413724054484*^9, {
   3.7947033238520327`*^9, 3.7947033366058598`*^9}, 3.798041875136073*^9, {
   3.7980419331528254`*^9, 3.798041933943987*^9}, {3.79881242769331*^9, 
   3.79881245611803*^9}, {3.7988125226232023`*^9, 3.7988125433363667`*^9}, {
   3.798812601246105*^9, 3.798812629646175*^9}, {3.799015179571165*^9, 
   3.79901518145035*^9}, {3.7990152588757257`*^9, 3.799015259244092*^9}, {
   3.799015337461306*^9, 3.799015339700242*^9}, {3.799019845251588*^9, 
   3.7990198454817257`*^9}, 3.799019956144249*^9, {3.8001150803707323`*^9, 
   3.800115085273596*^9}, 3.800115150114846*^9, 3.800272305575385*^9, {
   3.800463474243475*^9, 3.800463527706603*^9}, {3.8004646562693777`*^9, 
   3.800464659275963*^9}, {3.807369328164467*^9, 3.807369330720693*^9}, {
   3.8073696183406763`*^9, 3.8073696226528797`*^9}, {3.807376403951016*^9, 
   3.807376431204956*^9}, {3.816094158339715*^9, 3.81609420177188*^9}, {
   3.817913839772093*^9, 3.817913843790799*^9}, 3.817914314080785*^9, {
   3.817928124901746*^9, 3.817928128737062*^9}, {3.819230025534301*^9, 
   3.819230050153695*^9}, {3.819231153204021*^9, 3.819231249452188*^9}, {
   3.819231714529787*^9, 3.81923175577921*^9}, {3.81923255057174*^9, 
   3.819232558258554*^9}, {3.820449749239849*^9, 3.820449787368422*^9}, {
   3.820449821775735*^9, 3.820449879353221*^9}, {3.820535220290225*^9, 
   3.820535249373086*^9}, {3.820536025747998*^9, 3.8205360508201637`*^9}, {
   3.820536090970763*^9, 3.820536122564897*^9}, {3.820536183443139*^9, 
   3.820536195927431*^9}, {3.820536256288932*^9, 3.820536260093498*^9}, {
   3.829326105765753*^9, 3.829326106058188*^9}, {3.829326171648312*^9, 
   3.829326181251512*^9}, {3.829326213497053*^9, 3.829326226582059*^9}, {
   3.829326338818612*^9, 3.8293263403374987`*^9}, {3.829326442258891*^9, 
   3.829326445376696*^9}, {3.829327392684367*^9, 3.829327393909255*^9}, {
   3.844288133689269*^9, 3.8442881573966837`*^9}, {3.8442881913199177`*^9, 
   3.844288195887848*^9}, {3.8442883928364773`*^9, 3.844288409204273*^9}, {
   3.844288442301179*^9, 
   3.844288442836907*^9}},ExpressionUUID->"26ae94e3-8b1d-48cd-94b7-\
ceb5928ee840"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",ExpressionUUID->"b7028708-b90a-461f-8852-b4e5a43a31ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "EcoSim", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}], ",", "\n", 
     RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"NDSolveOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Logged", "\[Rule]", "False"}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"WhenEvents", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "7"}], ",", 
     RowBox[{"InterpolationPoints", "\[Rule]", "1000"}], ",", "\n", 
     RowBox[{"EqStop", "\[Rule]", "False"}], ",", 
     RowBox[{"EqThreshold", "\[Rule]", 
      RowBox[{"10", "^", 
       RowBox[{"-", "8"}]}]}], ",", 
     RowBox[{"TimeScale", "\[Rule]", "1"}], ",", 
     RowBox[{"TMin", "\[Rule]", "0"}], ",", 
     RowBox[{"OutputTMin", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Output", "\[Rule]", "\"\<Dynamics\>\""}], ",", 
     RowBox[{"TMin", "\[Rule]", "0"}], ",", 
     RowBox[{"RandomSeeding", "\[Rule]", "None"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.6857478833894367`*^9, 3.6857478859298077`*^9}, {
   3.6885716845809298`*^9, 3.688571684696095*^9}, {3.711021081057744*^9, 
   3.711021082726972*^9}, {3.71102206121577*^9, 3.711022066182521*^9}, {
   3.711054119325077*^9, 3.711054130787101*^9}, {3.7114105574184513`*^9, 
   3.711410562285851*^9}, 3.725140957969185*^9, 3.794703547788424*^9, {
   3.798812394023961*^9, 3.798812407526904*^9}, 3.798812596530764*^9, {
   3.820449636641409*^9, 3.8204496658235283`*^9}, {3.820536062067058*^9, 
   3.82053608115473*^9}},ExpressionUUID->"935203c8-2e68-41e1-b172-\
f21f51676264"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",
 CellChangeTimes->{{3.711391826371338*^9, 
  3.7113918281050377`*^9}},ExpressionUUID->"cb5b213f-33ac-4f24-b356-\
083616993615"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"split", " ", "traitsandvariables"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"EcoSim", "[", 
     RowBox[{
      RowBox[{"eesol_", "?", "AttributesAndVariablesQ"}], ",", 
      RowBox[{"tmax_", "?", "NumericQ"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
    RowBox[{"EcoSim", "[", 
     RowBox[{
      RowBox[{"ExtractTraits", "[", "eesol", "]"}], ",", 
      RowBox[{"ExtractVariables", "[", "eesol", "]"}], ",", "tmax", ",", 
      "opts"}], "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.7113918351562*^9, 3.7113918740712967`*^9}, 
   3.7114982161331043`*^9, {3.712738534647805*^9, 3.7127385346513844`*^9}, {
   3.769501364239954*^9, 3.769501375253107*^9}, 3.7981288000367804`*^9, 
   3.807369331935397*^9},ExpressionUUID->"40d03795-3b45-4f04-84a2-\
7564fff90c9d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["*EcoEq: SolveEcoEq / NSolveEcoEq / FindEcoEq", "Subsection",
 CellChangeTimes->{{3.6954006453555927`*^9, 3.6954006557460127`*^9}, {
   3.6962556239228687`*^9, 3.696255625343861*^9}, 
   3.699565737020871*^9},ExpressionUUID->"85b4811f-d38e-497d-a0b4-\
4fb57bb77cb9"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"84893dd5-a625-4b35-9c47-\
16a5bd233aa0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EcoEq", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<EcoEq[] solves for ecological equilibria.\n\
EcoEq[\!\(\*StyleBox[\"init\", \"TI\"]\)] finds an ecological equilibrium \
using initial guess \!\(\*StyleBox[\"init\", \"TI\"]\).\n\
EcoEq[\!\(\*StyleBox[\"attributes\", \"TI\"]\)] uses trait values/interaction \
coefficients \!\(\*StyleBox[\"attributes\", \"TI\"]\).\nEcoEq[\!\(\*StyleBox[\
\"attributes\", \"TI\"]\), \!\(\*StyleBox[\"init\", \"TI\"]\)] uses trait \
values/interaction coefficients \!\(\*StyleBox[\"attributes\", \"TI\"]\) and \
initial guess \!\(\*StyleBox[\"init\", \"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SolveEcoEq", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<SolveEcoEq[] solves for ecological equilibria.\n\
SolveEcoEq[\!\(\*StyleBox[\"vars\", \"TI\"]\)] solves for variables \
\!\(\*StyleBox[\"vars\", \"TI\"]\).\n\
SolveEcoEq[\!\(\*StyleBox[\"attributes\", \"TI\"]\)] uses trait \
values/interaction coefficients \!\(\*StyleBox[\"attributes\", \"TI\"]\).\n\
SolveEcoEq[\!\(\*StyleBox[\"attributes\", \"TI\"]\), \!\(\*StyleBox[\"vars\", \
\"TI\"]\)] solves for variables \!\(\*StyleBox[\"vars\", \"TI\"]\) using \
trait values/interaction coefficients \!\(\*StyleBox[\"attributes\", \
\"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NSolveEcoEq", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<NSolveEcoEq[] numerically solves for ecological equilibria.\n\
NSolveEcoEq[\!\(\*StyleBox[\"vars\", \"TI\"]\)] numerically solves for \
variables \!\(\*StyleBox[\"vars\", \"TI\"]\).\n\
NSolveEcoEq[\!\(\*StyleBox[\"attributes\", \"TI\"]\)] uses \
traits/interactions \!\(\*StyleBox[\"attributes\", \"TI\"]\).\nNSolveEcoEq[\!\
\(\*StyleBox[\"attributes\", \"TI\"]\), \!\(\*StyleBox[\"vars\", \"TI\"]\)] \
numerically solves for variables \!\(\*StyleBox[\"vars\", \"TI\"]\) using \
trait values/interaction coefficients \!\(\*StyleBox[\"attributes\", \
\"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FindEcoEq", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<FindEcoEq[\!\(\*StyleBox[\"init\", \"TI\"]\)] finds an ecological \
equilibrium using initial guess \!\(\*StyleBox[\"init\", \"TI\"]\).\n\
FindEcoEq[\!\(\*StyleBox[\"attributes\", \"TI\"]\), \!\(\*StyleBox[\"init\", \
\"TI\"]\)] uses trait values/interaction coefficients \
\!\(\*StyleBox[\"attributes\", \"TI\"]\) and initial guess \
\!\(\*StyleBox[\"init\", \"TI\"]\).\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.76948331462147*^9, 3.769483315463594*^9}, {
  3.807375225831135*^9, 3.807375269109378*^9}, {3.807375299950779*^9, 
  3.807375331109776*^9}, {3.807375372814131*^9, 3.807375394598486*^9}, {
  3.8073754723757067`*^9, 3.807375491334848*^9}, {3.8073761836229362`*^9, 
  3.807376252238955*^9}, {3.807378136944607*^9, 
  3.807378170459052*^9}},ExpressionUUID->"5b5193d3-9f3b-4ed0-bebe-\
80be6c7bbc43"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"52f8ee1d-3557-46e5-a2b0-\
1c8530082de2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoEq", "[", 
    RowBox[{
     RowBox[{"attributesin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "AttributesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"init", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"vars", ":", 
      RowBox[{"(", 
       RowBox[{"_List", "|", "All"}], ")"}], ":", "All"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<EcoEq\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "method", ",", 
       "solveopts", ",", "nsolveopts", ",", "findrootopts", ",", 
       "boundarydetection", ",", "time", ",", "fixed", ",", "chop", ",", 
       "qss", ",", "percapita", ",", "verbose", ",", "verboseall", ",", "\n", 
       
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "attributes", 
       ",", "nonvars", ",", "nonfixedvars", ",", "fixedvars", ",", "removets",
        ",", "eqns", ",", "unks", ",", "newunk", ",", "sol", ",", "res"}], 
      "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"attributes", "=", 
         RowBox[{"FixAttributes", "[", "attributesin", "]"}]}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"method", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Method", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"method", "===", "Automatic"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"init", "\[NotEqual]", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"method", "=", "\"\<FindRoot\>\""}], ",", 
            RowBox[{"method", "=", "\"\<Solve\>\""}]}], "]"}]}], "]"}], ";", 
        "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: method=\>\"", ",", "method"}], "]"}]}],
          "]"}], ";", "\n", "\n", 
        RowBox[{"solveopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"SolveOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"$VersionNumber", "\[GreaterEqual]", "12.2"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"solveopts", ",", 
            RowBox[{"Assumptions", "\[Rule]", 
             RowBox[{"{", "}"}]}]}], "]"}]}], "]"}], ";", "\n", 
        RowBox[{"nsolveopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"NSolveOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"findrootopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"FindRootOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"boundarydetection", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"BoundaryDetection", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"time", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Time", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"chop", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Chop", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"qss", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"QSS", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"fixed", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Fixed", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"percapita", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PerCapita", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"EcoEq", " ", 
          RowBox[{"doesn", "'"}], "t", " ", "work", " ", "on", " ", 
          "Periodic", " ", "models"}], " ", "*)"}], "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"modelperiod", "=!=", "0"}], "&&", 
           RowBox[{"time", "===", "t"}], "&&", 
           RowBox[{"method", "\[Equal]", "\"\<FindRoot\>\""}]}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEq", "::", "noneq"}], "]"}], ";", 
           RowBox[{"Return", "[", "]"}]}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"handle", " ", "blanks"}], " ", "&"}], " ", "figure", " ", 
          "out", " ", "number", " ", "of", " ", "species", " ", "in", " ", 
          "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"Set\[ScriptCapitalN]", "[", "attributes", "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "]"}], ";"}], 
         "*)"}], "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"vars", "===", "All"}], ",", "\n", "\t", 
          RowBox[{"nonvars", "=", 
           RowBox[{"{", "}"}]}], ",", "\n", "\t", 
          RowBox[{"nonvars", "=", 
           RowBox[{"OrderedComplement", "[", 
            RowBox[{"AllVariables", ",", "vars"}], "]"}]}]}], "\n", "]"}], 
        ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<nonvars=\>\"", ",", "nonvars"}], "]"}], ";"}], "*)"}],
         "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"qss", "\[Equal]", "False"}], ",", "\n", "\t", 
          RowBox[{"fixed", "=", 
           RowBox[{"JoinFirst", "[", 
            RowBox[{"fixed", ",", 
             RowBox[{"Replace", "[", 
              RowBox[{"nonvars", ",", 
               RowBox[{"x_", "\[Rule]", 
                RowBox[{"(", 
                 RowBox[{"x", "\[Rule]", "0"}], ")"}]}], ",", "1"}], "]"}]}], 
            "]"}]}], ",", "\n", "\t", 
          RowBox[{"fixed", "=", 
           RowBox[{"JoinFirst", "[", 
            RowBox[{"fixed", ",", 
             RowBox[{"Replace", "[", 
              RowBox[{"nonvars", ",", 
               RowBox[{"x_", "\[Rule]", 
                RowBox[{"(", 
                 RowBox[{"x", "\[Rule]", "x"}], ")"}]}], ",", "1"}], "]"}]}], 
            "]"}]}]}], "\n", "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<fixed=\>\"", ",", "fixed"}], "]"}], ";"}], "*)"}], 
        "\n", "\n", 
        RowBox[{"fixedvars", "=", 
         RowBox[{"fixed", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        RowBox[{"nonfixedvars", "=", 
         RowBox[{"OrderedComplement", "[", 
          RowBox[{"AllVariables", ",", "fixedvars"}], "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<nonfixedvars=\>\"", ",", "nonfixedvars"}], "]"}], 
          ";"}], "*)"}], "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"set", " ", "eqns"}], ",", " ", 
          RowBox[{"unks", " ", "and", " ", "ics"}]}], " ", "*)"}], "\n", 
        RowBox[{"eqns", "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"EcoEqns", "[", 
               RowBox[{"attributes", ",", 
                RowBox[{"Fixed", "\[Rule]", "fixed"}], ",", 
                RowBox[{"PerCapita", "\[Rule]", "percapita"}]}], "]"}], "/.", 
              "Eq"}], "/.", "RemoveVariablets"}], "/.", 
            RowBox[{"t", "\[Rule]", "time"}]}], "/.", "fixed"}], "/.", 
          "attributes"}]}], ";", "\n", "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<Solve\>\"", ",", "\"\<NSolve\>\""}], "}"}], ",", 
            "method"}], "]"}], ",", "\n", "\t", 
          RowBox[{"unks", "=", "nonfixedvars"}], "\n", ",", "\n", "\t", 
          RowBox[{"method", "\[Equal]", "\"\<FindRoot\>\""}], ",", "\n", "\t", 
          RowBox[{"unks", "=", 
           RowBox[{"Table", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"newunk", "=", 
               RowBox[{"{", 
                RowBox[{"var", ",", 
                 RowBox[{"(", 
                  RowBox[{"var", "/.", 
                   RowBox[{"Append", "[", 
                    RowBox[{"init", ",", 
                    RowBox[{"var", "\[Rule]", "0"}]}], "]"}]}], ")"}]}], 
                "}"}]}], ";", "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{"boundarydetection", ",", 
                RowBox[{"newunk", "=", 
                 RowBox[{"Join", "[", 
                  RowBox[{"newunk", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"range", "[", "var", "]"}], "]"}], ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{"range", "[", "var", "]"}], "]"}]}], "}"}]}], 
                  "]"}]}]}], "]"}], ";", "\n", "\t\t", "newunk"}], ",", 
             RowBox[{"{", 
              RowBox[{"var", ",", "nonfixedvars"}], "}"}]}], "]"}]}]}], "\n", 
         "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: eqns=\>\"", ",", "eqns"}], "]"}]}], 
         "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: unks=\>\"", ",", "unks"}], "]"}]}], 
         "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"solve", " ", "it"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"method", "\[Equal]", "\"\<Solve\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"eqns", "=", "eqns"}], ",", 
                 RowBox[{"unks", "=", "unks"}], ",", 
                 RowBox[{"options", "=", 
                  RowBox[{"Sequence", "@@", "solveopts"}]}]}], "}"}], ",", 
               RowBox[{"PrintCall", "[", 
                RowBox[{"Global`sol", "=", 
                 RowBox[{"Solve", "[", 
                  RowBox[{"eqns", ",", "unks", ",", "options"}], "]"}]}], 
                "]"}]}], "]"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{"sol", "=", 
            RowBox[{"Solve", "[", 
             RowBox[{"eqns", ",", "unks", ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "solveopts"}], "]"}]}], "]"}]}]}], 
          ",", "\n", "\t", 
          RowBox[{"method", "\[Equal]", "\"\<NSolve\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"eqns", "=", "eqns"}], ",", 
                 RowBox[{"unks", "=", "unks"}], ",", 
                 RowBox[{"options", "=", 
                  RowBox[{"Sequence", "@@", "nsolveopts"}]}]}], "}"}], ",", 
               RowBox[{"PrintCall", "[", 
                RowBox[{"Global`sol", "=", 
                 RowBox[{"NSolve", "[", 
                  RowBox[{"eqns", ",", "unks", ",", "options"}], "]"}]}], 
                "]"}]}], "]"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{"sol", "=", 
            RowBox[{"NSolve", "[", 
             RowBox[{"eqns", ",", "unks", ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "nsolveopts"}], "]"}]}], "]"}]}]}], 
          ",", "\n", "\t", 
          RowBox[{"method", "\[Equal]", "\"\<FindRoot\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"eqns", "=", "eqns"}], ",", 
                 RowBox[{"unks", "=", "unks"}], ",", 
                 RowBox[{"options", "=", 
                  RowBox[{"Sequence", "@@", "findrootopts"}]}]}], "}"}], ",", 
               
               RowBox[{"PrintCall", "[", 
                RowBox[{"Global`sol", "=", 
                 RowBox[{"FindRoot", "[", 
                  RowBox[{"eqns", ",", "unks", ",", "options"}], "]"}]}], 
                "]"}]}], "]"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{"sol", "=", 
            RowBox[{"FindRoot", "[", 
             RowBox[{"eqns", ",", "unks", ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "findrootopts"}], "]"}]}], "]"}]}]}],
           ",", "\n", "\t", "Else", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEq", "::", "badmtd"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}], ";"}]}], "\n", "]"}], ";",
         "\n", "\n", 
        StyleBox[
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: sol=\>\"", ",", "sol"}], "]"}]}], 
          "]"}],
         Background->RGBColor[1, 0.5, 0.5]], 
        StyleBox[";",
         Background->RGBColor[1, 0.5, 0.5]], 
        StyleBox["\n",
         Background->RGBColor[1, 0.5, 0.5]], 
        StyleBox[
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Solve", ",", "NSolve"}], "}"}], ",", 
             RowBox[{"Head", "[", "sol", "]"}]}], "]"}], ",", "\n", "\t", 
           RowBox[{"Which", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{"method", "\[Equal]", "\"\<Solve\>\""}], ",", "\n", 
             "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"eqns", "=", "eqns"}], ",", 
                    RowBox[{"unks", "=", "unks"}], ",", 
                    RowBox[{"options", "=", 
                    RowBox[{"Sequence", "@@", "solveopts"}]}]}], "}"}], ",", 
                  RowBox[{"PrintCall", "[", 
                   RowBox[{"Global`sol", "=", 
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    "eqns", ",", "unks", ",", "Reals", ",", "options"}], 
                    "]"}]}], "]"}]}], "]"}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{"sol", "=", 
               RowBox[{"Solve", "[", 
                RowBox[{"eqns", ",", "unks", ",", "Reals", ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"Sequence", "@@", "solveopts"}], "]"}]}], "]"}]}]}],
              ",", "\n", "\t\t", 
             RowBox[{"method", "\[Equal]", "\"\<NSolve\>\""}], ",", "\n", 
             "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"eqns", "=", "eqns"}], ",", 
                    RowBox[{"unks", "=", "unks"}], ",", 
                    RowBox[{"options", "=", 
                    RowBox[{"Sequence", "@@", "nsolveopts"}]}]}], "}"}], ",", 
                  
                  RowBox[{"PrintCall", "[", 
                   RowBox[{"Global`sol", "=", 
                    RowBox[{"NSolve", "[", 
                    RowBox[{
                    "eqns", ",", "unks", ",", "Reals", ",", "options"}], 
                    "]"}]}], "]"}]}], "]"}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{"sol", "=", 
               RowBox[{"NSolve", "[", 
                RowBox[{"eqns", ",", "unks", ",", "Reals", ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"Sequence", "@@", "nsolveopts"}], "]"}]}], 
                "]"}]}]}]}], "\n", "\t", "]"}]}], "\n", "]"}],
         Background->RGBColor[1, 0.5, 0.5]], 
        StyleBox[";",
         Background->RGBColor[1, 0.5, 0.5]], 
        StyleBox["\n",
         Background->RGBColor[1, 0.5, 0.5]], 
        StyleBox[
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Solve", ",", "NSolve"}], "}"}], ",", 
             RowBox[{"Head", "[", "sol", "]"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"Message", "[", 
             RowBox[{
              RowBox[{"EcoEq", "::", "nosol"}], ",", 
              RowBox[{"Head", "[", "sol", "]"}]}], "]"}], ";", 
            RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}],
         Background->RGBColor[1, 0.5, 0.5]], 
        StyleBox[";",
         Background->RGBColor[1, 0.5, 0.5]], 
        StyleBox["\n",
         Background->RGBColor[1, 0.5, 0.5]], "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"add", " ", "in", " ", "Fixed", " ", "variables"}], " ", 
         "*)"}], "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<Solve\>\"", ",", "\"\<NSolve\>\""}], "}"}], ",", 
            "method"}], "]"}], ",", "\n", "\t", 
          RowBox[{"res", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"DeleteCases", "[", 
                RowBox[{"fixed", ",", 
                 RowBox[{"var_", "\[Rule]", "var_"}]}], "]"}], ",", "#"}], 
              "]"}], "&"}], " ", "/@", " ", "sol"}]}], ",", "\n", "\t", 
          RowBox[{"method", "\[Equal]", "\"\<FindRoot\>\""}], ",", "\n", "\t", 
          RowBox[{"res", "=", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"DeleteCases", "[", 
              RowBox[{"fixed", ",", 
               RowBox[{"var_", "\[Rule]", "var_"}]}], "]"}], ",", "sol"}], 
            "]"}]}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"chop", ",", "\n", "\t", 
          RowBox[{"Return", "[", 
           RowBox[{"SortRuleList", "[", 
            RowBox[{
             RowBox[{"EqSort", "[", 
              RowBox[{"Chop", "[", "res", "]"}], "]"}], ",", "AllVariables"}],
             "]"}], "]"}], ",", "\n", "\t", 
          RowBox[{"Return", "[", 
           RowBox[{"SortRuleList", "[", 
            RowBox[{
             RowBox[{"EqSort", "[", "res", "]"}], ",", "AllVariables"}], 
            "]"}], "]"}]}], "\n", "]"}], ";"}]}], "\n", "\n", "]"}]}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.687881450105945*^9, 3.6878814505620613`*^9}, {
   3.68857168476537*^9, 3.688571684934305*^9}, {3.6885717562075033`*^9, 
   3.688571756902958*^9}, {3.688571805445076*^9, 3.6885718054840527`*^9}, {
   3.6885777801299953`*^9, 3.688577821198338*^9}, {3.688578111707645*^9, 
   3.688578263696265*^9}, {3.688583189141659*^9, 3.688583201104134*^9}, {
   3.6885837935779333`*^9, 3.688583810589251*^9}, {3.688583857663521*^9, 
   3.688583866440373*^9}, 3.688584023610524*^9, {3.688584454327429*^9, 
   3.688584464134824*^9}, {3.6885851260336657`*^9, 3.6885852077551622`*^9}, 
   3.688685223038662*^9, {3.693593326673889*^9, 3.693593328006213*^9}, {
   3.693651209563744*^9, 3.693651212696253*^9}, {3.693651330751341*^9, 
   3.693651337237907*^9}, {3.693700342037077*^9, 3.6937003445534773`*^9}, {
   3.69961046687166*^9, 3.699610497623667*^9}, 3.709124896659213*^9, {
   3.709336699110145*^9, 3.709336699577385*^9}, {3.7101059510781393`*^9, 
   3.710105954644555*^9}, {3.710254347130986*^9, 3.710254357145165*^9}, {
   3.710254389172209*^9, 3.7102544454183407`*^9}, {3.710286418340989*^9, 
   3.710286419629771*^9}, 3.710286914350444*^9, 3.7127385346721067`*^9, {
   3.714088449593779*^9, 3.714088465042605*^9}, {3.714088783139654*^9, 
   3.714088791448407*^9}, {3.714088844203219*^9, 3.71408885600861*^9}, 
   3.714089170503827*^9, {3.7140892855105886`*^9, 3.7140893056027193`*^9}, {
   3.7146455898601007`*^9, 3.714645607554661*^9}, {3.714645833218658*^9, 
   3.714645878205338*^9}, {3.7146594716484127`*^9, 3.714659498519136*^9}, {
   3.714659560420806*^9, 3.714659597546504*^9}, {3.714661306250412*^9, 
   3.7146613128544407`*^9}, {3.7146613520466423`*^9, 3.714661374692927*^9}, {
   3.714661426985828*^9, 3.714661471021627*^9}, {3.714670952581798*^9, 
   3.7146709761045732`*^9}, {3.714673053941062*^9, 3.71467307388553*^9}, {
   3.714673325535184*^9, 3.7146733431977777`*^9}, {3.714673385822101*^9, 
   3.714673408156714*^9}, {3.7146763296033154`*^9, 3.714676349908175*^9}, {
   3.714676870217898*^9, 3.7146768813446712`*^9}, {3.714677005871266*^9, 
   3.7146770388481817`*^9}, {3.714677885477186*^9, 3.714677895396152*^9}, {
   3.7146815798359137`*^9, 3.71468158317702*^9}, {3.714686709068077*^9, 
   3.714686720449131*^9}, {3.714686780357995*^9, 3.714686847805605*^9}, {
   3.714686886251251*^9, 3.7146869069408197`*^9}, {3.7146904343318*^9, 
   3.714690435561199*^9}, {3.7146905887398357`*^9, 3.714690601923481*^9}, {
   3.714690631972337*^9, 3.714690933211876*^9}, {3.714691441205781*^9, 
   3.7146914443765163`*^9}, 3.714771558293874*^9, {3.71477345759927*^9, 
   3.714773544216226*^9}, {3.714773631881823*^9, 3.714773638759398*^9}, {
   3.7147737076976557`*^9, 3.714773768872843*^9}, {3.714773810344654*^9, 
   3.714773862655966*^9}, {3.714774175646474*^9, 3.714774238321686*^9}, {
   3.714774276778345*^9, 3.714774313756324*^9}, {3.714774363666697*^9, 
   3.714774431577939*^9}, {3.71477474128935*^9, 3.714774765274622*^9}, {
   3.714774824264062*^9, 3.7147748384112673`*^9}, {3.7147748942865953`*^9, 
   3.7147749226594543`*^9}, {3.7147749728240833`*^9, 
   3.7147749743011627`*^9}, {3.714777387544536*^9, 3.714777422944803*^9}, {
   3.715423204967746*^9, 3.715423247100832*^9}, {3.716851794553669*^9, 
   3.716851838573512*^9}, {3.716851923962669*^9, 3.71685195096766*^9}, {
   3.716852009532653*^9, 3.716852055393906*^9}, {3.716852216771632*^9, 
   3.71685231192962*^9}, {3.7168523670615377`*^9, 3.71685238929698*^9}, {
   3.7168524239048243`*^9, 3.716852506519627*^9}, {3.7168526119630947`*^9, 
   3.716852660342918*^9}, {3.720561423750366*^9, 3.720561426334433*^9}, {
   3.720561478834214*^9, 3.720561481166069*^9}, {3.721849189319437*^9, 
   3.72184920349916*^9}, {3.721849430040469*^9, 3.7218494327297087`*^9}, 
   3.7218496199026947`*^9, {3.722043437583398*^9, 3.722043661426222*^9}, {
   3.722083757551734*^9, 3.72208381655929*^9}, {3.725055711251069*^9, 
   3.725055715332081*^9}, 3.7251409579843616`*^9, 3.725141965221623*^9, {
   3.728485760884264*^9, 3.728485790162279*^9}, {3.728492488068541*^9, 
   3.728492510850383*^9}, {3.728493399302709*^9, 3.728493401619061*^9}, {
   3.7284934402687283`*^9, 3.728493443062832*^9}, {3.728495197386813*^9, 
   3.7284952624184313`*^9}, {3.728495727453259*^9, 3.7284957368624372`*^9}, {
   3.728495928466558*^9, 3.72849592873841*^9}, {3.731976096240344*^9, 
   3.7319762267049303`*^9}, {3.731976277432869*^9, 3.7319762780290833`*^9}, {
   3.7319768020188913`*^9, 3.731976803777299*^9}, {3.731976892921598*^9, 
   3.731976916165578*^9}, {3.731976959563902*^9, 3.731976962085402*^9}, {
   3.731977155942281*^9, 3.73197716443357*^9}, {3.731977195279862*^9, 
   3.7319772065728207`*^9}, {3.731977279507853*^9, 3.731977284166617*^9}, {
   3.731977461555399*^9, 3.731977465980788*^9}, {3.731978006012163*^9, 
   3.731978013040636*^9}, {3.731978082421216*^9, 3.731978094010425*^9}, {
   3.731979039353709*^9, 3.731979039363929*^9}, {3.731979598523592*^9, 
   3.73197961490341*^9}, {3.73197972820308*^9, 3.7319797289924088`*^9}, {
   3.731980249144205*^9, 3.73198026694471*^9}, 3.731980373788886*^9, {
   3.7319804050810537`*^9, 3.731980445644969*^9}, {3.731980548309566*^9, 
   3.731980566185113*^9}, {3.731980610588462*^9, 3.7319806369962673`*^9}, {
   3.731980738391506*^9, 3.731980763895586*^9}, {3.731980818773868*^9, 
   3.731980857708199*^9}, {3.731980943731715*^9, 3.731981000719969*^9}, 
   3.731981067123608*^9, {3.732221099817436*^9, 3.7322211073866863`*^9}, {
   3.732237132742322*^9, 3.73223714782172*^9}, {3.732237266376129*^9, 
   3.732237271289744*^9}, {3.732273382440886*^9, 3.73227340932165*^9}, {
   3.732273491519849*^9, 3.732273491669429*^9}, {3.732394286439495*^9, 
   3.732394371996009*^9}, 3.755182267229639*^9, 3.755184973022751*^9, {
   3.75582209648076*^9, 3.7558220982190313`*^9}, {3.7558225635660257`*^9, 
   3.7558225772644787`*^9}, {3.7585221898099403`*^9, 3.7585221899906693`*^9}, 
   3.759140406004279*^9, {3.75914072046175*^9, 3.759140778591229*^9}, {
   3.759141110454555*^9, 3.7591411170112877`*^9}, 3.759142070148613*^9, {
   3.759926864600369*^9, 3.759926908779594*^9}, {3.7599440817309227`*^9, 
   3.759944089031756*^9}, {3.7599442652749147`*^9, 3.7599442925085506`*^9}, {
   3.759944468213972*^9, 3.759944470421031*^9}, {3.759944509678103*^9, 
   3.759944625568841*^9}, {3.759944680926206*^9, 3.759944704050845*^9}, {
   3.759944777100625*^9, 3.759944777332377*^9}, {3.7599452123441133`*^9, 
   3.759945212472487*^9}, 3.761151167307536*^9, 3.7613779187363462`*^9, {
   3.769182368428945*^9, 3.7691823684332743`*^9}, {3.769182447225265*^9, 
   3.769182447229724*^9}, 3.7697607053790417`*^9, 3.770438265000821*^9, {
   3.770721434046843*^9, 3.770721434486648*^9}, {3.7746909735763407`*^9, 
   3.774690974277783*^9}, 3.786090308105297*^9, 3.7860903405306396`*^9, {
   3.7861697725876913`*^9, 3.7861697838397303`*^9}, {3.7861698579109*^9, 
   3.7861698645494623`*^9}, {3.786257005170101*^9, 3.786257029661643*^9}, {
   3.786259628183383*^9, 3.78625966453019*^9}, {3.7862596972230663`*^9, 
   3.7862597130857067`*^9}, {3.786260599076335*^9, 3.7862606519012136`*^9}, {
   3.786260711471278*^9, 3.7862607825400476`*^9}, {3.786262427305735*^9, 
   3.7862624297094097`*^9}, {3.786262672446123*^9, 3.7862626757022247`*^9}, {
   3.7941372405540857`*^9, 3.794137240568924*^9}, 3.798128132723709*^9, {
   3.798232559307932*^9, 3.798232607817318*^9}, 3.8002032936287107`*^9, {
   3.800228806267811*^9, 3.8002288701566067`*^9}, {3.800229240434243*^9, 
   3.8002292588092833`*^9}, {3.800230257115494*^9, 3.800230271819356*^9}, {
   3.800230689976359*^9, 3.800230696507571*^9}, {3.800230861506472*^9, 
   3.8002308853617268`*^9}, {3.800231148936945*^9, 3.8002311628361807`*^9}, {
   3.800269707014142*^9, 3.80026972050751*^9}, {3.8004654280139236`*^9, 
   3.8004654993620977`*^9}, {3.807369332962606*^9, 3.807369333743342*^9}, {
   3.807369626808475*^9, 3.807369633505528*^9}, {3.807376451767674*^9, 
   3.807376461724361*^9}, {3.8154778674250393`*^9, 3.8154778786474133`*^9}, {
   3.8154783955502*^9, 3.8154784000536633`*^9}, {3.815479106257626*^9, 
   3.815479107656157*^9}, {3.829315987079705*^9, 3.829316001463244*^9}, {
   3.8443715468299847`*^9, 3.8443716002748623`*^9}, {3.844371792990033*^9, 
   3.844371817516902*^9}},ExpressionUUID->"d2cb9fb9-b075-4f94-b900-\
688385331578"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",ExpressionUUID->"30c5af73-ba1c-4af6-9538-b8a722987efd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "EcoEq", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"SolveOpts", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"(*", 
        RowBox[{"Reals", ","}], "*)"}], "}"}]}], ",", 
     RowBox[{"NSolveOpts", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"(*", 
        RowBox[{"Reals", ","}], "*)"}], 
       RowBox[{"Method", "\[Rule]", "\"\<EndomorphismMatrix\>\""}], "}"}]}], 
     ",", 
     RowBox[{"FindRootOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", 
     RowBox[{"PerCapita", "\[Rule]", "False"}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Chop", "\[Rule]", "True"}], ",", 
     RowBox[{"QSS", "\[Rule]", "False"}], ",", 
     RowBox[{"Time", "\[Rule]", "t"}], ",", 
     RowBox[{"Verbose", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.68788145061252*^9, {3.6885716849598207`*^9, 3.688571685061096*^9}, 
   3.6998307192614937`*^9, {3.699830756047996*^9, 3.699830757855876*^9}, {
   3.7146768525874043`*^9, 3.714676860849709*^9}, {3.714771544699765*^9, 
   3.714771544916628*^9}, 3.725140957991322*^9, {3.755266321588594*^9, 
   3.755266324656404*^9}, 3.7553697389508457`*^9, 3.755370573729661*^9, 
   3.75994589946877*^9, 3.7701200065679617`*^9, {3.770645589515258*^9, 
   3.770645593339229*^9}, {3.7982325865648317`*^9, 3.798232589900823*^9}, {
   3.817979839496348*^9, 3.817979840182137*^9}, {3.817986745774179*^9, 
   3.817986747250039*^9}, 3.817986827594922*^9, 3.8293159782581778`*^9, 
   3.8443704427471848`*^9, 
   3.844371439781605*^9},ExpressionUUID->"62650bd4-3a4a-496f-abe2-\
bdc744f23f19"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",
 CellChangeTimes->{{3.7085811611223593`*^9, 
  3.708581162674871*^9}},ExpressionUUID->"ccebbf96-2c87-4a05-add0-\
b464d2b85f22"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SolveEcoEq", "[", "args___", "]"}], ":=", 
   RowBox[{"EcoEq", "[", 
    RowBox[{"args", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Solve\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NSolveEcoEq", "[", "args___", "]"}], ":=", 
   RowBox[{"EcoEq", "[", 
    RowBox[{"args", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NSolve\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindEcoEq", "[", "args___", "]"}], ":=", 
   RowBox[{"EcoEq", "[", 
    RowBox[{"args", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<FindRoot\>\""}]}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.6954002528825893`*^9, 3.6954002987471733`*^9}, {
   3.77011897906663*^9, 3.770118987277129*^9}, 3.770119020875732*^9, 
   3.7981288000399113`*^9, 3.8073693346470118`*^9, {3.81438990695761*^9, 
   3.8143899131000957`*^9}, {3.8143899746384087`*^9, 3.814389993292912*^9}, {
   3.814390186424676*^9, 
   3.81439019161605*^9}},ExpressionUUID->"e8315929-585d-468b-9e79-\
ada0f9576d21"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"break", " ", "up", " ", "combined", " ", "traitsandpops"}], " ", 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox["FindEcoEq",
      Background->RGBColor[1, 0.5, 0.5]], "[", 
     RowBox[{
      RowBox[{"traitsandpops_", "?", "AttributesAndVariablesQ"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
    RowBox[{"FindEcoEq", "[", 
     RowBox[{
      RowBox[{"ExtractAttributes", "[", "traitsandpops", "]"}], ",", 
      RowBox[{"ExtractVariables", "[", "traitsandpops", "]"}], ",", "opts"}], 
     "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{
  3.81439019939126*^9, {3.8143902421553907`*^9, 3.814390244074677*^9}, {
   3.815478481861978*^9, 3.815478485461939*^9}, {3.817979848342904*^9, 
   3.817979848981175*^9}, {3.828997011857046*^9, 3.828997020848423*^9}, {
   3.82899707473906*^9, 
   3.828997115451098*^9}},ExpressionUUID->"321df1c3-7cca-40f2-b1aa-\
e39d93110c0d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Messages", "Subsubsection",
 CellChangeTimes->{{3.7695018515541153`*^9, 
  3.769501852845079*^9}},ExpressionUUID->"1dad2754-42dc-467a-bbc8-\
22bd04eace49"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EcoEq", "::", "noneq"}], "=", 
    "\"\<Can't find equilibrium of periodically forced model with FindRoot.  \
Give Time option or try FindEcoCycle instead.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EcoEq", "::", "nosol"}], "=", 
   "\"\<`1` couldn't find a solution.  Try FindEcoEq instead.\>\""}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.769501857001574*^9, 
  3.769501857579821*^9}},ExpressionUUID->"c34e4ea7-98c2-4845-8a9e-\
c1be44036552"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["FindEcoCycle", "Subsection",
 CellChangeTimes->{
  3.696151024358018*^9, {3.759467572559099*^9, 3.759467573063552*^9}, {
   3.759467647762108*^9, 
   3.759467648168881*^9}},ExpressionUUID->"a332ca41-ac01-457b-a20b-\
5939be3a8d03"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"6ebc727a-2f70-4fad-a680-\
d95dbdd9e7ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindEcoCycle", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<FindEcoCycle[\!\(\*StyleBox[\"init\", \"TI\"]\)] finds an ecological \
limit cycle using initial guess \!\(\*StyleBox[\"init\", \"TI\"]\).\n\
FindEcoCycle[\!\(\*StyleBox[\"attributes\", \"TI\"]\), \
\!\(\*StyleBox[\"init\", \"TI\"]\)] uses trait values/interaction \
coefficients \!\(\*StyleBox[\"attributes\", \"TI\"]\).\>\""}], ";"}]], "Code",\

 CellChangeTimes->{{3.769483956866253*^9, 3.769483959327578*^9}, {
  3.8073780235162077`*^9, 
  3.8073780540823402`*^9}},ExpressionUUID->"a1c807ba-dca3-4583-8cb9-\
1488e7f05889"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"d492efca-cfe9-41e8-a342-\
ae3f157b957c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindEcoCycle", "[", 
    RowBox[{
     RowBox[{"attributesin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "AttributesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"variables", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<FindEcoCycle\>\"", "]"}]}], ",", "\n", 
       
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "period", ",", "method", ",", "monitor", ",", 
       "printtrace", ",", "\n", "findrootopts", ",", "ecosimopts", ",", 
       "maxiterations", ",", "accuracygoal", ",", "precisiongoal", ",", 
       "logged", ",", "fixed", ",", "\n", "triggervar", ",", "warmup1", ",", 
       "warmup2", ",", "warmup3", ",", "wheneventopts", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "attributes", 
       ",", "nonfixedvars", ",", "fixedvars", ",", "extrema", ",", 
       "triggerpos", ",", "triggerval", ",", "max", ",", "ics2", ",", "ics3", 
       ",", "ics4", ",", "diff", ",", "tmax", ",", "eq", ",", "\n", "ic", ",",
        "nb", ",", "thing", ",", "eqns", ",", "unks", ",", "logd", ",", 
       "vars", ",", "unksics", ",", "ics", ",", "res", ",", "sol", ",", 
       "per"}], "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"attributes", "=", 
         RowBox[{"FixAttributes", "[", "attributesin", "]"}]}], ";", "\n", 
        "\n", 
        RowBox[{"$FindEcoCycleSteps", "=", "0"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoCycle", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoCycle", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"monitor", "=", 
         RowBox[{"OptionValue", "[", "Monitor", "]"}]}], ";", "\n", 
        RowBox[{"printtrace", "=", 
         RowBox[{"OptionValue", "[", "PrintTrace", "]"}]}], ";", "\n", 
        RowBox[{"period", "=", 
         RowBox[{"OptionValue", "[", "Period", "]"}]}], ";", "\n", 
        RowBox[{"method", "=", 
         RowBox[{"OptionValue", "[", "Method", "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"method", "===", "Automatic"}], ",", "\n", "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], "&&", 
             RowBox[{"modelperiod", "\[Equal]", "0"}]}], ",", 
            RowBox[{"method", "=", "\"\<EcoSim\>\""}], ",", 
            RowBox[{"method", "=", "\"\<FixedPoint\>\""}]}], "]"}]}], "]"}], 
        ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: method=\>\"", ",", "method"}], "]"}]}],
          "]"}], ";", "\n", 
        RowBox[{"findrootopts", "=", 
         RowBox[{"OptionValue", "[", "FindRootOpts", "]"}]}], ";", "\n", 
        RowBox[{"ecosimopts", "=", 
         RowBox[{"OptionValue", "[", "EcoSimOpts", "]"}]}], ";", "\n", 
        RowBox[{"maxiterations", "=", 
         RowBox[{"OptionValue", "[", "MaxIterations", "]"}]}], ";", "\n", 
        RowBox[{"accuracygoal", "=", 
         RowBox[{"OptionValue", "[", "AccuracyGoal", "]"}]}], ";", "\n", 
        RowBox[{"triggervar", "=", 
         RowBox[{"OptionValue", "[", "TriggerVariable", "]"}]}], ";", "\n", 
        RowBox[{"warmup1", "=", 
         RowBox[{"OptionValue", "[", "WarmUp", "]"}]}], ";", "\n", 
        RowBox[{"warmup2", "=", 
         RowBox[{"OptionValue", "[", "WarmUp2", "]"}]}], ";", "\n", 
        RowBox[{"warmup3", "=", 
         RowBox[{"OptionValue", "[", "WarmUp3", "]"}]}], ";", "\n", 
        RowBox[{"tmax", "=", 
         RowBox[{"OptionValue", "[", "TMax", "]"}]}], ";", "\n", 
        RowBox[{"wheneventopts", "=", 
         RowBox[{"OptionValue", "[", "WhenEventOpts", "]"}]}], ";", "\n", 
        RowBox[{"logged", "=", 
         RowBox[{"OptionValue", "[", "Logged", "]"}]}], ";", "\n", 
        RowBox[{"fixed", "=", 
         RowBox[{"OptionValue", "[", "Fixed", "]"}]}], ";", "\n", 
        RowBox[{"fixedvars", "=", 
         RowBox[{"fixed", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: fixedvars=\>\"", ",", "fixedvars"}], 
           "]"}]}], "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<fixed=\>\"", ",", "fixed"}], "]"}], ";"}], "*)"}], 
        "\n", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"Set\[ScriptCapitalN]", "[", "attributes", "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"set", " ", "up", " ", "thing"}], " ", "&"}], " ", 
          "unks"}], " ", "*)"}], "\n", 
        RowBox[{"nonfixedvars", "=", 
         RowBox[{"variables", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "build", " ", "various", " ", "lists", " ", "of", " ", "vars"}], " ",
          "*)"}], "\n", 
        RowBox[{"unks", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"eq", "[", "var", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"var", ",", "nonfixedvars"}], "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"vars", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"logged", "&&", 
              RowBox[{
               RowBox[{"comptype", "[", "var", "]"}], "===", 
               "\"\<Extensive\>\""}]}], ",", 
             RowBox[{"Log", "[", "var", "]"}], ",", "var"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"var", ",", "nonfixedvars"}], "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"ics", "=", 
         RowBox[{"vars", "/.", "variables"}]}], ";", "\n", 
        RowBox[{"unksics", "=", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"unks", ",", "ics"}], "}"}], "]"}]}], ";", "\n", 
        RowBox[{"logd", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"logged", "&&", 
              RowBox[{
               RowBox[{"comptype", "[", "var", "]"}], "===", 
               "\"\<Extensive\>\""}]}], ",", "True", ",", "False"}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"var", ",", "nonfixedvars"}], "}"}]}], "]"}]}], ";", "\n",
         "\n", 
        RowBox[{"(*", "\n", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<unks=\>\"", ",", "unks"}], "]"}], ";", "\n", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<unksics=\>\"", ",", "unksics"}], "]"}], ";", "\n", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<ics=\>\"", ",", "ics"}], "]"}], ";", "\n", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<logd=\>\"", ",", "logd"}], "]"}], ";", "\n", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<vars=\>\"", ",", "vars"}], "]"}], ";"}], "\n", "*)"}],
         "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "\"\<EcoSim\>\"", " ", "method", " ", "for", " ", "unforced", " ", 
          "ContinuousTime", " ", "models"}], " ", "*)"}], "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"method", "===", "\"\<EcoSim\>\""}], ",", "\n", "\n", "\t", 
          
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], "&&", 
                RowBox[{"modelperiod", "\[Equal]", "0"}]}], ")"}]}], ",", 
             RowBox[{
              RowBox[{"Message", "[", 
               RowBox[{"FindEcoCycle", "::", "noecosim"}], "]"}], ";", 
              RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
           "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"triggervar", "===", "Automatic"}], ",", 
             RowBox[{"triggervar", "=", 
              RowBox[{
              "nonfixedvars", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}]}]}], "]"}], ";", "\n", "\t", 
           RowBox[{"triggerpos", "=", 
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{"nonfixedvars", ",", "triggervar"}], "]"}], 
             "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
           "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "warmup", " ", "#1", " ", "to", " ", "get", " ", "on", " ", 
             "limit", " ", "cycle"}], " ", "*)"}], "\n", "\t", 
           RowBox[{"ics2", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"warmup1", ">", "0"}], ",", "\n", "\t\t", 
              RowBox[{"FinalSlice", "[", 
               RowBox[{"EcoSim", "[", 
                RowBox[{"attributes", ",", "variables", ",", "warmup1", ",", 
                 RowBox[{"Fixed", "\[Rule]", "fixed"}], ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"Sequence", "@@", "ecosimopts"}], "]"}]}], "]"}], 
               "]"}], ",", "\n", "\t\t", "variables"}], "]"}]}], ";", "\n", 
           "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: ics2=\>\"", ",", "ics2"}], "]"}]}], 
            "]"}], ";", "\n", "\t", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "warmup", " ", "#2", " ", "to", " ", "find", " ", "maxima"}], " ",
             "*)"}], "\n", "\t", 
           RowBox[{"extrema", "=", 
            RowBox[{"{", "}"}]}], ";", "\n", "\t", 
           RowBox[{"EcoSim", "[", 
            RowBox[{"attributes", ",", "ics2", ",", "warmup2", ",", 
             RowBox[{"WhenEvents", "\[Rule]", 
              RowBox[{"{", "\n", "\t\t\t", 
               RowBox[{
                RowBox[{"WhenEvent", "[", 
                 RowBox[{"event", ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"extrema", ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"var", "[", "t", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"var", ",", "nonfixedvars"}], "}"}]}], "]"}]}], 
                   "]"}], ",", 
                  RowBox[{"Evaluate", "[", 
                   RowBox[{"Sequence", "@@", "wheneventopts"}], "]"}]}], 
                 "]"}], "\n", "\t\t\t", "/.", 
                RowBox[{"event", "\[Rule]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"triggervar", "'"}], "[", "t", "]"}], "\[Equal]", 
                   "0"}], ")"}]}]}], "}"}]}], ",", 
             RowBox[{"Fixed", "\[Rule]", "fixed"}], ",", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"Sequence", "@@", "ecosimopts"}], "]"}]}], "]"}], ";", 
           "\n", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"extrema", "\[Equal]", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{
              RowBox[{"Message", "[", 
               RowBox[{"FindEcoCycle", "::", "nomaxima"}], "]"}], ";", 
              RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
           "\n", "\t", 
           RowBox[{"max", "=", 
            RowBox[{"Last", "@", 
             RowBox[{"Sort", "[", 
              RowBox[{"extrema", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{
                 "#1", "\[LeftDoubleBracket]", "triggerpos", 
                  "\[RightDoubleBracket]"}], "<", 
                 RowBox[{
                 "#2", "\[LeftDoubleBracket]", "triggerpos", 
                  "\[RightDoubleBracket]"}]}], "&"}]}], "]"}]}]}], ";", "\n", 
           "\t", 
           RowBox[{"ics3", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
               "nonfixedvars", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}], "\[Rule]", 
               RowBox[{
               "max", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"Length", "[", "nonfixedvars", "]"}]}], "}"}]}], 
             "]"}]}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: ics3=\>\"", ",", "ics3"}], "]"}]}], 
            "]"}], ";", "\n", "\t", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "warmup", " ", "#3", " ", "to", " ", "move", " ", "a", " ", "wee",
              " ", "bit", " ", "beyond", " ", "the", " ", "maximum"}], " ", 
            "*)"}], "\n", "\t", 
           RowBox[{"ics4", "=", 
            RowBox[{"FinalSlice", "[", 
             RowBox[{"EcoSim", "[", 
              RowBox[{"attributes", ",", "ics3", ",", "warmup3", ",", 
               RowBox[{"Fixed", "\[Rule]", "fixed"}], ",", 
               RowBox[{"Evaluate", "[", 
                RowBox[{"Sequence", "@@", "ecosimopts"}], "]"}]}], "]"}], 
             "]"}]}], ";", "\n", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: ics4=\>\"", ",", "ics4"}], "]"}]}], 
            "]"}], ";", "\n", "\n", "\t", 
           RowBox[{"Do", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"triggerval", "=", 
               RowBox[{"triggervar", "/.", "ics4"}]}], ";", "\n", "\n", 
              "\t\t", 
              RowBox[{"sol", "=", 
               RowBox[{"EcoSim", "[", 
                RowBox[{"attributes", ",", "ics4", ",", "tmax", ",", 
                 RowBox[{"WhenEvents", "\[Rule]", 
                  RowBox[{"{", "\n", "\t\t\t", 
                   RowBox[{
                    RowBox[{"WhenEvent", "[", 
                    RowBox[{"event", ",", "\"\<StopIntegration\>\"", ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "wheneventopts"}], "]"}]}], 
                    "]"}], "\n", "\t\t\t", "/.", 
                    RowBox[{"event", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"triggervar", "[", "t", "]"}], "<", 
                    "triggerval"}], ")"}]}]}], "}"}]}], ",", 
                 RowBox[{"Fixed", "\[Rule]", "fixed"}], ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"Sequence", "@@", "ecosimopts"}], "]"}]}], "]"}]}], 
              ";", "\n", "\n", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Print", "[", 
                 RowBox[{"Show", "[", "\n", 
                  RowBox[{
                   RowBox[{"PlotDynamics", "[", 
                    RowBox[{"sol", ",", 
                    RowBox[{"{", "Global`x", "}"}], ",", 
                    RowBox[{"PlotRange", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0.8221", ",", "0.82215"}], "}"}]}]}], "]"}], ",",
                    "\n", 
                   RowBox[{"Plot", "[", 
                    RowBox[{"triggerval", ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "0", ",", 
                    RowBox[{"FinalTime", "[", "sol", "]"}]}], "}"}]}], 
                    "]"}]}], "\n", "]"}], "]"}], ";"}], "*)"}], "\n", "\n", 
              "\t\t", 
              RowBox[{"diff", "=", 
               RowBox[{"Sum", "[", 
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"var", "/.", 
                    RowBox[{"FinalSlice", "[", "sol", "]"}]}], ")"}], "-", 
                   RowBox[{"(", 
                    RowBox[{"var", "/.", "ics4"}], ")"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"var", ",", "nonfixedvars"}], "}"}]}], "]"}]}], ";",
               "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"diff", "<", 
                 RowBox[{"10", "^", 
                  RowBox[{"-", "accuracygoal"}]}]}], ",", 
                RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\n", "\n", "\t\t", 
              RowBox[{"ics4", "=", 
               RowBox[{"FinalSlice", "[", "sol", "]"}]}], ";"}], "\n", "\t", 
             ",", 
             RowBox[{"{", "maxiterations", "}"}]}], "]"}], ";", "\n", "\n", 
           "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"diff", ">", 
              RowBox[{"10", "^", 
               RowBox[{"-", "accuracygoal"}]}]}], ",", 
             RowBox[{"Message", "[", 
              RowBox[{
               RowBox[{"FindEcoCycle", "::", "cvmit"}], ",", 
               "maxiterations"}], "]"}]}], "]"}], ";", "\n", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{"make", " ", "InterpolatingFunctions", " ", "Periodic"}], 
            " ", "*)"}], "\n", "\t", 
           RowBox[{"sol", "=", 
            RowBox[{"sol", "/.", 
             RowBox[{"if_InterpolatingFunction", "\[Rule]", 
              RowBox[{
              "MakeInterpolatingFunctionPeriodic", "[", "if", "]"}]}]}]}], 
           ";", "\n", "\t", "\n", "\t", 
           RowBox[{"Return", "[", 
            RowBox[{"Sort", "[", "sol", "]"}], "]"}], ";"}]}], "\n", "]"}], 
        ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "\"\<FixedPoint\>\"", " ", "or", " ", "\"\<FindRoot\>\"", " ", 
          "method"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], "&&", 
            RowBox[{"modelperiod", "\[Equal]", "0"}]}], ")"}], ",", "\n", 
          "\t", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"unks", ",", "per"}], "]"}], ";", "\n", "\t", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"unksics", ",", 
             RowBox[{"{", 
              RowBox[{"per", ",", "period"}], "}"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"ics", ",", "period"}], "]"}], ";"}], "\n", ",", "\n", 
          "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"period", "===", "Automatic"}], ",", 
             RowBox[{"per", "=", "modelperiod"}], ",", 
             RowBox[{"per", "=", "period"}]}], "]"}], ";"}]}], "\n", "]"}], 
        ";", "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<unks=\>\"", ",", "unks"}], "]"}], ";", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<unksics=\>\"", ",", "unksics"}], "]"}], ";", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<ics=\>\"", ",", "ics"}], "]"}], ";"}], "*)"}], "\n", 
        "\n", 
        RowBox[{"If", "[", 
         RowBox[{"monitor", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"nb", "=", 
            RowBox[{"CreateDialog", "[", 
             RowBox[{
              RowBox[{"{", "\n", "\t\t", 
               RowBox[{
                RowBox[{"TextCell", "[", "\"\<evaluation: \>\"", "]"}], ",", 
                "\n", "\t\t", 
                RowBox[{"Dynamic", "[", "$FindEcoCycleSteps", "]"}], ",", 
                "\n", "\t\t", 
                RowBox[{"TextCell", "[", "\"\<vars:\>\"", "]"}], ",", "\n", 
                "\t\t", 
                RowBox[{"Dynamic", "[", 
                 RowBox[{"FinalSlice", "[", "sol", "]"}], "]"}]}], "\n", "\t",
                "}"}], ",", "\n", "\t", 
              RowBox[{
              "WindowTitle", "\[Rule]", "\"\<FindEcoCycle Progress...\>\""}], 
              ",", 
              RowBox[{"WindowSize", "\[Rule]", "All"}]}], "]"}]}], ";"}]}], 
         "\n", "]"}], ";", "\n", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"function", " ", "to", " ", "advance", " ", "model"}], " ", 
         "*)"}], "\n", "\n", 
        RowBox[{
         RowBox[{"thing", "[", 
          RowBox[{"ps_", "?", "NumericListQ"}], "]"}], ":=", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"popz", ",", "rez"}], "}"}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{"$FindEcoCycleSteps", "++"}], ";", "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], "&&", 
                RowBox[{"modelperiod", "\[Equal]", "0"}]}], ")"}], ",", 
              RowBox[{"tmax", "=", 
               RowBox[{"ps", "\[LeftDoubleBracket]", 
                RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
              RowBox[{"tmax", "=", "per"}]}], "]"}], ";", "\n", "\t", 
            RowBox[{"popz", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                 "logd", "\[LeftDoubleBracket]", "i", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                  RowBox[{
                  "nonfixedvars", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}], "\[Rule]", 
                  RowBox[{"E", "^", 
                   RowBox[{
                   "ps", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}]}], ",", 
                 RowBox[{
                  RowBox[{
                  "nonfixedvars", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}], "\[Rule]", 
                  RowBox[{
                  "ps", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}]}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"Length", "[", "nonfixedvars", "]"}]}], "}"}]}], 
              "]"}]}], ";", "\n", "\t", 
            RowBox[{"sol", "=", 
             RowBox[{"EcoSim", "[", 
              RowBox[{"attributes", ",", "popz", ",", "tmax", ",", 
               RowBox[{"Fixed", "\[Rule]", "fixed"}], ",", 
               RowBox[{"Evaluate", "[", 
                RowBox[{"Sequence", "@@", "ecosimopts"}], "]"}], ",", 
               RowBox[{"Logged", "\[Rule]", "logged"}]}], "]"}]}], ";", "\n", 
            "\t", 
            RowBox[{"rez", "=", 
             RowBox[{"vars", "/.", 
              RowBox[{"FinalSlice", "[", "sol", "]"}]}]}], ";", "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], "&&", 
                RowBox[{"modelperiod", "\[Equal]", "0"}]}], ")"}], ",", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"rez", ",", 
                RowBox[{"ps", "\[LeftDoubleBracket]", 
                 RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
             "]"}], ";", "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{"printtrace", ",", 
              RowBox[{"Print", "[", 
               RowBox[{"$FindEcoCycleSteps", ",", "\"\<: \>\"", ",", 
                RowBox[{"FinalSlice", "[", "sol", "]"}]}], "]"}]}], "]"}], 
            ";", "\n", "\t", 
            RowBox[{"Return", "[", "rez", "]"}], ";"}]}], "\n", "]"}]}], ";", 
        "\n", "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"method", "\[Equal]", "\"\<FindRoot\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"Global`debug", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: Method FindRoot\>\""}], "]"}]}], 
            "]"}], ";", "\n", "\t", 
           RowBox[{"res", "=", 
            RowBox[{"FindRoot", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"thing", "[", "unks", "]"}], "\[Equal]", "unks"}], ",",
               "unksics", ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "findrootopts"}], "]"}]}], "]"}]}]}],
           "\n", ",", "\n", "\t", 
          RowBox[{"method", "\[Equal]", "\"\<FixedPoint\>\""}], ",", "\n", 
          "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"Global`debug", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: Method FixedPoint\>\""}], "]"}]}], 
            "]"}], ";", "\n", "\t", 
           RowBox[{"res", "=", 
            RowBox[{"FixedPoint", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"thing", "[", "#", "]"}], "&"}], ",", "ics", ",", 
              "maxiterations", ",", 
              RowBox[{"SameTest", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Max", "[", 
                   RowBox[{"Abs", "[", 
                    RowBox[{"#1", "-", "#2"}], "]"}], "]"}], "<", 
                  RowBox[{"10", "^", 
                   RowBox[{"-", "accuracygoal"}]}]}], "&"}], ")"}]}]}], 
             "]"}]}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"$FindEcoCycleSteps", "\[Equal]", "maxiterations"}], ",", 
             RowBox[{
              RowBox[{"Message", "[", 
               RowBox[{
                RowBox[{"FindEcoCycle", "::", "cvmit"}], ",", 
                "maxiterations"}], "]"}], ";", 
              RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}]}], "\n", ",",
           "\n", "\t", "Else", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"FindEcoCycle", "::", "badmtd"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "\n", "]"}], ";", 
        "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], ",", 
          RowBox[{"(*", " ", 
           RowBox[{"drop", " ", "last", " ", "point"}], " ", "*)"}], "\n", 
          "\t", 
          RowBox[{"sol", "=", 
           RowBox[{"ReplaceAll", "[", 
            RowBox[{"sol", ",", "\n", "\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"var_", "\[Rule]", "td_List"}], ")"}], 
                "\[RuleDelayed]", 
                RowBox[{"(", 
                 RowBox[{"var", "\[Rule]", 
                  RowBox[{"Drop", "[", 
                   RowBox[{"td", ",", 
                    RowBox[{"-", "1"}]}], "]"}]}], ")"}]}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"var_", "\[Rule]", "td_TemporalData"}], ")"}], 
                "\[Rule]", 
                RowBox[{"(", 
                 RowBox[{"var", "\[Rule]", 
                  RowBox[{"TimeSeriesWindow", "[", 
                   RowBox[{"td", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"per", "-", "1"}]}], "}"}]}], "]"}]}], ")"}]}]}], 
              "}"}]}], "]"}]}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"make", " ", "InterpolatingFunctions", " ", "Periodic"}], 
         " ", "*)"}], "\n", 
        RowBox[{"sol", "=", 
         RowBox[{"sol", "/.", 
          RowBox[{"if_InterpolatingFunction", "\[Rule]", 
           RowBox[{
           "MakeInterpolatingFunctionPeriodic", "[", "if", "]"}]}]}]}], ";", 
        "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"return", " ", "answer"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"monitor", ",", 
          RowBox[{"NotebookClose", "[", "nb", "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"Return", "[", 
         RowBox[{"Sort", "[", "sol", "]"}], "]"}], ";"}]}], "\n", "\n", 
      "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.688409483427692*^9, 3.688409483490201*^9}, {
   3.688571685544544*^9, 3.688571686031192*^9}, {3.688571757730043*^9, 
   3.688571758684969*^9}, {3.688571805656735*^9, 3.6885718057457237`*^9}, {
   3.688573243511567*^9, 3.688573312726746*^9}, {3.68857334951993*^9, 
   3.68857337143581*^9}, {3.688573418402585*^9, 3.688573424323292*^9}, {
   3.6885735992431517`*^9, 3.6885736033795643`*^9}, {3.688585460061479*^9, 
   3.688585629881029*^9}, {3.688597927452478*^9, 3.688597943713161*^9}, {
   3.68863731764954*^9, 3.6886373193347473`*^9}, 3.6938697174565372`*^9, {
   3.696151024461401*^9, 3.6961510245436087`*^9}, {3.6962556610345163`*^9, 
   3.696255701056315*^9}, {3.696256002043228*^9, 3.6962560026903563`*^9}, {
   3.6965516619211607`*^9, 3.696551674716996*^9}, {3.696586957365073*^9, 
   3.696586963772579*^9}, 3.6965894825591593`*^9, {3.70050015501549*^9, 
   3.700500202416216*^9}, {3.700500338449073*^9, 3.700500344743586*^9}, 
   3.70050065600744*^9, {3.708837355657104*^9, 3.708837356866313*^9}, 
   3.7088374153957148`*^9, {3.708838248905143*^9, 3.7088382503096943`*^9}, {
   3.709336736257268*^9, 3.709336736605093*^9}, {3.710105958092224*^9, 
   3.7101059596767607`*^9}, 3.710240067919877*^9, 3.710240498114812*^9, {
   3.710254525253208*^9, 3.7102545299975367`*^9}, {3.710254561219561*^9, 
   3.710254577259325*^9}, {3.710264970573503*^9, 3.710264981942604*^9}, {
   3.710324441544318*^9, 3.710324444184022*^9}, 3.712738534709543*^9, 
   3.716472208152829*^9, 3.7164722624616127`*^9, {3.7164724298837852`*^9, 
   3.716472571120632*^9}, {3.716472614943459*^9, 3.716472688644197*^9}, {
   3.716472761738646*^9, 3.716472763571691*^9}, 3.7164744204127893`*^9, {
   3.716474603689702*^9, 3.716474654489892*^9}, {3.716474707125437*^9, 
   3.716474707234383*^9}, {3.7164747583618937`*^9, 3.7164747730060253`*^9}, {
   3.7164748155567713`*^9, 3.716474828179364*^9}, {3.716474859867209*^9, 
   3.716474889995832*^9}, {3.716476287763636*^9, 3.716476298528805*^9}, {
   3.716476425366591*^9, 3.716476426275856*^9}, {3.7164768230822372`*^9, 
   3.7164768256755333`*^9}, {3.716477654758424*^9, 3.7164776586398907`*^9}, {
   3.71647770527969*^9, 3.7164777084613457`*^9}, {3.7164779878770247`*^9, 
   3.7164779989952393`*^9}, {3.716478031682006*^9, 3.716478035703961*^9}, {
   3.716478091708843*^9, 3.716478126262333*^9}, {3.716478355503602*^9, 
   3.716478360686537*^9}, {3.716478822133511*^9, 3.7164788330819674`*^9}, {
   3.7164788762715816`*^9, 3.7164788821884623`*^9}, {3.716478941340193*^9, 
   3.7164789483120728`*^9}, 3.716479009464747*^9, {3.716479062699312*^9, 
   3.716479065386785*^9}, 3.716479196905719*^9, {3.716479340621706*^9, 
   3.716479348952406*^9}, {3.716479558153141*^9, 3.716479575617988*^9}, {
   3.716479789326672*^9, 3.7164798074204073`*^9}, {3.7164798675011797`*^9, 
   3.7164798923879623`*^9}, {3.716479999782887*^9, 3.716480026858794*^9}, {
   3.7164800612162447`*^9, 3.7164802246480913`*^9}, {3.71648026038514*^9, 
   3.716480260529643*^9}, {3.7164803384350243`*^9, 3.716480355366371*^9}, {
   3.7164807448049717`*^9, 3.716480783011972*^9}, {3.716480889919169*^9, 
   3.7164809079139233`*^9}, {3.716485301687406*^9, 3.716485359710446*^9}, {
   3.716485422246792*^9, 3.7164854536373377`*^9}, {3.716485510520035*^9, 
   3.716485528757742*^9}, 3.716485570554076*^9, {3.71648565390683*^9, 
   3.7164856642171164`*^9}, {3.7164857701308002`*^9, 3.7164857778086*^9}, {
   3.7164858479209547`*^9, 3.7164858490503283`*^9}, {3.71648596397782*^9, 
   3.716486060481572*^9}, {3.716486097329486*^9, 3.716486185829164*^9}, {
   3.716486252501725*^9, 3.7164862793123217`*^9}, {3.716486394673814*^9, 
   3.716486405871784*^9}, {3.716486509398635*^9, 3.7164865211678267`*^9}, {
   3.716486557912966*^9, 3.716486572854937*^9}, {3.716486646500461*^9, 
   3.716486673891675*^9}, {3.716495052408255*^9, 3.716495068695197*^9}, {
   3.71649520600565*^9, 3.7164952109426003`*^9}, {3.716499623610242*^9, 
   3.7164996626348953`*^9}, {3.716500194677726*^9, 3.716500218487688*^9}, {
   3.716500248816063*^9, 3.71650026181703*^9}, {3.716500359672822*^9, 
   3.716500417829282*^9}, {3.71650045880527*^9, 3.716500504453225*^9}, {
   3.716500855206152*^9, 3.716500915667695*^9}, {3.716501057774756*^9, 
   3.7165011005487823`*^9}, {3.7165011317607737`*^9, 3.716501370504352*^9}, {
   3.7165014111926727`*^9, 3.716501422853217*^9}, 3.716501544008366*^9, 
   3.716501574576253*^9, {3.7165016054427834`*^9, 3.716501626140924*^9}, {
   3.716501665261179*^9, 3.716501728016232*^9}, 3.716501925461729*^9, {
   3.716501960898007*^9, 3.716502055820415*^9}, {3.716502271547961*^9, 
   3.716502285082958*^9}, {3.716502429648761*^9, 3.7165024362029552`*^9}, {
   3.7165026805243597`*^9, 3.716502686120676*^9}, {3.716502798398934*^9, 
   3.716502861761696*^9}, {3.716502932166183*^9, 3.71650305229525*^9}, {
   3.716503187226605*^9, 3.716503216730995*^9}, {3.7165033124247017`*^9, 
   3.716503378259006*^9}, {3.7165035245858603`*^9, 3.716503560673163*^9}, {
   3.716504326875655*^9, 3.716504329651046*^9}, {3.716504377851956*^9, 
   3.7165043780904493`*^9}, {3.716508606145426*^9, 3.7165086104766197`*^9}, {
   3.716508702516472*^9, 3.716508704311409*^9}, {3.716508847932372*^9, 
   3.7165088816720877`*^9}, {3.716508916676153*^9, 3.716508919757874*^9}, {
   3.7165090562682734`*^9, 3.716509059413908*^9}, {3.716509098846401*^9, 
   3.7165091014293327`*^9}, 3.71650933878131*^9, {3.7165474936071873`*^9, 
   3.716547498965281*^9}, {3.716547637761294*^9, 3.716547641862523*^9}, {
   3.716547674231841*^9, 3.716547710047244*^9}, {3.716547877739072*^9, 
   3.716547890057181*^9}, {3.716548016299821*^9, 3.716548090626136*^9}, 
   3.716548137981988*^9, 3.716548438116997*^9, {3.716548587440889*^9, 
   3.7165485911896963`*^9}, {3.7165688197787447`*^9, 3.716568874942706*^9}, {
   3.716593677544931*^9, 3.7165936901442013`*^9}, {3.716593898717751*^9, 
   3.716593934245953*^9}, {3.716653785742721*^9, 3.716653801073248*^9}, 
   3.716932434458931*^9, 3.7170735728694553`*^9, 3.717073603132843*^9, {
   3.7182972022570333`*^9, 3.718297227881751*^9}, {3.718297356680283*^9, 
   3.718297357869113*^9}, {3.721849222862669*^9, 3.721849243403112*^9}, {
   3.7218494180722847`*^9, 3.721849422944262*^9}, 3.721849615598837*^9, {
   3.722083847427064*^9, 3.722083857989962*^9}, {3.7220838971718493`*^9, 
   3.722083934145179*^9}, {3.7251409580049458`*^9, 3.7251409580287323`*^9}, {
   3.725141105186304*^9, 3.725141107196693*^9}, {3.7251411525703707`*^9, 
   3.725141156097621*^9}, {3.725141287782205*^9, 3.7251413003525248`*^9}, 
   3.72514136689001*^9, {3.725141965241803*^9, 3.725141965252255*^9}, {
   3.7284814555135508`*^9, 3.72848146402463*^9}, 3.728481719584621*^9, {
   3.732569328557575*^9, 3.732569329748412*^9}, 3.732570110087345*^9, {
   3.75581757865484*^9, 3.755817600257896*^9}, {3.759250865216872*^9, 
   3.759250868624638*^9}, {3.7599374579291077`*^9, 3.759937463723415*^9}, {
   3.7599972101398783`*^9, 3.759997212786347*^9}, 3.759997353163341*^9, {
   3.75999746897092*^9, 3.7599974801029882`*^9}, 3.759997567074525*^9, {
   3.760001214312299*^9, 3.76000122168119*^9}, {3.7600013059759083`*^9, 
   3.76000130609894*^9}, 3.760344746213518*^9, {3.760344864123468*^9, 
   3.76034488828549*^9}, {3.760344918630393*^9, 3.760344968309173*^9}, {
   3.760345421680477*^9, 3.760345421841702*^9}, 3.7603465439423513`*^9, {
   3.7609331452956457`*^9, 3.760933146151782*^9}, {3.7695218354877043`*^9, 
   3.769521835526537*^9}, 3.769760705412587*^9, 3.770438265017709*^9, {
   3.770721434643023*^9, 3.770721434867817*^9}, {3.774586047157036*^9, 
   3.774586050508872*^9}, {3.774586322117189*^9, 3.77458632411334*^9}, {
   3.774586393774926*^9, 3.774586419855233*^9}, {3.7745865227750683`*^9, 
   3.7745865500446873`*^9}, 3.774586613611779*^9, {3.774587375872781*^9, 
   3.774587376930497*^9}, {3.774588875800535*^9, 3.774588878298626*^9}, {
   3.7745891215430117`*^9, 3.77458912234702*^9}, {3.7745891589226913`*^9, 
   3.774589188964271*^9}, {3.774589241220145*^9, 3.774589241512347*^9}, {
   3.7745959696350393`*^9, 3.774596033576915*^9}, {3.774596091513235*^9, 
   3.774596113312613*^9}, {3.774596147012094*^9, 3.7745962195144587`*^9}, {
   3.774596319428183*^9, 3.7745963535968647`*^9}, {3.774596608590651*^9, 
   3.774596608933728*^9}, {3.777400634945359*^9, 3.777400640025947*^9}, {
   3.777400833055003*^9, 3.777400833247993*^9}, {3.7774010859305353`*^9, 
   3.77740114847721*^9}, {3.7774011980729733`*^9, 3.777401254891182*^9}, {
   3.7774012855814857`*^9, 3.777401386895342*^9}, {3.77740145477722*^9, 
   3.777401536115814*^9}, {3.777401692166254*^9, 3.777401693625977*^9}, {
   3.777401758615006*^9, 3.7774017627831907`*^9}, {3.777441357775577*^9, 
   3.777441391370056*^9}, {3.777441429042015*^9, 3.7774414336048822`*^9}, {
   3.7774503675344133`*^9, 3.7774503798970613`*^9}, {3.7774504170886106`*^9, 
   3.7774504173414507`*^9}, {3.794137240589136*^9, 3.794137240629929*^9}, 
   3.7981281327387657`*^9, {3.798815034829061*^9, 3.7988150378861217`*^9}, {
   3.798815071614266*^9, 3.798815081005435*^9}, {3.79881600771131*^9, 
   3.7988160078786993`*^9}, {3.800128258782093*^9, 3.8001282876066017`*^9}, 
   3.8002723176135063`*^9, {3.800465579987688*^9, 3.8004656537623158`*^9}, {
   3.8073693359339657`*^9, 3.8073693367679453`*^9}, {3.8073696384588118`*^9, 
   3.8073696486800623`*^9}, {3.815509596113768*^9, 3.8155096227208853`*^9}, {
   3.815509698995792*^9, 3.8155097009215117`*^9}, {3.815509787396545*^9, 
   3.815509821509323*^9}, 3.8155099256007433`*^9, {3.815510017416369*^9, 
   3.815510036454534*^9}},ExpressionUUID->"3a80915d-64fa-41c1-8a5a-\
641e71aadaaf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",ExpressionUUID->"3afa9d04-d1c1-43bf-8603-560894ae1a7a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "FindEcoCycle", "]"}], "=", 
   RowBox[{"{", "\n", 
    RowBox[{
     RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"FindRootOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"EcoSimOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"MaxIterations", "\[Rule]", "100"}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "6"}], ",", 
     RowBox[{"Logged", "\[Rule]", "False"}], ",", "\n", 
     RowBox[{"WarmUp", "\[Rule]", "1000"}], ",", 
     RowBox[{"WarmUp2", "\[Rule]", "100"}], ",", 
     RowBox[{"WarmUp3", "\[Rule]", "0.1"}], ",", 
     RowBox[{"TMax", "\[Rule]", "1000"}], ",", 
     RowBox[{"TriggerVariable", "\[Rule]", "Automatic"}], ",", "\n", 
     RowBox[{"WhenEventOpts", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
        "\"\<DetectionMethod\>\"", "\[Rule]", "\"\<Interpolation\>\""}], ",", 
        
        RowBox[{"\"\<LocationMethod\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Brent\>\"", ",", 
           RowBox[{"MaxIterations", "\[Rule]", "1000"}]}], "}"}]}]}], "}"}]}],
      ",", "\n", 
     RowBox[{"Period", "\[Rule]", "Automatic"}], ",", "\n", 
     RowBox[{"Monitor", "\[Rule]", "False"}], ",", 
     RowBox[{"PrintTrace", "\[Rule]", "False"}], ",", "\n", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "\n", "}"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.688409483544231*^9, 3.688409483568293*^9}, {
   3.688571686048111*^9, 3.688571686270155*^9}, 3.6961510245513983`*^9, 
   3.696152188485263*^9, {3.71650305862817*^9, 3.716503061135914*^9}, {
   3.716566082755247*^9, 3.716566095505053*^9}, 3.716567447863162*^9, 
   3.716932434467297*^9, {3.7251409580326767`*^9, 3.725140958040324*^9}, {
   3.7774005274210377`*^9, 3.777400527486683*^9}, 
   3.777450230059585*^9},ExpressionUUID->"fed60a2c-db54-42a0-8830-\
e29e5fe13132"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",
 CellChangeTimes->{{3.711393393182457*^9, 
  3.711393394780916*^9}},ExpressionUUID->"bbf4ac53-ee04-435f-87aa-\
4512b765ca9f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"split", " ", "traitsandvariables"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoCycle", "[", 
     RowBox[{
      RowBox[{"traitsandvariables_", "?", "AttributesAndVariablesQ"}], ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", 
    RowBox[{"FindEcoCycle", "[", 
     RowBox[{
      RowBox[{"ExtractTraits", "[", "traitsandvariables", "]"}], ",", 
      RowBox[{"ExtractVariables", "[", "traitsandvariables", "]"}], ",", 
      "opts"}], "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.711393447780406*^9, 3.711393472787424*^9}, {
   3.711393628680678*^9, 3.711393657770349*^9}, 3.711393706399166*^9, {
   3.712738534718267*^9, 3.712738534721871*^9}, {3.712740223692176*^9, 
   3.712740223700193*^9}, {3.769501503674892*^9, 3.7695015076676702`*^9}, 
   3.7981288000428753`*^9, 
   3.807369337757949*^9},ExpressionUUID->"0c6d2b0c-42c8-4970-b3b2-\
008634610fe8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Messages", "Subsubsection",
 CellChangeTimes->{{3.769501493490665*^9, 
  3.769501523960513*^9}},ExpressionUUID->"e3f057d5-8529-45c5-9dd2-\
eceed7d2180e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoCycle", "::", "cvmit"}], "=", "\n", 
    "\"\<Failed to converge to the requested accuracy within \[NoBreak]`1`\
\[NoBreak] iterations.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoCycle", "::", "nomaxima"}], "=", "\n", 
    "\"\<Found no maxima in warmup #3, probably not periodic solution.\>\""}],
    ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoCycle", "::", "badmtd"}], "=", "\n", 
    "\"\<The Method option should be a built-in method name \
(\\\"FindRoot\\\", \\\"FixedPoint\\\", \\\"EcoSim\\\" or \\\"Automatic\\\")\>\
\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FindEcoCycle", "::", "noecosim"}], "=", "\n", 
   "\"\<\\\"EcoSim\\\" Method only applicable to unforced ContinuousTime \
models.\>\""}], ";"}]}], "Code",
 CellChangeTimes->{
  3.7695014964239483`*^9},ExpressionUUID->"e7ae6756-baa2-465c-b624-\
dd1d2c8c49e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Counters", "Subsubsection",
 CellChangeTimes->{{3.769518790575857*^9, 
  3.769518791406118*^9}},ExpressionUUID->"54a32e33-1215-4f37-aee0-\
2fe72e286338"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"$FindEcoCycleSteps", "::", "usage"}], "=", 
   "\"\<Counts the number of EcoSim calls in FindEcoCycle.\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.769518793052273*^9, 3.769518804871799*^9}, 
   3.7695218355311613`*^9},ExpressionUUID->"965ed384-abf9-4940-8865-\
b1ba8ec22789"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["EcoJacobian", "Subsection",ExpressionUUID->"61f27e60-5470-4d35-9d95-187aa2ff31c5"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"9063505d-84ec-403d-a6df-\
5c93f586c8db"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoJacobian", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<EcoJacobian[\!\(\*StyleBox[\"sol\", \"TI\"]\)] returns the Jacobian \
matrix of the ecological equations evaluated at \!\(\*StyleBox[\"sol\", \
\"TI\"]\).\nEcoJacobian[\!\(\*StyleBox[\"attributes\", \"TI\"]\), \
\!\(\*StyleBox[\"sol\", \"TI\"]\)] uses trait values/interaction coefficients \
\!\(\*StyleBox[\"attributes\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769484077814527*^9, 3.7694840790636883`*^9}, {
  3.807378903885771*^9, 3.807378910580003*^9}, {3.80737931282316*^9, 
  3.807379323392448*^9}},ExpressionUUID->"22aacc26-f777-4b7e-9522-\
4d3fcf2b351b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"72c38206-79ed-41de-a84c-\
290d40ddc34a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"make", " ", "listable", " ", "across", " ", "pops"}], " ", "*)"}],
   "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"EcoJacobian", "[", 
     RowBox[{
      RowBox[{"attributes", ":", 
       RowBox[{"(", 
        RowBox[{"_", "?", "AttributesQ"}], ")"}], ":", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"variables_", "?", "ListOfVariablesQ"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"EcoJacobian", "[", 
        RowBox[{"attributes", ",", "#", ",", "opts"}], "]"}], "&"}], "/@", 
      "variables"}], ")"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.715424827153945*^9, 3.715424831022787*^9}, {
   3.715425215204941*^9, 3.715425235563982*^9}, {3.759928071960331*^9, 
   3.759928075487185*^9}, 3.7981281327414913`*^9, {3.800465667387295*^9, 
   3.8004656757467003`*^9}, 3.8073693384496326`*^9, {3.807369650795566*^9, 
   3.807369651662064*^9}, {3.80738083923206*^9, 
   3.807380839709502*^9}},ExpressionUUID->"bc8d17b8-2ecf-49bd-85fc-\
4e3c9b636f3e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoJacobian", "[", 
    RowBox[{
     RowBox[{"attributesin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "AttributesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"variables", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<EcoJacobian\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "time", ",", "fixed", 
       ",", "verbose", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "attributes", 
       ",", "fixedvars", ",", "eqns", ",", "unks", ",", "jmat"}], "}"}], ",", 
     "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"attributes", "=", 
         RowBox[{"FixAttributes", "[", "attributesin", "]"}]}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"fixed", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Fixed", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoJacobian", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"time", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Time", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoJacobian", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoJacobian", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"Set\[ScriptCapitalN]", "[", "attributes", "]"}], ";", "\n", 
        "\n", 
        RowBox[{"eqns", "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"EcoEqns", "[", 
             RowBox[{"attributes", ",", "opts"}], "]"}], "/.", "RHS"}], "/.", 
           "RemoveVariablets"}], "/.", 
          RowBox[{"t", "\[Rule]", "time"}]}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<eqns=\>\"", ",", "eqns"}], "]"}], ";"}], "*)"}], "\n",
         "\n", 
        RowBox[{"fixedvars", "=", 
         RowBox[{"fixed", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        RowBox[{"unks", "=", 
         RowBox[{"OrderedComplement", "[", 
          RowBox[{"AllVariables", ",", "fixedvars"}], "]"}]}], ";", "\n", 
        "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: eqns=\>\""}], "]"}], ";", "\n", "\t", 
           
           RowBox[{"Print", "[", "eqns", "]"}], ";", "\n", "\t", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: unks=\>\""}], "]"}], ";", "\n", "\t", 
           
           RowBox[{"Print", "[", "unks", "]"}], ";"}]}], "\n", "]"}], ";", 
        "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"set", " ", "up", " ", "jacobian"}], " ", "*)"}], "\n", 
        RowBox[{"jmat", "=", 
         RowBox[{"D", "[", 
          RowBox[{"eqns", ",", 
           RowBox[{"{", "unks", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: jmat=\>\"", ",", "jmat"}], "]"}]}], 
         "]"}], ";", "\n", "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{"(*", " ", 
          RowBox[{"DiscreteTime", " ", "cycle"}], " ", "*)"}], "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"variables", "\[NotEqual]", 
            RowBox[{"{", "}"}]}], "&&", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"variables", "\[LeftDoubleBracket]", 
               RowBox[{"1", ",", "2", ",", "0"}], "\[RightDoubleBracket]"}], "===",
               "TemporalData"}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], "&&", 
               RowBox[{"modelperiod", "=!=", "0"}]}], ")"}]}], ")"}], "&&", 
           RowBox[{"time", "===", "t"}]}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Return", "[", 
            RowBox[{"TimeSeries", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"t\[Prime]", ",", 
                   RowBox[{
                    RowBox[{"jmat", "/.", "AddVariablets"}], "/.", 
                    RowBox[{"t", "\[Rule]", "t\[Prime]"}]}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"t\[Prime]", ",", 
                   RowBox[{
                    RowBox[{"variables", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "[", 
                    "\"\<Times\>\"", "]"}]}], "}"}]}], "]"}], "/.", 
               "variables"}], "/.", "attributes"}], "]"}], "]"}], ";"}], "\n",
           ",", "\n", "\t", 
          RowBox[{"(*", " ", 
           RowBox[{"ContinuousTime", " ", "cycle"}], " ", "*)"}], "\n", "\t", 
          
          RowBox[{
           RowBox[{"variables", "\[NotEqual]", 
            RowBox[{"{", "}"}]}], "&&", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"variables", "\[LeftDoubleBracket]", 
               RowBox[{"1", ",", "2", ",", "0"}], "\[RightDoubleBracket]"}], "===",
               "InterpolatingFunction"}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], "&&", 
               RowBox[{"modelperiod", "=!=", "0"}]}], ")"}]}], ")"}], "&&", 
           RowBox[{"time", "===", "t"}]}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Return", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"jmat", "/.", "AddVariablets"}], "/.", "variables"}], "/.",
              "attributes"}], "]"}], ";"}], "\n", ",", "\n", "\t", 
          RowBox[{"(*", " ", 
           RowBox[{
           "ContinuousTime", " ", "or", " ", "DiscreteTime", " ", 
            "equilibrium"}], " ", "*)"}], "\n", "\t", "Else", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"time", "===", "t"}], ",", "\n", "\t\t", 
             RowBox[{"Return", "[", 
              RowBox[{
               RowBox[{"jmat", "/.", "variables"}], "/.", "attributes"}], 
              "]"}], ",", "\n", "\t\t", 
             RowBox[{"Return", "[", 
              RowBox[{
               RowBox[{"jmat", "/.", 
                RowBox[{"Slice", "[", 
                 RowBox[{"variables", ",", "time"}], "]"}]}], "/.", 
               "attributes"}], "]"}]}], "\n", "\t", "]"}], ";"}]}], "\n", 
         "]"}], ";"}]}], "\n", "\n", "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.685713471667655*^9, 3.685713471953993*^9}, {
   3.685715172269215*^9, 3.685715180225237*^9}, {3.685715275436626*^9, 
   3.685715288042203*^9}, {3.685720043110549*^9, 3.685720043699584*^9}, 
   3.685727814948381*^9, {3.685919068540296*^9, 3.685919071074188*^9}, {
   3.685919495275399*^9, 3.685919510214314*^9}, {3.6878814511239223`*^9, 
   3.6878814514840813`*^9}, {3.68857168631444*^9, 3.688571686418085*^9}, {
   3.688571758808372*^9, 3.688571758977655*^9}, {3.688571805836503*^9, 
   3.688571805906938*^9}, {3.688597747830966*^9, 3.688597751716827*^9}, {
   3.6885979680467863`*^9, 3.688597986884429*^9}, {3.688598027110915*^9, 
   3.688598048728488*^9}, {3.6961148154182053`*^9, 3.6961148447702312`*^9}, {
   3.709336751999728*^9, 3.709336752901269*^9}, 3.710105961178062*^9, {
   3.712779673043494*^9, 3.7127796738548117`*^9}, {3.712779816576673*^9, 
   3.712779842015938*^9}, 3.712785819940733*^9, {3.715365128204183*^9, 
   3.715365137231598*^9}, {3.715367051751781*^9, 3.7153670695142727`*^9}, {
   3.715367135448979*^9, 3.715367136695031*^9}, {3.715385827773836*^9, 
   3.715385838262583*^9}, {3.715385904406534*^9, 3.715385912427199*^9}, {
   3.715385952628813*^9, 3.7153859710160847`*^9}, {3.715386110544334*^9, 
   3.715386147858574*^9}, {3.71542288958562*^9, 3.7154228931085863`*^9}, {
   3.7154231475090857`*^9, 3.715423171912822*^9}, {3.71673856635833*^9, 
   3.716738581883312*^9}, {3.716853578431396*^9, 3.7168535890239077`*^9}, {
   3.7168537616233263`*^9, 3.716853785719054*^9}, {3.721849261808951*^9, 
   3.721849273017808*^9}, {3.7218494065763073`*^9, 3.7218494108899603`*^9}, 
   3.721849597115556*^9, {3.722083967658794*^9, 3.722083969435639*^9}, {
   3.7220841017746887`*^9, 3.72208410322605*^9}, 3.731979949446031*^9, {
   3.731981097236431*^9, 3.7319811129938383`*^9}, {3.7319811450091333`*^9, 
   3.73198117999973*^9}, {3.7319812559727592`*^9, 3.731981314927001*^9}, {
   3.732015116553176*^9, 3.73201512718889*^9}, 3.732016302108934*^9, {
   3.732016383605422*^9, 3.732016389979628*^9}, {3.732048239407701*^9, 
   3.73204823996686*^9}, 3.7320486771074123`*^9, {3.732049294363253*^9, 
   3.732049296593276*^9}, {3.7320493464220037`*^9, 3.732049359178586*^9}, {
   3.7320494024047422`*^9, 3.732049403766077*^9}, 3.732273413515592*^9, 
   3.732568565652829*^9, 3.7325687346541033`*^9, {3.7325689429536753`*^9, 
   3.732568948290044*^9}, {3.7599280783731337`*^9, 3.759928102812776*^9}, 
   3.761377919374161*^9, {3.761377972621154*^9, 3.761377972626865*^9}, {
   3.76728285895673*^9, 3.767282879017313*^9}, {3.7672829467168837`*^9, 
   3.767282979895051*^9}, {3.76728303120091*^9, 3.767283034161628*^9}, {
   3.767283083982153*^9, 3.7672830874923143`*^9}, {3.767283131912772*^9, 
   3.767283142940757*^9}, {3.767283218487135*^9, 3.767283229313492*^9}, {
   3.7672835701492033`*^9, 3.767283596086255*^9}, {3.767283874451271*^9, 
   3.7672838788035*^9}, {3.767284081745742*^9, 3.7672840821277313`*^9}, 
   3.769182447233816*^9, 3.769760705426908*^9, {3.769861726270475*^9, 
   3.7698617270739326`*^9}, 3.770438265025422*^9, 3.770471445141488*^9, {
   3.770721435002513*^9, 3.77072143544186*^9}, 3.794137240635201*^9, 
   3.798128132746873*^9, {3.800186438317952*^9, 3.800186441520095*^9}, {
   3.8001880707078323`*^9, 3.8001880948829813`*^9}, {3.800188242845222*^9, 
   3.800188248272614*^9}, {3.800188290373461*^9, 3.800188309828966*^9}, 
   3.800272321275289*^9, {3.80046569846973*^9, 3.800465747589779*^9}, {
   3.800465874913538*^9, 3.800465897408147*^9}, {3.807369339074234*^9, 
   3.80736934010505*^9}, {3.807369652730403*^9, 3.807369660232484*^9}, {
   3.817930121232477*^9, 3.817930127030357*^9}, 
   3.8179302270411253`*^9},ExpressionUUID->"d1306c71-01de-4685-adb5-\
ab976ac23085"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",ExpressionUUID->"b8267323-31b7-4ad3-a956-9c90c0fd6ce8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"break", " ", "up", " ", "combined", " ", "traitsandpops"}], " ", 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"EcoJacobian", "[", 
     RowBox[{"traitsandpops_List", ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
    RowBox[{"EcoJacobian", "[", 
     RowBox[{
      RowBox[{"ExtractTraits", "[", "traitsandpops", "]"}], ",", 
      RowBox[{"ExtractVariables", "[", "traitsandpops", "]"}], ",", "opts"}], 
     "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.7127802306821003`*^9, 3.71278023163732*^9}, {
  3.769860889371685*^9, 
  3.769860898625585*^9}},ExpressionUUID->"7ecda5a8-9a28-4295-b2ac-\
83b4920777f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",ExpressionUUID->"4ba194f8-672a-4c9b-93ec-ef7df33652c7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "EcoJacobian", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}], ",", 
     RowBox[{"Time", "\[Rule]", "t"}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.687881451527573*^9, {3.688571686440872*^9, 3.688571686460191*^9}, {
   3.731981321233385*^9, 3.731981331551909*^9}, {3.769861654551086*^9, 
   3.769861654704959*^9}},ExpressionUUID->"49bfa0f1-9a9b-4b78-9f14-\
f69fcf19399f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["EcoEigenvalues", "Subsection",ExpressionUUID->"c79e308e-9678-4528-a0cf-1de5b0c05510"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"16be8d71-03ef-4282-8e56-\
9fd8392bd809"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoEigenvalues", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<EcoEigenvalues[\!\(\*StyleBox[\"sol\", \"TI\"]\)] returns the \
eigenvalues of the Jacobian matrix of the ecological equations evaluated at \
\!\(\*StyleBox[\"sol\", \"TI\"]\).\n\
EcoEigenvalues[\!\(\*StyleBox[\"attributes\", \"TI\"]\), \!\(\*StyleBox[\"sol\
\", \"TI\"]\)] uses trait values/interaction coefficients \
\!\(\*StyleBox[\"attributes\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769484095197171*^9, 3.7694840958240643`*^9}, {
  3.807381422484379*^9, 3.8073814417063837`*^9}, {3.80739747947915*^9, 
  3.807397480654428*^9}},ExpressionUUID->"d9ed2110-f1bd-4e3a-862f-\
f085bd945bb6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"202b1977-511b-407d-b333-\
acf391151249"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"make", " ", "listable", " ", "across", " ", "pops"}], " ", "*)"}],
   "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"EcoEigenvalues", "[", 
     RowBox[{
      RowBox[{"attributes", ":", 
       RowBox[{"(", 
        RowBox[{"_", "?", "AttributesQ"}], ")"}], ":", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"variables_", "?", "ListOfVariablesQ"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"EcoEigenvalues", "[", 
        RowBox[{"attributes", ",", "#", ",", "opts"}], "]"}], "&"}], "/@", 
      "variables"}], ")"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.712783575459276*^9, 3.712783578387623*^9}, {
   3.712784863746928*^9, 3.712784884390826*^9}, {3.7127851579743443`*^9, 
   3.7127851624968*^9}, {3.7127851955597887`*^9, 3.71278523736482*^9}, {
   3.712785705862076*^9, 3.712785711703575*^9}, {3.712833606594955*^9, 
   3.712833614050643*^9}, {3.759928119660495*^9, 3.7599281203487177`*^9}, 
   3.798128132749385*^9, {3.8004659186845217`*^9, 3.800465928157753*^9}, 
   3.80736938263792*^9, {3.807369661286282*^9, 3.807369661762484*^9}, {
   3.807381444546845*^9, 
   3.807381444995007*^9}},ExpressionUUID->"4f28d588-44e1-4df0-97c9-\
d4459181c2d6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoEigenvalues", "[", 
    RowBox[{
     RowBox[{"attributesin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "AttributesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"variables", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<EcoEigenvalues\>\"", "]"}]}], ",", 
       "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "chop", ",", "time", ",", "ndsolveopts", ",", 
       "multipliers", ",", "fixed", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "attributes", 
       ",", "j", ",", "dim", ",", "per", ",", "xsol", ",", "res"}], "}"}], 
     ",", "\n", "\n", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
         RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
      RowBox[{"If", "[", 
       RowBox[{"Global`debug", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
      "\n", 
      RowBox[{"attributes", "=", 
       RowBox[{"FixAttributes", "[", "attributesin", "]"}]}], ";", "\n", "\n", 
      RowBox[{"verbose", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Verbose", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoEigenvalues", "]"}]}], "}"}], "]"}]}],
         "]"}]}], ";", "\n", 
      RowBox[{"If", "[", 
       RowBox[{"Global`debug", ",", 
        RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
      RowBox[{"verboseall", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"VerboseAll", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoEigenvalues", "]"}]}], "}"}], "]"}]}],
         "]"}]}], ";", "\n", 
      RowBox[{"If", "[", 
       RowBox[{"verboseall", ",", 
        RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
      RowBox[{"chop", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Chop", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoEigenvalues", "]"}]}], "}"}], "]"}]}],
         "]"}]}], ";", "\n", 
      RowBox[{"time", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Time", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoEigenvalues", "]"}]}], "}"}], "]"}]}],
         "]"}]}], ";", "\n", 
      RowBox[{"ndsolveopts", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"NDSolveOpts", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoEigenvalues", "]"}]}], "}"}], "]"}]}],
         "]"}]}], ";", "\n", 
      RowBox[{"multipliers", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Multipliers", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoEigenvalues", "]"}]}], "}"}], "]"}]}],
         "]"}]}], ";", "\n", 
      RowBox[{"fixed", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Fixed", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoEigenvalues", "]"}]}], "}"}], "]"}]}],
         "]"}]}], ";", "\n", "\n", 
      RowBox[{"j", "=", 
       RowBox[{"EcoJacobian", "[", 
        RowBox[{"attributes", ",", "variables", ",", 
         RowBox[{"Time", "\[Rule]", "time"}], ",", 
         RowBox[{"Fixed", "\[Rule]", "fixed"}], ",", 
         RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}], ";", 
      "\n", 
      RowBox[{"If", "[", 
       RowBox[{"verbose", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"func", ",", "\"\<: Jacobian=\>\"", ",", "j"}], "]"}]}], 
       "]"}], ";", "\n", "\n", 
      RowBox[{"Which", "[", "\n", "\t", 
       RowBox[{"(*", " ", 
        RowBox[{"DiscreteTime", " ", "cycle"}], " ", "*)"}], "\n", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"variables", "\[NotEqual]", 
          RowBox[{"{", "}"}]}], "&&", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"variables", "\[LeftDoubleBracket]", 
               RowBox[{"1", ",", "2", ",", "0"}], "\[RightDoubleBracket]"}], "===",
               "TemporalData"}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], "&&", 
               RowBox[{"modelperiod", "=!=", "0"}]}], ")"}]}], ")"}], "&&", 
           RowBox[{"time", "===", "t"}]}], ")"}]}], ",", "\n", "\t", 
        RowBox[{"res", "=", 
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"ListMultiplier", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"j", "[", "t\[Prime]", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"t\[Prime]", ",", 
               RowBox[{"j", "[", "\"\<Times\>\"", "]"}]}], "}"}]}], "]"}], 
           "]"}], "]"}]}], "\n", ",", "\n", "\t", 
        RowBox[{"(*", " ", 
         RowBox[{"ContinousTime", " ", "cycle"}], " ", "*)"}], "\n", "\t", 
        RowBox[{
         RowBox[{"variables", "\[NotEqual]", 
          RowBox[{"{", "}"}]}], "&&", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"variables", "\[LeftDoubleBracket]", 
               RowBox[{"1", ",", "2", ",", "0"}], "\[RightDoubleBracket]"}], "===",
               "InterpolatingFunction"}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"modeltype", "\[Equal]", "\"\<ContinousTime\>\""}], "&&", 
               RowBox[{"modelperiod", "=!=", "0"}]}], ")"}]}], ")"}], "&&", 
           RowBox[{"time", "===", "t"}]}], ")"}]}], ",", "\n", "\t", 
        RowBox[{
         RowBox[{"dim", "=", 
          RowBox[{"Length", "[", "j", "]"}]}], ";", "\n", "\t", 
         RowBox[{"per", "=", 
          RowBox[{"FinalTime", "[", "variables", "]"}]}], ";", "\n", "\t", 
         RowBox[{"xsol", "=", 
          RowBox[{
           RowBox[{"NDSolve", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"x", "'"}], "[", "t", "]"}], "\[Equal]", 
                RowBox[{"j", ".", 
                 RowBox[{"x", "[", "t", "]"}]}]}], ",", 
               RowBox[{
                RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
                RowBox[{"IdentityMatrix", "[", "dim", "]"}]}]}], "}"}], ",", 
             "x", ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "per"}], "}"}], ",", 
             RowBox[{"Sequence", "@@", "ndsolveopts"}]}], "]"}], 
           "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";", 
         "\n", "\t", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: x[per]/.xsol=\>\"", ",", 
             RowBox[{
              RowBox[{"x", "[", "per", "]"}], "/.", "xsol"}]}], "]"}]}], 
          "]"}], ";", "\n", "\t", 
         RowBox[{"If", "[", 
          RowBox[{"multipliers", ",", "\n", "\t\t", 
           RowBox[{"res", "=", 
            RowBox[{"Eigenvalues", "[", 
             RowBox[{
              RowBox[{"x", "[", "per", "]"}], "/.", "xsol"}], "]"}]}], ",", 
           "\n", "\t\t", 
           RowBox[{"res", "=", 
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"Chop", "[", 
               RowBox[{"Eigenvalues", "[", 
                RowBox[{
                 RowBox[{"x", "[", "per", "]"}], "/.", "xsol"}], "]"}], "]"}],
               "]"}], "/", "per"}]}]}], "\n", "\t", "]"}]}], "\n", ",", "\n", 
        "\t", 
        RowBox[{"(*", " ", 
         RowBox[{
         "ContinuousTime", " ", "or", " ", "DiscreteTime", " ", 
          "equilibrium"}], " ", "*)"}], "\n", "\t", "Else", ",", "\n", "\t", 
        RowBox[{"res", "=", 
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"j", "/.", 
           RowBox[{"t", "\[Rule]", "time"}]}], "]"}]}]}], "\n", "]"}], ";", 
      "\n", "\n", 
      RowBox[{"If", "[", 
       RowBox[{"chop", ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Chop", "[", "res", "]"}], "]"}], ",", 
        RowBox[{"Return", "[", "res", "]"}]}], "]"}], ";"}]}], "\n", "\n", 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.687881451590589*^9, 3.687881451717087*^9}, {
   3.688571686492445*^9, 3.688571686517911*^9}, {3.688571758999564*^9, 
   3.688571759124362*^9}, {3.688571805927868*^9, 3.688571805977295*^9}, {
   3.688598259792244*^9, 3.688598330430194*^9}, 3.693870062484871*^9, {
   3.7093369596230583`*^9, 3.709336960038612*^9}, 3.710105961860166*^9, 
   3.7127802178763657`*^9, {3.712784391975954*^9, 3.7127844137034473`*^9}, 
   3.712785086146867*^9, {3.712785716407987*^9, 3.7127857221772747`*^9}, 
   3.712833620413968*^9, {3.7154416133061943`*^9, 3.715441641490888*^9}, {
   3.7154417472355747`*^9, 3.7154417634409246`*^9}, {3.7154529080318623`*^9, 
   3.715452969298389*^9}, {3.715453001962796*^9, 3.715453029240954*^9}, {
   3.7218494806472263`*^9, 3.721849506188443*^9}, 3.7218495917367067`*^9, {
   3.722084128316791*^9, 3.722084129825014*^9}, {3.724105522816702*^9, 
   3.724105537013926*^9}, {3.724105573748129*^9, 3.724105578665144*^9}, {
   3.7325695129217253`*^9, 3.732569514190278*^9}, {3.732570081243393*^9, 
   3.732570099427299*^9}, {3.7599281212442513`*^9, 3.7599281267645187`*^9}, 
   3.769527429286891*^9, 3.76976070544016*^9, {3.769861557083302*^9, 
   3.769861590316348*^9}, {3.7698616823092546`*^9, 3.76986170449503*^9}, {
   3.769861758126689*^9, 3.7698617625271378`*^9}, 3.770438265033218*^9, 
   3.794137240640799*^9, 3.7981281327552013`*^9, {3.8001284110930767`*^9, 
   3.800128414971343*^9}, {3.800465931649267*^9, 3.800465968512073*^9}, {
   3.8073693426807423`*^9, 3.807369342685987*^9}, {3.807369662321744*^9, 
   3.807369676881895*^9}},ExpressionUUID->"9fb828fd-93f9-4378-8808-\
4c1b0c210836"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoEigenvalues", "[", 
    RowBox[{
     RowBox[{"traitsandpops_", "?", "AttributesAndVariablesQ"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"EcoEigenvalues", "[", 
    RowBox[{
     RowBox[{"ExtractTraits", "[", "traitsandpops", "]"}], ",", 
     RowBox[{"ExtractVariables", "[", "traitsandpops", "]"}], ",", "opts"}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.712779059611342*^9, 3.7127790632484837`*^9}, {
   3.7127802510293913`*^9, 3.7127802541117783`*^9}, {3.7127835820418167`*^9, 
   3.712783593708169*^9}, 3.7127857275024157`*^9, {3.712833990808877*^9, 
   3.71283399247824*^9}, 3.798128800045621*^9, 
   3.807369342689445*^9},ExpressionUUID->"e1be42fb-a461-45b9-b1b5-\
3ba78c45abd6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",ExpressionUUID->"853e26e7-627e-4aba-94fc-fe7c121c6114"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "EcoEigenvalues", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}], ",", 
     RowBox[{"Chop", "\[Rule]", "True"}], ",", 
     RowBox[{"Time", "\[Rule]", "t"}], ",", 
     RowBox[{"NDSolveOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Multipliers", "\[Rule]", "False"}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.687881451756421*^9, {3.688571686542431*^9, 3.688571686592046*^9}, 
   3.7154417382400417`*^9, {3.717197474499758*^9, 3.717197475076635*^9}, {
   3.7171975324573107`*^9, 3.7171975424972878`*^9}, {3.769861548259386*^9, 
   3.769861551612172*^9}, {3.7698616721393213`*^9, 
   3.76986167491406*^9}},ExpressionUUID->"90bbe12e-9d68-419f-b4f0-\
cc5ea4cb6e70"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["EcoStableQ", "Subsection",
 CellChangeTimes->{
  3.7155131143484*^9},ExpressionUUID->"d6e07f9a-d802-4a56-8b55-1e956857f345"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"ff634956-c59d-43dc-a31a-\
760ddc376943"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoStableQ", "::", "usage"}], "=", "\n", 
   "\"\<EcoStableQ[\!\(\*StyleBox[\"sol\", \"TI\"]\)] reports the linear \
stability of ecological equilibrium \!\(\*StyleBox[\"sol\", \"TI\"]\) as \
True, False, or Indeterminate.\nEcoStableQ[\!\(\*StyleBox[\"attribues\", \"TI\
\"]\), \!\(\*StyleBox[\"sol\", \"TI\"]\)] uses trait values/interaction \
coefficients \!\(\*StyleBox[\"attributes\", \"TI\"]\).\>\""}], ";"}]], "Code",\

 CellChangeTimes->{{3.76948422570438*^9, 3.769484226335539*^9}, {
  3.77000579012632*^9, 3.770005790337742*^9}, {3.807381710191482*^9, 
  3.8073817133572493`*^9}, {3.8073974675128193`*^9, 3.807397470335249*^9}, {
  3.807397782433783*^9, 
  3.807397822089552*^9}},ExpressionUUID->"6fba95f8-0896-4ea6-ad09-\
5bbf9cbfd27e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"fee96dc1-ff2e-4558-bf3c-\
da1f6e40c923"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"make", " ", "listable", " ", "across", " ", "variables"}], " ", 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"EcoStableQ", "[", 
     RowBox[{
      RowBox[{"attributes", ":", 
       RowBox[{"(", 
        RowBox[{"_", "?", "AttributesQ"}], ")"}], ":", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"variables_", "?", "ListOfVariablesQ"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"EcoStableQ", "[", 
        RowBox[{"attributes", ",", "#", ",", "opts"}], "]"}], "&"}], "/@", 
      "variables"}], ")"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.6850220907977247`*^9, 3.685022099547845*^9}, 
   3.685022306589357*^9, {3.685022353984963*^9, 3.685022356898353*^9}, 
   3.685022543151054*^9, {3.685023419016622*^9, 3.6850234210912313`*^9}, 
   3.6850246339185057`*^9, {3.6850246920596313`*^9, 3.685024702609147*^9}, {
   3.6850298956804657`*^9, 3.685029902203434*^9}, {3.6850309468876457`*^9, 
   3.685030993780816*^9}, {3.685093269867608*^9, 3.685093277383587*^9}, 
   3.685093415086285*^9, 3.712738534786777*^9, {3.7128329764233437`*^9, 
   3.7128329881657753`*^9}, {3.712834389065583*^9, 3.712834392409886*^9}, {
   3.71283453344189*^9, 3.7128345388749123`*^9}, {3.715513114362115*^9, 
   3.71551311436996*^9}, {3.759928162167342*^9, 3.759928164366416*^9}, 
   3.798128132757736*^9, {3.800465990439323*^9, 3.800465995822323*^9}, 
   3.807369342692752*^9, {3.8073696780083714`*^9, 3.807369678524125*^9}, {
   3.807397540465663*^9, 
   3.807397540878338*^9}},ExpressionUUID->"0f3b83dd-7429-40e9-8b11-\
f22487c357e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoStableQ", "[", 
    RowBox[{
     RowBox[{"attributesin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "AttributesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"variables", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<EcoStableQ\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "method", ",", 
       "verbose", ",", "verboseall", ",", "time", ",", "ecoeigenvaluesopts", 
       ",", "tolerance", ",", "simplifyresult", ",", "fixed", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "attributes", 
       ",", "j", ",", "evs", ",", "res"}], "}"}], ",", "\n", "\n", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
         RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
      RowBox[{"If", "[", 
       RowBox[{"Global`debug", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\n", 
      RowBox[{"attributes", "=", 
       RowBox[{"FixAttributes", "[", "attributesin", "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
      RowBox[{"verbose", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Verbose", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoStableQ", "]"}]}], "}"}], "]"}]}], 
        "]"}]}], ";", "\n", 
      RowBox[{"If", "[", 
       RowBox[{"Global`debug", ",", 
        RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
      RowBox[{"verboseall", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"VerboseAll", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoStableQ", "]"}]}], "}"}], "]"}]}], 
        "]"}]}], ";", "\n", 
      RowBox[{"If", "[", 
       RowBox[{"verboseall", ",", 
        RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
      RowBox[{"method", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Method", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoStableQ", "]"}]}], "}"}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"time", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Time", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoStableQ", "]"}]}], "}"}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ecoeigenvaluesopts", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"EcoEigenvaluesOpts", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoStableQ", "]"}]}], "}"}], "]"}]}], 
        "]"}]}], ";", "\n", 
      RowBox[{"tolerance", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Tolerance", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoStableQ", "]"}]}], "}"}], "]"}]}], 
        "]"}]}], ";", "\n", 
      RowBox[{"simplifyresult", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"SimplifyResult", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoStableQ", "]"}]}], "}"}], "]"}]}], 
        "]"}]}], ";", "\n", 
      RowBox[{"fixed", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Fixed", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoStableQ", "]"}]}], "}"}], "]"}]}], 
        "]"}]}], ";", "\n", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"method", "===", "Automatic"}], ",", "\[IndentingNewLine]", 
        "\t", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], "&&", 
            RowBox[{"modelperiod", "\[Equal]", "0"}], "&&", 
            RowBox[{
             RowBox[{
             "InterpolatingFunctionFunctionQ", "[", "variables", "]"}], 
             "\[Equal]", "False"}], "&&", 
            RowBox[{
             RowBox[{"Length", "[", "variables", "]"}], "<", "4"}]}], ",", 
           "\[IndentingNewLine]", "\t\t", 
           RowBox[{"method", "=", "\"\<RouthHurwitz\>\""}], ",", 
           "\[IndentingNewLine]", "\t\t", 
           RowBox[{"method", "=", "\"\<Eigenvalues\>\""}]}], "\n", "\t", 
          "]"}], ";", "\[IndentingNewLine]", "\t", 
         RowBox[{"If", "[", 
          RowBox[{"verbose", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: method=\>\"", ",", "method"}], 
            "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\n", 
      RowBox[{"Which", "[", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"method", "\[Equal]", "\"\<RouthHurwitz\>\""}], ",", "\n", 
        "\t", 
        RowBox[{
         RowBox[{"j", "=", 
          RowBox[{"EcoJacobian", "[", 
           RowBox[{"attributes", ",", "variables", ",", 
            RowBox[{"Time", "\[Rule]", "time"}], ",", 
            RowBox[{"Fixed", "\[Rule]", "fixed"}]}], "]"}]}], ";", "\n", "\t", 
         RowBox[{"res", "=", 
          RowBox[{"RouthHurwitzCriteria", "[", "j", "]"}]}], ";", "\n", "\t", 
         
         RowBox[{"Which", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{"simplifyresult", "===", "True"}], ",", "\n", "\t\t", 
           RowBox[{"Return", "[", 
            RowBox[{"Simplify", "[", "res", "]"}], "]"}], ",", "\n", "\t\t", 
           RowBox[{"simplifyresult", "===", "Full"}], ",", "\n", "\t\t", 
           RowBox[{"Return", "[", 
            RowBox[{"FullSimplify", "[", "res", "]"}], "]"}], ",", "\n", 
           "\t\t", 
           RowBox[{"simplifyresult", "===", "Real"}], ",", "\n", "\t\t", 
           RowBox[{"Return", "[", 
            RowBox[{"RealSimplify", "[", "res", "]"}], "]"}], ",", "\n", 
           "\t\t", "Else", ",", "\n", "\t\t", 
           RowBox[{"Return", "[", "res", "]"}]}], "\n", "\t", "]"}]}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "\t", 
        RowBox[{"method", "\[Equal]", "\"\<Eigenvalues\>\""}], ",", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{"evs", "=", 
          RowBox[{"EcoEigenvalues", "[", 
           RowBox[{"attributes", ",", "variables", ",", 
            RowBox[{"Time", "\[Rule]", "time"}], ",", 
            RowBox[{"Fixed", "\[Rule]", "fixed"}], ",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"Sequence", "@@", "ecoeigenvaluesopts"}], "]"}]}], 
           "]"}]}], ";", "\n", "\t", 
         RowBox[{"Which", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{"simplifyresult", "===", "True"}], ",", "\n", "\t\t", 
           RowBox[{"evs", "=", 
            RowBox[{"Simplify", "[", "evs", "]"}]}]}], "]"}]}], ",", "\n", 
        "\t\t", 
        RowBox[{"simplifyresult", "===", "Full"}], ",", "\n", "\t\t", 
        RowBox[{"evs", "=", 
         RowBox[{"FullSimplify", "[", "evs", "]"}]}], ",", "\n", "\t\t", 
        RowBox[{"simplifyresult", "===", "Real"}], ",", "\n", "\t\t", 
        RowBox[{"evs", "=", 
         RowBox[{"RealSimplify", "[", "res", "]"}]}]}], "\n", "\t", "]"}], 
      ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"If", "[", 
       RowBox[{"verbose", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"func", ",", "\"\<: evs=\>\"", ",", "evs"}], "]"}]}], "]"}], 
      ";", "\n", "\t", 
      RowBox[{"Which", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"modeltype", "==", "\"\<DiscreteTime\>\""}], ",", "\n", 
        "\t\t", 
        RowBox[{"res", "=", 
         RowBox[{"Which", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"Max", "[", 
              RowBox[{"Re", "[", "evs", "]"}], "]"}], "===", 
             "Indeterminate"}], "]"}], ",", "Indeterminate", ",", "\n", 
           "\t\t\t", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"Max", "[", 
              RowBox[{"Abs", "[", "evs", "]"}], "]"}], "\[LessEqual]", 
             RowBox[{"1.", "+", "tolerance"}]}], "]"}], ",", "True", ",", 
           "\n", "\t\t\t", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"Max", "[", 
              RowBox[{"Abs", "[", "evs", "]"}], "]"}], ">", 
             RowBox[{"1.", "+", "tolerance"}]}], "]"}], ",", "False", ",", 
           "\n", "\t\t\t", "Else", ",", "Indeterminate"}], "\n", "\t\t", 
          "]"}]}], ",", "\n", "\t\t", 
        RowBox[{"modeltype", "==", "\"\<ContinuousTime\>\""}], ",", "\n", 
        "\t\t", 
        RowBox[{"res", "=", 
         RowBox[{"Which", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"Max", "[", 
              RowBox[{"Re", "[", "evs", "]"}], "]"}], "===", 
             "Indeterminate"}], "]"}], ",", "Indeterminate", ",", "\n", 
           "\t\t\t", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"Max", "[", 
              RowBox[{"Re", "[", "evs", "]"}], "]"}], ">", "tolerance"}], 
            "]"}], ",", "False", ",", "\n", "\t\t\t", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"Max", "[", 
              RowBox[{"Re", "[", "evs", "]"}], "]"}], "\[LessEqual]", 
             "tolerance"}], "]"}], ",", "True", ",", " ", "\n", "\t\t\t", 
           "Else", ",", "Indeterminate"}], "\t\t", "\n", "\t\t", "]"}]}]}], 
       "\n", "\t", "]"}], ";", "\n", "\n", 
      RowBox[{"Return", "[", "res", "]"}], ";"}]}], "\n", "\n", "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.6849533936633043`*^9, 3.684953414112164*^9}, {
   3.685014001327359*^9, 3.685014005842956*^9}, {3.685014132188057*^9, 
   3.685014136661201*^9}, {3.685014535298616*^9, 3.6850145470194674`*^9}, {
   3.6850145985316677`*^9, 3.6850146507103567`*^9}, {3.6850147011612797`*^9, 
   3.685014702148767*^9}, {3.685014755407686*^9, 3.685014764748753*^9}, {
   3.685014823176313*^9, 3.6850148724904327`*^9}, {3.685014947418171*^9, 
   3.6850151499287*^9}, {3.685017046207349*^9, 3.685017059021749*^9}, {
   3.685017178822913*^9, 3.685017192507099*^9}, {3.685017409192099*^9, 
   3.6850174230801153`*^9}, {3.685017973288769*^9, 3.685018003051404*^9}, {
   3.685018098461862*^9, 3.685018129122548*^9}, {3.685018444212072*^9, 
   3.685018448249733*^9}, {3.685018528980851*^9, 3.6850185293698874`*^9}, {
   3.685018588986899*^9, 3.6850186697307158`*^9}, {3.685019075288752*^9, 
   3.6850192973688793`*^9}, {3.6850193604609632`*^9, 
   3.6850193972851686`*^9}, {3.685019590179847*^9, 3.6850195905436172`*^9}, {
   3.685019965938696*^9, 3.685019987646915*^9}, {3.6850200915253983`*^9, 
   3.685020170379386*^9}, {3.685021392792079*^9, 3.685021428484852*^9}, {
   3.6850216769463797`*^9, 3.685021691439438*^9}, {3.685022433698675*^9, 
   3.685022444671999*^9}, {3.685022479702354*^9, 3.685022482958386*^9}, 
   3.685022532076754*^9, {3.685023558508892*^9, 3.685023575274457*^9}, {
   3.685023612353402*^9, 3.685023620817189*^9}, {3.685024077454136*^9, 
   3.6850240871653852`*^9}, {3.6850245476165247`*^9, 
   3.6850245541846952`*^9}, {3.685024603026663*^9, 3.6850246096979647`*^9}, {
   3.685055712665042*^9, 3.685055717608275*^9}, {3.68509344018568*^9, 
   3.685093443262388*^9}, 3.685094542977899*^9, {3.6850957506893873`*^9, 
   3.685095758927759*^9}, {3.685095820275567*^9, 3.685095822429641*^9}, 
   3.685105730436112*^9, {3.685105988811041*^9, 3.685105998983307*^9}, {
   3.6851062828705997`*^9, 3.685106311557674*^9}, {3.685106390194951*^9, 
   3.685106397379138*^9}, {3.685106778641333*^9, 3.685106808335217*^9}, {
   3.685312929589141*^9, 3.68531295453417*^9}, {3.685313580691843*^9, 
   3.6853136048091393`*^9}, {3.685316158424636*^9, 3.685316164320519*^9}, 
   3.685316250357275*^9, {3.6859202729777517`*^9, 3.6859202870513277`*^9}, {
   3.688571759147441*^9, 3.6885717592136106`*^9}, {3.688571805998796*^9, 
   3.688571806056652*^9}, {3.6885983990920362`*^9, 3.6885985105514917`*^9}, {
   3.688598802482101*^9, 3.688598808086894*^9}, {3.699739140482938*^9, 
   3.699739205555922*^9}, {3.6997394246557503`*^9, 3.699739491220311*^9}, {
   3.709336970884677*^9, 3.709336971350547*^9}, 3.7101059625647793`*^9, {
   3.71025508617848*^9, 3.710255094877571*^9}, {3.710265061502372*^9, 
   3.710265076308937*^9}, 3.712738534777782*^9, {3.712765372242229*^9, 
   3.7127653779531193`*^9}, {3.712765431871583*^9, 3.712765444283675*^9}, 
   3.712765915191996*^9, {3.712766349430441*^9, 3.712766380136112*^9}, {
   3.712767190942603*^9, 3.712767224761994*^9}, {3.712767908279552*^9, 
   3.7127679367031727`*^9}, {3.712767968145958*^9, 3.7127679691639*^9}, 
   3.71276844384515*^9, {3.712768492676896*^9, 3.712768502734335*^9}, {
   3.7127685701189623`*^9, 3.712768570275599*^9}, {3.7127686497341537`*^9, 
   3.71276865531277*^9}, {3.712830305370514*^9, 3.7128303222095003`*^9}, {
   3.712830493820031*^9, 3.71283051487503*^9}, {3.715513114108346*^9, 
   3.7155131141619167`*^9}, {3.7171968916749563`*^9, 3.717196906359455*^9}, {
   3.721849525127672*^9, 3.72184954988319*^9}, {3.7220841513512173`*^9, 
   3.72208415449754*^9}, {3.722084198438725*^9, 3.7220842010013437`*^9}, {
   3.724079234963525*^9, 3.724079235676611*^9}, {3.7240884542611217`*^9, 
   3.7240884647364893`*^9}, {3.72409700837796*^9, 3.724097127686545*^9}, {
   3.7240974169352427`*^9, 3.7240974603079042`*^9}, {3.724098131659422*^9, 
   3.724098168147067*^9}, {3.7240984038345137`*^9, 3.724098408484956*^9}, {
   3.724099683920906*^9, 3.7240997616730013`*^9}, {3.724100448599148*^9, 
   3.724100455672859*^9}, {3.724100535097134*^9, 3.724100537374981*^9}, {
   3.724100585516767*^9, 3.72410058970721*^9}, {3.7241014013961277`*^9, 
   3.7241014411553802`*^9}, {3.7241015824287558`*^9, 3.724101700492031*^9}, {
   3.7241018197365427`*^9, 3.7241018271116657`*^9}, {3.724101903342354*^9, 
   3.724101963136846*^9}, {3.7241020045094023`*^9, 3.724102015541431*^9}, {
   3.724102471478634*^9, 3.724102485566518*^9}, {3.7241027453015537`*^9, 
   3.7241028081708593`*^9}, {3.7241028418809834`*^9, 3.724102892459547*^9}, 
   3.724103040844589*^9, {3.724103123301693*^9, 3.724103127495133*^9}, 
   3.725140958050362*^9, 3.725141965262782*^9, {3.725745851714113*^9, 
   3.725745864449317*^9}, {3.755194070254854*^9, 3.7551941112368517`*^9}, {
   3.759928165301855*^9, 3.759928171485078*^9}, {3.7689241291681013`*^9, 
   3.7689241291808643`*^9}, {3.7695227140076*^9, 3.76952271402106*^9}, 
   3.769760705455652*^9, {3.770020426373417*^9, 3.7700204620836077`*^9}, {
   3.7700205211422777`*^9, 3.770020596282078*^9}, {3.7700208536454067`*^9, 
   3.77002085410111*^9}, {3.7700407092808447`*^9, 3.770040712836385*^9}, {
   3.770040754684819*^9, 3.770040864853737*^9}, {3.770041025636224*^9, 
   3.770041026661933*^9}, {3.770041084052537*^9, 3.770041126471307*^9}, {
   3.7700414370769043`*^9, 3.770041439934153*^9}, {3.77004147276371*^9, 
   3.7700415151143017`*^9}, {3.7700416089892273`*^9, 3.770041627197802*^9}, {
   3.7700416628327637`*^9, 3.770041664571369*^9}, {3.770041729158639*^9, 
   3.7700417564936953`*^9}, 3.7704382650373383`*^9, {3.770643880022365*^9, 
   3.770644013005577*^9}, {3.7706440540323687`*^9, 3.7706440609856777`*^9}, {
   3.770644236450947*^9, 3.7706442468601217`*^9}, {3.770644322626767*^9, 
   3.770644330298749*^9}, {3.7706443868747168`*^9, 3.7706444254129057`*^9}, {
   3.770644456734601*^9, 3.770644488074877*^9}, {3.770644602882266*^9, 
   3.770644607369712*^9}, {3.770788921228725*^9, 3.770788928787318*^9}, {
   3.77078923070074*^9, 3.7707892386545343`*^9}, {3.770790280929944*^9, 
   3.7707903229519653`*^9}, {3.770790370771282*^9, 3.770790420183189*^9}, {
   3.7862061680827627`*^9, 3.786206168858802*^9}, {3.786206244378357*^9, 
   3.786206249831171*^9}, {3.786206294731948*^9, 3.786206314173562*^9}, 
   3.794137240646728*^9, 3.798128132763628*^9, {3.800465997050089*^9, 
   3.800466025418679*^9}, {3.8073693427004633`*^9, 3.8073693427047*^9}, {
   3.80736967917994*^9, 
   3.8073696835797873`*^9}},ExpressionUUID->"e8a0d079-56bf-41bf-9476-\
05e75e833886"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",
 CellChangeTimes->{{3.793444199572301*^9, 
  3.793444200516029*^9}},ExpressionUUID->"73894a0b-ea0c-4f4e-9cf8-\
b5c616d41333"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"break", " ", "up", " ", "combned", " ", "traitsandpops"}], " ", 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"EcoStableQ", "[", 
     RowBox[{
      RowBox[{"traitsandpops_", "?", "AttributesAndVariablesQ"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
    RowBox[{"EcoStableQ", "[", 
     RowBox[{
      RowBox[{"ExtractTraits", "[", "traitsandpops", "]"}], ",", 
      RowBox[{"ExtractVariables", "[", "traitsandpops", "]"}], ",", "opts"}], 
     "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.712779059611342*^9, 3.7127790632484837`*^9}, {
   3.7127802510293913`*^9, 3.7127802541117783`*^9}, {3.7127835820418167`*^9, 
   3.712783593708169*^9}, 3.7127857275024157`*^9, {3.712833990808877*^9, 
   3.71283399247824*^9}, {3.712835769983123*^9, 3.712835775171624*^9}, {
   3.715513114166628*^9, 3.715513114174303*^9}, {3.7700204852441463`*^9, 
   3.770020493555071*^9}, 3.79812880004852*^9, 
   3.8073693427077208`*^9},ExpressionUUID->"d7feed21-57a9-4df8-a8b0-\
4e2cb9de3ddc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.7128342128410997`*^9, 
  3.712834216447763*^9}},ExpressionUUID->"421c4dda-795f-4356-8430-\
c30e9915bd9f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "EcoStableQ", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}], ",", 
     RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"SimplifyResult", "\[Rule]", "Real"}], ",", 
     RowBox[{"Time", "\[Rule]", "t"}], ",", 
     RowBox[{"EcoEigenvaluesOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", 
     RowBox[{"Tolerance", "\[Rule]", 
      RowBox[{"10", "^", 
       RowBox[{"-", "8"}]}]}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.6850170174835978`*^9, 3.685017043222972*^9}, {
   3.6850193031380787`*^9, 3.685019310680826*^9}, {3.685019537705372*^9, 
   3.685019538351634*^9}, {3.685020181269248*^9, 3.685020182385057*^9}, {
   3.685095767076605*^9, 3.685095773944599*^9}, {3.6851063770885143`*^9, 
   3.6851063813056097`*^9}, {3.685312960097151*^9, 3.68531296618836*^9}, 
   3.6878814518050947`*^9, 3.712766385096274*^9, {3.712767972481163*^9, 
   3.712767973477947*^9}, {3.712768507451104*^9, 3.712768509756341*^9}, {
   3.7128303014012623`*^9, 3.712830302351494*^9}, 3.715513114178171*^9, {
   3.724098452789632*^9, 3.724098457895226*^9}, {3.724099662746971*^9, 
   3.724099675148926*^9}, {3.724102370020849*^9, 3.724102370105598*^9}, 
   3.72410240141647*^9, {3.724102545091942*^9, 3.724102545472825*^9}, {
   3.724102872849594*^9, 3.724102874637203*^9}, 3.724103132954032*^9, 
   3.725140958057073*^9, {3.725745871148444*^9, 3.725745873977618*^9}, {
   3.770020506563188*^9, 3.77002051712563*^9}, {3.770020894307068*^9, 
   3.7700208987466173`*^9}, {3.770041212484028*^9, 3.770041215806221*^9}, {
   3.770644019535089*^9, 3.770644024288884*^9}, {3.770644611673951*^9, 
   3.770644612792778*^9}, {3.78620617766049*^9, 
   3.786206179720745*^9}},ExpressionUUID->"48845c87-f17e-421a-9b81-\
88f4e8ff5c22"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["SelectEcoStable", "Subsection",
 CellChangeTimes->{
  3.7155131369958687`*^9},ExpressionUUID->"8a0c511d-2eaf-4d83-a082-\
f7011a64b435"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"212c02e3-2abe-43a5-989c-\
22b4554a15c9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SelectEcoStable", "::", "usage"}], "=", "\n", 
   "\"\<SelectEcoStable[\!\(\*StyleBox[\"sol\", \"TI\"]\)] selects stable \
equilibria from \!\(\*StyleBox[\"sol\", \"TI\"]\).\n\
SelectEcoStable[\!\(\*StyleBox[\"attributes\", \"TI\"]\), \
\!\(\*StyleBox[\"sol\", \"TI\"]\)] uses trait values/interaction coefficients \
\!\(\*StyleBox[\"attributes\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769484238660627*^9, 3.769484239255474*^9}, {
  3.8073991500445433`*^9, 
  3.807399155288694*^9}},ExpressionUUID->"a0b6816e-d874-447c-b42c-\
3aff72502e30"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"411b5dac-c81b-4e31-b4e4-\
242ef5ad4936"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SelectEcoStable", "[", 
    RowBox[{
     RowBox[{"attributes", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "AttributesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"sol_", "?", "ListOfVariablesQ"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"stableqopts", ",", "stable"}], "}"}], ",", "\n", "\n", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
         RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", "\n", 
      
      RowBox[{"stableqopts", "=", 
       RowBox[{"FilterRules", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "SelectEcoStable", "]"}]}], "}"}], "]"}], 
         ",", 
         RowBox[{"Options", "[", "EcoStableQ", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\n", 
      RowBox[{"stable", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"EcoStableQ", "[", 
          RowBox[{"attributes", ",", "#", ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"Sequence", "@@", "stableqopts"}], "]"}]}], "]"}], "&"}], 
        "/@", "sol"}]}], ";", "\n", "\n", 
      RowBox[{"Return", "[", 
       RowBox[{"Part", "[", 
        RowBox[{"sol", ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Position", "[", 
           RowBox[{"stable", ",", "True"}], "]"}], "]"}]}], "]"}], "]"}]}]}], 
    "\n", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.68381096712052*^9, 3.683810986592037*^9}, {
   3.685022669197405*^9, 3.685022741004915*^9}, {3.6850227752177277`*^9, 
   3.685022775795672*^9}, {3.685023044903633*^9, 3.68502304812811*^9}, {
   3.685023096184185*^9, 3.685023105327344*^9}, {3.68502317407924*^9, 
   3.685023177377631*^9}, {3.6850544302906237`*^9, 3.685054440285697*^9}, {
   3.6850923094936934`*^9, 3.685092325453136*^9}, {3.685106259201229*^9, 
   3.685106265961214*^9}, {3.688598836023559*^9, 3.688598849013864*^9}, {
   3.6965890216959953`*^9, 3.6965890309519377`*^9}, {3.696589097592353*^9, 
   3.6965891108405037`*^9}, {3.699738964540736*^9, 3.6997389723018713`*^9}, {
   3.699739657468684*^9, 3.699739657671579*^9}, {3.709336986503264*^9, 
   3.709336986906014*^9}, 3.7101059637995567`*^9, {3.7127809925679693`*^9, 
   3.712781000628695*^9}, {3.71278115551274*^9, 3.7127811822809477`*^9}, {
   3.7127815935140047`*^9, 3.7127815941399603`*^9}, {3.7127833387788973`*^9, 
   3.712783338967395*^9}, {3.715513114189929*^9, 3.715513137008945*^9}, {
   3.715552697916291*^9, 3.715552717079227*^9}, {3.7170816924686317`*^9, 
   3.7170817082668667`*^9}, {3.717082139596806*^9, 3.717082141846559*^9}, {
   3.717197292478732*^9, 3.717197301816625*^9}, 3.717197349531268*^9, {
   3.717197591103633*^9, 3.717197598862875*^9}, {3.7240789516909018`*^9, 
   3.724078958547553*^9}, {3.7240796195101967`*^9, 3.7240796202581987`*^9}, {
   3.724088074578102*^9, 3.724088080677637*^9}, 3.724088512346057*^9, 
   3.7697607054628067`*^9, 3.7704382650400543`*^9, 3.794137240649559*^9, 
   3.7981281327663317`*^9, {3.8004660505842047`*^9, 3.800466056009972*^9}, 
   3.807369342711896*^9, {3.807369684460372*^9, 
   3.807369685076704*^9}},ExpressionUUID->"59489b6b-977a-44cd-8b75-\
e492ae5d22b9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SelectEcoStable", "[", 
    RowBox[{
     RowBox[{"attributes", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "AttributesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"{", "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.717081590956794*^9, 3.7170816075140963`*^9}, 
   3.798128132768458*^9, 3.800466059478656*^9, 3.807369342715551*^9, 
   3.807369685838697*^9},ExpressionUUID->"475cdf26-25f9-4c09-94cf-\
851b1f0d6318"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.769494360970615*^9, 
  3.769494361678247*^9}},ExpressionUUID->"c30f1681-ffdb-4ae6-a047-\
e55d389ad70c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "SelectEcoStable", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.715513137018721*^9},ExpressionUUID->"b4baa49b-dde2-46f4-9a3b-\
b0dd1b3c96e5"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["FindEcoAttractor", "Subsection",
 CellChangeTimes->{
  3.696162141589788*^9, {3.717027858230689*^9, 3.717027859466208*^9}, 
   3.717238754488544*^9},ExpressionUUID->"42d92744-0dbe-4633-a485-\
bbc2b146651e"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"fac7a524-5f7a-4e81-a1df-\
8227c93eb87d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindEcoAttractor", "::", "usage"}], "=", "\n", 
   "\"\<FindEcoAttractor[] tries to find an ecological attractor.\n\
FindEcoAttractor[\!\(\*StyleBox[\"attributes\", \"TI\"]\)] uses trait values \
/ interaction coefficients \!\(\*StyleBox[\"attributes\", \"TI\"]\).\n\
FindEcoAttractor[\!\(\*StyleBox[\"attributes\", \"TI\"]\), \
\!\(\*StyleBox[\"vars\", \"TI\"]\)] solves for variables \
\!\(\*StyleBox[\"vars\", \"TI\"]\) using trait values/interaction \
coefficients \!\(\*StyleBox[\"attributes\", \"TI\"]\).\>\""}], ";"}]], "Code",\

 CellChangeTimes->{{3.7694842968274937`*^9, 3.7694842974860697`*^9}, {
  3.770039743513246*^9, 3.770039804454103*^9}, {3.807399302757969*^9, 
  3.807399311837387*^9}, {3.807399369910343*^9, 3.807399413525978*^9}, {
  3.844291014158927*^9, 3.8442910323722258`*^9}, {3.844338636376485*^9, 
  3.84433864317527*^9}},ExpressionUUID->"c4e6d9fd-4858-487f-bce6-\
0d089afeea4d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"65a488ac-fe1a-4b7b-b6a1-\
8fbfe170d483"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindEcoAttractor", "[", 
    RowBox[{
     RowBox[{"attributesin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "AttributesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], 
     StyleBox[",",
      Background->RGBColor[1, 0.5, 0.5]], 
     StyleBox[
      RowBox[{"vars", ":", 
       RowBox[{"(", 
        RowBox[{"_List", "|", "All"}], ")"}], ":", "All"}],
      Background->RGBColor[1, 0.5, 0.5]], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<FindEcoAttactor\>\"", "]"}]}], ",", 
       "\n", 
       RowBox[{"(*", "options", "*)"}], "\n", "verbose", ",", "verboseall", 
       ",", "method", ",", "\n", "chop", ",", "numtries", ",", "eqtolerance", 
       ",", "ics", ",", "\n", "solveecoeqopts", ",", "nsolveecoeqopts", ",", 
       "findecoeqopts", ",", "ecosimopts", ",", "findecocycleopts", ",", "\n",
        "warmup", ",", "tmax", ",", "finaltmax", ",", "eqthreshold", ",", 
       "time", ",", "period", ",", "maxperiod", ",", "maxperiodmultiplier", 
       ",", "\n", "testvalidity", ",", "teststability", ",", "fixed", ",", 
       "\n", 
       RowBox[{"(*", 
        RowBox[{"other", " ", "variables"}], "*)"}], "\n", "attributes", ",", 
       "inits", ",", "eq", ",", "nonvars", ",", "valideq", ",", "tmp", ",", 
       "evs", ",", "stableeq", ",", "res", ",", "essol", ",", "ddt", ",", 
       "eqflag", ",", "per", ",", "ecosimflag"}], "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"attributes", "=", 
         RowBox[{"FixAttributes", "[", "attributesin", "]"}]}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"method", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Method", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "Automatic", ",", "\"\<SolveEcoEq\>\"", ",", 
               "\"\<NSolveEcoEq\>\"", ",", "\"\<FindEcoEq\>\"", ",", 
               "\"\<EcoSim\>\"", ",", "\"\<FindEcoCycle\>\""}], "}"}], ",", 
             "method"}], "]"}]}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"FindEcoAttractor", "::", "badmtd"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"chop", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Chop", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"numtries", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"NumTries", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"eqtolerance", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"EqTolerance", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"solveecoeqopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"SolveEcoEqOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"nsolveecoeqopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"NSolveEcoEqOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"findecoeqopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"FindEcoEqOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"ecosimopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"EcoSimOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"findecocycleopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"FindEcoCycleOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"warmup", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"WarmUp", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"tmax", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"TMax", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"tmax", "===", "Automatic"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"modelperiod", "\[Equal]", "0"}], "||", 
             RowBox[{"modelperiod", "\[Equal]", "\[Infinity]"}]}], ",", 
            StyleBox[
             RowBox[{"tmax", "=", "1000"}],
             Background->RGBColor[1, 1, 0]], ",", 
            RowBox[{"tmax", "=", 
             RowBox[{"100", "*", "modelperiod"}]}]}], "]"}]}], "]"}], ";", 
        "\n", 
        RowBox[{"finaltmax", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"FinalTMax", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"finaltmax", "===", "Automatic"}], ",", 
          RowBox[{"finaltmax", "=", "tmax"}]}], "]"}], ";", "\n", 
        RowBox[{"numtries", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"NumTries", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"eqthreshold", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"EqThreshold", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"time", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Time", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"period", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Period", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"maxperiod", "=", 
         RowBox[{"Min", "[", 
          RowBox[{
           RowBox[{"tmax", "-", "1"}], ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"MaxPeriod", "/.", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"opts", ",", 
                RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
              "]"}]}], "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"maxperiodmultiplier", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"MaxPeriodMultiplier", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"testvalidity", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"TestValidity", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"teststability", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"TestStability", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"fixed", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Fixed", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"ics", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"ICs", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"ecosimflag", "=", "False"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"Set\[ScriptCapitalN]", "[", "attributes", "]"}], ";", "\n", 
        "\n", 
        StyleBox[
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"vars", "===", "All"}], ",", "\n", "\t", 
           RowBox[{"nonvars", "=", 
            RowBox[{"{", "}"}]}], ",", "\n", "\t", 
           RowBox[{"nonvars", "=", 
            RowBox[{"OrderedComplement", "[", 
             RowBox[{"AllVariables", ",", "vars"}], "]"}]}]}], "\n", "]"}],
         Background->RGBColor[1, 0.5, 0.5]], 
        StyleBox[";",
         Background->RGBColor[1, 0.5, 0.5]], 
        StyleBox["\n",
         Background->RGBColor[1, 0.5, 0.5]], 
        StyleBox[
         RowBox[{"fixed", "=", 
          RowBox[{"JoinFirst", "[", 
           RowBox[{"fixed", ",", 
            RowBox[{"Replace", "[", 
             RowBox[{"nonvars", ",", 
              RowBox[{"x_", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{"x", "\[Rule]", "0"}], ")"}]}], ",", "1"}], "]"}]}], 
           "]"}]}],
         Background->RGBColor[1, 0.5, 0.5]], 
        StyleBox[";",
         Background->RGBColor[1, 0.5, 0.5]], "\n", "\n", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"solveecoeqopts", ",", 
          RowBox[{"Fixed", "\[Rule]", "fixed"}]}], "]"}], ";", "\n", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"nsolveecoeqopts", ",", 
          RowBox[{"Fixed", "\[Rule]", "fixed"}]}], "]"}], ";", "\n", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"findecoeqopts", ",", 
          RowBox[{"Fixed", "\[Rule]", "fixed"}]}], "]"}], ";", "\n", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"ecosimopts", ",", 
          RowBox[{"Fixed", "\[Rule]", "fixed"}]}], "]"}], ";", "\n", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"findecocycleopts", ",", 
          RowBox[{"Fixed", "\[Rule]", "fixed"}]}], "]"}], ";", "\n", "\n", 
        "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"method", "===", "Automatic"}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Which", "[", "\n", "\t\t", 
            RowBox[{
             StyleBox[
              RowBox[{
               RowBox[{"modelperiod", "\[Equal]", "\[Infinity]"}], "&&", 
               RowBox[{"time", "===", "t"}]}],
              Background->RGBColor[1, 1, 0]], 
             StyleBox[",",
              Background->RGBColor[1, 1, 0]], 
             StyleBox["\n",
              Background->RGBColor[1, 1, 0]], 
             StyleBox["\t\t",
              Background->RGBColor[1, 1, 0]], 
             StyleBox[
              RowBox[{"method", "=", "\"\<EcoSim\>\""}],
              Background->RGBColor[1, 1, 0]], 
             StyleBox[",",
              Background->RGBColor[1, 1, 0]], "\n", "\t\t", 
             RowBox[{
              RowBox[{"0", "<", "modelperiod", "<", "\[Infinity]"}], "&&", 
              RowBox[{"time", "===", "t"}]}], ",", "\n", "\t\t", 
             RowBox[{"method", "=", "\"\<FindEcoCycle\>\""}], ",", "\n", 
             "\t\t", 
             RowBox[{"ics", "\[Equal]", 
              RowBox[{"{", "}"}]}], ",", "\n", "\t\t", 
             RowBox[{"method", "=", "\"\<NSolveEcoEq\>\""}], ",", "\n", 
             "\t\t", "Else", ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"naux", "+", "npops", "+", 
                  RowBox[{"Sum", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], "*", 
                    RowBox[{"ngcomps", "[", "gu", "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], 
                  StyleBox["-",
                   Background->RGBColor[1, 0.5, 0.5]], 
                  StyleBox[
                   RowBox[{"Length", "[", "fixed", "]"}],
                   Background->RGBColor[1, 0.5, 0.5]]}], "\[LessEqual]", 
                 "4"}], ",", "\n", "\t\t\t", 
                RowBox[{"method", "=", "\"\<NSolveEcoEq\>\""}], ",", "\n", 
                "\t\t\t", 
                RowBox[{"method", "=", "\"\<FindEcoEq\>\""}]}], "\n", "\t\t", 
               "]"}], ";"}]}], "\n", "\t", "]"}], ";"}]}], "\n", "]"}], ";", 
        "\n", "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"method", "\[Equal]", "\"\<EcoSim\>\""}], ",", 
          RowBox[{"Goto", "[", "ecosim", "]"}], ",", "\n", "\t", 
          RowBox[{"method", "\[Equal]", "\"\<FindEcoCycle\>\""}], ",", 
          RowBox[{"Goto", "[", "findecocycle", "]"}]}], "\n", "]"}], ";", 
        "\n", "\n", "\n", 
        StyleBox[
         RowBox[{"(*", " ", 
          StyleBox[
           RowBox[{"method", " ", "FindEcoEq"}],
           FontVariations->{"Underline"->True}], " ", "*)"}],
         FontSize->16], "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"method", "\[Equal]", "\"\<FindEcoEq\>\""}], ",", "\n", 
          "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: FindEcoEq Mode\>\""}], "]"}]}], 
            "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"ics", "\[Equal]", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{
              RowBox[{"Message", "[", 
               RowBox[{
                RowBox[{"FindEcoAttractor", "::", "novars"}], ",", 
                "\"\<FindEcoEq\>\""}], "]"}], ";", 
              RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
           "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"warmup", ">", "0"}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"Print", "[", 
                  RowBox[{"func", ",", "\"\<: Warming Up...\>\""}], "]"}], 
                 ";", "\n", "\t\t\t", 
                 RowBox[{"With", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"warmup", "=", "warmup"}], ",", 
                    RowBox[{"time", "=", "time"}], ",", 
                    RowBox[{"attributes", "=", "attributes"}], ",", 
                    RowBox[{"ics", "=", "ics"}], ",", 
                    RowBox[{"options", "=", 
                    RowBox[{"Sequence", "@@", "ecosimopts"}]}]}], "}"}], ",", 
                   "\n", "\t\t\t\t", 
                   RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`inits", "=", 
                    RowBox[{"FinalSlice", "[", 
                    RowBox[{"EcoSim", "[", 
                    RowBox[{"attributes", ",", "ics", ",", "warmup", ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", "options"}], 
                    "]"}], "]"}]}], "]"}]}], "]"}]}]}], "\n", "\t\t", "]"}], 
              ";", "\n", "\t\t", 
              RowBox[{"inits", "=", 
               RowBox[{"FinalSlice", "[", 
                RowBox[{"EcoSim", "[", 
                 RowBox[{"attributes", ",", "ics", ",", "warmup", ",", 
                  RowBox[{"Time", "\[Rule]", "time"}], ",", 
                  RowBox[{"Evaluate", "[", 
                   RowBox[{"Sequence", "@@", "ecosimopts"}], "]"}]}], "]"}], 
                "]"}]}], ";"}], "\n", "\t", ",", " ", 
             RowBox[{"(*", " ", "else", " ", "*)"}], "\n", "\t\t", 
             RowBox[{
              RowBox[{"inits", "=", "ics"}], ";"}]}], "\n", "\t", "]"}], ";", 
           "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"inits", "=", "inits"}], ",", 
                 RowBox[{"time", "=", "time"}], ",", 
                 RowBox[{"attributes", "=", "attributes"}], ",", 
                 RowBox[{"options", "=", 
                  RowBox[{"Sequence", "@@", "findecoeqopts"}]}]}], "}"}], ",",
                "\n", "\t\t\t", 
               RowBox[{"PrintCall", "[", 
                RowBox[{"Global`eq", "=", 
                 RowBox[{"FindEcoEq", "[", 
                  RowBox[{"attributes", ",", "inits", ",", 
                   RowBox[{"Time", "\[Rule]", "time"}], ",", "options"}], 
                  "]"}]}], "]"}]}], "]"}]}], "\n", "\t", "]"}], ";", "\n", 
           "\t", 
           RowBox[{"eq", "=", 
            RowBox[{"{", 
             RowBox[{"FindEcoEq", "[", 
              RowBox[{"attributes", ",", "inits", ",", 
               RowBox[{"Time", "\[Rule]", "time"}], ",", 
               RowBox[{"Evaluate", "[", 
                RowBox[{"Sequence", "@@", "findecoeqopts"}], "]"}], ",", 
               RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}], 
             "}"}]}], ";", "\n", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "try", " ", "more", " ", "initial", " ", "conditions", " ", "if", 
             " ", "required"}], " ", "*)"}], "\n", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"numtries", "\[GreaterEqual]", "2"}], ",", "\n", "\t\t", 
             
             RowBox[{
              RowBox[{"Do", "[", "\n", "\t\t\t", 
               RowBox[{"(*", " ", 
                RowBox[{"perturb", " ", "ICs"}], " ", "*)"}], "\n", "\t\t\t", 
               
               RowBox[{
                RowBox[{
                 RowBox[{"inits", "=", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"ReplacePart", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"2", "\[Rule]", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "*", 
                    RowBox[{"10", "^", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}]}]}]}], 
                    "]"}], "&"}], " ", "/@", " ", "ics"}]}], ";", "\n", 
                 "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"verbose", ",", "\n", "\t\t\t\t", 
                   RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"inits", "=", "inits"}], ",", 
                    RowBox[{"time", "=", "time"}], ",", 
                    RowBox[{"attributes", "=", "attributes"}], ",", 
                    RowBox[{"options", "=", 
                    RowBox[{"Sequence", "@@", "findecoeqopts"}]}]}], "}"}], 
                    ",", "\n", "\t\t\t\t\t", 
                    RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`tmp", "=", 
                    RowBox[{"FindEcoEq", "[", 
                    RowBox[{"attributes", ",", "inits", ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", "options"}], 
                    "]"}]}], "]"}]}], "]"}]}], "\n", "\t\t\t", "]"}], ";", 
                 "\n", "\t\t\t", 
                 RowBox[{"tmp", "=", 
                  RowBox[{"FindEcoEq", "[", 
                   RowBox[{"attributes", ",", "inits", ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "findecoeqopts"}], "]"}], ",", 
                    RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], 
                   "]"}]}], ";", "\n", "\t\t\t", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                   RowBox[{"if", " ", "distinct", " ", "eq"}], ",", " ", 
                   RowBox[{"add", " ", "to", " ", "tmp"}]}], " ", "*)"}], 
                 "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"tmp", "\[NotEqual]", 
                    RowBox[{"{", "}"}]}], ",", "\n", "\t\t\t\t", 
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"CompoundAnd", "[", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"RuleListDistance", "[", 
                    RowBox[{"tmp", ",", "bar", ",", 
                    RowBox[{
                    "DistanceFunction", "\[Rule]", "ChessboardDistance"}]}], 
                    "]"}], ">", "eqtolerance"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"bar", ",", "eq"}], "}"}]}], "]"}], "]"}], ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"eq", ",", "tmp"}], "]"}]}], "]"}], ";"}]}], "\n",
                   "\t\t\t", "]"}], ";"}], "\n", "\t\t", ",", 
                RowBox[{"{", 
                 RowBox[{"numtries", "-", "1"}], "}"}]}], "]"}], ";"}]}], 
            "\n", "\t", "]"}], ";"}]}], "\t", "\n", "]"}], ";", "\n", "\n", 
        "\n", 
        StyleBox[
         RowBox[{"(*", " ", 
          StyleBox[
           RowBox[{"method", " ", "SolveEcoEq"}],
           FontVariations->{"Underline"->True}], " ", "*)"}],
         FontSize->16], "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"method", "\[Equal]", "\"\<SolveEcoEq\>\""}], ",", "\n", 
          "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{"func", ",", "\"\<: SolveEcoEq Mode\>\""}], "]"}], ";",
               "\n", "\t\t", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"time", "=", "time"}], ",", 
                  RowBox[{"attributes", "=", "attributes"}], ",", 
                  RowBox[{"options", "=", 
                   RowBox[{"Sequence", "@@", "solveecoeqopts"}]}]}], "}"}], 
                ",", "\n", "\t\t\t", 
                RowBox[{"PrintCall", "[", 
                 RowBox[{"Global`eq", "=", 
                  RowBox[{"SolveEcoEq", "[", 
                   RowBox[{"attributes", ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", "options"}], 
                   "]"}]}], "]"}]}], "]"}]}]}], "\n", "\t", "]"}], ";", "\n", 
           "\t", 
           RowBox[{"eq", "=", 
            RowBox[{"SolveEcoEq", "[", 
             RowBox[{"attributes", ",", 
              RowBox[{"Time", "\[Rule]", "time"}], ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "solveecoeqopts"}], "]"}], ",", 
              RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}], 
           ";"}]}], "\n", "]"}], ";", "\n", "\n", "\n", 
        StyleBox[
         RowBox[{"(*", " ", 
          StyleBox[
           RowBox[{"method", " ", "NSolveEcoEq"}],
           FontVariations->{"Underline"->True}], " ", "*)"}],
         FontSize->16], "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"method", "\[Equal]", "\"\<NSolveEcoEq\>\""}], ",", "\n", 
          "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{"func", ",", "\"\<: NSolveEcoEq Mode\>\""}], "]"}], 
              ";", "\n", "\t\t", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"time", "=", "time"}], ",", 
                  RowBox[{"attributes", "=", "attributes"}], ",", 
                  RowBox[{"options", "=", 
                   RowBox[{"Sequence", "@@", "nsolveecoeqopts"}]}]}], "}"}], 
                ",", "\n", "\t\t\t", 
                RowBox[{"PrintCall", "[", 
                 RowBox[{"Global`eq", "=", 
                  RowBox[{"Union", "[", 
                   RowBox[{"NSolveEcoEq", "[", 
                    RowBox[{"attributes", ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", "options"}], 
                    "]"}], "]"}]}], "]"}]}], "]"}]}]}], "\n", "\t", "]"}], 
           ";", "\n", "\t", 
           RowBox[{"eq", "=", 
            RowBox[{"NSolveEcoEq", "[", 
             RowBox[{"attributes", ",", 
              RowBox[{"Time", "\[Rule]", "time"}], ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "nsolveecoeqopts"}], "]"}], ",", 
              RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}], 
           ";"}]}], "\n", "\t", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<eq=\>\"", ",", "eq"}], "]"}], ";"}], "*)"}], "\n", 
         "\t", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"eq", "==", "\[InvisibleSpace]", "$Failed"}], ",", "\n", 
             "\t\t", 
             RowBox[{"eq", "=", 
              RowBox[{"{", "}"}]}], ",", "\n", "\t\t", 
             RowBox[{"eq", "=", 
              RowBox[{"EqSort", "[", 
               RowBox[{"Union", "[", 
                RowBox[{"Flatten", "[", 
                 RowBox[{
                  RowBox[{"{", "eq", "}"}], ",", "1"}], "]"}], "]"}], 
               "]"}]}]}], "\n", "\t", "]"}], ";"}], "*)"}], "\n", "]"}], ";", 
        "\n", "\n", "\n", 
        StyleBox[
         RowBox[{"(*", " ", 
          StyleBox[
           RowBox[{"method", " ", "FindEcoCycle"}],
           FontVariations->{"Underline"->True}], " ", "*)"}],
         FontSize->16], "\n", "\n", 
        RowBox[{"Label", "[", "findecocycle", "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"method", "\[Equal]", "\"\<FindEcoCycle\>\""}], ",", "\n", 
          "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: FindEcoCycle Mode\>\""}], "]"}]}], 
            "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"ics", "\[Equal]", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{
              RowBox[{"Message", "[", 
               RowBox[{
                RowBox[{"FindEcoAttractor", "::", "novars"}], ",", 
                "\"\<FindEcoCycle\>\""}], "]"}], ";", 
              RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\n", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "figure", " ", "out", " ", "period", " ", "to", " ", "try"}], " ",
             "*)"}], "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"period", "===", "Automatic"}], ",", "\n", "\t\t", 
             RowBox[{"Which", "[", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"modelperiod", "=!=", "0"}], ",", "\n", "\t\t\t", 
               RowBox[{"per", "=", "modelperiod"}], ",", "\n", "\t\t\t", 
               RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], ",",
                "\n", "\t\t\t", 
               RowBox[{"per", "=", "1"}]}], "\n", "\t\t", "]"}], "\n", "\t", 
             ",", "\n", "\t\t", 
             RowBox[{"per", "=", "period"}]}], "\n", "\t", "]"}], ";", "\n", 
           "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"ecosimflag", "\[Equal]", "False"}], ",", " ", 
             RowBox[{"(*", " ", 
              RowBox[{"if", " ", "we", " ", 
               RowBox[{"haven", "'"}], "t", " ", "already", " ", "been", " ", 
               "through", " ", "ecosim"}], " ", "*)"}], "\n", "\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"warmup", ">", "0"}], ",", "\n", "\t\t\t", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{"verbose", ",", "\n", "\t\t\t\t", 
                  RowBox[{
                   RowBox[{"Print", "[", 
                    RowBox[{"func", ",", "\"\<: Warming up...\>\""}], "]"}], 
                   ";", "\n", "\t\t\t\t", 
                   RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"warmup", "=", "warmup"}], ",", 
                    RowBox[{"per", "=", "per"}], ",", 
                    RowBox[{"time", "=", "time"}], ",", 
                    RowBox[{"attributes", "=", "attributes"}], ",", 
                    RowBox[{"options", "=", 
                    RowBox[{"Sequence", "@@", "ecosimopts"}]}]}], "}"}], ",", 
                    "\n", "\t\t\t\t\t", 
                    RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`inits", "=", 
                    RowBox[{"FinalSlice", "[", 
                    RowBox[{"EcoSim", "[", 
                    RowBox[{"attributes", ",", "ics", ",", 
                    RowBox[{"Floor", "[", 
                    RowBox[{"warmup", ",", "per"}], "]"}], ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", "options"}], 
                    "]"}], "]"}]}], "]"}]}], "]"}]}]}], "\n", "\t\t\t", "]"}],
                 ";", "\n", "\t\t\t", 
                RowBox[{"inits", "=", 
                 RowBox[{"FinalSlice", "[", 
                  RowBox[{"EcoSim", "[", 
                   RowBox[{"attributes", ",", "ics", ",", 
                    RowBox[{"Floor", "[", 
                    RowBox[{"warmup", ",", "per"}], "]"}], ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "ecosimopts"}], "]"}]}], "]"}], 
                  "]"}]}], ";"}], "\n", "\t\t", ",", " ", 
               RowBox[{"(*", " ", "else", " ", "*)"}], "\n", "\t\t\t", 
               RowBox[{
                RowBox[{"inits", "=", "ics"}], ";"}]}], "\n", "\t\t", "]"}], 
             ",", "\n", "\t\t", 
             RowBox[{"inits", "=", 
              RowBox[{"FinalSlice", "[", "essol", "]"}]}]}], " ", 
            RowBox[{"(*", " ", 
             RowBox[{
             "if", " ", "we", " ", "have", " ", "been", " ", "through", " ", 
              "ecosim", " ", "before"}], " ", "*)"}], "\n", "\t", "]"}], ";", 
           "\n", "\t", "\n", "\t", 
           RowBox[{"Which", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], ",", 
             "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", "\n", "\t\t\t", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"inits", "=", "inits"}], ",", 
                    RowBox[{"per", "=", "per"}], ",", 
                    RowBox[{
                    "maxperiodmultiplier", "=", "maxperiodmultiplier"}], ",", 
                    
                    RowBox[{"attributes", "=", "attributes"}], ",", 
                    RowBox[{"options", "=", 
                    RowBox[{"Sequence", "@@", "findecocycleopts"}]}]}], "}"}],
                   ",", "\n", "\t\t\t\t", 
                  RowBox[{"PrintCall", "[", 
                   RowBox[{"Global`eq", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"FindEcoCycle", "[", 
                    RowBox[{"attributes", ",", "inits", ",", "options", ",", 
                    RowBox[{"Period", "\[Rule]", 
                    RowBox[{"Global`permult", "*", "per"}]}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Global`permult", ",", "maxperiodmultiplier"}], 
                    "}"}]}], "]"}]}], "]"}]}], "]"}]}], "\n", "\t\t", "]"}], 
              ";", "\n", "\t\t", 
              RowBox[{"eq", "=", 
               RowBox[{"Table", "[", "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"FindEcoCycle", "[", 
                  RowBox[{"attributes", ",", "inits", ",", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "findecocycleopts"}], "]"}], 
                   ",", 
                   RowBox[{"Period", "\[Rule]", 
                    RowBox[{"permult", "*", "per"}]}]}], "]"}], "\n", "\t\t", 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"permult", ",", "maxperiodmultiplier"}], "}"}]}], 
                "]"}]}], ";", "\n", "\t\t", 
              RowBox[{"(*", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"remove", " ", "$Failed"}], " ", "&"}], " ", 
                "multiple", " ", "period", " ", "solutions"}], " ", "*)"}], 
              "\n", "\t\t", 
              RowBox[{"eq", "=", 
               RowBox[{"Select", "[", 
                RowBox[{"eq", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "=!=", "$Failed"}], "&&", 
                   RowBox[{
                    RowBox[{"FindPeriod", "[", "#", "]"}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "[", 
                    "\"\<PathLength\>\"", "]"}]}]}], "&"}]}], "]"}]}], ";"}], 
             "\n", "\t", ",", "\n", "\t\t", 
             RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], ",",
              "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", "\n", "\t\t\t", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"inits", "=", "inits"}], ",", 
                    RowBox[{"attributes", "=", "attributes"}], ",", 
                    RowBox[{"options", "=", 
                    RowBox[{"Sequence", "@@", "findecocycleopts"}]}]}], "}"}],
                   ",", "\n", "\t\t\t\t", 
                  RowBox[{"PrintCall", "[", 
                   RowBox[{"Global`eq", "=", 
                    RowBox[{"FindEcoCycle", "[", 
                    RowBox[{"attributes", ",", "inits", ",", "options"}], 
                    "]"}]}], "]"}]}], "]"}]}], "\n", "\t\t", "]"}], ";", "\n",
               "\t\t", 
              RowBox[{"eq", "=", 
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"FindEcoCycle", "[", 
                   RowBox[{"attributes", ",", "inits", ",", 
                    RowBox[{"VerboseAll", "\[Rule]", "verboseall"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "findecocycleopts"}], "]"}]}], 
                   "]"}], "}"}], ",", 
                 RowBox[{
                  RowBox[{"#", "=!=", "$Failed"}], "&"}]}], "]"}]}]}]}], "\n",
             "\t", "]"}], ";"}]}], "\t", "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: eq=\>\"", ",", "eq"}], "]"}]}], "]"}], 
        ";", "\n", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "assess", " ", "validity", " ", "and", " ", "stability", " ", "of", 
          " ", "eq"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"testvalidity", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"!", 
               RowBox[{"ListQ", "[", "eq", "]"}]}], "||", 
              RowBox[{"eq", "\[Equal]", 
               RowBox[{"{", "}"}]}], "||", 
              RowBox[{"eq", "===", 
               RowBox[{"{", "$Failed", "}"}]}]}], ",", " ", 
             RowBox[{"(*", " ", 
              RowBox[{"in", " ", "case", " ", "of", " ", 
               RowBox[{"Solve", "/", "NSolve"}], " ", "or", " ", 
               "FindEcoCycle", " ", "failure"}], " ", "*)"}], "\n", "\t\t", 
             RowBox[{"valideq", "=", 
              RowBox[{"{", "}"}]}], "\n", "\t", ",", " ", "\n", "\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Head", "[", 
                 RowBox[{"eq", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", "1", ",", "2"}], 
                  "\[RightDoubleBracket]"}], "]"}], "=!=", 
                "InterpolatingFunction"}], ",", "\n", "\t\t\t", 
               RowBox[{
                RowBox[{"valideq", "=", 
                 RowBox[{"SelectValid", "[", "eq", "]"}]}], ";", "\n", 
                "\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{"verbose", ",", 
                  RowBox[{"Print", "[", 
                   RowBox[{
                   "func", ",", "\"\<: valid eq=\>\"", ",", "valideq"}], 
                   "]"}]}], "]"}], ";"}], "\n", "\t\t", ",", "\n", "\t\t\t", 
               RowBox[{"valideq", "=", "eq"}]}], " ", 
              RowBox[{"(*", " ", 
               RowBox[{"SelectValid", " ", 
                RowBox[{"doesn", "'"}], "t", " ", "work", " ", "on", " ", 
                "InterpolatingFunctions", " ", "yet"}], " ", "*)"}], "\n", 
              "\t\t", "]"}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"valideq", "\[Equal]", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{"Message", "[", 
              RowBox[{"FindEcoAttractor", "::", "novalideq"}], "]"}]}], "]"}],
            ";"}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"teststability", ",", "\n", "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"!", 
              RowBox[{"ListQ", "[", "eq", "]"}]}], "||", 
             RowBox[{"eq", "\[Equal]", 
              RowBox[{"{", "}"}]}], "||", 
             RowBox[{"eq", "===", 
              RowBox[{"{", "$Failed", "}"}]}]}], ",", " ", 
            RowBox[{"(*", " ", 
             RowBox[{"in", " ", "case", " ", "of", " ", 
              RowBox[{"Solve", "/", "NSolve"}], " ", "or", " ", 
              "FindEcoCycle", " ", "failure"}], " ", "*)"}], "\n", "\t\t", 
            RowBox[{"stableeq", "=", 
             RowBox[{"{", "}"}]}], "\n", "\t", ",", "\n", "\t\t", 
            RowBox[{
             RowBox[{"stableeq", "=", 
              RowBox[{"SelectEcoStable", "[", 
               RowBox[{"attributes", ",", "valideq", ",", 
                RowBox[{"Time", "\[Rule]", "time"}], ",", 
                RowBox[{"Fixed", "\[Rule]", "fixed"}]}], "]"}]}], ";", "\n", 
             "\t\t", 
             RowBox[{"If", "[", 
              RowBox[{"verbose", ",", 
               RowBox[{"Print", "[", 
                RowBox[{
                "func", ",", "\"\<: stable eq=\>\"", ",", "stableeq"}], 
                "]"}]}], "]"}], ";"}]}], "\n", "\t", "]"}], "\n", ",", "\n", 
          "\t", 
          RowBox[{"stableeq", "=", "valideq"}]}], "\n", "]"}], ";", "\n", 
        "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "stableeq", "]"}], "\[Equal]", "0"}], ",", 
          " ", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"no", " ", "stable", " ", "eq"}], ",", " ", 
            RowBox[{"try", " ", "EcoSim", " ", "once"}]}], " ", "*)"}], "\n", 
          "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ecosimflag", "\[Equal]", "False"}], ",", "\n", "\t\t", 
            RowBox[{
             RowBox[{"Message", "[", 
              RowBox[{
               RowBox[{"FindEcoAttractor", "::", "nosteq"}], ",", 
               "attributes"}], "]"}], ";", "\n", "\t\t", 
             RowBox[{"method", "=", "\"\<EcoSim\>\""}]}], "\n", "\t", ",", 
            "\n", "\t\t", 
            RowBox[{
             RowBox[{"Message", "[", 
              RowBox[{"FindEcoAttractor", "::", "giveup"}], "]"}], ";", "\n", 
             "\t\t", 
             RowBox[{"Return", "[", 
              RowBox[{"EcoSim", "[", 
               RowBox[{"attributes", ",", 
                RowBox[{"FinalSlice", "[", "essol", "]"}], ",", "finaltmax", 
                ",", 
                RowBox[{"Time", "\[Rule]", "time"}], ",", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"Sequence", "@@", "ecosimopts"}], "]"}], ",", 
                RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}], 
              "]"}]}]}], "\n", "\t", "]"}]}], "\n", "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "stableeq", "]"}], "\[Equal]", "1"}], ",", 
          RowBox[{
           RowBox[{"res", "=", 
            RowBox[{
            "stableeq", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}]}], ";", 
           RowBox[{"Goto", "[", "done", "]"}]}]}], "]"}], ";", " ", 
        RowBox[{"(*", " ", "successful", " ", "*)"}], "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "stableeq", "]"}], "\[GreaterEqual]", "2"}],
           ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"FindEcoAttractor", "::", "musteq"}], ",", 
             RowBox[{"Length", "[", "stableeq", "]"}], ",", "attributes"}], 
            "]"}], ";", 
           RowBox[{"method", "=", "\"\<EcoSim\>\""}]}]}], 
         RowBox[{"(*", 
          RowBox[{";", 
           RowBox[{"Goto", "[", "done", "]"}]}], "*)"}], "]"}], ";", "\n", 
        "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"if", " ", 
           RowBox[{"we", "'"}], "re", " ", "still", " ", "here"}], ",", " ", 
          RowBox[{
          "then", " ", "there", " ", "must", " ", "be", " ", "no", " ", 
           "stable", " ", 
           RowBox[{"equilibrium", " ", "--"}], " ", "switch", " ", "to", " ", 
           "EcoSim"}]}], " ", "*)"}], "\n", "\n", 
        StyleBox[
         RowBox[{"(*", " ", 
          RowBox[{"method", " ", 
           StyleBox["EcoSim",
            FontVariations->{"Underline"->True}]}], " ", "*)"}],
         FontSize->16], "\n", "\n", 
        RowBox[{"Label", "[", "ecosim", "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"method", "\[Equal]", "\"\<EcoSim\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: EcoSim Mode\>\""}], "]"}]}], "]"}], 
           ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"ics", "\[Equal]", 
              RowBox[{"{", "}"}]}], ",", "\n", "\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "eq", "]"}], ">", "0"}], ",", "\n", 
               "\t\t\t", 
               RowBox[{"ics", "=", 
                RowBox[{"RuleListAdd", "[", 
                 RowBox[{
                  RowBox[{"RuleListMultiply", "[", 
                   RowBox[{
                    RowBox[{"eq", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], ",", "1.01"}], "]"}], 
                  ",", "0.01"}], "]"}]}], ",", "\n", "\t\t\t", 
               RowBox[{"Message", "[", 
                RowBox[{
                 RowBox[{"FindEcoAttractor", "::", "novars"}], ",", 
                 "\"\<EcoSim\>\""}], "]"}]}], "\n", "\t\t", "]"}]}], "\n", 
            "\t", "]"}], ";", "\n", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "inits", "]"}], "\[Equal]", "0"}], ",", 
             RowBox[{"inits", "=", "ics"}]}], "]"}], ";", "\n", "\t", "\n", 
           "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"inits", "=", "inits"}], ",", 
                 RowBox[{"tmax", "=", "tmax"}], ",", 
                 RowBox[{"time", "=", "time"}], ",", 
                 RowBox[{"attributes", "=", "attributes"}], ",", 
                 RowBox[{"options", "=", 
                  RowBox[{"Sequence", "@@", "ecosimopts"}]}]}], "}"}], ",", 
               "\n", "\t\t\t", 
               RowBox[{"PrintCall", "[", 
                RowBox[{"Global`eesol", "=", 
                 RowBox[{"EcoSim", "[", 
                  RowBox[{"attributes", ",", "inits", ",", "tmax", ",", 
                   RowBox[{"Time", "\[Rule]", "time"}], ",", "options"}], 
                  "]"}]}], "]"}]}], "]"}]}], "\n", "\t", "]"}], ";", "\n", 
           "\n", "\t", 
           RowBox[{"essol", "=", 
            RowBox[{"EcoSim", "[", 
             RowBox[{"attributes", ",", "inits", ",", "tmax", ",", 
              RowBox[{"Time", "\[Rule]", "time"}], ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "ecosimopts"}], "]"}], ",", 
              RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}], ";",
            "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"PlotDynamics", "[", "essol", "]"}], "]"}]}], "]"}], 
           ";", "\n", "\t", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"if", " ", "aperiodically", " ", "forced"}], ",", " ", 
             RowBox[{
              RowBox[{"we", "'"}], "re", " ", "done"}]}], " ", "*)"}], "\n", 
           "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"modelperiod", "===", "\[Infinity]"}], ",", 
             RowBox[{
              RowBox[{"res", "=", "essol"}], ";", 
              RowBox[{"Goto", "[", "done", "]"}]}]}], "]"}], ";", "\n", "\t", 
           "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "otherwise", " ", "check", " ", "for", " ", "equilibrium", " ", 
             RowBox[{"(", 
              RowBox[{"or", " ", "modelperiod", " ", "cycle"}], ")"}]}], " ", 
            "*)"}], "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"0", "<", "modelperiod"}], ",", "\n", "\t\t", 
             RowBox[{"ddt", "=", 
              RowBox[{
               RowBox[{"FinalDerivatives", "[", 
                RowBox[{"essol", ",", "modelperiod"}], "]"}], 
               "\[LeftDoubleBracket]", 
               RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], ",", 
             "\n", "\t\t", 
             RowBox[{"ddt", "=", 
              RowBox[{
               RowBox[{"FinalDerivatives", "[", "essol", "]"}], 
               "\[LeftDoubleBracket]", 
               RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}]}], "\n",
             "\t", "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: d/dt=\>\"", ",", "ddt"}], "]"}]}], 
            "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{"Abs", "[", "ddt", "]"}], "]"}], "<", "eqthreshold"}], 
             ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{"func", ",", "\"\<: Equilibrium found\>\""}], 
                 "]"}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{"(*", " ", 
               RowBox[{"construct", " ", "stableeq"}], " ", "*)"}], "\n", 
              "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"modelperiod", "=!=", "0"}], ",", "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                   "modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], ",", 
                   RowBox[{"res", "=", 
                    RowBox[{"FinalSlice", "[", 
                    RowBox[{"essol", ",", "modelperiod"}], "]"}]}]}], "]"}], 
                 ";", "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], 
                   ",", 
                   RowBox[{"res", "=", 
                    RowBox[{"FinalSlice", "[", 
                    RowBox[{"essol", ",", 
                    RowBox[{"modelperiod", "-", "1"}]}], "]"}]}]}], "]"}]}], 
                "\n", "\t\t", ",", "\n", "\t\t\t", 
                RowBox[{"res", "=", 
                 RowBox[{"FinalSlice", "[", "essol", "]"}]}]}], "\n", "\t\t", 
               "]"}], ";", "\n", "\t\t", 
              RowBox[{"Goto", "[", "done", "]"}], ";"}], "\n", "\t", ",", 
             "\n", "\t\t", 
             RowBox[{"(*", " ", 
              RowBox[{"steady", " ", "state", " ", "eq", " ", "failed"}], " ",
               "*)"}], "\n", "\t\t", 
             RowBox[{
              RowBox[{"Message", "[", 
               RowBox[{
                RowBox[{"FindEcoAttractor", "::", "nostst"}], ",", "ddt", ",",
                 "tmax"}], "]"}], ";", "\n", "\t\t", 
              RowBox[{"(*", " ", 
               RowBox[{
               "attempt", " ", "to", " ", "find", " ", "Period", " ", "using",
                 " ", "FindEcoCycle", " ", "approach"}], " ", "*)"}], "\n", 
              "\t\t", 
              RowBox[{"ecosimflag", "=", "True"}], ";", " ", 
              RowBox[{"(*", " ", 
               RowBox[{
               "already", " ", "been", " ", "through", " ", "ecosim"}], " ", 
               "*)"}], "\n", "\t\t", 
              RowBox[{"method", "=", "\"\<FindEcoCycle\>\""}], ";", "\n", 
              "\t\t", 
              RowBox[{"period", "=", 
               RowBox[{"FindPeriod", "[", 
                RowBox[{"essol", ",", 
                 RowBox[{"MaxPeriod", "\[Rule]", "maxperiod"}]}], "]"}]}], 
              ";", "\n", "\t\t", 
              RowBox[{"Goto", "[", "findecocycle", "]"}], ";"}]}], "\n", "\t",
             "]"}], ";"}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"Label", "[", "done", "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"chop", ",", "\n", "\t", 
          RowBox[{"Return", "[", 
           RowBox[{"Chop", "[", "res", "]"}], "]"}], ",", "\n", "\t", 
          RowBox[{"Return", "[", "res", "]"}]}], "\n", "]"}], ";"}]}], "\n", 
      "\n", "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.685097582350366*^9, 3.68509767955573*^9}, {
   3.685097865517953*^9, 3.6850979218171053`*^9}, {3.685105488608816*^9, 
   3.685105491086103*^9}, 3.687881451974711*^9, {3.688571686676597*^9, 
   3.6885716878055353`*^9}, {3.68857175926897*^9, 3.688571760170783*^9}, {
   3.68857180611154*^9, 3.6885718061593657`*^9}, {3.688598871701103*^9, 
   3.688598872316009*^9}, {3.688598902895031*^9, 3.688598906024179*^9}, {
   3.688599032012104*^9, 3.6885991151305943`*^9}, {3.688599149831212*^9, 
   3.688599160187595*^9}, {3.688599196390895*^9, 3.688599210465152*^9}, {
   3.6885992477423983`*^9, 3.688599250741025*^9}, {3.688599298248004*^9, 
   3.688599370607283*^9}, {3.69359333578337*^9, 3.693593338737508*^9}, {
   3.693869717495245*^9, 3.693869717547611*^9}, {3.696151024578425*^9, 
   3.696151024697864*^9}, {3.696162141618515*^9, 3.696162142097598*^9}, {
   3.696163757901952*^9, 3.696163761146559*^9}, {3.6961795088195267`*^9, 
   3.696179509298678*^9}, {3.6961801519637423`*^9, 3.696180154840375*^9}, {
   3.69618047682104*^9, 3.696180499559513*^9}, {3.696180535396537*^9, 
   3.696180551975226*^9}, {3.69618078638026*^9, 3.696180846388883*^9}, {
   3.696202673143579*^9, 3.696202692185684*^9}, {3.696202862108498*^9, 
   3.696202907770053*^9}, {3.6962029615041323`*^9, 3.696202973859426*^9}, {
   3.696541576040053*^9, 3.6965416628688383`*^9}, {3.696541704857338*^9, 
   3.696541753354097*^9}, {3.696543241441813*^9, 3.6965432699049797`*^9}, {
   3.696543345066312*^9, 3.696543379902446*^9}, {3.696543857947782*^9, 
   3.696543877659896*^9}, 3.696546952170947*^9, {3.696551431690721*^9, 
   3.696551476812701*^9}, {3.696588133908807*^9, 3.696588135612742*^9}, {
   3.696588264404606*^9, 3.6965882848447943`*^9}, {3.696589224819448*^9, 
   3.696589232562924*^9}, {3.696589370220071*^9, 3.696589438475299*^9}, 
   3.696589489666494*^9, {3.696606739746984*^9, 3.696606862465952*^9}, {
   3.696607219900128*^9, 3.6966072406906147`*^9}, {3.6966756271589317`*^9, 
   3.696675628206026*^9}, {3.696676033267845*^9, 3.696676033757658*^9}, {
   3.696676072959565*^9, 3.6966760774495163`*^9}, {3.696676152837698*^9, 
   3.696676160126951*^9}, {3.6966800976564837`*^9, 3.696680118839117*^9}, {
   3.696680225735392*^9, 3.696680232758025*^9}, {3.6966806151623907`*^9, 
   3.696680632989931*^9}, {3.696681488348325*^9, 3.696681497201639*^9}, {
   3.6966815463678093`*^9, 3.696681546517047*^9}, {3.699565807730485*^9, 
   3.699565855672001*^9}, {3.6996208575931673`*^9, 3.6996208776649227`*^9}, {
   3.699621223494404*^9, 3.69962124607917*^9}, {3.699621752918661*^9, 
   3.69962177480336*^9}, {3.6996260258944073`*^9, 3.699626039441313*^9}, {
   3.699626087599758*^9, 3.699626090389203*^9}, {3.699654280209773*^9, 
   3.699654298123789*^9}, {3.699654345783394*^9, 3.699654350105208*^9}, {
   3.69965728392162*^9, 3.699657315902357*^9}, 3.699694770206373*^9, {
   3.708668286800243*^9, 3.708668322325473*^9}, {3.708668388442877*^9, 
   3.708668406753677*^9}, {3.708834643174157*^9, 3.708834660517186*^9}, {
   3.7093367551882057`*^9, 3.709336756579803*^9}, {3.7101059644406557`*^9, 
   3.710105966186714*^9}, 3.7102026196155767`*^9, {3.7102503426346827`*^9, 
   3.710250359571354*^9}, {3.710255102377726*^9, 3.710255116442388*^9}, {
   3.710255305593939*^9, 3.710255352488514*^9}, {3.710255396724723*^9, 
   3.7102553983687887`*^9}, {3.710255486635791*^9, 3.710255506530343*^9}, 
   3.712738534828776*^9, 3.715513137045794*^9, 3.715555899201139*^9, {
   3.7155560215357323`*^9, 3.715556026935817*^9}, {3.715556103718534*^9, 
   3.715556104197234*^9}, {3.716932459271303*^9, 3.7169324700750313`*^9}, {
   3.7169327623216267`*^9, 3.716932762480215*^9}, 3.7169333695967007`*^9, {
   3.716934446585146*^9, 3.716934458227775*^9}, {3.71699701179326*^9, 
   3.716997046396206*^9}, {3.716997177359577*^9, 3.716997178889123*^9}, {
   3.716997505595084*^9, 3.716997541149931*^9}, {3.717001650758082*^9, 
   3.717001679524218*^9}, {3.717001737995591*^9, 3.717001752744206*^9}, {
   3.717002110622446*^9, 3.7170021439901447`*^9}, {3.717002185669815*^9, 
   3.7170022282711554`*^9}, {3.717002605871031*^9, 3.717002639023438*^9}, {
   3.7170028780881767`*^9, 3.7170028941186323`*^9}, {3.717003178129177*^9, 
   3.7170032128908978`*^9}, {3.7170057714294567`*^9, 3.717005881553329*^9}, 
   3.717005927536137*^9, {3.717006005477717*^9, 3.717006013554742*^9}, {
   3.717006337197969*^9, 3.7170063618635693`*^9}, {3.71700656215558*^9, 
   3.717006582858769*^9}, {3.71700684430569*^9, 3.717006893713359*^9}, {
   3.717007302528954*^9, 3.717007330732265*^9}, {3.717016613840226*^9, 
   3.717016637518997*^9}, {3.717016926428451*^9, 3.717017032767908*^9}, {
   3.717017860562674*^9, 3.71701789025036*^9}, 3.7170813043491983`*^9, {
   3.717081365188531*^9, 3.717081479021072*^9}, 3.717081522778768*^9, {
   3.717082006766004*^9, 3.717082012531375*^9}, {3.717251659721352*^9, 
   3.7172516598532133`*^9}, {3.7172516935839567`*^9, 3.717251804699563*^9}, {
   3.7172527704081*^9, 3.717252827573163*^9}, {3.717261923424346*^9, 
   3.717261957574039*^9}, {3.7172821890577106`*^9, 3.717282225208077*^9}, {
   3.7182265620669193`*^9, 3.718226640917939*^9}, {3.718226690846854*^9, 
   3.718226817496024*^9}, {3.718227150312459*^9, 3.718227201959282*^9}, {
   3.7182276608052*^9, 3.7182277153800087`*^9}, {3.718227809271353*^9, 
   3.718227838722146*^9}, {3.718228249086643*^9, 3.718228249741837*^9}, {
   3.71822835698909*^9, 3.718228391501648*^9}, {3.7182285110280113`*^9, 
   3.7182285334456778`*^9}, {3.718228632304298*^9, 3.718228636171076*^9}, {
   3.718229211502521*^9, 3.7182292118108673`*^9}, {3.718284631570945*^9, 
   3.7182846327757587`*^9}, {3.718289014104642*^9, 3.7182890197638283`*^9}, {
   3.718290181289939*^9, 3.718290193009221*^9}, {3.7182962980795383`*^9, 
   3.718296298686838*^9}, {3.7182965809445887`*^9, 3.71829663832939*^9}, {
   3.718296726353437*^9, 3.718296730753749*^9}, {3.718297458282959*^9, 
   3.7182974584802923`*^9}, {3.718297524298752*^9, 3.7182975403140793`*^9}, {
   3.718316291018499*^9, 3.718316312846714*^9}, {3.7183165292853947`*^9, 
   3.71831660119451*^9}, {3.7183166381164618`*^9, 3.718316681154224*^9}, {
   3.7183167873275223`*^9, 3.7183168229797277`*^9}, {3.718316925455974*^9, 
   3.718316936340747*^9}, {3.7183169898627977`*^9, 3.7183170335938272`*^9}, {
   3.7183171666138144`*^9, 3.718317195763543*^9}, {3.718317249137035*^9, 
   3.7183172807639008`*^9}, {3.71831731609317*^9, 3.718317316215317*^9}, {
   3.71831737871758*^9, 3.718317500611595*^9}, {3.718317531481064*^9, 
   3.718317573888517*^9}, {3.718317642077389*^9, 3.718317666213656*^9}, {
   3.718317723913127*^9, 3.7183178817048693`*^9}, {3.718318222469594*^9, 
   3.718318251089768*^9}, {3.718318367322722*^9, 3.718318373927114*^9}, {
   3.718319209993951*^9, 3.718319216752802*^9}, {3.718319247432889*^9, 
   3.718319336625187*^9}, {3.7183193852132387`*^9, 3.718319475953883*^9}, {
   3.718319520139863*^9, 3.718319554943993*^9}, 3.718319627644312*^9, 
   3.71831969235464*^9, {3.718319743606235*^9, 3.718319747046225*^9}, {
   3.718319829776731*^9, 3.7183198659157743`*^9}, {3.71832013013828*^9, 
   3.7183201890957537`*^9}, {3.718320249283497*^9, 3.718320281913069*^9}, {
   3.718320365543085*^9, 3.7183203908720913`*^9}, {3.718320439892302*^9, 
   3.7183205931464663`*^9}, {3.718320628503869*^9, 3.718320656950363*^9}, 
   3.718320693702249*^9, {3.718320726753755*^9, 3.718320746548176*^9}, {
   3.71832602457957*^9, 3.718326064750548*^9}, {3.7183261357195797`*^9, 
   3.718326159853806*^9}, {3.718327233849889*^9, 3.718327236947706*^9}, {
   3.718327767834896*^9, 3.718327927655364*^9}, {3.718383070910755*^9, 
   3.718383077534099*^9}, {3.718383206337517*^9, 3.718383256619418*^9}, {
   3.71838330007782*^9, 3.718383301267393*^9}, {3.718383425021072*^9, 
   3.718383433993946*^9}, {3.718383473322798*^9, 3.7183834775060177`*^9}, {
   3.7183836883644238`*^9, 3.718383745123351*^9}, 3.718383799719839*^9, {
   3.718384159572197*^9, 3.71838418760246*^9}, {3.718384227362249*^9, 
   3.718384260713689*^9}, {3.718385383525494*^9, 3.71838553548213*^9}, {
   3.718385590854721*^9, 3.718385615274622*^9}, {3.718648551202372*^9, 
   3.718648611576049*^9}, {3.718648664994172*^9, 3.7186486852509623`*^9}, {
   3.7186487496423693`*^9, 3.7186488107263603`*^9}, {3.718665867003276*^9, 
   3.718665885791152*^9}, {3.719418396898252*^9, 3.7194183974019413`*^9}, {
   3.719418433371653*^9, 3.719418435557128*^9}, 3.719418527361957*^9, {
   3.721407662700186*^9, 3.7214076942820597`*^9}, {3.721407730627033*^9, 
   3.721407748524686*^9}, {3.721408557548759*^9, 3.7214085588581123`*^9}, {
   3.721408634205803*^9, 3.721408664828658*^9}, {3.72141016240629*^9, 
   3.721410236203334*^9}, {3.7214106873189993`*^9, 3.7214106919792747`*^9}, {
   3.7214107282047033`*^9, 3.721410836463975*^9}, {3.721411672914105*^9, 
   3.7214117859093933`*^9}, {3.721435401210384*^9, 3.7214354711359253`*^9}, {
   3.7218320627000313`*^9, 3.721832064451207*^9}, 3.7218320999147053`*^9, {
   3.721832136838429*^9, 3.721832142449778*^9}, {3.721832704569846*^9, 
   3.721832729819006*^9}, {3.7218328780897493`*^9, 3.721832883786108*^9}, {
   3.721833855064575*^9, 3.7218338946550283`*^9}, {3.7218339515577707`*^9, 
   3.721833952238029*^9}, {3.721835425614896*^9, 3.721835450934267*^9}, {
   3.721849028731291*^9, 3.7218490421376753`*^9}, {3.721849672398842*^9, 
   3.721849677915805*^9}, {3.722038824003662*^9, 3.722038831315483*^9}, {
   3.722038865168611*^9, 3.722038879065322*^9}, {3.72203893554574*^9, 
   3.722038996264892*^9}, {3.722039165969327*^9, 3.72203920672797*^9}, {
   3.7220392658676167`*^9, 3.722039272173864*^9}, {3.722039346581292*^9, 
   3.722039346982747*^9}, {3.72208046937712*^9, 3.722080510450226*^9}, 
   3.722080548904665*^9, {3.722081176968526*^9, 3.7220811793752213`*^9}, {
   3.724099026140006*^9, 3.72409902652148*^9}, {3.724099058955208*^9, 
   3.724099080611885*^9}, {3.724103383849791*^9, 3.724103438062283*^9}, {
   3.724103491612401*^9, 3.72410349716695*^9}, {3.724104327534528*^9, 
   3.724104331714718*^9}, {3.7241043883417873`*^9, 3.7241044016857862`*^9}, {
   3.724104521629808*^9, 3.7241045515531473`*^9}, {3.724104657333025*^9, 
   3.724104679717538*^9}, {3.72410471726541*^9, 3.7241047353751297`*^9}, {
   3.725140958079259*^9, 3.7251409581311197`*^9}, {3.725141965286428*^9, 
   3.725141965325645*^9}, 3.728480781041885*^9, {3.7284812285570393`*^9, 
   3.728481254975675*^9}, {3.728484797775874*^9, 3.728484801909699*^9}, {
   3.72848484782327*^9, 3.728484848295081*^9}, {3.728484935333714*^9, 
   3.7284849504643393`*^9}, {3.728485064176244*^9, 3.728485086230406*^9}, {
   3.728485499989306*^9, 3.728485511446004*^9}, {3.728492935175768*^9, 
   3.728492982832242*^9}, {3.728504415265253*^9, 3.7285044193479548`*^9}, {
   3.72851153030238*^9, 3.7285115372556562`*^9}, {3.728511573476514*^9, 
   3.728511600907847*^9}, 3.755189571608323*^9, {3.7599429028451633`*^9, 
   3.759942967975628*^9}, {3.7599448701549*^9, 3.759944898259005*^9}, {
   3.7599449723732433`*^9, 3.7599449987625*^9}, {3.759945034963526*^9, 
   3.759945069190308*^9}, {3.759945134285499*^9, 3.759945188870977*^9}, {
   3.759946051236993*^9, 3.7599460513400087`*^9}, {3.759947325134569*^9, 
   3.759947402527296*^9}, {3.759947483237377*^9, 3.759947509753969*^9}, {
   3.759947797464148*^9, 3.7599478275084963`*^9}, {3.759947859191461*^9, 
   3.759947864417388*^9}, {3.7599487967468433`*^9, 3.759948797226715*^9}, {
   3.761807896002884*^9, 3.761807900330249*^9}, {3.761807998043538*^9, 
   3.761808003568145*^9}, {3.7640462557087393`*^9, 3.764046257490733*^9}, {
   3.7695208072499857`*^9, 3.769520813634856*^9}, {3.769520985688946*^9, 
   3.769521007037211*^9}, {3.769521158325881*^9, 3.769521204171419*^9}, 
   3.769760705509727*^9, 3.770438265061693*^9, {3.7707214356279573`*^9, 
   3.770721436083246*^9}, {3.777400905650981*^9, 3.7774009108157587`*^9}, {
   3.7774009537320013`*^9, 3.777400967741292*^9}, {3.7774416902240973`*^9, 
   3.7774416923324842`*^9}, {3.786214864675256*^9, 3.7862148767404213`*^9}, {
   3.786214942549388*^9, 3.786214966870139*^9}, {3.7862150070823812`*^9, 
   3.786215024560803*^9}, {3.786215058779211*^9, 3.7862150857057467`*^9}, {
   3.786215143140915*^9, 3.7862151504758263`*^9}, {3.786215311558593*^9, 
   3.786215313472793*^9}, {3.7862153725780163`*^9, 3.786215408225091*^9}, {
   3.786216331357345*^9, 3.786216331549254*^9}, {3.788975545529943*^9, 
   3.78897558713347*^9}, {3.794137240669696*^9, 3.7941372407672358`*^9}, 
   3.798128132787754*^9, {3.80012847500842*^9, 3.800128483883913*^9}, 
   3.800272330634511*^9, {3.800466070990087*^9, 3.800466156677895*^9}, {
   3.800482348395217*^9, 3.8004823629393873`*^9}, {3.8004824101214657`*^9, 
   3.8004824385707684`*^9}, 3.800482585191811*^9, {3.800482635774076*^9, 
   3.800482703729748*^9}, {3.800482922280815*^9, 3.800483012943203*^9}, {
   3.807369342737887*^9, 3.8073693427478123`*^9}, {3.8073696870388308`*^9, 
   3.807369709138514*^9}, {3.82045142055958*^9, 3.820451450525715*^9}, {
   3.820451530378389*^9, 3.820451569389268*^9}, {3.820451703197781*^9, 
   3.820451730438488*^9}, {3.820451788240189*^9, 3.820451794072613*^9}, {
   3.820522903903591*^9, 3.820522914634184*^9}, {3.820522947547888*^9, 
   3.820522994104166*^9}, {3.820523062609476*^9, 3.820523062849348*^9}, {
   3.821447487210299*^9, 3.821447528249834*^9}, 3.828805163499282*^9, {
   3.844261208176345*^9, 3.844261211772585*^9}, {3.844261844496019*^9, 
   3.844261847336607*^9}, {3.844262712929328*^9, 3.844262727628196*^9}, {
   3.844264166216629*^9, 3.844264168828821*^9}, {3.844264232138316*^9, 
   3.844264233515978*^9}, {3.8442643623887243`*^9, 3.844264386064722*^9}, {
   3.844264912800089*^9, 3.844264915987653*^9}, {3.844290964706375*^9, 
   3.8442909807181473`*^9}, {3.844336934650189*^9, 3.844336945993273*^9}, {
   3.8443370541642237`*^9, 3.8443370628138657`*^9}, {3.844337211159837*^9, 
   3.844337211308481*^9}, {3.844337636108473*^9, 3.844337660716124*^9}, {
   3.844337760866467*^9, 3.844337780252467*^9}, {3.844337815110448*^9, 
   3.844337830293491*^9}, {3.844337880869548*^9, 3.844337901936256*^9}, {
   3.844337946399529*^9, 3.844338073885112*^9}, {3.84433945771421*^9, 
   3.8443394626653957`*^9}, {3.844339531828644*^9, 3.844339544253406*^9}, {
   3.844339867265731*^9, 3.844339867610744*^9}, {3.844340180689948*^9, 
   3.8443401863834143`*^9}, {3.844340236216557*^9, 3.844340256440485*^9}, {
   3.844340349092349*^9, 3.844340356335556*^9}, {3.8443403892272577`*^9, 
   3.8443404128597183`*^9}, 3.844340663025268*^9, {3.844340927442506*^9, 
   3.844340928880645*^9}, {3.844341908601467*^9, 3.8443419705219088`*^9}, {
   3.844342876825848*^9, 3.8443428913216457`*^9}, {3.844343012398731*^9, 
   3.84434301811017*^9}, {3.844343851190905*^9, 3.84434386158287*^9}, {
   3.8443439240797977`*^9, 3.844343959626006*^9}, {3.8443440044350233`*^9, 
   3.844344017942773*^9}, {3.8443442346447477`*^9, 3.844344241242961*^9}, {
   3.8443694689431353`*^9, 3.844369545221053*^9}, {3.8443696092038727`*^9, 
   3.844369612718109*^9}, {3.8443697574780416`*^9, 3.844369763003813*^9}, {
   3.84436979987072*^9, 3.84436981349543*^9}, 3.844369861591012*^9, 
   3.844370523548769*^9, {3.844371471650996*^9, 
   3.844371493830431*^9}},ExpressionUUID->"4ee072fa-c86e-402b-8047-\
c79eecb17942"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",ExpressionUUID->"24fd674f-a1b3-4f94-8506-596244820b69"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "FindEcoAttractor", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}], ",", "\n", 
     RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Chop", "\[Rule]", "True"}], ",", 
     RowBox[{"NumTries", "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"EqTolerance", "\[Rule]", 
       RowBox[{"10", "^", 
        RowBox[{"-", "10"}]}]}], ";", "\n", 
      RowBox[{"SolveEcoEqOpts", "\[Rule]", 
       RowBox[{"{", "}"}]}]}], ",", 
     RowBox[{"NSolveEcoEqOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"FindEcoEqOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"EcoSimOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"FindEcoCycleOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", 
     RowBox[{"WarmUp", "\[Rule]", "0"}], ",", 
     RowBox[{"TMax", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"EqThreshold", "\[Rule]", 
      RowBox[{"10", "^", 
       RowBox[{"-", "5"}]}]}], ",", 
     RowBox[{"Time", "\[Rule]", "t"}], ",", 
     RowBox[{"Period", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"MaxPeriod", "\[Rule]", "16"}], ",", 
     RowBox[{"MaxPeriodMultiplier", "\[Rule]", "2"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"TestValidity", "\[Rule]", "True"}], ",", 
     RowBox[{"TestStability", "\[Rule]", "True"}], ",", 
     RowBox[{"FinalTMax", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{
       RowBox[{"{", "}"}], "l"}]}], ",", 
     RowBox[{"ICs", "->", 
      RowBox[{"{", "}"}]}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.6850975589482117`*^9, 3.6850975591676893`*^9}, 
   3.687881452051705*^9, {3.688571687831821*^9, 3.688571687973935*^9}, 
   3.6961510247089767`*^9, 3.696162142104967*^9, {3.69620299572367*^9, 
   3.6962030111551857`*^9}, {3.696544482073678*^9, 3.6965445252338963`*^9}, {
   3.696589629742776*^9, 3.696589631019755*^9}, {3.724104432420837*^9, 
   3.724104506599208*^9}, {3.725140958138217*^9, 3.725140958148961*^9}, {
   3.7695209628884773`*^9, 3.769520970164747*^9}, {3.7695212126426888`*^9, 
   3.769521214200818*^9}, {3.7862148968251657`*^9, 3.786214899695403*^9}, {
   3.844338094457992*^9, 
   3.8443380972495737`*^9}},ExpressionUUID->"61897e06-6141-433f-8fe0-\
1e3d2bcc7c83"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Messages", "Subsubsection",
 CellChangeTimes->{{3.769501592392577*^9, 
  3.769501593434819*^9}},ExpressionUUID->"7292c3db-faf1-463d-8a55-\
97c6a4726f82"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoAttractor", "::", "badmtd"}], "=", "\n", 
    "\"\<The Method option should be a built-in method name (\\\"SolveEcoEq\\\
\", \\\"NSolveEcoEq\\\", \\\"FindEcoEq\\\", or \\\"EcoSim\\\")\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoAttractor", "::", "novars"}], "=", "\n", 
    "\"\<No initial conditions sizes given, cannot continue with `1`.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoAttractor", "::", "nocycle"}], "=", "\n", 
    "\"\<Warning: couldn't find a cycle with period less than \
MaxPeriod=`1`.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoAttractor", "::", "novalideq"}], "=", "\n", 
    "\"\<Couldn't find a valid equilibrium.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoAttractor", "::", "giveup"}], "=", "\n", 
    "\"\<Couldn't find an equilibrium or cycle, returing EcoSim.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoAttractor", "::", "nosteq"}], "=", "\n", 
    "\"\<Warning: couldn't find a stable equilibrium with attributes `1`. \
Trying EcoSim.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoAttractor", "::", "musteq"}], "=", "\n", 
    "\"\<Warning: found `1` stable equilibria with attributes `2`.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FindEcoAttractor", "::", "nostst"}], "=", "\n", 
   "\"\<Warning: EcoSim did not find a steady state (d/dt=`1` at t=`2`). \
Trying FindEcoCycle.\>\""}], ";"}]}], "Code",
 CellChangeTimes->{
  3.769501596217969*^9, {3.769502296985121*^9, 3.7695022973017178`*^9}, {
   3.7695023368093977`*^9, 3.769502348017252*^9}, {3.800466160041191*^9, 
   3.800466160937296*^9}, {3.8073697093306723`*^9, 3.8073697100701838`*^9}, {
   3.8443384385258617`*^9, 3.844338439653249*^9}, {3.844340467548834*^9, 
   3.844340484428782*^9}, {3.844340633077258*^9, 
   3.844340648005555*^9}},ExpressionUUID->"a57d54c0-cdf5-4e8b-a55c-\
6acc31507693"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["PlotEcoIsoclines", "Subsection",ExpressionUUID->"7c7feded-abaa-4bc3-909d-57b58777660f"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"79c2beb0-a5ea-4d4f-8fe0-\
dd38608565e3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotEcoIsoclines", "::", "usage"}], " ", "=", "\n", 
   "\"\<PlotEcoIsoclines[{\!\(\*StyleBox[\"var1\", \"TI\"]\), \!\(\*StyleBox[\
\"var1min\", \"TI\"]\), \!\(\*StyleBox[\"var1max\", \"TI\"]\)}, \
{\!\(\*StyleBox[\"var2\", \"TI\"]\), \!\(\*StyleBox[\"var2min\", \"TI\"]\), \
\!\(\*StyleBox[\"var2max\", \"TI\"]\)}] plots ecological isoclines in the \
phase plane of variables \!\(\*StyleBox[\"var1\", \"TI\"]\) and \
\!\(\*StyleBox[\"var2\", \"TI\"]\).\n\
PlotEcoIsoclines[\!\(\*StyleBox[\"attributes\", \"TI\"]\), \
{\!\(\*StyleBox[\"var1\", \"TI\"]\), \!\(\*StyleBox[\"var1min\", \"TI\"]\), \
\!\(\*StyleBox[\"var1max\", \"TI\"]\)},{\!\(\*StyleBox[\"var2\", \"TI\"]\), \
\!\(\*StyleBox[\"var2min\", \"TI\"]\), \!\(\*StyleBox[\"var2max\", \
\"TI\"]\)}] uses trait values / interaction coefficients \
\!\(\*StyleBox[\"attributes\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.7694843176397667`*^9, 3.769484318308598*^9}, 
   3.769528052216687*^9, {3.807399598306444*^9, 
   3.807399614625092*^9}},ExpressionUUID->"ca7e87c9-95d8-4059-aa3f-\
0ec641c19ea4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"899d63d5-e808-49d7-b642-\
64bfd47cab3c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotEcoIsoclines", "[", 
     RowBox[{
      RowBox[{"attributesin", ":", 
       RowBox[{"(", 
        RowBox[{"_", "?", "AttributesQ"}], ")"}], ":", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"var1_", ",", 
        RowBox[{"var1min_", "?", "NumericQ"}], ",", 
        RowBox[{"var1max_", "?", "NumericQ"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"var2_", ",", 
        RowBox[{"var2min_", "?", "NumericQ"}], ",", 
        RowBox[{"var2max_", "?", "NumericQ"}]}], "}"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"func", "=", 
         RowBox[{"FuncStyle", "[", "\"\<PlotEcoIsoclines\>\"", "]"}]}], ",", 
        "\n", 
        RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
        "verboseall", ",", "fixed", ",", "time", ",", "percapita", ",", 
        "isoclinestyle", ",", "framelabel", ",", "contourplotopts", ",", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "attributes",
         ",", "fixedvars", ",", "nonfixedvars", ",", "lookup1", ",", 
        "lookup2", ",", "style1", ",", "style2", ",", "label1", ",", "label2",
         ",", "g", ",", "res"}], "}"}], ",", "\n", "\n", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
           RowBox[{
            RowBox[{"Message", "[", 
             RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
            RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
         "\n", 
         RowBox[{"attributes", "=", 
          RowBox[{"FixAttributes", "[", "attributesin", "]"}]}], ";", "\n", 
         "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
         RowBox[{"verbose", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Verbose", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEcoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
         RowBox[{"verboseall", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"VerboseAll", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEcoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"verboseall", ",", 
           RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
         RowBox[{"fixed", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Fixed", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEcoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"fixedvars", "=", 
          RowBox[{"fixed", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
         
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<PlotEcoIsoclines: fixedvars=\>\"", ",", "fixedvars"}], 
            "]"}]}], "]"}], ";", "\n", 
         RowBox[{"time", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Time", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEcoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"percapita", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"PerCapita", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEcoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"isoclinestyle", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"IsoclineStyle", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEcoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"framelabel", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"FrameLabel", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEcoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"framelabel", "===", "Automatic"}], ",", 
           RowBox[{"framelabel", "=", 
            RowBox[{"{", 
             RowBox[{"var1", ",", "var2"}], "}"}]}]}], "]"}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"isoclinelabels", "=", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"IsoclineLabels", "/.", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"opts", ",", 
                 RowBox[{"Options", "[", "PlotEcoIsoclines", "]"}]}], "}"}], 
               "]"}]}], "]"}]}], ";"}], "*)"}], "\n", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"label1", ",", "label2"}], "}"}], "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ToString", "[", "var1", "]"}], ",", 
            RowBox[{"ToString", "[", "var2", "]"}]}], "}"}]}], ";", "\n", 
         "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "figure", " ", "out", " ", "what", " ", "are", " ", "the", " ", 
            "components", " ", "on", " ", "the", " ", "x"}], "-", " ", 
           RowBox[{"and", " ", "y"}], "-", "axes"}], " ", "*)"}], "\n", 
         RowBox[{"lookup1", "=", 
          RowBox[{"LookUp", "[", "var1", "]"}]}], ";", "\n", 
         RowBox[{"lookup2", "=", 
          RowBox[{"LookUp", "[", "var2", "]"}]}], ";", "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"set", " ", "up", " ", "isocline", " ", "styles"}], " ", 
          "*)"}], "\n", 
         RowBox[{"Which", "[", "\[IndentingNewLine]", "\t", 
          RowBox[{
           RowBox[{
            RowBox[{
            "lookup1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
             "\[Equal]", "\"\<gcomp\>\""}], ",", "\[IndentingNewLine]", "\t", 
           
           RowBox[{"style1", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"isoclinestyle", "===", "Automatic"}], ",", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{"linestyle", "[", "var1", "]"}], "}"}], "]"}], ",", 
                
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
                  RowBox[{
                   RowBox[{"color", "[", "var1", "]"}], "[", "0", "]"}]}], 
                 "}"}]}], "]"}], ",", 
              RowBox[{
              "isoclinestyle", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{
            RowBox[{
             RowBox[{
             "lookup1", "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}], "\[Equal]", "\"\<pcomp\>\""}], "||", 
            
            RowBox[{
             RowBox[{
             "lookup1", "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}], "\[Equal]", "\"\<aux\>\""}]}], ",", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{"style1", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"isoclinestyle", "===", "Automatic"}], ",", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{"linestyle", "[", "var1", "]"}], "}"}], "]"}], ",", 
                
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
                  RowBox[{"color", "[", "var1", "]"}]}], "}"}]}], "]"}], ",", 
              
              RowBox[{
              "isoclinestyle", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\n", "\n", 
         RowBox[{"Which", "[", "\[IndentingNewLine]", "\t", 
          RowBox[{
           RowBox[{
            RowBox[{
            "lookup2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
             "\[Equal]", "\"\<gcomp\>\""}], ",", "\[IndentingNewLine]", "\t", 
           
           RowBox[{"style2", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"isoclinestyle", "===", "Automatic"}], ",", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{"linestyle", "[", "var2", "]"}], "}"}], "]"}], ",", 
                
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
                  RowBox[{
                   RowBox[{"color", "[", "var2", "]"}], "[", "1", "]"}]}], 
                 "}"}]}], "]"}], ",", 
              RowBox[{
              "isoclinestyle", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{
            RowBox[{
             RowBox[{
             "lookup2", "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}], "\[Equal]", "\"\<pcomp\>\""}], "||", 
            
            RowBox[{
             RowBox[{
             "lookup2", "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}], "\[Equal]", "\"\<aux\>\""}]}], ",", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{"style2", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"isoclinestyle", "===", "Automatic"}], ",", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{"linestyle", "[", "var2", "]"}], "}"}], "]"}], ",", 
                
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
                  RowBox[{"color", "[", "var2", "]"}]}], "}"}]}], "]"}], ",", 
              
              RowBox[{
              "isoclinestyle", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"{", 
             RowBox[{"style1", ",", "style2"}], "}"}], "]"}], ";"}], "*)"}], 
         "\n", "\n", 
         RowBox[{"nonfixedvars", "=", 
          RowBox[{"{", 
           RowBox[{"var1", ",", "var2"}], "}"}]}], ";", "\[IndentingNewLine]",
          "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "look", " ", "for", " ", "aux", " ", "and", " ", "pcomps", " ", 
            "not", " ", "in", " ", "the", " ", "ICs"}], ",", " ", 
           RowBox[{"treat", " ", "as", " ", "fixed", " ", "at", " ", "0"}]}], 
          " ", "*)"}], "\n", 
         RowBox[{"Do", "[", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"Join", "[", 
                 RowBox[{"nonfixedvars", ",", "fixedvars"}], "]"}], ",", 
                "var"}], "]"}]}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"fixed", ",", 
               RowBox[{"var", "\[Rule]", "0"}]}], "]"}]}], "]"}], "\n", ",", 
           RowBox[{"{", 
            RowBox[{"var", ",", "AllPopsAndAuxs"}], "}"}]}], "]"}], ";", "\n",
          "\n", 
         RowBox[{"contourplotopts", "=", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"ContourShading", "\[Rule]", "None"}], ",", 
               RowBox[{"Options", "[", "PlotEcoIsoclines", "]"}]}], "}"}], 
             "]"}], ",", 
            RowBox[{"Options", "[", "ContourPlot", "]"}]}], "]"}]}], ";", 
         "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", "contourplotopts", "]"}], ";"}], "*)"}], 
         "\n", "\n", 
         RowBox[{"g", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"EcoEqns", "[", 
                RowBox[{"attributes", ",", 
                 RowBox[{"Fixed", "\[Rule]", "fixed"}], ",", 
                 RowBox[{"NonFixedVars", "\[Rule]", "nonfixedvars"}], ",", 
                 "opts"}], "]"}], "/.", "RHS"}], "/.", "RemoveVariablets"}], "/.", 
             RowBox[{"{", 
              RowBox[{"t", "\[Rule]", "time"}], "}"}]}], ")"}], "\n", "\t", 
           "-", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], "&&", 
              RowBox[{"percapita", "\[Equal]", "False"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"var1", ",", "var2"}], "}"}], ",", 
             RowBox[{
              RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], "&&", 
              RowBox[{"percapita", "\[Equal]", "True"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1"}], "}"}], ",", "Else", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"verbose", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: g=\>\"", ",", "g"}], "]"}]}], "]"}], 
         ";", "\n", "\n", 
         RowBox[{"res", "=", 
          RowBox[{"ContourPlot", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
               "g", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "\[Equal]", "0"}], ",", 
              RowBox[{
               RowBox[{
               "g", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               "\[Equal]", "0"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"var1", ",", 
              RowBox[{"var1min", "-", 
               RowBox[{"10", "^", 
                RowBox[{"-", "10"}]}]}], ",", "var1max"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"var2", ",", 
              RowBox[{"var2min", "-", 
               RowBox[{"10", "^", 
                RowBox[{"-", "10"}]}]}], ",", "var2max"}], "}"}], ",", "\n", 
            "\t", 
            RowBox[{"ContourStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"style1", ",", "style2"}], "}"}]}], ",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"Sequence", "@@", "contourplotopts"}], "]"}], ",", 
            RowBox[{"FrameLabel", "\[Rule]", "framelabel"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"monitor", ",", 
           RowBox[{"NotebookClose", "[", "nb", "]"}]}], "]"}], ";", "\n", 
         "\n", 
         RowBox[{"Return", "[", "res", "]"}]}]}], "\n", "\n", "]"}]}], 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PlotEcoIsoclines", "]"}], "=", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"Time", "\[Rule]", "t"}], ",", 
     RowBox[{"PerCapita", "\[Rule]", "False"}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", "\t", 
     RowBox[{"IsoclineStyle", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", "Automatic"}], ",", "\n", "\t", 
     RowBox[{"MaxRecursion", "\[Rule]", "3"}], ",", "\n", "\t", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.685643809995679*^9, 3.685643825574583*^9}, {
   3.6856438766622133`*^9, 3.685643914160603*^9}, {3.685644097974908*^9, 
   3.685644101982147*^9}, {3.685644253940529*^9, 3.685644278367207*^9}, {
   3.685644515890668*^9, 3.68564451872266*^9}, 3.68564465090674*^9, {
   3.68564480029346*^9, 3.685644800533059*^9}, {3.685742718338999*^9, 
   3.6857427214497757`*^9}, {3.6857427550054493`*^9, 3.685742786551338*^9}, {
   3.6857430021563272`*^9, 3.685743015311767*^9}, {3.685743466178776*^9, 
   3.685743481267235*^9}, {3.6857442638285303`*^9, 3.685744355393325*^9}, {
   3.6857445099761763`*^9, 3.685744532760133*^9}, {3.685744686089514*^9, 
   3.685744701864175*^9}, {3.6858277894290857`*^9, 3.685827886816392*^9}, {
   3.6858282492149878`*^9, 3.685828280183531*^9}, {3.6874770930388927`*^9, 
   3.687477095689097*^9}, {3.687477802994232*^9, 3.687478037574527*^9}, {
   3.6874780801082907`*^9, 3.68747820687291*^9}, {3.687518334851323*^9, 
   3.687518338887932*^9}, {3.6875183914176283`*^9, 3.687518424230063*^9}, {
   3.687518467518486*^9, 3.687518480622787*^9}, {3.6875185334437323`*^9, 
   3.687518598679419*^9}, {3.687532742928185*^9, 3.6875327567787447`*^9}, {
   3.68753282541737*^9, 3.6875328318536673`*^9}, {3.687533118426897*^9, 
   3.687533166414791*^9}, {3.687542393436866*^9, 3.687542455091648*^9}, {
   3.6875429913568*^9, 3.687542991651691*^9}, {3.687543070644745*^9, 
   3.687543106310964*^9}, {3.687543385673149*^9, 3.6875434142858973`*^9}, {
   3.6875434851045723`*^9, 3.687543588360772*^9}, {3.687543868720428*^9, 
   3.68754392829393*^9}, {3.687553998159532*^9, 3.6875540385987997`*^9}, {
   3.6875973181804123`*^9, 3.6875973198556967`*^9}, {3.68773503250313*^9, 
   3.687735063764392*^9}, {3.687735267286583*^9, 3.6877353352787952`*^9}, {
   3.687735476474908*^9, 3.687735659137683*^9}, {3.687736788178155*^9, 
   3.6877367900493393`*^9}, {3.6877369133372803`*^9, 3.687736961820108*^9}, {
   3.687737020293227*^9, 3.6877370620803328`*^9}, {3.687778760247375*^9, 
   3.6877787968414307`*^9}, {3.687778872195718*^9, 3.687778897092502*^9}, {
   3.687779198733378*^9, 3.6877792054727297`*^9}, {3.6877803280835247`*^9, 
   3.687780420762648*^9}, {3.687780799274612*^9, 3.687780827795121*^9}, {
   3.6877836972144117`*^9, 3.6877837283874702`*^9}, {3.687791140835041*^9, 
   3.687791142985135*^9}, 3.6877916597474213`*^9, {3.6877930385131617`*^9, 
   3.687793048538172*^9}, 3.6877962348460913`*^9, 3.687796497929029*^9, {
   3.6878814521749973`*^9, 3.687881452421238*^9}, {3.6885716880399113`*^9, 
   3.688571688528954*^9}, {3.688571760214572*^9, 3.6885717609171553`*^9}, {
   3.6885718062011766`*^9, 3.688571806383422*^9}, {3.688599547879942*^9, 
   3.688599785336787*^9}, {3.709336758422798*^9, 3.709336761580636*^9}, 
   3.710105966879751*^9, {3.7102555192803507`*^9, 3.710255526836112*^9}, {
   3.71026510272393*^9, 3.710265117987976*^9}, {3.716682607441513*^9, 
   3.716682610476919*^9}, {3.716682777047488*^9, 3.7166828104616747`*^9}, {
   3.7218643066207533`*^9, 3.7218643129983873`*^9}, {3.722026045846417*^9, 
   3.722026046812571*^9}, {3.724635356826954*^9, 3.7246353738527*^9}, {
   3.724635413685772*^9, 3.724635428021679*^9}, {3.724635519728372*^9, 
   3.724635591423319*^9}, {3.7246359249984283`*^9, 3.7246359360344467`*^9}, {
   3.724679285178523*^9, 3.724679290856097*^9}, {3.724679342841666*^9, 
   3.724679343527853*^9}, {3.7246794497936983`*^9, 3.724679452864519*^9}, {
   3.7246795360485163`*^9, 3.7246795721262608`*^9}, {3.724679641692603*^9, 
   3.724679765445298*^9}, {3.724679934070525*^9, 3.724679947811489*^9}, {
   3.724679981369348*^9, 3.724679981765407*^9}, {3.724680127137328*^9, 
   3.7246801326577063`*^9}, {3.7246802122597237`*^9, 3.724680214166258*^9}, {
   3.724680277114874*^9, 3.724680307190291*^9}, {3.7246818913835087`*^9, 
   3.7246819270789757`*^9}, {3.7246823082355347`*^9, 
   3.7246823318010273`*^9}, {3.724682386322551*^9, 3.7246824392099*^9}, {
   3.7246824993943033`*^9, 3.7246825180008297`*^9}, {3.72468255955811*^9, 
   3.724682574546842*^9}, {3.7246826155505257`*^9, 3.724682623187353*^9}, {
   3.724682694160398*^9, 3.724682695349412*^9}, {3.724682735488652*^9, 
   3.72468274333252*^9}, {3.724682788834848*^9, 3.7246827891024323`*^9}, {
   3.724685939196151*^9, 3.724685943937086*^9}, {3.724686023986723*^9, 
   3.7246863647322407`*^9}, {3.724689120535128*^9, 3.7246891918743143`*^9}, {
   3.7246892447735777`*^9, 3.724689285235344*^9}, {3.724689315390934*^9, 
   3.724689395023801*^9}, {3.724691123172984*^9, 3.7246911280035887`*^9}, {
   3.724691188334993*^9, 3.724691209392912*^9}, {3.724691260278693*^9, 
   3.72469127516751*^9}, {3.724691333390449*^9, 3.724691360874257*^9}, {
   3.724691447854918*^9, 3.72469145379948*^9}, {3.7246914845606213`*^9, 
   3.724691488921631*^9}, {3.724691532354995*^9, 3.724691534830917*^9}, {
   3.724691604012216*^9, 3.724691638466146*^9}, {3.7246917001214943`*^9, 
   3.724691705337378*^9}, {3.7246917822108603`*^9, 3.724691794948707*^9}, {
   3.724692165194871*^9, 3.724692177583362*^9}, {3.724692211505939*^9, 
   3.724692227894594*^9}, {3.724692296648322*^9, 3.724692355487042*^9}, {
   3.724692671694655*^9, 3.724692778949725*^9}, {3.724692847231366*^9, 
   3.724692874417882*^9}, {3.724694892089944*^9, 3.724694943302497*^9}, {
   3.724695751991034*^9, 3.724695764145258*^9}, {3.724695810566923*^9, 
   3.724695837271044*^9}, {3.724695890759987*^9, 3.724695905678154*^9}, {
   3.724696007083948*^9, 3.7246960130396347`*^9}, {3.724696054755488*^9, 
   3.724696075854707*^9}, 3.724696565483498*^9, {3.724699352663423*^9, 
   3.724699390443715*^9}, {3.724699420996346*^9, 3.7246994970680237`*^9}, {
   3.72469963887111*^9, 3.7246998500633574`*^9}, {3.7246999821627483`*^9, 
   3.724699990788837*^9}, {3.724700181268652*^9, 3.724700201779248*^9}, {
   3.724700882785591*^9, 3.724700890120352*^9}, {3.7247010290011177`*^9, 
   3.724701030187804*^9}, {3.724701063187467*^9, 3.724701065793262*^9}, 
   3.72470115496354*^9, {3.7247013111492853`*^9, 3.7247013537359877`*^9}, 
   3.72471633405116*^9, {3.7247169295060987`*^9, 3.7247170452853603`*^9}, 
   3.724717214944397*^9, {3.7247182676621647`*^9, 3.7247182757611227`*^9}, 
   3.7247192075415277`*^9, {3.725140958165389*^9, 3.7251409582298803`*^9}, 
   3.725141965342578*^9, {3.728065170460266*^9, 3.728065213238863*^9}, {
   3.728065497708784*^9, 3.728065503225362*^9}, {3.72843393153545*^9, 
   3.728433931720613*^9}, {3.73211087076926*^9, 3.732110875288793*^9}, {
   3.732111006774735*^9, 3.732111023580596*^9}, {3.7321116331403837`*^9, 
   3.732111641791074*^9}, {3.732111748957048*^9, 3.732111753628793*^9}, {
   3.755269538925879*^9, 3.7552696043078947`*^9}, {3.755269656680203*^9, 
   3.755269706986663*^9}, {3.755272941590753*^9, 3.755272941907085*^9}, 
   3.755273111007948*^9, {3.755274140373847*^9, 3.755274149961566*^9}, 
   3.7552741835697937`*^9, {3.755859490243484*^9, 3.755859522045434*^9}, {
   3.7558748712905912`*^9, 3.755874889198101*^9}, {3.755876800468007*^9, 
   3.7558768034885798`*^9}, 3.7558768407065153`*^9, {3.7558825586406937`*^9, 
   3.7558825849378853`*^9}, {3.755979876315333*^9, 3.755979882681978*^9}, {
   3.7559805369649067`*^9, 3.755980542320383*^9}, {3.755980899272872*^9, 
   3.755980907691818*^9}, {3.755981416020363*^9, 3.755981423586463*^9}, 
   3.7599487619496927`*^9, 3.7599488017212*^9, {3.759949804262134*^9, 
   3.7599498060141993`*^9}, {3.759950972728285*^9, 3.759950975403358*^9}, {
   3.759951068452917*^9, 3.759951097572588*^9}, 3.761377920250146*^9, {
   3.761383355556795*^9, 3.761383511938348*^9}, {3.76138365877949*^9, 
   3.7613836985969954`*^9}, 3.761383907256242*^9, {3.761384023472036*^9, 
   3.761384035884017*^9}, 3.761384090757003*^9, {3.761384122400992*^9, 
   3.7613841541858177`*^9}, {3.7613841937373037`*^9, 3.761384198048958*^9}, {
   3.761384308179098*^9, 3.761384310504496*^9}, {3.761384403680293*^9, 
   3.7613844154435253`*^9}, {3.761384496336171*^9, 3.761384592637863*^9}, {
   3.761384649083297*^9, 3.761384736101585*^9}, {3.761384945566732*^9, 
   3.7613849476775703`*^9}, {3.7613849818125553`*^9, 3.761384996486272*^9}, 
   3.7613851580005836`*^9, {3.7613878156263933`*^9, 3.761387905394661*^9}, {
   3.761387967690742*^9, 3.7613881776637697`*^9}, {3.761388212139098*^9, 
   3.761388220251041*^9}, {3.7614038596516542`*^9, 3.761403919193453*^9}, {
   3.761404214369122*^9, 3.761404265102943*^9}, {3.76140991034508*^9, 
   3.7614099294576397`*^9}, {3.761410233405799*^9, 3.761410233706986*^9}, {
   3.761411737897843*^9, 3.761411738203168*^9}, {3.761411888566725*^9, 
   3.761411890644537*^9}, {3.7614121761181602`*^9, 3.76141217673169*^9}, {
   3.761412325695743*^9, 3.761412337806552*^9}, {3.761414104943388*^9, 
   3.761414111684072*^9}, {3.7614142376659*^9, 3.761414264979663*^9}, 
   3.769760705532412*^9, {3.770365316992296*^9, 3.7703653710878983`*^9}, {
   3.770365577515211*^9, 3.770365585883026*^9}, {3.770365690558156*^9, 
   3.770365776222575*^9}, {3.770365877993498*^9, 3.770365942624076*^9}, {
   3.7703685534377403`*^9, 3.7703685578500137`*^9}, {3.77036860972486*^9, 
   3.770368632767405*^9}, {3.7703687003983917`*^9, 3.770368710836048*^9}, {
   3.7703687489588737`*^9, 3.770368777946227*^9}, {3.770368934238242*^9, 
   3.7703689348617773`*^9}, 3.77043826507163*^9, 3.770721436217156*^9, {
   3.774591402228447*^9, 3.774591402627104*^9}, {3.774591434503755*^9, 
   3.7745914386712217`*^9}, {3.7746209126228647`*^9, 
   3.7746209145344343`*^9}, {3.7746214823245277`*^9, 3.774621516653462*^9}, {
   3.7860810584098577`*^9, 3.7860810616034117`*^9}, 3.794137240775383*^9, 
   3.798128132795794*^9, {3.800466183958*^9, 3.800466218506139*^9}, 
   3.801002050927511*^9, 3.8010021119155607`*^9, 3.801002654925568*^9, {
   3.8073693427582397`*^9, 3.807369342764319*^9}, {3.807369711387755*^9, 
   3.8073697133351583`*^9}},ExpressionUUID->"ed20a51f-32d7-4df3-b912-\
5c4424333731"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["PlotEcoStreams", "Subsection",ExpressionUUID->"b81e90f1-9396-47b8-8509-956f5f1f550a"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"402edaa9-d29e-4be2-8f83-\
547d6fa861e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotEcoStreams", "::", "usage"}], " ", "=", "\n", 
   "\"\<PlotEcoStreams[{\!\(\*StyleBox[\"var1\", \"TI\"]\), \
\!\(\*StyleBox[\"var1min\", \"TI\"]\), \!\(\*StyleBox[\"var1max\", \
\"TI\"]\)}, {\!\(\*StyleBox[\"var2\", \"TI\"]\), \!\(\*StyleBox[\"var2min\", \
\"TI\"]\), \!\(\*StyleBox[\"var2max\", \"TI\"]\)}] plots ecological streams \
in the phase plane of variables \!\(\*StyleBox[\"var1\", \"TI\"]\) and \
\!\(\*StyleBox[\"var2\", \"TI\"]\).\n\
PlotEcoStreams[\!\(\*StyleBox[\"attributes\", \"TI\"]\), \
{\!\(\*StyleBox[\"var1\", \"TI\"]\), \!\(\*StyleBox[\"var1min\", \"TI\"]\), \
\!\(\*StyleBox[\"var1max\", \"TI\"]\)}, {\!\(\*StyleBox[\"var2\", \"TI\"]\), \
\!\(\*StyleBox[\"var2min\", \"TI\"]\), \!\(\*StyleBox[\"var2max\", \
\"TI\"]\)}] uses trait values / interaction coefficients \
\!\(\*StyleBox[\"attributes\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769484332421784*^9, 3.7694843329303293`*^9}, {
  3.807399758970704*^9, 
  3.807399773545487*^9}},ExpressionUUID->"9b313dda-54be-40fa-8fde-\
fd5d4c3dc7a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"623edd06-7d5d-4fef-a204-\
3144f1d4a708"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotEcoStreams", "[", 
     RowBox[{
      RowBox[{"attributesin", ":", 
       RowBox[{"(", 
        RowBox[{"_", "?", "AttributesQ"}], ")"}], ":", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"var1_", ",", 
        RowBox[{"var1min_", "?", "NumericQ"}], ",", 
        RowBox[{"var1max_", "?", "NumericQ"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"var2_", ",", 
        RowBox[{"var2min_", "?", "NumericQ"}], ",", 
        RowBox[{"var2max_", "?", "NumericQ"}]}], "}"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"func", "=", 
         RowBox[{"FuncStyle", "[", "\"\<PlotEcoStreams\>\"", "]"}]}], ",", 
        "\n", 
        RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
        "verboseall", ",", "fixed", ",", "time", ",", "framelabel", ",", 
        "streamplotopts", ",", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "attributes",
         ",", "fixedvars", ",", "nonfixedvars", ",", "g", ",", "res"}], "}"}],
       ",", "\n", "\n", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
           RowBox[{
            RowBox[{"Message", "[", 
             RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
            RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
         "\n", 
         RowBox[{"attributes", "=", 
          RowBox[{"FixAttributes", "[", "attributesin", "]"}]}], ";", "\n", 
         "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
         RowBox[{"verbose", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Verbose", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEcoStreams", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
         RowBox[{"verboseall", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"VerboseAll", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEcoStreams", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"verboseall", ",", 
           RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
         RowBox[{"fixed", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Fixed", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEcoStreams", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"fixedvars", "=", 
          RowBox[{"fixed", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
         
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: fixedvars=\>\"", ",", "fixedvars"}], 
            "]"}]}], "]"}], ";", "\n", 
         RowBox[{"time", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Time", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEcoStreams", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"framelabel", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"FrameLabel", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEcoStreams", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"framelabel", "===", "Automatic"}], ",", 
           RowBox[{"framelabel", "=", 
            RowBox[{"{", 
             RowBox[{"var1", ",", "var2"}], "}"}]}]}], "]"}], ";", "\n", 
         RowBox[{"streamplotopts", "=", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"FrameLabel", "\[Rule]", "framelabel"}], ",", "opts", 
               ",", 
               RowBox[{"Options", "[", "PlotEcoStreams", "]"}]}], "}"}], 
             "]"}], ",", 
            RowBox[{"Options", "[", "StreamPlot", "]"}]}], "]"}]}], ";", "\n",
          "\n", 
         RowBox[{"nonfixedvars", "=", 
          RowBox[{"{", 
           RowBox[{"var1", ",", "var2"}], "}"}]}], ";", "\n", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "look", " ", "for", " ", "aux", " ", "and", " ", "pcomps", " ", 
            "not", " ", "in", " ", "the", " ", "ICs"}], ",", " ", 
           RowBox[{"treat", " ", "as", " ", "fixed", " ", "at", " ", "0"}]}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"Join", "[", 
                 RowBox[{"nonfixedvars", ",", "fixedvars"}], "]"}], ",", 
                "var"}], "]"}]}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"fixed", ",", 
               RowBox[{"var", "\[Rule]", "0"}]}], "]"}]}], "]"}], "\n", ",", 
           RowBox[{"{", 
            RowBox[{"var", ",", "AllPopsAndAuxs"}], "}"}]}], "]"}], ";", "\n",
          "\n", 
         RowBox[{"g", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"EcoEqns", "[", 
                RowBox[{"attributes", ",", 
                 RowBox[{"Fixed", "\[Rule]", "fixed"}], ",", 
                 RowBox[{"NonFixedVars", "\[Rule]", "nonfixedvars"}], ",", 
                 "opts"}], "]"}], "/.", "RHS"}], "/.", "RemoveVariablets"}], "/.", 
             RowBox[{"{", 
              RowBox[{"t", "\[Rule]", "time"}], "}"}]}], ")"}], "\n", "\t", 
           "-", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], ",", 
             RowBox[{"{", 
              RowBox[{"var1", ",", "var2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"verbose", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: g=\>\"", ",", "g"}], "]"}]}], "]"}], 
         ";", "\n", "\n", 
         RowBox[{"res", "=", 
          RowBox[{"MyStreamPlot", "[", 
           RowBox[{"g", ",", 
            RowBox[{"{", 
             RowBox[{"var1", ",", "var1min", ",", "var1max"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"var2", ",", "var2min", ",", "var2max"}], "}"}], ",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"Sequence", "@@", "streamplotopts"}], "]"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"FrameLabel", "\[Rule]", "framelabel"}]}], "]"}]}], ";", 
         "\n", "\t\t", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"monitor", ",", 
           RowBox[{"NotebookClose", "[", "nb", "]"}]}], "]"}], ";", "\n", 
         "\n", 
         RowBox[{"Return", "[", "res", "]"}]}]}], "\n", "\n", "]"}]}], 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PlotEcoStreams", "]"}], "=", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Time", "\[Rule]", "t"}], ",", "\n", "\t", 
     RowBox[{"FrameLabel", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRangePadding", "\[Rule]", 
      RowBox[{"Scaled", "[", "0.02", "]"}]}], ",", 
     RowBox[{"StreamStyle", "\[Rule]", "Gray"}], ",", 
     RowBox[{"StreamColorFunction", "\[Rule]", "None"}], ",", "\n", "\t", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.685642034763954*^9, 3.685642048029395*^9}, {
   3.685642269148128*^9, 3.6856422763475733`*^9}, {3.6856425003374367`*^9, 
   3.685642505168405*^9}, {3.685642768247654*^9, 3.685642791328006*^9}, {
   3.685642840282954*^9, 3.685642876537305*^9}, {3.685642907650084*^9, 
   3.6856429308454847`*^9}, {3.68564304688663*^9, 3.68564308419993*^9}, {
   3.685643134228608*^9, 3.6856431614026546`*^9}, {3.685643678400509*^9, 
   3.6856436943161783`*^9}, {3.685643763014851*^9, 3.685643765546268*^9}, {
   3.685643866321458*^9, 3.685643867061646*^9}, {3.685659088161305*^9, 
   3.685659088369512*^9}, 3.685659527889512*^9, {3.685659664883092*^9, 
   3.685659665098504*^9}, {3.685802332124545*^9, 3.685802336358173*^9}, {
   3.6858024273090343`*^9, 3.685802432675264*^9}, 3.685802503874124*^9, {
   3.687881452524098*^9, 3.6878814527319613`*^9}, {3.688571688585168*^9, 
   3.688571689029497*^9}, {3.688571760953908*^9, 3.6885717613587112`*^9}, {
   3.6885998421485786`*^9, 3.688599845914815*^9}, {3.688599880681466*^9, 
   3.688600051783716*^9}, {3.688600229126854*^9, 3.688600252198386*^9}, {
   3.688600299150708*^9, 3.688600305881043*^9}, {3.7093367643987103`*^9, 
   3.709336772717918*^9}, 3.710105979596599*^9, {3.710255535668631*^9, 
   3.710255556653246*^9}, 3.71025563044636*^9, {3.710265124075219*^9, 
   3.7102651404568*^9}, {3.722026059038085*^9, 3.722026072936489*^9}, {
   3.722086380354815*^9, 3.722086383233655*^9}, {3.724635945579557*^9, 
   3.7246360175412283`*^9}, {3.724696348602027*^9, 3.724696362745537*^9}, {
   3.7246964199291573`*^9, 3.724696474723278*^9}, {3.724696520761579*^9, 
   3.7246965468016253`*^9}, {3.7246965905778522`*^9, 3.724696597771743*^9}, {
   3.724696633939487*^9, 3.72469666240195*^9}, {3.72469677251581*^9, 
   3.7246967992496223`*^9}, {3.7247009123670263`*^9, 
   3.7247009178135233`*^9}, {3.724701017730152*^9, 3.724701019285043*^9}, {
   3.7247010723739033`*^9, 3.7247010754220867`*^9}, {3.724701132410152*^9, 
   3.724701139934779*^9}, {3.724701229540249*^9, 3.724701235048484*^9}, {
   3.7247012681319027`*^9, 3.724701280496171*^9}, {3.724701366617728*^9, 
   3.7247013667766743`*^9}, {3.724719218806691*^9, 3.7247192215201893`*^9}, {
   3.72514095824282*^9, 3.725140958247514*^9}, 3.725141965356345*^9, 
   3.755273298031662*^9, 3.759948814385577*^9, {3.7599498135117083`*^9, 
   3.759949832197465*^9}, {3.759950882497958*^9, 3.759950897808955*^9}, {
   3.759950990215062*^9, 3.7599510039661417`*^9}, {3.761376827341165*^9, 
   3.761376866553979*^9}, 3.761377923093144*^9, {3.761378686174142*^9, 
   3.761378700638075*^9}, {3.761378828853498*^9, 3.761378944767704*^9}, {
   3.7613789849973707`*^9, 3.761378986073266*^9}, 3.761379059532205*^9, {
   3.761379854030953*^9, 3.761379857238243*^9}, {3.76138164070048*^9, 
   3.761381680509573*^9}, {3.761381778616987*^9, 3.76138177992199*^9}, {
   3.7613821328609962`*^9, 3.761382162302999*^9}, {3.761382475261574*^9, 
   3.7613825115830793`*^9}, {3.761382872811616*^9, 3.7613829314742737`*^9}, {
   3.76138474805365*^9, 3.761384765105919*^9}, 3.7691852218353243`*^9, 
   3.7697607055446863`*^9, 3.770438265078807*^9, 3.770721436449565*^9, {
   3.774591453142742*^9, 3.774591460003374*^9}, {3.794085311388085*^9, 
   3.794085355635972*^9}, 3.794137240780748*^9, 3.798128132801119*^9, {
   3.800466230004527*^9, 3.800466255090262*^9}, {3.807369342771963*^9, 
   3.80736934277538*^9}, 3.807369715664054*^9, {3.807369757131331*^9, 
   3.8073697597374763`*^9}, {3.8179879554926853`*^9, 3.817987975915937*^9}, {
   3.81799273259157*^9, 3.817992790162812*^9}, {3.818000047609743*^9, 
   3.818000050681723*^9}, {3.81800008921832*^9, 3.8180001013055687`*^9}, {
   3.8180002587833233`*^9, 
   3.81800026412833*^9}},ExpressionUUID->"374911a7-18b2-4da3-9dce-\
82fe6f801576"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["PlotEcoPhasePlane", "Subsection",
 CellChangeTimes->{{3.724697009975795*^9, 
  3.724697014294662*^9}},ExpressionUUID->"4713f981-ad4b-4882-b792-\
ecc7724d032d"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"0865ce11-8197-4d58-aa28-\
74c9ee21c0c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotEcoPhasePlane", "::", "usage"}], "=", "\n", 
   "\"\<PlotEcoPhasePlane[{\!\(\*StyleBox[\"var1\", \"TI\"]\), \
\!\(\*StyleBox[\"var1min\", \"TI\"]\), \!\(\*StyleBox[\"var1max\", \
\"TI\"]\)}, {\!\(\*StyleBox[\"var2\", \"TI\"]\), \!\(\*StyleBox[\"var2min\", \
\"TI\"]\), \!\(\*StyleBox[\"var2max\", \"TI\"]\)}] plots ecological streams \
and isoclines in the phase plane of variables \!\(\*StyleBox[\"var1\", \
\"TI\"]\) and \!\(\*StyleBox[\"var2\", \"TI\"]\).\n\
PlotEcoPhasePlane[\!\(\*StyleBox[\"attributes\", \"TI\"]\), \
{\!\(\*StyleBox[\"var1\", \"TI\"]\), \!\(\*StyleBox[\"var1min\", \"TI\"]\), \
\!\(\*StyleBox[\"var1max\", \"TI\"]\)}, {\!\(\*StyleBox[\"var2\", \"TI\"]\), \
\!\(\*StyleBox[\"var2min\", \"TI\"]\), \!\(\*StyleBox[\"var2max\", \
\"TI\"]\)}] uses trait values / interaction coefficients \
\!\(\*StyleBox[\"attributes\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769484342853547*^9, 3.7694843433870687`*^9}, {
  3.807399921340644*^9, 
  3.807399933226693*^9}},ExpressionUUID->"e3b5c4fa-a1d2-4008-aa8b-\
8bf2d88e53c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"b31fdf00-e69c-41d8-87cd-\
21459a2aaea9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotEcoPhasePlane", "[", 
    RowBox[{
     RowBox[{"attributes", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "AttributesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"var1_", ",", 
       RowBox[{"var1min_", "?", "NumericQ"}], ",", 
       RowBox[{"var1max_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"var2_", ",", 
       RowBox[{"var2min_", "?", "NumericQ"}], ",", 
       RowBox[{"var2max_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{"(*", " ", "options", " ", "*)"}], "\n", 
      RowBox[{"plotecoisoclinesopts", ",", "plotecostreamsopts"}], "}"}], ",",
      "\n", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
     RowBox[{
      RowBox[{"plotecoisoclinesopts", "=", 
       RowBox[{"FilterRules", "[", "\n", "\t", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{"PlotEcoIsoclinesOpts", "/.", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"opts", ",", 
                 RowBox[{"Options", "[", "PlotEcoPhasePlane", "]"}]}], "}"}], 
               "]"}]}], "]"}], ",", "opts", ",", 
            RowBox[{"Options", "[", "PlotEcoPhasePlane", "]"}]}], "}"}], 
          "]"}], ",", "\n", "\t", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Options", "[", "PlotEcoIsoclines", "]"}], ",", 
           RowBox[{"Options", "[", "ContourPlot", "]"}]}], "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"plotecostreamsopts", "=", 
       RowBox[{"FilterRules", "[", "\n", "\t", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{"PlotEcoStreamsOpts", "/.", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"opts", ",", 
                 RowBox[{"Options", "[", "PlotEcoPhasePlane", "]"}]}], "}"}], 
               "]"}]}], "]"}], ",", "opts", ",", 
            RowBox[{"Options", "[", "PlotEcoPhasePlane", "]"}]}], "}"}], 
          "]"}], ",", "\n", "\t", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Options", "[", "PlotEcoStreams", "]"}], ",", 
           RowBox[{"Options", "[", "StreamPlot", "]"}]}], "]"}]}], "]"}]}], 
      ";", "\n", "\n", 
      RowBox[{"Return", "[", 
       RowBox[{"Show", "[", "\n", "\t", 
        RowBox[{
         RowBox[{"PlotEcoStreams", "[", 
          RowBox[{"attributes", ",", 
           RowBox[{"{", 
            RowBox[{"var1", ",", "var1min", ",", "var1max"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"var2", ",", "var2min", ",", "var2max"}], "}"}], ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"Sequence", "@@", "plotecostreamsopts"}], "]"}]}], "]"}], 
         ",", "\n", "\t", 
         RowBox[{"PlotEcoIsoclines", "[", 
          RowBox[{"attributes", ",", 
           RowBox[{"{", 
            RowBox[{"var1", ",", "var1min", ",", "var1max"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"var2", ",", "var2min", ",", "var2max"}], "}"}], ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"Sequence", "@@", "plotecoisoclinesopts"}], "]"}]}], 
          "]"}]}], "\n", "]"}], "]"}]}]}], "\n", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.724697019447146*^9, 3.7246970213031073`*^9}, {
   3.72469706642633*^9, 3.724697169129353*^9}, {3.724697214664596*^9, 
   3.724697285641739*^9}, {3.7246981011806183`*^9, 3.7246981736502657`*^9}, {
   3.724698239213654*^9, 3.72469856298286*^9}, {3.724698642137356*^9, 
   3.724698644407136*^9}, {3.72470046389673*^9, 3.724700464286851*^9}, {
   3.724700506231979*^9, 3.724700519840026*^9}, {3.724700566433387*^9, 
   3.724700646902779*^9}, {3.724700774292193*^9, 3.724700778871992*^9}, {
   3.724700826917376*^9, 3.724700830923256*^9}, {3.7247009950713873`*^9, 
   3.724700999429072*^9}, {3.724701287371686*^9, 3.724701300580534*^9}, {
   3.724720978370154*^9, 3.724720983308675*^9}, 3.7251409582546988`*^9, {
   3.7321107131733723`*^9, 3.732110713821703*^9}, {3.732111157301447*^9, 
   3.7321111859814863`*^9}, {3.732111364738246*^9, 3.732111382233817*^9}, {
   3.732111462046926*^9, 3.7321114653797913`*^9}, {3.732111532335043*^9, 
   3.7321115523695498`*^9}, {3.732111601249777*^9, 3.732111621041198*^9}, 
   3.759948842119627*^9, 3.798128132804689*^9, {3.800466259800701*^9, 
   3.800466275705675*^9}, 3.807369342780945*^9, {3.807369760524329*^9, 
   3.807369761770028*^9}, {3.807399963742272*^9, 
   3.807399968444187*^9}},ExpressionUUID->"7faef566-c591-4261-90cc-\
973189697d42"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.7321107169700813`*^9, 
  3.732110718791319*^9}},ExpressionUUID->"eb3dc447-3d50-455a-bb21-\
b35edc5108c4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PlotEcoPhasePlane", "]"}], "=", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Time", "\[Rule]", "t"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", "Automatic"}], ",", "\n", "\t", 
     RowBox[{"PlotEcoIsoclinesOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"PlotEcoStreamsOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", "\t", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7745915339021397`*^9, 
  3.774591534827423*^9}},ExpressionUUID->"643864bf-f2e3-4316-bccf-\
fe4449610a62"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["PrestonPlot", "Subsection",
 CellChangeTimes->{{3.7157802007752542`*^9, 3.715780206043818*^9}, 
   3.723380976073349*^9, {3.7233811112250633`*^9, 3.723381111356948*^9}, 
   3.725838357684547*^9},ExpressionUUID->"eb17bf7d-d7a9-41da-b4c8-\
d9e6e7400aea"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"1055b119-d4e9-4f64-88ee-\
e9ab71567ff4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PrestonPlot", "::", "usage"}], " ", "=", "\n", 
   "\"\<PrestonPlot[\!\(\*StyleBox[\"sol\", \"TI\"]\)] makes a Preston \
species abundance distribution plot based on \!\(\*StyleBox[\"sol\", \
\"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769484393199679*^9, 3.769484393747366*^9}, {
  3.807400045812667*^9, 
  3.807400049171783*^9}},ExpressionUUID->"cf9032cc-47a0-4f20-94ab-\
49e820027fba"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"0f035f44-526e-4f3c-a8b5-\
d713d71bf24f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PrestonPlot", "[", 
    RowBox[{
     RowBox[{"sol_", "?", "VariablesQ"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<PrestonPlot\>\"", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\[IndentingNewLine]", "gu",
        ",", "minpop", ",", "bandwidth", ",", "showspecies", ",", 
       "markerstyle", ",", "plotopts", ",", "listplotopts", ",", "plotrange", 
       ",", "weightfunction", ",", "time", ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], 
       "\[IndentingNewLine]", "abunds", ",", "pos", ",", "data", ",", 
       "\[ScriptCapitalD]", ",", "hist", ",", "stix"}], "\[IndentingNewLine]",
       "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"gu", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Guild", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PrestonPlot", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"gu", "===", "Automatic"}], ",", 
          RowBox[{"gu", "=", 
           RowBox[{
           "guilds", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"minpop", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"MinPop", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PrestonPlot", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"bandwidth", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Bandwidth", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PrestonPlot", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"showspecies", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"ShowSpecies", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PrestonPlot", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"markerstyle", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"MarkerStyle", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PrestonPlot", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"plotopts", "=", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PrestonPlot", "]"}]}], "}"}], "]"}], 
           ",", 
           RowBox[{"Options", "[", "Plot", "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"listplotopts", "=", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PrestonPlot", "]"}]}], "}"}], "]"}], 
           ",", 
           RowBox[{"Options", "[", "ListPlot", "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"plotrange", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PlotRange", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PrestonPlot", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"weightfunction", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"WeightFunction", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PrestonPlot", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"time", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Time", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PrestonPlot", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"Set\[ScriptCapitalN]", "[", "sol", "]"}], ";", "\n", "\n", 
        RowBox[{"abunds", "=", 
         RowBox[{"ExtractGuilds", "[", 
          RowBox[{
           RowBox[{"WeightedAbundance", "[", 
            RowBox[{"sol", ",", 
             RowBox[{"WeightFunction", "\[Rule]", "weightfunction"}]}], "]"}],
            ",", "gu"}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"time", "===", "t"}], ",", "\n", "\t", 
          RowBox[{"abunds", "=", 
           RowBox[{"TemporalMean", "[", "abunds", "]"}]}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"abunds", "=", 
            RowBox[{"Slice", "[", 
             RowBox[{"abunds", ",", "time"}], "]"}]}], ";"}]}], "\n", "]"}], 
        ";", "\n", "\n", 
        RowBox[{"abunds", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"abunds", ",", 
           RowBox[{
            RowBox[{
             RowBox[{
             "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ">",
              "minpop"}], "&"}]}], "]"}]}], ";", "\n", 
        RowBox[{"pos", "=", 
         RowBox[{"abunds", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        ";", "\n", 
        RowBox[{"data", "=", 
         RowBox[{"Log", "[", 
          RowBox[{"abunds", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "]"}]}], ";",
         "\n", "\n", 
        RowBox[{"\[ScriptCapitalD]", "=", 
         RowBox[{"SmoothKernelDistribution", "[", 
          RowBox[{"data", ",", "bandwidth", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Bounded\>\"", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Min", "[", "data", "]"}], ",", 
               RowBox[{"Max", "[", "data", "]"}]}], "}"}], ",", 
             "\"\<Gaussian\>\""}], "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"hist", "=", 
         RowBox[{"LogLinearPlot", "[", 
          RowBox[{
           RowBox[{"PDF", "[", 
            RowBox[{"\[ScriptCapitalD]", ",", 
             RowBox[{"Log", "[", "x", "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"E", "^", 
              RowBox[{"Min", "[", "data", "]"}]}], ",", 
             RowBox[{"E", "^", 
              RowBox[{"Max", "[", "data", "]"}]}]}], "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"showspecies", ",", "\[IndentingNewLine]", "\t", 
          RowBox[{"stix", "=", 
           RowBox[{"ListLogLinearPlot", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"E", "^", "data"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{"0", ",", 
                  RowBox[{"{", 
                   RowBox[{"Length", "[", "pos", "]"}], "}"}]}], "]"}]}], 
               "}"}], "]"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", "markerstyle"}], ",", "\n", 
             "\t\t", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"Sequence", "@@", "listplotopts"}], "]"}], ",", 
             RowBox[{"PlotMarkers", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"\"\<|\>\"", ",", "8"}], "}"}]}]}], "]"}]}], ",", "\n",
           "\t", 
          RowBox[{"stix", "=", 
           RowBox[{"{", "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"Show", "[", 
          RowBox[{"stix", ",", "hist", ",", 
           RowBox[{"AxesOrigin", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Max", "[", "data", "]"}], ",", "0"}], "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "plotrange"}]}], "]"}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.715769426958699*^9, 3.715769427541718*^9}, {
   3.715770080609786*^9, 3.7157701274252462`*^9}, {3.715770182223977*^9, 
   3.715770206939686*^9}, {3.715770251665348*^9, 3.7157703240930643`*^9}, {
   3.715775270821048*^9, 3.715775290004567*^9}, 3.715775341838038*^9, {
   3.715777805781301*^9, 3.715777841780686*^9}, {3.715777977653454*^9, 
   3.715778011056696*^9}, {3.715778070083912*^9, 3.7157780743767033`*^9}, {
   3.715778127595952*^9, 3.715778162795555*^9}, {3.7157783827489147`*^9, 
   3.7157784396759243`*^9}, {3.7157794695034857`*^9, 3.715779536184903*^9}, {
   3.7157795727624273`*^9, 3.71577961854753*^9}, {3.715779977701977*^9, 
   3.7157800098795347`*^9}, {3.715780054987348*^9, 3.715780180009596*^9}, {
   3.715780246872175*^9, 3.715780248053912*^9}, {3.715780462690599*^9, 
   3.715780498137936*^9}, {3.715780815568123*^9, 3.7157809282734756`*^9}, {
   3.715780984521051*^9, 3.715781009001033*^9}, {3.7157810757736464`*^9, 
   3.715781105836532*^9}, 3.7220261936335173`*^9, {3.722034092230411*^9, 
   3.722034102187653*^9}, {3.723380976086491*^9, 3.7233809761332693`*^9}, {
   3.7233811145970287`*^9, 3.7233811707601023`*^9}, {3.7233812155331287`*^9, 
   3.7233813151180267`*^9}, {3.723381353967957*^9, 3.723381433783847*^9}, 
   3.72338149056318*^9, {3.7233816949831543`*^9, 3.7233817177771397`*^9}, {
   3.7233821313109207`*^9, 3.723382132076769*^9}, 3.723382208638012*^9, {
   3.7233823953067636`*^9, 3.7233824131693163`*^9}, {3.723382578096826*^9, 
   3.7233825864069777`*^9}, {3.723397198684486*^9, 3.723397216632679*^9}, {
   3.7233972639395027`*^9, 3.7233972815540743`*^9}, {3.723397462172179*^9, 
   3.7233974652632008`*^9}, {3.723397617020337*^9, 3.723397621421433*^9}, {
   3.723397675093034*^9, 3.723397682588902*^9}, {3.723397777056635*^9, 
   3.723397813149156*^9}, {3.72340375191016*^9, 3.723403768595744*^9}, {
   3.725831203835395*^9, 3.7258312084296827`*^9}, {3.725831257322579*^9, 
   3.725831262935713*^9}, {3.7258312934661827`*^9, 3.72583129909431*^9}, {
   3.725831345389896*^9, 3.725831348003084*^9}, {3.7258363206502657`*^9, 
   3.725836381364141*^9}, {3.72583650834517*^9, 3.725836598363964*^9}, {
   3.725836729876663*^9, 3.725836772925323*^9}, {3.72583705784724*^9, 
   3.725837125185616*^9}, {3.725837158534384*^9, 3.7258371586505337`*^9}, {
   3.725837207265864*^9, 3.725837344749372*^9}, {3.725837407186122*^9, 
   3.7258374130525827`*^9}, {3.7258374590666857`*^9, 
   3.7258376032168703`*^9}, {3.725837635471816*^9, 3.7258376463564873`*^9}, {
   3.725837751515706*^9, 3.725837789698951*^9}, {3.725837870187104*^9, 
   3.725837872895339*^9}, {3.7258379076056843`*^9, 3.725837914946828*^9}, {
   3.7258381848965187`*^9, 3.7258382316533203`*^9}, {3.7258383124033117`*^9, 
   3.72583831989331*^9}, {3.72583835769519*^9, 3.7258383577410316`*^9}, {
   3.7258406645408993`*^9, 3.725840667826569*^9}, 3.725840954888434*^9, {
   3.72584194581675*^9, 3.7258419486617203`*^9}, {3.725842249381733*^9, 
   3.725842303568061*^9}, {3.725842355845216*^9, 3.725842394909976*^9}, {
   3.725842471428344*^9, 3.7258425250851192`*^9}, {3.725843185389254*^9, 
   3.72584318566927*^9}, {3.7258432629374*^9, 3.725843264283102*^9}, {
   3.725843400039682*^9, 3.72584340711718*^9}, {3.7258434918435183`*^9, 
   3.7258434992278633`*^9}, {3.7258828815160627`*^9, 3.725883006726489*^9}, {
   3.7258830864032784`*^9, 3.725883086655963*^9}, {3.725909019293723*^9, 
   3.72590902212987*^9}, 3.725909117418908*^9, {3.725909170353407*^9, 
   3.7259092238995657`*^9}, {3.725909345525135*^9, 3.725909386064473*^9}, {
   3.725909429585046*^9, 3.725909462263809*^9}, {3.725911358259245*^9, 
   3.725911362932658*^9}, {3.725964687640972*^9, 3.725964688023782*^9}, {
   3.755275169281728*^9, 3.755275192127932*^9}, 3.75995127077934*^9, {
   3.759951312282358*^9, 3.759951330624626*^9}, {3.7605505990763474`*^9, 
   3.760550599884726*^9}, {3.760690314817853*^9, 3.760690333371538*^9}, {
   3.7606907252518463`*^9, 3.760690751295392*^9}, {3.760691127761891*^9, 
   3.760691128856139*^9}, {3.760691497867463*^9, 3.760691501006785*^9}, {
   3.76069171066433*^9, 3.760691715157297*^9}, {3.760693282890256*^9, 
   3.760693346042935*^9}, {3.760693604955728*^9, 3.760693629935577*^9}, 
   3.769760705560923*^9, {3.770369887540971*^9, 3.7703698880225143`*^9}, 
   3.770438265086594*^9, {3.7707214365838223`*^9, 3.7707214370141087`*^9}, {
   3.774692253413301*^9, 3.774692268881798*^9}, {3.77469237467085*^9, 
   3.774692382778133*^9}, {3.7746924363989*^9, 3.7746924461000433`*^9}, {
   3.78067445066503*^9, 3.780674453985373*^9}, 3.780674942718275*^9, {
   3.780675027840899*^9, 3.780675052451599*^9}, {3.780676127764804*^9, 
   3.780676234602078*^9}, {3.78067631141742*^9, 3.780676339093176*^9}, {
   3.780676797184162*^9, 3.780676811965591*^9}, {3.7806779058860407`*^9, 
   3.780677929841753*^9}, {3.780678077121345*^9, 3.7806780878059473`*^9}, {
   3.780678124715939*^9, 3.780678129933901*^9}, {3.780679076361936*^9, 
   3.780679100862617*^9}, {3.780679352133212*^9, 3.780679361889852*^9}, {
   3.780680069842854*^9, 3.780680077470364*^9}, {3.780680347272683*^9, 
   3.780680347996435*^9}, {3.78068108706968*^9, 3.7806810874410133`*^9}, 
   3.780681439792214*^9, {3.780681672138853*^9, 3.780681680243453*^9}, {
   3.780681751226758*^9, 3.780681757072693*^9}, {3.780681802471493*^9, 
   3.780681813221993*^9}, 3.7847452490461893`*^9, 3.784795912334343*^9, {
   3.794095411808885*^9, 3.794095421868013*^9}, 3.794137240786701*^9, {
   3.81195226302843*^9, 
   3.811952272116085*^9}},ExpressionUUID->"d68ae6d2-2376-4921-be0d-\
18e75da0182f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.770369889780488*^9, 
  3.770369890467723*^9}},ExpressionUUID->"d3bf25e1-c7a2-4fc6-9093-\
99317b036aaf"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PrestonPlot", "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Guild", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"WeightFunction", "\[Rule]", "\"\<Total\>\""}], ",", 
     RowBox[{"Time", "\[Rule]", "t"}], ",", "\n", 
     RowBox[{"MinPop", "\[Rule]", "0"}], ",", 
     RowBox[{"Bandwidth", "\[Rule]", "\"\<Scott\>\""}], ",", 
     RowBox[{"ShowSpecies", "\[Rule]", "True"}], ",", 
     RowBox[{"MarkerStyle", "\[Rule]", "Gray"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "All"}], "}"}]}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.770369895396367*^9, {3.7703700104364233`*^9, 3.7703700164719267`*^9}, {
   3.780676246226261*^9, 3.780676252613517*^9}, {3.780680352550902*^9, 
   3.780680352963513*^9}, {3.780682487917837*^9, 3.780682490200629*^9}, 
   3.7807324712788897`*^9},ExpressionUUID->"fdeca739-581b-49ad-b958-\
5833506c5496"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["WhittakerPlot", "Subsection",
 CellChangeTimes->{{3.7157802007752542`*^9, 3.715780206043818*^9}, 
   3.723380976073349*^9, {3.7233811112250633`*^9, 3.723381111356948*^9}, 
   3.725838357684547*^9, {3.725843196856442*^9, 
   3.7258431980425177`*^9}},ExpressionUUID->"fe7d94a1-7988-421b-90a1-\
85e14f3bd4be"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"53a324b2-5558-4ba1-8941-\
b5b1048f3f40"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"WhittakerPlot", "::", "usage"}], " ", "=", "\n", 
   "\"\<WhittakerPlot[\!\(\*StyleBox[\"sol\", \"TI\"]\)] makes a Whittaker \
rank-abundance plot based on \!\(\*StyleBox[\"sol\", \"TI\"]\).\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.769484411660802*^9, 3.7694844121139727`*^9}, {
  3.8074000981891127`*^9, 
  3.807400100764216*^9}},ExpressionUUID->"897d4ec0-fbf5-4841-a17d-\
ee1bc3d18e60"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"15194021-61f9-4a14-8f26-\
748259d06586"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"WhittakerPlot", "[", 
    RowBox[{
     RowBox[{"sol_", "?", "VariablesQ"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<WhittakerPlot\>\"", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\[IndentingNewLine]", "gu",
        ",", "minpop", ",", "plotopts", ",", "weightfunction", ",", "time", 
       ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], 
       "\[IndentingNewLine]", "abunds", ",", "data"}], "\[IndentingNewLine]", 
      "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"gu", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Guild", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "WhittakerPlot", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"gu", "===", "Automatic"}], ",", 
          RowBox[{"gu", "=", 
           RowBox[{
           "guilds", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"minpop", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"MinPop", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "WhittakerPlot", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"plotopts", "=", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "WhittakerPlot", "]"}]}], "}"}], "]"}], 
           ",", 
           RowBox[{"Options", "[", "ListLogPlot", "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"weightfunction", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"WeightFunction", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "WhittakerPlot", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"time", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Time", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "WhittakerPlot", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"Set\[ScriptCapitalN]", "[", "sol", "]"}], ";", "\n", "\n", 
        RowBox[{"abunds", "=", 
         RowBox[{"ExtractGuilds", "[", 
          RowBox[{
           RowBox[{"WeightedAbundance", "[", 
            RowBox[{"sol", ",", 
             RowBox[{"WeightFunction", "\[Rule]", "weightfunction"}]}], "]"}],
            ",", "gu"}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"time", "===", "t"}], ",", "\n", "\t", 
          RowBox[{"abunds", "=", 
           RowBox[{"TemporalMean", "[", "abunds", "]"}]}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"abunds", "=", 
            RowBox[{"Slice", "[", 
             RowBox[{"abunds", ",", "time"}], "]"}]}], ";"}]}], "\n", "]"}], 
        ";", "\n", "\n", 
        RowBox[{"abunds", "=", 
         RowBox[{"Sort", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"gu", ",", "i"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                SubscriptBox["\[ScriptCapitalN]", "gu"]}], "}"}]}], "]"}], "/.",
             "abunds"}], ",", "Greater"}], "]"}]}], ";", "\n", 
        RowBox[{"abunds", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"abunds", ",", 
           RowBox[{
            RowBox[{"#", ">", "minpop"}], "&"}]}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"Return", "[", 
         RowBox[{"ListLogPlot", "[", 
          RowBox[{"abunds", ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"Sequence", "@@", "plotopts"}], "]"}]}], "]"}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.715769426958699*^9, 3.715769427541718*^9}, {
   3.715770080609786*^9, 3.7157701274252462`*^9}, {3.715770182223977*^9, 
   3.715770206939686*^9}, {3.715770251665348*^9, 3.7157703240930643`*^9}, {
   3.715775270821048*^9, 3.715775290004567*^9}, 3.715775341838038*^9, {
   3.715777805781301*^9, 3.715777841780686*^9}, {3.715777977653454*^9, 
   3.715778011056696*^9}, {3.715778070083912*^9, 3.7157780743767033`*^9}, {
   3.715778127595952*^9, 3.715778162795555*^9}, {3.7157783827489147`*^9, 
   3.7157784396759243`*^9}, {3.7157794695034857`*^9, 3.715779536184903*^9}, {
   3.7157795727624273`*^9, 3.71577961854753*^9}, {3.715779977701977*^9, 
   3.7157800098795347`*^9}, {3.715780054987348*^9, 3.715780180009596*^9}, {
   3.715780246872175*^9, 3.715780248053912*^9}, {3.715780462690599*^9, 
   3.715780498137936*^9}, {3.715780815568123*^9, 3.7157809282734756`*^9}, {
   3.715780984521051*^9, 3.715781009001033*^9}, {3.7157810757736464`*^9, 
   3.715781105836532*^9}, 3.7220261936335173`*^9, {3.722034092230411*^9, 
   3.722034102187653*^9}, {3.723380976086491*^9, 3.7233809761332693`*^9}, {
   3.7233811145970287`*^9, 3.7233811707601023`*^9}, {3.7233812155331287`*^9, 
   3.7233813151180267`*^9}, {3.723381353967957*^9, 3.723381433783847*^9}, 
   3.72338149056318*^9, {3.7233816949831543`*^9, 3.7233817177771397`*^9}, {
   3.7233821313109207`*^9, 3.723382132076769*^9}, 3.723382208638012*^9, {
   3.7233823953067636`*^9, 3.7233824131693163`*^9}, {3.723382578096826*^9, 
   3.7233825864069777`*^9}, {3.723397198684486*^9, 3.723397216632679*^9}, {
   3.7233972639395027`*^9, 3.7233972815540743`*^9}, {3.723397462172179*^9, 
   3.7233974652632008`*^9}, {3.723397617020337*^9, 3.723397621421433*^9}, {
   3.723397675093034*^9, 3.723397682588902*^9}, {3.723397777056635*^9, 
   3.723397813149156*^9}, {3.72340375191016*^9, 3.723403768595744*^9}, {
   3.725831203835395*^9, 3.7258312084296827`*^9}, {3.725831257322579*^9, 
   3.725831262935713*^9}, {3.7258312934661827`*^9, 3.72583129909431*^9}, {
   3.725831345389896*^9, 3.725831348003084*^9}, {3.7258363206502657`*^9, 
   3.725836381364141*^9}, {3.72583650834517*^9, 3.725836598363964*^9}, {
   3.725836729876663*^9, 3.725836772925323*^9}, {3.72583705784724*^9, 
   3.725837125185616*^9}, {3.725837158534384*^9, 3.7258371586505337`*^9}, {
   3.725837207265864*^9, 3.725837344749372*^9}, {3.725837407186122*^9, 
   3.7258374130525827`*^9}, {3.7258374590666857`*^9, 
   3.7258376032168703`*^9}, {3.725837635471816*^9, 3.7258376463564873`*^9}, {
   3.725837751515706*^9, 3.725837789698951*^9}, {3.725837870187104*^9, 
   3.725837872895339*^9}, {3.7258379076056843`*^9, 3.725837914946828*^9}, {
   3.7258381848965187`*^9, 3.7258382316533203`*^9}, {3.7258383124033117`*^9, 
   3.72583831989331*^9}, {3.72583835769519*^9, 3.7258383577410316`*^9}, {
   3.7258406645408993`*^9, 3.725840667826569*^9}, 3.725840954888434*^9, {
   3.72584194581675*^9, 3.7258419486617203`*^9}, {3.725842249381733*^9, 
   3.725842303568061*^9}, {3.725842355845216*^9, 3.725842394909976*^9}, {
   3.725842471428344*^9, 3.7258425250851192`*^9}, {3.725843185389254*^9, 
   3.72584318566927*^9}, {3.725843222637555*^9, 3.725843256811016*^9}, {
   3.72584350666693*^9, 3.725843571630842*^9}, 3.725909286278324*^9, {
   3.725911812487897*^9, 3.725911830108882*^9}, {3.725912422567441*^9, 
   3.7259124387010603`*^9}, {3.725962769378989*^9, 3.725962806169854*^9}, {
   3.725962875547228*^9, 3.725962876045032*^9}, {3.7552763684222393`*^9, 
   3.7552763780647097`*^9}, {3.75995136540869*^9, 3.7599513778994713`*^9}, 
   3.7605506006176434`*^9, {3.760694217725615*^9, 3.7606942500353394`*^9}, {
   3.760694431275038*^9, 3.760694433909978*^9}, 3.7697607055699253`*^9, 
   3.770438265089871*^9, {3.7707214372399*^9, 3.770721437358796*^9}, {
   3.7806603710909243`*^9, 3.780660386855422*^9}, {3.780660429932254*^9, 
   3.7806604301253366`*^9}, {3.780660468736218*^9, 3.780660469072014*^9}, {
   3.7806605519509478`*^9, 3.7806605836783943`*^9}, {3.780661124017251*^9, 
   3.780661199447166*^9}, {3.780661919289798*^9, 3.780661934778308*^9}, {
   3.7806620984191647`*^9, 3.780662119738941*^9}, {3.780663091938257*^9, 
   3.780663124087665*^9}, 3.780675019572112*^9, 3.784745231087373*^9, 
   3.7847959130197277`*^9, {3.794095717845931*^9, 3.794095722532116*^9}, 
   3.794137240790984*^9, {3.8119523028513107`*^9, 3.811952310539207*^9}, {
   3.818003685391294*^9, 3.818003687478619*^9}, {3.81800424225243*^9, 
   3.8180042614030237`*^9}, {3.818004308789145*^9, 
   3.818004309083581*^9}},ExpressionUUID->"8cc64a6d-9ea7-466d-815e-\
5c291c159130"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.780660388533934*^9, 
  3.780660389160581*^9}},ExpressionUUID->"943be980-fd2f-49b1-8fca-\
4807a3a7aee2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "WhittakerPlot", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Guild", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"MinPop", "\[Rule]", "0"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"WeightFunction", "\[Rule]", "\"\<Total\>\""}], ",", 
     RowBox[{"Time", "\[Rule]", "t"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.780660390508542*^9, 3.780660409492793*^9}, 
   3.780660970504849*^9, 3.7806618938455133`*^9, {3.7806631287363234`*^9, 
   3.780663130395604*^9}},ExpressionUUID->"945292da-2729-48ae-b78f-\
d13d1e07410b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["PlotGuild", "Subsection",
 CellChangeTimes->{{3.7157802007752542`*^9, 3.715780206043818*^9}, 
   3.723380976073349*^9, 
   3.8290634478346767`*^9},ExpressionUUID->"513878cd-c935-4671-9a95-\
f0272c1416d5"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"f509be43-2e0c-4ed4-8a89-\
6a3362c99eae"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotGuild", "::", "usage"}], " ", "=", "\n", 
   "\"\<PlotGuild[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"sol\", \"TI\"]\)] plots abundance vs trait/species for the \
species in \!\(\*StyleBox[\"traits\", \"TI\"]\) and \!\(\*StyleBox[\"sol\", \
\"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.7694844194347754`*^9, 3.7694844199318132`*^9}, {
  3.770005808294241*^9, 3.7700058084347973`*^9}, {3.80740014276656*^9, 
  3.807400146204627*^9}, {3.8290634478411837`*^9, 3.829063447842636*^9}, {
  3.829401954904847*^9, 
  3.8294019559344063`*^9}},ExpressionUUID->"738ed46d-4ac4-43ed-abfc-\
371e5db0751e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"14f27690-8078-43bd-89cd-\
88479176d52d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotGuild", "[", 
    RowBox[{
     RowBox[{"attributesin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "AttributesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"solin_", "?", "VariablesQ"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<PlotGuild\>\"", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\[IndentingNewLine]", 
       "verbose", ",", "plottype", ",", "plotpoints", ",", "\n", 
       "listplotopts", ",", "arrayplotopts", ",", "listplot3dopts", ",", 
       "listlineplot3dopts", ",", "\n", "logged", ",", "minpop", ",", 
       "plotstyle", ",", "time", ",", "weightfunction", ",", "\n", "gu", ",", 
       "tr", ",", "species", ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "traitrange", 
       ",", "res", ",", "dat", ",", "tmin", ",", "tmax", ",", "framelabel", 
       ",", "\[IndentingNewLine]", "sol", ",", "traits", ",", "abunds", ",", 
       "pos", ",", "plotmin", ",", "xcoord"}], "\[IndentingNewLine]", "}"}], 
     ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotGuild", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"plottype", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PlotType", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotGuild", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"plotstyle", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PlotStyle", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotGuild", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"logged", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Logged", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotGuild", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"listplotopts", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"FilterRules", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"opts", ",", 
                RowBox[{"Options", "[", "PlotGuild", "]"}]}], "}"}], "]"}], 
             ",", 
             RowBox[{"Options", "[", "ListPlot", "]"}]}], "]"}], ",", "\n", 
           "\t", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"ListPlotOpts", "/.", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"opts", ",", 
                RowBox[{"Options", "[", "PlotGuild", "]"}]}], "}"}], "]"}]}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"arrayplotopts", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"FilterRules", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"opts", ",", 
                RowBox[{"Options", "[", "PlotGuild", "]"}]}], "}"}], "]"}], 
             ",", 
             RowBox[{"Options", "[", "ArrayPlot", "]"}]}], "]"}], ",", "\n", 
           "\t", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"ArrayPlotOpts", "/.", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"opts", ",", 
                RowBox[{"Options", "[", "PlotGuild", "]"}]}], "}"}], "]"}]}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"listplot3dopts", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"FilterRules", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"opts", ",", 
                RowBox[{"Options", "[", "PlotGuild", "]"}]}], "}"}], "]"}], 
             ",", 
             RowBox[{"Options", "[", "ListPlot3D", "]"}]}], "]"}], ",", "\n", 
           "\t", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"ListPlot3DOpts", "/.", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"opts", ",", 
                RowBox[{"Options", "[", "PlotGuild", "]"}]}], "}"}], "]"}]}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"listlineplot3dopts", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"FilterRules", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"opts", ",", 
                RowBox[{"Options", "[", "PlotGuild", "]"}]}], "}"}], "]"}], 
             ",", 
             RowBox[{"Options", "[", "MyListLinePlot3D", "]"}]}], "]"}], ",", 
           "\n", "\t", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"ListLinePlot3DOpts", "/.", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"opts", ",", 
                RowBox[{"Options", "[", "PlotGuild", "]"}]}], "}"}], "]"}]}], 
            "]"}]}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"plotpoints", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PlotPoints", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotGuild", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"traitrange", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"TraitRange", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotGuild", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"gu", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Guild", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotGuild", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"gu", "===", "Automatic"}], ",", 
          RowBox[{"gu", "=", 
           RowBox[{
           "guilds", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"tr", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Trait", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotGuild", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"tr", "===", "Automatic"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"gtraits", "[", "gu", "]"}], "=!=", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"tr", "=", 
             RowBox[{
              RowBox[{"gtraits", "[", "gu", "]"}], "\[LeftDoubleBracket]", 
              "1", "\[RightDoubleBracket]"}]}], ",", 
            RowBox[{"tr", "=", "None"}]}], "]"}]}], "]"}], ";", "\n", 
        "\[IndentingNewLine]", 
        RowBox[{"minpop", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"MinPop", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotGuild", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"time", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Time", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotGuild", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"weightfunction", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"WeightFunction", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotGuild", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"weightfunction", "===", "\"\<Components\>\""}], ",", 
            RowBox[{"weightfunction", "=", 
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"gcomps", "[", "gu", "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"comptype", "[", "#", "]"}], "===", 
                 "\"\<Extensive\>\""}], "&"}]}], "]"}]}]}], "]"}], ";"}], 
         "*)"}], "\n", 
        RowBox[{"species", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Species", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotGuild", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<{gu,tr}=\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"gu", ",", "tr"}], "}"}]}], "]"}], ";"}], "*)"}], "\n", 
        "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ngcomps", "[", "gu", "]"}], ">", "1"}], ",", "\n", "\t", 
          RowBox[{"sol", "=", 
           RowBox[{"WeightedAbundance", "[", 
            RowBox[{
             RowBox[{"ExtractGuilds", "[", 
              RowBox[{"solin", ",", "gu"}], "]"}], ",", 
             RowBox[{"WeightFunction", "\[Rule]", "weightfunction"}]}], 
            "]"}]}], ",", "\n", "\t", 
          RowBox[{"sol", "=", 
           RowBox[{"ExtractGuilds", "[", 
            RowBox[{"solin", ",", "gu"}], "]"}]}]}], "\n", "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<sol=\>\"", ",", "sol"}], "]"}], ";"}], "*)"}], "\n", 
        "\n", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"Set\[ScriptCapitalN]", "[", 
         RowBox[{"attributesin", ",", "solin"}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: \[ScriptCapitalN]=\>\"", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "]"}]}], 
         "]"}], ";", "\n", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"TemporalRuleListQ", "[", "sol", "]"}], "&&", 
           RowBox[{"time", "===", "t"}]}], ",", " ", 
          StyleBox[
           RowBox[{"(*", " ", 
            StyleBox[
             RowBox[{"temporal", " ", "dynamics"}],
             FontVariations->{"Underline"->True}], " ", "*)"}],
           FontSize->16], 
          StyleBox["\n",
           FontSize->16], "\t", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"tmin", ",", "tmax"}], "}"}], "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"InitialTime", "[", "sol", "]"}], ",", 
              RowBox[{"FinalTime", "[", "sol", "]"}]}], "}"}]}], ";", "\n", 
           "\t", 
           RowBox[{"Which", "[", "\n", "\t\t", 
            RowBox[{
             StyleBox[
              RowBox[{"plottype", "\[Equal]", "\"\<ArrayPlot\>\""}],
              FontSize->16], 
             StyleBox[",",
              FontSize->16], "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"plotpoints", "===", "Automatic"}], ",", 
                RowBox[{"plotpoints", "=", "200"}]}], "]"}], ";", "\n", 
              "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"tr", "=!=", "None"}], ",", "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"traitrange", "=", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    SubscriptBox["tr", "sp"], ",", 
                    RowBox[{"{", 
                    RowBox[{"sp", ",", 
                    SubscriptBox["\[ScriptCapitalN]", "gu"]}], "}"}]}], "]"}],
                     "/.", "attributesin"}], "]"}], ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    SubscriptBox["tr", "sp"], ",", 
                    RowBox[{"{", 
                    RowBox[{"sp", ",", 
                    SubscriptBox["\[ScriptCapitalN]", "gu"]}], "}"}]}], "]"}],
                     "/.", "attributesin"}], "]"}]}], "}"}]}], ";", "\n", 
                 "\t\t\t", 
                 RowBox[{"framelabel", "=", 
                  RowBox[{"{", 
                   RowBox[{"tr", ",", "\"\<t\>\""}], "}"}]}]}], ",", "\n", 
                "\t\t\t", 
                RowBox[{
                 RowBox[{"traitrange", "=", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", 
                    SubscriptBox["\[ScriptCapitalN]", "gu"]}], "}"}]}], ";", 
                 "\n", "\t\t\t", 
                 RowBox[{"framelabel", "=", 
                  RowBox[{"{", 
                   RowBox[{"\"\<sp\>\"", ",", "\"\<t\>\""}], "}"}]}]}]}], 
               "\n", "\t\t", "]"}], ";", "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"InterpolatingFunctionFunctionQ", "[", "sol", "]"}], 
                ",", "\n", "\t\t\t", 
                RowBox[{"dat", "=", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    SubscriptBox["gu", "sp"], "[", "t", "]"}], "/.", "sol"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"sp", ",", 
                    SubscriptBox["\[ScriptCapitalN]", "gu"]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"t", ",", "tmin", ",", "tmax", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"tmax", "-", "tmin"}], ")"}], "/", 
                    "plotpoints"}]}], "}"}]}], "]"}]}], ",", "\n", "\t\t\t", 
                RowBox[{"dat", "=", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["gu", "sp"], "/.", "sol"}], ")"}], "[", 
                    "\"\<Values\>\"", "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"sp", ",", 
                    SubscriptBox["\[ScriptCapitalN]", "gu"]}], "}"}]}], 
                  "]"}]}]}], "\n", "\t\t", "]"}], ";", "\t\t", "\n", "\t\t", 
              RowBox[{"res", "=", 
               RowBox[{"ArrayPlot", "[", 
                RowBox[{
                 RowBox[{"Reverse", "@", "dat"}], ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"Sequence", "@@", "arrayplotopts"}], "]"}], ",", 
                 RowBox[{"DataRange", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"tmin", ",", "tmax"}], "}"}], ",", "traitrange"}],
                    "}"}]}], ",", 
                 RowBox[{"FrameLabel", "\[Rule]", "framelabel"}]}], "]"}]}]}],
              "\n", "\t", ",", "\n", "\t\t", 
             StyleBox[
              RowBox[{"plottype", "\[Equal]", "\"\<Plot3D\>\""}],
              FontSize->16], 
             StyleBox[",",
              FontSize->16], "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"plotpoints", "===", "Automatic"}], ",", 
                RowBox[{"plotpoints", "=", "100"}]}], "]"}], ";", "\n", 
              "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"InterpolatingFunctionFunctionQ", "[", "sol", "]"}], 
                ",", "\n", "\t\t\t", 
                RowBox[{"dat", "=", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"t", ",", 
                    RowBox[{
                    SubscriptBox["tr", "sp"], "/.", "attributesin"}], ",", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["gu", "sp"], "[", "t", "]"}], "/.", 
                    "sol"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"sp", ",", 
                    SubscriptBox["\[ScriptCapitalN]", "gu"]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "tmin", ",", "tmax", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"tmax", "-", "tmin"}], ")"}], "/", 
                    "plotpoints"}]}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
                ",", "\n", "\t\t\t", 
                RowBox[{"dat", "=", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Insert", "[", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["tr", "sp"], "/.", "attributesin"}], ",", 
                    "2"}], "]"}], "/@", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["gu", "sp"], "/.", "sol"}], ")"}], "[", 
                    "\"\<Path\>\"", "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"sp", ",", 
                    SubscriptBox["\[ScriptCapitalN]", "gu"]}], "}"}]}], "]"}],
                    ",", "1"}], "]"}]}]}], "\n", "\t\t", "]"}], ";", "\n", 
              "\t\t", 
              RowBox[{"res", "=", 
               RowBox[{"ListPlot3D", "[", 
                RowBox[{"dat", ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"Sequence", "@@", "listplot3dopts"}], "]"}], ",", 
                 RowBox[{"AxesLabel", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"\"\<t\>\"", ",", "tr", ",", "gu"}], "}"}]}]}], 
                "]"}]}]}], "\n", "\t", ",", "\n", "\t\t", 
             StyleBox[
              RowBox[{"plottype", "\[Equal]", "\"\<LinePlot3D\>\""}],
              FontSize->16], 
             StyleBox[",",
              FontSize->16], "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"plotstyle", "===", "Automatic"}], ",", 
                RowBox[{"plotstyle", "=", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"color", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"tr", ",", "1"}], "]"}], "]"}], "[", 
                    RowBox[{"SpFrac", "[", 
                    RowBox[{"i", ",", 
                    RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}]}], "]"}], 
                    "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    SubscriptBox["\[ScriptCapitalN]", "gu"]}], "}"}]}], 
                  "]"}]}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"InterpolatingFunctionFunctionQ", "[", "sol", "]"}], 
                ",", "\n", "\t\t\t", 
                RowBox[{"res", "=", 
                 RowBox[{"ParametricPlot3D", "[", 
                  RowBox[{
                   RowBox[{"Evaluate", "[", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"t", ",", 
                    RowBox[{
                    SubscriptBox["tr", "sp"], "/.", "attributesin"}], ",", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["gu", "sp"], "[", "t", "]"}], "/.", 
                    "sol"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"sp", ",", 
                    SubscriptBox["\[ScriptCapitalN]", "gu"]}], "}"}]}], "]"}],
                     "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"t", ",", "tmin", ",", "tmax"}], "}"}], ",", "\n",
                    "\t\t\t\t", 
                   RowBox[{"PlotStyle", "\[Rule]", "plotstyle"}], ",", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "listlineplot3dopts"}], "]"}], 
                   ",", 
                   RowBox[{"AxesLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"\<t\>\"", ",", "tr", ",", "gu"}], "}"}]}]}], 
                  "]"}]}], "\n", "\t\t", ",", "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"dat", "=", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Insert", "[", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["tr", "sp"], "/.", "attributesin"}], ",", 
                    "2"}], "]"}], "/@", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["gu", "sp"], "/.", "sol"}], ")"}], "[", 
                    "\"\<Path\>\"", "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"sp", ",", 
                    SubscriptBox["\[ScriptCapitalN]", "gu"]}], "}"}]}], 
                   "]"}]}], ";", "\n", "\t\t\t", 
                 RowBox[{"res", "=", 
                  RowBox[{"MyListLinePlot3D", "[", 
                   RowBox[{"dat", ",", 
                    RowBox[{"PlotStyle", "\[Rule]", "plotstyle"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "listlineplot3dopts"}], "]"}], 
                    ",", 
                    RowBox[{"AxesLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"\<t\>\"", ",", "tr", ",", "gu"}], "}"}]}]}], 
                   "]"}]}]}]}], "\n", "\t\t", "]"}]}], "\n", "\t", ",", "\n", 
             "\t\t", "Else", ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"Message", "[", 
               RowBox[{"PlotGuild", "::", "badmtd"}], "]"}], ";", 
              RowBox[{"Return", "[", "$Failed", "]"}]}]}], "\n", "\t", "]"}], 
           ";", "\n", "\t", 
           RowBox[{"Return", "[", "res", "]"}]}]}], "\n", "]"}], ";", "\n", 
        "\n", 
        StyleBox[
         RowBox[{"(*", " ", 
          StyleBox[
           RowBox[{"non", "-", 
            RowBox[{"temporal", " ", "dynamics"}]}],
           FontVariations->{"Underline"->True}], " ", "*)"}],
         FontSize->16], 
        StyleBox["\n",
         FontSize->16], "\n", 
        RowBox[{"sol", "=", 
         RowBox[{"Slice", "[", 
          RowBox[{"sol", ",", "time"}], "]"}]}], ";", "\n", 
        RowBox[{"traits", "=", 
         RowBox[{"Slice", "[", 
          RowBox[{"attributesin", ",", "time"}], "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<sol=\>\"", ",", "sol"}], "]"}], ";", "\n", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<traits=\>\"", ",", "traits"}], "]"}], ";"}], "*)"}], 
        "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"plotstyle", "===", "Automatic"}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"weightfunction", "===", "\"\<Components\>\""}], ",", 
             "\n", "\t\t", 
             RowBox[{"plotstyle", "=", 
              RowBox[{"Reverse", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Directive", "[", 
                  RowBox[{
                   RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "i"}], "]"}], ",", "Thick", ",", 
                   RowBox[{"Opacity", "[", "1", "]"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"Length", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"gcomps", "[", "gu", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"comptype", "[", "#", "]"}], "===", 
                    "\"\<Extensive\>\""}], "&"}]}], "]"}], "]"}]}], "}"}]}], 
                "]"}], "]"}]}], "\n", "\t", ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"species", "=!=", "None"}], ",", "\n", "\t\t\t", 
                RowBox[{"plotstyle", "=", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"i", "\[Equal]", "species"}], ",", "\n", 
                    "\t\t\t\t", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Thick", ",", 
                    RowBox[{
                    RowBox[{"color", "[", 
                    SubscriptBox["gu", "1"], "]"}], "[", 
                    RowBox[{"SpFrac", "[", 
                    RowBox[{"i", ",", 
                    RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}]}], "]"}], 
                    "]"}]}], "]"}], ",", "\n", "\t\t\t\t", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Thin", ",", 
                    RowBox[{
                    RowBox[{"color", "[", 
                    SubscriptBox["gu", "1"], "]"}], "[", 
                    RowBox[{"SpFrac", "[", 
                    RowBox[{"i", ",", 
                    RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}]}], "]"}], 
                    "]"}]}], "]"}]}], "\n", "\t\t\t", "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    SubscriptBox["\[ScriptCapitalN]", "gu"]}], "}"}]}], 
                  "]"}]}], ",", "\n", "\t\t\t", 
                RowBox[{"plotstyle", "=", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"color", "[", 
                    SubscriptBox["gu", "1"], "]"}], "[", 
                    RowBox[{"SpFrac", "[", 
                    RowBox[{"i", ",", 
                    RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}]}], "]"}], 
                    "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    SubscriptBox["\[ScriptCapitalN]", "gu"]}], "}"}]}], 
                  "]"}]}]}], "\n", "\t\t", "]"}], ";"}]}], "\n", "\t", "]"}], 
           ";"}]}], "\n", "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<plotstyle=\>\"", ",", "plotstyle"}], "]"}], ";"}], 
         "*)"}], "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"tr", "===", "None"}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"xcoord", "=", "i"}], ";", "\n", "\t", 
           RowBox[{"framelabel", "=", 
            RowBox[{"{", 
             RowBox[{"\"\<sp\>\"", ",", 
              RowBox[{"Subscript", "[", 
               RowBox[{"gu", ",", "Global`sp"}], "]"}]}], "}"}]}]}], ",", 
          "\n", "\t", 
          RowBox[{
           RowBox[{"xcoord", "=", 
            RowBox[{"Subscript", "[", 
             RowBox[{"tr", ",", "i"}], "]"}]}], ";", "\n", "\t", 
           RowBox[{"framelabel", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"tr", ",", "Global`i"}], "]"}], ",", 
              RowBox[{"Subscript", "[", 
               RowBox[{"gu", ",", "Global`i"}], "]"}]}], "}"}]}]}]}], "\n", 
         "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"logged", "\[Equal]", "False"}], ",", "\n", "\t", 
          StyleBox[
           RowBox[{"(*", " ", 
            StyleBox[
             RowBox[{"non", "-", "logged"}],
             FontVariations->{"Underline"->True}], " ", "*)"}],
           FontSize->16], "\n", "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"weightfunction", "===", "\"\<Components\>\""}], ",", 
            "\n", "\t\t", 
            RowBox[{"Return", "[", 
             RowBox[{"ListPlot", "[", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"Reverse", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Transpose", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"xcoord", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    SubscriptBox["\[ScriptCapitalN]", "gu"]}], "}"}]}], "]"}],
                     ",", "#"}], "}"}], "/.", "traits"}], "]"}], "&"}], "/@", 
                 
                 RowBox[{"Accumulate", "[", 
                  RowBox[{"Transpose", "[", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"gu", ",", "i"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    SubscriptBox["\[ScriptCapitalN]", "gu"]}], "}"}]}], "]"}],
                     "/.", "sol"}], "]"}], "]"}]}], "]"}], ",", "\n", 
               "\t\t\t", 
               RowBox[{"Filling", "\[Rule]", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"j", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"Axis", ",", 
                    RowBox[{"ModPart", "[", 
                    RowBox[{"plotstyle", ",", "j"}], "]"}]}], "}"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"gcomps", "[", "gu", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"comptype", "[", "#", "]"}], "===", 
                    "\"\<Extensive\>\""}], "&"}]}], "]"}], "]"}]}], "}"}]}], 
                 "]"}]}], ",", "\n", "\t\t\t", 
               RowBox[{"PlotStyle", "\[Rule]", "None"}], ",", "\n", "\t\t\t", 
               
               RowBox[{"Evaluate", "[", 
                RowBox[{"Sequence", "@@", "listplotopts"}], "]"}], ",", "\n", 
               "\t\t\t", 
               RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
               RowBox[{"AxesLabel", "\[Rule]", "framelabel"}]}], "\n", "\t\t",
               "]"}], "]"}], "\n", "\t", ",", "\n", "\t\t", 
            RowBox[{"Return", "[", 
             RowBox[{"ListPlot", "[", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"xcoord", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"xcoord", ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"gu", ",", "i"}], "]"}]}], "}"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    SubscriptBox["\[ScriptCapitalN]", "gu"]}], "}"}]}], "]"}],
                  "/.", "traits"}], "/.", "sol"}], ",", "\n", "\t\t\t\t", 
               RowBox[{"PlotStyle", "\[Rule]", "plotstyle"}], ",", "\n", 
               "\t\t\t\t", 
               RowBox[{"Evaluate", "[", 
                RowBox[{"Sequence", "@@", "listplotopts"}], "]"}], ",", "\n", 
               "\t\t\t\t", 
               RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
               RowBox[{"Joined", "\[Rule]", "True"}], ",", 
               RowBox[{"AxesLabel", "\[Rule]", "framelabel"}]}], "\n", 
              "\t\t\t", "]"}], "]"}]}], "\n", "\t\t", "]"}], 
          "\[IndentingNewLine]", ",", "\n", "\t\t", 
          StyleBox[
           RowBox[{"(*", " ", 
            StyleBox["logged",
             FontVariations->{"Underline"->True}], " ", "*)"}],
           FontSize->16], "\n", "\t\t", 
          RowBox[{
           RowBox[{"sol", "=", 
            RowBox[{"Select", "[", 
             RowBox[{"sol", ",", 
              RowBox[{
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                ">", "minpop"}], "&"}]}], "]"}]}], ";", "\n", "\t\t", 
           RowBox[{"pos", "=", 
            RowBox[{"sol", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}],
            ";", " ", 
           RowBox[{"(*", " ", "positions", " ", "*)"}], "\n", "\t\t", 
           RowBox[{"plotmin", "=", 
            RowBox[{"Min", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"gu", ",", "i"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "pos"}], "}"}]}], "]"}], "/.", "sol"}], 
             "]"}]}], ";", "\n", "\t\t", 
           RowBox[{"Return", "[", 
            RowBox[{"ListLogPlot", "[", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"xcoord", ",", "plotmin"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"xcoord", ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"gu", ",", "i"}], "]"}]}], "}"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "pos"}], "}"}]}], "]"}], "/.", 
                "traits"}], "/.", "sol"}], ",", "\n", "\t\t\t", 
              RowBox[{"PlotStyle", "\[Rule]", "plotstyle"}], ",", "\n", 
              "\t\t\t", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "listplotopts"}], "]"}], ",", "\n", 
              "\t\t\t", 
              RowBox[{"PlotRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"plotmin", ",", "All"}], "}"}]}], ",", 
              RowBox[{"Joined", "\[Rule]", "True"}], ",", 
              RowBox[{"AxesLabel", "\[Rule]", "framelabel"}]}], "\n", "\t\t", 
             "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], ";"}]}], "\n", 
      "\[IndentingNewLine]", "\n", "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.715769426958699*^9, 3.715769427541718*^9}, {
   3.715770080609786*^9, 3.7157701274252462`*^9}, {3.715770182223977*^9, 
   3.715770206939686*^9}, {3.715770251665348*^9, 3.7157703240930643`*^9}, {
   3.715775270821048*^9, 3.715775290004567*^9}, 3.715775341838038*^9, {
   3.715777805781301*^9, 3.715777841780686*^9}, {3.715777977653454*^9, 
   3.715778011056696*^9}, {3.715778070083912*^9, 3.7157780743767033`*^9}, {
   3.715778127595952*^9, 3.715778162795555*^9}, {3.7157783827489147`*^9, 
   3.7157784396759243`*^9}, {3.7157794695034857`*^9, 3.715779536184903*^9}, {
   3.7157795727624273`*^9, 3.71577961854753*^9}, {3.715779977701977*^9, 
   3.7157800098795347`*^9}, {3.715780054987348*^9, 3.715780180009596*^9}, {
   3.715780246872175*^9, 3.715780248053912*^9}, {3.715780462690599*^9, 
   3.715780498137936*^9}, {3.715780815568123*^9, 3.7157809282734756`*^9}, {
   3.715780984521051*^9, 3.715781009001033*^9}, {3.7157810757736464`*^9, 
   3.715781105836532*^9}, 3.7220261936335173`*^9, {3.722034092230411*^9, 
   3.722034102187653*^9}, {3.723380976086491*^9, 3.7233809761332693`*^9}, {
   3.72596465642509*^9, 3.725964675167366*^9}, {3.725964706040327*^9, 
   3.725964763699407*^9}, {3.7259647983446693`*^9, 3.725964873106234*^9}, {
   3.725964965714869*^9, 3.7259649832895*^9}, {3.7259650224950533`*^9, 
   3.725965073910859*^9}, 3.7259651123579206`*^9, {3.725965207082921*^9, 
   3.725965208962843*^9}, {3.7259652509109364`*^9, 3.7259652793190813`*^9}, {
   3.7259653686527863`*^9, 3.7259654805032682`*^9}, {3.725965514011941*^9, 
   3.725965518479402*^9}, {3.725965568421995*^9, 3.725965584646551*^9}, {
   3.7259665613168383`*^9, 3.725966619790523*^9}, {3.725966791521052*^9, 
   3.725966853799143*^9}, {3.725967126489387*^9, 3.7259671281832647`*^9}, {
   3.725970978465217*^9, 3.725970979440015*^9}, {3.725977927793509*^9, 
   3.72597802138655*^9}, {3.725978084189623*^9, 3.72597809125881*^9}, 
   3.729710408857444*^9, {3.755276381629537*^9, 3.755276394078066*^9}, {
   3.759951425315899*^9, 3.759951431724511*^9}, {3.7605506012187223`*^9, 
   3.7605506029403954`*^9}, {3.760551315602028*^9, 3.760551321608756*^9}, 
   3.760551464706518*^9, {3.760694244841343*^9, 3.760694300680106*^9}, {
   3.7606943730983677`*^9, 3.7606944242613297`*^9}, {3.767859027213418*^9, 
   3.767859095384914*^9}, {3.768830729239271*^9, 3.768830773615423*^9}, {
   3.768840158353208*^9, 3.76884020558152*^9}, {3.768840235679071*^9, 
   3.768840244688881*^9}, {3.768840307043232*^9, 3.7688403109184628`*^9}, {
   3.7688403502262583`*^9, 3.768840366700293*^9}, {3.7688404355224123`*^9, 
   3.7688404560010843`*^9}, {3.768846474164173*^9, 3.768846606205183*^9}, {
   3.768846646724413*^9, 3.768846661778761*^9}, 3.769760705584621*^9, {
   3.7701114024444637`*^9, 3.770111410435968*^9}, 3.770111510805306*^9, {
   3.770111563486166*^9, 3.7701115981420097`*^9}, 3.77011275673602*^9, {
   3.770112904047427*^9, 3.770112974680715*^9}, {3.770371687506031*^9, 
   3.7703716880324783`*^9}, {3.7703717286498528`*^9, 
   3.7703717336964808`*^9}, {3.770372116923614*^9, 3.770372118874321*^9}, {
   3.770372447150111*^9, 3.770372453077821*^9}, 3.770372522875804*^9, {
   3.7703725966796217`*^9, 3.770372596758493*^9}, {3.77037265760804*^9, 
   3.770372690567745*^9}, 3.770438265098425*^9, {3.7707214409427567`*^9, 
   3.770721441818602*^9}, {3.780401721833844*^9, 3.7804017606226053`*^9}, {
   3.780401844763343*^9, 3.780401847186552*^9}, {3.7804042527164593`*^9, 
   3.7804042842052402`*^9}, {3.7804044291893997`*^9, 3.7804044541629143`*^9}, 
   3.780404498838567*^9, {3.780462830507209*^9, 3.780462846774213*^9}, {
   3.780462931164201*^9, 3.78046300655836*^9}, {3.780463356270563*^9, 
   3.780463362749037*^9}, {3.780463422742591*^9, 3.7804634541510057`*^9}, {
   3.780464177231756*^9, 3.780464198785502*^9}, {3.7804651209153547`*^9, 
   3.780465133732656*^9}, 3.780465164771614*^9, {3.7804652060656843`*^9, 
   3.7804653023786*^9}, {3.780465354766501*^9, 3.780465367719515*^9}, {
   3.780466089042663*^9, 3.7804660896113653`*^9}, {3.780466218506863*^9, 
   3.780466235597827*^9}, {3.7804670396816263`*^9, 3.7804670696531067`*^9}, {
   3.780467224068486*^9, 3.7804672338309717`*^9}, {3.7804673379804487`*^9, 
   3.780467363310174*^9}, {3.780467469454129*^9, 3.7804675039316483`*^9}, {
   3.780468241934177*^9, 3.7804682553041973`*^9}, {3.780468537012547*^9, 
   3.780468630730053*^9}, {3.780468673613463*^9, 3.780468689462719*^9}, {
   3.7804704136298103`*^9, 3.7804705007556267`*^9}, {3.780470573979088*^9, 
   3.780470574459877*^9}, {3.780470795073432*^9, 3.780470812144589*^9}, {
   3.7804748988641644`*^9, 3.780474939968454*^9}, {3.78047499456951*^9, 
   3.780475059606613*^9}, {3.780475097260054*^9, 3.780475099511004*^9}, {
   3.780475129819207*^9, 3.78047518151616*^9}, {3.780475226716614*^9, 
   3.780475251902923*^9}, {3.7804753192628*^9, 3.78047537481643*^9}, {
   3.7804754048404408`*^9, 3.7804754553200197`*^9}, {3.7804755171107197`*^9, 
   3.780475525982204*^9}, {3.780475682854207*^9, 3.7804756963246527`*^9}, {
   3.7804757341100883`*^9, 3.780475808121356*^9}, {3.780476041906966*^9, 
   3.7804762086288567`*^9}, {3.780476322325247*^9, 3.78047632509118*^9}, {
   3.78047636932078*^9, 3.780476510193624*^9}, {3.780476656696377*^9, 
   3.780476677964814*^9}, {3.7804767545348186`*^9, 3.780476856881587*^9}, {
   3.78047691097157*^9, 3.780476911493079*^9}, {3.780476948690927*^9, 
   3.780476948987131*^9}, {3.780476982938951*^9, 3.7804769906882687`*^9}, {
   3.780477024886188*^9, 3.780477038516283*^9}, {3.780477671743803*^9, 
   3.780477725809648*^9}, {3.78047784995427*^9, 3.7804779545149384`*^9}, 
   3.780478248270524*^9, {3.7804782974639587`*^9, 3.7804783001278973`*^9}, {
   3.780478331356947*^9, 3.7804783885909967`*^9}, {3.780478661488751*^9, 
   3.780478718914671*^9}, {3.780478749496434*^9, 3.780478825703329*^9}, {
   3.780478859551478*^9, 3.780478860670177*^9}, {3.780478895643014*^9, 
   3.7804789322917757`*^9}, {3.780479316437909*^9, 3.780479324448572*^9}, {
   3.7804793545147*^9, 3.780479373308797*^9}, {3.7804794074736643`*^9, 
   3.7804794793247337`*^9}, {3.780479698858309*^9, 3.780479747487709*^9}, {
   3.780480553447809*^9, 3.780480554773395*^9}, {3.7804805929737997`*^9, 
   3.78048061472723*^9}, {3.780480678365493*^9, 3.780480867151156*^9}, 
   3.780480911760195*^9, {3.7804810727890387`*^9, 3.780481101874699*^9}, {
   3.7804811644346237`*^9, 3.780481171148652*^9}, 3.7804874669999533`*^9, 
   3.7804877176956*^9, {3.780487797966898*^9, 3.780487811173911*^9}, {
   3.780488081123495*^9, 3.780488211638958*^9}, {3.780488304862701*^9, 
   3.7804883424615927`*^9}, {3.780488404874978*^9, 3.780488429631598*^9}, {
   3.780488519270711*^9, 3.780488552514265*^9}, {3.780488636913397*^9, 
   3.7804886377697477`*^9}, {3.7804886865751667`*^9, 
   3.7804886868918867`*^9}, {3.780488830647354*^9, 3.7804888644167023`*^9}, {
   3.780489064425165*^9, 3.780489091738145*^9}, {3.7804891237208652`*^9, 
   3.7804891424158163`*^9}, {3.7804891752881804`*^9, 3.780489182335023*^9}, {
   3.780508314962058*^9, 3.780508317117782*^9}, 3.780509471026188*^9, {
   3.780509736646287*^9, 3.7805097612040033`*^9}, {3.780509836358585*^9, 
   3.780509870924028*^9}, {3.780511333712098*^9, 3.780511404172577*^9}, {
   3.780549207274269*^9, 3.780549224921885*^9}, {3.78055305343279*^9, 
   3.780553068002512*^9}, {3.780553333571344*^9, 3.780553368618409*^9}, {
   3.7805556770749607`*^9, 3.780555703537314*^9}, {3.780558518142054*^9, 
   3.780558557792596*^9}, 3.780593581146624*^9, {3.780595758646874*^9, 
   3.7805957625684834`*^9}, {3.7805957996327467`*^9, 3.780595927967167*^9}, {
   3.780596046954277*^9, 3.780596123165741*^9}, {3.780628524526883*^9, 
   3.780628530165518*^9}, {3.780629924900172*^9, 3.780629954902075*^9}, {
   3.7806307120074472`*^9, 3.780630717142017*^9}, 3.7806321484520493`*^9, {
   3.780632328170237*^9, 3.780632358324184*^9}, {3.7806326230118856`*^9, 
   3.780632633438497*^9}, {3.780632765796194*^9, 3.780632802874831*^9}, {
   3.780632895986137*^9, 3.7806329273169003`*^9}, {3.780632977158711*^9, 
   3.780632977348095*^9}, {3.780633029859282*^9, 3.780633032408884*^9}, {
   3.780633129474021*^9, 3.780633132437435*^9}, {3.7806331741207237`*^9, 
   3.780633175051366*^9}, {3.780633228398571*^9, 3.780633272266873*^9}, {
   3.7806468632271843`*^9, 3.780646863721815*^9}, {3.780647024069992*^9, 
   3.7806470699203577`*^9}, {3.780647377291201*^9, 3.780647414360001*^9}, {
   3.780648200761633*^9, 3.780648244122888*^9}, {3.780648292571329*^9, 
   3.780648359541012*^9}, {3.780648442319922*^9, 3.780648444882419*^9}, {
   3.780648952057055*^9, 3.780649009788954*^9}, {3.780649050322994*^9, 
   3.7806490788606567`*^9}, {3.780649415770409*^9, 3.7806494184931107`*^9}, {
   3.7806494768691797`*^9, 3.780649501766657*^9}, {3.780650155948337*^9, 
   3.780650201462529*^9}, {3.78065934122084*^9, 3.780659345658547*^9}, 
   3.7806594970088167`*^9, {3.780659779410668*^9, 3.7806598083379383`*^9}, {
   3.780659840197113*^9, 3.780659854324665*^9}, {3.7806602789056807`*^9, 
   3.780660280698266*^9}, 3.7806611147528133`*^9, {3.780720728143771*^9, 
   3.780720741748152*^9}, {3.780721686974412*^9, 3.7807216898365498`*^9}, {
   3.780721986410574*^9, 3.7807219944229717`*^9}, {3.780724286370837*^9, 
   3.780724291478874*^9}, {3.780724403986125*^9, 3.780724427185235*^9}, {
   3.7807244916169233`*^9, 3.7807244983520527`*^9}, {3.78072456476686*^9, 
   3.7807245668616734`*^9}, {3.780724634643094*^9, 3.780724675733836*^9}, {
   3.780724707331937*^9, 3.780724728671097*^9}, 3.780724762500306*^9, 
   3.780724811300023*^9, {3.780724847915319*^9, 3.780724852092677*^9}, {
   3.780724902877306*^9, 3.7807249732487173`*^9}, {3.780725010546332*^9, 
   3.780725018953053*^9}, {3.780725055025199*^9, 3.780725202538986*^9}, {
   3.7807256369211693`*^9, 3.780725640008566*^9}, {3.780725680207835*^9, 
   3.780725684745132*^9}, {3.780727665001223*^9, 3.7807276938584337`*^9}, {
   3.7807380710037107`*^9, 3.780738075086602*^9}, {3.780738284915723*^9, 
   3.780738285031826*^9}, {3.782981763111768*^9, 3.7829817733002243`*^9}, {
   3.782982207386545*^9, 3.782982212302478*^9}, {3.782988723980522*^9, 
   3.782988725598881*^9}, 3.784745231092862*^9, {3.7847959135970907`*^9, 
   3.784795914443*^9}, {3.789155942141973*^9, 3.789155946471867*^9}, 
   3.794137240798925*^9, {3.8075546694191427`*^9, 3.807554671073196*^9}, {
   3.807558946884636*^9, 3.807558987621228*^9}, {3.80755903201401*^9, 
   3.807559181368011*^9}, {3.807559214330389*^9, 3.807559357664118*^9}, {
   3.8075593992737627`*^9, 3.807559399786644*^9}, {3.8075595018510723`*^9, 
   3.807559502200842*^9}, {3.8119481656128387`*^9, 3.811948173172936*^9}, {
   3.811950778843636*^9, 3.811950843745988*^9}, {3.811950996530765*^9, 
   3.811951005721218*^9}, {3.811951063947802*^9, 3.811951067849682*^9}, {
   3.811951171901082*^9, 3.811951241044024*^9}, {3.811951743603196*^9, 
   3.811951750673306*^9}, {3.818013919701871*^9, 3.818014012659088*^9}, {
   3.82906344784872*^9, 3.82906344790744*^9}, 3.829080857913671*^9, {
   3.829082089997162*^9, 3.829082130500495*^9}, {3.829082403887807*^9, 
   3.8290824120711803`*^9}, {3.829082644537912*^9, 3.829082676300036*^9}, {
   3.829082828509595*^9, 3.829082918855213*^9}, {3.829083294650238*^9, 
   3.8290833310201693`*^9}, {3.82908341985259*^9, 3.829083430932782*^9}, {
   3.829085861080517*^9, 3.8290858772729273`*^9}, {3.8290859246754436`*^9, 
   3.8290859477296963`*^9}, {3.829085986331624*^9, 3.8290862663010406`*^9}, {
   3.829086298367618*^9, 3.829086298677662*^9}, {3.829086600409227*^9, 
   3.829086613248004*^9}, {3.829086702538703*^9, 3.8290867133050833`*^9}, {
   3.8290867584583673`*^9, 3.8290867642977457`*^9}, {3.829086852276416*^9, 
   3.829086895427082*^9}, {3.829086934542329*^9, 3.829086958804324*^9}, {
   3.829086995646101*^9, 3.829087000332796*^9}, 3.829087084821333*^9, {
   3.82908743160647*^9, 3.829087457351542*^9}, {3.829087492255739*^9, 
   3.8290875518988123`*^9}, {3.8290875844177923`*^9, 3.82908760388969*^9}, {
   3.829087684089491*^9, 3.829087690891623*^9}, {3.829087941557249*^9, 
   3.829087943508451*^9}, {3.829088514798765*^9, 3.829088587338602*^9}, {
   3.829088680293002*^9, 3.8290887289483337`*^9}, {3.8290888668301573`*^9, 
   3.829088867499514*^9}, {3.829088943902644*^9, 3.829088947134242*^9}, {
   3.8290890006228113`*^9, 3.8290890008422203`*^9}, {3.8290891696414967`*^9, 
   3.8290891699125977`*^9}, 3.8291275633105373`*^9, {3.8291279642555656`*^9, 
   3.829128025919107*^9}, 3.82912837266778*^9, {3.829128413848336*^9, 
   3.829128421315526*^9}, {3.8291289988006277`*^9, 3.829129050737252*^9}, {
   3.829129566626916*^9, 3.829129567060913*^9}, {3.829129617887128*^9, 
   3.8291296304279346`*^9}, {3.829131487360944*^9, 3.829131511377*^9}, {
   3.82913158279257*^9, 3.829131656947234*^9}, {3.8291324150828667`*^9, 
   3.829132449921471*^9}, {3.829132485535969*^9, 3.829132489627893*^9}, {
   3.829132539632216*^9, 3.8291325578824453`*^9}, {3.829148022376779*^9, 
   3.829148063559719*^9}, 3.829149808345262*^9, {3.829149955840234*^9, 
   3.829150031818602*^9}, {3.829150165462597*^9, 3.8291502175367823`*^9}, {
   3.829150347148719*^9, 3.829150364362894*^9}, {3.829150394694643*^9, 
   3.829150424082292*^9}, {3.8291508474970913`*^9, 3.829150858529217*^9}, {
   3.829150979947693*^9, 3.829150984807294*^9}, {3.829151042875997*^9, 
   3.829151054361679*^9}, {3.829151171781238*^9, 3.829151184148328*^9}, {
   3.829152670163671*^9, 3.829152716485379*^9}, {3.829152757493701*^9, 
   3.829152829605666*^9}, {3.829152984286066*^9, 3.829152999737144*^9}, {
   3.829153043338477*^9, 3.829153047622918*^9}, {3.829153142368207*^9, 
   3.829153144807949*^9}, {3.8291531985115747`*^9, 3.829153212544826*^9}, {
   3.8291534364950943`*^9, 3.8291534815837517`*^9}, {3.82915409367805*^9, 
   3.829154137596034*^9}, {3.829154184816893*^9, 3.8291541888545837`*^9}, {
   3.829154219663135*^9, 3.829154248400778*^9}, {3.829154464476038*^9, 
   3.8291544660584593`*^9}, {3.8291548322471123`*^9, 3.829154947671226*^9}, {
   3.829155046170765*^9, 3.829155051096994*^9}, {3.8291551185166616`*^9, 
   3.8291551271693287`*^9}, {3.829155166291607*^9, 3.829155166619865*^9}, {
   3.829155215980235*^9, 3.8291552506749573`*^9}, {3.829155317232276*^9, 
   3.829155327753757*^9}, {3.8291554117512074`*^9, 3.829155455974142*^9}, {
   3.8291555079994783`*^9, 3.829155514038435*^9}, {3.8291555479515753`*^9, 
   3.8291555530627413`*^9}, {3.8291556401133547`*^9, 3.82915571661642*^9}, {
   3.829155761739087*^9, 3.829155785863943*^9}, {3.829155817100646*^9, 
   3.8291558174919977`*^9}, {3.829165893619122*^9, 3.829165931517964*^9}, 
   3.829165973801128*^9, {3.8291660183578167`*^9, 3.829166037752667*^9}, {
   3.8291660703302183`*^9, 3.829166078884972*^9}, {3.829166202781179*^9, 
   3.829166228643519*^9}, {3.829166266420311*^9, 3.82916627155729*^9}, {
   3.829166319490445*^9, 3.829166324219822*^9}, 3.829166378582*^9, {
   3.829166477711094*^9, 3.829166537545185*^9}, 3.829167373608335*^9, {
   3.829167468424362*^9, 3.829167501287938*^9}, {3.829167546059309*^9, 
   3.829167651110867*^9}, {3.829167865756323*^9, 3.829167919980393*^9}, {
   3.8291681154963827`*^9, 3.8291681463981333`*^9}, {3.829168189342927*^9, 
   3.829168448187245*^9}, {3.829168623109235*^9, 3.8291686419487667`*^9}, {
   3.829168690727932*^9, 3.829168695539898*^9}, {3.829172675218058*^9, 
   3.829172697172337*^9}, 3.8291727975794983`*^9, {3.829172846372738*^9, 
   3.829172881979268*^9}, {3.829173058711651*^9, 3.829173156397191*^9}, {
   3.829173430391728*^9, 3.8291734361531963`*^9}, {3.8291734882800627`*^9, 
   3.829173508454825*^9}, {3.829173639238433*^9, 3.82917364668511*^9}, {
   3.829173728724427*^9, 3.8291737564839067`*^9}, {3.8294065678512983`*^9, 
   3.82940657204854*^9}, {3.829406618291726*^9, 3.829406620876438*^9}, {
   3.829406939567031*^9, 3.829406939621089*^9}, {3.830098518603849*^9, 
   3.83009857784512*^9}, {3.83077701127244*^9, 3.830777032152042*^9}, {
   3.830779175508048*^9, 3.830779175850875*^9}, {3.830779225795784*^9, 
   3.8307792259793463`*^9}},ExpressionUUID->"696d93c6-1069-4d10-8e62-\
acc7a45e5973"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.7703716898282633`*^9, 
  3.770371690476397*^9}},ExpressionUUID->"351e926a-c9ab-4543-8cfd-\
c819ba317130"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PlotGuild", "]"}], "=", 
   RowBox[{"{", "\n", 
    RowBox[{
     RowBox[{"PlotType", "\[Rule]", "\"\<ArrayPlot\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "Automatic"}], ",", "\n", 
     RowBox[{"ListPlotOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", 
     RowBox[{"ListPlot3DOpts", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"BoxRatios", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1", ",", "1"}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "All"}], "}"}]}], ",", 
        RowBox[{"ColorFunction", "\[Rule]", "\"\<ThermometerColors\>\""}], 
        ",", 
        RowBox[{"Mesh", "->", "None"}]}], "}"}]}], ",", "\n", 
     RowBox[{"ArrayPlotOpts", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AspectRatio", "\[Rule]", 
         RowBox[{"1", "/", "2"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
        RowBox[{"ColorFunction", "\[Rule]", "\"\<ThermometerColors\>\""}], 
        ",", 
        RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"All", ",", "All", ",", "False", ",", "False"}], "}"}]}], 
        ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "}"}]}], ",", "\n", 
     RowBox[{"ListLinePlot3DOpts", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"BoxRatios", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1", ",", "1"}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"All", ",", "All", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "All"}], "}"}]}], "}"}]}]}], "}"}]}], ",", "\n", 
     RowBox[{"Guild", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Trait", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Species", "\[Rule]", "None"}], ",", "\n", 
     RowBox[{"WeightFunction", "\[Rule]", "\"\<Total\>\""}], ",", "\n", 
     RowBox[{"Logged", "\[Rule]", "False"}], ",", 
     RowBox[{"MinPop", "\[Rule]", "0"}], ",", 
     RowBox[{"Time", "\[Rule]", "t"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.770371693020719*^9, 3.770371708916556*^9}, {
   3.7804707634886923`*^9, 3.780470787158544*^9}, {3.780476952211595*^9, 
   3.780476952623582*^9}, 3.780478811300102*^9, {3.78047975967625*^9, 
   3.7804797623766813`*^9}, {3.7805533756654167`*^9, 3.780553376771083*^9}, {
   3.780596374849856*^9, 3.780596385998783*^9}, {3.780659474712709*^9, 
   3.780659486099166*^9}, {3.807559365513205*^9, 3.807559374437635*^9}, {
   3.80755949187125*^9, 3.807559494598216*^9}, 3.829063447909028*^9, {
   3.829085817926175*^9, 3.829085821102457*^9}, {3.829088405471435*^9, 
   3.82908847125517*^9}, {3.829088789803875*^9, 3.8290888266429653`*^9}, {
   3.829129590235606*^9, 3.829129605779829*^9}, {3.829147019135201*^9, 
   3.829147019532255*^9}, {3.8291502338396597`*^9, 3.82915023686325*^9}, {
   3.8291510047520723`*^9, 3.8291510060948143`*^9}, 3.829152862387411*^9, {
   3.829152893048794*^9, 3.8291528970757217`*^9}, {3.829153154300119*^9, 
   3.829153158852108*^9}, {3.82915432730899*^9, 3.829154373668818*^9}, {
   3.829154434606318*^9, 3.829154437893798*^9}, 3.829155070478834*^9, {
   3.829155284064142*^9, 3.8291552884721117`*^9}, {3.829155364770015*^9, 
   3.829155376880843*^9}, {3.829165712489365*^9, 3.82916571730247*^9}, 
   3.829173009552507*^9, 3.8294066436070213`*^9, {3.830780398078744*^9, 
   3.8307803983283997`*^9}, {3.830780603123279*^9, 
   3.830780606039935*^9}},ExpressionUUID->"36c01fb9-f961-4750-9da9-\
9b63c47877ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",ExpressionUUID->"18601ec1-cd47-4f05-88aa-bb31aae87456"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"split", " ", "combined", " ", "traitsandpops"}], " ", "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"PlotGuild", "[", 
     RowBox[{
      RowBox[{"sol_", "?", "AttributesAndVariablesQ"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
    RowBox[{"PlotGuild", "[", 
     RowBox[{
      RowBox[{"ExtractTraits", "[", "sol", "]"}], ",", 
      RowBox[{"ExtractVariables", "[", "sol", "]"}], ",", "opts"}], "]"}]}], 
   ";"}]}]], "Code",
 CellChangeTimes->{{3.7000844476384487`*^9, 3.700084450540546*^9}, {
   3.709332794124982*^9, 3.7093327966147747`*^9}, 3.7093328393575087`*^9, {
   3.712738534985525*^9, 3.712738534989333*^9}, {3.767023257211965*^9, 
   3.767023273123308*^9}, {3.7701112606951437`*^9, 3.7701112725683947`*^9}, 
   3.798128800052083*^9, 3.8073693427859707`*^9, {3.829063447910452*^9, 
   3.829063447911792*^9}},ExpressionUUID->"76f8b617-b209-422e-8b5e-\
05e64e4c1692"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Messages", "Subsubsection",
 CellChangeTimes->{{3.8291317110007267`*^9, 
  3.8291317120157537`*^9}},ExpressionUUID->"52a619b8-c097-4d2a-860a-\
b413e45e9e38"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotGuild", "::", "badmtd"}], "=", 
   "\"\<The Method option should be a built-in method name \
(\\\"ArrayPlot\\\", \\\"Plot3D\\\", or \\\"ListLinePlot3D\\\" for temporal \
dynamics).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.829131714401629*^9, 
  3.829131784513291*^9}},ExpressionUUID->"66e0702c-10a8-4216-8be8-\
356d58553b2d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["ImpactVector", "Subsection",
 CellChangeTimes->{{3.809992595849656*^9, 
  3.809992599408729*^9}},ExpressionUUID->"eb89df43-f51e-4006-85e6-\
41332fe2040b"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.809992611225877*^9, 
  3.8099926117624483`*^9}},ExpressionUUID->"0e5b4bca-fd4b-46c9-ae19-\
8c6deb433eae"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ImpactVector", "::", "usage"}], "=", "\n", 
   "\"\<ImpactVector[{\!\(\*StyleBox[SubscriptBox[\"var\", \"1\"], \"TI\"]\), \
\!\(\*StyleBox[SubscriptBox[\"var\", \"2\"], \"TI\"]\)}, \
\!\(\*StyleBox[\"sp\", \"TI\"]\)] returns the impact of \
\!\(\*StyleBox[\"sp\", \"TI\"]\) on {\!\(\*StyleBox[SubscriptBox[\"var\", \"1\
\"], \"TI\"]\), \!\(\*StyleBox[SubscriptBox[\"var\", \"2\"], \
\"TI\"]\)}.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.809992687750095*^9, 3.809992731449094*^9}, {
   3.8099930502162113`*^9, 3.809993069622938*^9}, {3.8099931231636667`*^9, 
   3.809993124939913*^9}, {3.8101242810986347`*^9, 3.8101242823314943`*^9}, 
   3.810124438360338*^9},ExpressionUUID->"8fa60780-8b12-412e-a94d-\
c77806c6d4a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.809992614057988*^9, 
  3.809992615366664*^9}},ExpressionUUID->"8567e61a-62ba-441d-aef7-\
ccfcb2bf18d8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ImpactVector", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"var1_", ",", "var2_"}], "}"}], ",", "sp_"}], "]"}], ":=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"eqn", "[", "var1", "]"}], ",", 
        RowBox[{"eqn", "[", "var2", "]"}]}], "}"}], "/.", 
      "RemoveVariablets"}], ",", "sp"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.809992635011053*^9, 3.8099926505546417`*^9}, 
   3.8099930477317963`*^9},ExpressionUUID->"e8dbaf9d-eeb4-49b3-9356-\
2bfcf683543f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["PlotImpactVector", "Subsection",
 CellChangeTimes->{{3.809993082169145*^9, 
  3.80999308468036*^9}},ExpressionUUID->"d72e0c62-1fc7-420c-a6d4-\
6d57a6ac8eee"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.809993086758827*^9, 
  3.809993087365505*^9}},ExpressionUUID->"c4dd318e-398c-4f1c-9fd3-\
dff365efa740"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotImpactVector", "::", "usage"}], "=", "\n", 
   "\"\<PlotImpactVector[{\!\(\*StyleBox[SubscriptBox[\"var\", \"1\"], \
\"TI\"]\), \!\(\*StyleBox[SubscriptBox[\"var\", \"2\"], \"TI\"]\)}, \
\!\(\*StyleBox[\"sp\", \"TI\"]\), \!\(\*StyleBox[\"point\", \"TI\"]\)] plots \
the impact vector of \!\(\*StyleBox[\"sp\", \"TI\"]\) on \
{\!\(\*StyleBox[SubscriptBox[\"var\", \"1\"], \"TI\"]\), \
\!\(\*StyleBox[SubscriptBox[\"var\", \"2\"], \"TI\"]\)} at \
\!\(\*StyleBox[\"point\", \"TI\"]\).\n\
PlotImpactVector[{\!\(\*StyleBox[SubscriptBox[\"var\", \"1\"], \"TI\"]\), \
\!\(\*StyleBox[SubscriptBox[\"var\", \"2\"], \"TI\"]\)}, \
{\!\(\*StyleBox[SubscriptBox[StyleBox[\"sp\", \"TI\"], \"1\"], \"TI\"]\), \
\!\(\*StyleBox[SubscriptBox[\"sp\", \"2\"], \"TI\"]\), \[Ellipsis]}, \
\!\(\*StyleBox[\"point\", \"TI\"]\)] plots impact vectors of multiple \
species.\nPlotImpactVector[{\!\(\*StyleBox[SubscriptBox[\"var\", \"1\"], \"TI\
\"]\), \!\(\*StyleBox[SubscriptBox[\"var\", \"2\"], \"TI\"]\)}, \
\!\(\*StyleBox[\"sp\", \"TI\"]\), {\!\(\*StyleBox[SubscriptBox[\"point\", \"1\
\"], \"TI\"]\), \!\(\*StyleBox[SubscriptBox[\"point\", \"2\"], \"TI\"]\), \
\[Ellipsis]}] plots at multiple points.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.809993130496623*^9, 3.809993135497098*^9}, {
  3.809993342851377*^9, 3.809993355223031*^9}, {3.810124288082756*^9, 
  3.810124310970417*^9}, {3.810124441618517*^9, 3.8101244947266397`*^9}, {
  3.810125086537424*^9, 3.81012510310109*^9}, {3.8101260274654827`*^9, 
  3.81012604473096*^9}, {3.81012631814393*^9, 
  3.810126343409192*^9}},ExpressionUUID->"8d8527ec-603d-4fe7-865d-\
d9c77debbc3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.809993094280114*^9, 
  3.809993095522587*^9}},ExpressionUUID->"73820d98-01cf-4a82-bcfd-\
323d7b93fdc1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"make", " ", "listable", " ", "across", " ", "points"}], " ", 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"PlotImpactVector", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"var1_", ",", "var2_"}], "}"}], ",", "sp_", ",", 
      RowBox[{"points_", "?", "RuleListListQ"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"PlotImpactVector", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"var1", ",", "var2"}], "}"}], ",", "sp", ",", "#", ",", 
         "opts"}], "]"}], "&"}], "/@", "points"}], ")"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.715424827153945*^9, 3.715424831022787*^9}, {
   3.715425215204941*^9, 3.715425235563982*^9}, {3.759928071960331*^9, 
   3.759928075487185*^9}, 3.7981281327414913`*^9, {3.800465667387295*^9, 
   3.8004656757467003`*^9}, 3.8073693384496326`*^9, {3.807369650795566*^9, 
   3.807369651662064*^9}, {3.80738083923206*^9, 3.807380839709502*^9}, {
   3.8099936283639917`*^9, 3.809993633289967*^9}, {3.809993671964321*^9, 
   3.809993698802169*^9}, {3.80999375298594*^9, 3.809993756106248*^9}, {
   3.809994284077332*^9, 3.809994321387636*^9}, {3.809994590138376*^9, 
   3.809994597458942*^9}},ExpressionUUID->"b8217098-5bb9-405e-8654-\
e4dade755374"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"make", " ", "listable", " ", "across", " ", "sps"}], " ", "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"PlotImpactVector", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"var1_", ",", "var2_"}], "}"}], ",", "sps_List", ",", 
      RowBox[{"point_", "?", "RuleListQ"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"plotstyles", ",", "nsp"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"plotstyles", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"PlotStyle", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "PlotImpactVector", "]"}]}], "}"}], 
           "]"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"nsp", "=", 
        RowBox[{"Length", "[", "sps", "]"}]}], ";", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"plotstyles", "===", "Automatic"}], ",", 
         RowBox[{"plotstyles", "=", 
          RowBox[{"Table", "[", 
           RowBox[{"Automatic", ",", 
            RowBox[{"{", "nsp", "}"}]}], "]"}]}]}], "]"}], ";", "\n", "\t", 
       RowBox[{"Table", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"PlotImpactVector", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"var1", ",", "var2"}], "}"}], ",", 
           RowBox[{
           "sps", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",",
            "point", ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"ModPart", "[", 
             RowBox[{"plotstyles", ",", "i"}], "]"}]}], ",", "opts"}], "]"}], 
         "\n", "\t", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "nsp"}], "}"}]}], "]"}]}]}], "\n", "]"}]}], 
   ";"}]}]], "Code",
 CellChangeTimes->{{3.715424827153945*^9, 3.715424831022787*^9}, {
   3.715425215204941*^9, 3.715425235563982*^9}, {3.759928071960331*^9, 
   3.759928075487185*^9}, 3.7981281327414913`*^9, {3.800465667387295*^9, 
   3.8004656757467003`*^9}, 3.8073693384496326`*^9, {3.807369650795566*^9, 
   3.807369651662064*^9}, {3.80738083923206*^9, 3.807380839709502*^9}, {
   3.8099936283639917`*^9, 3.809993633289967*^9}, {3.809993671964321*^9, 
   3.809993698802169*^9}, {3.80999375298594*^9, 3.809993756106248*^9}, {
   3.809994284077332*^9, 3.8099942842539043`*^9}, {3.809994622344473*^9, 
   3.809994625682325*^9}, {3.81011925892047*^9, 3.810119267032846*^9}, {
   3.810119312375655*^9, 3.810119316004373*^9}, {3.81011978322692*^9, 
   3.810119787729348*^9}, {3.810119819759919*^9, 3.810119841684329*^9}, {
   3.810119882699979*^9, 3.810119940546623*^9}, {3.8101201591591167`*^9, 
   3.810120169268901*^9}, {3.810120211652989*^9, 3.8101202149996653`*^9}, {
   3.8101218637203093`*^9, 3.810121880679055*^9}, {3.810122406625461*^9, 
   3.810122408269517*^9}},ExpressionUUID->"5dabb7dc-a8de-438e-8317-\
219c7984e3ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotImpactVector", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"var1_", ",", "var2_"}], "}"}], ",", "sp_", ",", 
     RowBox[{"point_", "?", "RuleListQ"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"scale", ",", "plotstyle"}], "}"}], ",", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", 
     RowBox[{
      RowBox[{"scale", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Scale", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "PlotImpactVector", "]"}]}], "}"}], 
          "]"}]}], "]"}]}], ";", "\n", 
      RowBox[{"plotstyle", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"PlotStyle", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "PlotImpactVector", "]"}]}], "}"}], 
          "]"}]}], "]"}]}], ";", "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"plotstyle", "===", "Automatic"}], ",", 
        RowBox[{"plotstyle", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"color", "[", "sp", "]"}], ",", 
           RowBox[{"linestyle", "[", "sp", "]"}]}], "}"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\n", 
      RowBox[{"Graphics", "[", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "plotstyle", "}"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"Arrow", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"var1", ",", "var2"}], "}"}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"var1", ",", "var2"}], "}"}], "+", 
               RowBox[{"scale", "*", 
                RowBox[{"Normalize", "@", 
                 RowBox[{"ImpactVector", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"var1", ",", "var2"}], "}"}], ",", "sp"}], 
                  "]"}]}]}]}]}], "}"}], "/.", "point"}], "]"}], "}"}]}], 
        "]"}], "]"}]}]}], "\n", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.8099931503379393`*^9, 3.809993160631977*^9}, {
   3.8099932078864527`*^9, 3.809993275368926*^9}, {3.80999332367279*^9, 
   3.809993363639398*^9}, 3.809994630660177*^9, {3.810031683106389*^9, 
   3.810031692034048*^9}, {3.810064700586131*^9, 3.810064703970943*^9}, {
   3.810064737187336*^9, 3.8100647424648447`*^9}, {3.81011708032815*^9, 
   3.810117124404275*^9}, {3.810117477361351*^9, 3.810117487351117*^9}, 
   3.81011765666905*^9, {3.810117982380704*^9, 3.8101179855013943`*^9}, 
   3.8101224113590307`*^9},ExpressionUUID->"6fa12b4d-9645-431a-bad3-\
7c7da209a926"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.809993099643552*^9, 
  3.8099931005521393`*^9}},ExpressionUUID->"e33c8574-48a5-4dfa-89e6-\
240183ce9799"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PlotImpactVector", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Scale", "\[Rule]", "1"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Automatic"}]}], "}"}]}], ";"}]], "Code",\

 CellChangeTimes->{{3.809993280201036*^9, 3.809993316439062*^9}, {
  3.8100646874044437`*^9, 
  3.810064710045596*^9}},ExpressionUUID->"be7f3be5-c3ad-427b-8e58-\
1f4c9a2830aa"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fitness Functions", "Section",
 CellChangeTimes->{{3.7694825255205097`*^9, 
  3.7694825466412163`*^9}},ExpressionUUID->"d381b9b7-b2e6-4b17-be14-\
656071c30377"],

Cell[CellGroupData[{

Cell["InvSPS: Inv, StablePopulationStructure, ReproductiveValues", \
"Subsection",
 CellChangeTimes->{{3.696255630111758*^9, 3.6962556305999393`*^9}, {
  3.758385742350339*^9, 
  3.758385744546867*^9}},ExpressionUUID->"971be81d-214e-436d-8c24-\
fc4fbcfb8815"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"32f3a6cb-ffea-4516-b411-\
42c6dd7282ad"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Inv", "::", "usage"}], "=", "\n", 
    "\"\<Inv[\!\(\*StyleBox[\"sol\", \"TI\"]\), \!\(\*StyleBox[\"inv\", \
\"TI\"]\)] calculates the growth rate of invader \!\(\*StyleBox[\"inv\", \"TI\
\"]\) invading the resident community \!\(\*StyleBox[\"sol\", \"TI\"]\).\n\
Inv[\!\(\*StyleBox[\"attributes\", \"TI\"]\), \!\(\*StyleBox[\"sol\", \"TI\"]\
\), Guild\[Rule]\!\(\*StyleBox[\"guild\", \"TI\"]\)] calculates the growth \
rate of an invader in guild \!\(\*StyleBox[\"guild\", \"TI\"]\) \
(default=first), using resident trait values / interaction coefficients \
\!\(\*StyleBox[\"attributes\", \"TI\"]\).\nInv[\!\(\*StyleBox[\"attributes\", \
\"TI\"]\), \!\(\*StyleBox[\"sol\", \"TI\"]\), \!\(\*StyleBox[\"traitinv\", \
\"TI\"]\)] uses invader traits \!\(\*StyleBox[\"traitinv\", \"TI\"]\).\>\""}],
    ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"StablePopulationStructure", "::", "usage"}], "=", "\n", 
    "\"\<StablePopulationStructure[\!\(\*StyleBox[\"sol\", \"TI\"]\), \
\!\(\*StyleBox[\"inv\", \"TI\"]\)] calculates the stable population structure \
of invader \!\(\*StyleBox[\"inv\", \"TI\"]\) invading the resident community \
\!\(\*StyleBox[\"sol\", \"TI\"]\).\nStablePopulationStructure[\!\(\*StyleBox[\
\"attributes\", \"TI\"]\), \!\(\*StyleBox[\"sol\", \"TI\"]\), \
Guild\[Rule]\!\(\*StyleBox[\"guild\", \"TI\"]\)] calculates the stable \
population structure of an invader in guild \!\(\*StyleBox[\"guild\", \"TI\"]\
\) (default=first), using resident trait values / interaction coefficients \!\
\(\*StyleBox[\"attributes\", \"TI\"]\).\n\
StablePopulationStructure[\!\(\*StyleBox[\"attributes\", \"TI\"]\), \
\!\(\*StyleBox[\"sol\", \"TI\"]\), \!\(\*StyleBox[\"traitinv\", \"TI\"]\)] \
uses invader traits \!\(\*StyleBox[\"traitinv\", \"TI\"]\).\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReproductiveValues", "::", "usage"}], " ", "=", "\n", 
    "\"\<ReproductiveValues[\!\(\*StyleBox[\"sol\", \"TI\"]\), \
\!\(\*StyleBox[\"inv\", \"TI\"]\)] calculates the reproductive values of \
invader \!\(\*StyleBox[\"inv\", \"TI\"]\) invading the resident community \
\!\(\*StyleBox[\"sol\", \"TI\"]\).\n\
ReproductiveValues[\!\(\*StyleBox[\"attributes\", \"TI\"]\), \
\!\(\*StyleBox[\"sol\", \"TI\"]\), Guild\[Rule]\!\(\*StyleBox[\"guild\", \"TI\
\"]\)] calculates the reproductive value of an invader in guild \
\!\(\*StyleBox[\"guild\", \"TI\"]\) (default=first), using resident trait \
values / interaction coefficients \!\(\*StyleBox[\"attributes\", \"TI\"]\).\n\
ReproductiveValues[\!\(\*StyleBox[\"attributes\", \"TI\"]\), \
\!\(\*StyleBox[\"sol\", \"TI\"]\), \!\(\*StyleBox[\"traitinv\", \"TI\"]\)] \
uses invader traits \!\(\*StyleBox[\"traitinv\", \"TI\"]\).\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InvSPS", "::", "usage"}], " ", "=", "\n", 
   "\"\<InvSPS[\!\(\*StyleBox[\"sol\", \"TI\"]\), \!\(\*StyleBox[\"inv\", \
\"TI\"]\)] calculates the growth rate and stable population structure of \
invader \!\(\*StyleBox[\"inv\", \"TI\"]\) invading the resident community \
\!\(\*StyleBox[\"sol\", \"TI\"]\).\nInvSPS[\!\(\*StyleBox[\"attributes\", \
\"TI\"]\), \!\(\*StyleBox[\"sol\", \"TI\"]\), \
Guild\[Rule]\!\(\*StyleBox[\"guild\", \"TI\"]\)] calculates the growth rate \
and stable population structure of an invader in guild \!\(\*StyleBox[\"guild\
\", \"TI\"]\) (default=first), using resident trait values / interaction \
coefficients \!\(\*StyleBox[\"attributes\", \"TI\"]\).\n\
InvSPS[\!\(\*StyleBox[\"attributes\", \"TI\"]\), \!\(\*StyleBox[\"sol\", \"TI\
\"]\), \!\(\*StyleBox[\"traitinv\", \"TI\"]\)] uses invader traits \
\!\(\*StyleBox[\"traitinv\", \"TI\"]\).\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.769485009263171*^9, 3.7694850100881166`*^9}, {
  3.7700058161827507`*^9, 3.770005825996234*^9}, {3.7700061575796833`*^9, 
  3.770006200782958*^9}, {3.8074007445246553`*^9, 3.8074008277198877`*^9}, {
  3.807400861100831*^9, 
  3.807400888277125*^9}},ExpressionUUID->"5c10c41d-fa92-4a33-8253-\
5988f8385da9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"0ccf2d24-80ce-4bc3-8acd-\
1d370cfaaa54"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"InvSPS", "[", 
    RowBox[{
     RowBox[{"traitsandpops_", "?", "AttributesAndVariablesQ"}], ",", 
     RowBox[{"invaderin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "InvaderQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", 
   RowBox[{"InvSPS", "[", 
    RowBox[{
     RowBox[{"ExtractAttributes", "[", "traitsandpops", "]"}], ",", 
     RowBox[{"ExtractVariables", "[", "traitsandpops", "]"}], ",", 
     "invaderin", ",", "opts"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.72961053794757*^9, {3.729615060055964*^9, 3.729615073016445*^9}, 
   3.7296163819204807`*^9, {3.7694893846437798`*^9, 3.7694893905073147`*^9}, 
   3.7981288000548162`*^9, {3.798148626898654*^9, 3.798148634968981*^9}, {
   3.807369342789259*^9, 3.807369342790839*^9}, {3.8180729969987307`*^9, 
   3.81807299926518*^9}},ExpressionUUID->"81951699-db0d-452a-b292-\
b21b29d982c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"InvSPS", "[", 
    RowBox[{
     RowBox[{"attributesin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "NotInvaderTraitsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"solin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"invaderin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "InvaderQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<InvSPS\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "method", ",", "\n", "guild", ",", "time", ",", 
       "simplifyresult", ",", "frominv", ",", "rv", ",", "qssics", ",", "\n", 
       "qssmethod", ",", "\n", "ndsolveopts", ",", "nintegrateopts", ",", 
       "integrateopts", ",", "\n", "solveopts", ",", "nsolveopts", ",", 
       "findrootopts", ",", "\n", "findecocycleopts", ",", "eigensystemopts", 
       ",", "simplifyopts", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "attributes", 
       ",", "invader", ",", "invtraits", ",", "variables", ",", "\n", 
       "invtype", ",", "invid", ",", "invunk", ",", "zeropcomps", ",", "sol", 
       ",", "\n", "inveqns", ",", "invunks", ",", "qsseqns", ",", "qssunks", 
       ",", "qsssubs", ",", "mode", ",", "\n", "tstart", ",", "tend", ",", 
       "removets", ",", "qsssols", ",", "qsssol", ",", "eval", ",", "evec", 
       ",", "invsol", ",", "j", ",", "tempIF"}], "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"attributes", "=", 
         RowBox[{"FixAttributes", "[", "attributesin", "]"}]}], ";", "\n", 
        "\n", 
        RowBox[{"$InvCount", "++"}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"increment", " ", "$InvCount"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<attributesin=\>\"", ",", "attributesin"}], "]"}], 
           ";", "\n", "\t", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<solin=\>\"", ",", "solin"}], "]"}], ";", "\n", "\t", 
           
           RowBox[{"Print", "[", 
            RowBox[{"\"\<invaderin=\>\"", ",", "invaderin"}], "]"}], ";", 
           "\n", "\t", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<opts=\>\"", ",", "opts"}], "]"}], ";"}]}], "\n", 
         "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"OptionValue", "[", "Verbose", "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"OptionValue", "[", "VerboseAll", "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"method", "=", 
         RowBox[{"OptionValue", "[", "Method", "]"}]}], ";", "\n", 
        RowBox[{"time", "=", 
         RowBox[{"OptionValue", "[", "Time", "]"}]}], ";", "\n", 
        RowBox[{"qssmethod", "=", 
         RowBox[{"OptionValue", "[", "QSSMethod", "]"}]}], ";", " ", "\n", 
        RowBox[{"ndsolveopts", "=", 
         RowBox[{"OptionValue", "[", "NDSolveOpts", "]"}]}], ";", "\n", 
        RowBox[{"nintegrateopts", "=", 
         RowBox[{"OptionValue", "[", "NIntegrateOpts", "]"}]}], ";", "\n", 
        RowBox[{"integrateopts", "=", 
         RowBox[{"OptionValue", "[", "IntegrateOpts", "]"}]}], ";", "\n", 
        RowBox[{"solveopts", "=", 
         RowBox[{"OptionValue", "[", "SolveOpts", "]"}]}], ";", "\n", 
        RowBox[{"nsolveopts", "=", 
         RowBox[{"OptionValue", "[", "NSolveOpts", "]"}]}], ";", "\n", 
        RowBox[{"findrootopts", "=", 
         RowBox[{"OptionValue", "[", "FindRootOpts", "]"}]}], ";", "\n", 
        RowBox[{"findecocycleopts", "=", 
         RowBox[{"OptionValue", "[", "FindEcoCycleOpts", "]"}]}], ";", "\n", 
        RowBox[{"eigensystemopts", "=", 
         RowBox[{"OptionValue", "[", "EigensystemOpts", "]"}]}], ";", "\n", 
        RowBox[{"simplifyresult", "=", 
         RowBox[{"OptionValue", "[", "SimplifyResult", "]"}]}], ";", "\n", 
        RowBox[{"simplifyopts", "=", 
         RowBox[{"OptionValue", "[", "SimplifyOpts", "]"}]}], ";", "\n", 
        RowBox[{"guild", "=", 
         RowBox[{"OptionValue", "[", "Guild", "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"guild", "===", "Automatic"}], ",", 
          RowBox[{"guild", "=", 
           RowBox[{
            RowBox[{"Append", "[", 
             RowBox[{"guilds", ",", "1"}], "]"}], "\[LeftDoubleBracket]", "1",
             "\[RightDoubleBracket]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"frominv", "=", 
         RowBox[{"OptionValue", "[", "FromInv", "]"}]}], ";", "\n", 
        RowBox[{"rv", "=", 
         RowBox[{"OptionValue", "[", "RV", "]"}]}], ";", "\n", 
        RowBox[{"qssics", "=", 
         RowBox[{"OptionValue", "[", "QSSICs", "]"}]}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"variables", "=", 
         RowBox[{"FixVariables", "[", "solin", "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"variables", "=", "solin"}], ";"}], "*)"}], "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<variables=\>\"", ",", "variables"}], "]"}], ";"}], 
         "*)"}], "\n", 
        RowBox[{"Set\[ScriptCapitalN]", "[", 
         RowBox[{"attributes", ",", "variables"}], "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<\[ScriptCapitalN]=\>\"", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "]"}], ";"}], 
         "*)"}], "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelwhenevents", "\[NotEqual]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"Message", "[", 
           RowBox[{"InvSPS", "::", "whenevents"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"assemble", " ", 
          RowBox[{"sol", " ", "[", 
           RowBox[{"resident", " ", "state"}], "]"}]}], " ", "*)"}], "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "in", " ", "case", " ", "any", " ", "extensive", " ", "pops", " ", 
           RowBox[{"weren", "'"}], "t", " ", "given"}], ",", " ", 
          RowBox[{"assume", " ", 
           RowBox[{"they", "'"}], "re", " ", "0"}]}], " ", "*)"}], "\n", 
        RowBox[{"zeropcomps", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Table", "[", "\n", "\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"comptype", "[", "pcomp", "]"}], "\[Equal]", 
                 "\"\<Extensive\>\""}], ",", 
                RowBox[{"pcomp", "\[Rule]", "0"}], ",", 
                RowBox[{"pcomp", "\[Rule]", "pcomp"}]}], "]"}], "\n", ",", 
              RowBox[{"{", 
               RowBox[{"pcomp", ",", 
                RowBox[{"pcomps", "[", "pop", "]"}]}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"pop", ",", "pops"}], "}"}]}], "]"}], "]"}]}], ";", "\n", 
        RowBox[{"sol", "=", 
         RowBox[{"JoinFirst", "[", 
          RowBox[{"variables", ",", "zeropcomps"}], "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", "sol", "]"}], ";"}], "*)"}], "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"if", " ", "a", " ", "time", " ", "given"}], ",", " ", 
          RowBox[{"evaluate", " ", "sol", " ", "there"}]}], " ", "*)"}], "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"time", "=!=", "t"}], "&&", 
           RowBox[{"!", 
            RowBox[{"NumericRuleListQ", "[", "sol", "]"}]}]}], ",", 
          RowBox[{"sol", "=", 
           RowBox[{"Slice", "[", 
            RowBox[{"sol", ",", "time"}], "]"}]}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: sol=\>\"", ",", "sol"}], "]"}]}], 
         "]"}], ";", "\n", "\n", 
        RowBox[{"invader", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "invaderin", "}"}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<invader=\>\"", ",", "invader"}], "]"}]}], "]"}], ";", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "what", " ", "kind", " ", "of", " ", "invader", " ", "do", " ", "we",
           " ", 
          RowBox[{"have", "?"}]}], " ", "*)"}], "\n", 
        RowBox[{"invtraits", "=", 
         RowBox[{"{", "}"}]}], ";", "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{"(*", " ", 
          RowBox[{"no", " ", "invader", " ", "given"}], " ", "*)"}], "\n", 
         "\t", 
         RowBox[{
          RowBox[{"invader", "===", 
           RowBox[{"{", "}"}]}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"Global`debug", ",", 
             RowBox[{"Print", "[", "\"\<no invader given\>\"", "]"}]}], "]"}],
            ";", "\n", "\t", 
           RowBox[{"Which", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{"nguilds", "\[NotEqual]", "0"}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"invtype", ",", "invid"}], "}"}], "=", 
              RowBox[{"{", 
               RowBox[{"\"\<guild ghost\>\"", ",", "guild"}], "}"}]}], ",", 
             "\n", "\t\t", 
             RowBox[{"npops", "\[NotEqual]", "0"}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"invtype", ",", "invid"}], "}"}], "=", 
              RowBox[{"{", 
               RowBox[{"\"\<pop\>\"", ",", 
                RowBox[{
                "pops", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}], "}"}]}]}], "\n", "\t", "]"}], 
           ";"}], "\n", ",", "\n", "\t", 
          RowBox[{"(*", " ", 
           RowBox[{"specific", " ", "guild", " ", "ghost", " ", "invader"}], 
           " ", "*)"}], "\n", "\t", 
          RowBox[{"AttributesQ", "[", "invader", "]"}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"Global`debug", ",", 
             RowBox[{
             "Print", "[", "\"\<specific guild ghost invader\>\"", "]"}]}], 
            "]"}], ";", "\n", "\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"invtype", ",", "invid"}], "}"}], "=", 
            RowBox[{"{", 
             RowBox[{"\"\<guild ghost\>\"", ",", 
              RowBox[{
               RowBox[{"LookUp", "[", 
                RowBox[{"invader", "\[LeftDoubleBracket]", 
                 RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], 
               "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
             "}"}]}], ";", "\n", "\t", 
           RowBox[{"invtraits", "=", 
            RowBox[{"ExtractAttributes", "[", "invader", "]"}]}], ";"}], "\n",
           ",", "\n", "\t", 
          RowBox[{"(*", " ", 
           RowBox[{"whole", "-", 
            RowBox[{"guild", " ", "ghost", " ", "invader"}]}], " ", "*)"}], 
          "\n", "\t", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"LookUp", "[", 
              RowBox[{
              "invader", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}], "]"}], "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}], "\[Equal]", "\"\<guild\>\""}], "&&", 
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"LookUp", "[", 
              RowBox[{
              "invader", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}], "]"}], "]"}], "\[Equal]", "2"}]}], 
          ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"Global`debug", ",", 
             RowBox[{
             "Print", "[", "\"\<whole-guild ghost invader\>\"", "]"}]}], 
            "]"}], ";", "\n", "\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"invtype", ",", "invid"}], "}"}], "=", 
            RowBox[{"{", 
             RowBox[{"\"\<guild ghost\>\"", ",", 
              RowBox[{
              "invader", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}]}], "}"}]}], ";"}], "\n", ",", "\n", 
          "\t", 
          RowBox[{"(*", " ", 
           RowBox[{"whole", "-", 
            RowBox[{"gcomp", " ", "ghost", " ", 
             RowBox[{"invader", " ", "--"}], " ", "is", " ", "this", " ", 
             "even", " ", "a", " ", "good", " ", 
             RowBox[{"idea", "?", "!"}]}]}], " ", "*)"}], "\n", "\t", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"LookUp", "[", 
              RowBox[{
              "invader", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}], "]"}], "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}], "\[Equal]", "\"\<gcomp\>\""}], "&&", 
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"LookUp", "[", 
              RowBox[{
              "invader", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}], "]"}], "]"}], "\[Equal]", "3"}]}], 
          ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"Global`debug", ",", 
             RowBox[{
             "Print", "[", "\"\<whole-gcomp ghost invader\>\"", "]"}]}], 
            "]"}], ";", "\n", "\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"invtype", ",", "invid"}], "}"}], "=", 
            RowBox[{"{", 
             RowBox[{"\"\<gcomp ghost\>\"", ",", 
              RowBox[{
              "invader", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}]}], "}"}]}], ";", "\n", "\t", 
           RowBox[{"Return", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Simplify", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"eqn", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{"invid", ",", "0"}], "]"}], "]"}], "/", 
                  RowBox[{"Subscript", "[", 
                   RowBox[{"invid", ",", "0"}], "]"}]}], "/.", "sol"}], "/.", 
                "attributes"}], "]"}], ",", "\"\<N/A\>\""}], "}"}], "]"}]}], 
          "\n", ",", "\n", "\t", 
          RowBox[{"(*", " ", 
           RowBox[{"guild", " ", "member", " ", "invader"}], " ", "*)"}], 
          "\n", "\t", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"LookUp", "[", 
              RowBox[{
              "invader", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}], "]"}], "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}], "\[Equal]", "\"\<guild\>\""}], "||", 
           RowBox[{
            RowBox[{
             RowBox[{"LookUp", "[", 
              RowBox[{
              "invader", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}], "]"}], "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}], "\[Equal]", "\"\<gcomp\>\""}]}], ",", 
          "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"Global`debug", ",", 
             RowBox[{"Print", "[", "\"\<guild member invader\>\"", "]"}]}], 
            "]"}], ";", "\n", "\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"invtype", ",", "invid"}], "}"}], "=", 
            RowBox[{"{", 
             RowBox[{"\"\<guild member\>\"", ",", 
              RowBox[{
              "invader", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}]}], "}"}]}], ";", "\n", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"invid", ",", "\"\< -- \>\"", ",", 
               RowBox[{"invid", "/.", 
                RowBox[{"WeightedAbundance", "[", "sol", "]"}]}]}], "]"}], 
             ";"}], "*)"}], "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"invid", "/.", 
                RowBox[{"WeightedAbundance", "[", "sol", "]"}]}], ")"}], ">", 
              "0"}], ",", 
             RowBox[{"Message", "[", 
              RowBox[{"InvSPS", "::", "nonzero"}], "]"}]}], 
            RowBox[{"(*", 
             RowBox[{";", 
              RowBox[{"Abort", "[", "]"}]}], "*)"}], "]"}]}], ",", "\n", "\t", 
          RowBox[{"(*", " ", 
           RowBox[{"pop", " ", "invader"}], " ", "*)"}], "\n", "\t", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"LookUp", "[", 
              RowBox[{
              "invader", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}], "]"}], "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}], "\[Equal]", "\"\<pop\>\""}], "||", 
           RowBox[{
            RowBox[{
             RowBox[{"LookUp", "[", 
              RowBox[{
              "invader", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}], "]"}], "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}], "\[Equal]", "\"\<pcomp\>\""}]}], ",", 
          "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"Global`debug", ",", 
             RowBox[{"Print", "[", "\"\<pop invader\>\"", "]"}]}], "]"}], ";",
            "\n", "\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"invtype", ",", "invid"}], "}"}], "=", 
            RowBox[{"{", 
             RowBox[{"\"\<pop\>\"", ",", 
              RowBox[{
               RowBox[{"LookUp", "[", 
                RowBox[{
                "invader", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "]"}], "\[LeftDoubleBracket]", 
               "2", "\[RightDoubleBracket]"}]}], "}"}]}], ";", "\n", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"invid", ",", "\"\< -- \>\"", ",", 
               RowBox[{"invid", "/.", 
                RowBox[{"WeightedAbundance", "[", "sol", "]"}]}]}], "]"}], 
             ";"}], "*)"}], "\n", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"comps", "[", "invid", "]"}], "]"}], ";", "\n", 
             RowBox[{"Print", "[", 
              RowBox[{"FilterRules", "[", 
               RowBox[{"sol", ",", 
                RowBox[{"comps", "[", "invid", "]"}]}], "]"}], "]"}], ";", 
             "\n", 
             RowBox[{"Print", "[", 
              RowBox[{"TemporalMean", "@", 
               RowBox[{"FilterRules", "[", 
                RowBox[{"sol", ",", 
                 RowBox[{"comps", "[", "invid", "]"}]}], "]"}]}], "]"}], ";", 
             "\n", 
             RowBox[{"Print", "[", 
              RowBox[{"WeightedAbundance", "@", 
               RowBox[{"TemporalMean", "@", 
                RowBox[{"FilterRules", "[", 
                 RowBox[{"sol", ",", 
                  RowBox[{"comps", "[", "invid", "]"}]}], "]"}]}]}], "]"}], 
             ";"}], "*)"}], "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"invid", "/.", 
                RowBox[{"WeightedAbundance", "@", 
                 RowBox[{"TemporalMean", "@", 
                  RowBox[{"FilterRules", "[", 
                   RowBox[{"sol", ",", 
                    RowBox[{"comps", "[", "invid", "]"}]}], "]"}]}]}]}], 
               ")"}], ">", "0"}], ",", 
             RowBox[{"Message", "[", 
              RowBox[{"InvSPS", "::", "nonzero"}], "]"}]}], 
            RowBox[{"(*", 
             RowBox[{";", 
              RowBox[{"Abort", "[", "]"}]}], "*)"}], "]"}]}], 
          StyleBox["\n",
           Background->RGBColor[1, 1, 0]], ",", "\n", "\t", "Else", ",", "\n",
           "\t", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"InvSPS", "::", "unkinv"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "\n", "]"}], ";", 
        "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: {invtype,invid}=\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"invtype", ",", "invid"}], "}"}]}], "]"}]}], "]"}], ";", 
        "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<invtraits=\>\"", ",", "invtraits"}], "]"}]}], "]"}], 
        ";", "\n", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"set", " ", "up", " ", "inveqns"}], ",", " ", "invunks", 
          ",", " ", 
          RowBox[{"qss", " ", "stuff"}]}], " ", "*)"}], "\n", "\n", 
        RowBox[{"inveqns", "=", 
         RowBox[{"invunks", "=", 
          RowBox[{"{", "}"}]}]}], ";", "\n", 
        RowBox[{"qsssubs", "=", 
         RowBox[{"qsseqns", "=", 
          RowBox[{"qssunks", "=", 
           RowBox[{"{", "}"}]}]}]}], ";", "\n", "\n", 
        RowBox[{"Do", "[", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<comp=\>\"", ",", "comp"}], "]"}], ";"}], "*)"}], 
         "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"invunk", "=", 
            RowBox[{"Switch", "[", 
             RowBox[{"invtype", ",", "\"\<guild ghost\>\"", ",", 
              RowBox[{"Subscript", "[", 
               RowBox[{"comp", ",", "0"}], "]"}], ",", "\"\<guild member\>\"",
               ",", 
              RowBox[{"Subscript", "[", 
               RowBox[{"comp", ",", 
                RowBox[{
                "invid", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}]}], "]"}], ",", "\"\<pop\>\"", ",", 
              "comp"}], "]"}]}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"comptype", "[", "invunk", "]"}], "\[Equal]", 
              "\"\<Extensive\>\""}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"inveqns", ",", 
                RowBox[{"eqn", "[", "invunk", "]"}]}], "]"}], ";", "\n", 
              "\t\t", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"invunks", ",", "invunk"}], "]"}], ";", "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"invtype", "\[Equal]", "\"\<guild ghost\>\""}], ",", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"qsssubs", ",", 
                  RowBox[{"invunk", "\[Rule]", "0"}]}], "]"}]}], "]"}], 
              ";"}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"comptype", "[", "invunk", "]"}], "\[Equal]", 
              "\"\<Intensive\>\""}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"qsseqns", ",", 
                RowBox[{
                 RowBox[{"eqn", "[", "invunk", "]"}], "\[Equal]", "0"}]}], 
               "]"}], ";", "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"qssmethod", "\[Equal]", "\"\<FindRoot\>\""}], ",", 
                "\n", "\t\t\t", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"qssunks", ",", 
                  RowBox[{"{", 
                   RowBox[{"invunk", ",", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"range", "[", "invunk", "]"}], "]"}], "+", 
                    "0.01"}]}], "}"}]}], "]"}], ",", "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"qssunks", ",", "invunk"}], "]"}], ";"}]}], "\n", 
               "\t\t", "]"}], ";"}]}], "\n", "\t", "]"}], ";"}], "\n", ",", 
          RowBox[{"{", 
           RowBox[{"comp", ",", 
            RowBox[{"Switch", "[", 
             RowBox[{"invtype", ",", "\"\<guild ghost\>\"", ",", 
              RowBox[{"gcomps", "[", "invid", "]"}], ",", 
              "\"\<guild member\>\"", ",", 
              RowBox[{"gcomps", "[", 
               RowBox[{
                RowBox[{"LookUp", "[", 
                 RowBox[{"invader", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], 
                "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "]"}],
               ",", "\"\<pop\>\"", ",", 
              RowBox[{"pcomps", "[", "invid", "]"}]}], "]"}]}], "}"}]}], 
         "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: inveqns=\>\"", ",", "inveqns"}], 
            "]"}], ";", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: invunks=\>\"", ",", "invunks"}], 
            "]"}], ";", "\n", "\t", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: qsseqns=\>\"", ",", "qsseqns"}], 
            "]"}], ";", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: qsssubs=\>\"", ",", "qsssubs"}], 
            "]"}], ";", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: qssunks=\>\"", ",", "qssunks"}], 
            "]"}]}]}], "\n", "]"}], ";", "\n", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"decide", " ", "on", " ", "mode"}], " ", "*)"}], "\n", "\n", 
        
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"modelperiod", "\[Equal]", "0"}], "&&", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "sol", "]"}], "\[Equal]", "0"}], "||", 
               
               RowBox[{"!", 
                RowBox[{"MemberQ", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"InterpolatingFunction", ",", "TemporalData"}], 
                   "}"}], ",", 
                  RowBox[{"Head", "[", 
                   RowBox[{"sol", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], 
                   "]"}]}], "]"}]}]}], ")"}]}], ")"}], "\n", "\t", "||", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"modelperiod", "=!=", "0"}], "&&", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"method", "===", "\"\<Instantaneous\>\""}], "||", 
               RowBox[{"time", "=!=", "t"}]}], ")"}]}], ")"}]}], ",", "\n", 
          "\t", 
          RowBox[{"mode", "=", "\"\<eigenvalue\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], "&&", 
           "\n", "\t", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"modelperiod", "=!=", "0"}], "&&", 
               RowBox[{"method", "=!=", "\"\<Instantaneous\>\""}], "&&", 
               RowBox[{"time", "===", "t"}]}], ")"}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "sol", "]"}], ">", "0"}], "&&", 
               RowBox[{
                RowBox[{"Head", "[", 
                 RowBox[{"sol", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], "===",
                 "InterpolatingFunction"}]}], ")"}]}], ")"}]}], ",", "\n", 
          "\t", 
          RowBox[{"mode", "=", "\"\<continuoustime floquet\>\""}], ",", "\n", 
          "\t", 
          RowBox[{
           RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], "&&", 
           "\n", "\t", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"modelperiod", "=!=", "0"}], "&&", 
               RowBox[{"method", "=!=", "\"\<Instantaneous\>\""}], "&&", 
               RowBox[{"time", "===", "t"}]}], ")"}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "sol", "]"}], ">", "0"}], "&&", 
               RowBox[{
                RowBox[{"Head", "[", 
                 RowBox[{"sol", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], "===",
                 "TemporalData"}]}], ")"}]}], ")"}]}], ",", "\n", "\t", 
          RowBox[{"mode", "=", "\"\<discretetime floquet\>\""}]}], "\n", 
         "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: mode=\>\"", ",", "mode"}], "]"}], 
          ";"}], "*)"}], "\n", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"calculate", " ", "invasion", " ", "fitness"}], " ", "*)"}], 
        "\n", "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{"(*", " ", 
          RowBox[{"ContinuousTime", " ", "Floquet", " ", "mode"}], " ", 
          "*)"}], "\n", "\t", 
         RowBox[{
          RowBox[{"mode", "\[Equal]", "\"\<continuoustime floquet\>\""}], ",",
           "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: ContinuousTime Floquet mode\>\""}], 
              "]"}]}], "]"}], ";", "\n", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{"figure", " ", "out", " ", "period"}], " ", "*)"}], "\n", 
           "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"sol", "\[NotEqual]", 
               RowBox[{"{", "}"}]}], "&&", 
              RowBox[{
               RowBox[{"Head", "[", 
                RowBox[{"sol", "\[LeftDoubleBracket]", 
                 RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], "===",
                "InterpolatingFunction"}]}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"tstart", ",", "tend"}], "}"}], "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"InitialTime", "[", "sol", "]"}], ",", 
                RowBox[{"FinalTime", "[", "sol", "]"}]}], "}"}]}], ",", "\n", 
             "\t\t", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"tstart", ",", "tend"}], "}"}], "=", 
              RowBox[{"{", 
               RowBox[{"0", ",", "modelperiod"}], "}"}]}]}], "\n", "\t", 
            "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"Global`debug", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: {tstart,tend}=\>\"", ",", 
               RowBox[{"{", 
                RowBox[{"tstart", ",", "tend"}], "}"}]}], "]"}]}], "]"}], ";",
            "\n", "\t", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "are", " ", "there", " ", "any", " ", "Intensive", " ", 
             "components", " ", "to", " ", "be", " ", "solved", " ", 
             RowBox[{"for", "?"}]}], " ", "*)"}], "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "qssunks", "]"}], ">", "0"}], ",", "\n", 
             "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"qssics", "===", "Automatic"}], ",", " ", 
                RowBox[{"(*", " ", 
                 RowBox[{"no", " ", "QSS", " ", "ICs", " ", 
                  RowBox[{"given", "?", " ", "then"}], " ", "average", " ", 
                  "corresponding", " ", "components", " ", "from", " ", 
                  "residents"}], " ", "*)"}], "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"qssics", "=", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"qssunk", "\[Rule]", "\n", "\t\t\t\t", 
                    RowBox[{"Mean", "[", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"FinalSlice", "[", "sol", "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], 
                    "\[Equal]", "Subscript"}], ")"}], "&"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "\[Equal]", 
                    RowBox[{
                    "qssunk", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ")"}], "&"}]}], "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], 
                    "]"}]}], "\n", "\t\t\t", ",", 
                    RowBox[{"{", 
                    RowBox[{"qssunk", ",", "qssunks"}], "}"}]}], "]"}]}], 
                 ";"}]}], "\n", "\t\t", "]"}], ";", "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", "\n", "\t\t\t", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"tr", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"attributes", ",", "invtraits"}], "]"}]}], ",", 
                    RowBox[{"ic", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"FinalSlice", "[", "sol", "]"}], ",", "qssics"}], 
                    "]"}]}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "findecocycleopts"}]}]}], "}"}],
                   ",", "\n", "\t\t\t", 
                  RowBox[{"PrintCall", "[", 
                   RowBox[{"Global`qsssol", "=", 
                    RowBox[{"FindEcoCycle", "[", 
                    RowBox[{"trait", ",", "ic", ",", "op"}], "]"}]}], "]"}]}],
                  "\n", "\t\t", "]"}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{"qsssol", "=", 
               RowBox[{"FindEcoCycle", "[", 
                RowBox[{
                 RowBox[{"Join", "[", 
                  RowBox[{"attributes", ",", "invtraits"}], "]"}], ",", 
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{"FinalSlice", "[", "sol", "]"}], ",", "qssics"}], 
                  "]"}], ",", 
                 RowBox[{"Sequence", "@@", "findecocycleopts"}]}], "]"}]}], 
              ";", "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"qsssol", "\[Equal]", "$Failed"}], ",", 
                RowBox[{
                 RowBox[{"Message", "[", 
                  RowBox[{"InvSPS", "::", "noqsssol"}], "]"}], ";", 
                 RowBox[{"Return", "[", 
                  RowBox[{"{", "$Failed", "}"}], "]"}]}]}], "]"}], ";"}], 
             "\n", "\t", ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", 
                RowBox[{"PrintCall", "[", 
                 RowBox[{"Global`qsssol", "=", 
                  RowBox[{"{", "}"}]}], "]"}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{"qsssol", "=", 
               RowBox[{"{", "}"}]}]}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"Global`debug", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: qsssol=\>\"", ",", "qsssol"}], 
              "]"}]}], "]"}], ";", "\n", "\n", "\n", "\t", 
           RowBox[{"Which", "[", "\n", "\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{"one", " ", "extensive", " ", 
              RowBox[{"component", ":", " ", 
               RowBox[{"use", " ", "log", " ", "pop", " ", "eqn"}]}]}], " ", 
             "*)"}], "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "invunks", "]"}], "\[Equal]", "1"}], ",",
              "\n", "\t\t", 
             RowBox[{
              RowBox[{"Which", "[", "\n", "\t\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{"method", "===", "Automatic"}], "||", 
                 RowBox[{"method", "\[Equal]", "\"\<NIntegrate\>\""}]}], ",", 
                "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{"verbose", ",", 
                   RowBox[{"Print", "[", 
                    RowBox[{
                    "func", ",", 
                    "\"\<: ContinuousTime Floquet mode (1 comp): NIntegrate\>\
\""}], "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"verbose", ",", "\n", "\t\t\t\t", 
                   RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"eq", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cancel", "[", 
                    RowBox[{
                    RowBox[{
                    "inveqns", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    "invunks", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], "/.", 
                    "AddVariablets"}], "/.", "attributes"}], "/.", 
                    "invtraits"}]}], ",", "\n", "\t\t\t\t", 
                    RowBox[{"tstart", "=", "tstart"}], ",", 
                    RowBox[{"tend", "=", "tend"}], ",", 
                    RowBox[{"dt", "=", 
                    RowBox[{"tend", "-", "tstart"}]}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "nintegrateopts"}]}]}], "}"}], 
                    ",", "\n", "\t\t\t\t", 
                    RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`eval", "=", 
                    RowBox[{
                    RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"eq", "/.", "Global`sol"}], "/.", 
                    "Global`qsssol"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "tstart", ",", "tend"}], "}"}], ",", 
                    "op"}], "]"}], "/", "dt"}]}], "]"}]}], "\n", "\t\t\t", 
                    "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"eval", "=", 
                  RowBox[{
                   RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cancel", "[", 
                    RowBox[{
                    RowBox[{
                    "inveqns", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    "invunks", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], "/.", 
                    "AddVariablets"}], "/.", "attributes"}], "/.", 
                    "invtraits"}], "/.", "sol"}], "/.", "qsssol"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "tstart", ",", "tend"}], "}"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "nintegrateopts"}], "]"}]}], 
                    "]"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"tend", "-", "tstart"}], ")"}]}]}], ";", "\n", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"Print", "[", 
                    RowBox[{"\"\<eval=\>\"", ",", "eval"}], "]"}], ";"}], 
                  "*)"}], "\n", "\t\t\t", 
                 RowBox[{"Return", "[", 
                  RowBox[{"{", 
                   RowBox[{"eval", ",", "\"\<?\>\""}], "}"}], "]"}]}], "\n", 
                "\t\t", ",", "\n", "\t\t\t", 
                RowBox[{"method", "\[Equal]", "\"\<NDSolve\>\""}], ",", "\n", 
                "\t\t\t", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{"Global`debug", ",", 
                   RowBox[{"Print", "[", 
                    RowBox[{
                    "func", ",", 
                    "\"\<: ContinuousTime Floquet mode (1 comp): \
NDSolve\>\""}], "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"verbose", ",", "\n", "\t\t\t\t", 
                   RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"eq", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cancel", "[", 
                    RowBox[{
                    RowBox[{
                    "inveqns", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    "invunks", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], "/.", 
                    "AddVariablets"}], "/.", "attributes"}], "/.", 
                    "invtraits"}], "/.", "sol"}]}], ",", "\n", "\t\t\t\t", 
                    RowBox[{"tstart", "=", "tstart"}], ",", 
                    RowBox[{"tend", "=", "tend"}], ",", 
                    RowBox[{"dt", "=", 
                    RowBox[{"tend", "-", "tstart"}]}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "ndsolveopts"}]}]}], "}"}], ",",
                     "\n", "\t\t\t\t", 
                    RowBox[{
                    RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`invsol", "=", 
                    RowBox[{"NDSolve", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Global`x", "'"}], "[", "t", "]"}], "\[Equal]", 
                    "eq"}], "/.", "Global`qsssol"}], ",", 
                    RowBox[{
                    RowBox[{"Global`x", "[", "tstart", "]"}], "\[Equal]", 
                    "0"}]}], "}"}], ",", "Global`x", ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "tstart", ",", "tend"}], "}"}], ",", 
                    "op"}], "]"}]}], "]"}], ";", "\n", "\t\t\t\t", 
                    RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`eval", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Global`x", "[", "tend", "]"}], "/", "dt"}], "/.",
                     "Global`invsol"}]}], "]"}]}]}], "\n", "\t\t\t", "]"}]}], 
                  "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"invsol", "=", 
                  RowBox[{
                   RowBox[{"NDSolve", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "'"}], "[", "t", "]"}], "\[Equal]", 
                    RowBox[{"Cancel", "[", 
                    RowBox[{
                    RowBox[{
                    "inveqns", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    "invunks", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], "/.", 
                    "AddVariablets"}], "/.", "attributes"}], "/.", 
                    "invtraits"}], "/.", "sol"}], "/.", "qsssol"}], ",", 
                    RowBox[{
                    RowBox[{"x", "[", "tstart", "]"}], "\[Equal]", "0"}]}], 
                    "}"}], ",", "x", ",", "\n", "\t\t\t\t", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "tstart", ",", "tend"}], "}"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "ndsolveopts"}], "]"}]}], "]"}],
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                 ";", "\n", "\t\t\t", 
                 RowBox[{"eval", "=", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"x", "[", "tend", "]"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"tend", "-", "tstart"}], ")"}]}], "/.", 
                   "invsol"}]}], ";", "\n", "\t\t\t", 
                 RowBox[{"Return", "[", 
                  RowBox[{"{", 
                   RowBox[{"eval", ",", "\"\<?\>\""}], "}"}], "]"}], ";"}], 
                "\n", "\t\t", ",", "\n", "\t\t\t", 
                RowBox[{"method", "\[Equal]", "\"\<Integrate\>\""}], ",", 
                "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{"verbose", ",", 
                   RowBox[{"Print", "[", 
                    RowBox[{
                    "func", ",", 
                    "\"\<: ContinuousTime Floquet mode (1 comp): \
Integrate\>\""}], "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"verbose", ",", "\n", "\t\t\t\t", 
                   RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"eq", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cancel", "[", 
                    RowBox[{
                    RowBox[{
                    "inveqns", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    "invunks", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], "/.", 
                    "AddVariablets"}], "/.", "attributes"}], "/.", 
                    "invtraits"}], "/.", "sol"}]}], ",", "\n", "\t\t\t\t", 
                    RowBox[{"tstart", "=", "tstart"}], ",", 
                    RowBox[{"tend", "=", "tend"}], ",", 
                    RowBox[{"dt", "=", 
                    RowBox[{"tend", "-", "tstart"}]}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "integrateopts"}]}]}], "}"}], 
                    ",", "\n", "\t\t\t\t", 
                    RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`eval", "=", 
                    RowBox[{
                    RowBox[{"Integrate", "[", 
                    RowBox[{
                    RowBox[{"eq", "/.", "Global`qsssol"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "tstart", ",", "tend"}], "}"}], ",", 
                    "op"}], "]"}], "/", "dt"}]}], "]"}]}], "\n", "\t\t\t", 
                    "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"eval", "=", 
                  RowBox[{
                   RowBox[{"Integrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cancel", "[", 
                    RowBox[{
                    RowBox[{
                    "inveqns", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    "invunks", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], "/.", 
                    "AddVariablets"}], "/.", "attributes"}], "/.", 
                    "invtraits"}], "/.", "sol"}], "/.", "qsssol"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "tstart", ",", "tend"}], "}"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "integrateopts"}], "]"}]}], 
                    "]"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"tend", "-", "tstart"}], ")"}]}]}], ";", "\n", 
                 "\t\t\t", 
                 RowBox[{"Return", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Chop", "[", "eval", "]"}], ",", "\"\<?\>\""}], 
                   "}"}], "]"}], ";"}], "\n", "\t\t", ",", "\n", "\t\t\t", 
                RowBox[{"method", "\[Equal]", "\"\<EcoSim\>\""}], ",", "\n", 
                "\t\t\t", 
                RowBox[{
                 RowBox[{"sol", "=", 
                  RowBox[{"EcoSim", "[", "]"}]}], ";"}], "\n", "\t\t", ",", 
                "\n", "\t\t\t", "Else", ",", "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"Message", "[", 
                  RowBox[{"InvSPS", "::", "bdmtd"}], "]"}], ";", "\n", 
                 "\t\t\t", 
                 RowBox[{"Return", "[", "]"}]}]}], "\n", "\t\t", "]"}], ";"}],
              "\n", "\t", ",", "\n", "\t\t", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{
               "more", " ", "than", " ", "one", " ", "extensive", " ", 
                "component"}], ",", " ", 
               RowBox[{"calculate", " ", "Floquet", " ", "exponent"}]}], " ", 
              "*)"}], "\n", "\t\t", 
             RowBox[{
              RowBox[{"Length", "[", "invunks", "]"}], ">", "1"}], ",", "\n", 
             "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{
                 "func", ",", 
                  "\"\<: ContinuousTime Floquet mode (2+ comps)\>\""}], 
                 "]"}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{"removets", "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"x_", "/;", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"comptype", "[", "x", "]"}], "\[Equal]", 
                    "\"\<Extensive\>\""}], ")"}]}], ",", "0"}], "]"}], "[", 
                   "t", "]"}], "\[Rule]", 
                  RowBox[{"Subscript", "[", 
                   RowBox[{"x", ",", "0"}], "]"}]}], ",", 
                 RowBox[{"t", "\[Rule]", "time"}]}], "}"}]}], ";", "\n", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Print", "[", "removets", "]"}], ";"}], "*)"}], "\n", 
              "\t\t", 
              RowBox[{"j", "=", 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"inveqns", "/.", "AddVariablets"}], "/.", 
                   "attributes"}], "/.", "removets"}], ",", 
                 RowBox[{"{", "invunks", "}"}]}], "]"}]}], ";", "\n", "\t\t", 
              
              RowBox[{"If", "[", 
               RowBox[{"Global`debug", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{"func", ",", "\"\<: j=\>\"", ",", "j"}], "]"}]}], 
               "]"}], ";", "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", "\n", "\t\t\t", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"j", "=", 
                    RowBox[{"j", "/.", "invtraits"}]}], ",", 
                    RowBox[{"liu", "=", 
                    RowBox[{"Length", "[", "invunks", "]"}]}], ",", 
                    RowBox[{"tstart", "=", "tstart"}], ",", 
                    RowBox[{"tend", "=", "tend"}], ",", 
                    RowBox[{"dt", "=", 
                    RowBox[{"tend", "-", "tstart"}]}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "ndsolveopts"}]}]}], "}"}], ",",
                   "\n", "\t\t\t", 
                  RowBox[{
                   RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`invsol", "=", 
                    RowBox[{"NDSolve", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Global`x", "'"}], "[", "t", "]"}], "\[Equal]", 
                    RowBox[{"j", ".", 
                    RowBox[{"Global`x", "[", "t", "]"}]}]}], "/.", 
                    "Global`sol"}], "/.", "Global`qsssol"}], ",", 
                    RowBox[{
                    RowBox[{"Global`x", "[", "tstart", "]"}], "\[Equal]", 
                    RowBox[{"IdentityMatrix", "[", "liu", "]"}]}]}], "}"}], 
                    ",", "Global`x", ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "tstart", ",", "tend"}], "}"}], ",", 
                    "op"}], "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                   RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`eval", "=", 
                    RowBox[{
                    RowBox[{"Max", "@", 
                    RowBox[{"Re", "@", 
                    RowBox[{"Log", "@", 
                    RowBox[{"Chop", "@", 
                    RowBox[{"Sort", "@", 
                    RowBox[{"Eigenvalues", "@", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{"Global`x", "[", "tend", "]"}], "/.", 
                    "Global`invsol"}], "]"}]}]}]}]}]}]}], "/", "dt"}]}], 
                    "]"}]}]}], "\n", "\t\t", "]"}]}], "]"}], ";", "\n", 
              "\t\t", 
              RowBox[{"invsol", "=", 
               RowBox[{"NDSolve", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "'"}], "[", "t", "]"}], "\[Equal]", 
                    RowBox[{"j", ".", 
                    RowBox[{"x", "[", "t", "]"}]}]}], "/.", "invtraits"}], "/.",
                     "sol"}], "/.", "qsssol"}], ",", 
                   RowBox[{
                    RowBox[{"x", "[", "tstart", "]"}], "\[Equal]", 
                    RowBox[{"IdentityMatrix", "[", 
                    RowBox[{"Length", "[", "invunks", "]"}], "]"}]}]}], "}"}],
                  ",", "x", ",", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "tstart", ",", "tend"}], "}"}], ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"Sequence", "@@", "ndsolveopts"}], "]"}]}], "]"}]}],
               ";", "\n", "\t\t", 
              RowBox[{"eval", "=", 
               RowBox[{
                RowBox[{"Max", "@", 
                 RowBox[{"Re", "@", 
                  RowBox[{"Log", "@", 
                   RowBox[{"Chop", "@", 
                    RowBox[{"Sort", "@", 
                    RowBox[{"Eigenvalues", "@", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{"x", "[", "tend", "]"}], "/.", "invsol"}], 
                    "]"}]}]}]}]}]}]}], "/", 
                RowBox[{"(", 
                 RowBox[{"tend", "-", "tstart"}], ")"}]}]}], ";", "\n", 
              "\t\t", 
              RowBox[{"Return", "[", 
               RowBox[{"{", 
                RowBox[{"eval", ",", "\"\<?\>\""}], "}"}], "]"}], ";"}]}], 
            "\n", "\t", "]"}]}], "\n", ",", "\n", "\t", 
          RowBox[{"(*", " ", 
           RowBox[{"DiscreteTime", " ", "Floquet", " ", "mode"}], " ", "*)"}],
           "\n", "\t", 
          RowBox[{"mode", "\[Equal]", "\"\<discretetime floquet\>\""}], ",", 
          "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: DiscreteTime Floquet mode\>\""}], 
              "]"}]}], "]"}], ";", "\n", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{"figure", " ", "out", " ", "time", " ", "range"}], " ", 
            "*)"}], "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", 
               RowBox[{"sol", "\[LeftDoubleBracket]", 
                RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], "===",
               "TemporalData"}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"tstart", ",", "tend"}], "}"}], "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"InitialTime", "[", "sol", "]"}], ",", 
                RowBox[{"FinalTime", "[", "sol", "]"}]}], "}"}]}], ",", "\n", 
             "\t\t", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"tstart", ",", "tend"}], "}"}], "=", 
              RowBox[{"{", 
               RowBox[{"0", ",", "modelperiod"}], "}"}]}]}], "\n", "\t", 
            "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"Global`debug", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"\"\<{tstart,tend}=\>\"", ",", 
               RowBox[{"{", 
                RowBox[{"tstart", ",", "tend"}], "}"}]}], "]"}]}], "]"}], ";",
            "\n", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "are", " ", "there", " ", "any", " ", "Intensive", " ", 
             "components", " ", "to", " ", "be", " ", "solved", " ", 
             RowBox[{"for", "?"}]}], " ", "*)"}], "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "qssunks", "]"}], ">", "0"}], ",", "\n", 
             "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", "\n", "\t\t\t", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"tr", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"attributes", ",", "invtraits"}], "]"}]}], ",", 
                    RowBox[{"ic", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"FinalSlice", "[", "sol", "]"}], ",", "qssics"}], 
                    "]"}]}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "findecocycleopts"}]}]}], "}"}],
                   ",", "\n", "\t\t\t", 
                  RowBox[{"PrintCall", "[", 
                   RowBox[{"Global`qsssol", "=", 
                    RowBox[{"FindEcoCycle", "[", 
                    RowBox[{"trait", ",", "ic", ",", "op"}], "]"}]}], "]"}]}],
                  "\n", "\t\t", "]"}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{"qsssol", "=", 
               RowBox[{"FindEcoCycle", "[", 
                RowBox[{
                 RowBox[{"Join", "[", 
                  RowBox[{"attributes", ",", "invtraits"}], "]"}], ",", 
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{"FinalSlice", "[", "sol", "]"}], ",", "qssics"}], 
                  "]"}], ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"Sequence", "@@", "findecocycleopts"}], "]"}]}], 
                "]"}]}]}], "\n", "\t", ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", 
                RowBox[{"PrintCall", "[", 
                 RowBox[{"Global`qsssol", "=", 
                  RowBox[{"{", "}"}]}], "]"}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{"qsssol", "=", 
               RowBox[{"{", "}"}]}]}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"Global`debug", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: qsssol=\>\"", ",", "qsssol"}], 
              "]"}]}], "]"}], ";", "\n", "\n", "\t", 
           RowBox[{"removets", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{
                  RowBox[{"x_", "/;", 
                   RowBox[{
                    RowBox[{"comptype", "[", "x", "]"}], "\[Equal]", 
                    "\"\<Extensive\>\""}]}], ",", "0"}], "]"}], "[", "t", 
                "]"}], "\[Rule]", 
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", "0"}], "]"}]}], ",", 
              RowBox[{"t", "\[Rule]", "time"}]}], "}"}]}], ";", "\n", "\n", 
           "\t", 
           RowBox[{"Which", "[", "\n", "\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{"one", " ", "extensive", " ", 
              RowBox[{"component", ":", " ", 
               RowBox[{"use", " ", "log", " ", "pop", " ", "eqn"}]}]}], " ", 
             "*)"}], "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "invunks", "]"}], "\[Equal]", "1"}], ",",
              "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{
                 "func", ",", 
                  "\"\<: DiscreteTime Floquet mode (1 comp)\>\""}], "]"}]}], 
               "]"}], ";", "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", "\n", "\t\t\t", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"eq", "=", 
                    RowBox[{"Simplify", "[", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "inveqns", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    "invunks", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "/.", "AddVariablets"}], "/.",
                     "attributes"}], "/.", "invtraits"}], "]"}], "/.", 
                    "SimplifyLogE"}], "]"}]}], ",", 
                    RowBox[{"tstart", "=", "tstart"}], ",", 
                    RowBox[{"tend", "=", "tend"}], ",", 
                    RowBox[{"te", "=", 
                    RowBox[{"tend", "-", "tstart", "+", "1"}]}]}], "}"}], ",",
                   "\n", "\t\t\t", 
                  RowBox[{"(*", 
                   RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`eval", "=", 
                    RowBox[{
                    RowBox[{"Product", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"eq", "/.", "Global`sol"}], "/.", 
                    "Global`qsssol"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "tstart", ",", "tend"}], "}"}]}], "]"}],
                     "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "te"}], ")"}]}]}], "]"}], "*)"}], "\n", 
                  "\t\t\t", 
                  RowBox[{"PrintCall", "[", 
                   RowBox[{"Global`eval", "=", 
                    RowBox[{
                    RowBox[{"Sum", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"eq", "/.", "Global`sol"}], "/.", 
                    "Global`qsssol"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "tstart", ",", "tend"}], "}"}]}], "]"}],
                     "/", "te"}]}], "]"}]}], "\n", "\t\t", "]"}]}], "]"}], 
              ";", "\n", "\t\t", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"eval", "=", 
                 RowBox[{
                  RowBox[{"Product", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "inveqns", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    "invunks", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "/.", "AddVariablets"}], "/.",
                     "invtraits"}], "/.", "sol"}], "/.", "qsssol"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "tstart", ",", "tend"}], "}"}]}], "]"}],
                   "^", 
                  RowBox[{"(", 
                   RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{"tend", "-", "tstart", "+", "1"}], ")"}]}], 
                   ")"}]}]}], ";", "\n", "\t\t", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"Print", "[", 
                   RowBox[{"\"\<eval=\>\"", ",", "eval"}], "]"}], ";"}], 
                 "*)"}], "\n", "\t\t", 
                RowBox[{"Return", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Log", "@", 
                    RowBox[{"Chop", "@", 
                    RowBox[{"ComplexExpand", "[", "eval", "]"}]}]}], ")"}], "/.",
                     "SimplifyLogE"}], ",", "\"\<?\>\""}], "}"}], "]"}]}], 
               "*)"}], "\n", "\t\t", 
              RowBox[{"eval", "=", 
               RowBox[{
                RowBox[{"Sum", "[", 
                 RowBox[{
                  RowBox[{"Simplify", "[", 
                   RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "inveqns", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    "invunks", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "/.", "AddVariablets"}], "/.",
                     "attributes"}], "/.", "invtraits"}], "/.", "sol"}], "/.",
                     "qsssol"}], "]"}], "/.", "SimplifyLogE"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"t", ",", "tstart", ",", "tend"}], "}"}]}], "]"}], 
                "/", 
                RowBox[{"(", 
                 RowBox[{"tend", "-", "tstart", "+", "1"}], ")"}]}]}], ";", 
              "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"tend", "\[Equal]", "\[Infinity]"}], ",", "\n", 
                "\t\t\t", 
                RowBox[{"Return", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"tstart", "=", "tstart"}], ",", 
                    RowBox[{"tend", "=", "tend"}], ",", 
                    RowBox[{"eq", "=", 
                    RowBox[{"Simplify", "[", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "inveqns", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    "invunks", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "/.", "AddVariablets"}], "/.",
                     "attributes"}], "/.", "invtraits"}], "/.", "sol"}], "/.",
                     "qsssol"}], "]"}], "/.", "SimplifyLogE"}], "]"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"Unevaluated", "@", 
                    RowBox[{"Defer", "[", 
                    RowBox[{
                    RowBox[{"Sum", "[", 
                    RowBox[{"eq", ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "tstart", ",", "tend"}], "}"}]}], "]"}],
                     "/", "\[Infinity]"}], "]"}]}]}], "]"}], ",", 
                   "\"\<?\>\""}], "}"}], "]"}], ",", "\n", "\t\t\t", 
                RowBox[{"Return", "[", 
                 RowBox[{"{", 
                  RowBox[{"eval", ",", "\"\<?\>\""}], "}"}], "]"}]}], "\n", 
               "\t\t", "]"}]}], "\n", "\t", ",", "\n", "\t\t", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{
               "more", " ", "than", " ", "one", " ", "extensive", " ", 
                "component"}], ",", " ", 
               RowBox[{"calculate", " ", "Floquet", " ", "exponent"}]}], " ", 
              "*)"}], "\n", "\t\t", 
             RowBox[{
              RowBox[{"Length", "[", "invunks", "]"}], ">", "1"}], ",", "\n", 
             "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{
                 "func", ",", 
                  "\"\<: DiscreteTime Floquet mode (2+ comps)\>\""}], "]"}]}],
                "]"}], ";", "\n", "\t\t", 
              RowBox[{"j", "=", 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"inveqns", "/.", "AddVariablets"}], "/.", 
                   "attributes"}], "/.", "removets"}], ",", 
                 RowBox[{"{", "invunks", "}"}]}], "]"}]}], ";", "\n", "\t\t", 
              
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{"func", ",", "\"\<: j=\>\"", ",", "j"}], "]"}]}], 
               "]"}], ";", "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", "\n", "\t\t\t", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"j", "=", 
                    RowBox[{"j", "/.", "invtraits"}]}], ",", 
                    RowBox[{"tend", "=", "tend"}], ",", 
                    RowBox[{"te", "=", 
                    RowBox[{"tend", "+", "1"}]}]}], "}"}], ",", "\n", 
                  "\t\t\t", 
                  RowBox[{
                   RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`invsol", "=", 
                    RowBox[{"ListMultiplier", "[", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"j", "/.", "Global`sol"}], "/.", 
                    "Global`qsssol"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "0", ",", "tend"}], "}"}]}], "]"}], 
                    "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                   RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`eval", "=", 
                    RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{"Max", "@", 
                    RowBox[{"Re", "@", 
                    RowBox[{"Chop", "@", 
                    RowBox[{"Sort", "@", 
                    RowBox[{
                    "Eigenvalues", "[", "Global`invsol", "]"}]}]}]}]}], "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "te"}], ")"}]}], "]"}]}], "]"}]}]}], 
                 "\n", "\t\t", "]"}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{"invsol", "=", 
               RowBox[{"ListMultiplier", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"j", "/.", "invtraits"}], "/.", "sol"}], "/.", 
                   "qsssol"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"t", ",", "0", ",", "tend"}], "}"}]}], "]"}], 
                "]"}]}], ";", "\t\t", "\n", "\t\t", 
              RowBox[{"Return", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Log", "[", 
                  RowBox[{
                   RowBox[{"Max", "@", 
                    RowBox[{"Re", "@", 
                    RowBox[{"Chop", "@", 
                    RowBox[{"Sort", "@", 
                    RowBox[{"Eigenvalues", "[", "invsol", "]"}]}]}]}]}], "^", 
                   
                   RowBox[{"(", 
                    RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{"tend", "+", "1"}], ")"}]}], ")"}]}], "]"}], ",", 
                 "\"\<?\>\""}], "}"}], "]"}], ";"}]}], "\n", "\t", "]"}]}], 
          "\n", ",", "\n", "\t", 
          StyleBox[
           RowBox[{"(*", " ", 
            StyleBox[
             RowBox[{"Eigenvalue", " ", "mode"}],
             FontVariations->{"Underline"->True}], " ", "*)"}],
           FontSize->16], "\n", "\t", 
          RowBox[{"mode", "\[Equal]", "\"\<eigenvalue\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: eigenvalue mode\>\""}], "]"}]}], 
            "]"}], ";", "\n", "\t", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{"subrule", " ", "to", " ", 
             RowBox[{
              RowBox[{"remove", " ", "[", "t", "]"}], "'"}], "s"}], " ", 
            "*)"}], "\n", "\t", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"removets", "=", 
              RowBox[{"{", 
               RowBox[{"t", "\[Rule]", "time"}], "}"}]}], ";"}], "*)"}], "\n",
            "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "are", " ", "there", " ", "any", " ", "Intensive", " ", 
             "components", " ", "to", " ", "be", " ", "solved", " ", 
             RowBox[{"for", "?"}]}], " ", "*)"}], "\n", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "qssunks", "]"}], ">", "0"}], ",", "\n", 
             "\t\t", 
             RowBox[{
              RowBox[{"Which", "[", "\n", "\t\t\t", 
               RowBox[{
                RowBox[{"qssmethod", "\[Equal]", "\"\<Solve\>\""}], ",", "\n",
                 "\t\t\t", 
                RowBox[{"qsssols", "=", 
                 RowBox[{"Solve", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"qsseqns", "/.", "qsssubs"}], "/.", 
                    "attributes"}], "/.", "sol"}], "/.", "invtraits"}], "/.", 
                    
                    RowBox[{"t", "\[Rule]", "time"}]}], ",", "qssunks", ",", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "solveopts"}], "]"}]}], "]"}]}],
                 ",", "\n", "\t\t\t", 
                RowBox[{"qssmethod", "\[Equal]", "\"\<NSolve\>\""}], ",", 
                "\n", "\t\t\t", 
                RowBox[{"qsssols", "=", 
                 RowBox[{"NSolve", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"qsseqns", "/.", "qsssubs"}], "/.", 
                    "attributes"}], "/.", "sol"}], "/.", "invtraits"}], "/.", 
                    
                    RowBox[{"t", "\[Rule]", "time"}]}], ",", "qssunks", ",", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "nsolveopts"}], "]"}]}], 
                  "]"}]}], ",", "\n", "\t\t\t", 
                RowBox[{"qssmethod", "\[Equal]", "\"\<FindRoot\>\""}], ",", 
                "\n", "\t\t\t", 
                RowBox[{"qsssols", "=", 
                 RowBox[{"{", 
                  RowBox[{"FindRoot", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"qsseqns", "/.", "qsssubs"}], "/.", 
                    "attributes"}], "/.", "sol"}], "/.", "invtraits"}], "/.", 
                    
                    RowBox[{"t", "\[Rule]", "time"}]}], ",", "qssunks", ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "findrootopts"}], "]"}]}], 
                   "]"}], "}"}]}]}], "\n", "\t\t", "]"}], ";"}], "\n", "\t", 
             ",", "\n", "\t\t", 
             RowBox[{"qsssols", "=", 
              RowBox[{"{", 
               RowBox[{"{", "}"}], "}"}]}]}], "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: qsssols=\>\"", ",", "qsssols"}], 
              "]"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"VectorQ", "[", 
              RowBox[{"qsssols", ",", 
               RowBox[{
                RowBox[{"NumericRuleListQ", "[", "#", "]"}], "&"}]}], "]"}], 
             ",", "\n", "\t\t", 
             RowBox[{"qsssol", "=", 
              RowBox[{"SelectValid", "[", "qsssols", "]"}]}], ",", " ", 
             RowBox[{"(*", " ", 
              RowBox[{"should", " ", "add", " ", "SelectEcoStable", " ", 
               RowBox[{"here", "?"}]}], " ", "*)"}], "\n", "\t\t", 
             RowBox[{"qsssol", "=", "qsssols"}]}], "\n", "\t", "]"}], ";", 
           "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: qsssol=\>\"", ",", "qsssol"}], 
              "]"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "qsssol", "]"}], "\[NotEqual]", "1"}], 
             ",", 
             RowBox[{
              RowBox[{"Message", "[", 
               RowBox[{
                RowBox[{"InvSPS", "::", "noqsssol"}], ",", 
                RowBox[{"Length", "[", "qsssol", "]"}]}], "]"}], ";", 
              RowBox[{"Return", "[", 
               RowBox[{"{", "$Failed", "}"}], "]"}]}]}], "]"}], ";", "\n", 
           "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "invunks", "]"}], "\[Equal]", "1"}], ",",
              "\n", "\t\t", 
             RowBox[{"j", "=", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cancel", "[", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "inveqns", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    "invunks", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ")"}], "]"}], "/.", 
                    RowBox[{
                    "qsssol", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "/.", "qsssubs"}], "/.", 
                    "sol"}], "/.", "invtraits"}], "/.", "attributes"}], "/.", 
                 
                 RowBox[{"t", "\[Rule]", "time"}]}], "}"}], "}"}]}], "\n", 
             "\t", ",", "\n", "\t\t", 
             RowBox[{"(*", " ", 
              RowBox[{
              "make", " ", "Jacobian", " ", "matrix", " ", "of", " ", 
               "Extensive", " ", "components"}], " ", "*)"}], "\n", "\t\t", 
             RowBox[{"(*", " ", 
              RowBox[{"what", " ", "about", " ", "0", "th", " ", "order", " ", 
               RowBox[{"terms", "?", "!"}]}], " ", "*)"}], "\n", "\t\t", 
             RowBox[{
              RowBox[{"j", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"inveqns", "/.", "attributes"}], "/.", 
                    RowBox[{
                    "qsssol", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "/.", "invtraits"}], ",", 
                   RowBox[{"{", "invunks", "}"}]}], "]"}], "/.", "sol"}], "/.", 
                RowBox[{"t", "\[Rule]", "time"}]}]}], ";"}]}], "\n", "\t", 
            "]"}], ";", "\n", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"Global`debug", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: j=\>\"", ",", "j"}], "]"}]}], "]"}],
            ";", "\n", "\n", "\t", 
           RowBox[{"Which", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "j", "]"}], "\[Equal]", "1"}], ",", " ", 
             
             RowBox[{"(*", " ", 
              RowBox[{"1", " ", "extensive", " ", "component"}], " ", "*)"}], 
             "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{"func", ",", "\"\<: 1 extensive component\>\""}], 
                 "]"}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{"eval", "=", 
               RowBox[{"j", "\[LeftDoubleBracket]", 
                RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
              "\n", "\t\t", 
              RowBox[{"evec", "=", 
               RowBox[{"{", "1", "}"}]}], ";"}], "\n", "\t", ",", "\n", 
             "\t\t", 
             RowBox[{
              RowBox[{"Length", "[", "j", "]"}], ">", "1"}], ",", " ", 
             RowBox[{"(*", " ", 
              RowBox[{">", 
               RowBox[{"1", " ", "extensive", " ", "component"}]}], " ", 
              "*)"}], "\n", "\t", "\n", "\t\t", 
             RowBox[{"(*", " ", 
              RowBox[{"calculate", " ", "eigenvalues"}], " ", "*)"}], "\n", 
             "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MatrixQ", "[", 
                    RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}], "[", 
                 
                 RowBox[{"j", "/.", "qsssubs"}], "]"}], ",", "\n", "\t\t\t", 
                RowBox[{"(*", " ", 
                 RowBox[{"numerical", " ", "jacobian"}], " ", "*)"}], "\n", 
                "\t\t\t", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{"verbose", ",", 
                   RowBox[{"Print", "[", 
                    RowBox[{"func", ",", "\"\<: numerical Jacobian\>\""}], 
                    "]"}]}], "]"}], ";", "\n", "\t\t\t", "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"rv", ",", "\n", "\t\t\t\t", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "eval", "}"}], ",", 
                    RowBox[{"{", "evec", "}"}]}], "}"}], "=", 
                    RowBox[{"SortedEigensystem", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"j", "/.", "qsssubs"}], "]"}], ",", "1", ",", 
                    RowBox[{"Sequence", "@@", "eigensystemopts"}]}], "]"}]}], 
                   ",", "\n", "\t\t\t\t", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "eval", "}"}], ",", 
                    RowBox[{"{", "evec", "}"}]}], "}"}], "=", 
                    RowBox[{"SortedEigensystem", "[", 
                    RowBox[{
                    RowBox[{"j", "/.", "qsssubs"}], ",", "1", ",", 
                    RowBox[{"Sequence", "@@", "eigensystemopts"}]}], 
                    "]"}]}]}], "\n", "\t\t\t", "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"evec", "=", 
                  RowBox[{"evec", "/", 
                   RowBox[{"Sign", "[", 
                    RowBox[{
                    "evec", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}]}]}]}], "\n", "\t\t", ",",
                 "\n", "\t\t\t", 
                RowBox[{"(*", " ", 
                 RowBox[{"symbolic", " ", "jacobian"}], " ", "*)"}], "\n", 
                "\t\t\t", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{"verbose", ",", 
                   RowBox[{"Print", "[", 
                    RowBox[{"func", ",", "\"\<: symbolic Jacobian\>\""}], 
                    "]"}]}], "]"}], ";", "\n", "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"j", "/.", "qsssubs"}], "]"}], "\[Equal]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], ",", "\n", "\t\t\t\t", 
                   RowBox[{
                    RowBox[{"eval", "=", 
                    RowBox[{"Simplify", "[", 
                    RowBox[{"Re", "[", 
                    RowBox[{
                    RowBox[{"1", "/", "2"}], "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "+", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "^", 
                    "2"}], "+", 
                    RowBox[{"4", 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], "-", 
                    RowBox[{"2", 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], "+", 
                    RowBox[{
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "^", 
                    "2"}]}], "]"}]}], ")"}]}], "]"}], "]"}]}], ";", "\n", 
                    "\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{"rv", ",", "\n", "\t\t\t\t\t", 
                    RowBox[{"evec", "=", 
                    RowBox[{"Simplify", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "+", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "^", 
                    "2"}], "+", 
                    RowBox[{"4", 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], "-", 
                    RowBox[{"2", 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], "+", 
                    RowBox[{
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "^", 
                    "2"}]}], "]"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
                    ")"}]}], ",", "1"}], "}"}], "]"}]}], ",", "\n", 
                    "\t\t\t\t\t", 
                    RowBox[{"evec", "=", 
                    RowBox[{"Simplify", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "+", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "^", 
                    "2"}], "+", 
                    RowBox[{"4", 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], "-", 
                    RowBox[{"2", 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], "+", 
                    RowBox[{
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "^", 
                    "2"}]}], "]"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                    ")"}]}], ",", "1"}], "}"}], "]"}]}]}], "\n", "\t\t\t\t", 
                    "]"}]}], "\n", "\t\t\t", ",", "\n", "\t\t\t\t", 
                   RowBox[{
                    RowBox[{"eval", "=", 
                    RowBox[{"Max", "[", 
                    RowBox[{"Re", "[", 
                    RowBox[{"Eigenvalues", "[", 
                    RowBox[{
                    RowBox[{"j", "/.", "qsssubs"}], ",", 
                    RowBox[{"Sequence", "@@", "eigensystemopts"}]}], "]"}], 
                    "]"}], "]"}]}], ";", "\n", "\t\t\t\t", 
                    RowBox[{"evec", "=", "\"\<?\>\""}], ";", "\n", "\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", "frominv"}], ",", 
                    RowBox[{"Message", "[", 
                    RowBox[{"InvSPS", "::", "nosymev"}], "]"}]}], "]"}], 
                    ";"}]}], "\n", "\t\t\t", "]"}], ";"}]}], "\n", "\t\t", 
               "]"}], ";"}]}], "\n", "\t", "]"}], ";", "\n", "\t", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"add", " ", "[", "t", "]"}], " ", "to", " ", 
             "InterpolatingFunctions", " ", 
             RowBox[{"(", 
              RowBox[{"but", " ", "not", " ", "ones", " ", 
               RowBox[{"with", " ", "[", "var", "]"}]}], ")"}]}], " ", "*)"}],
            "\n", "\t", 
           RowBox[{"eval", "=", 
            RowBox[{
             RowBox[{"eval", "/.", 
              RowBox[{"x_InterpolatingFunction", "\[Rule]", 
               RowBox[{"x", "[", "t", "]"}]}]}], "/.", 
             RowBox[{
              RowBox[{
               RowBox[{"x_InterpolatingFunction", "[", "t", "]"}], "[", 
               "var_", "]"}], "\[Rule]", 
              RowBox[{"x", "[", "var", "]"}]}]}]}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: eigenvalue=\>\"", ",", "eval"}], 
              "]"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: eigenvector=\>\"", ",", "evec"}], 
              "]"}]}], "]"}], ";", "\n", "\t", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{"return", " ", "answer"}], " ", "*)"}], "\n", "\t", 
           RowBox[{"Quiet", "[", 
            RowBox[{
             RowBox[{"Which", "[", "\n", "\t\t", 
              RowBox[{
               RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], 
               ",", "\n", "\t\t", 
               RowBox[{"Which", "[", "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"simplifyresult", "===", "True"}], ",", "\n", 
                 "\t\t\t", 
                 RowBox[{"Return", "[", 
                  RowBox[{"Simplify", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"eval", ",", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{"Rule", "[", 
                    RowBox[{"invunks", ",", "evec"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "qsssol", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "simplifyopts"}], "]"}]}], 
                   "]"}], "]"}], "\n", "\t\t", ",", "\n", "\t\t\t", 
                 RowBox[{"simplifyresult", "===", "Real"}], ",", "\n", 
                 "\t\t\t", 
                 RowBox[{"Return", "[", 
                  RowBox[{"RealSimplify", "[", 
                   RowBox[{"{", 
                    RowBox[{"eval", ",", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{"Rule", "[", 
                    RowBox[{"invunks", ",", "evec"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "qsssol", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], "]"}]}], "}"}], "]"}],
                   "]"}], "\n", "\t\t", ",", "\n", "\t\t\t", 
                 RowBox[{"simplifyresult", "===", "Full"}], ",", "\n", 
                 "\t\t\t", 
                 RowBox[{"Return", "[", 
                  RowBox[{"FullSimplify", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"eval", ",", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{"Rule", "[", 
                    RowBox[{"invunks", ",", "evec"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "qsssol", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "simplifyopts"}], "]"}]}], 
                   "]"}], "]"}], "\n", "\t\t", ",", "\n", "\t\t\t", "Else", 
                 ",", "\n", "\t\t\t", 
                 RowBox[{"Return", "[", 
                  RowBox[{"{", 
                   RowBox[{"eval", ",", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{"Rule", "[", 
                    RowBox[{"invunks", ",", "evec"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "qsssol", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], "]"}]}], "}"}], 
                  "]"}]}], "\n", "\t\t", "]"}], "\n", "\t", ",", "\n", "\t\t", 
               RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], ",",
                "\n", "\t\t", 
               RowBox[{"Which", "[", "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"simplifyresult", "===", "True"}], ",", "\n", 
                 "\t\t\t", 
                 RowBox[{"Return", "[", 
                  RowBox[{"Simplify", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Log", "@", 
                    RowBox[{"Max", "@", 
                    RowBox[{"Chop", "@", 
                    RowBox[{"ComplexExpand", "[", "eval", "]"}]}]}]}], "/.", 
                    "SimplifyLogE"}], ",", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{"Rule", "[", 
                    RowBox[{"invunks", ",", "evec"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "qsssol", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "simplifyopts"}], "]"}]}], 
                   "]"}], "]"}], "\n", "\t\t", ",", "\n", "\t\t\t", 
                 RowBox[{"simplifyresult", "===", "Full"}], ",", "\n", 
                 "\t\t\t", 
                 RowBox[{"Return", "[", 
                  RowBox[{"FullSimplify", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Log", "@", 
                    RowBox[{"Max", "@", 
                    RowBox[{"Chop", "@", 
                    RowBox[{"ComplexExpand", "[", "eval", "]"}]}]}]}], "/.", 
                    "SimplifyLogE"}], ",", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{"Rule", "[", 
                    RowBox[{"invunks", ",", "evec"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "qsssol", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "simplifyopts"}], "]"}]}], 
                   "]"}], "]"}], "\n", "\t\t", ",", "\n", "\t\t\t", "Else", 
                 ",", "\n", "\t\t\t", 
                 RowBox[{"Return", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Log", "@", 
                    RowBox[{"Max", "@", 
                    RowBox[{"Chop", "@", 
                    RowBox[{"ComplexExpand", "[", "eval", "]"}]}]}]}], ")"}], 
                    "/.", "SimplifyLogE"}], ",", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{"Rule", "[", 
                    RowBox[{"invunks", ",", "evec"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "qsssol", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], "]"}]}], "}"}], 
                  "]"}]}], "\n", "\t\t", "]"}]}], "\n", "\t\t", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Return", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Simplify", "[", 
                    RowBox[{
                    RowBox[{"Log", "@", 
                    RowBox[{"Max", "@", 
                    RowBox[{"Chop", "@", 
                    RowBox[{"ComplexExpand", "[", "eval", "]"}]}]}]}], ",", 
                    RowBox[{"Assumptions", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", "\[Element]", "Reals"}], "}"}]}]}], "]"}], 
                   ",", "evec"}], "}"}], "]"}], ";"}], "*)"}], "\n", "\t", 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Simplify", "::", "time"}], ",", 
               RowBox[{"Simplify", "::", "gtime"}]}], "}"}]}], "]"}], ";"}]}],
          "\n", "\n", "]"}], ";"}]}], "\n", "\n", "]"}]}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.6878814530612164`*^9, 3.687881459029211*^9}, 
   3.688409484640422*^9, {3.688571689397046*^9, 3.688571690825296*^9}, {
   3.688571761454454*^9, 3.688571766894099*^9}, {3.688571806477584*^9, 
   3.688571807093449*^9}, {3.68858564717404*^9, 3.688585647465419*^9}, {
   3.6886005937624617`*^9, 3.688600599344365*^9}, {3.6886006312291927`*^9, 
   3.688600698163389*^9}, {3.688600839424646*^9, 3.688600882537201*^9}, {
   3.688600946822866*^9, 3.6886012151088057`*^9}, {3.6886012788170137`*^9, 
   3.688601621387375*^9}, {3.688602281920051*^9, 3.688602326207733*^9}, {
   3.688634513176991*^9, 3.688634527452525*^9}, {3.688634700078339*^9, 
   3.688634757532742*^9}, {3.688634788041438*^9, 3.6886348053715677`*^9}, {
   3.6886352292635736`*^9, 3.688635255814289*^9}, {3.688635594065608*^9, 
   3.688635600320648*^9}, {3.688635814538501*^9, 3.688635824778554*^9}, {
   3.6886359118999434`*^9, 3.688635976865841*^9}, {3.690415248173037*^9, 
   3.6904152533250093`*^9}, {3.690415287158764*^9, 3.690415287600669*^9}, {
   3.691279566060156*^9, 3.691279568776309*^9}, {3.691279609549879*^9, 
   3.6912796099585867`*^9}, {3.693869696903449*^9, 3.693869717645493*^9}, {
   3.6938700625433064`*^9, 3.6938700625784483`*^9}, {3.695323027581709*^9, 
   3.695323030153614*^9}, {3.695323115907778*^9, 3.6953231308707933`*^9}, {
   3.695323170665751*^9, 3.695323298041304*^9}, {3.6954010129148617`*^9, 
   3.69540101576901*^9}, {3.696151024755258*^9, 3.696151024783676*^9}, {
   3.6962438600404997`*^9, 3.696243864427133*^9}, {3.696243930371049*^9, 
   3.696243983881353*^9}, {3.696245031328796*^9, 3.6962451380575943`*^9}, {
   3.6962451898919907`*^9, 3.69624526370936*^9}, {3.69635084994144*^9, 
   3.6963508923755207`*^9}, {3.696589491140443*^9, 3.696589492017684*^9}, {
   3.696635304583791*^9, 3.696635310277787*^9}, {3.696635741203932*^9, 
   3.69663576901819*^9}, {3.696635884051202*^9, 3.6966358928200483`*^9}, {
   3.696636035632012*^9, 3.6966360365972548`*^9}, {3.696636274982386*^9, 
   3.6966362864734697`*^9}, 3.6966704708232193`*^9, {3.69667390793519*^9, 
   3.696673927503748*^9}, {3.7068781651924562`*^9, 3.706878235494446*^9}, {
   3.7068792489855013`*^9, 3.706879266204844*^9}, {3.7068877444832077`*^9, 
   3.7068877760764093`*^9}, {3.7068878882776814`*^9, 3.706887905974201*^9}, 
   3.7085836823668222`*^9, 3.708583763646399*^9, {3.7085841841719646`*^9, 
   3.708584206316938*^9}, 3.708588860333473*^9, {3.70858916671024*^9, 
   3.708589202519938*^9}, {3.7085893021802273`*^9, 3.708589315612636*^9}, {
   3.708591063845155*^9, 3.7085910658322077`*^9}, {3.708591245794922*^9, 
   3.7085912460760937`*^9}, {3.708591380670972*^9, 3.708591380949483*^9}, {
   3.708598820535036*^9, 3.70859882781212*^9}, {3.708600763621395*^9, 
   3.708600764165084*^9}, {3.708601784000189*^9, 3.708601786032292*^9}, {
   3.708790867457788*^9, 3.708790898291366*^9}, {3.708791827546488*^9, 
   3.708791829516082*^9}, {3.7087919336126623`*^9, 3.708791968187175*^9}, {
   3.708792274684011*^9, 3.708792291321559*^9}, {3.708792447708539*^9, 
   3.708792453852357*^9}, {3.708792577997967*^9, 3.708792618835338*^9}, {
   3.70883468035146*^9, 3.708834684079401*^9}, {3.708836320277334*^9, 
   3.70883633586495*^9}, {3.708836381978725*^9, 3.70883638515117*^9}, {
   3.708836470351975*^9, 3.708836475167385*^9}, {3.708838279169799*^9, 
   3.708838281099362*^9}, {3.708858421899661*^9, 3.7088584235402718`*^9}, {
   3.708860963598968*^9, 3.70886097156917*^9}, {3.7088611569112597`*^9, 
   3.7088611597246313`*^9}, {3.708862262844946*^9, 3.708862269481358*^9}, {
   3.7093367750780563`*^9, 3.7093367758452272`*^9}, {3.710105980388741*^9, 
   3.710105984051982*^9}, 3.710240068675582*^9, 3.7102556506092176`*^9, {
   3.710256150476164*^9, 3.71025620391125*^9}, {3.710324401425747*^9, 
   3.710324447588081*^9}, {3.71155589116364*^9, 3.711555985176107*^9}, {
   3.7115566238606167`*^9, 3.711556627043132*^9}, {3.711557602598812*^9, 
   3.711557604357217*^9}, {3.711557661500011*^9, 3.7115577194107943`*^9}, {
   3.711557767697157*^9, 3.7115577975513906`*^9}, {3.711557831927297*^9, 
   3.7115578471361513`*^9}, {3.711558045636963*^9, 3.711558061668116*^9}, {
   3.711558092582246*^9, 3.7115581341517763`*^9}, {3.7115824112754993`*^9, 
   3.711582411311132*^9}, 3.711583999822175*^9, {3.712225024865241*^9, 
   3.712225032988276*^9}, {3.7122250878307753`*^9, 3.712225089625269*^9}, {
   3.712225482060203*^9, 3.712225512966757*^9}, {3.712225637901976*^9, 
   3.712225643670443*^9}, {3.712225714257094*^9, 3.71222572595395*^9}, {
   3.7122257751921577`*^9, 3.7122257936310463`*^9}, {3.712225826818993*^9, 
   3.712225831324786*^9}, {3.712251089878093*^9, 3.712251093018529*^9}, {
   3.7122511823979187`*^9, 3.712251253211563*^9}, {3.712251283652198*^9, 
   3.712251287635208*^9}, {3.712251345100946*^9, 3.712251350663987*^9}, {
   3.712251384967402*^9, 3.712251395339054*^9}, {3.712251447380417*^9, 
   3.712251465415732*^9}, 3.712251631877491*^9, 3.712252398248869*^9, 
   3.7122533887729588`*^9, 3.712253516517356*^9, {3.712285782098206*^9, 
   3.7122857906480494`*^9}, {3.712290017246231*^9, 3.71229002073954*^9}, {
   3.721846732714082*^9, 3.7218467348480883`*^9}, {3.721847228486465*^9, 
   3.7218472765864983`*^9}, {3.7218473449002028`*^9, 3.721847360878599*^9}, {
   3.721847418022916*^9, 3.7218474810188217`*^9}, {3.721847684614305*^9, 
   3.721847724073641*^9}, {3.721847790182469*^9, 3.721847796078249*^9}, {
   3.7218478731983852`*^9, 3.72184789282588*^9}, {3.721848008025207*^9, 
   3.721848014792354*^9}, {3.721848048457597*^9, 3.72184806136756*^9}, {
   3.721848667381414*^9, 3.7218487283495626`*^9}, {3.721849068042777*^9, 
   3.721849095834796*^9}, {3.721849684095488*^9, 3.7218496891611357`*^9}, {
   3.722086407112711*^9, 3.7220866378403797`*^9}, {3.724894963404118*^9, 
   3.7248949706802073`*^9}, {3.72489624507312*^9, 3.724896346910398*^9}, {
   3.724896382898333*^9, 3.724896399430287*^9}, {3.72489679149034*^9, 
   3.724896799771542*^9}, 3.7248968556917887`*^9, {3.724897285403802*^9, 
   3.724897290669362*^9}, {3.72489737560257*^9, 3.724897380439896*^9}, {
   3.724897721114491*^9, 3.7248977514027567`*^9}, {3.724897801026354*^9, 
   3.724897802772031*^9}, {3.7248981463668003`*^9, 3.724898172234021*^9}, 
   3.724898218333362*^9, {3.7249309588717337`*^9, 3.724930973653968*^9}, {
   3.724931004026593*^9, 3.7249310057293997`*^9}, 3.724931385983552*^9, {
   3.724936849861724*^9, 3.7249368583562307`*^9}, {3.724937104169401*^9, 
   3.724937106438231*^9}, {3.7249371850031643`*^9, 3.7249372269152927`*^9}, 
   3.724937906783259*^9, {3.724944230069344*^9, 3.724944237623825*^9}, {
   3.7249453731137543`*^9, 3.724945378497714*^9}, 3.7249468982419577`*^9, {
   3.724947302963138*^9, 3.724947304548771*^9}, 3.7249481139682713`*^9, {
   3.724948459574916*^9, 3.72494846827076*^9}, {3.724948558950974*^9, 
   3.72494856111795*^9}, {3.724948619260332*^9, 3.7249486232929068`*^9}, {
   3.7249491115112143`*^9, 3.724949122344922*^9}, 3.724949541476694*^9, 
   3.724949588651401*^9, {3.724949682076208*^9, 3.724949691599144*^9}, {
   3.724949822029698*^9, 3.724949825188439*^9}, 3.724950015597292*^9, {
   3.72495006123518*^9, 3.724950088150565*^9}, {3.724950211509633*^9, 
   3.724950219501894*^9}, {3.72495251957504*^9, 3.7249525427007103`*^9}, {
   3.7249534297647753`*^9, 3.724953444505563*^9}, {3.7249534955810843`*^9, 
   3.724953509200018*^9}, {3.724953627838616*^9, 3.724953628260701*^9}, {
   3.724953679208778*^9, 3.72495373020297*^9}, {3.7249538230130444`*^9, 
   3.7249538233245087`*^9}, {3.724954115662263*^9, 3.724954116056861*^9}, {
   3.7249550162875233`*^9, 3.724955025887974*^9}, {3.724955161923788*^9, 
   3.7249551835136127`*^9}, {3.724958432546207*^9, 3.724958465175715*^9}, {
   3.725054397422452*^9, 3.7250544438083143`*^9}, {3.7250548357655993`*^9, 
   3.725054920716441*^9}, {3.72505519599482*^9, 3.725055198806883*^9}, {
   3.725055680078176*^9, 3.725055683991456*^9}, {3.725055753424243*^9, 
   3.725055864061583*^9}, {3.725056363612012*^9, 3.7250563642489567`*^9}, {
   3.725056400028223*^9, 3.7250564220133553`*^9}, {3.725057253053226*^9, 
   3.7250572947110233`*^9}, {3.725057333989949*^9, 3.725057400668687*^9}, {
   3.725057439563181*^9, 3.725057464610834*^9}, {3.725057607276643*^9, 
   3.725057611281467*^9}, {3.7250576725050364`*^9, 3.7250578180301228`*^9}, {
   3.725057864315455*^9, 3.7250578661412086`*^9}, {3.725057961173781*^9, 
   3.7250580280236387`*^9}, {3.7250581843063107`*^9, 3.725058221651031*^9}, {
   3.7250584426322927`*^9, 3.725058503635702*^9}, {3.725058581601273*^9, 
   3.72505860112291*^9}, {3.7250586529923477`*^9, 3.725058659605423*^9}, {
   3.72505908627034*^9, 3.7250590982204323`*^9}, {3.725059191500366*^9, 
   3.725059227097763*^9}, {3.7250592810539427`*^9, 3.7250593038300037`*^9}, {
   3.72505970189467*^9, 3.725059818484416*^9}, {3.7250599466164417`*^9, 
   3.725060154352461*^9}, {3.7250602122693996`*^9, 3.725060365421627*^9}, {
   3.7250614896373463`*^9, 3.725061537028419*^9}, {3.725061690110983*^9, 
   3.725061697915103*^9}, {3.725061916295128*^9, 3.7250619179885473`*^9}, {
   3.7250619957859583`*^9, 3.72506206757582*^9}, {3.7250621430961027`*^9, 
   3.725062158210848*^9}, {3.725063754952601*^9, 3.725063764958571*^9}, 
   3.7251176379021597`*^9, {3.7251397332641897`*^9, 3.7251397347564087`*^9}, {
   3.725140958287973*^9, 3.725140958309791*^9}, {3.725141747095838*^9, 
   3.725141755601676*^9}, {3.7251419240702353`*^9, 3.725141932921267*^9}, 
   3.7251419653788*^9, {3.725142717513155*^9, 3.7251427475087843`*^9}, {
   3.725142933649238*^9, 3.725142976148868*^9}, 3.725143060180385*^9, {
   3.725143146648068*^9, 3.7251431581723547`*^9}, {3.7251432256578627`*^9, 
   3.725143292402075*^9}, {3.725143333528575*^9, 3.725143339556197*^9}, {
   3.7251433768045273`*^9, 3.725143377155958*^9}, {3.725143987168393*^9, 
   3.725144001491878*^9}, {3.725144059285512*^9, 3.725144080257326*^9}, 
   3.725144294528994*^9, {3.725144573252809*^9, 3.7251446116229353`*^9}, {
   3.7251456923873997`*^9, 3.72514573685854*^9}, {3.725145778762312*^9, 
   3.725145778968948*^9}, {3.725145811799171*^9, 3.725145814434285*^9}, {
   3.725145856743083*^9, 3.7251458920083714`*^9}, {3.7251459405941133`*^9, 
   3.725145955810549*^9}, {3.725146043230147*^9, 3.72514604854138*^9}, {
   3.7251461861798077`*^9, 3.7251461879116898`*^9}, {3.727097589052609*^9, 
   3.727097595806684*^9}, {3.7270976783929358`*^9, 3.727097706775076*^9}, {
   3.727912196824891*^9, 3.727912237436054*^9}, {3.7279124085346107`*^9, 
   3.727912473508869*^9}, {3.728656719834984*^9, 3.728656727107768*^9}, {
   3.728657171319549*^9, 3.728657213564637*^9}, {3.72869231480317*^9, 
   3.7286923183962297`*^9}, {3.728692378871649*^9, 3.728692384732163*^9}, {
   3.729513770378294*^9, 3.72951378731459*^9}, {3.729514042054036*^9, 
   3.729514080955069*^9}, {3.72955940410349*^9, 3.729559458094069*^9}, {
   3.729594289109133*^9, 3.729594332252729*^9}, {3.7295944019619226`*^9, 
   3.7295944067213163`*^9}, {3.729594465505767*^9, 3.7295945717385807`*^9}, {
   3.729594645576379*^9, 3.729594677340584*^9}, {3.729594732109869*^9, 
   3.7295947375741997`*^9}, {3.729594807046207*^9, 3.729594807853174*^9}, {
   3.7295949324211283`*^9, 3.729594954569027*^9}, {3.7295951493727217`*^9, 
   3.7295951875645847`*^9}, {3.729595325550365*^9, 3.729595339487381*^9}, {
   3.7295954246468973`*^9, 3.729595499582233*^9}, {3.729595586990611*^9, 
   3.729595632278235*^9}, {3.729595728072545*^9, 3.729595779020027*^9}, {
   3.7295960509375772`*^9, 3.7295961863563833`*^9}, 3.729596268258312*^9, {
   3.7295965653140593`*^9, 3.72959657083177*^9}, {3.7295966219164762`*^9, 
   3.729596635444439*^9}, {3.729596756019528*^9, 3.729596810069412*^9}, {
   3.729596874223288*^9, 3.7295969042845163`*^9}, {3.7295969537427807`*^9, 
   3.729597018105411*^9}, {3.729597048280079*^9, 3.7295970581244097`*^9}, {
   3.729597148305924*^9, 3.729597240725258*^9}, {3.729597275549621*^9, 
   3.7295972757106524`*^9}, {3.7295973562556953`*^9, 
   3.7295973721189013`*^9}, {3.729597440676573*^9, 3.729597574715151*^9}, {
   3.7295976199118843`*^9, 3.729597654378607*^9}, {3.7295983620659122`*^9, 
   3.729598392993102*^9}, {3.7295985386309032`*^9, 3.7295985738859453`*^9}, {
   3.7295988956260233`*^9, 3.7295990637674303`*^9}, {3.729599155104938*^9, 
   3.729599176032815*^9}, 3.729599243331648*^9, {3.7296033897691793`*^9, 
   3.729603389923201*^9}, {3.729603501206024*^9, 3.72960353149771*^9}, {
   3.729604305183064*^9, 3.729604317140976*^9}, {3.7296103354353724`*^9, 
   3.729610339525629*^9}, {3.729610517134734*^9, 3.729610530690641*^9}, 
   3.7296150838880863`*^9, {3.729615988517774*^9, 3.729615999717455*^9}, 
   3.72961603853511*^9, {3.7296162256493893`*^9, 3.7296163243849697`*^9}, {
   3.7296163719556913`*^9, 3.729616376504467*^9}, {3.729616415918496*^9, 
   3.72961647944969*^9}, {3.729617023346212*^9, 3.729617023485174*^9}, 
   3.7296175219239063`*^9, {3.729617653887641*^9, 3.729617658893503*^9}, {
   3.729618581753636*^9, 3.7296186152379*^9}, {3.7340101284760523`*^9, 
   3.7340101305858297`*^9}, {3.734010165337365*^9, 3.734010251587131*^9}, {
   3.734010291926464*^9, 3.7340102952374897`*^9}, {3.734010386548648*^9, 
   3.73401041215889*^9}, {3.734011232924431*^9, 3.734011240150141*^9}, {
   3.734012879135439*^9, 3.734012913688026*^9}, {3.734012982044553*^9, 
   3.7340129943068247`*^9}, 3.734013096524029*^9, {3.7340131690664186`*^9, 
   3.7340131981712093`*^9}, {3.734013511022821*^9, 3.734013521749942*^9}, {
   3.734013605907933*^9, 3.7340136100740633`*^9}, {3.7340141759332323`*^9, 
   3.734014188225356*^9}, {3.7340143577709627`*^9, 3.734014360086828*^9}, {
   3.734014448097741*^9, 3.7340145092732677`*^9}, {3.7340148322278147`*^9, 
   3.734014836714177*^9}, {3.73402596958304*^9, 3.7340259786918783`*^9}, {
   3.7340261751278553`*^9, 3.73402618017303*^9}, 3.734132068178685*^9, {
   3.7341322388730307`*^9, 3.7341322890996304`*^9}, {3.734134546067463*^9, 
   3.734134549774335*^9}, {3.7341346067358713`*^9, 3.734134641598106*^9}, {
   3.734134776316028*^9, 3.7341347783796587`*^9}, {3.734135718232538*^9, 
   3.7341357231154423`*^9}, {3.734135838037902*^9, 3.734135843646873*^9}, 
   3.734135950687872*^9, {3.736158498696125*^9, 3.736158506912806*^9}, {
   3.736158542171611*^9, 3.736158542445427*^9}, {3.736158628378615*^9, 
   3.736158653850081*^9}, {3.747144029372908*^9, 3.747144034680372*^9}, {
   3.747145223982256*^9, 3.747145252270488*^9}, {3.7471455333311977`*^9, 
   3.747145535535638*^9}, 3.7471461627053537`*^9, 3.7471467767012043`*^9, {
   3.747146816988888*^9, 3.747146831993836*^9}, {3.747146894074462*^9, 
   3.747146909025271*^9}, {3.747147275757674*^9, 3.747147278802659*^9}, 
   3.747147863091024*^9, 3.7471539588876877`*^9, 3.7471574006739273`*^9, {
   3.7471686871316357`*^9, 3.747168736983862*^9}, {3.7471688657626143`*^9, 
   3.747168885863797*^9}, {3.747170672073535*^9, 3.747170690062704*^9}, {
   3.747171363124967*^9, 3.7471713819445257`*^9}, {3.7471715338120728`*^9, 
   3.747171613428433*^9}, {3.7471716872529593`*^9, 3.747171690138596*^9}, {
   3.747171736504562*^9, 3.7471717384401703`*^9}, {3.747172158732071*^9, 
   3.747172165598105*^9}, {3.7471722107553577`*^9, 3.7471722109223957`*^9}, {
   3.7471765463906384`*^9, 3.7471765653881474`*^9}, {3.747176685011712*^9, 
   3.7471767331186047`*^9}, {3.747177019389319*^9, 3.747177031701782*^9}, {
   3.755278896187661*^9, 3.7552789269892*^9}, {3.755279350552494*^9, 
   3.755279370882978*^9}, {3.7552795546763353`*^9, 3.7552795608292503`*^9}, 
   3.7552796072557364`*^9, {3.75529114856117*^9, 3.7552911581460657`*^9}, 
   3.755306034643724*^9, {3.7553463013554907`*^9, 3.755346311973337*^9}, {
   3.755349666590042*^9, 3.755349717100543*^9}, {3.755353899999289*^9, 
   3.755353902967667*^9}, {3.755820397233012*^9, 3.755820403825347*^9}, 
   3.7558758511945868`*^9, {3.758387029826146*^9, 3.75838702996*^9}, {
   3.758389525229128*^9, 3.75838954919296*^9}, {3.758518235145632*^9, 
   3.75851823803001*^9}, {3.7585183808010263`*^9, 3.758518421145329*^9}, {
   3.7585185528192587`*^9, 3.758518575180735*^9}, {3.758522810199552*^9, 
   3.758522810843104*^9}, 3.7585230757509527`*^9, {3.759938322157547*^9, 
   3.75993837823501*^9}, {3.759938934618993*^9, 3.759938982692645*^9}, {
   3.7599395374114733`*^9, 3.759939577179381*^9}, {3.759939625688222*^9, 
   3.759939625800737*^9}, {3.7599889110702953`*^9, 3.759988918490953*^9}, {
   3.759988957278192*^9, 3.7599889726776667`*^9}, 3.759989022557111*^9, {
   3.7601067403643723`*^9, 3.7601067583268642`*^9}, {3.7601069978996162`*^9, 
   3.7601070145227213`*^9}, {3.760548881445921*^9, 3.760548884035714*^9}, {
   3.7605494235891523`*^9, 3.760549423720825*^9}, {3.760549926190629*^9, 
   3.760549934561512*^9}, {3.760551464733691*^9, 3.7605514647583847`*^9}, {
   3.760696561034851*^9, 3.7606965671360073`*^9}, {3.7606967986684513`*^9, 
   3.760696829640091*^9}, {3.760697376842924*^9, 3.7606973820683517`*^9}, {
   3.760697777477789*^9, 3.760697778195086*^9}, {3.760697814588378*^9, 
   3.7606978510588923`*^9}, {3.760697881687745*^9, 3.7606979345299387`*^9}, {
   3.760700400401403*^9, 3.760700478714512*^9}, {3.760700693616529*^9, 
   3.76070071810706*^9}, {3.760701222173935*^9, 3.760701260554118*^9}, {
   3.7607016802234097`*^9, 3.760701687154376*^9}, {3.76070179696428*^9, 
   3.760701798060709*^9}, {3.76070186349358*^9, 3.760701961903002*^9}, {
   3.760702576963838*^9, 3.760702584283348*^9}, {3.76070337696891*^9, 
   3.760703391752372*^9}, {3.760722363859289*^9, 3.760722368021722*^9}, {
   3.760722431171774*^9, 3.760722440924383*^9}, {3.760722478320903*^9, 
   3.760722510598741*^9}, {3.7607648675952587`*^9, 3.760764867765304*^9}, {
   3.7607686018223352`*^9, 3.760768604676464*^9}, {3.7607687288102837`*^9, 
   3.760768769520914*^9}, {3.7607688721057787`*^9, 3.760768896509675*^9}, {
   3.760768926930244*^9, 3.7607689275008163`*^9}, {3.760769397456814*^9, 
   3.76076941121023*^9}, {3.760769516351008*^9, 3.760769703621046*^9}, {
   3.760769851625174*^9, 3.7607698618422003`*^9}, 3.7607699104096622`*^9, {
   3.760770079153038*^9, 3.760770178777486*^9}, {3.7607718212092867`*^9, 
   3.760771832182325*^9}, {3.7607989596997623`*^9, 3.760798992367815*^9}, 
   3.760799188675095*^9, {3.7609331659103413`*^9, 3.760933205146439*^9}, {
   3.7609347360283213`*^9, 3.760934760365431*^9}, {3.76093482112388*^9, 
   3.760934844031024*^9}, {3.7609349985021563`*^9, 3.760935002243771*^9}, 
   3.761377923954874*^9, 3.762241302882955*^9, {3.7622515781171007`*^9, 
   3.762251592895906*^9}, {3.76233539528564*^9, 3.762335397522048*^9}, 
   3.762336232395521*^9, {3.7623362808130713`*^9, 3.7623362976808662`*^9}, {
   3.762337059502569*^9, 3.7623370824887943`*^9}, {3.762337115660309*^9, 
   3.7623371296209087`*^9}, {3.762419273943388*^9, 3.7624192793336678`*^9}, {
   3.762419386913862*^9, 3.76241938960533*^9}, {3.762420136062934*^9, 
   3.762420145658134*^9}, {3.7695218187384787`*^9, 3.76952181875941*^9}, {
   3.769527429311975*^9, 3.769527429330398*^9}, 3.769760705662486*^9, {
   3.7700209576886673`*^9, 3.770020985614161*^9}, 3.770438265131528*^9, {
   3.770721442018847*^9, 3.770721442987813*^9}, {3.7826298860039873`*^9, 
   3.782629890924718*^9}, {3.782630070615539*^9, 3.782630082455449*^9}, {
   3.7826301313464003`*^9, 3.7826301784323378`*^9}, {3.782630223358363*^9, 
   3.782630226204801*^9}, {3.7826304135692*^9, 3.782630461795526*^9}, {
   3.782630761882689*^9, 3.782630782336136*^9}, {3.782641809467021*^9, 
   3.782641831373616*^9}, {3.782641880408909*^9, 3.78264190127807*^9}, {
   3.7829238139754744`*^9, 3.782923817336972*^9}, {3.782923923162446*^9, 
   3.7829239242519283`*^9}, {3.782925471667347*^9, 3.782925491609743*^9}, 
   3.782925665157792*^9, 3.78292752876509*^9, {3.782927904730826*^9, 
   3.7829279185544863`*^9}, 3.782928089817967*^9, {3.7829707596046762`*^9, 
   3.782970764722261*^9}, {3.782971630143333*^9, 3.782971635013075*^9}, 
   3.7829718466723337`*^9, {3.782975262439142*^9, 3.782975277895562*^9}, {
   3.782976362182506*^9, 3.7829763948667507`*^9}, {3.782977217744124*^9, 
   3.782977247083667*^9}, 3.782977775822996*^9, {3.78297796579981*^9, 
   3.782978086164468*^9}, {3.782978190059228*^9, 3.7829781961392097`*^9}, {
   3.782978226363947*^9, 3.7829782404263773`*^9}, {3.782991063225492*^9, 
   3.7829910962693977`*^9}, {3.782991165160935*^9, 3.7829911683762817`*^9}, {
   3.7829975560367117`*^9, 3.7829975800589523`*^9}, {3.782997617547559*^9, 
   3.782997620621705*^9}, {3.786260821399722*^9, 3.786260845328123*^9}, {
   3.794137240818104*^9, 3.7941372409632473`*^9}, {3.798156844907673*^9, 
   3.798156851347983*^9}, {3.7981569112348127`*^9, 3.798156911987565*^9}, {
   3.798195401049066*^9, 3.798195409449396*^9}, {3.798195568007327*^9, 
   3.798195568487651*^9}, {3.798196295637207*^9, 3.798196315672268*^9}, 
   3.7981965690713797`*^9, {3.798199620460494*^9, 3.798199632302986*^9}, {
   3.798199709812948*^9, 3.798199710192531*^9}, {3.7981997627969418`*^9, 
   3.798199762844277*^9}, {3.79820033332309*^9, 3.798200336674116*^9}, {
   3.7982003732894993`*^9, 3.798200382602009*^9}, {3.79820042346211*^9, 
   3.7982004871579523`*^9}, 3.798201268244726*^9, {3.798203053623867*^9, 
   3.798203062814612*^9}, {3.798203135758935*^9, 3.7982031386940937`*^9}, {
   3.798207448481381*^9, 3.798207461432949*^9}, 3.798207547956995*^9, {
   3.7982082156701927`*^9, 3.7982082629594097`*^9}, {3.798208603741054*^9, 
   3.7982086233555193`*^9}, {3.798208811777377*^9, 3.798208833022093*^9}, {
   3.798208995636938*^9, 3.798209010613909*^9}, {3.798209161179708*^9, 
   3.798209206145459*^9}, {3.7982094603972673`*^9, 3.798209468692809*^9}, {
   3.798209539133869*^9, 3.798209573731738*^9}, 3.7982129077211742`*^9, {
   3.7982151005153713`*^9, 3.7982151072214317`*^9}, 3.7982919614123173`*^9, {
   3.79829294862943*^9, 3.798292984353633*^9}, 3.798296389058619*^9, 
   3.799928790141841*^9, {3.799928858502771*^9, 3.7999288659853277`*^9}, {
   3.799931506623604*^9, 3.799931508228924*^9}, {3.799932961947144*^9, 
   3.79993297660797*^9}, {3.799933019796318*^9, 3.7999330265084467`*^9}, {
   3.799933077956767*^9, 3.7999330919930487`*^9}, 3.799942719830414*^9, 
   3.7999427863861103`*^9, {3.799943520323556*^9, 3.7999435584790373`*^9}, {
   3.79994369298711*^9, 3.799943693799287*^9}, {3.799943797829833*^9, 
   3.799943813607025*^9}, 3.7999439849045*^9, 3.799944292278817*^9, 
   3.7999454823460417`*^9, {3.7999457558484383`*^9, 3.7999457569013567`*^9}, 
   3.799962919791649*^9, 3.7999630636367483`*^9, {3.799968683517642*^9, 
   3.799968694109984*^9}, 3.800105000472808*^9, 3.800106440990637*^9, {
   3.800272336834396*^9, 3.800272353682787*^9}, {3.800486629307876*^9, 
   3.800486643885318*^9}, {3.800486682837419*^9, 3.800486746125702*^9}, {
   3.800486782202347*^9, 3.800486834730221*^9}, {3.804272240018694*^9, 
   3.804272304078062*^9}, {3.804272703106121*^9, 3.804272764402001*^9}, {
   3.804272804203004*^9, 3.80427281664205*^9}, 3.8042728716687727`*^9, {
   3.804272908483549*^9, 3.8042729100417757`*^9}, 3.807027358760994*^9, {
   3.8072237309003267`*^9, 3.8072237701151543`*^9}, {3.8072238472009583`*^9, 
   3.80722387167138*^9}, {3.8072241270349407`*^9, 3.807224132324745*^9}, {
   3.80722425386712*^9, 3.80722427966521*^9}, {3.807224341386365*^9, 
   3.8072244085606194`*^9}, {3.8073693428360043`*^9, 3.807369342878565*^9}, {
   3.8073697649431343`*^9, 3.807369792564147*^9}, {3.8151620538884087`*^9, 
   3.8151620588720293`*^9}, {3.8151621350051727`*^9, 3.815162181536875*^9}, {
   3.8151630716218777`*^9, 3.815163076117311*^9}, {3.815163144782303*^9, 
   3.815163149729642*^9}, {3.8151634177091208`*^9, 3.815163423629736*^9}, {
   3.815175679744534*^9, 3.8151756827453127`*^9}, {3.815177834108748*^9, 
   3.815177873402265*^9}, {3.8151780787351847`*^9, 3.815178089669263*^9}, {
   3.815178225628397*^9, 3.815178237499569*^9}, {3.81517833656323*^9, 
   3.815178365673294*^9}, 3.815179137225095*^9, {3.8151791864201813`*^9, 
   3.815179188974773*^9}, 3.815179221716714*^9, {3.818074900339262*^9, 
   3.8180749249287577`*^9}, {3.818074971308323*^9, 3.818075004805872*^9}, {
   3.8180750442583513`*^9, 3.818075073851842*^9}, {3.818075682273247*^9, 
   3.818075749030923*^9}, {3.8180775920235643`*^9, 3.818077620349063*^9}, {
   3.818078947186112*^9, 3.818078965729475*^9}, {3.818079064707149*^9, 
   3.818079066239859*^9}, {3.818079104885991*^9, 3.81807911138704*^9}, 
   3.818079752880993*^9, 3.81807984047358*^9, 3.818079883909567*^9, {
   3.818079941624288*^9, 3.8180799585424967`*^9}, 3.818080097654727*^9, {
   3.818080135736352*^9, 3.818080168898284*^9}, {3.818080204176428*^9, 
   3.8180802047981*^9}, {3.8180806334448547`*^9, 3.818080670892947*^9}, {
   3.818080739627233*^9, 3.818080794229383*^9}, {3.8180845751005096`*^9, 
   3.818084575611706*^9}, {3.81809850801891*^9, 3.818098512272393*^9}, {
   3.818100898166649*^9, 3.8181009364385147`*^9}, {3.818101441015415*^9, 
   3.818101444502326*^9}, 3.818101691326745*^9, {3.818337354159411*^9, 
   3.8183373650857153`*^9}, {3.818337436795965*^9, 3.818337502725955*^9}, {
   3.818337582780389*^9, 3.8183376510969*^9}, {3.818337950052307*^9, 
   3.818338041823009*^9}, {3.818338182061204*^9, 3.818338228910125*^9}, {
   3.8183392235351686`*^9, 3.81833923300922*^9}, {3.8183401675349197`*^9, 
   3.818340184941292*^9}, {3.818340221662571*^9, 3.818340235164455*^9}, {
   3.818341891028228*^9, 3.818341891151876*^9}, {3.8183419300048027`*^9, 
   3.8183419619006453`*^9}, {3.8183420046460752`*^9, 3.8183420698921633`*^9}, 
   3.8183421858253813`*^9, {3.818342311242715*^9, 3.818342317389954*^9}, {
   3.818342430887478*^9, 3.818342439186016*^9}, {3.818342493293241*^9, 
   3.818342495217595*^9}, {3.818342655666395*^9, 3.818342662908546*^9}, {
   3.818342699941195*^9, 3.818342733443768*^9}, {3.819233891013034*^9, 
   3.819233898003693*^9}, {3.819233973882003*^9, 3.819234099301639*^9}, {
   3.819234916975895*^9, 3.8192349196076736`*^9}, {3.8192350029908037`*^9, 
   3.819235010448368*^9}, {3.8192351385872173`*^9, 3.819235145634379*^9}, {
   3.819235186620348*^9, 3.819235228967164*^9}, {3.8192352720661163`*^9, 
   3.8192352832588987`*^9}, {3.8192353451537523`*^9, 3.8192353453206673`*^9}, 
   3.819235496531953*^9, {3.819235574735989*^9, 3.819235588288085*^9}, {
   3.819235697935028*^9, 3.819235791996482*^9}, {3.819235826466062*^9, 
   3.8192358284396553`*^9}, {3.819236051690463*^9, 3.819236101832144*^9}, 
   3.819236188236785*^9, {3.819236261099683*^9, 3.81923629141763*^9}, 
   3.819236344197674*^9, {3.820418536872589*^9, 3.820418548601634*^9}, {
   3.821106511314344*^9, 3.8211065219137774`*^9}, 3.821106838450028*^9, {
   3.821107105816025*^9, 3.821107143099709*^9}, {3.8211305151943607`*^9, 
   3.8211306030789747`*^9}, {3.8211306694366093`*^9, 3.82113070531736*^9}, {
   3.821130745911187*^9, 3.82113075323678*^9}, {3.821130786239786*^9, 
   3.8211307874704447`*^9}, {3.821131084583027*^9, 3.821131100278818*^9}, 
   3.821131139049261*^9, {3.821131205514113*^9, 3.821131222259923*^9}, {
   3.821132537003907*^9, 3.8211325829229403`*^9}, {3.821132630477016*^9, 
   3.821132645357347*^9}, 3.829341514567771*^9, {3.829341580186665*^9, 
   3.829341582377857*^9}, {3.829341714092061*^9, 3.829341719741241*^9}, {
   3.829341845375298*^9, 3.8293418718176622`*^9}, {3.829341959939054*^9, 
   3.829342026893854*^9}, {3.829342065373431*^9, 3.8293420790179243`*^9}, {
   3.829342110005619*^9, 3.829342131343767*^9}, {3.829342177072489*^9, 
   3.829342183919641*^9}, {3.829342456222355*^9, 3.829342488731142*^9}, {
   3.829342530514323*^9, 3.829342533355809*^9}, {3.829342608141734*^9, 
   3.829342639123801*^9}, {3.829342859481179*^9, 3.8293428624894657`*^9}, 
   3.829342916732209*^9, {3.8293439866751013`*^9, 3.829344009039431*^9}, {
   3.829344039051551*^9, 3.829344082939349*^9}, {3.8293441763232603`*^9, 
   3.829344243390686*^9}, 3.829344303788023*^9, 3.829344403844882*^9, {
   3.834154206072094*^9, 3.8341542195263*^9}, {3.834154284716951*^9, 
   3.834154325632207*^9}, {3.8341552153868837`*^9, 
   3.834155241690669*^9}},ExpressionUUID->"de26666d-6328-4a2c-b147-\
7078c1ad31d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.729617010578032*^9, 
  3.7296170112968817`*^9}},ExpressionUUID->"27c89c36-d277-4528-b3ee-\
fab95ab85014"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "InvSPS", "]"}], "=", 
   RowBox[{"{", "\n", 
    RowBox[{
     RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Time", "\[Rule]", "t"}], ",", "\n", 
     RowBox[{"NIntegrateOpts", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Method", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", 
          RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}], 
       "}"}]}], ",", 
     RowBox[{"IntegrateOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"NDSolveOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"SolveOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"NSolveOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"FindRootOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"EigensystemOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"FindEcoCycleOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", 
     RowBox[{"QSSMethod", "\[Rule]", "\"\<NSolve\>\""}], ",", 
     RowBox[{"QSSICs", "\[Rule]", "Automatic"}], ",", "\n", 
     RowBox[{"SimplifyResult", "\[Rule]", "True"}], ",", 
     RowBox[{"SimplifyOpts", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"_", "\[Element]", "Reals"}], ",", 
        RowBox[{"TimeConstraint", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0.1", ",", "1"}], "}"}]}]}], "}"}]}], ",", "\n", 
     RowBox[{"Guild", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"FromInv", "\[Rule]", "False"}], ",", 
     RowBox[{"RV", "\[Rule]", "False"}], ",", "\n", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.687881452780883*^9, {3.6885716890563374`*^9, 3.688571689248247*^9}, 
   3.688585647002344*^9, {3.708792626390346*^9, 3.708792630685244*^9}, {
   3.725059863729673*^9, 3.72505987050301*^9}, {3.725105611681752*^9, 
   3.725105615906698*^9}, {3.725140958258945*^9, 3.725140958266478*^9}, 
   3.7296043469539337`*^9, {3.729616997837974*^9, 3.729616998250029*^9}, {
   3.755278873571705*^9, 3.755278876020795*^9}, {3.7623354131620502`*^9, 
   3.762335419146003*^9}, {3.762419327794929*^9, 3.762419330387999*^9}, {
   3.815177192739409*^9, 3.815177233154305*^9}, {3.8151783052865667`*^9, 
   3.815178311717361*^9}, 3.833983849115903*^9, {3.833983971700892*^9, 
   3.83398397323634*^9}, 3.833985776654958*^9, {3.834154934980075*^9, 
   3.8341549363232393`*^9}, 
   3.83415524691063*^9},ExpressionUUID->"e8f4aa96-dc0a-4de2-ab1a-\
8ec2e3ca415d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",
 CellChangeTimes->{{3.729617017514411*^9, 
  3.7296170191690207`*^9}},ExpressionUUID->"380a1635-530e-475d-b4c5-\
cc1f2f7c7c40"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Inv", "[", "args___", "]"}], ":=", 
   RowBox[{
    RowBox[{"InvSPS", "[", 
     RowBox[{"args", ",", 
      RowBox[{"FromInv", "\[Rule]", "True"}]}], "]"}], "\[LeftDoubleBracket]",
     "1", "\[RightDoubleBracket]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"StablePopulationStructure", "[", "args___", "]"}], ":=", 
   RowBox[{
    RowBox[{"InvSPS", "[", "args", "]"}], "\[LeftDoubleBracket]", "2", 
    "\[RightDoubleBracket]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ReproductiveValues", "[", "args___", "]"}], ":=", 
   RowBox[{
    RowBox[{"InvSPS", "[", 
     RowBox[{"args", ",", 
      RowBox[{"RV", "\[Rule]", "True"}]}], "]"}], "\[LeftDoubleBracket]", "2",
     "\[RightDoubleBracket]"}]}], ";"}]}], "Code",
 CellChangeTimes->{
  3.7296170276678247`*^9, {3.759939822480926*^9, 
   3.759939842487383*^9}},ExpressionUUID->"333fbf6b-fea7-45f6-bc7f-\
4a1b339047c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Messages", "Subsubsection",
 CellChangeTimes->{{3.7695015430177727`*^9, 
  3.769501544073745*^9}},ExpressionUUID->"beaefb72-ad5e-408d-88d2-\
3a22f94c8cde"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InvSPS", "::", "nosymev"}], "=", "\n", 
    "\"\<Warning: don't know how to find analytical StablePopulationStructure \
for > 2x2 matrix.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InvSPS", "::", "unkinv"}], "=", "\n", 
    "\"\<Can't figure out who's invading: please specify.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InvSPS", "::", "nonzero"}], "=", "\n", 
    "\"\<Warning: invasion rate only defined for rare invaders.\>\""}], ";"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InvSPS", "::", "noqsssol"}], "=", "\n", 
    "\"\<Found `1` QSS solutions for invader's Intensive components, need \
one.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InvSPS", "::", "notraits"}], "=", "\n", 
    "\"\<Trait of invader not defined, so NIntegrate can't work.  Try \
Method->\\\"Integrate\\\" or give invader traits.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InvSPS", "::", "whenevents"}], "=", "\n", 
   "\"\<Warning: WhenEvents involving populations and guilds are not handled \
properly in InvSPS yet.\>\""}], ";"}]}], "Code",
 CellChangeTimes->{
  3.769501546342346*^9, {3.769501971755588*^9, 3.7695019826488047`*^9}, {
   3.7829911156741056`*^9, 3.782991156313349*^9}, {3.798296399663352*^9, 
   3.7982964025501432`*^9}, {3.8042728411475267`*^9, 
   3.804272861018427*^9}},ExpressionUUID->"42f7edcd-0834-4d2d-bd78-\
00d117e8a483"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Counters", "Subsubsection",
 CellChangeTimes->{{3.7695138020337753`*^9, 
  3.7695138033133087`*^9}},ExpressionUUID->"74d3773d-9ec9-4e34-b7ee-\
0146221a0180"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$InvCount", "::", "usage"}], " ", "=", " ", 
   "\"\<Counts number of times Inv called.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$InvCount", "=", "0"}], ";"}]}], "Code",
 CellChangeTimes->{{3.769513808750421*^9, 3.7695138159731407`*^9}, {
  3.769521818764552*^9, 
  3.769521818766902*^9}},ExpressionUUID->"86e64d1f-e7d4-4463-8061-\
5f8166f049a0"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["DInv / NDInv", "Subsection",ExpressionUUID->"5de9877c-dc88-445d-8645-23b4fe7d7ec4"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"c897c4d0-8129-4afb-8775-\
6c496cb08d81"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DInv", "::", "usage"}], " ", "=", "\n", 
    "\"\<DInv[\!\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"sol\", \
\"TI\"]\), \!\(\*StyleBox[\"target\", \"TI\"]\), \!\(\*StyleBox[\"point\", \
\"TI\"]\)] calculates a derivative of invasion fitness with respect to \
\!\(\*StyleBox[\"target\", \"TI\"]\), with resident trait values \
\!\(\*StyleBox[\"traits\", \"TI\"]\) and community \!\(\*StyleBox[\"sol\", \
\"TI\"]\)\!\(\*StyleBox[\".\", \"Code\"]\)\n\!\(\*StyleBox[\"target\", \
\"TI\"]\) can be \!\(\*StyleBox[\"x\", \"TI\"]\) for a single trait, \
{\!\(\*StyleBox[\"x1\", \"TI\"]\),\!\(\*StyleBox[\"x2\", \
\"TI\"]\),...,\!\(\*StyleBox[\"xn\", \"TI\"]\)} for multiple traits, \
{\!\(\*StyleBox[\"x\", \"TI\"]\),2} for the second derivative with respect to \
x, {{\!\(\*StyleBox[\"x1\", \"TI\"]\),\!\(\*StyleBox[\"x2\", \"TI\"]\),...,\!\
\(\*StyleBox[\"xn\", \"TI\"]\)},2} for the Hessian matrix.\n\
\!\(\*StyleBox[\"point\", \"TI\"]\) is where DInv will be evaluated.\nDInv[\!\
\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"sol\", \"TI\"]\), \
\!\(\*StyleBox[\"target\", \"TI\"]\)] gives derivatives for all species in a \
guild determined from \!\(\*StyleBox[\"target\", \"TI\"]\).\n\
DInv[\!\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"sol\", \"TI\"]\)] \
gives derivatives for all traits in Guild (default=first).\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NDInv", "::", "usage"}], " ", "=", "\n", 
   "\"\<NDInv[\!\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"sol\", \
\"TI\"]\), \!\(\*StyleBox[\"target\", \"TI\"]\), \!\(\*StyleBox[\"point\", \
\"TI\"]\)] numerically approximates a derivative of invasion fitness with \
respect to \!\(\*StyleBox[\"target\", \"TI\"]\), with resident traits \
\!\(\*StyleBox[\"traits\", \"TI\"]\) and community \!\(\*StyleBox[\"sol\", \
\"TI\"]\)\!\(\*StyleBox[\".\", \"Code\"]\)\n\!\(\*StyleBox[\"target\", \
\"TI\"]\) can be \!\(\*StyleBox[\"x\", \"TI\"]\) for a single trait, \
{\!\(\*StyleBox[\"x1\", \"TI\"]\),\!\(\*StyleBox[\"x2\", \
\"TI\"]\),...,\!\(\*StyleBox[\"xn\", \"TI\"]\)} for multiple traits, \
{\!\(\*StyleBox[\"x\", \"TI\"]\),2} for the second derivative with respect to \
x, {{\!\(\*StyleBox[\"x1\", \"TI\"]\),\!\(\*StyleBox[\"x2\", \"TI\"]\),...,\!\
\(\*StyleBox[\"xn\", \"TI\"]\)},2} for the Hessian matrix.\n\
\!\(\*StyleBox[\"point\", \"TI\"]\) is where NDInv will be evaluated.\nNDInv[\
\!\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"sol\", \"TI\"]\), \!\(\
\*StyleBox[\"target\", \"TI\"]\)] gives derivatives for all species in a \
guild determined from \!\(\*StyleBox[\"target\", \"TI\"]\).\n\
NDInv[\!\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"sol\", \
\"TI\"]\)] gives derivatives for all traits in Guild (default=first).\>\""}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.769489429053678*^9, 3.7694894303224277`*^9}, {
  3.7698551518480186`*^9, 3.7698551600797653`*^9}, {3.807401503955534*^9, 
  3.8074015893357773`*^9}, {3.8074017524346657`*^9, 
  3.807401772915916*^9}},ExpressionUUID->"4631955d-96b6-4d66-b9ad-\
3bc7daa9a003"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.769494445653674*^9, 
  3.7694944464094753`*^9}},ExpressionUUID->"e4cc5470-3040-439d-9bf5-\
e14924c7f07b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "DInv", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Fixed", "\[Rule]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"InvOpts", "\[Rule]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"Method", "\[Rule]", "\"\<D\>\""}], ",", 
      RowBox[{"Guild", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"Species", "\[Rule]", "All"}], ",", 
      RowBox[{"FindEcoAttractorOpts", "\[Rule]", 
       RowBox[{"{", "}"}]}], ",", "\n", 
      RowBox[{"Chop", "\[Rule]", "True"}], ",", 
      RowBox[{"SimplifyResult", "\[Rule]", "False"}], ",", 
      RowBox[{"RelativeStepSize", "\[Rule]", "0.001"}], ",", 
      RowBox[{"AbsoluteStepSize", "\[Rule]", "0.001"}], ",", 
      RowBox[{"Time", "\[Rule]", "t"}], ",", 
      RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
      RowBox[{"VerboseAll", "\[Rule]", "All"}]}], "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"notDInvOpts", "=", 
   RowBox[{"Except", "[", 
    RowBox[{"Alternatives", "@@", 
     RowBox[{"Replace", "[", 
      RowBox[{
       RowBox[{"Options", "[", "DInv", "]"}], ",", 
       RowBox[{
        RowBox[{"h_", "[", 
         RowBox[{"a_", ",", "_"}], "]"}], "\[RuleDelayed]", 
        RowBox[{"h", "[", 
         RowBox[{"a", ",", "_"}], "]"}]}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{
  3.687881459089369*^9, {3.688571690852398*^9, 3.6885716909662933`*^9}, 
   3.688585647493445*^9, {3.7255581858821*^9, 3.725558189447764*^9}, 
   3.7255604572355824`*^9, {3.7257520865568027`*^9, 3.725752089701908*^9}, 
   3.725752168794105*^9, {3.726056719863913*^9, 3.726056724967762*^9}, {
   3.755378746004305*^9, 3.7553787473617907`*^9}, {3.762407289675707*^9, 
   3.762407290029801*^9}, {3.762420405599392*^9, 3.762420406126195*^9}, 
   3.770106660227159*^9, {3.807548100557398*^9, 
   3.8075481031252937`*^9}},ExpressionUUID->"f71239be-97e8-406b-b853-\
f413dc7e412d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"54be2c57-9d7b-4ea2-9415-\
aa6b4c3ad08b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NumDInv", "[", 
    RowBox[{
     RowBox[{"traitsin_", "?", "NumericRuleListQ"}], ",", "rest___"}], "]"}], 
   ":=", 
   RowBox[{"DInv", "[", 
    RowBox[{"traitsin", ",", "rest"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7312732009532747`*^9, 3.731273240645245*^9}, {
  3.731273854846739*^9, 3.731273865742675*^9}, {3.73127390603121*^9, 
  3.731273935076447*^9}, {3.73127401377391*^9, 3.731274014901495*^9}, {
  3.73128531122279*^9, 3.731285317211211*^9}, {3.731285457184133*^9, 
  3.731285458299242*^9}},ExpressionUUID->"a4f46646-cfc2-4630-89c5-\
4451c0dd903d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DInv", "[", 
    RowBox[{
     RowBox[{"traitsin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "TraitsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"solin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"var_", ":", "All"}], ",", 
       RowBox[{"ord_", "?", "NumberQ"}]}], "}"}], ",", 
     RowBox[{"pointin", ":", "notDInvOpts", ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<DInv\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "fixed", ",", "fixedattributes", ",", 
       "fixedvariables", ",", "method", ",", "\[Epsilon]r", ",", 
       "\[Epsilon]a", ",", "invopts", ",", "guild", ",", "species", ",", 
       "time", ",", "simplifyresult", ",", "chop", ",", 
       "findecoattractoropts", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "sol", ",", 
       "res", ",", "res2", ",", "traits", ",", "traits2", ",", "point", ",", 
       "targetgu", ",", "targettrait", ",", "inv", ",", "sp", ",", "vars", 
       ",", "\n", "pt1", ",", "pt2", ",", "\n", "h", ",", "h1", ",", "h2", 
       ",", "invl", ",", "invr", ",", "invc"}], "}"}], ",", "\n", "\n", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"solin", "\[Equal]", "$Failed"}], ",", 
        RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<traitsin=\>\"", ",", "traitsin"}], "]"}], ";", "\n", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<solin=\>\"", ",", "solin"}], "]"}], ";", "\n", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<{var,ord}=\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"var", ",", "ord"}], "}"}]}], "]"}], ";", "\n", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<pointin=\>\"", ",", "pointin"}], "]"}], ";"}], "*)"}], 
      "\n", "\n", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
           RowBox[{
            RowBox[{"Message", "[", 
             RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
            RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
         "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
         RowBox[{"verbose", "=", 
          RowBox[{"OptionValue", "[", "Verbose", "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
         RowBox[{"verboseall", "=", 
          RowBox[{"OptionValue", "[", "VerboseAll", "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"verboseall", ",", 
           RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
         RowBox[{"fixed", "=", 
          RowBox[{"OptionValue", "[", "Fixed", "]"}]}], ";", "\n", 
         RowBox[{"fixedattributes", "=", 
          RowBox[{"ExtractAttributes", "[", "fixed", "]"}]}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<fixedattributes=\>\"", ",", "fixedattributes"}], 
            "]"}], ";"}], "*)"}], "\n", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{
            "func", ",", "\"\<: fixedattributes=\>\"", ",", 
             "fixedattributes"}], "]"}]}], "]"}], ";", "\n", 
         RowBox[{"fixedvariables", "=", 
          RowBox[{"ExtractVariables", "[", "fixed", "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{
            "func", ",", "\"\<: fixedvariables=\>\"", ",", "fixedvariables"}],
             "]"}]}], "]"}], ";", "\n", "\n", 
         RowBox[{"invopts", "=", 
          RowBox[{"OptionValue", "[", "InvOpts", "]"}]}], ";", "\n", 
         RowBox[{"method", "=", 
          RowBox[{"OptionValue", "[", "Method", "]"}]}], ";", "\n", 
         RowBox[{"\[Epsilon]a", "=", 
          RowBox[{"OptionValue", "[", "AbsoluteStepSize", "]"}]}], ";", "\n", 
         
         RowBox[{"\[Epsilon]r", "=", 
          RowBox[{"OptionValue", "[", "RelativeStepSize", "]"}]}], ";", "\n", 
         
         RowBox[{"guild", "=", 
          RowBox[{"OptionValue", "[", "Guild", "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"guild", "===", "Automatic"}], ",", 
           RowBox[{"guild", "=", 
            RowBox[{
            "guilds", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}]}]}], "]"}], ";", "\n", 
         RowBox[{"species", "=", 
          RowBox[{"OptionValue", "[", "Species", "]"}]}], ";", "\n", 
         RowBox[{"time", "=", 
          RowBox[{"OptionValue", "[", "Time", "]"}]}], ";", "\n", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"invopts", ",", 
           RowBox[{"Time", "\[Rule]", "time"}]}], "]"}], ";", "\n", 
         RowBox[{"simplifyresult", "=", 
          RowBox[{"OptionValue", "[", "SimplifyResult", "]"}]}], ";", "\n", 
         RowBox[{"chop", "=", 
          RowBox[{"OptionValue", "[", "Chop", "]"}]}], ";", "\n", 
         RowBox[{"findecoattractoropts", "=", 
          RowBox[{"OptionValue", "[", "FindEcoAttractorOpts", "]"}]}], ";", 
         "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"handle", " ", "blanks"}], " ", "&"}], " ", "figure", " ",
            "out", " ", "number", " ", "of", " ", "species", " ", "in", " ", 
           "guilds"}], " ", "*)"}], "\n", 
         RowBox[{"traits", "=", 
          RowBox[{"DeleteInvaders", "[", 
           RowBox[{"FixAttributes", "[", "traitsin", "]"}], "]"}]}], ";", 
         "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<traits=\>\"", ",", "traits"}], "]"}], ";"}], "*)"}], 
         "\n", 
         RowBox[{"sol", "=", 
          RowBox[{"FixVariables", "[", "solin", "]"}]}], ";", "\n", 
         RowBox[{"Set\[ScriptCapitalN]", "[", 
          RowBox[{"Join", "[", 
           RowBox[{"traits", ",", "fixedattributes"}], "]"}], "]"}], ";", 
         "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<\[ScriptCapitalN]=\>\"", ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "]"}], ";"}],
           "*)"}], "\n", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"solin", "===", "\"\<FindEcoAttractor\>\""}], ",", "\n", 
           "\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", "\n", "\t\t", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"tr", "=", "traits"}], ",", 
                  RowBox[{"op", "=", 
                   RowBox[{"Sequence", "@@", "findecoattractoropts"}]}]}], 
                 "}"}], ",", "\n", "\t\t", 
                RowBox[{"PrintCall", "[", 
                 RowBox[{"Global`sol", "=", 
                  RowBox[{"FindEcoAttractor", "[", 
                   RowBox[{"tr", ",", "op"}], "]"}]}], "]"}]}], "\n", "\t", 
               "]"}]}], "]"}], ";", "\n", "\t", 
            RowBox[{"sol", "=", 
             RowBox[{"FindEcoAttractor", "[", 
              RowBox[{"traits", ",", 
               RowBox[{"Evaluate", "[", 
                RowBox[{"Sequence", "@@", "findecoattractoropts"}], "]"}]}], 
              "]"}]}]}]}], "\n", "]"}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"verbose", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: sol=\>\"", ",", "sol"}], "]"}]}], 
          "]"}], ";", "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"thread", " ", "a", " ", "list", " ", "of", " ", "points"}],
           " ", "*)"}], "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"Dimensions", "[", "pointin", "]"}], "]"}], "\[Equal]", 
            "2"}], ",", "\n", "\t", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", "\"\<mapping over points\>\"", "]"}], 
             ";"}], "*)"}], "\n", "\t", 
           RowBox[{"Return", "[", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"DInv", "[", 
                RowBox[{"traits", ",", "sol", ",", 
                 RowBox[{"{", 
                  RowBox[{"var", ",", "ord"}], "}"}], ",", "#", ",", "opts"}],
                 "]"}], "&"}], ",", "pointin"}], "]"}], "]"}]}], "\n", "]"}], 
         ";", "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<pointin=\>\"", ",", "pointin"}], "]"}], ";", "\n", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<species=\>\"", ",", "species"}], "]"}], ";"}], 
          "*)"}], "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{
          "figure", " ", "out", " ", "point", " ", "where", " ", "to", " ", 
           "evaluate", " ", "derivative"}], " ", "*)"}], "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"pointin", "\[Equal]", 
            RowBox[{"{", "}"}]}], ",", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{"no", " ", "point", " ", "given"}], " ", "*)"}], "\n", 
           "\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"var", "===", "All"}], ",", "\n", "\t\t", 
              RowBox[{"targetgu", "=", "guild"}], ",", "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"ListQ", "[", "var", "]"}], ",", 
                RowBox[{"targetgu", "=", 
                 RowBox[{
                  RowBox[{"LookUp", "[", 
                   RowBox[{
                   "var", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}], "\[LeftDoubleBracket]", 
                  "2", "\[RightDoubleBracket]"}]}], ",", 
                RowBox[{"targetgu", "=", 
                 RowBox[{
                  RowBox[{"LookUp", "[", "var", "]"}], "\[LeftDoubleBracket]",
                   "2", "\[RightDoubleBracket]"}]}]}], "]"}]}], "\n", "\t", 
             "]"}], ";", "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"species", "===", "All"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"\[ScriptCapitalN]", "[", "targetgu", "]"}], 
                 "\[Equal]", "0"}], ",", 
                RowBox[{"species", "=", "0"}], ",", 
                RowBox[{"species", "=", 
                 RowBox[{"Table", "[", 
                  RowBox[{"sp", ",", 
                   RowBox[{"{", 
                    RowBox[{"sp", ",", 
                    RowBox[{"\[ScriptCapitalN]", "[", "targetgu", "]"}]}], 
                    "}"}]}], "]"}]}]}], "]"}]}], "]"}], ";", "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"ListQ", "[", "species", "]"}], ",", "\n", "\t\t", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"method", "\[Equal]", "\"\<NDInv\>\""}], ",", 
                 RowBox[{"Return", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"DInv", "[", 
                    RowBox[{"traits", ",", "sol", ",", 
                    RowBox[{"{", 
                    RowBox[{"var", ",", "ord"}], "}"}], ",", 
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"Species", "\[Rule]", "sp"}], ",", "opts"}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"sp", ",", "species"}], "}"}]}], "]"}], "]"}]}], 
                "]"}], ";", "\n", "\t\t", 
               RowBox[{"point", "=", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"gtrait", ",", "0"}], "]"}], "\[Rule]", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"gtrait", ",", "sp"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"gtrait", ",", 
                    RowBox[{"gtraits", "[", "targetgu", "]"}]}], "}"}]}], 
                    "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"sp", ",", "species"}], "}"}]}], "]"}], "/.", 
                 "traits"}]}]}], "\n", "\t", ",", "\n", "\t\t", 
              RowBox[{
               RowBox[{"pt1", "=", 
                RowBox[{"Table", "[", "\n", "\t\t\t", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"guild1", "[", "interaction", "]"}], "===", 
                    "targetgu"}], ",", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"interaction", ",", "0", ",", "sp\[Prime]_"}], 
                    "]"}], "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    "interaction", ",", "species", ",", "sp\[Prime]"}], "]"}],
                     "/.", "traitsin"}], ")"}]}], ",", "Nothing"}], "]"}], 
                  "\n", "\t\t", ",", 
                  RowBox[{"{", 
                   RowBox[{"interaction", ",", "interactions"}], "}"}]}], 
                 "]"}]}], ";", "\n", "\t\t", 
               RowBox[{"pt2", "=", 
                RowBox[{"Table", "[", "\n", "\t\t\t", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"guild2", "[", "interaction", "]"}], "===", 
                    "targetgu"}], ",", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"interaction", ",", "sp\[Prime]_", ",", "0"}], 
                    "]"}], "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    "interaction", ",", "sp\[Prime]", ",", "species"}], "]"}],
                     "/.", "traitsin"}], ")"}]}], ",", "Nothing"}], "]"}], 
                  "\n", "\t\t", ",", 
                  RowBox[{"{", 
                   RowBox[{"interaction", ",", "interactions"}], "}"}]}], 
                 "]"}]}], ";", "\n", "\t\t", 
               RowBox[{"point", "=", 
                RowBox[{"Join", "[", 
                 RowBox[{"pt1", ",", "pt2", ",", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"gtrait", ",", "0"}], "]"}], "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"gtrait", ",", "species"}], "]"}], "/.", 
                    "traitsin"}], ")"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"gtrait", ",", 
                    RowBox[{"gtraits", "[", "targetgu", "]"}]}], "}"}]}], 
                   "]"}]}], "]"}]}]}]}], "\n", "\t", "]"}], ";"}], "\n", ",", 
           "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{"point", " ", "given"}], " ", "*)"}], "\n", "\t", 
           RowBox[{
            RowBox[{"targetgu", "=", 
             RowBox[{
              RowBox[{"LookUp", "[", 
               RowBox[{"pointin", "\[LeftDoubleBracket]", 
                RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], 
              "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ";", 
            "\n", "\t", 
            RowBox[{"point", "=", "pointin"}]}]}], "\n", "]"}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: targetgu=\>\"", ",", "targetgu"}], 
            "]"}]}], "]"}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: point=\>\"", ",", "point"}], "]"}]}], 
          "]"}], ";", "\n", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"var", "===", "All"}], ",", "\n", "\t", 
           RowBox[{"vars", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"gtrait", ",", "0"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"gtrait", ",", 
                RowBox[{"gtraits", "[", "targetgu", "]"}]}], "}"}]}], "]"}]}],
            ",", "\n", "\t", 
           RowBox[{"vars", "=", "var"}]}], "\n", "]"}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: vars=\>\"", ",", "vars"}], "]"}]}], 
          "]"}], ";", "\n", "\n", 
         RowBox[{"Which", "[", "\n", "\t", 
          RowBox[{
           RowBox[{"method", "\[Equal]", "\"\<D\>\""}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", "\n", "\t\t", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"tr", "=", "traits"}], ",", 
                  RowBox[{"so", "=", "sol"}], ",", 
                  RowBox[{"tg", "=", "targetgu"}], ",", 
                  RowBox[{"op", "=", 
                   RowBox[{"Sequence", "@@", "invopts"}]}]}], "}"}], ",", 
                "\n", "\t\t", 
                RowBox[{"PrintCall", "[", 
                 RowBox[{"Global`inv", "=", 
                  RowBox[{"Simplify", "[", 
                   RowBox[{
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "so", ",", 
                    RowBox[{"Guild", "\[Rule]", "tg"}], ",", "op"}], "]"}], 
                    ",", 
                    RowBox[{"Assumptions", "\[Rule]", 
                    RowBox[{"_", "\[Element]", "Reals"}]}]}], "]"}]}], 
                 "]"}]}], "\n", "\t", "]"}]}], "]"}], ";", "\n", "\t", 
            RowBox[{"inv", "=", 
             RowBox[{"Inv", "[", 
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{"traits", ",", "fixedattributes"}], "]"}], ",", 
               RowBox[{"Join", "[", 
                RowBox[{"sol", ",", "fixedvariables"}], "]"}], ",", 
               RowBox[{"Guild", "\[Rule]", "targetgu"}], ",", 
               RowBox[{"Evaluate", "[", 
                RowBox[{"Sequence", "@@", "invopts"}], "]"}]}], "]"}]}], ";", 
            "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", 
              RowBox[{"Print", "[", 
               RowBox[{"func", ",", "\"\<: inv=\>\"", ",", "inv"}], "]"}]}], 
             "]"}], ";", "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", "\n", "\t\t", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"vars", "=", "vars"}], ",", 
                  RowBox[{"inv", "=", "inv"}], ",", 
                  RowBox[{"point", "=", "point"}], ",", 
                  RowBox[{"traits", "=", "traits"}]}], "}"}], ",", "\n", 
                "\t\t", 
                RowBox[{"PrintCall", "[", 
                 RowBox[{"Global`res", "=", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"D", "[", 
                    RowBox[{"inv", ",", 
                    RowBox[{"{", 
                    RowBox[{"vars", ",", "ord"}], "}"}]}], "]"}], "/.", 
                    "point"}], "/.", "traits"}]}], "]"}]}], "\n", "\t", 
               "]"}]}], "]"}], ";", "\n", "\t", 
            RowBox[{"res", "=", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"D", "[", 
                 RowBox[{"inv", ",", 
                  RowBox[{"{", 
                   RowBox[{"vars", ",", "ord"}], "}"}]}], "]"}], "/.", 
                "point"}], "/.", "traits"}], "/.", "fixed"}]}], ";", " ", 
            RowBox[{"(*", " ", 
             RowBox[{"is", " ", "/.", 
              RowBox[{"traits", " ", "necessary", "??"}]}], " ", "*)"}], "\n",
             "\t", 
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", 
              RowBox[{"Print", "[", 
               RowBox[{"func", ",", "\"\<: res=\>\"", ",", "res"}], "]"}]}], 
             "]"}], ";"}], "\n", ",", "\n", "\t", 
           RowBox[{"method", "\[Equal]", "\"\<NDInv\>\""}], ",", "\n", "\t", 
           RowBox[{"Which", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{"ord", "\[Equal]", "1"}], ",", "\n", "\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"ListQ", "[", "vars", "]"}], ",", "\n", "\t\t\t", 
               RowBox[{"(*", " ", "gradient", " ", "*)"}], "\n", "\t\t\t", 
               RowBox[{
                RowBox[{"Return", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"DInv", "[", 
                    RowBox[{"traits", ",", "sol", ",", 
                    RowBox[{"{", 
                    RowBox[{"#", ",", "ord"}], "}"}], ",", "point", ",", 
                    "opts"}], "]"}], "&"}], " ", "/@", " ", "vars"}], "]"}], 
                ";"}], "\n", "\t\t", ",", " ", 
               RowBox[{"(*", " ", 
                RowBox[{"first", " ", "derivative"}], " ", "*)"}], "\n", 
               "\t\t\t", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{"Global`debug", ",", 
                  RowBox[{"Print", "[", 
                   RowBox[{
                   "func", ",", 
                    "\"\<: 1st derivative (finite difference)\>\""}], "]"}]}],
                  "]"}], ";", "\n", "\t\t\t", 
                RowBox[{"h", "=", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Epsilon]r", "*", "var"}], "/.", "point"}], 
                   ")"}], "+", "\[Epsilon]a"}]}], ";", "\n", "\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{"verbose", ",", "\n", "\t\t\t\t", 
                  RowBox[{"With", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"tr", "=", "traits"}], ",", 
                    RowBox[{"so", "=", "sol"}], ",", 
                    RowBox[{"pt", "=", 
                    RowBox[{"RuleListTweak", "[", 
                    RowBox[{"point", ",", "vars", ",", 
                    RowBox[{"-", "h"}]}], "]"}]}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "invopts"}]}]}], "}"}], ",", 
                    "\n", "\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "InterpolatingFunctionFunctionQ", "[", "so", "]"}], ",", 
                    "\n", "\t\t\t\t\t", 
                    RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`invl", "=", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "Global`sol", ",", "pt", ",", "op"}], 
                    "]"}]}], "]"}], ",", "\n", "\t\t\t\t\t", 
                    RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`invl", "=", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "so", ",", "pt", ",", "op"}], "]"}]}], 
                    "]"}]}], "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", 
                   "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                RowBox[{"invl", "=", 
                 RowBox[{"Inv", "[", 
                  RowBox[{"traits", ",", "sol", ",", 
                   RowBox[{"RuleListTweak", "[", 
                    RowBox[{"point", ",", "vars", ",", 
                    RowBox[{"-", "h"}]}], "]"}], ",", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}]}], "]"}]}], 
                ";", "\n", "\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{"verbose", ",", 
                  RowBox[{"Print", "[", 
                   RowBox[{"func", ",", "\"\< invl=\>\"", ",", "invl"}], 
                   "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{"verbose", ",", "\n", "\t\t\t\t", 
                  RowBox[{"With", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"tr", "=", "traits"}], ",", 
                    RowBox[{"so", "=", "sol"}], ",", 
                    RowBox[{"pt", "=", 
                    RowBox[{"RuleListTweak", "[", 
                    RowBox[{"point", ",", "vars", ",", "h"}], "]"}]}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "invopts"}]}]}], "}"}], ",", 
                    "\n", "\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "InterpolatingFunctionFunctionQ", "[", "so", "]"}], ",", 
                    "\n", "\t\t\t\t\t", 
                    RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`invr", "=", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "Global`sol", ",", "pt", ",", "op"}], 
                    "]"}]}], "]"}], ",", "\n", "\t\t\t\t\t", 
                    RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`invr", "=", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "so", ",", "pt", ",", "op"}], "]"}]}], 
                    "]"}]}], "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", 
                   "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                RowBox[{"invr", "=", 
                 RowBox[{"Inv", "[", 
                  RowBox[{"traits", ",", "sol", ",", 
                   RowBox[{"RuleListTweak", "[", 
                    RowBox[{"point", ",", "vars", ",", "h"}], "]"}], ",", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}]}], "]"}]}], 
                ";", "\n", "\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{"verbose", ",", 
                  RowBox[{"Print", "[", 
                   RowBox[{"func", ",", "\"\< invr=\>\"", ",", "invr"}], 
                   "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"invl", "\[Equal]", "$Failed"}], "||", 
                   RowBox[{"invr", "\[Equal]", "$Failed"}]}], ",", 
                  RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", "\n",
                 "\t\t\t", 
                RowBox[{"res", "=", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"invr", "-", "invl"}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"2", "h"}], ")"}]}]}], ";"}]}], "\n", "\t\t", 
              "]"}], "\n", "\t", ",", "\n", "\t\t", 
             RowBox[{"ord", "\[Equal]", "2"}], ",", " ", "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"ListQ", "[", "vars", "]"}], ",", "\n", "\t\t\t", 
                RowBox[{"(*", " ", 
                 RowBox[{"Hessian", " ", "matrix"}], " ", "*)"}], "\n", 
                "\t\t\t", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{"Global`debug", ",", 
                   RowBox[{"Print", "[", 
                    RowBox[{
                    "func", ",", 
                    "\"\<: Hessian matrix (finite difference)\>\""}], "]"}]}],
                   "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"res", "=", 
                  RowBox[{"ConstantArray", "[", 
                   RowBox[{"0", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Length", "[", "vars", "]"}], ",", 
                    RowBox[{"Length", "[", "vars", "]"}]}], "}"}]}], "]"}]}], 
                 ";", "\n", "\t\t\t", 
                 RowBox[{"Do", "[", "\n", "\t\t\t\t", 
                  RowBox[{"(*", " ", 
                   RowBox[{"diagonal", " ", "entries"}], " ", "*)"}], "\t\t", 
                  "\n", "\t\t\t\t", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"h", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Epsilon]r", "*", 
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "v1", 
                    "\[RightDoubleBracket]"}]}], "/.", "point"}], ")"}], "+", 
                    "\[Epsilon]a"}]}], ";", "\n", "\t\t\t\t", 
                    RowBox[{"res", "=", 
                    RowBox[{"ReplacePart", "[", 
                    RowBox[{"res", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"v1", ",", "v1"}], "}"}], "\[Rule]", "\n", 
                    "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Inv", "[", 
                    RowBox[{"traits", ",", "sol", ",", 
                    RowBox[{"RuleListTweak", "[", 
                    RowBox[{"point", ",", 
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "v1", 
                    "\[RightDoubleBracket]"}], ",", "h"}], "]"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}]}], "]"}], 
                    "\n", "\t\t\t\t\t", "-", 
                    RowBox[{"2", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"traits", ",", "sol", ",", "point", ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}]}], "]"}]}], 
                    "\n", "\t\t\t\t\t", "+", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"traits", ",", "sol", ",", 
                    RowBox[{"RuleListTweak", "[", 
                    RowBox[{"point", ",", 
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "v1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"-", "h"}]}], "]"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}]}], "]"}]}], 
                    ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"h", "^", "2"}], ")"}]}]}]}], "\n", "\t\t\t\t", 
                    "]"}]}], ";", "\n", "\t\t\t\t", 
                    RowBox[{"(*", " ", 
                    RowBox[{"offdiagonal", " ", "entries"}], " ", "*)"}], 
                    "\n", "\t\t\t\t", 
                    RowBox[{"Do", "[", "\n", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"h1", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Epsilon]r", "*", 
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "v1", 
                    "\[RightDoubleBracket]"}]}], "/.", "point"}], ")"}], "+", 
                    "\[Epsilon]a"}]}], ";", "\n", "\t\t\t\t\t", 
                    RowBox[{"h2", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Epsilon]r", "*", 
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "v2", 
                    "\[RightDoubleBracket]"}]}], "/.", "point"}], ")"}], "+", 
                    "\[Epsilon]a"}]}], ";", "\n", "\t\t\t\t\t", 
                    RowBox[{"res", "=", 
                    RowBox[{"ReplacePart", "[", 
                    RowBox[{"res", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"v1", ",", "v2"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"v2", ",", "v1"}], "}"}]}], "}"}], "\[Rule]", 
                    "\n", "\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Inv", "[", 
                    RowBox[{"traits", ",", "sol", ",", 
                    RowBox[{"RuleListTweak", "[", 
                    RowBox[{"point", ",", 
                    RowBox[{"vars", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"v1", ",", "v2"}], "}"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"h1", ",", "h2"}], "}"}]}], "]"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}]}], "]"}], 
                    "\n", "\t\t\t\t\t\t", "-", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"traits", ",", "sol", ",", 
                    RowBox[{"RuleListTweak", "[", 
                    RowBox[{"point", ",", 
                    RowBox[{"vars", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"v1", ",", "v2"}], "}"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"h1", ",", 
                    RowBox[{"-", "h2"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}]}], "]"}], 
                    "\n", "\t\t\t\t\t\t", "-", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"traits", ",", "sol", ",", 
                    RowBox[{"RuleListTweak", "[", 
                    RowBox[{"point", ",", 
                    RowBox[{"vars", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"v1", ",", "v2"}], "}"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "h1"}], ",", "h2"}], "}"}]}], "]"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}]}], "]"}], 
                    "\n", "\t\t\t\t\t\t", "+", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"traits", ",", "sol", ",", 
                    RowBox[{"RuleListTweak", "[", 
                    RowBox[{"point", ",", 
                    RowBox[{"vars", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"v1", ",", "v2"}], "}"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "h1"}], ",", 
                    RowBox[{"-", "h2"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}]}], "]"}]}], 
                    ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"4", "*", "h1", "*", "h2"}], ")"}]}]}]}], "\n", 
                    "\t\t\t\t\t", "]"}]}], ";"}], "\t\t\t\t\t", "\n", 
                    "\t\t\t\t", ",", 
                    RowBox[{"{", 
                    RowBox[{"v2", ",", 
                    RowBox[{"v1", "+", "1"}], ",", 
                    RowBox[{"Length", "[", "vars", "]"}]}], "}"}]}], "]"}]}], 
                   "\n", "\t\t\t", ",", 
                   RowBox[{"{", 
                    RowBox[{"v1", ",", "1", ",", 
                    RowBox[{"Length", "[", "vars", "]"}]}], "}"}]}], "]"}], 
                 ";"}], "\n", "\t\t", ",", " ", 
                RowBox[{"(*", " ", 
                 RowBox[{"second", " ", "derivative"}], " ", "*)"}], "\n", 
                "\t\t\t", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{"Global`debug", ",", 
                   RowBox[{"Print", "[", 
                    RowBox[{
                    "func", ",", 
                    "\"\<: 2nd derivative (finite difference)\>\""}], "]"}]}],
                   "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"h", "=", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Epsilon]r", "*", "var"}], "/.", "point"}], 
                    ")"}], "+", "\[Epsilon]a"}]}], ";", "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"verbose", ",", "\n", "\t\t\t\t", 
                   RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"tr", "=", "traits"}], ",", 
                    RowBox[{"so", "=", "sol"}], ",", 
                    RowBox[{"pt", "=", 
                    RowBox[{"RuleListTweak", "[", 
                    RowBox[{"point", ",", "vars", ",", 
                    RowBox[{"-", "h"}]}], "]"}]}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "invopts"}]}]}], "}"}], ",", 
                    "\n", "\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "InterpolatingFunctionFunctionQ", "[", "so", "]"}], ",", 
                    "\n", "\t\t\t\t\t", 
                    RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`invl", "=", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "Global`sol", ",", "pt", ",", "op"}], 
                    "]"}]}], "]"}], ",", "\n", "\t\t\t\t\t", 
                    RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`invl", "=", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "so", ",", "pt", ",", "op"}], "]"}]}], 
                    "]"}]}], "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", 
                    "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"invl", "=", 
                  RowBox[{"Inv", "[", 
                   RowBox[{"traits", ",", "sol", ",", 
                    RowBox[{"RuleListTweak", "[", 
                    RowBox[{"point", ",", "vars", ",", 
                    RowBox[{"-", "h"}]}], "]"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}]}], "]"}]}], 
                 ";", "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"verbose", ",", 
                   RowBox[{"Print", "[", 
                    RowBox[{"func", ",", "\"\< invl=\>\"", ",", "invl"}], 
                    "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"verbose", ",", "\n", "\t\t\t\t", 
                   RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"tr", "=", "traits"}], ",", 
                    RowBox[{"so", "=", "sol"}], ",", 
                    RowBox[{"pt", "=", 
                    RowBox[{"RuleListTweak", "[", 
                    RowBox[{"point", ",", "vars", ",", "h"}], "]"}]}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "invopts"}]}]}], "}"}], ",", 
                    "\n", "\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "InterpolatingFunctionFunctionQ", "[", "so", "]"}], ",", 
                    "\n", "\t\t\t\t\t", 
                    RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`invr", "=", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "Global`sol", ",", "pt", ",", "op"}], 
                    "]"}]}], "]"}], ",", "\n", "\t\t\t\t\t", 
                    RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`invr", "=", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "so", ",", "pt", ",", "op"}], "]"}]}], 
                    "]"}]}], "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", 
                    "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"invr", "=", 
                  RowBox[{"Inv", "[", 
                   RowBox[{"traits", ",", "sol", ",", 
                    RowBox[{"RuleListTweak", "[", 
                    RowBox[{"point", ",", "vars", ",", "h"}], "]"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}]}], "]"}]}], 
                 ";", "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"verbose", ",", 
                   RowBox[{"Print", "[", 
                    RowBox[{"func", ",", "\"\< invr=\>\"", ",", "invr"}], 
                    "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"verbose", ",", "\n", "\t\t\t\t", 
                   RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"tr", "=", "traits"}], ",", 
                    RowBox[{"so", "=", "sol"}], ",", 
                    RowBox[{"pt", "=", "point"}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "invopts"}]}]}], "}"}], ",", 
                    "\n", "\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "InterpolatingFunctionFunctionQ", "[", "so", "]"}], ",", 
                    "\n", "\t\t\t\t\t", 
                    RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`invc", "=", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "Global`sol", ",", "pt", ",", "op"}], 
                    "]"}]}], "]"}], ",", "\n", "\t\t\t\t\t", 
                    RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`invc", "=", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "so", ",", "pt", ",", "op"}], "]"}]}], 
                    "]"}]}], "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", 
                    "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"invc", "=", 
                  RowBox[{"Inv", "[", 
                   RowBox[{"traits", ",", "sol", ",", "point", ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}]}], "]"}]}], 
                 ";", "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"verbose", ",", 
                   RowBox[{"Print", "[", 
                    RowBox[{"func", ",", "\"\< invc=\>\"", ",", "invc"}], 
                    "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"invl", "\[Equal]", "$Failed"}], "||", 
                    RowBox[{"invr", "\[Equal]", "$Failed"}], "||", 
                    RowBox[{"invc", "\[Equal]", "$Failed"}]}], ",", 
                   RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                 "\n", "\t\t\t", 
                 RowBox[{"res", "=", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"invr", "-", 
                    RowBox[{"2", "invc"}], "+", "invl"}], ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"h", "^", "2"}], ")"}]}]}], ";"}]}], "\n", 
               "\t\t\t", "]"}], ";"}]}], "\n", "\t\t", "]"}], "\n", "\t", ",",
            "\n", "\t\t", "Else", ",", "\n", "\t\t", 
           RowBox[{
            RowBox[{"Message", "[", 
             RowBox[{"DInv", "::", "badmtd"}], "]"}], ";", "\n", "\t\t", 
            RowBox[{"Return", "[", "$Failed", "]"}], ";"}]}], "\n", "\t", 
          "]"}], ";", "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"postprocess", " ", "&"}], " ", "return", " ", "answer"}], 
          " ", "*)"}], "\n", "\n", 
         RowBox[{"Which", "[", "\n", "\t", 
          RowBox[{
           RowBox[{"simplifyresult", "===", "True"}], ",", "\n", "\t", 
           RowBox[{"res2", "=", 
            RowBox[{"Simplify", "[", 
             RowBox[{"res", "/.", "traits"}], "]"}]}], ",", "\n", "\t", 
           RowBox[{"simplifyresult", "===", "Real"}], ",", "\n", "\t", 
           RowBox[{"res2", "=", 
            RowBox[{"RealSimplify", "[", 
             RowBox[{"res", "/.", "traits"}], "]"}]}], ",", "\n", "\t", 
           RowBox[{"simplifyresult", "===", "Full"}], ",", "\n", "\t", 
           RowBox[{"res2", "=", 
            RowBox[{"FullSimplify", "[", 
             RowBox[{
              RowBox[{"res", "/.", "traits"}], ",", 
              RowBox[{"Assumptions", "\[RuleDelayed]", 
               RowBox[{"{", 
                RowBox[{"_", "\[Element]", "Reals"}], "}"}]}]}], "]"}]}], ",",
            "\n", "\t", "Else", ",", "\n", "\t", 
           RowBox[{"res2", "=", 
            RowBox[{"res", "/.", "traits"}]}]}], "\n", "]"}], ";", "\n", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"chop", "\[Equal]", "True"}], ",", 
           RowBox[{"Return", "[", 
            RowBox[{"Chop", "[", "res2", "]"}], "]"}], ",", 
           RowBox[{"Return", "[", "res2", "]"}]}], "]"}], ";"}]}], "\n", "\n",
        "]"}]}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.688409484860559*^9, 3.6884094850430193`*^9}, {
   3.688571691014352*^9, 3.688571691363763*^9}, {3.688571766944192*^9, 
   3.688571767662545*^9}, {3.6885718071425858`*^9, 3.688571807347781*^9}, {
   3.68858564757653*^9, 3.6885856476304073`*^9}, {3.6886848351191*^9, 
   3.688684836110936*^9}, {3.688685239575528*^9, 3.6886852684243*^9}, {
   3.688685371216267*^9, 3.688685457071373*^9}, {3.688685491805615*^9, 
   3.6886855944321012`*^9}, {3.688685666081101*^9, 3.688685709071876*^9}, {
   3.688686532393525*^9, 3.688686570531084*^9}, {3.688686967619643*^9, 
   3.6886869718511744`*^9}, {3.688687501595601*^9, 3.688687509051474*^9}, {
   3.688690191864471*^9, 3.688690216811286*^9}, {3.6886904359314833`*^9, 
   3.688690436779223*^9}, {3.693593344753676*^9, 3.693593346087776*^9}, {
   3.696162142128591*^9, 3.6961621421421747`*^9}, {3.699656814130727*^9, 
   3.699656827772263*^9}, {3.699656922989606*^9, 3.69965692643228*^9}, {
   3.6996574841035137`*^9, 3.699657485146899*^9}, {3.6997224759081907`*^9, 
   3.699722510955907*^9}, {3.699722890602481*^9, 3.699722911516399*^9}, {
   3.708585314577449*^9, 3.708585320578861*^9}, {3.708585403464273*^9, 
   3.708585410058454*^9}, {3.70858748687399*^9, 3.708587492861423*^9}, {
   3.708588849708815*^9, 3.7085888503253107`*^9}, {3.7087891958429937`*^9, 
   3.7087892006910477`*^9}, {3.708789264908865*^9, 3.7087893328205547`*^9}, 
   3.7087899884770823`*^9, 3.708790770609296*^9, {3.7088346989343987`*^9, 
   3.7088347037724257`*^9}, {3.708856414950561*^9, 3.708856610207053*^9}, {
   3.708856666248259*^9, 3.708856698258183*^9}, {3.7088567711223707`*^9, 
   3.708856782794072*^9}, 3.708856814155902*^9, {3.7088568780609093`*^9, 
   3.708856928919075*^9}, {3.7088573673450336`*^9, 3.708857411015568*^9}, 
   3.7091248982923813`*^9, {3.7093367783792267`*^9, 3.709336781483921*^9}, {
   3.710105984843395*^9, 3.710105985569549*^9}, {3.710265160739797*^9, 
   3.710265165947465*^9}, {3.710496908302792*^9, 3.710496908456031*^9}, 
   3.7105881035658197`*^9, {3.711544885196096*^9, 3.711544892165225*^9}, {
   3.722026185946472*^9, 3.722026187040079*^9}, {3.7220340826764708`*^9, 
   3.722034086411149*^9}, {3.722086689487018*^9, 3.722086775803793*^9}, {
   3.725558609643663*^9, 3.7255586135269547`*^9}, {3.7255587410876617`*^9, 
   3.725558756822927*^9}, {3.725560004204715*^9, 3.725560006101136*^9}, {
   3.725560101343862*^9, 3.725560207009861*^9}, {3.725560257860138*^9, 
   3.72556026839965*^9}, {3.725560537907435*^9, 3.725560539363446*^9}, {
   3.725560608962031*^9, 3.72556071678693*^9}, {3.7255607596245193`*^9, 
   3.725560769822461*^9}, {3.725560852112874*^9, 3.725560860379747*^9}, {
   3.725560897881933*^9, 3.7255609105596733`*^9}, {3.725561232427062*^9, 
   3.7255612426003036`*^9}, {3.7255615927932663`*^9, 3.725561684615382*^9}, {
   3.725561722990157*^9, 3.725561744402972*^9}, {3.725561776214594*^9, 
   3.725561778363262*^9}, {3.7255618393099327`*^9, 3.7255619440220346`*^9}, {
   3.725562022409676*^9, 3.725562033240193*^9}, {3.725562070921035*^9, 
   3.725562132048007*^9}, {3.7257521464767847`*^9, 3.725752164357243*^9}, {
   3.72575837902586*^9, 3.725758419195056*^9}, {3.725758460341859*^9, 
   3.725758507753395*^9}, {3.7257585615051394`*^9, 3.725758568887459*^9}, {
   3.725758608591385*^9, 3.725758706182255*^9}, {3.726056506793614*^9, 
   3.726056512890716*^9}, {3.726056601749178*^9, 3.726056668282688*^9}, {
   3.726058724215993*^9, 3.7260587330185947`*^9}, {3.7260590982638273`*^9, 
   3.726059125588871*^9}, {3.7260592790346127`*^9, 3.726059284387944*^9}, {
   3.7260594848063726`*^9, 3.726059628393922*^9}, {3.726059668971458*^9, 
   3.72605967805964*^9}, {3.727140212475288*^9, 3.727140266258151*^9}, {
   3.727140344345508*^9, 3.727140347539303*^9}, {3.7271434497477694`*^9, 
   3.727143451156063*^9}, {3.727192130266629*^9, 3.727192133431782*^9}, {
   3.727193306852077*^9, 3.727193354905002*^9}, {3.727193934117882*^9, 
   3.727193937684354*^9}, {3.727195117242364*^9, 3.727195120514324*^9}, {
   3.727195209419877*^9, 3.727195236565754*^9}, 3.727226453261628*^9, {
   3.727226593262945*^9, 3.7272265955154657`*^9}, {3.727260862899851*^9, 
   3.727260865797398*^9}, {3.727261233240588*^9, 3.727261250202814*^9}, {
   3.727261505456867*^9, 3.727261515781476*^9}, {3.729285282916044*^9, 
   3.7292853008036423`*^9}, {3.7292857400058947`*^9, 
   3.7292857442232027`*^9}, {3.7312739091858683`*^9, 3.731273910710496*^9}, {
   3.731273970041256*^9, 3.731273991609583*^9}, {3.732665330477049*^9, 
   3.73266534084612*^9}, 3.7326654826316967`*^9, {3.732665594349462*^9, 
   3.732665609806953*^9}, {3.732665740448535*^9, 3.732665756709363*^9}, {
   3.732665794667954*^9, 3.7326658214886503`*^9}, 3.732666338672516*^9, {
   3.732666376522126*^9, 3.732666377020028*^9}, {3.732666469062303*^9, 
   3.732666469235889*^9}, {3.7326677173828278`*^9, 3.732667721325086*^9}, 
   3.732668611942316*^9, {3.735228216624214*^9, 3.735228286106765*^9}, {
   3.735228337600596*^9, 3.7352283420153723`*^9}, {3.755378794262679*^9, 
   3.755378813549526*^9}, {3.758827118984214*^9, 3.75882713912175*^9}, {
   3.7588272807643023`*^9, 3.758827281661419*^9}, {3.7605514647827063`*^9, 
   3.760551464999865*^9}, {3.760637275416691*^9, 3.760637291556622*^9}, {
   3.760800402053507*^9, 3.760800402319427*^9}, {3.760803028848382*^9, 
   3.7608031050567303`*^9}, {3.760803176184986*^9, 3.760803181127369*^9}, 
   3.76080378118045*^9, {3.7608038795291433`*^9, 3.7608038929996367`*^9}, {
   3.7608039545369864`*^9, 3.760803964143775*^9}, {3.76080536064916*^9, 
   3.760805373676947*^9}, {3.7608080144775467`*^9, 3.760808060229967*^9}, {
   3.760808729276627*^9, 3.760808766955875*^9}, 3.760808975761833*^9, {
   3.761218350293313*^9, 3.7612183645030823`*^9}, {3.761218402474339*^9, 
   3.7612184086397963`*^9}, {3.7612184779800587`*^9, 3.761218478384898*^9}, {
   3.761218691524013*^9, 3.761218696058558*^9}, {3.761218781554438*^9, 
   3.7612187977435083`*^9}, {3.7624192247868147`*^9, 3.762419229544874*^9}, {
   3.76892412920116*^9, 3.76892412924327*^9}, {3.769522714035934*^9, 
   3.7695227140794077`*^9}, {3.7695287176281137`*^9, 3.769528726194376*^9}, {
   3.769528835844141*^9, 3.7695288359007874`*^9}, 3.769760705707979*^9, {
   3.770020641275838*^9, 3.7700207329645844`*^9}, {3.77010670618353*^9, 
   3.770106706261024*^9}, 3.7704382651508083`*^9, {3.7707214431625853`*^9, 
   3.770721444189506*^9}, {3.794137240981588*^9, 3.794137240990878*^9}, 
   3.798128132822117*^9, {3.80027234136255*^9, 3.800272353696898*^9}, {
   3.806952962585416*^9, 3.806952964678699*^9}, 3.807027402345673*^9, {
   3.807369342903962*^9, 3.807369342914118*^9}, {3.807401780503935*^9, 
   3.80740178193534*^9}, {3.807548064869218*^9, 3.8075480816456957`*^9}, {
   3.807549619108037*^9, 3.807549622075841*^9}, {3.807549728545012*^9, 
   3.807549753445479*^9}, {3.807549895383541*^9, 3.807549900390448*^9}, {
   3.807549986463232*^9, 3.807550064942986*^9}, {3.807550153519465*^9, 
   3.80755018967904*^9}, {3.807550618525138*^9, 3.8075506299670973`*^9}, {
   3.807550739359623*^9, 3.807550739583351*^9}, {3.807552173180681*^9, 
   3.8075521892143507`*^9}, {3.8075522313443527`*^9, 3.807552232503249*^9}, {
   3.807552289938445*^9, 3.807552419099636*^9}, {3.807553451141624*^9, 
   3.8075534513749228`*^9}, {3.815265441217517*^9, 3.815265443497177*^9}, {
   3.815265545009635*^9, 3.815265552010667*^9}, {3.815265858945434*^9, 
   3.815265865245578*^9}, {3.8152664273984127`*^9, 3.815266428947652*^9}, 
   3.815266578256012*^9, {3.8152666452698793`*^9, 3.815266649549892*^9}, {
   3.8153462745575*^9, 3.81534628173248*^9}, {3.815346322845611*^9, 
   3.8153463756784153`*^9}, {3.815346619862817*^9, 3.815346634103928*^9}, {
   3.815346731130711*^9, 3.815346738945506*^9}, {3.815346771546248*^9, 
   3.815346796257963*^9}, {3.815346828018559*^9, 3.815346829700007*^9}, {
   3.8153515839637957`*^9, 
   3.8153515898778257`*^9}},ExpressionUUID->"f53e35b2-92ff-4e04-a502-\
367f97f3470c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",
 CellChangeTimes->{{3.769528752211075*^9, 
  3.769528753373805*^9}},ExpressionUUID->"e2634b83-567f-4341-8c77-\
8467a521e5b9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"first", " ", "derivative", " ", "abbreviated", " ", "syntax"}], 
   " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"DInv", "[", 
     RowBox[{
      RowBox[{"traits_", "?", "TraitsQ"}], ",", 
      RowBox[{"solin_", "?", "VariablesQ"}], ",", 
      RowBox[{"var", ":", 
       RowBox[{"(", 
        RowBox[{"_Subscript", "|", "_List", "|", "_Symbol"}], ")"}], ":", 
       "All"}], ",", 
      RowBox[{"pointin", ":", "notDInvOpts", ":", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
    RowBox[{"(", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"Global`uses", ",", "1"}], "]"}], ";"}], "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"Global`debug", ",", 
        RowBox[{
        "Print", "[", "\"\<DInv: assuming first-order derivative.\>\"", 
         "]"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"DInv", "[", 
       RowBox[{"traits", ",", "solin", ",", 
        RowBox[{"{", 
         RowBox[{"var", ",", "1"}], "}"}], ",", "pointin", ",", "opts"}], 
       "]"}]}], "\n", ")"}]}], ";"}]}]], "Code",
 CellChangeTimes->{
  3.69972280744681*^9, {3.699722881704784*^9, 3.699722881892372*^9}, 
   3.725756793483491*^9, {3.725757515967395*^9, 3.7257575162805967`*^9}, 
   3.7260594643223543`*^9, 3.726059604293744*^9, {3.727140415556292*^9, 
   3.727140419156055*^9}, 3.72714148606056*^9, 3.727143438161161*^9, 
   3.727192155695634*^9, 3.727192503860918*^9, 3.727193291259635*^9, 
   3.727193472814435*^9, 3.727193925450945*^9, 3.7271962703842897`*^9, 
   3.727196392932638*^9, 3.727196512423168*^9, 3.727260894419335*^9, {
   3.7272611784481983`*^9, 3.727261201465591*^9}, {3.727261369485969*^9, 
   3.727261391324809*^9}, 3.727261484507711*^9, 3.72731333805532*^9, 
   3.7273136176291656`*^9, 3.7273141576347847`*^9, {3.727314205809149*^9, 
   3.727314210582155*^9}, 3.727615364737482*^9, 3.73266528411712*^9, 
   3.7326664831727877`*^9, {3.760348402071705*^9, 3.760348423754315*^9}, 
   3.760800438192176*^9, {3.760809709543695*^9, 3.760809716149591*^9}, {
   3.7608100283149157`*^9, 3.760810030185904*^9}, {3.760850388992942*^9, 
   3.7608504091254683`*^9}, 3.7608507325826073`*^9, 
   3.760851429362711*^9},ExpressionUUID->"b7e93898-4ce8-4cda-a3d5-\
41ccacde49bd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"no", " ", "point", " ", "syntax"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"DInv", "[", 
     RowBox[{
      RowBox[{"traits_", "?", "TraitsQ"}], ",", 
      RowBox[{"solin_", "?", "VariablesQ"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"var", ":", 
         RowBox[{"(", 
          RowBox[{"_Subscript", "|", "_List", "|", "_Symbol"}], ")"}], ":", 
         "All"}], ",", 
        RowBox[{"ord_", "?", "NumberQ"}]}], "}"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
    RowBox[{"(", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"Global`uses", ",", "2"}], "]"}], ";"}], "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"Global`debug", ",", 
        RowBox[{"Print", "[", "\"\<DInv: no point given\>\"", "]"}]}], "]"}], 
      ";", "\n", "\t", 
      RowBox[{"DInv", "[", 
       RowBox[{"traits", ",", "solin", ",", 
        RowBox[{"{", 
         RowBox[{"var", ",", "ord"}], "}"}], ",", 
        RowBox[{"Guild", "\[Rule]", "Automatic"}], ",", "opts"}], "]"}]}], 
     "\n", ")"}]}], ";"}]}]], "Code",
 CellChangeTimes->{
  3.68857169138844*^9, 3.699722810793474*^9, 3.6997228791649437`*^9, 
   3.725756790585678*^9, {3.725757518532866*^9, 3.7257575186986027`*^9}, 
   3.7260594661617727`*^9, 3.726059605375781*^9, {3.727140397915341*^9, 
   3.7271404132153*^9}, {3.727141336476815*^9, 3.727141341484304*^9}, 
   3.727141487643011*^9, 3.727143434843361*^9, 3.727192153260571*^9, 
   3.7271925054610863`*^9, 3.727193293300386*^9, 3.7271934708510923`*^9, 
   3.727193923385489*^9, 3.72719606000701*^9, {3.727196273528886*^9, 
   3.727196282277506*^9}, 3.7271963950856867`*^9, 3.727196510439114*^9, 
   3.7272608978730507`*^9, {3.727261176222126*^9, 3.727261194197514*^9}, {
   3.7272613729628563`*^9, 3.727261393368786*^9}, 3.727261482638817*^9, 
   3.727313344534107*^9, 3.7273136206004057`*^9, 3.7273141550773087`*^9, {
   3.727314198716218*^9, 3.727314203426941*^9}, 3.727615368035083*^9, 
   3.732665280303267*^9, 3.7326664862501087`*^9, {3.7603484294269857`*^9, 
   3.760348467665736*^9}, {3.7608090364774237`*^9, 3.76080904161176*^9}, {
   3.760809719777182*^9, 3.760809723077508*^9}, 3.760810033844338*^9, 
   3.764043835176476*^9},ExpressionUUID->"7858232b-0a68-4e97-8926-\
e7feab7594b2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"no", " ", "order"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"DInv", "[", 
     RowBox[{
      RowBox[{"traits_", "?", "TraitsQ"}], ",", 
      RowBox[{"solin_", "?", "VariablesQ"}], ",", 
      RowBox[{"{", 
       RowBox[{"var", ":", 
        RowBox[{"(", 
         RowBox[{"_Subscript", "|", "_List", "|", "_Symbol"}], ")"}], ":", 
        "All"}], "}"}], ",", 
      RowBox[{"pointin", ":", "notDInvOpts", ":", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
    RowBox[{"(", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"Global`uses", ",", "3"}], "]"}], ";"}], "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"Global`debug", ",", 
        RowBox[{
        "Print", "[", "\"\<DInv: assuming first-order derivative.\>\"", 
         "]"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"DInv", "[", 
       RowBox[{"traits", ",", "solin", ",", 
        RowBox[{"{", 
         RowBox[{"var", ",", "1"}], "}"}], ",", "pointin", ",", "opts"}], 
       "]"}]}], "\n", ")"}]}], ";"}]}]], "Code",
 CellChangeTimes->{
  3.699722812506421*^9, 3.699722871969008*^9, 3.7257567872167473`*^9, {
   3.7257575335794697`*^9, 3.7257575337258987`*^9}, 3.7260594679794283`*^9, 
   3.726059606582761*^9, {3.7271403877988567`*^9, 3.727140402679377*^9}, 
   3.727140549538684*^9, 3.727140877526353*^9, {3.727141243496011*^9, 
   3.727141269191238*^9}, {3.727141332430135*^9, 3.7271413334167767`*^9}, 
   3.727141488811454*^9, 3.72714343136979*^9, 3.72719215111056*^9, 
   3.727192507190113*^9, 3.727193295068707*^9, 3.727193468122966*^9, 
   3.727193919813382*^9, 3.7271960620993958`*^9, 3.727196288488158*^9, 
   3.727196397259202*^9, 3.727196509206993*^9, 3.7272608888699207`*^9, {
   3.7272611747139797`*^9, 3.727261191727265*^9}, {3.72726139523263*^9, 
   3.727261399796979*^9}, 3.72726148157311*^9, 3.7273133475655403`*^9, 
   3.7273136238364067`*^9, 3.7273141522426367`*^9, {3.727314190980406*^9, 
   3.727314195820622*^9}, 3.727615371907753*^9, 3.7326652754035683`*^9, 
   3.732666489651609*^9, {3.760348472045628*^9, 3.760348498922455*^9}, {
   3.760809005000206*^9, 3.760809020227663*^9}, {3.760809726021954*^9, 
   3.7608097284897423`*^9}, 3.760810035317438*^9, {3.760850416394622*^9, 
   3.76085044629075*^9}, 3.7608507286488047`*^9, 
   3.7608514312938747`*^9},ExpressionUUID->"ca56b5fa-80fe-4193-864c-\
1361b086a679"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"no", " ", "order"}], ",", " ", 
    RowBox[{"no", " ", "point"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"DInv", "[", 
     RowBox[{
      RowBox[{"traits_", "?", "TraitsQ"}], ",", 
      RowBox[{"solin_", "?", "VariablesQ"}], ",", 
      RowBox[{"{", 
       RowBox[{"var", ":", 
        RowBox[{"(", 
         RowBox[{"_Subscript", "|", "_List", "|", "_Symbol"}], ")"}], ":", 
        "All"}], "}"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
    RowBox[{"(", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"Global`uses", ",", "4"}], "]"}], ";"}], "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"Global`debug", ",", 
        RowBox[{"Print", "[", "\"\<Dinv: no order, no point\>\"", "]"}]}], 
       "]"}], ";", "\n", "\t", 
      RowBox[{"DInv", "[", 
       RowBox[{"traits", ",", "solin", ",", 
        RowBox[{"{", 
         RowBox[{"var", ",", "1"}], "}"}], ",", 
        RowBox[{"Guild", "\[Rule]", "1"}], ",", "opts"}], "]"}]}], "\n", 
     ")"}]}], ";"}]}]], "Code",
 CellChangeTimes->{
  3.688571691421088*^9, 3.699722814754191*^9, {3.699722869064487*^9, 
   3.699722869193791*^9}, 3.72575678415497*^9, {3.7257575362044*^9, 
   3.7257575363417673`*^9}, 3.72605947068779*^9, 3.7260596091148233`*^9, 
   3.7260596845837193`*^9, {3.727140375994042*^9, 3.727140404574559*^9}, 
   3.727140509484771*^9, 3.727140879269641*^9, 3.72714108162078*^9, {
   3.7271411209400883`*^9, 3.727141122411648*^9}, {3.727141224804719*^9, 
   3.7271412639061003`*^9}, {3.727141312385696*^9, 3.7271413135234423`*^9}, 
   3.7271414899359617`*^9, 3.72714342765114*^9, 3.7271921483948708`*^9, {
   3.727192508797303*^9, 3.727192508998425*^9}, 3.7271932964122467`*^9, 
   3.72719346545336*^9, {3.727193911312727*^9, 3.7271939162174187`*^9}, 
   3.7271960652034607`*^9, 3.727196290839582*^9, 3.7271964004359703`*^9, 
   3.727196507243387*^9, 3.727260883041197*^9, {3.7272611734706507`*^9, 
   3.7272611894810658`*^9}, {3.7272613974525223`*^9, 3.7272614026271753`*^9}, 
   3.727261480216404*^9, 3.72731335245364*^9, 3.727313625931975*^9, {
   3.727314142598454*^9, 3.727314144999652*^9}, {3.7273141828756437`*^9, 
   3.727314188837471*^9}, 3.727615438272572*^9, 3.73266527070652*^9, 
   3.732666492553896*^9, {3.760348502824246*^9, 3.760348520834559*^9}, {
   3.760809733293188*^9, 3.760809734971224*^9}, 3.760810037008857*^9, 
   3.760850455163025*^9, 3.7608507255764217`*^9, 
   3.760851433306365*^9},ExpressionUUID->"ae4e6461-e55e-4a2a-85b4-\
2eb0d9b1cbbc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"no", " ", "var"}], ",", " ", 
    RowBox[{"no", " ", "order"}], ",", " ", 
    RowBox[{"no", " ", "point"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"DInv", "[", 
     RowBox[{
      RowBox[{"traits_", "?", "TraitsQ"}], ",", 
      RowBox[{"solin_", "?", "VariablesQ"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
    RowBox[{"(", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"Global`uses", ",", "5"}], "]"}], ";"}], "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"Global`debug", ",", 
        RowBox[{
        "Print", "[", "\"\<DInv: no var, no order, no point\>\"", "]"}]}], 
       "]"}], ";", "\n", "\t", 
      RowBox[{"DInv", "[", 
       RowBox[{"traits", ",", "solin", ",", 
        RowBox[{"{", 
         RowBox[{"All", ",", "1"}], "}"}], ",", "opts"}], "]"}]}], "\n", 
     ")"}]}], ";"}]}]], "Code",
 CellChangeTimes->{
  3.688571691421088*^9, 3.699722814754191*^9, {3.699722869064487*^9, 
   3.699722869193791*^9}, {3.7257556571757307`*^9, 3.725755692474262*^9}, 
   3.725756780409185*^9, {3.725757538297617*^9, 3.725757538429843*^9}, 
   3.726059473113021*^9, 3.726059608127398*^9, {3.7271403623985558`*^9, 
   3.727140373303388*^9}, {3.727140406095446*^9, 3.727140406469976*^9}, 
   3.727141084416483*^9, 3.727141116483667*^9, 3.7271416654563704`*^9, 
   3.7271425674183683`*^9, {3.727142646536396*^9, 3.727142647194604*^9}, {
   3.7271434106166153`*^9, 3.7271434239915333`*^9}, 3.7271921456128817`*^9, 
   3.7271934640551767`*^9, 3.727193907777062*^9, 3.727196402498579*^9, 
   3.727260879700729*^9, {3.7272612087659492`*^9, 3.7272612094299507`*^9}, {
   3.727261405026552*^9, 3.727261405848823*^9}, 3.727313356701837*^9, 
   3.7273136282371483`*^9, {3.727314013872478*^9, 3.727314018110485*^9}, {
   3.727314076667635*^9, 3.727314088225954*^9}, {3.727314175896228*^9, 
   3.727314181312373*^9}, 3.727615442219235*^9, 3.7326652669503603`*^9, 
   3.732666495060677*^9, {3.76034832709851*^9, 3.760348352420426*^9}, {
   3.760809737800292*^9, 3.760809741416072*^9}, 3.760810039618581*^9, 
   3.7608507166089773`*^9, 
   3.7611552612686567`*^9},ExpressionUUID->"1952eeae-5f7d-4bc9-9f16-\
29cb9d5e98c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"first", " ", "derivative", " ", "abbreviated", " ", "syntax"}], 
     " ", "&"}], " ", "break", " ", "up", " ", "traitsandpops"}], " ", "*)"}],
   "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"DInv", "[", 
     RowBox[{
      RowBox[{"eesol_", "?", "AttributesAndVariablesQ"}], ",", 
      RowBox[{"var", ":", 
       RowBox[{"(", 
        RowBox[{"_Subscript", "|", "_List", "|", "_Symbol"}], ")"}], ":", 
       "All"}], ",", 
      RowBox[{"pointin", ":", "notDInvOpts", ":", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
    RowBox[{"(", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"Global`uses", ",", "6"}], "]"}], ";"}], "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"Global`debug", ",", 
        RowBox[{
        "Print", "[", 
         "\"\<DInv: first derivative abbreviated syntax & break up \
traitsandpops\>\"", "]"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"DInv", "[", 
       RowBox[{
        RowBox[{"ExtractTraits", "[", "eesol", "]"}], ",", 
        RowBox[{"ExtractVariables", "[", "eesol", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"var", ",", "1"}], "}"}], ",", "pointin", ",", "opts"}], 
       "]"}]}], "\n", ")"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.727313527183497*^9, 3.72731360870995*^9}, 
   3.727313947246873*^9, {3.727314297304297*^9, 3.727314298726269*^9}, 
   3.7276154454599447`*^9, 3.732665262210698*^9, {3.732666137799644*^9, 
   3.73266614920185*^9}, 3.7326664992609453`*^9, {3.760347970853722*^9, 
   3.760347985344058*^9}, {3.760348094308223*^9, 3.760348101180616*^9}, {
   3.7603483142457647`*^9, 3.760348318778823*^9}, {3.7608097437822*^9, 
   3.760809747540147*^9}, 3.7608100414542103`*^9, 3.760851436066093*^9, 
   3.798128800058811*^9, 
   3.8073693429174957`*^9},ExpressionUUID->"af07fdf9-7e7c-4790-8368-\
90bd04963e99"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"general", " ", "derivative", " ", "abbreviated", " ", "syntax"}], 
   " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"DInv", "[", 
     RowBox[{
      RowBox[{"eesol_", "?", "AttributesAndVariablesQ"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"var", ":", 
         RowBox[{"(", 
          RowBox[{"_Subscript", "|", "_List", "|", "_Symbol"}], ")"}], ":", 
         "All"}], ",", "ord_Integer"}], "}"}], ",", 
      RowBox[{"pointin", ":", "notDInvOpts", ":", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
    RowBox[{"(", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"Global`uses", ",", "7"}], "]"}], ";"}], "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"Global`debug", ",", 
        RowBox[{
        "Print", "[", "\"\<DInv: general derivative abbreviated syntax\>\"", 
         "]"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"DInv", "[", 
       RowBox[{
        RowBox[{"ExtractTraits", "[", "eesol", "]"}], ",", 
        RowBox[{"ExtractVariables", "[", "eesol", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"var", ",", "ord"}], "}"}], ",", "pointin", ",", "opts"}], 
       "]"}]}], "\n", ")"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.727313527183497*^9, 3.72731360870995*^9}, 
   3.727313947246873*^9, {3.727314297304297*^9, 3.727314298726269*^9}, 
   3.7276154454599447`*^9, {3.73266510929391*^9, 3.7326651519084053`*^9}, 
   3.7326652585429277`*^9, {3.7326661521016693`*^9, 3.732666157341695*^9}, 
   3.732666502690999*^9, {3.760347915996437*^9, 3.760347957462944*^9}, {
   3.76034824239487*^9, 3.7603482500885057`*^9}, {3.760809750665044*^9, 
   3.7608097531153*^9}, 3.760810042666935*^9, 3.761155265843527*^9, 
   3.798128800061791*^9, 
   3.807369342920205*^9},ExpressionUUID->"9877f782-58a9-4841-9d00-\
46d00b40b116"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"break", " ", "up", " ", "traitsandpops"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"DInv", "[", 
     RowBox[{
      RowBox[{"eesol_", "?", "AttributesAndVariablesQ"}], ",", "rest___"}], 
     "]"}], ":=", 
    RowBox[{"(", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"Global`uses", ",", "8"}], "]"}], ";"}], "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"Global`debug", ",", 
        RowBox[{"Print", "[", "\"\<DInv: break up traitsandpops\>\"", "]"}]}],
        "]"}], ";", "\n", "\t", 
      RowBox[{"DInv", "[", 
       RowBox[{
        RowBox[{"ExtractTraits", "[", "eesol", "]"}], ",", 
        RowBox[{"ExtractVariables", "[", "eesol", "]"}], ",", "rest"}], 
       "]"}]}], "\n", ")"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.7257568968378477`*^9, 3.725756937640854*^9}, {
   3.725757301786862*^9, 3.7257573166885*^9}, 3.725757443538025*^9, {
   3.725757616077248*^9, 3.725757621663168*^9}, {3.727140352408634*^9, 
   3.727140359640779*^9}, 3.7271404089351673`*^9, {3.727142379422409*^9, 
   3.727142396727791*^9}, {3.727143385363762*^9, 3.7271434206858063`*^9}, 
   3.727192143123353*^9, 3.7271934616640997`*^9, 3.727193905601742*^9, {
   3.727194911077075*^9, 3.727194911938991*^9}, 3.72719641023064*^9, 
   3.727260876585277*^9, {3.727313361057337*^9, 3.727313369830591*^9}, 
   3.727313630561811*^9, 3.727615449611479*^9, 3.732665250514339*^9, {
   3.732666158798717*^9, 3.7326661627475452`*^9}, 3.732666505627792*^9, {
   3.760347992910548*^9, 3.760348018305872*^9}, {3.760348254305295*^9, 
   3.760348258379053*^9}, {3.7608097556795473`*^9, 3.760809757906631*^9}, 
   3.760810044040873*^9, 3.764043829213643*^9, 3.798128800064548*^9, 
   3.807369342922699*^9},ExpressionUUID->"2e4e2238-90b4-404c-b949-\
f6dd7e23cf04"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"first", " ", "derivative", " ", "abbreviated", " ", "syntax"}], 
    ",", " ", 
    RowBox[{"no", " ", "traits", " ", "or", " ", "variables"}]}], " ", "*)"}],
   "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"DInv", "[", 
     RowBox[{
      RowBox[{"var", ":", 
       RowBox[{"(", 
        RowBox[{"_Subscript", "|", "_List", "|", "_Symbol"}], ")"}], ":", 
       "All"}], ",", 
      RowBox[{"pointin", ":", "notDInvOpts", ":", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
    RowBox[{"(", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"Global`uses", ",", "9"}], "]"}], ";"}], "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"Global`debug", ",", 
        RowBox[{
        "Print", "[", 
         "\"\<DInv: first derivative abbreviated syntax, no traits or \
variables\>\"", "]"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"DInv", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"var", ",", "1"}], "}"}], ",", "pointin", ",", "opts"}], 
       "]"}]}], "\n", ")"}]}], ";"}]}]], "Code",
 CellChangeTimes->{
  3.6997228046391897`*^9, 3.699722885482452*^9, 3.725756796260682*^9, {
   3.725757514268159*^9, 3.725757514517384*^9}, 3.726059462228167*^9, 
   3.7260596030699587`*^9, {3.727140422193962*^9, 3.727140426565843*^9}, 
   3.727143441825259*^9, 3.727192158353827*^9, {3.727192501740758*^9, 
   3.7271925020476637`*^9}, {3.727193288478046*^9, 3.727193289491982*^9}, 
   3.727193474510859*^9, 3.727193927858632*^9, {3.727194709802841*^9, 
   3.7271947806251183`*^9}, 3.7271963877983913`*^9, 3.7271965353701973`*^9, 
   3.727226346185458*^9, 3.7272608724835463`*^9, 3.7272611038055964`*^9, {
   3.727261154543169*^9, 3.7272611677122803`*^9}, {3.727261219078762*^9, 
   3.7272612200800657`*^9}, {3.727261409911409*^9, 3.7272614150111732`*^9}, {
   3.727261473845125*^9, 3.727261475217743*^9}, {3.727313375732978*^9, 
   3.727313376520534*^9}, {3.727314714784667*^9, 3.7273147184813128`*^9}, 
   3.7276154543390913`*^9, {3.760348263198316*^9, 3.760348307817955*^9}, {
   3.760809761140316*^9, 3.7608097634846277`*^9}, 3.7608100461784477`*^9, 
   3.7608514400009203`*^9},ExpressionUUID->"eca88c5a-d75d-4ca3-8644-\
d766182220c2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NDInv", "[", "args___", "]"}], ":=", 
   RowBox[{"DInv", "[", 
    RowBox[{"args", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NDInv\>\""}]}], "]"}]}], ";"}]], "Code",\

 CellChangeTimes->{
  3.688571691445539*^9},ExpressionUUID->"a667433d-0d72-4502-817d-\
d3c7367bb3c9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["MaximizeInv", "Subsection",ExpressionUUID->"c600ede2-2253-483e-a245-c0763176e513"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"9f2c17dc-29f7-4c2d-ab5a-\
6cef42ecebcb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MaximizeInv", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<MaximizeInv[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"sol\", \"TI\"]\)] finds the trait value(s) that maximize \
invasion fitness into a community with \!\(\*StyleBox[\"traits\", \"TI\"]\) \
and \!\(\*StyleBox[\"sol\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769491970421609*^9, 
  3.769491972189262*^9}},ExpressionUUID->"277cb08c-61d5-4878-8683-\
18c26950de74"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"6283b168-12b8-47a3-a3ec-\
7fb82560ec0a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MaximizeInv", "[", 
    RowBox[{
     RowBox[{"traits", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "AttributesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"sol", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", " ", "\n", 
   
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<MaximizeInv\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "guild", ",", "delayinv", ",", "invopts", ",", 
       "maximizeopts", ",", "method", ",", "constraints", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "vars", ",", 
       "unks", ",", "inv", ",", "res"}], "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"reset", " ", "$InvCount"}], " ", "*)"}], "\n", 
        RowBox[{"$InvCount", "=", "0"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"OptionValue", "[", "Verbose", "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"OptionValue", "[", "VerboseAll", "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"guild", "=", 
         RowBox[{"OptionValue", "[", "Guild", "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"guild", "===", "Automatic"}], ",", 
          RowBox[{"guild", "=", 
           RowBox[{
           "guilds", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"delayinv", "=", 
         RowBox[{"OptionValue", "[", "DelayInv", "]"}]}], ";", "\n", 
        RowBox[{"invopts", "=", 
         RowBox[{"OptionValue", "[", "InvOpts", "]"}]}], ";", "\n", 
        RowBox[{"maximizeopts", "=", 
         RowBox[{"OptionValue", "[", "MaximizeOpts", "]"}]}], ";", "\n", 
        RowBox[{"method", "=", 
         RowBox[{"OptionValue", "[", "Method", "]"}]}], ";", "\n", 
        RowBox[{"constraints", "=", 
         RowBox[{"OptionValue", "[", "Constraints", "]"}]}], ";", "\n", "\n", 
        
        RowBox[{"vars", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"gtrait", ",", "0"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"gtrait", ",", 
             RowBox[{"gtraits", "[", "guild", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\n", 
        RowBox[{"unks", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Unk", "[", 
            RowBox[{"Subscript", "[", 
             RowBox[{"gtrait", ",", "0"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"gtrait", ",", 
             RowBox[{"gtraits", "[", "guild", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\n", "\n", "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"constraints", "===", "\"\<None\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"constraints", "=", 
            RowBox[{"{", "}"}]}], ";"}], "\n", ",", "\n", "\t", 
          RowBox[{"constraints", "===", "Automatic"}], ",", "\n", "\t", 
          RowBox[{"constraints", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Min", "[", 
               RowBox[{"range", "[", "gtrait", "]"}], "]"}], "\[LessEqual]", 
              RowBox[{"Subscript", "[", 
               RowBox[{"gtrait", ",", "0"}], "]"}], "\[LessEqual]", 
              RowBox[{"Max", "[", 
               RowBox[{"range", "[", "gtrait", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"gtrait", ",", 
               RowBox[{"gtraits", "[", "guild", "]"}]}], "}"}]}], "]"}]}], 
          "\n", ",", "\n", "\t", "Else", ",", "\n", "\t", 
          RowBox[{"constraints", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Min", "[", 
               RowBox[{"range", "[", "gtrait", "]"}], "]"}], "\[LessEqual]", 
              RowBox[{"Subscript", "[", 
               RowBox[{"gtrait", ",", "0"}], "]"}], "\[LessEqual]", 
              RowBox[{"Max", "[", 
               RowBox[{"range", "[", "gtrait", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"gtrait", ",", 
               RowBox[{"gtraits", "[", "guild", "]"}]}], "}"}]}], "]"}]}]}], 
         "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<constraints=\>\"", ",", "constraints"}], "]"}]}], 
         "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"delayinv", "\[Equal]", "True"}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{
            RowBox[{"inv", "[", 
             RowBox[{"varz_", "?", "NumericListQ"}], "]"}], ":=", 
            RowBox[{"Inv", "[", 
             RowBox[{"traits", ",", "sol", ",", 
              RowBox[{"Thread", "[", 
               RowBox[{"vars", "\[Rule]", "varz"}], "]"}], ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "invopts"}], "]"}], ",", 
              RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}], ";",
            "\n", "\t", 
           RowBox[{"res", "=", 
            RowBox[{"NMaximize", "[", 
             RowBox[{
              RowBox[{"Prepend", "[", 
               RowBox[{
                RowBox[{"constraints", "/.", "ToUnks"}], ",", 
                RowBox[{"inv", "[", "unks", "]"}]}], "]"}], ",", "unks", ",", 
              
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "maximizeopts"}], "]"}]}], "]"}]}], 
           ";"}], "\n", "\t", ",", " ", 
          RowBox[{"(*", " ", "else", " ", "*)"}], "\n", "\t", 
          RowBox[{
           RowBox[{"Off", "[", 
            RowBox[{"NIntegrate", "::", "inumr"}], "]"}], ";", "\n", "\t", 
           RowBox[{"inv", "=", 
            RowBox[{"Inv", "[", 
             RowBox[{"traits", ",", "sol", ",", 
              RowBox[{"Guild", "\[Rule]", "guild"}], ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "invopts"}], "]"}], ",", 
              RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}], ";",
            "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"Global`debug", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: inv=\>\"", ",", "inv"}], "]"}]}], 
            "]"}], ";", "\n", "\t", 
           RowBox[{"Which", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{"method", "\[Equal]", "\"\<Maximize\>\""}], ",", "\n", 
             "\t\t", 
             RowBox[{"res", "=", 
              RowBox[{"Maximize", "[", 
               RowBox[{
                RowBox[{"Prepend", "[", 
                 RowBox[{"constraints", ",", "inv"}], "]"}], ",", "vars", ",", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"Sequence", "@@", "maximizeopts"}], "]"}]}], "]"}]}],
              ",", "\n", "\t\t", 
             RowBox[{"method", "\[Equal]", "\"\<NMaximize\>\""}], ",", "\n", 
             "\t\t", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{"see", " ", 
                RowBox[{"https", ":"}]}], "//", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], 
                  "/", "questions"}], "/", "245404"}], "/"}]}], " ", "*)"}], 
             "\n", "\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"$VersionNumber", "\[Equal]", "12.2"}], ",", "\n", 
               "\t\t\t", 
               RowBox[{"Block", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Optimization`UseConvexMinimize", "=", "False"}], 
                  "}"}], ",", 
                 RowBox[{"res", "=", 
                  RowBox[{"NMaximize", "[", 
                   RowBox[{
                    RowBox[{"Prepend", "[", 
                    RowBox[{"constraints", ",", "inv"}], "]"}], ",", "vars", 
                    ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "maximizeopts"}], "]"}]}], 
                   "]"}]}]}], "]"}], ",", "\n", "\t\t\t", 
               RowBox[{"res", "=", 
                RowBox[{"NMaximize", "[", 
                 RowBox[{
                  RowBox[{"Prepend", "[", 
                   RowBox[{"constraints", ",", "inv"}], "]"}], ",", "vars", 
                  ",", 
                  RowBox[{"Evaluate", "[", 
                   RowBox[{"Sequence", "@@", "maximizeopts"}], "]"}]}], 
                 "]"}]}]}], "\n", "\t\t", "]"}], ",", "\n", "\t\t", "Else", 
             ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"Message", "[", 
               RowBox[{"MaximizeInv", "::", "badmtd"}], "]"}], ";", "\n", 
              "\t\t", 
              RowBox[{"Return", "[", "$Failed", "]"}]}]}], "\n", "\t", "]"}], 
           ";", "\n", "\t", 
           RowBox[{"On", "[", 
            RowBox[{"NIntegrate", "::", "inumr"}], "]"}]}]}], "\n", "]"}], 
        ";", "\n", "\n", 
        RowBox[{"Return", "[", 
         RowBox[{"res", "/.", "FromUnks"}], "]"}], ";"}]}], "\n", "\n", 
      "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.688571716844131*^9, 3.68857171691355*^9}, {
   3.688571775843402*^9, 3.688571775943841*^9}, {3.688571807803774*^9, 
   3.688571807840337*^9}, 3.6935932284121017`*^9, 3.709330279392198*^9, {
   3.709330459302061*^9, 3.709330472104042*^9}, {3.7093313275341663`*^9, 
   3.709331363854224*^9}, {3.70933589333078*^9, 3.709335893833712*^9}, {
   3.709336833373405*^9, 3.709336836437954*^9}, {3.710106002222921*^9, 
   3.710106004867454*^9}, 3.712738535203301*^9, {3.722033936591847*^9, 
   3.722033937204644*^9}, {3.722034621885207*^9, 3.722034626333557*^9}, {
   3.722088236017335*^9, 3.722088238081531*^9}, {3.725140958361236*^9, 
   3.725140958366749*^9}, {3.7340247729496527`*^9, 3.734024812108737*^9}, 
   3.734133920876542*^9, {3.7341340053250217`*^9, 3.7341340732366257`*^9}, {
   3.73413412651847*^9, 3.734134143437368*^9}, {3.734136108454589*^9, 
   3.73413610948388*^9}, {3.734136200190029*^9, 3.734136202863915*^9}, {
   3.734136255611788*^9, 3.734136295703025*^9}, {3.734136402156384*^9, 
   3.7341364682063932`*^9}, 3.734136864036984*^9, {3.734136964730917*^9, 
   3.73413696958357*^9}, {3.734137012411253*^9, 3.7341370171902246`*^9}, {
   3.734137075431032*^9, 3.734137081249216*^9}, {3.734137135233609*^9, 
   3.734137137326507*^9}, {3.73413719653926*^9, 3.734137201596093*^9}, {
   3.734137593338133*^9, 3.734137640855691*^9}, {3.734189803082953*^9, 
   3.7341898167179317`*^9}, {3.734189918290635*^9, 3.734189921438705*^9}, {
   3.734190001121459*^9, 3.734190011606889*^9}, {3.734190116009398*^9, 
   3.734190162611084*^9}, {3.734190221329423*^9, 3.734190271305799*^9}, {
   3.734190405332871*^9, 3.734190415770588*^9}, {3.734190957504084*^9, 
   3.734190972087165*^9}, {3.734191187483241*^9, 3.734191208433955*^9}, {
   3.73419125362202*^9, 3.73419131100988*^9}, {3.7341913637026987`*^9, 
   3.734191371235798*^9}, {3.734191408439578*^9, 3.734191408987722*^9}, {
   3.734192481430375*^9, 3.734192510131822*^9}, {3.7341925540477037`*^9, 
   3.7341925620053177`*^9}, {3.734192600800592*^9, 3.7341926123409777`*^9}, {
   3.7341926649769278`*^9, 3.734192674861348*^9}, {3.734192706745421*^9, 
   3.7341927129286823`*^9}, {3.734192757346341*^9, 3.734192837482367*^9}, {
   3.7341928798699703`*^9, 3.734192884728035*^9}, {3.7341929313320093`*^9, 
   3.734192935067844*^9}, {3.734192973540514*^9, 3.7341929738127337`*^9}, {
   3.734193028212146*^9, 3.734193029313189*^9}, {3.734193075585113*^9, 
   3.73419314594069*^9}, {3.7350834859505587`*^9, 3.735083486988276*^9}, 
   3.735083527139841*^9, {3.735084071973156*^9, 3.7350840786860647`*^9}, {
   3.735084113175556*^9, 3.735084169079273*^9}, {3.735085656207324*^9, 
   3.735085671393594*^9}, {3.735133244876545*^9, 3.7351332525860662`*^9}, 
   3.735133337935548*^9, {3.7351333846243563`*^9, 3.7351333850679626`*^9}, {
   3.7351346244656363`*^9, 3.7351346330122547`*^9}, {3.735134681645368*^9, 
   3.735134682795438*^9}, {3.735135075123555*^9, 3.735135080504208*^9}, 
   3.735135135814953*^9, {3.735135180471961*^9, 3.735135191363315*^9}, {
   3.735150495124508*^9, 3.735150495519101*^9}, {3.73515057065895*^9, 
   3.735150581787635*^9}, {3.735151257298046*^9, 3.735151302461709*^9}, {
   3.735153552730625*^9, 3.7351535965779123`*^9}, 3.735154926289887*^9, {
   3.735155063734151*^9, 3.7351550681374474`*^9}, {3.735155138227891*^9, 
   3.7351551405612583`*^9}, {3.73515541204638*^9, 3.7351554166548157`*^9}, {
   3.735155448219364*^9, 3.7351554521770067`*^9}, {3.735155568987934*^9, 
   3.73515559563713*^9}, {3.7351558467864943`*^9, 3.735155847636181*^9}, {
   3.735223565586306*^9, 3.735223566278942*^9}, {3.755535936224956*^9, 
   3.755535952789647*^9}, {3.7605514657223673`*^9, 3.7605514657416353`*^9}, {
   3.7612014986471367`*^9, 3.761201537907976*^9}, {3.761201726720399*^9, 
   3.7612017591660767`*^9}, {3.761202724852716*^9, 3.761202741251272*^9}, 
   3.7618987845182056`*^9, 3.761932168369619*^9, 3.7619322157829247`*^9, 
   3.761932433095621*^9, {3.76952181877781*^9, 3.769521818782044*^9}, 
   3.769760706174582*^9, 3.770438265346043*^9, 3.770721457869403*^9, {
   3.794137241286149*^9, 3.794137241289418*^9}, 3.7981281328734713`*^9, 
   3.8073693430521717`*^9, {3.8288830746191273`*^9, 3.8288830809865026`*^9}, {
   3.828887022758827*^9, 3.8288871322641573`*^9}, {3.8288871632629747`*^9, 
   3.828887206070189*^9}, {3.82888739113628*^9, 
   3.828887407560754*^9}},ExpressionUUID->"05bab04f-45b3-45b8-a81c-\
e86b59ff8e8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.729702446243598*^9, 
  3.7297024491601133`*^9}},ExpressionUUID->"de553b90-8cb7-49bc-9fe8-\
1b59abab5c74"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "MaximizeInv", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Guild", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"DelayInv", "\[Rule]", "False"}], ",", 
     RowBox[{"InvOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"MaximizeOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Constraints", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NMaximize\>\""}], ",", "\n", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.6885717167213173`*^9, 3.688571716811558*^9}, 
   3.709330252262224*^9, {3.725140958348022*^9, 3.725140958351716*^9}, {
   3.72970439961582*^9, 3.729704410444075*^9}, {3.7351558526279697`*^9, 
   3.735155887802498*^9}, {3.755535957323374*^9, 
   3.755535959939788*^9}},ExpressionUUID->"47b6d93e-f4c6-4fe6-8545-\
0935b4f777d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",ExpressionUUID->"e69d84ab-5463-498f-854b-f9481f6fd04c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"break", " ", "up", " ", "combined", " ", "traitsandpops"}], " ", 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"MaximizeInv", "[", 
     RowBox[{
      RowBox[{"sol_", "?", "AttributesAndVariablesQ"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\t", 
    RowBox[{"MaximizeInv", "[", 
     RowBox[{
      RowBox[{"ExtractAttributes", "[", "sol", "]"}], ",", 
      RowBox[{"ExtractVariables", "[", "sol", "]"}], ",", "opts"}], "]"}]}], 
   ";"}]}]], "Code",
 CellChangeTimes->{{3.709332984740677*^9, 3.7093330065501003`*^9}, {
   3.71273853521173*^9, 3.7127385352152452`*^9}, {3.729713904400272*^9, 
   3.729713911669437*^9}, {3.729713946977941*^9, 3.7297139497172937`*^9}, {
   3.770037253870878*^9, 3.770037262085771*^9}, 3.770037935509118*^9, 
   3.798128800090479*^9, 3.80736934305709*^9, {3.8075693736611223`*^9, 
   3.807569380123844*^9}},ExpressionUUID->"2e795bb4-738e-4185-a58c-\
3fc83b3a29c5"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["GlobalESSQ", "Subsection",
 CellChangeTimes->{3.68841347583677*^9, 
  3.689080039509948*^9},ExpressionUUID->"9ed494df-c3dc-46e3-8d30-\
72edcc4aa329"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"6cf635ce-a21c-466b-b008-\
8e30b25c1e18"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GlobalESSQ", "::", "usage"}], " ", "=", "\n", 
   "\"\<GlobalESSQ[\!\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"sol\
\", \"TI\"]\)] checks global ESS stability with \!\(\*StyleBox[\"traits\", \
\"TI\"]\) and ecological attractor \!\(\*StyleBox[\"sol\", \"TI\"]\).\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.7694919816931677`*^9, 3.769491982502429*^9}, {
  3.77000585291748*^9, 
  3.770005853034964*^9}},ExpressionUUID->"0cedab26-865e-491d-91a1-\
0cbed16a6e1b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"3969b113-4528-4b6e-a32a-\
9548f838c89b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GlobalESSQ", "[", 
    RowBox[{
     RowBox[{"traits_", "?", "AttributesQ"}], ",", 
     RowBox[{"sol_", "?", "VariablesQ"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<GlobalESSQ\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "\n", "maximizeinvopts", ",", "invthreshold", ",", 
       "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "inv", ",", 
       "tmp"}], "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"maximizeinvopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"MaximizeInvOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "GlobalESSQ", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"invthreshold", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"InvThreshold", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "GlobalESSQ", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "GlobalESSQ", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "GlobalESSQ", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"find", " ", "max", " ", "invader", " ", "rate"}], " ", 
             ".."}], " ", "if"}], " ", ">", " ", "invthreshold"}], ",", " ", 
          RowBox[{"then", " ", "not", " ", "globaless"}]}], " ", "*)"}], "\n",
         "\n", 
        RowBox[{"Do", "[", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"tmp", "[", "gu", "]"}], "=", 
            RowBox[{"MaximizeInv", "[", 
             RowBox[{"traits", ",", "sol", ",", 
              RowBox[{"Guild", "\[Rule]", "gu"}], ",", "maximizeinvopts"}], 
             "]"}]}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{
              "func", ",", "\"\<: MaximizeInv guild \>\"", ",", "gu", ",", 
               "\"\<=\>\"", ",", 
               RowBox[{"tmp", "[", "gu", "]"}]}], "]"}]}], "]"}], ";"}], "\n",
           ",", 
          RowBox[{"{", 
           RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"Return", "[", 
         RowBox[{"{", "\n", "\t", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"tmp", "[", "gu", "]"}], "\[LeftDoubleBracket]", "1",
                  "\[RightDoubleBracket]"}], ">", "invthreshold"}], ",", 
               "False", ",", "True"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", "\t", 
           
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"tmp", "[", "gu", "]"}], "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}], ",", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"gtrait", "\[Rule]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"gtrait", ",", "0"}], "]"}], "/.", 
                    RowBox[{
                    RowBox[{"tmp", "[", "gu", "]"}], "\[LeftDoubleBracket]", 
                    "2", "\[RightDoubleBracket]"}]}], ")"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"gtrait", ",", 
                   RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "}"}], "\n", 
         "]"}], ";"}]}], "\n", "\n", "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.68840948702074*^9, {3.688413475928183*^9, 3.688413476047365*^9}, {
   3.688571716944174*^9, 3.688571716981112*^9}, {3.6890800395487413`*^9, 
   3.689080039663636*^9}, {3.700085767055196*^9, 3.700085804605205*^9}, {
   3.709330101283683*^9, 3.7093301083946943`*^9}, {3.709330219524206*^9, 
   3.70933022220503*^9}, {3.7093368765777903`*^9, 3.709336877554902*^9}, 
   3.7101060060297832`*^9, {3.71025836477087*^9, 3.710258374784937*^9}, {
   3.711391347217828*^9, 3.711391363519307*^9}, {3.711392818371387*^9, 
   3.711392835309104*^9}, 3.712738535224595*^9, {3.722033943639798*^9, 
   3.72203394438297*^9}, {3.722034648599852*^9, 3.722034655494587*^9}, {
   3.722088277690257*^9, 3.722088294859303*^9}, {3.729702455542098*^9, 
   3.729702459089943*^9}, {3.72970250602721*^9, 3.729702524085492*^9}, {
   3.7297027353760757`*^9, 3.729702738436097*^9}, {3.729703978254846*^9, 
   3.729704015529566*^9}, {3.729704051910136*^9, 3.729704095211804*^9}, {
   3.729704360976425*^9, 3.729704384826613*^9}, {3.755373606223606*^9, 
   3.755373609666885*^9}, {3.760551409941197*^9, 3.76055141054679*^9}, 
   3.760551465746787*^9, 3.760551570943118*^9, {3.761199278992416*^9, 
   3.7611992839194517`*^9}, {3.762422832477982*^9, 3.7624228326168413`*^9}, 
   3.7697607061852427`*^9, 3.770438265350884*^9, 3.7707214579993153`*^9, 
   3.794137241293797*^9, {3.807569430759256*^9, 3.807569433670479*^9}, 
   3.8115010851118393`*^9},ExpressionUUID->"4db54ca2-f5e9-45ec-8642-\
6177f8186af8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.711392838405695*^9, 
  3.711392839414678*^9}},ExpressionUUID->"776c3c1f-a70a-49a7-ad7f-\
0e25006808ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "GlobalESSQ", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MaximizeInvOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"InvThreshold", "\[Rule]", 
      RowBox[{"10", "^", 
       RowBox[{"-", "10"}]}]}], ",", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.72970392214497*^9, 3.729703932233925*^9}, {
   3.729704417527686*^9, 3.729704421681736*^9}, 3.7624228297591343`*^9, {
   3.769520820894999*^9, 
   3.769520822441205*^9}},ExpressionUUID->"547a508b-04d4-4be3-bd68-\
a6026fab6150"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",
 CellChangeTimes->{{3.711392823036001*^9, 
  3.711392824034668*^9}},ExpressionUUID->"dbf460c1-e6a8-4187-8990-\
9aa3ee4217e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GlobalESSQ", "[", 
    RowBox[{
     RowBox[{"eesol_", "?", "AttributesAndVariablesQ"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"GlobalESSQ", "[", 
    RowBox[{
     RowBox[{"ExtractAttributes", "[", "eesol", "]"}], ",", 
     RowBox[{"ExtractVariables", "[", "eesol", "]"}], ",", "opts"}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.711392825467767*^9, 3.711392828114842*^9}, {
   3.712738535233054*^9, 3.712738535236649*^9}, 3.798128800092834*^9, 
   3.807369343061473*^9, {3.807569439166216*^9, 
   3.807569453526223*^9}},ExpressionUUID->"4295c53a-e39b-4176-9cca-\
16b98051cd26"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["LocalESSQ", "Subsection",
 CellChangeTimes->{{3.8114246778702393`*^9, 3.81142467928655*^9}, {
  3.81149903110643*^9, 
  3.811499032957354*^9}},ExpressionUUID->"9e12619c-c95e-4b6b-a2d7-\
1fa44ca75b21"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.8114249477060347`*^9, 
  3.81142494937716*^9}},ExpressionUUID->"b2048827-bbac-4249-9287-\
eecbe1c73e6a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"LocalESSQ", "::", "usage"}], "=", "\n", 
   "\"\<LocalESSQ[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"sol\", \"TI\"]\)] checks local ESS stability with \
\!\(\*StyleBox[\"traits\", \"TI\"]\) and ecological attractor \!\(\*StyleBox[\
\"sol\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.8114249553402452`*^9, 3.811424973337554*^9}, {
  3.811499035669606*^9, 3.8114990373734283`*^9}, {3.811500375161728*^9, 
  3.811500387909851*^9}, {3.81150061223411*^9, 
  3.811500641097975*^9}},ExpressionUUID->"df842ca0-7674-40ee-845b-\
1905b3866b61"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.811424976609585*^9, 
  3.8114249777616463`*^9}},ExpressionUUID->"a112cf7b-60c5-4916-9921-\
9cffb17a6f46"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"LocalESSQ", "[", 
    RowBox[{
     RowBox[{"traits_", "?", "AttributesQ"}], ",", 
     RowBox[{"sol_", "?", "VariablesQ"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<LocalESSQ\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", "\n", 
       
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "res"}], "\n",
       "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoSim", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"res", "=", 
         RowBox[{"Table", "[", "\n", "\t", 
          RowBox[{
           RowBox[{"NegativeDefiniteMatrixQ", "/@", 
            RowBox[{"DInv", "[", 
             RowBox[{"traits", ",", "sol", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Replace", "[", 
                 RowBox[{
                  RowBox[{"gtraits", "[", "gu", "]"}], ",", 
                  RowBox[{"var_Symbol", "\[Rule]", 
                   SubscriptBox["var", "0"]}], ",", "1"}], "]"}], ",", "2"}], 
               "}"}]}], "]"}]}], "\n", ",", 
           RowBox[{"{", 
            RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], ";", "\n", "\n", 
        
        RowBox[{"Return", "[", "res", "]"}]}]}], "\n", "]"}]}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.811424979913665*^9, 3.811424990033875*^9}, {
   3.811425083627582*^9, 3.811425087507594*^9}, {3.811425416943074*^9, 
   3.811425525871992*^9}, {3.811426248257588*^9, 3.811426262569021*^9}, {
   3.811501071662881*^9, 3.8115010990790854`*^9}, {3.811501229160305*^9, 
   3.8115012292958183`*^9}, {3.811501519827072*^9, 3.8115015624655857`*^9}, {
   3.811503022718358*^9, 3.811503034445607*^9}, 3.811504869050481*^9, {
   3.811505134596586*^9, 3.811505135235648*^9}, {3.811520009774218*^9, 
   3.811520023701523*^9}, {3.811520230199972*^9, 3.811520240050198*^9}, {
   3.811520324294437*^9, 
   3.811520342829731*^9}},ExpressionUUID->"197a56b8-7fe3-4ab1-8cf7-\
ee6aeddffc9f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.8114250257542963`*^9, 
  3.811425026489006*^9}},ExpressionUUID->"4ca2f99f-5d97-4145-bff2-\
7dc0be77932b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "LocalESSQ", "]"}], "=", 
   RowBox[{"{", "\n", "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.811425031218261*^9, 3.8114250390264063`*^9}, {
  3.811504918993503*^9, 
  3.811504921649146*^9}},ExpressionUUID->"b72c27a5-fab1-4976-a9a5-\
907c04a2f35a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",
 CellChangeTimes->{{3.8114250690986547`*^9, 
  3.811425070882545*^9}},ExpressionUUID->"bf02fe9a-d6d2-4617-9940-\
8a771d66b742"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"LocalESSQ", "[", 
    RowBox[{
     RowBox[{"eesol_", "?", "AttributesAndVariablesQ"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"LocalESSQ", "[", 
    RowBox[{
     RowBox[{"ExtractAttributes", "[", "eesol", "]"}], ",", 
     RowBox[{"ExtractVariables", "[", "eesol", "]"}], ",", "opts"}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.811425073898582*^9, 3.8114250768827133`*^9}, {
  3.8114255295233173`*^9, 3.811425531374476*^9}, {3.811504913318379*^9, 
  3.811504931721031*^9}},ExpressionUUID->"f31b744c-cef5-45f1-8e00-\
763dbcd43a60"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["PlotInv", "Subsection",ExpressionUUID->"1f7ea93e-cc68-4e47-9f98-0f4f291302ee"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"9f3864d8-dca5-4c42-80a0-\
b51e3bd4871b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotInv", "::", "usage"}], " ", "=", "\n", 
   "\"\<PlotInv[\!\(\*StyleBox[\"attributes\", \"TI\"]\), \
\!\(\*StyleBox[\"sol\", \"TI\"]\), {\!\(\*StyleBox[\"trait\", \"TI\"]\), \!\(\
\*StyleBox[\"traitmin\", \"TI\"]\), \!\(\*StyleBox[\"traitmax\", \"TI\"]\)}] \
plots a fitness landscape, where \!\(\*StyleBox[\"trait\", \"TI\"]\) varies \
from \!\(\*StyleBox[\"traitmin\", \"TI\"]\) to \!\(\*StyleBox[\"traitmax\", \
\"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769489667189636*^9, 3.769489685313718*^9}, {
  3.769489723808463*^9, 3.769489757664628*^9}, {3.7700058399927273`*^9, 
  3.770005840120759*^9}, {3.8074020071677847`*^9, 3.8074020074471817`*^9}, {
  3.8077382749289703`*^9, 
  3.807738278231374*^9}},ExpressionUUID->"8d14fff6-4b8c-4193-83e5-\
6cda8e4d1f48"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"64595bb4-a591-4de3-bcb5-\
b17cf49168e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotInv", "[", 
    RowBox[{
     RowBox[{"attributes", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "AttributesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"sol", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"trait1_", ",", 
       RowBox[{"trait1min_", "?", "NumericQ"}], ",", 
       RowBox[{"trait1max_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<PlotInv\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "monitor", ",", "\n", "fixed", ",", "species", ",", 
       "delayinv", ",", "invopts", ",", "time", ",", "plotopts", ",", 
       "plotspecies", ",", "markerstyle", ",", "plotguildopts", ",", "tf", 
       ",", "axeslabel", ",", "plotrange", ",", "tadplotrange", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "nb", ",", 
       "x", ",", "iplot", ",", "\n", "iopts", ",", "imin", ",", "imax", ",", 
       "tmin", ",", "tmax", ",", "s", ",", "iaspectratio", ",", "iticks", ",",
        "iaxesorigin", ",", "iplotrangepadding", ",", "resplotrange", ",", 
       "lmin", ",", "\n", "gu", ",", "tr", ",", "per", ",", "res", ",", "inv",
        ",", "epilog", ",", "tad"}], "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<attributes=\>\"", ",", "attributes"}], "]"}], ";", 
         "\n", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<sol=\>\"", ",", "sol"}], "]"}], ";", "\n", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<{trait1,trait1min,trait1max}=\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}]}], 
          "]"}], ";"}], "*)"}], "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotInv", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotInv", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"fixed", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Fixed", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotInv", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"species", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Species", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotInv", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"monitor", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Monitor", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotInv", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"delayinv", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"DelayInv", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotInv", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"delayinv", "===", "Automatic"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"modelperiod", "=!=", "0"}], ",", 
            RowBox[{"delayinv", "=", "True"}], ",", 
            RowBox[{"delayinv", "=", "False"}]}], "]"}]}], "]"}], ";", "\n", 
        RowBox[{"invopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"InvOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotInv", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"time", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Time", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotInv", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"plotspecies", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"ShowSpecies", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotInv", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"markerstyle", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"MarkerStyle", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotInv", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"plotrange", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PlotRange", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotInv", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"plotguildopts", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{"PlotGuildOpts", "/.", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"opts", ",", 
                RowBox[{"Options", "[", "PlotInv", "]"}]}], "}"}], "]"}]}], 
            "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0", ",", "All"}], "}"}]}], "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"tadplotrange", "=", 
         RowBox[{"PlotRange", "/.", "plotguildopts"}]}], ";", "\n", 
        RowBox[{"tf", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"TADVerticalScale", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotInv", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"plotopts", "=", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotInv", "]"}]}], "}"}], "]"}], ",", 
           RowBox[{"Options", "[", "Plot", "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"axeslabel", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"AxesLabel", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotInv", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"axeslabel", "===", "Automatic"}], ",", 
          RowBox[{"axeslabel", "=", 
           RowBox[{"{", "trait1", "}"}]}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "figure", " ", "out", " ", "what", " ", "trait", " ", "is", " ", 
           "on", " ", "the", " ", "x"}], "-", "axis"}], " ", "*)"}], "\n", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"gu", ",", "tr"}], "}"}], "=", 
         RowBox[{
          RowBox[{"LookUp", "[", "trait1", "]"}], "\[LeftDoubleBracket]", 
          RowBox[{"2", ";;", "3"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "add", " ", "to", " ", "fixed", " ", "if", " ", "species", " ", "is",
           " ", "given"}], " ", "*)"}], "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"species", "=!=", "None"}], ",", "\n", "\t", 
          RowBox[{"fixed", "=", 
           RowBox[{"Flatten", "@", 
            RowBox[{"{", "\n", "\t\t", 
             RowBox[{"fixed", ",", "\n", "\t\t", 
              RowBox[{"Table", "[", "\n", "\t\t\t", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"guild1", "[", "interaction", "]"}], "===", 
                    "gu"}], ",", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"interaction", ",", "0", ",", "sp\[Prime]_"}], 
                    "]"}], "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    "interaction", ",", "species", ",", "sp\[Prime]"}], "]"}],
                     "/.", "attributes"}], ")"}]}], ",", "Nothing"}], "]"}], 
                  ",", "\n", "\t\t\t", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"guild2", "[", "interaction", "]"}], "===", 
                    "gu"}], ",", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"interaction", ",", "sp\[Prime]_", ",", "0"}], 
                    "]"}], "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    "interaction", ",", "sp\[Prime]", ",", "species"}], "]"}],
                     "/.", "attributes"}], ")"}]}], ",", "Nothing"}], "]"}]}],
                  "}"}], "\n", "\t\t", ",", 
                RowBox[{"{", 
                 RowBox[{"interaction", ",", "EcoEvo`Private`interactions"}], 
                 "}"}]}], "]"}], ",", "\n", "\t\t", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Subscript", "[", 
                    RowBox[{"gtrait", ",", "0"}], "]"}], "=!=", "trait1"}], 
                  ",", 
                  RowBox[{
                   RowBox[{"Subscript", "[", 
                    RowBox[{"gtrait", ",", "0"}], "]"}], "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"gtrait", ",", "species"}], "]"}], "/.", 
                    "attributes"}], ")"}]}], ",", "Nothing"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"gtrait", ",", 
                  RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}]}], 
             "\n", "\t\t", "}"}]}]}]}], "\n", "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<fixed=\>\"", ",", "fixed"}], "]"}], ";"}], "*)"}], 
        "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"Set\[ScriptCapitalN]", "[", 
         RowBox[{"attributes", ",", "sol"}], "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"monitor", ",", 
          RowBox[{"PrintTemporary", "[", 
           RowBox[{"Dynamic", "[", 
            RowBox[{
             RowBox[{"ToString", "[", 
              RowBox[{"TraditionalForm", "@", "trait1"}], "]"}], "<>", 
             "\"\<=\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"TraditionalForm", "@", "x"}], "]"}]}], "]"}], "]"}]}], 
         "]"}], ";", "\[IndentingNewLine]", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"plot", " ", "fitness", " ", "function"}], " ", "*)"}], "\n", 
        RowBox[{"If", "[", 
         RowBox[{"delayinv", ",", "\n", "\t", 
          RowBox[{"(*", " ", 
           RowBox[{"delay", " ", "inv"}], " ", "*)"}], "\n", "\t", 
          RowBox[{
           RowBox[{
            RowBox[{"inv", "[", 
             RowBox[{"\[FormalX]_", "?", "NumberQ"}], "]"}], ":=", 
            RowBox[{"Inv", "[", 
             RowBox[{"attributes", ",", "sol", ",", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"tr", ",", "0"}], "]"}], "\[Rule]", "\[FormalX]"}],
                  "}"}], ",", "fixed"}], "]"}], ",", 
              RowBox[{"Guild", "\[Rule]", "gu"}], ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "invopts"}], "]"}], ",", 
              RowBox[{"Time", "\[Rule]", "time"}], ",", 
              RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}], ";",
            "\n", "\t", 
           RowBox[{"iplot", "=", 
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"x", "=", "\[FormalX]"}], ";", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"inv", "[", "\[FormalX]", "]"}], "]"}]}], ")"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[FormalX]", ",", "trait1min", ",", "trait1max"}], 
               "}"}], ",", "\n", "\t\t", 
              RowBox[{"AxesLabel", "\[Rule]", "axeslabel"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"trait1min", ",", "trait1max"}], "}"}], ",", 
                 "plotrange"}], "}"}]}], ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
              RowBox[{"AxesOrigin", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"trait1min", ",", "0"}], "}"}]}]}], "]"}]}], ";"}], 
          "\n", ",", "\n", "\t", 
          RowBox[{"(*", " ", 
           RowBox[{"nondelay", " ", "inv"}], " ", "*)"}], "\n", "\t", 
          RowBox[{
           RowBox[{"Off", "[", 
            RowBox[{"NIntegrate", "::", "inumr"}], "]"}], ";", "\n", "\t", 
           RowBox[{"inv", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"Inv", "[", 
               RowBox[{"attributes", ",", "sol", ",", 
                RowBox[{"Guild", "\[Rule]", "gu"}], ",", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"Sequence", "@@", "invopts"}], "]"}], ",", 
                RowBox[{"Time", "\[Rule]", "time"}], ",", 
                RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}], "/.",
               "fixed"}], "/.", "attributes"}]}], ";", "\n", "\t", 
           RowBox[{"iplot", "=", 
            RowBox[{"Plot", "[", 
             RowBox[{"inv", ",", 
              RowBox[{"{", 
               RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], 
              ",", "\n", "\t\t", 
              RowBox[{"AxesLabel", "\[Rule]", "axeslabel"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"trait1min", ",", "trait1max"}], "}"}], ",", 
                 "plotrange"}], "}"}]}], ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
              RowBox[{"AxesOrigin", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"trait1min", ",", "0"}], "}"}]}]}], "]"}]}], ";", 
           "\n", "\t", 
           RowBox[{"On", "[", 
            RowBox[{"NIntegrate", "::", "inumr"}], "]"}]}]}], "\n", "]"}], 
        ";", "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", "iplot", "]"}], ";"}], "*)"}], "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"plot", " ", "species", " ", "markers"}], " ", "*)"}], "\n", 
        
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[ScriptCapitalN]", "gu"], "\[Equal]", "0"}], ",", 
          RowBox[{"plotspecies", "=", "\"\<None\>\""}]}], "]"}], ";", "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"plotspecies", "===", "\"\<Axis\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"markerstyle", "===", "Automatic"}], ",", 
             "\[IndentingNewLine]", "\t\t", 
             RowBox[{"epilog", "=", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"PointSize", "[", "0.015", "]"}], ",", 
                  RowBox[{
                   RowBox[{"color", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"tr", ",", "sp"}], "]"}], "]"}], "[", 
                   RowBox[{"SpFrac", "[", 
                    RowBox[{"sp", ",", 
                    RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}]}], "]"}], 
                   "]"}], ",", 
                  RowBox[{"Point", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"tr", ",", "sp"}], "]"}], "/.", "attributes"}], 
                    ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"sp", ",", 
                  RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}]}], "}"}]}], 
               "]"}]}], ",", "\[IndentingNewLine]", "\t\t", 
             RowBox[{"epilog", "=", 
              RowBox[{"MapThread", "[", 
               RowBox[{"Append", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"PadRight", "[", 
                   RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], ",", "\n", 
                    "\t\t\t", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", "#", "}"}], "]"}], "&"}], ",", 
                    "markerstyle"}], "]"}]}], "]"}], ",", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"Point", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"tr", ",", "sp"}], "]"}], "/.", "attributes"}], 
                    ",", "0"}], "}"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"sp", ",", 
                    RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}]}], "}"}]}], 
                   "]"}]}], "}"}]}], "]"}]}]}], "\n", "\t", "]"}], ";", "\n", 
           "\t", 
           RowBox[{"res", "=", 
            RowBox[{"Show", "[", 
             RowBox[{"iplot", ",", 
              RowBox[{"Epilog", "\[Rule]", "epilog"}]}], "]"}]}]}], "\n", ",",
           "\n", "\t", 
          RowBox[{"plotspecies", "===", "\"\<TAD\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"epilog", "=", 
            RowBox[{"{", "}"}]}], ";", "\n", "\t", 
           RowBox[{"tad", "=", 
            RowBox[{"PlotGuild", "[", 
             RowBox[{"attributes", ",", 
              RowBox[{"TemporalMean", "[", "sol", "]"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"trait1min", ",", "trait1max"}], "}"}], ",", 
                 "tadplotrange"}], "}"}]}], ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "plotguildopts"}], "]"}], ",", "\n", 
              "\t\t", 
              RowBox[{"ImagePadding", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{"Scaled", "[", "0.05", "]"}]}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Axes", "\[Rule]", "False"}], ",", 
              RowBox[{"Guild", "\[Rule]", "gu"}], ",", 
              RowBox[{"Species", "\[Rule]", "species"}], ",", 
              RowBox[{"Time", "\[Rule]", "time"}]}], "]"}]}], ";", "\n", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", "tad", "]"}], ";"}], "*)"}], "\n", "\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"tmin", ",", "tmax"}], "}"}], "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"PlotRange", "/.", 
               RowBox[{"AbsoluteOptions", "[", 
                RowBox[{"tad", ",", "PlotRange"}], "]"}]}], ")"}], 
             "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ";", 
           "\n", "\t", 
           RowBox[{"iopts", "=", 
            RowBox[{"AbsoluteOptions", "[", "iplot", "]"}]}], ";", "\n", "\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"imin", ",", "imax"}], "}"}], "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"PlotRange", "/.", "iopts"}], ")"}], 
             "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ";", 
           "\n", "\t", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"\"\<{imin,imax}=\>\"", ",", 
               RowBox[{"{", 
                RowBox[{"imin", ",", "imax"}], "}"}]}], "]"}], ";", "\n", 
             "\t", 
             RowBox[{"Print", "[", 
              RowBox[{"\"\<{tmin,tmax}=\>\"", ",", 
               RowBox[{"{", 
                RowBox[{"tmin", ",", "tmax"}], "}"}]}], "]"}], ";"}], "*)"}], 
           "\n", "\t", 
           RowBox[{"iaspectratio", "=", 
            RowBox[{"AspectRatio", "/.", "iopts"}]}], ";", "\n", "\t", 
           RowBox[{"iticks", "=", 
            RowBox[{"Ticks", "/.", "iopts"}]}], ";", "\n", "\t", 
           RowBox[{"iaxesorigin", "=", 
            RowBox[{"AxesOrigin", "/.", "iopts"}]}], ";", "\n", "\t", 
           RowBox[{"iplotrangepadding", "=", 
            RowBox[{"PlotRangePadding", "/.", "iopts"}]}], ";", "\n", "\t", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"\"\<iaxesorigin=\>\"", ",", "iaxesorigin"}], "]"}], 
             ";", "\n", "\t", 
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<iplotrangepadding=\>\"", ",", "iplotrangepadding"}], "]"}],
              ";"}], "*)"}], "\n", "\t", 
           RowBox[{"s", "=", 
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{"tf", "*", 
               RowBox[{"imin", "/", 
                RowBox[{"(", 
                 RowBox[{"tmax", 
                  RowBox[{"(", 
                   RowBox[{"tf", "-", "1"}], ")"}]}], ")"}]}]}], ",", 
              RowBox[{"tf", "*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"imax", "-", 
                  RowBox[{"Min", "[", 
                   RowBox[{"0", ",", "imin"}], "]"}]}], ")"}], "/", 
                "tmax"}]}]}], "]"}]}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{"scale", " ", "TAD"}], " ", "*)"}], "\n", "\t", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"\"\<s=\>\"", ",", "s"}], "]"}], ";"}], "*)"}], "\n", 
           "\t", 
           RowBox[{"resplotrange", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Min", "[", 
               RowBox[{"imin", ",", "tmin"}], "]"}], ",", 
              RowBox[{"Max", "[", 
               RowBox[{"imax", ",", 
                RowBox[{"s", "*", "tmax"}]}], "]"}]}], "}"}]}], ";", "\n", 
           "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", 
               RowBox[{"iplotrangepadding", "\[LeftDoubleBracket]", 
                RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], "===",
               "Scaled"}], ",", "\n", "\t\t", 
             RowBox[{"lmin", "=", 
              RowBox[{"imax", "+", 
               RowBox[{"1.01", "*", 
                RowBox[{
                 RowBox[{"Differences", "[", "resplotrange", "]"}], 
                 "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "*", 
                
                RowBox[{"iplotrangepadding", "\[LeftDoubleBracket]", 
                 RowBox[{"2", ",", "2", ",", "1"}], 
                 "\[RightDoubleBracket]"}]}]}]}], ",", "\n", "\t\t", 
             RowBox[{"lmin", "=", 
              RowBox[{"imax", "+", 
               RowBox[{"iplotrangepadding", "\[LeftDoubleBracket]", 
                RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "+", 
               RowBox[{"0.01", "*", 
                RowBox[{
                 RowBox[{"Differences", "[", "resplotrange", "]"}], 
                 "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}]}]}]}], "\n", "\t", "]"}], ";", 
           "\n", "\t", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"\"\<lmin=\>\"", ",", "lmin"}], "]"}], ";"}], "*)"}], 
           "\n", "\t", 
           RowBox[{"res", "=", 
            RowBox[{"Show", "[", 
             RowBox[{"iplot", ",", "\n", "\t\t", 
              RowBox[{"PlotRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"trait1min", ",", "trait1max"}], "}"}], ",", 
                 "resplotrange"}], "}"}]}], ",", 
              RowBox[{"Ticks", "\[Rule]", "iticks"}], ",", "\n", "\t\t", 
              RowBox[{
               StyleBox["Prolog",
                Background->RGBColor[1, 1, 0]], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"White", ",", "Thick", ",", 
                   RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "iaxesorigin", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", "lmin"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "iaxesorigin", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"10", "^", "10"}]}], "}"}]}], "}"}], "]"}]}], 
                  "}"}], ",", "\n", "\t\t", 
                 RowBox[{"Inset", "[", 
                  RowBox[{
                   RowBox[{"Show", "[", 
                    RowBox[{"tad", ",", 
                    RowBox[{"AspectRatio", "\[Rule]", 
                    RowBox[{"iaspectratio", "*", "tf"}]}]}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                   RowBox[{"Scaled", "[", "1", "]"}]}], "]"}]}], "}"}]}]}], 
             "]"}]}], ";"}], "\n", "\t", 
          RowBox[{"(*", 
           RowBox[{"res", "=", 
            RowBox[{"Show", "[", "\n", "\t\t", 
             RowBox[{"iplot", ",", "\n", "\t\t", 
              RowBox[{"PlotRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"trait1min", ",", "trait1max"}], "}"}], ",", 
                 "plotrange"}], "}"}]}], ",", 
              RowBox[{"Ticks", "\[Rule]", "iticks"}], ",", "\n", "\t\t", 
              RowBox[{"Epilog", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"White", ",", 
                   RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "iaxesorigin", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", "lmin"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "iaxesorigin", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"10", "^", "10"}]}], "}"}]}], "}"}], "]"}]}], 
                  "}"}], ",", "\n", "\t\t", 
                 RowBox[{"Inset", "[", 
                  RowBox[{
                   RowBox[{"Show", "[", 
                    RowBox[{"tad", ",", 
                    RowBox[{"AspectRatio", "\[Rule]", 
                    RowBox[{"iaspectratio", "*", "tf"}]}]}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                   RowBox[{"Scaled", "[", "1", "]"}]}], "]"}], ",", "\n", 
                 "\t\t", 
                 RowBox[{"Inset", "[", 
                  RowBox[{
                   RowBox[{"Show", "[", 
                    RowBox[{"iplot", ",", 
                    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
                    RowBox[{"PlotRange", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"trait1min", ",", "trait1max"}], "}"}], ",", 
                    "resplotrange"}], "}"}]}]}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                   RowBox[{"Scaled", "[", "1", "]"}]}], "]"}]}], "}"}]}]}], 
             "]"}]}], "*)"}], "\n", ",", "\n", "\t", "Else", ",", "\n", "\t", 
          
          RowBox[{"res", "=", "iplot"}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"monitor", ",", 
          RowBox[{"NotebookClose", "[", "nb", "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"Return", "[", "res", "]"}]}]}], "\n", "]"}]}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.687822515057189*^9, 3.687822530773478*^9}, {
   3.687822625324526*^9, 3.687822698958035*^9}, {3.6878236899075813`*^9, 
   3.687823777026969*^9}, {3.687858288554859*^9, 3.687858379316575*^9}, 
   3.687859034131632*^9, {3.687859081281536*^9, 3.687859085028665*^9}, {
   3.6878592216893463`*^9, 3.687859227539363*^9}, {3.687859260960005*^9, 
   3.6878592676681757`*^9}, 3.687881459180863*^9, {3.687972052514495*^9, 
   3.687972079063807*^9}, {3.687972196418675*^9, 3.6879722087865877`*^9}, {
   3.6879722540377913`*^9, 3.687972258321142*^9}, {3.687972345209043*^9, 
   3.687972350459255*^9}, {3.687972402572905*^9, 3.687972407607215*^9}, {
   3.687972472313492*^9, 3.687972474706842*^9}, {3.688065178156893*^9, 
   3.6880651786355457`*^9}, {3.6880655342479753`*^9, 3.688065544159995*^9}, 
   3.688078874572472*^9, {3.6885716915065823`*^9, 3.688571691947671*^9}, {
   3.688571767697315*^9, 3.6885717678709517`*^9}, 3.688571807380752*^9, {
   3.689078898055829*^9, 3.689078898347412*^9}, {3.689079052886949*^9, 
   3.6890790620368347`*^9}, {3.689079283066757*^9, 3.689079369029817*^9}, {
   3.68907982857856*^9, 3.689079842628839*^9}, {3.689080906961464*^9, 
   3.68908091853683*^9}, {3.689081027869495*^9, 3.689081040196702*^9}, {
   3.689085649134398*^9, 3.689085659181603*^9}, {3.689250618177328*^9, 
   3.689250624127245*^9}, {3.689250654786996*^9, 3.6892506922458267`*^9}, {
   3.693750523154491*^9, 3.693750536879137*^9}, 3.696162142155159*^9, {
   3.70933678368288*^9, 3.709336785075458*^9}, 3.710105986287383*^9, {
   3.7102562236106052`*^9, 3.710256245763166*^9}, {3.7102620179583797`*^9, 
   3.710262025221158*^9}, {3.71026517976542*^9, 3.710265183399001*^9}, {
   3.711221366000457*^9, 3.711221407610972*^9}, {3.7127385348473587`*^9, 
   3.712738534856024*^9}, 3.722029501119842*^9, {3.7220341275926533`*^9, 
   3.722034131610355*^9}, {3.7251409583231916`*^9, 3.725140958338376*^9}, 
   3.725141965387879*^9, {3.726014195927367*^9, 3.726014197180872*^9}, {
   3.726016667043661*^9, 3.726016710633573*^9}, {3.7260183058312263`*^9, 
   3.726018316028738*^9}, {3.7280015915478487`*^9, 3.7280016081604033`*^9}, {
   3.728001998267466*^9, 3.7280020111772213`*^9}, {3.728002980789393*^9, 
   3.7280030587312393`*^9}, {3.728003100706468*^9, 3.728003137954404*^9}, {
   3.728003238050528*^9, 3.728003244288938*^9}, {3.7280032798515577`*^9, 
   3.72800328026143*^9}, {3.729205960608561*^9, 3.729206000014824*^9}, {
   3.729253188925953*^9, 3.7292532162997437`*^9}, {3.7297102940324783`*^9, 
   3.729710299129622*^9}, 3.729710368438281*^9, {3.729710425885874*^9, 
   3.729710432792466*^9}, {3.7340134237861423`*^9, 3.734013435317161*^9}, {
   3.734014523342512*^9, 3.7340145235148563`*^9}, {3.734176664236327*^9, 
   3.7341766880011806`*^9}, {3.734176719961142*^9, 3.734176777770238*^9}, {
   3.7341768179016657`*^9, 3.734176820363332*^9}, {3.734177106189267*^9, 
   3.7341771298672657`*^9}, {3.734177836604755*^9, 3.734177866258082*^9}, {
   3.734177976093787*^9, 3.734177980561645*^9}, {3.734178023125246*^9, 
   3.734178089466783*^9}, {3.734178137296987*^9, 3.734178208076991*^9}, 
   3.734178624045022*^9, {3.734178749007515*^9, 3.73417881313762*^9}, {
   3.734178849453348*^9, 3.734178861872795*^9}, {3.734179280127408*^9, 
   3.734179288469619*^9}, 3.734179335413727*^9, {3.734182832951275*^9, 
   3.734182853692371*^9}, {3.734183923689186*^9, 3.7341839279183187`*^9}, {
   3.734184034952119*^9, 3.734184049062687*^9}, {3.734184187018696*^9, 
   3.734184262697177*^9}, {3.734184312551462*^9, 3.734184316960545*^9}, {
   3.7427538252731533`*^9, 3.742753826195713*^9}, {3.742769274111416*^9, 
   3.742769276909334*^9}, {3.742770184650483*^9, 3.7427701868838167`*^9}, {
   3.74277144874271*^9, 3.742771487111938*^9}, {3.742771976719841*^9, 
   3.742771978691617*^9}, {3.742772275702368*^9, 3.74277229116921*^9}, {
   3.7427723268293123`*^9, 3.7427723303579807`*^9}, {3.742772484186269*^9, 
   3.7427725148708057`*^9}, {3.742772548591604*^9, 3.742772585532236*^9}, {
   3.742772636301237*^9, 3.742772643048668*^9}, {3.742811207726762*^9, 
   3.742811210204801*^9}, {3.742811769513678*^9, 3.742811781348051*^9}, {
   3.742812228960372*^9, 3.7428122311487503`*^9}, {3.742812355161635*^9, 
   3.742812358811573*^9}, {3.742813176083551*^9, 3.7428131772276783`*^9}, {
   3.742813281143999*^9, 3.7428132882665*^9}, {3.755039062835951*^9, 
   3.7550390858923597`*^9}, {3.7587200270174828`*^9, 
   3.7587200491680937`*^9}, {3.760771354670401*^9, 3.760771363862617*^9}, {
   3.760771426573275*^9, 3.760771434936987*^9}, {3.760771470173852*^9, 
   3.760771473213044*^9}, {3.760771895997445*^9, 3.760772011928965*^9}, {
   3.760772042762755*^9, 3.760772076436163*^9}, {3.760772964622822*^9, 
   3.7607730107485743`*^9}, {3.760790678462947*^9, 3.7607906790117064`*^9}, {
   3.762406660037051*^9, 3.7624066892591133`*^9}, {3.767680831878668*^9, 
   3.7676808461869307`*^9}, {3.767681249054401*^9, 3.7676812509733973`*^9}, {
   3.767681564650297*^9, 3.767681566475297*^9}, {3.767681618805065*^9, 
   3.767681719481382*^9}, {3.767681802009488*^9, 3.7676818996495256`*^9}, {
   3.767682102447146*^9, 3.7676821162564497`*^9}, {3.767682283949895*^9, 
   3.767682287562471*^9}, {3.767682648132848*^9, 3.767682674954535*^9}, {
   3.767682809048053*^9, 3.7676828513705683`*^9}, {3.767682884605277*^9, 
   3.76768291060604*^9}, {3.767685585020913*^9, 3.767685616475292*^9}, {
   3.767686041822577*^9, 3.767686071370371*^9}, {3.767686228514377*^9, 
   3.767686229534124*^9}, {3.767686388285735*^9, 3.7676864075201797`*^9}, {
   3.767686548030298*^9, 3.7676865505845823`*^9}, {3.767686692536628*^9, 
   3.767686692869727*^9}, {3.767686872551299*^9, 3.7676868949834948`*^9}, {
   3.767709792927574*^9, 3.767709818667453*^9}, {3.767710134642276*^9, 
   3.767710357425305*^9}, {3.767711020382333*^9, 3.767711178225119*^9}, {
   3.767711287264325*^9, 3.767711323896446*^9}, {3.767711357770249*^9, 
   3.7677113747335377`*^9}, {3.767711453508485*^9, 3.767711498365184*^9}, {
   3.767716496573887*^9, 3.767716584904101*^9}, {3.7677166592913713`*^9, 
   3.767716663250008*^9}, {3.767761004083555*^9, 3.7677611104949923`*^9}, {
   3.767761160700287*^9, 3.767761171673183*^9}, {3.767766167534769*^9, 
   3.767766196304922*^9}, {3.767797354399763*^9, 3.767797527809264*^9}, {
   3.767797727503951*^9, 3.767797732400609*^9}, {3.7677978233305807`*^9, 
   3.76779786215329*^9}, {3.767797905806987*^9, 3.7677979497523937`*^9}, {
   3.767800306838687*^9, 3.767800307715334*^9}, 3.7678003407452507`*^9, 
   3.767800419663095*^9, {3.767800513387594*^9, 3.767800533804984*^9}, 
   3.767800611513537*^9, 3.76780070947401*^9, 3.767800748174323*^9, 
   3.767800822733968*^9, 3.767800876898302*^9, {3.767800924837017*^9, 
   3.7678009278084803`*^9}, 3.7678009914280987`*^9, {3.767801196514477*^9, 
   3.76780119752626*^9}, {3.767801245071178*^9, 3.767801248536579*^9}, {
   3.767801282380724*^9, 3.767801284783654*^9}, {3.7678013390239363`*^9, 
   3.767801365845296*^9}, {3.7678014759794273`*^9, 3.767801581791115*^9}, {
   3.7678016990606947`*^9, 3.7678017318382998`*^9}, {3.767801833581894*^9, 
   3.7678018426932497`*^9}, {3.767802064470463*^9, 3.767802064880796*^9}, {
   3.767806606111394*^9, 3.7678066429205837`*^9}, {3.767812364755934*^9, 
   3.767812409737759*^9}, {3.767848711889349*^9, 3.767848739735091*^9}, {
   3.767850429938011*^9, 3.767850433996773*^9}, {3.767852731708167*^9, 
   3.767852782240037*^9}, {3.7678528556761417`*^9, 3.767852889902894*^9}, {
   3.767852980499613*^9, 3.767853028955917*^9}, {3.7678531771488667`*^9, 
   3.7678532209154387`*^9}, {3.767853425622162*^9, 3.767853426130178*^9}, {
   3.767853718869217*^9, 3.767853752576302*^9}, {3.767854610042391*^9, 
   3.767854649246014*^9}, {3.767854712673901*^9, 3.7678547365957613`*^9}, {
   3.767854769658827*^9, 3.767854788180448*^9}, {3.767855581490903*^9, 
   3.767855581977477*^9}, {3.767855620910554*^9, 3.767855622908681*^9}, {
   3.767855850468823*^9, 3.76785596680791*^9}, {3.767856081996241*^9, 
   3.767856129160697*^9}, {3.76785623737878*^9, 3.767856249843039*^9}, {
   3.7678563685727*^9, 3.767856381155963*^9}, {3.767856427950753*^9, 
   3.7678564498184147`*^9}, {3.767856623764406*^9, 3.7678566408669453`*^9}, {
   3.7678568993918753`*^9, 3.7678569114937763`*^9}, {3.767856946184546*^9, 
   3.767857057768154*^9}, {3.767857101777231*^9, 3.767857108371316*^9}, {
   3.767857328837831*^9, 3.767857398698447*^9}, {3.76785760888587*^9, 
   3.767857624299809*^9}, {3.767858016886936*^9, 3.767858255030161*^9}, {
   3.767858287036371*^9, 3.767858336367559*^9}, {3.767858701227467*^9, 
   3.767858712978614*^9}, {3.767859654888299*^9, 3.7678596621542273`*^9}, {
   3.7678606954897346`*^9, 3.767860757188814*^9}, {3.7678607960546722`*^9, 
   3.767860878471367*^9}, {3.767860944029777*^9, 3.767860974901649*^9}, {
   3.7678610325467176`*^9, 3.767861040567409*^9}, {3.767861091061575*^9, 
   3.767861101735209*^9}, {3.7678611405387506`*^9, 3.767861191438055*^9}, {
   3.767861232296989*^9, 3.767861280243404*^9}, 3.76786305885012*^9, {
   3.767863131117711*^9, 3.7678631395989*^9}, {3.7678631805200253`*^9, 
   3.767863184054022*^9}, {3.767863610866002*^9, 3.767863613199786*^9}, {
   3.767863660874543*^9, 3.7678637099016314`*^9}, {3.767863751873288*^9, 
   3.767863761239665*^9}, {3.7678638007515163`*^9, 3.7678638044748783`*^9}, {
   3.767864211467849*^9, 3.767864234815189*^9}, {3.767864305906537*^9, 
   3.767864327639039*^9}, {3.7678644025222178`*^9, 3.767864406587122*^9}, {
   3.767867290777543*^9, 3.767867294455392*^9}, {3.767867536408732*^9, 
   3.767867656996372*^9}, {3.767868235305931*^9, 3.767868245179212*^9}, {
   3.7678683536725073`*^9, 3.767868434307798*^9}, {3.767868497031457*^9, 
   3.767868570854002*^9}, {3.767868620401626*^9, 3.767868622932773*^9}, {
   3.768847390437511*^9, 3.768847392405733*^9}, 3.769537682985745*^9, {
   3.769537824459771*^9, 3.769537836425044*^9}, 3.7695379425654507`*^9, 
   3.769538587873891*^9, 3.769538641603323*^9, {3.769538718631711*^9, 
   3.769538751018528*^9}, 3.7697607057430763`*^9, 3.76996845024175*^9, {
   3.770111170278234*^9, 3.770111190652886*^9}, {3.7702247825915813`*^9, 
   3.7702247884633007`*^9}, 3.770438265164858*^9, {3.770721444452207*^9, 
   3.77072144546144*^9}, {3.774591780204822*^9, 3.774591795240206*^9}, {
   3.774591851559628*^9, 3.774591852429298*^9}, {3.774592056230872*^9, 
   3.774592163896586*^9}, {3.7745922913455973`*^9, 3.77459229745681*^9}, {
   3.774593025959819*^9, 3.77459305443854*^9}, {3.774593592394239*^9, 
   3.774593606018656*^9}, {3.774595388969961*^9, 3.774595447609757*^9}, {
   3.774595676773473*^9, 3.774595683605715*^9}, {3.7745958086391497`*^9, 
   3.774595809019108*^9}, 3.7941372410040073`*^9, 3.798128132833371*^9, 
   3.807369342940227*^9, {3.80754228546416*^9, 3.807542299703217*^9}, {
   3.807542351664892*^9, 3.8075423711602173`*^9}, {3.807542767750442*^9, 
   3.80754276842915*^9}, {3.807542816827485*^9, 3.8075428454817743`*^9}, 
   3.807543121434943*^9, 3.807554110837126*^9, {3.80755446325847*^9, 
   3.807554469218478*^9}, 3.807554531642803*^9, 3.807556579620002*^9, {
   3.807557351880814*^9, 3.807557384073394*^9}, 3.807557414916255*^9, {
   3.807557479626749*^9, 3.8075574995396023`*^9}, {3.80755754430086*^9, 
   3.807557546011217*^9}, {3.8075577953963833`*^9, 3.807557899013764*^9}, {
   3.807558008719612*^9, 3.8075582200090647`*^9}, {3.807558291652266*^9, 
   3.807558348129106*^9}, {3.807558835744081*^9, 3.807558844911582*^9}, {
   3.807559516710753*^9, 3.807559519692628*^9}, {3.8077382850174026`*^9, 
   3.807738327456352*^9}, {3.8077433618772087`*^9, 3.807743403214732*^9}, {
   3.821454195696754*^9, 3.821454196717843*^9}, {3.821454266754889*^9, 
   3.821454292003777*^9}, {3.822927230396716*^9, 3.822927230680781*^9}, {
   3.8290634479218683`*^9, 3.82906344793034*^9}, {3.829172276537928*^9, 
   3.8291722827841587`*^9}, 3.829233546886565*^9, 3.8292335999052067`*^9, 
   3.829233645049313*^9, {3.829233676879094*^9, 3.8292336926109753`*^9}, {
   3.829233727567679*^9, 3.829233728766666*^9}, 3.8292338050943003`*^9, {
   3.8292338682247953`*^9, 3.829233916760397*^9}, {3.829234152043401*^9, 
   3.829234235651225*^9}, {3.829234274704547*^9, 3.829234281300042*^9}, {
   3.8293902957403193`*^9, 3.829390303860606*^9}, {3.829390336069027*^9, 
   3.829390343928241*^9}, {3.829391699832757*^9, 3.829391705569906*^9}, 
   3.829393066138526*^9},ExpressionUUID->"a4faf0bc-5eeb-49c0-bf5e-\
860578dd2853"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",
 CellChangeTimes->{{3.75872004405049*^9, 
  3.7587200454520693`*^9}},ExpressionUUID->"2b428564-dedd-453b-9d5a-\
20000496ba89"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"split", " ", "combined", " ", "traitsandpops"}], " ", "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"PlotInv", "[", 
     RowBox[{
      RowBox[{"traitsandpops_", "?", "AttributesAndVariablesQ"}], ",", 
      RowBox[{"{", 
       RowBox[{"trait1_", ",", "trait1min_", ",", "trait1max_"}], "}"}], ",", 
      
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
    RowBox[{"PlotInv", "[", 
     RowBox[{
      RowBox[{"ExtractAttributes", "[", "traitsandpops", "]"}], ",", 
      RowBox[{"ExtractVariables", "[", "traitsandpops", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
      "opts"}], "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.758720053096051*^9, 3.7587200615898848`*^9}, {
   3.7702224831912537`*^9, 3.770222502470639*^9}, 3.7981288000673513`*^9, 
   3.807369342944803*^9, {3.807554065641233*^9, 3.807554067295993*^9}, {
   3.807554143241743*^9, 
   3.807554144520132*^9}},ExpressionUUID->"0a812c37-f124-4b87-bc15-\
c4bd5ecd4970"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.758720032476091*^9, 
  3.758720033461117*^9}},ExpressionUUID->"f1cf0190-85d8-4945-b89b-\
868ee2d55c71"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PlotInv", "]"}], "=", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"InvOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Species", "\[Rule]", "None"}], ",", "\n", "\t", 
     RowBox[{"DelayInv", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Time", "\[Rule]", "t"}], ",", "\n", "\t", 
     RowBox[{"MarkerStyle", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"ShowSpecies", "\[Rule]", "\"\<TAD\>\""}], ",", 
     RowBox[{"PlotGuildOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"TADVerticalScale", "\[Rule]", "0.25"}], ",", "\n", "\t", 
     RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", "\n", "\t", 
     RowBox[{"PlotStyle", "\[Rule]", "Gray"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "5"}], ",", "\n", "\t", 
     RowBox[{"Monitor", "\[Rule]", "False"}], ",", "\n", "\t", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "\n", "}"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{
  3.7587200413365297`*^9, {3.767681285835305*^9, 3.767681310154229*^9}, {
   3.767681880812373*^9, 3.767681886250182*^9}, 3.767686393246468*^9, 
   3.767686531101912*^9, {3.767797707873724*^9, 3.767797715339979*^9}, {
   3.767800636504181*^9, 3.767800636841601*^9}, 3.7678576344317408`*^9, {
   3.767863725820301*^9, 3.767863729342362*^9}, {3.7678676269746227`*^9, 
   3.7678676308673143`*^9}, 3.769538684653969*^9, 3.7699684502490063`*^9, {
   3.8075578175989513`*^9, 3.807557820597583*^9}, 
   3.829063447932181*^9},ExpressionUUID->"3c664b8b-b964-46ae-9d84-\
00b153bb3012"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["PlotZIP", "Subsection",
 CellChangeTimes->{{3.7286048505701714`*^9, 3.7286048617994328`*^9}, {
   3.769792674307019*^9, 3.769792677218246*^9}, 
   3.778392917215657*^9},ExpressionUUID->"6b175291-20d9-4d8b-a1fc-\
df2e979fc58d"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"c18810e2-d43b-42e9-811d-\
825cfacf5938"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotZIP", "::", "usage"}], " ", "=", "\n", 
   "\"\<PlotZIP[{\!\(\*StyleBox[\"var1\", \"TI\"]\), \!\(\*StyleBox[\"var1min\
\", \"TI\"]\), \!\(\*StyleBox[\"var1max\", \"TI\"]\)}, {\!\(\*StyleBox[\"var2\
\", \"TI\"]\), \!\(\*StyleBox[\"var2min\", \"TI\"]\), \
\!\(\*StyleBox[\"var2max\", \"TI\"]\)}, \!\(\*StyleBox[\"inv\", \"TI\"]\)] \
creates a zero invasion plot, with invader \!\(\*StyleBox[\"inv\", \
\"TI\"]\)\!\(\*StyleBox[\" \", \"TI\"]\)(inferred if omitted).\n\
PlotZIP[\!\(\*StyleBox[\"sol\", \"TI\"]\), {\!\(\*StyleBox[\"var1\", \
\"TI\"]\), \!\(\*StyleBox[\"var1min\", \"TI\"]\), \!\(\*StyleBox[\"var1max\", \
\"TI\"]\)}, {\!\(\*StyleBox[\"var2\", \"TI\"]\), \!\(\*StyleBox[\"var2min\", \
\"TI\"]\), \!\(\*StyleBox[\"var2max\", \"TI\"]\)}, \!\(\*StyleBox[\"inv\", \
\"TI\"]\)] uses equilibrium \!\(\*StyleBox[\"sol\", \"TI\"]\).\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.769489783249412*^9, 3.7694897841925707`*^9}, {
  3.769793352279131*^9, 3.769793379807412*^9}, {3.769793450276259*^9, 
  3.769793479052867*^9}, {3.7697935275463552`*^9, 3.769793538613879*^9}, {
  3.7697936333851767`*^9, 3.769793648232885*^9}, {3.778392814328051*^9, 
  3.778392814758724*^9}, {3.8074020640406723`*^9, 
  3.80740206742381*^9}},ExpressionUUID->"65a14529-660a-4f3c-9101-\
0a463ed0d6c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"88518556-c845-4db4-856c-\
855a5c0bbfe5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotZIP", "[", 
    RowBox[{
     RowBox[{"solin_", ":", "\"\<FindEcoAttractor\>\""}], ",", 
     RowBox[{"{", 
      RowBox[{"var1_", ",", 
       RowBox[{"var1min_", "?", "NumericQ"}], ",", 
       RowBox[{"var1max_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"var2_", ",", 
       RowBox[{"var2min_", "?", "NumericQ"}], ",", 
       RowBox[{"var2max_", "?", "NumericQ"}]}], "}"}], ",", "\n", 
     RowBox[{"invaderin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "InvaderQ"}], ")"}], ":", "Automatic"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<PlotZIP\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "printtrace", ",", "monitor", ",", "\n", "fixed", 
       ",", "delayinv", ",", "findecoattractoropts", ",", "invopts", ",", 
       "plotopts", ",", "plottype", ",", "ics", ",", "invthreshold", ",", 
       "guild", ",", "\n", "boundarystyle", ",", "invstyle", ",", 
       "noninvstyle", ",", "framelabel", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "nb", ",", 
       "x", ",", "y", ",", "\n", "fixedvars", ",", "traitinv", ",", "subrule",
        ",", "luv1", ",", "luv2", ",", "gu", ",", "tr1", ",", "tr2", ",", 
       "invader", ",", "sol", ",", "inv", ",", "res"}], "}"}], ",", "\n", 
     "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotZIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotZIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"printtrace", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PrintTrace", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotZIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"monitor", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Monitor", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotZIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"fixed", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Fixed", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotZIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"delayinv", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"DelayInv", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotZIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"findecoattractoropts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"FindEcoAttractorOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotZIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"invopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"InvOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotZIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"plotopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PlotOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotZIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"plottype", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PlotType", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotZIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"ics", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"ICs", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotZIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"invthreshold", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"InvThreshold", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotZIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"invthreshold", "===", "Automatic"}], ",", 
          RowBox[{"invthreshold", "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], ",", 
             "1", ",", "0"}], "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"boundarystyle", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"BoundaryStyle", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotZIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"invstyle", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"InvStyle", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotZIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"noninvstyle", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"NonInvStyle", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotZIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"framelabel", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"FrameLabel", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"fixedvars", "=", 
         RowBox[{"fixed", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "figure", " ", "out", " ", "what", " ", "are", " ", "the", " ", 
           "traits", " ", "on", " ", "the", " ", "x"}], "-", " ", 
          RowBox[{"and", " ", "y"}], "-", "axes"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"luv1", "=", 
         RowBox[{"LookUp", "[", "var1", "]"}]}], ";", "\n", 
        RowBox[{"luv2", "=", 
         RowBox[{"LookUp", "[", "var2", "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<LookUp[var1]=\>\"", ",", "luv1", ",", 
            "\"\< LookUp[var2]=\>\"", ",", "luv2"}], "]"}], ";"}], "*)"}], 
        "\n", "\n", 
        RowBox[{"traitinv", "=", 
         RowBox[{"{", "}"}]}], ";", 
        RowBox[{"subrule", "=", 
         RowBox[{"{", "}"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
           "luv1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "===", "\"\<gtrait\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"gu", ",", "tr1"}], "}"}], "=", 
            RowBox[{"luv1", "\[LeftDoubleBracket]", 
             RowBox[{"2", ";;", "3"}], "\[RightDoubleBracket]"}]}], ";", "\n",
            "\t", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"traitinv", ",", 
             RowBox[{"var1", "\[Rule]", "\[FormalX]"}]}], "]"}]}], ",", "\n", 
          "\t", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"subrule", ",", 
            RowBox[{"var1", "\[Rule]", "\[FormalX]"}]}], "]"}]}], "\n", "]"}],
         ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
           "luv2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "===", "\"\<gtrait\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
               "luv1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                "===", "\"\<gtrait\>\""}], "&&", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "luv2", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}], "\[NotEqual]", "gu"}], ")"}]}], 
             ",", 
             RowBox[{
              RowBox[{"Message", "[", 
               RowBox[{"PlotZIP", "::", "diffsp"}], "]"}], ";", 
              RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
           "\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"gu", ",", "tr2"}], "}"}], "=", 
            RowBox[{"luv2", "\[LeftDoubleBracket]", 
             RowBox[{"2", ";;", "3"}], "\[RightDoubleBracket]"}]}], ";", "\n",
            "\t", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"traitinv", ",", 
             RowBox[{"var2", "\[Rule]", "\[FormalY]"}]}], "]"}]}], ",", "\n", 
          "\t", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"subrule", ",", 
            RowBox[{"var2", "\[Rule]", "\[FormalY]"}]}], "]"}]}], "\n", "]"}],
         ";", "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<gu=\>\"", ",", "gu"}], "]"}], ";", "\n", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<traitinv=\>\"", ",", "traitinv"}], "]"}], ";", "\n", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<subrule=\>\"", ",", "subrule"}], "]"}], ";"}], "*)"}],
         "\n", "\n", 
        RowBox[{"If", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"invaderin", "===", "Automatic"}], ",", "\n", "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"guilds", ",", "gu"}], "]"}], ",", "\n", "\t\t", 
            RowBox[{"invader", "=", "traitinv"}], ",", "\n", "\t\t", 
            RowBox[{
             RowBox[{"Message", "[", 
              RowBox[{"PlotZIP", "::", "unkinv"}], "]"}], ";", 
             RowBox[{"Return", "[", "$Failed", "]"}]}]}], "\n", "\t", "]"}], 
          "\n", ",", "\n", "\t", 
          RowBox[{"invader", "=", "invaderin"}]}], "\n", "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<invader=\>\"", ",", "invader"}], "]"}], ";"}], "*)"}],
         "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"boundarystyle", "===", "Automatic"}], ",", "\n", "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"LookUp", "[", "invader", "]"}], "\[LeftDoubleBracket]",
               "1", "\[RightDoubleBracket]"}], "\[Equal]", "\"\<pcomp\>\""}], 
            ",", "\n", "\t\t", 
            RowBox[{"boundarystyle", "=", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"color", "[", "invader", "]"}], ",", 
               RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], ",", "\n", 
            "\t\t", 
            RowBox[{"boundarystyle", "=", 
             RowBox[{"{", 
              RowBox[{"Black", ",", 
               RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}]}], "]"}]}], "\n",
          "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"framelabel", "===", "Automatic"}], ",", "\n", "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"plottype", "\[Equal]", "\"\<Plot3D\>\""}], ",", "\n", 
            "\t\t", 
            RowBox[{"framelabel", "=", 
             RowBox[{"{", 
              RowBox[{"var1", ",", "var2", ",", "\"\<inv\>\""}], "}"}]}], ",",
             "\n", "\t\t", 
            RowBox[{"framelabel", "=", 
             RowBox[{"{", 
              RowBox[{"var1", ",", "var2"}], "}"}]}]}], "\n", "\t", "]"}]}], 
         "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"define", " ", "resident", " ", "sol"}], " ", "*)"}], "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"solin", "===", "\"\<FindEcoAttractor\>\""}], ",", "\n", 
          "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"fixed", "\[Equal]", 
             RowBox[{"{", "}"}]}], ",", "\n", "\t\t", 
            RowBox[{
             RowBox[{"sol", "[", 
              RowBox[{"\[FormalX]_", ",", "\[FormalY]_"}], "]"}], "=", 
             RowBox[{"{", "}"}]}], "\n", "\t", ",", "\n", "\t\t", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"ics", "\[Equal]", 
                RowBox[{"{", "}"}]}], ",", "\n", "\t\t\t", 
               RowBox[{"(*", " ", 
                RowBox[{
                "figure", " ", "out", " ", "number", " ", "of", " ", 
                 "species", " ", "in", " ", "guilds"}], " ", "*)"}], "\n", 
               "\t\t\t", 
               RowBox[{
                RowBox[{"Set\[ScriptCapitalN]", "[", "fixed", "]"}], ";", 
                "\n", "\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{"Global`debug", ",", 
                  RowBox[{"Print", "[", 
                   RowBox[{"func", ",", "\"\<: \[ScriptCapitalN]=\>\"", ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "]"}]}], 
                 "]"}], ";", "\n", "\t\t\t", 
                RowBox[{"ics", "=", "DefaultICs"}], ";", "\n", "\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{"verbose", ",", 
                  RowBox[{"Print", "[", 
                   RowBox[{"func", ",", "\"\<: ics=\>\"", ",", "ics"}], 
                   "]"}]}], "]"}], ";"}]}], "\n", "\t\t", "]"}], ";", "\n", 
             "\t\t", 
             RowBox[{"If", "[", 
              RowBox[{"verbose", ",", "\n", "\t\t\t", 
               RowBox[{"With", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"tr", "=", "fixed"}], ",", 
                   RowBox[{"ics", "=", "ics"}], ",", 
                   RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "findecoattractoropts"}]}]}], 
                  "}"}], ",", "\n", "\t\t\t\t", 
                 RowBox[{"PrintCall", "[", 
                  RowBox[{
                   RowBox[{"Global`sol", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}]}], "]"}], ":=", 
                   RowBox[{
                    RowBox[{"Global`sol", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "=", 
                    RowBox[{"FindEcoAttractor", "[", 
                    RowBox[{"trait", ",", 
                    RowBox[{"ICs", "->", "ics"}], ",", "op"}], "]"}]}]}], 
                  "]"}]}], "\n", "\t\t", "]"}]}], "]"}], ";", "\n", "\t\t", 
             RowBox[{
              RowBox[{"sol", "[", 
               RowBox[{
                RowBox[{"\[FormalX]_", "?", "NumberQ"}], ",", 
                RowBox[{"\[FormalY]_", "?", "NumberQ"}]}], "]"}], ":=", 
              RowBox[{
               RowBox[{"sol", "[", 
                RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "=", 
               RowBox[{"Module", "[", 
                RowBox[{
                 RowBox[{"{", "result", "}"}], ",", "\n", "\t\t\t", 
                 RowBox[{
                  RowBox[{"result", "=", 
                   RowBox[{"FindEcoAttractor", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"ICs", "->", "ics"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "findecoattractoropts"}], "]"}],
                     ",", 
                    RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], 
                    "]"}]}], ";", "\n", "\t\t\t", 
                  RowBox[{"If", "[", 
                   RowBox[{"printtrace", ",", 
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<EcoAttractor (\>\"", ",", "var1", ",", "\"\<=\>\"", 
                    ",", "\[FormalX]", ",", "\"\<, \>\"", ",", "var2", ",", 
                    "\"\<=\>\"", ",", "\[FormalY]", ",", "\"\<): \>\"", ",", 
                    "result"}], "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"result", "\[Equal]", 
                    RowBox[{"{", "$Failed", "}"}]}], ",", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    RowBox[{"PlotZIP", "::", "feafail"}], ",", "\[FormalX]", 
                    ",", "\[FormalY]"}], "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                  
                  RowBox[{"Return", "[", "result", "]"}]}]}], "\n", "\t\t", 
                "]"}]}]}], ";", "\n", "\t\t", 
             RowBox[{"delayinv", "=", "True"}]}]}], "]"}], "\n", ",", "\n", 
          "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"PrintCall", "[", 
              RowBox[{
               RowBox[{"Global`sol", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", "System`\[FormalX]", ")"}], "_"}], ",", 
                 RowBox[{
                  RowBox[{"(", "System`\[FormalY]", ")"}], "_"}]}], "]"}], 
               "=", 
               RowBox[{"solin", "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"var1", "\[Rule]", "\[FormalX]"}], ",", 
                  RowBox[{"var2", "\[Rule]", "\[FormalY]"}]}], "}"}]}]}], 
              "]"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{
            RowBox[{"sol", "[", 
             RowBox[{"\[FormalX]_", ",", "\[FormalY]_"}], "]"}], "=", 
            RowBox[{"solin", "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"var1", "\[Rule]", "\[FormalX]"}], ",", 
               RowBox[{"var2", "\[Rule]", "\[FormalY]"}]}], "}"}]}]}], ";", 
           "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{
              "func", ",", "\"\<: sol[\[FormalX],\[FormalY]]=\>\"", ",", 
               RowBox[{"sol", "[", 
                RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], "]"}]}], 
            "]"}], ";"}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"define", " ", "inv"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"delayinv", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"tr", "=", "fixed"}], ",", 
                 RowBox[{"so", "=", 
                  RowBox[{"sol", "[", 
                   RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], ",", 
                 RowBox[{"in", "=", "invader"}], ",", 
                 RowBox[{"op", "=", 
                  RowBox[{"Sequence", "@@", "invopts"}]}]}], "}"}], ",", "\n",
                "\t\t\t", 
               RowBox[{"PrintCall", "[", 
                RowBox[{
                 RowBox[{"Global`inv", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}], ",", 
                   RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}]}], "]"}], ":=", 
                 RowBox[{
                  RowBox[{"Global`inv", "[", 
                   RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "=", 
                  RowBox[{
                   RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "so", ",", "in", ",", "op"}], "]"}], "/.", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"var1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"var2", "\[Rule]", "\[FormalY]"}]}], "}"}]}]}]}], 
                "]"}]}], "\n", "\t", "]"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{
            RowBox[{"inv", "[", 
             RowBox[{
              RowBox[{"\[FormalX]_", "?", "NumberQ"}], ",", 
              RowBox[{"\[FormalY]_", "?", "NumberQ"}]}], "]"}], ":=", 
            RowBox[{
             RowBox[{"inv", "[", 
              RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "=", 
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", "result", "}"}], ",", "\n", "\t\t", 
               RowBox[{
                RowBox[{"result", "=", 
                 RowBox[{
                  RowBox[{"Inv", "[", 
                   RowBox[{"fixed", ",", 
                    RowBox[{"sol", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], ",", 
                    "invader", ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}], ",", 
                    RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}], 
                  "/.", "subrule"}]}], ";", "\n", "\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{"printtrace", ",", 
                  RowBox[{"Print", "[", 
                   RowBox[{
                   "\"\<Inv (\>\"", ",", "var1", ",", "\"\<=\>\"", ",", 
                    "\[FormalX]", ",", "\"\<, \>\"", ",", "var2", ",", 
                    "\"\<=\>\"", ",", "\[FormalY]", ",", "\"\<): \>\"", ",", 
                    "result"}], "]"}]}], "]"}], ";", "\n", "\t\t", 
                RowBox[{"Return", "[", "result", "]"}], ";"}]}], "\n", "\t", 
              "]"}]}]}], ";"}], "\n", ",", "\n", "\t", 
          RowBox[{"(*", " ", 
           RowBox[{"nondelay", " ", "inv"}], " ", "*)"}], "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"tr", "=", "fixed"}], ",", 
                 RowBox[{"so", "=", 
                  RowBox[{"sol", "[", 
                   RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], ",", 
                 RowBox[{"in", "=", "invader"}], ",", 
                 RowBox[{"op", "=", 
                  RowBox[{"Sequence", "@@", "invopts"}]}], ",", 
                 RowBox[{"sr", "=", "subrule"}], ",", 
                 RowBox[{"trinv", "=", "traitinv"}]}], "}"}], ",", "\n", 
               "\t\t\t", 
               RowBox[{"PrintCall", "[", 
                RowBox[{
                 RowBox[{"Global`inv", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], "_"}], ",", 
                   RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], "_"}]}], "]"}], 
                 "=", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "so", ",", "in", ",", "op"}], "]"}], "/.",
                    "sr"}], "/.", "trinv"}]}], "]"}]}], "\n", "\t", "]"}]}], 
            "]"}], ";", "\n", "\t", 
           RowBox[{
            RowBox[{"inv", "[", 
             RowBox[{"\[FormalX]_", ",", "\[FormalY]_"}], "]"}], "=", 
            RowBox[{
             RowBox[{
              RowBox[{"Inv", "[", 
               RowBox[{"fixed", ",", 
                RowBox[{"sol", "[", 
                 RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], ",", 
                RowBox[{"invader", "/.", 
                 RowBox[{
                  SubscriptBox["var_", "sub_"], "\[Rule]", 
                  SubscriptBox["var", "0"]}]}], ",", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"Sequence", "@@", "invopts"}], "]"}], ",", 
                RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}], "/.",
               "subrule"}], "/.", "traitinv"}]}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{
              "func", ",", "\"\<: inv[\[FormalX],\[FormalY]]=\>\"", ",", 
               RowBox[{"inv", "[", 
                RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], "]"}]}], 
            "]"}]}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"monitor", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"nb", "=", 
            RowBox[{"CreateDialog", "[", 
             RowBox[{
              RowBox[{"Grid", "[", 
               RowBox[{"{", "\n", "\t\t", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"ExpressionCell", "[", "var1", "]"}], ",", 
                   RowBox[{"TextCell", "[", "\"\<=\>\"", "]"}], ",", 
                   RowBox[{"Dynamic", "[", "x", "]"}]}], "}"}], ",", "\n", 
                 "\t\t", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"ExpressionCell", "[", "var2", "]"}], ",", 
                   RowBox[{"TextCell", "[", "\"\<=\>\"", "]"}], ",", 
                   RowBox[{"Dynamic", "[", "y", "]"}]}], "}"}]}], "\n", 
                "\t\t", "}"}], "]"}], ",", 
              RowBox[{
              "WindowTitle", "\[Rule]", "\"\<PlotZIP Progress...\>\""}], ",", 
              
              RowBox[{"WindowSize", "\[Rule]", "All"}]}], "]"}]}], ";"}]}], 
         "\n", "]"}], ";", "\n", "\n", "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"plottype", "\[Equal]", "\"\<Plot3D\>\""}], ",", "\n", "\t", 
          RowBox[{"res", "=", 
           RowBox[{"Plot3D", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"x", ",", "y"}], "}"}], "=", 
                RowBox[{"{", 
                 RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "}"}]}], ";", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"inv", "[", 
                   RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "]"}], 
                 ",", "invthreshold"}], "}"}]}], ")"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[FormalX]", ",", "var1min", ",", "var1max"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"\[FormalY]", ",", "var2min", ",", "var2max"}], "}"}], 
             ",", "\n", "\t\t", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
             RowBox[{"AxesLabel", "\[Rule]", 
              RowBox[{"Append", "[", 
               RowBox[{"framelabel", ",", "\"\<inv\>\""}], "]"}]}]}], "]"}]}],
           ",", "\n", "\t", 
          RowBox[{"plottype", "\[Equal]", "\"\<ContourPlot\>\""}], ",", "\n", 
          "\t", 
          RowBox[{"res", "=", 
           RowBox[{"ContourPlot", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"x", ",", "y"}], "}"}], "=", 
                RowBox[{"{", 
                 RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "}"}]}], ";", 
               RowBox[{"Evaluate", "[", 
                RowBox[{"inv", "[", 
                 RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "]"}]}], 
              ")"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[FormalX]", ",", "var1min", ",", "var1max"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"\[FormalY]", ",", "var2min", ",", "var2max"}], "}"}], 
             ",", "\n", "\t\t", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", "framelabel"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"var1min", ",", "var1max"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"var2min", ",", "var2max"}], "}"}]}], "}"}]}]}], 
            "]"}]}], ",", "\n", "\t", 
          RowBox[{"plottype", "\[Equal]", "\"\<RegionZIP\>\""}], ",", " ", 
          "\n", "\t", 
          RowBox[{"res", "=", 
           RowBox[{"RegionPlot", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"x", ",", "y"}], "}"}], "=", 
                RowBox[{"{", 
                 RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "}"}]}], ";", 
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{"inv", "[", 
                  RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], ">", 
                 "invthreshold"}], "]"}]}], ")"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[FormalX]", ",", "var1min", ",", "var1max"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"\[FormalY]", ",", "var2min", ",", "var2max"}], "}"}], 
             ",", "\n", "\t\t", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", "invstyle"}], ",", 
             RowBox[{"BoundaryStyle", "\[Rule]", "boundarystyle"}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", "framelabel"}]}], "]"}]}], ",", 
          "\n", "\t", 
          RowBox[{"plottype", "\[Equal]", "\"\<ZIP\>\""}], ",", "\n", "\t", 
          RowBox[{"res", "=", 
           RowBox[{"ContourPlot", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"x", ",", "y"}], "}"}], "=", 
                RowBox[{"{", 
                 RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "}"}]}], ";", 
               RowBox[{"Evaluate", "[", 
                RowBox[{"inv", "[", 
                 RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "]"}]}], 
              ")"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[FormalX]", ",", "var1min", ",", "var1max"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"\[FormalY]", ",", "var2min", ",", "var2max"}], "}"}], 
             ",", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", "\n", 
             "\t\t", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"Contours", "\[Rule]", 
              RowBox[{"{", "invthreshold", "}"}]}], ",", 
             RowBox[{"ContourStyle", "\[Rule]", 
              RowBox[{"{", "boundarystyle", "}"}]}], ",", 
             RowBox[{"ContourShading", "\[Rule]", "True"}], ",", "\n", "\t\t", 
             RowBox[{"ColorFunction", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"#", ">", "invthreshold"}], ",", "invstyle", ",", 
                  "noninvstyle"}], "]"}], "&"}], ")"}]}], ",", "\n", "\t\t", 
             RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
             RowBox[{"Method", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"\"\<TransparentPolygonMesh\>\"", "\[Rule]", "True"}], 
               "}"}]}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", "framelabel"}], ",", "\n", 
             "\t\t", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"var1min", ",", "var1max"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"var2min", ",", "var2max"}], "}"}]}], "}"}]}]}], 
            "]"}]}], ",", "\n", "\t", "Else", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"PlotZIP", "::", "badmtd"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "\n", "]"}], ";", 
        "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"monitor", ",", 
          RowBox[{"NotebookClose", "[", "nb", "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"Return", "[", "res", "]"}]}]}], "\n", "\n", "]"}]}], "]"}]}],
   ";"}]], "Code",
 CellChangeTimes->{{3.6882878053898993`*^9, 3.688287808743078*^9}, 
   3.688288135806472*^9, {3.688571691991478*^9, 3.688571693332206*^9}, {
   3.688571767918311*^9, 3.6885717681985188`*^9}, 3.688571807424464*^9, {
   3.689089001313301*^9, 3.6890890043689737`*^9}, {3.689089064072935*^9, 
   3.689089086138599*^9}, {3.689089143143515*^9, 3.6890891774214573`*^9}, 
   3.689089319114167*^9, {3.6890893978441753`*^9, 3.68908946417699*^9}, {
   3.6890894988659487`*^9, 3.689089502950509*^9}, {3.68908962606043*^9, 
   3.689089707985218*^9}, {3.6890897508996687`*^9, 3.689089752853948*^9}, {
   3.689089795971916*^9, 3.689089811275532*^9}, {3.689094833621719*^9, 
   3.6890948514587193`*^9}, {3.689094910467456*^9, 3.6890949221569777`*^9}, {
   3.6890954370202703`*^9, 3.6890954584809504`*^9}, {3.689095633452139*^9, 
   3.689095634779669*^9}, {3.689096392029808*^9, 3.689096392409925*^9}, 
   3.689109040730095*^9, {3.689111758566491*^9, 3.689111784518702*^9}, {
   3.689111904429968*^9, 3.689111915953508*^9}, {3.689111976407898*^9, 
   3.689111979453858*^9}, {3.689112031839395*^9, 3.689112034130287*^9}, {
   3.689112234797407*^9, 3.689112238688863*^9}, {3.689112335834444*^9, 
   3.689112341527008*^9}, {3.689112410877317*^9, 3.689112416319282*^9}, {
   3.6891124757905483`*^9, 3.6891124785613213`*^9}, {3.689174823424921*^9, 
   3.689174829366109*^9}, {3.6891783281588087`*^9, 3.689178328497805*^9}, {
   3.689178370594777*^9, 3.689178450825324*^9}, {3.6891790813283653`*^9, 
   3.689179127857786*^9}, {3.6891791818152533`*^9, 3.689179231214836*^9}, {
   3.68917973835533*^9, 3.689179779593503*^9}, {3.68918002554659*^9, 
   3.689180030068746*^9}, {3.689180135050324*^9, 3.6891801580467854`*^9}, {
   3.6891802340613937`*^9, 3.689180239945746*^9}, {3.689180294960429*^9, 
   3.6891803050153313`*^9}, {3.689180392448309*^9, 3.689180485273971*^9}, {
   3.6891816382118883`*^9, 3.689181644221792*^9}, {3.689191913231555*^9, 
   3.6891919983976393`*^9}, {3.689197811186739*^9, 3.6891978143392344`*^9}, {
   3.689198544412386*^9, 3.689198568239478*^9}, {3.689198714685821*^9, 
   3.689198716361845*^9}, {3.689198780784491*^9, 3.689198784734527*^9}, 
   3.689198861191393*^9, {3.689198913114086*^9, 3.689198949159569*^9}, {
   3.68919905265482*^9, 3.6891990809619617`*^9}, {3.689199117939396*^9, 
   3.689199152204212*^9}, {3.6891994321929617`*^9, 3.689199474812408*^9}, {
   3.689199517252146*^9, 3.6891995176044188`*^9}, {3.689199587743112*^9, 
   3.6891996617293787`*^9}, {3.689199717876816*^9, 3.6891997680542192`*^9}, {
   3.689200137207405*^9, 3.689200243050371*^9}, {3.689200298027767*^9, 
   3.689200301455925*^9}, {3.689201238814459*^9, 3.689201256720944*^9}, {
   3.689202801977714*^9, 3.6892028035579557`*^9}, {3.689202852554137*^9, 
   3.689202894752262*^9}, {3.689202952746408*^9, 3.6892029611328793`*^9}, {
   3.689203013609786*^9, 3.6892030191456137`*^9}, {3.689203077905377*^9, 
   3.6892031213953457`*^9}, {3.689203172443755*^9, 3.689203175337235*^9}, {
   3.6892034959812326`*^9, 3.68920350669643*^9}, {3.689203577291835*^9, 
   3.68920358644083*^9}, {3.6892036343190327`*^9, 3.689203654362729*^9}, {
   3.6892037096036043`*^9, 3.6892037138753023`*^9}, {3.689203758755131*^9, 
   3.689203779386141*^9}, {3.689203813064961*^9, 3.689203823828795*^9}, {
   3.689203885257016*^9, 3.6892038975928717`*^9}, 3.689204020852828*^9, {
   3.6892040760499287`*^9, 3.689204091491871*^9}, {3.689204247224155*^9, 
   3.6892043556569023`*^9}, 3.689204392097805*^9, {3.689204573658605*^9, 
   3.689204588825337*^9}, {3.6892047072010183`*^9, 3.689204782361391*^9}, {
   3.689204855748041*^9, 3.68920488349269*^9}, {3.689205187275572*^9, 
   3.6892052180399647`*^9}, {3.689205416312755*^9, 3.6892054198705587`*^9}, {
   3.689205502162085*^9, 3.689205546551907*^9}, {3.689205619607603*^9, 
   3.689205629815021*^9}, {3.689205730510394*^9, 3.689205731948648*^9}, {
   3.689205931427723*^9, 3.689205975525549*^9}, {3.6892071341554403`*^9, 
   3.6892071359756813`*^9}, {3.689250431833008*^9, 3.689250470270946*^9}, {
   3.689250715419957*^9, 3.6892507249180403`*^9}, {3.689250784897676*^9, 
   3.689250794159843*^9}, {3.6892508245846043`*^9, 3.689250831778019*^9}, 
   3.689289425324069*^9, {3.6961621421770067`*^9, 3.6961621422215967`*^9}, {
   3.6962787073963833`*^9, 3.6962787150874767`*^9}, {3.696278763823457*^9, 
   3.696278787052191*^9}, 3.696278848675012*^9, {3.696336384425806*^9, 
   3.696336384799808*^9}, {3.696631878688575*^9, 3.69663189812319*^9}, 
   3.696632208448448*^9, 3.6966328706169167`*^9, {3.696807891665193*^9, 
   3.696807893138623*^9}, {3.708834707532692*^9, 3.7088347170895977`*^9}, {
   3.709336791185824*^9, 3.709336792639715*^9}, 3.710105986907427*^9, {
   3.710256264542733*^9, 3.710256270382635*^9}, 3.714059650264831*^9, 
   3.722029506592965*^9, {3.722034137288947*^9, 3.722034141048389*^9}, {
   3.722087635746091*^9, 3.722087644147887*^9}, {3.726056451490245*^9, 
   3.726056465179557*^9}, {3.726071090970359*^9, 3.726071092789983*^9}, {
   3.7260712433557997`*^9, 3.726071245133451*^9}, {3.7260713324157677`*^9, 
   3.726071390476644*^9}, {3.726071497216798*^9, 3.7260715337222557`*^9}, {
   3.726072888227065*^9, 3.726072928006425*^9}, {3.7260730380680227`*^9, 
   3.726073113792355*^9}, {3.726073165290617*^9, 3.726073229326071*^9}, {
   3.726073501884719*^9, 3.726073511653207*^9}, {3.726073576767537*^9, 
   3.72607357691678*^9}, 3.726073697706916*^9, {3.726074316210824*^9, 
   3.726074316927059*^9}, {3.7260743919497013`*^9, 3.726074414547894*^9}, {
   3.726074460259066*^9, 3.726074484902568*^9}, {3.726075238073091*^9, 
   3.726075275152114*^9}, {3.72618828208501*^9, 3.7261882945543127`*^9}, {
   3.7261883720903*^9, 3.726188381323353*^9}, {3.726188420266077*^9, 
   3.726188426293673*^9}, {3.726188776691154*^9, 3.726188789728528*^9}, {
   3.726188842312276*^9, 3.726188860794813*^9}, {3.726188988739767*^9, 
   3.726189108311336*^9}, {3.726230212861211*^9, 3.726230217747037*^9}, {
   3.726230645967428*^9, 3.7262307667987223`*^9}, {3.726230818395987*^9, 
   3.726230884489443*^9}, {3.726231277402527*^9, 3.72623131285391*^9}, {
   3.726231393522318*^9, 3.726231454285048*^9}, {3.726231686756743*^9, 
   3.726231700836083*^9}, {3.726231767053443*^9, 3.726231789154139*^9}, {
   3.7262326686860533`*^9, 3.7262326974127617`*^9}, {3.7262327836341753`*^9, 
   3.726232874572188*^9}, {3.7262329925979958`*^9, 3.7262330788257647`*^9}, {
   3.726233305075042*^9, 3.7262333172963867`*^9}, {3.726233351492125*^9, 
   3.7262333591029997`*^9}, {3.726233758487073*^9, 3.72623380707312*^9}, {
   3.726233870688229*^9, 3.726233908829048*^9}, {3.726237375602306*^9, 
   3.7262373859536543`*^9}, {3.726237423617084*^9, 3.726237464937804*^9}, {
   3.72623772549475*^9, 3.726237738212401*^9}, {3.726237780345769*^9, 
   3.7262378354836693`*^9}, {3.726854018042366*^9, 3.7268540335791807`*^9}, {
   3.726854072833074*^9, 3.726854093841251*^9}, {3.726855239217329*^9, 
   3.726855264118061*^9}, {3.7268557230178823`*^9, 3.726855742664983*^9}, {
   3.726856572217778*^9, 3.726856672024487*^9}, {3.726856779541354*^9, 
   3.7268569744166613`*^9}, {3.726857012712079*^9, 3.726857017083234*^9}, {
   3.726857069306169*^9, 3.726857103092688*^9}, {3.726858001597035*^9, 
   3.726858038086812*^9}, {3.726858074457255*^9, 3.72685807564783*^9}, {
   3.7268581805910053`*^9, 3.7268581835488577`*^9}, {3.7268583043467283`*^9, 
   3.7268583179085207`*^9}, {3.726858361303534*^9, 3.726858362573333*^9}, {
   3.727915959261964*^9, 3.7279159983124447`*^9}, {3.727916030994895*^9, 
   3.727916064560351*^9}, {3.727916099780263*^9, 3.727916106652927*^9}, {
   3.72791618509103*^9, 3.7279162133993177`*^9}, {3.727916248195435*^9, 
   3.7279162894337387`*^9}, 3.727917338867939*^9, {3.727917411241886*^9, 
   3.7279174222276297`*^9}, {3.727963438355867*^9, 3.727963468286482*^9}, {
   3.727963781137619*^9, 3.72796379461798*^9}, {3.727963830105013*^9, 
   3.727963895766238*^9}, {3.7279647005991077`*^9, 3.7279647480513287`*^9}, {
   3.727971244636801*^9, 3.7279712951495256`*^9}, {3.728605169500029*^9, 
   3.728605214326742*^9}, {3.728605307670104*^9, 3.728605414593707*^9}, {
   3.728605467574654*^9, 3.728605489690896*^9}, {3.728605537400648*^9, 
   3.728605557930254*^9}, {3.7286055893721113`*^9, 3.7286056519826603`*^9}, {
   3.728605723939801*^9, 3.728605753847571*^9}, {3.7286059430745077`*^9, 
   3.7286059568515797`*^9}, {3.72860601237809*^9, 3.728606033547171*^9}, {
   3.728606149793392*^9, 3.728606240483056*^9}, {3.728606280320565*^9, 
   3.7286064332338037`*^9}, {3.728606466574071*^9, 3.728606546310338*^9}, {
   3.728607085690312*^9, 3.728607088259447*^9}, {3.728607138483213*^9, 
   3.7286071959601307`*^9}, {3.7286072543987837`*^9, 3.728607257858227*^9}, {
   3.7286074192327547`*^9, 3.728607567589686*^9}, {3.7286492338713093`*^9, 
   3.728649321893742*^9}, {3.7286502581293383`*^9, 3.728650294396624*^9}, {
   3.728650347201866*^9, 3.72865050493302*^9}, 3.728650657917309*^9, {
   3.7286538880413322`*^9, 3.728653928519313*^9}, {3.7286547909526577`*^9, 
   3.728655018986498*^9}, 3.728655064077095*^9, {3.728655696315104*^9, 
   3.7286557442322807`*^9}, {3.728655808717896*^9, 3.728655834617457*^9}, {
   3.728655872325082*^9, 3.7286558780650883`*^9}, {3.728692596126771*^9, 
   3.728692596866881*^9}, {3.72869384098144*^9, 3.728693864339113*^9}, {
   3.728693941232977*^9, 3.728693963331799*^9}, {3.728694053039432*^9, 
   3.728694056184115*^9}, {3.7286942867341633`*^9, 3.728694319956339*^9}, {
   3.728694572753024*^9, 3.728694618440172*^9}, {3.728729804833993*^9, 
   3.728729808929584*^9}, {3.728730045130831*^9, 3.728730062383286*^9}, {
   3.7287739027064543`*^9, 3.728773902798251*^9}, {3.7287762431015663`*^9, 
   3.728776254609486*^9}, {3.7287764184167843`*^9, 3.728776418695619*^9}, {
   3.7287768414673367`*^9, 3.728776851236084*^9}, {3.7287768832969837`*^9, 
   3.728776972866115*^9}, {3.728777082026828*^9, 3.728777084242258*^9}, {
   3.728777200180345*^9, 3.728777204989697*^9}, {3.728777247580841*^9, 
   3.7287772580652113`*^9}, {3.7287773193173923`*^9, 3.728777332262239*^9}, {
   3.728779000939063*^9, 3.72877902727565*^9}, {3.728779088175921*^9, 
   3.7287790909662237`*^9}, {3.728779122576272*^9, 3.7287791964799147`*^9}, {
   3.728779294043252*^9, 3.7287793212406073`*^9}, {3.7287799768828497`*^9, 
   3.728780038633226*^9}, {3.728780120723627*^9, 3.728780215769228*^9}, {
   3.7287802467744417`*^9, 3.7287802818891697`*^9}, {3.728780325335804*^9, 
   3.728780344415779*^9}, {3.728780382850552*^9, 3.728780457786607*^9}, {
   3.728780637185288*^9, 3.7287806590419817`*^9}, {3.728780692122216*^9, 
   3.728780723503291*^9}, {3.728780764977284*^9, 3.728780767246175*^9}, {
   3.728780808008676*^9, 3.728780814672937*^9}, {3.728780868717774*^9, 
   3.72878089680054*^9}, {3.728780928442555*^9, 3.728780934035219*^9}, {
   3.728781007005095*^9, 3.728781011000844*^9}, {3.728781173148427*^9, 
   3.72878118162499*^9}, {3.728781248841446*^9, 3.728781253209199*^9}, {
   3.7287812893027*^9, 3.728781296611773*^9}, {3.7287813529401007`*^9, 
   3.728781412705737*^9}, {3.7287814814917173`*^9, 3.72878152223108*^9}, {
   3.728781993880982*^9, 3.728782016457123*^9}, {3.728782054822442*^9, 
   3.728782103301621*^9}, {3.7288670758558187`*^9, 3.728867080276925*^9}, {
   3.728867485942029*^9, 3.728867486349082*^9}, {3.728905918964655*^9, 
   3.728905948236827*^9}, {3.7289059913370647`*^9, 3.728906038465617*^9}, {
   3.72890609988325*^9, 3.7289062193777657`*^9}, {3.728906370341421*^9, 
   3.7289063816999693`*^9}, {3.72890642671918*^9, 3.7289064623724403`*^9}, {
   3.728906495535782*^9, 3.728906513852117*^9}, {3.7289273602470913`*^9, 
   3.728927408513198*^9}, {3.728927589996715*^9, 3.728927593776806*^9}, {
   3.728928071755272*^9, 3.728928096506275*^9}, {3.728928703125135*^9, 
   3.728928745367878*^9}, {3.728930460138896*^9, 3.72893046435462*^9}, {
   3.728930685416157*^9, 3.728930687046997*^9}, {3.728931698088546*^9, 
   3.7289316999019747`*^9}, {3.72893174026934*^9, 3.728931741860857*^9}, {
   3.729038118349498*^9, 3.729038119640707*^9}, {3.729080125115123*^9, 
   3.7290801950461817`*^9}, {3.729080235529471*^9, 3.729080245322053*^9}, {
   3.729088042562607*^9, 3.729088043691903*^9}, {3.7290881043074503`*^9, 
   3.729088125678714*^9}, {3.729172732617111*^9, 3.729172733430347*^9}, {
   3.729172764511321*^9, 3.72917282332653*^9}, {3.729172880242804*^9, 
   3.729172917299717*^9}, {3.7291729855782137`*^9, 3.7291729912537203`*^9}, {
   3.729174629952552*^9, 3.729174661234581*^9}, 3.72917496766984*^9, {
   3.729175032454976*^9, 3.72917505322029*^9}, {3.729175207278216*^9, 
   3.7291752128214006`*^9}, {3.729175254250379*^9, 3.7291752676389017`*^9}, {
   3.729175916960004*^9, 3.7291759251202793`*^9}, {3.729175994024824*^9, 
   3.7291760232920856`*^9}, {3.729176216565551*^9, 3.729176261918564*^9}, {
   3.729177836098866*^9, 3.72917786051225*^9}, {3.729177905191584*^9, 
   3.729177920938136*^9}, {3.7291790923403187`*^9, 3.729179185305132*^9}, {
   3.7291792187497253`*^9, 3.729179293846814*^9}, {3.729182363391878*^9, 
   3.729182372080737*^9}, {3.7291826363486147`*^9, 3.729182644884465*^9}, {
   3.72918269878863*^9, 3.729182900366316*^9}, {3.729182986093163*^9, 
   3.729183034249835*^9}, {3.729183825943611*^9, 3.729184018711212*^9}, {
   3.729184058715535*^9, 3.729184102494759*^9}, {3.729184171224242*^9, 
   3.729184188955584*^9}, {3.729184402747108*^9, 3.729184454355122*^9}, {
   3.729184579476141*^9, 3.7291846324283447`*^9}, 3.72918468726637*^9, {
   3.7291848676780663`*^9, 3.72918493414647*^9}, {3.7291850918753023`*^9, 
   3.7291851113777742`*^9}, 3.72918522511869*^9, {3.72918526388321*^9, 
   3.729185294173473*^9}, {3.729185378681137*^9, 3.729185378984324*^9}, {
   3.7291854290469513`*^9, 3.7291854349899282`*^9}, {3.729201512124353*^9, 
   3.729201529953884*^9}, {3.729205350346755*^9, 3.729205386742219*^9}, {
   3.729205562888523*^9, 3.729205690480619*^9}, 3.7292104586201344`*^9, {
   3.729210537315258*^9, 3.729210537977582*^9}, {3.729210795916542*^9, 
   3.729210801814872*^9}, {3.729246475491687*^9, 3.729246488342635*^9}, {
   3.7292530055498323`*^9, 3.729253034517782*^9}, 3.729253121774091*^9, {
   3.729253154990172*^9, 3.729253176596513*^9}, {3.729299176243597*^9, 
   3.7292992095652523`*^9}, {3.729299444181102*^9, 3.729299444345047*^9}, 
   3.755373505069551*^9, {3.7601061488210983`*^9, 3.760106168609456*^9}, {
   3.760106421221363*^9, 3.760106424309352*^9}, 3.760106494792206*^9, {
   3.760551465023573*^9, 3.760551465051415*^9}, {3.7609342482633877`*^9, 
   3.760934261423006*^9}, {3.760934297544861*^9, 3.7609343203233347`*^9}, {
   3.7609343628793993`*^9, 3.760934374160578*^9}, {3.7609344090048237`*^9, 
   3.760934420389468*^9}, {3.760934533370449*^9, 3.760934544576064*^9}, {
   3.7695006260443296`*^9, 3.769500626483406*^9}, 3.769760705780643*^9, {
   3.769785264492969*^9, 3.769785339351474*^9}, {3.7697854698913183`*^9, 
   3.7697855515438023`*^9}, {3.769785652501751*^9, 3.769785658308037*^9}, {
   3.769785962799971*^9, 3.76978596441641*^9}, {3.769786188152076*^9, 
   3.7697861976910954`*^9}, {3.769787050513501*^9, 3.769787052091236*^9}, {
   3.769787610609026*^9, 3.7697876107956867`*^9}, {3.769787797764233*^9, 
   3.769787815093472*^9}, {3.769787857906151*^9, 3.7697878675075817`*^9}, {
   3.769789511556592*^9, 3.769789552676693*^9}, {3.76978964550926*^9, 
   3.7697896513138227`*^9}, 3.7697896819599047`*^9, {3.769796427020446*^9, 
   3.7697964290923347`*^9}, {3.769796465308731*^9, 3.769796488879945*^9}, {
   3.769796569761098*^9, 3.769796577387368*^9}, {3.769796648992463*^9, 
   3.7697966663390417`*^9}, {3.769796834249919*^9, 3.7697968361092987`*^9}, {
   3.769796886388322*^9, 3.7697968866575317`*^9}, {3.770274684299724*^9, 
   3.770274693119989*^9}, 3.7704382651825237`*^9, {3.77072144562959*^9, 
   3.7707214463051147`*^9}, {3.774596543419551*^9, 3.774596598000391*^9}, {
   3.7746221383346767`*^9, 3.7746221561996307`*^9}, {3.7746291583765287`*^9, 
   3.77462916747239*^9}, {3.774630207472905*^9, 3.77463020832294*^9}, {
   3.778349477206403*^9, 3.77834947781676*^9}, {3.7783497000986834`*^9, 
   3.778349775786745*^9}, {3.7783499568162518`*^9, 3.778349960375971*^9}, 
   3.778350016189226*^9, {3.778350082456884*^9, 3.778350116138648*^9}, {
   3.794137241021757*^9, 3.794137241031238*^9}, {3.844377381449052*^9, 
   3.8443773906682873`*^9}},ExpressionUUID->"96f015fa-4ead-4eb8-a1db-\
1a8a830fa168"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.769500630082347*^9, 
  3.7695006309249363`*^9}},ExpressionUUID->"c13b0ca0-8d90-4837-9152-\
e7ca70215a74"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PlotZIP", "]"}], "=", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"FindEcoAttractorOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"InvOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", "\t", 
     RowBox[{"DelayInv", "\[Rule]", "False"}], ",", 
     RowBox[{"PlotType", "\[Rule]", "\"\<ZIP\>\""}], ",", 
     RowBox[{"ICs", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"InvThreshold", "\[Rule]", "Automatic"}], ",", "\n", "\t", 
     RowBox[{"PlotOpts", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"MaxRecursion", "\[Rule]", "3"}], "}"}]}], ",", "\n", "\t", 
     RowBox[{"BoundaryStyle", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"InvStyle", "\[Rule]", "Gray"}], ",", 
     RowBox[{"NonInvStyle", "\[Rule]", 
      RowBox[{"Opacity", "[", "0", "]"}]}], ",", "\n", "\t", 
     RowBox[{"Monitor", "\[Rule]", "False"}], ",", "\n", "\t", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "\n", "}"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{
  3.769500635475461*^9, {3.769784994750305*^9, 3.769784995279531*^9}, 
   3.769785348976931*^9, {3.769787953833364*^9, 3.7697879542211514`*^9}, {
   3.769788779498995*^9, 3.769788791633428*^9}, {3.769788827089796*^9, 
   3.769788828642014*^9}, {3.769793923296002*^9, 
   3.769793968631811*^9}},ExpressionUUID->"edfa81f1-6da2-4049-aec0-\
87cdb3c7f832"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Messages", "Subsubsection",
 CellChangeTimes->{{3.769500609378208*^9, 3.769500613896208*^9}, {
  3.769500999095879*^9, 
  3.769501000513237*^9}},ExpressionUUID->"71d52d56-730d-4c75-b6df-\
3243656bbe80"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotZIP", "::", "unkinv"}], "=", "\n", 
    "\"\<Can't figure out who's invading: please specify.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotZIP", "::", "diffsp"}], "=", "\n", 
   "\"\<\!\(\*StyleBox[\"x\", \"TI\"]\)- and \!\(\*StyleBox[\"y\", \
\"TI\"]\)-axes should have the same species.\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.769500620016479*^9, 
  3.769500621358177*^9}},ExpressionUUID->"c592ed7c-3dd5-44cc-b14e-\
fd72bee42c4f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["PlotZNGI", "Subsection",
 CellChangeTimes->{{3.77839242827579*^9, 
  3.778392429546625*^9}},ExpressionUUID->"52f7ca5e-b6fd-4489-af4f-\
452ff44ff830"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.778392834878449*^9, 
  3.778392835301643*^9}},ExpressionUUID->"d7f99620-949b-44e0-8f1f-\
9e9ff2c67dd6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotZNGI", "::", "usage"}], " ", "=", "\n", 
   "\"\<PlotZNGI[\!\(\*StyleBox[\"sp\", \"TI\"]\), {\!\(\*StyleBox[\"var1\", \
\"TI\"]\), \!\(\*StyleBox[\"var1min\", \"TI\"]\), \!\(\*StyleBox[\"var1max\", \
\"TI\"]\)}, {\!\(\*StyleBox[\"var2\", \"TI\"]\), \!\(\*StyleBox[\"var2min\", \
\"TI\"]\), \!\(\*StyleBox[\"var2max\", \"TI\"]\)}] plots a zero net growth \
isocline of \!\(\*StyleBox[\"sp\", \"TI\"]\).\nPlotZNGI[{\!\(\*StyleBox[\"sp1\
\", \"TI\"]\), \!\(\*StyleBox[\"sp2\", \"TI\"]\), \[Ellipsis]}, \
{\!\(\*StyleBox[\"var1\", \"TI\"]\), \!\(\*StyleBox[\"var1min\", \"TI\"]\), \
\!\(\*StyleBox[\"var1max\", \"TI\"]\)}, {\!\(\*StyleBox[\"var2\", \"TI\"]\), \
\!\(\*StyleBox[\"var2min\", \"TI\"]\), \!\(\*StyleBox[\"var2max\", \
\"TI\"]\)}] plots multiple ZNGIs.\nPlotZNGI[\!\(\*StyleBox[\"traits\", \
\"TI\"]\), {\!\(\*StyleBox[\"var1\", \"TI\"]\), \!\(\*StyleBox[\"var1min\", \
\"TI\"]\), \!\(\*StyleBox[\"var1max\", \"TI\"]\)}, {\!\(\*StyleBox[\"var2\", \
\"TI\"]\), \!\(\*StyleBox[\"var2min\", \"TI\"]\), \!\(\*StyleBox[\"var2max\", \
\"TI\"]\)}] plots ZNGIs with \!\(\*StyleBox[\"traits\", \"TI\"]\).\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.778392829076097*^9, 3.778392832679183*^9}, {
  3.7783935810701113`*^9, 
  3.778393627238722*^9}},ExpressionUUID->"1fa140ca-bec0-45f8-8e41-\
96a01f31470d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.769786473266837*^9, 3.769786473970643*^9}, {
  3.778392844398244*^9, 
  3.778392845582402*^9}},ExpressionUUID->"a8919ea7-112f-41d0-8d24-\
e996a7d8f276"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotZNGI", "[", 
    RowBox[{
     RowBox[{"invaders_", "?", "RuleListQ"}], ",", 
     RowBox[{"{", 
      RowBox[{"var1_", ",", 
       RowBox[{"var1min_", "?", "NumericQ"}], ",", 
       RowBox[{"var1max_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"var2_", ",", 
       RowBox[{"var2min_", "?", "NumericQ"}], ",", 
       RowBox[{"var2max_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<PlotZNGI\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "plotstyle", ",", 
       "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", 
       "boundarystyle"}], "\n", "}"}], ",", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"plotstyle", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PlotStyle", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotZNGI", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"Set\[ScriptCapitalN]", "[", "invaders", "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: \[ScriptCapitalN]=\>\"", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "]"}]}], 
         "]"}], ";", "\n", "\n", 
        RowBox[{"Return", "[", 
         RowBox[{"Show", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Table", "[", "\n", "\t", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"plotstyle", "===", "Automatic"}], ",", "\n", "\t\t", 
                 RowBox[{"boundarystyle", "=", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"color", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"gcomps", "[", "gu", "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    ",", "0"}], "]"}], "]"}], "[", 
                    RowBox[{"SpFrac", "[", 
                    RowBox[{"sp", ",", 
                    RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}]}], "]"}], 
                    "]"}], ",", 
                    RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], ",", "\n", 
                 "\t\t", 
                 RowBox[{"boundarystyle", "=", 
                  RowBox[{"Flatten", "[", 
                   RowBox[{"{", 
                    RowBox[{"plotstyle", ",", 
                    RowBox[{"Opacity", "[", "1", "]"}]}], "}"}], "]"}]}]}], 
                "\n", "\t", "]"}], ";", "\n", "\t", 
               RowBox[{"PlotZIP", "[", 
                RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"var1", ",", "var1min", ",", "var1max"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"var2", ",", "var2min", ",", "var2max"}], "}"}], 
                 ",", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    SubscriptBox["gtrait", "0"], "\[Rule]", 
                    SubscriptBox["gtrait", "sp"]}], "/.", "invaders"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"gtrait", ",", 
                    RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}], 
                 ",", "\n", "\t\t", "opts", ",", 
                 RowBox[{"InvStyle", "\[Rule]", 
                  RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
                 RowBox[{"BoundaryStyle", "\[Rule]", "boundarystyle"}]}], 
                "]"}]}], "\n", ",", 
              RowBox[{"{", 
               RowBox[{"sp", ",", 
                RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}]}], "}"}]}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "]"}], "]"}]}]}], 
      "\n", "]"}]}], "\n", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.769792701951219*^9, {3.7697928762085238`*^9, 3.769792879681349*^9}, {
   3.7697930486670017`*^9, 3.769793071321094*^9}, {3.769793981229176*^9, 
   3.769793988254324*^9}, 3.778350263518547*^9, {3.778350464642305*^9, 
   3.778350466295689*^9}, {3.778350859534679*^9, 3.778350896854775*^9}, {
   3.778350929601091*^9, 3.778351076893008*^9}, {3.7783511079799128`*^9, 
   3.7783511637840157`*^9}, {3.7783512170570097`*^9, 
   3.7783512207806377`*^9}, {3.778351523503385*^9, 3.778351527042471*^9}, 
   3.778351651595335*^9, {3.7783517225602093`*^9, 3.778351722675391*^9}, {
   3.778351771534904*^9, 3.778351811555141*^9}, {3.778383789545879*^9, 
   3.778383807896512*^9}, {3.778383846135437*^9, 3.778383846514346*^9}, {
   3.778385684701805*^9, 3.778385739892461*^9}, {3.7783861686739817`*^9, 
   3.778386176496366*^9}, {3.7783862761209908`*^9, 3.77838629450786*^9}, {
   3.778386327331571*^9, 3.778386329172084*^9}, {3.778386604510209*^9, 
   3.77838663361182*^9}, 3.7783869780813313`*^9, {3.778387052112949*^9, 
   3.7783870548146677`*^9}, {3.778387102643551*^9, 3.7783871061724567`*^9}, {
   3.778390992219132*^9, 3.778390994692752*^9}, 3.778392170379448*^9, {
   3.778392329883923*^9, 3.778392335652473*^9}, {3.778392378780136*^9, 
   3.778392402156296*^9}, {3.778392709358862*^9, 3.778392738455058*^9}, {
   3.778392967106256*^9, 3.778393020486347*^9}, {3.778393171148398*^9, 
   3.7783932146993732`*^9}, {3.7783935570628242`*^9, 3.778393573199093*^9}, {
   3.77847445676593*^9, 3.778474491039036*^9}, 3.78059358115554*^9, 
   3.794137241035656*^9},ExpressionUUID->"65caf97d-45c3-4b53-b916-\
ef7a415113a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotZNGI", "[", 
    RowBox[{"invaders_List", ",", 
     RowBox[{"{", 
      RowBox[{"var1_", ",", 
       RowBox[{"var1min_", "?", "NumericQ"}], ",", 
       RowBox[{"var1max_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"var2_", ",", 
       RowBox[{"var2min_", "?", "NumericQ"}], ",", 
       RowBox[{"var2max_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"PlotZIP", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"var1", ",", "var1min", ",", "var1max"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"var2", ",", "var2min", ",", "var2max"}], "}"}], ",", "#", 
        ",", "opts", ",", 
        RowBox[{"InvStyle", "\[Rule]", 
         RowBox[{"Opacity", "[", "0", "]"}]}]}], "]"}], "&"}], "/@", 
     "invaders"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.769786478178961*^9, 3.76978649788223*^9}, {
   3.769786562062962*^9, 3.769786632435183*^9}, {3.7697866761623917`*^9, 
   3.769786676623124*^9}, {3.769786711583578*^9, 3.769786755429782*^9}, {
   3.7697930750115757`*^9, 3.7697931048278008`*^9}, 3.7697939930050507`*^9, 
   3.778350276053087*^9, 3.778350398924582*^9, {3.7783935172054577`*^9, 
   3.778393531388071*^9}},ExpressionUUID->"e3007c96-cde4-42bb-872f-\
b1401bf88a6c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotZNGI", "[", 
    RowBox[{"invader_", ",", 
     RowBox[{"{", 
      RowBox[{"var1_", ",", 
       RowBox[{"var1min_", "?", "NumericQ"}], ",", 
       RowBox[{"var1max_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"var2_", ",", 
       RowBox[{"var2min_", "?", "NumericQ"}], ",", 
       RowBox[{"var2max_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"PlotZIP", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"var1", ",", "var1min", ",", "var1max"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"var2", ",", "var2min", ",", "var2max"}], "}"}], ",", "invader",
      ",", "opts", ",", 
     RowBox[{"InvStyle", "\[Rule]", 
      RowBox[{"Opacity", "[", "0", "]"}]}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.769792701951219*^9, {3.7697928762085238`*^9, 3.769792879681349*^9}, {
   3.7697930486670017`*^9, 3.769793071321094*^9}, {3.769793981229176*^9, 
   3.769793988254324*^9}, 3.778350263518547*^9, 3.778350470256557*^9, {
   3.778393536685183*^9, 
   3.778393543396443*^9}},ExpressionUUID->"1f9536f2-1712-4323-a4f9-\
e37208fab0c0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PlotZNGI", "]"}], "=", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{"PlotStyle", "\[Rule]", "Automatic"}], "\n", "}"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{
  3.769500635475461*^9, {3.769784994750305*^9, 3.769784995279531*^9}, 
   3.769785348976931*^9, {3.769787953833364*^9, 3.7697879542211514`*^9}, {
   3.769788779498995*^9, 3.769788791633428*^9}, {3.769788827089796*^9, 
   3.769788828642014*^9}, {3.769793923296002*^9, 3.769793968631811*^9}, 
   3.778392436833116*^9, {3.7783925181088676`*^9, 
   3.7783925211960583`*^9}},ExpressionUUID->"725dc63e-b7be-4b2e-9d1d-\
bfbe92796abe"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["PlotPIP", "Subsection",ExpressionUUID->"7705db07-c604-4c5a-a978-eca143a8534f"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"930a52ee-7136-45f3-bf9e-\
11b5908f356d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotPIP", "::", "usage"}], " ", "=", "\n", 
   "\"\<PlotPIP[{\!\(\*StyleBox[\"trait\", \"TI\"]\), \
\!\(\*StyleBox[\"traitmin\", \"TI\"]\), \!\(\*StyleBox[\"traitmax\", \
\"TI\"]\)}] creates a pairwise invasibility plot, where \
\!\(\*StyleBox[\"trait\", \"TI\"]\) varies from \!\(\*StyleBox[\"traitmin\", \
\"TI\"]\) to \!\(\*StyleBox[\"traitmax\", \"TI\"]\).\nPlotPIP[\!\(\*StyleBox[\
\"sol\", \"TI\"]\), {\!\(\*StyleBox[\"trait\", \"TI\"]\), \
\!\(\*StyleBox[\"traitmin\", \"TI\"]\), \!\(\*StyleBox[\"traitmax\", \
\"TI\"]\)}] uses ecological equilibrium \!\(\*StyleBox[\"sol\", \"TI\"]\) for \
improved speed.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.7694898361001368`*^9, 
  3.76948984361056*^9}},ExpressionUUID->"ceeb0b3d-f6e3-4797-bc7f-\
68eac4c1d6af"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"92bf0c0c-785f-4b24-ab9d-\
4dd79ea605eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotPIP", "[", 
    RowBox[{
     RowBox[{"solin_", ":", "\"\<FindEcoAttractor\>\""}], ",", 
     RowBox[{"{", 
      RowBox[{"trait1_", ",", 
       RowBox[{"trait1min_", "?", "NumericQ"}], ",", 
       RowBox[{"trait1max_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<PlotPIP\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "printtrace", ",", "monitor", ",", "\n", "fixed", 
       ",", "delayinv", ",", "findecoattractoropts", ",", "invopts", ",", 
       "randomseeding", ",", "\n", "plotopts", ",", "plottype", ",", "ics", 
       ",", "zerodiagonal", ",", "subtractdiagonal", ",", "invthreshold", ",",
        "\n", "boundarystyle", ",", "invstyle", ",", "noninvstyle", ",", 
       "framelabel", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "nb", ",", 
       "x", ",", "y", ",", "\n", "invfixed", ",", "gu1", ",", "tr1", ",", 
       "sp1", ",", "res", ",", "sol", ",", "resinv", ",", "inv"}], "}"}], ",",
      "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"printtrace", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PrintTrace", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"monitor", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Monitor", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"fixed", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Fixed", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"delayinv", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"DelayInv", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"findecoattractoropts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"FindEcoAttractorOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"invopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"InvOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"randomseeding", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"RandomSeeding", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"plotopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PlotOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"plottype", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PlotType", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"ics", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"ICs", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"zerodiagonal", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"ZeroDiagonal", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"subtractdiagonal", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"SubtractDiagonal", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"invthreshold", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"InvThreshold", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"boundarystyle", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"BoundaryStyle", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"invstyle", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"InvStyle", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"noninvstyle", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"NonInvStyle", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"framelabel", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"FrameLabel", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"zerodiagonal", ",", 
          RowBox[{
           RowBox[{"inv", "[", 
            RowBox[{"\[FormalX]_", ",", "\[FormalX]_"}], "]"}], "=", "0"}]}], 
         "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "figure", " ", "out", " ", "what", " ", "are", " ", "the", " ", 
           "traits", " ", "on", " ", "the", " ", "x"}], "-", " ", 
          RowBox[{"and", " ", "y"}], "-", "axes"}], " ", "*)"}], "\n", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"gu1", ",", "tr1", ",", "sp1"}], "}"}], "=", 
         RowBox[{
          RowBox[{"LookUp", "[", "trait1", "]"}], "\[LeftDoubleBracket]", 
          RowBox[{"2", ";;", "4"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"framelabel", "===", "Automatic"}], ",", "\n", "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"plottype", "\[Equal]", "\"\<Plot3D\>\""}], ",", "\n", 
            "\t\t", 
            RowBox[{"framelabel", "=", 
             RowBox[{"{", 
              RowBox[{"trait1", ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"tr1", ",", "0"}], "]"}], ",", "\"\<inv\>\""}], 
              "}"}]}], ",", "\n", "\t\t", 
            RowBox[{"framelabel", "=", 
             RowBox[{"{", 
              RowBox[{"trait1", ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"tr1", ",", "0"}], "]"}]}], "}"}]}]}], "\n", "\t", 
           "]"}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"fixed", " ", "traits", " ", "for", " ", "invader"}], " ", 
         "*)"}], "\n", 
        RowBox[{"invfixed", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"trt", ",", "0"}], "]"}], "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{"trt", ",", "sp1"}], "]"}], "/.", "fixed"}], ")"}]}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"trt", ",", 
             RowBox[{"Complement", "[", 
              RowBox[{
               RowBox[{"gtraits", "[", "gu1", "]"}], ",", 
               RowBox[{"{", "tr1", "}"}]}], "]"}]}], "}"}]}], "]"}]}], ";", 
        "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"define", " ", "resident", " ", "sol"}], " ", "*)"}], "\n", 
        "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"solin", "===", "\"\<FindEcoAttractor\>\""}], ",", "\n", 
          "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"ics", "\[Equal]", 
              RowBox[{"{", "}"}]}], ",", "\n", "\t\t", 
             RowBox[{"(*", " ", 
              RowBox[{
              "figure", " ", "out", " ", "number", " ", "of", " ", "species", 
               " ", "in", " ", "guilds"}], " ", "*)"}], "\n", "\t\t", 
             RowBox[{
              RowBox[{"Set\[ScriptCapitalN]", "[", 
               RowBox[{"Append", "[", 
                RowBox[{"fixed", ",", 
                 RowBox[{"trait1", "\[Rule]", "trait1"}]}], "]"}], "]"}], ";",
               "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{"Global`debug", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{"func", ",", "\"\<: \[ScriptCapitalN]=\>\"", ",", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "]"}]}], 
               "]"}], ";", "\n", "\t\t", 
              RowBox[{"ics", "=", "DefaultICs"}], ";", "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{"func", ",", "\"\<: ics=\>\"", ",", "ics"}], "]"}]}],
                "]"}], ";"}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"tr", "=", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{"fixed", "/.", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], "}"}]}], 
                   "]"}]}], ",", 
                 RowBox[{"ics", "=", "ics"}], ",", 
                 RowBox[{"op", "=", 
                  RowBox[{"Sequence", "@@", "findecoattractoropts"}]}]}], 
                "}"}], ",", "\n", "\t\t\t", 
               RowBox[{"PrintCall", "[", 
                RowBox[{
                 RowBox[{"Global`sol", "[", 
                  RowBox[{
                   RowBox[{"(", "System`\[FormalX]", ")"}], 
                   RowBox[{"_", "?", "NumberQ"}]}], "]"}], ":=", 
                 RowBox[{
                  RowBox[{"Global`sol", "[", "System`\[FormalX]", "]"}], "=", 
                  
                  RowBox[{"FindEcoAttractor", "[", 
                   RowBox[{"tr", ",", 
                    RowBox[{"ICs", "->", "ics"}], ",", "op"}], "]"}]}]}], 
                "]"}]}], "\n", "\t", "]"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{
            RowBox[{"sol", "[", 
             RowBox[{"\[FormalX]_", "?", "NumberQ"}], "]"}], ":=", 
            RowBox[{
             RowBox[{"sol", "[", "\[FormalX]", "]"}], "=", 
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", "result", "}"}], ",", "\n", "\t\t", 
               RowBox[{
                RowBox[{"result", "=", 
                 RowBox[{"FindEcoAttractor", "[", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"fixed", "/.", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], "}"}]}], 
                    "]"}], ",", 
                   RowBox[{"ICs", "->", "ics"}], ",", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "findecoattractoropts"}], "]"}],
                    ",", 
                   RowBox[{"EcoSimOpts", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"RandomSeeding", "\[Rule]", "randomseeding"}], 
                    "}"}]}], ",", 
                   RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}],
                 ";", "\n", "\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{"printtrace", ",", 
                  RowBox[{"Print", "[", 
                   RowBox[{
                   "\"\<EcoAttractor (\>\"", ",", "trait1", ",", "\"\<=\>\"", 
                    ",", "\[FormalX]", ",", "\"\<): \>\"", ",", "result"}], 
                   "]"}]}], "]"}], ";", "\n", "\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"result", "\[Equal]", 
                   RowBox[{"{", "$Failed", "}"}]}], ",", 
                  RowBox[{"Message", "[", 
                   RowBox[{
                    RowBox[{"PlotPIP", "::", "feafail"}], ",", "trait1", ",", 
                    "\[FormalX]"}], "]"}]}], "]"}], ";", "\n", "\t\t", 
                RowBox[{"Return", "[", "result", "]"}]}]}], "\n", "\t", 
              "]"}]}]}], ";", "\n", "\t", 
           RowBox[{"delayinv", "=", "True"}], ";"}], "\n", ",", "\n", "\t", 
          RowBox[{"TemporalRuleListQ", "[", "solin", "]"}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{
            RowBox[{"sol", "[", "\[FormalX]_", "]"}], "=", 
            RowBox[{"solin", "/.", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"var_", "\[Rule]", "if_"}], ")"}], "\[Rule]", 
              RowBox[{"(", 
               RowBox[{"var", "\[Rule]", 
                RowBox[{"if", "[", "\[FormalX]", "]"}]}], ")"}]}]}]}], ";"}], 
          "\n", ",", "\n", "\t", "Else", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"PrintCall", "[", 
              RowBox[{
               RowBox[{"Global`sol", "[", 
                RowBox[{
                 RowBox[{"(", "System`\[FormalX]", ")"}], "_"}], "]"}], "=", 
               RowBox[{"solin", "/.", 
                RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}]}], "]"}]}], 
            "]"}], ";", "\n", "\t", 
           RowBox[{
            RowBox[{"sol", "[", "\[FormalX]_", "]"}], "=", 
            RowBox[{"solin", "/.", 
             RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}]}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: sol[\[FormalX]]=\>\"", ",", 
               RowBox[{"sol", "[", "\[FormalX]", "]"}]}], "]"}]}], "]"}], 
           ";"}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"define", " ", "inv"}], " ", "*)"}], "\n", 
        RowBox[{"If", "[", 
         RowBox[{"delayinv", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"subtractdiagonal", "\[Equal]", "True"}], ",", "\n", 
             "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", "\n", "\t\t\t", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"tr", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"so", "=", 
                    RowBox[{"sol", "[", "\[FormalX]", "]"}]}], ",", 
                    RowBox[{"ti", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"invfixed", ",", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"tr1", ",", "0"}], "]"}], "\[Rule]", 
                    "\[FormalX]"}]}], "]"}]}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "invopts"}]}]}], "}"}], ",", 
                  "\n", "\t\t\t\t", 
                  RowBox[{"PrintCall", "[", 
                   RowBox[{
                    RowBox[{"Global`resinv", "[", 
                    RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"Global`resinv", "[", "System`\[FormalX]", "]"}], 
                    "=", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "so", ",", "ti", ",", "op"}], 
                    "]"}]}]}], "]"}]}], "\n", "\t\t", "]"}]}], "]"}], ";", 
              "\n", "\t\t", 
              RowBox[{
               RowBox[{"resinv", "[", 
                RowBox[{"\[FormalX]_", "?", "NumberQ"}], "]"}], ":=", 
               RowBox[{
                RowBox[{"resinv", "[", "\[FormalX]", "]"}], "=", "\n", "\t\t", 
                RowBox[{"Inv", "[", 
                 RowBox[{
                  RowBox[{"Append", "[", 
                   RowBox[{"fixed", ",", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}], "]"}], ",", 
                  RowBox[{"sol", "[", "\[FormalX]", "]"}], ",", 
                  RowBox[{"Append", "[", 
                   RowBox[{"invfixed", ",", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"tr1", ",", "0"}], "]"}], "\[Rule]", 
                    "\[FormalX]"}]}], "]"}], ",", 
                  RowBox[{"Evaluate", "[", 
                   RowBox[{"Sequence", "@@", "invopts"}], "]"}], ",", 
                  RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], 
                 "]"}]}]}], ";"}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"tr", "=", 
                  RowBox[{"Append", "[", 
                   RowBox[{"fixed", ",", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}], "]"}]}], 
                 ",", 
                 RowBox[{"so", "=", 
                  RowBox[{"sol", "[", "\[FormalX]", "]"}]}], ",", 
                 RowBox[{"ti", "=", 
                  RowBox[{"Append", "[", 
                   RowBox[{"invfixed", ",", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"tr1", ",", "0"}], "]"}], "\[Rule]", 
                    "\[FormalY]"}]}], "]"}]}], ",", 
                 RowBox[{"op", "=", 
                  RowBox[{"Sequence", "@@", "invopts"}]}], ",", "\n", 
                 "\t\t\t", 
                 RowBox[{"sub", "=", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"subtractdiagonal", "\[Equal]", "True"}], ",", 
                    RowBox[{"Global`resinv", "[", "\[FormalX]", "]"}], ",", 
                    "0"}], "]"}]}]}], "}"}], ",", "\n", "\t\t\t", 
               RowBox[{"PrintCall", "[", 
                RowBox[{
                 RowBox[{"Global`inv", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}], ",", 
                   RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}]}], "]"}], ":=", 
                 RowBox[{
                  RowBox[{"Global`inv", "[", 
                   RowBox[{"System`\[FormalX]", ",", "System`\[FormalY]"}], 
                   "]"}], "=", 
                  RowBox[{
                   RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "so", ",", "ti", ",", "op"}], "]"}], 
                   "-", "sub"}]}]}], "]"}]}], "\n", "\t", "]"}]}], "]"}], ";",
            "\n", "\t", 
           RowBox[{
            RowBox[{"inv", "[", 
             RowBox[{
              RowBox[{"\[FormalX]_", "?", "NumberQ"}], ",", 
              RowBox[{"\[FormalY]_", "?", "NumberQ"}]}], "]"}], ":=", 
            RowBox[{
             RowBox[{"inv", "[", 
              RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "=", 
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", "result", "}"}], ",", "\n", "\t\t", 
               RowBox[{
                RowBox[{"result", "=", 
                 RowBox[{"Inv", "[", 
                  RowBox[{
                   RowBox[{"Append", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}], "]"}], ",", 
                   RowBox[{"sol", "[", "\[FormalX]", "]"}], ",", 
                   RowBox[{"Append", "[", 
                    RowBox[{"invfixed", ",", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"tr1", ",", "0"}], "]"}], "\[Rule]", 
                    "\[FormalY]"}]}], "]"}], ",", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}], ",", 
                   RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}],
                 ";", "\n", "\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{"printtrace", ",", 
                  RowBox[{"Print", "[", 
                   RowBox[{
                   "\"\<Inv (\>\"", ",", "trait1", ",", "\"\<=\>\"", ",", 
                    "\[FormalX]", ",", "\"\< \>\"", ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"tr1", ",", "0"}], "]"}], ",", "\"\<=\>\"", ",", 
                    "\[FormalY]", ",", "\"\<): \>\"", ",", "result"}], 
                   "]"}]}], "]"}], ";", "\n", "\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{"subtractdiagonal", ",", 
                  RowBox[{"result", "=", 
                   RowBox[{"result", "-", 
                    RowBox[{"resinv", "[", "\[FormalX]", "]"}]}]}]}], "]"}], 
                ";", "\n", "\t\t", 
                RowBox[{"Return", "[", "result", "]"}], ";"}]}], "\n", "\t", 
              "]"}]}]}], ";"}], "\n", ",", "\n", "\t", 
          RowBox[{"(*", " ", 
           RowBox[{"nondelay", " ", "inv"}], " ", "*)"}], "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"subtractdiagonal", "\[Equal]", "True"}], ",", "\n", 
             "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", "\n", "\t\t\t", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"tr", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"so", "=", 
                    RowBox[{"sol", "[", "\[FormalX]", "]"}]}], ",", 
                    RowBox[{"ti", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"invfixed", ",", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"tr1", ",", "0"}], "]"}], "\[Rule]", 
                    "\[FormalX]"}]}], "]"}]}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "invopts"}]}]}], "}"}], ",", 
                  "\n", "\t\t\t", 
                  RowBox[{"PrintCall", "[", 
                   RowBox[{
                    RowBox[{"Global`resinv", "[", 
                    RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], "_"}], "]"}], 
                    "=", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "so", ",", "ti", ",", "op"}], "]"}]}], 
                   "]"}]}], "\n", "\t\t", "]"}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{
               RowBox[{"resinv", "[", "\[FormalX]_", "]"}], "=", 
               RowBox[{"Inv", "[", 
                RowBox[{
                 RowBox[{"Append", "[", 
                  RowBox[{"fixed", ",", 
                   RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}], "]"}], ",", 
                 
                 RowBox[{"sol", "[", "\[FormalX]", "]"}], ",", 
                 RowBox[{"Append", "[", 
                  RowBox[{"invfixed", ",", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"tr1", ",", "0"}], "]"}], "\[Rule]", 
                    "\[FormalX]"}]}], "]"}], ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"Sequence", "@@", "invopts"}], "]"}], ",", 
                 RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}], 
              ";", "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{"func", ",", "\"\<: resinv[\[FormalX]]=\>\"", ",", 
                  RowBox[{"resinv", "[", "\[FormalX]", "]"}]}], "]"}]}], 
               "]"}], ";"}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"tr", "=", 
                  RowBox[{"Append", "[", 
                   RowBox[{"fixed", ",", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}], "]"}]}], 
                 ",", 
                 RowBox[{"so", "=", 
                  RowBox[{"sol", "[", "\[FormalX]", "]"}]}], ",", 
                 RowBox[{"ti", "=", 
                  RowBox[{"Append", "[", 
                   RowBox[{"invfixed", ",", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"tr1", ",", "0"}], "]"}], "\[Rule]", 
                    "\[FormalY]"}]}], "]"}]}], ",", 
                 RowBox[{"op", "=", 
                  RowBox[{"Sequence", "@@", "invopts"}]}], ",", "\n", 
                 "\t\t\t", 
                 RowBox[{"sub", "=", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"subtractdiagonal", "\[Equal]", "True"}], ",", 
                    RowBox[{"Global`resinv", "[", "\[FormalX]", "]"}], ",", 
                    "0"}], "]"}]}]}], "}"}], ",", "\n", "\t\t\t", 
               RowBox[{"PrintCall", "[", 
                RowBox[{
                 RowBox[{"Global`inv", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], "_"}], ",", 
                   RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], "_"}]}], "]"}], 
                 "=", 
                 RowBox[{
                  RowBox[{"Inv", "[", 
                   RowBox[{"tr", ",", "so", ",", "ti", ",", "op"}], "]"}], 
                  "-", "sub"}]}], "]"}]}], "\n", "\t", "]"}]}], "]"}], ";", 
           "\n", "\t", 
           RowBox[{
            RowBox[{"inv", "[", 
             RowBox[{"\[FormalX]_", ",", "\[FormalY]_"}], "]"}], "=", "\n", 
            "\t\t", 
            RowBox[{
             RowBox[{"Inv", "[", 
              RowBox[{
               RowBox[{"Append", "[", 
                RowBox[{"fixed", ",", 
                 RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}], "]"}], ",", 
               RowBox[{"sol", "[", "\[FormalX]", "]"}], ",", 
               RowBox[{"Append", "[", 
                RowBox[{"invfixed", ",", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{"tr1", ",", "0"}], "]"}], "\[Rule]", 
                  "\[FormalY]"}]}], "]"}], ",", 
               RowBox[{"Evaluate", "[", 
                RowBox[{"Sequence", "@@", "invopts"}], "]"}], ",", 
               RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}], "\n",
              "\t\t", "-", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"subtractdiagonal", "\[Equal]", "True"}], ",", 
               RowBox[{"resinv", "[", "\[FormalX]", "]"}], ",", "0"}], 
              "]"}]}]}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{
              "func", ",", "\"\<: inv[\[FormalX],\[FormalY]]=\>\"", ",", 
               RowBox[{"inv", "[", 
                RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], "]"}]}], 
            "]"}], ";"}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"monitor", ",", 
          RowBox[{"PrintTemporary", "[", 
           RowBox[{"Grid", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Dynamic", "[", 
                 RowBox[{
                  RowBox[{"ToString", "[", 
                   RowBox[{"TraditionalForm", "@", "trait1"}], "]"}], "<>", 
                  "\"\<=\>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"TraditionalForm", "@", "x"}], "]"}]}], "]"}], ",",
                 "\n", 
                RowBox[{"Dynamic", "[", 
                 RowBox[{
                  RowBox[{"ToString", "[", 
                   RowBox[{"TraditionalForm", "@", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"tr1", ",", "0"}], "]"}]}], "]"}], "<>", 
                  "\"\<=\>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"TraditionalForm", "@", "y"}], "]"}]}], "]"}]}], 
               "}"}], "}"}], ",", 
             RowBox[{"ItemSize", "\[Rule]", "10"}], ",", 
             RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}], "]"}]}], 
         "]"}], ";", "\n", "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"plottype", "\[Equal]", "\"\<Plot3D\>\""}], ",", "\n", "\t", 
          RowBox[{"res", "=", 
           RowBox[{"Plot3D", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Evaluate", "[", 
                RowBox[{"inv", "[", 
                 RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "]"}], ",",
                "invthreshold"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[FormalX]", ",", "trait1min", ",", "trait1max"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[FormalY]", ",", "trait1min", ",", "trait1max"}], 
              "}"}], ",", "\n", "\t\t", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
             RowBox[{"AxesLabel", "\[Rule]", 
              RowBox[{"Append", "[", 
               RowBox[{"framelabel", ",", "\"\<inv\>\""}], "]"}]}], ",", 
             RowBox[{"EvaluationMonitor", "\[RuleDelayed]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"x", ",", "y"}], "}"}], "=", 
                RowBox[{"{", 
                 RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "}"}]}], 
               "}"}]}]}], "]"}]}], ",", "\n", "\t", 
          RowBox[{"plottype", "\[Equal]", "\"\<ContourPlot\>\""}], ",", "\n", 
          "\t", 
          RowBox[{"res", "=", 
           RowBox[{"ContourPlot", "[", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{"inv", "[", 
               RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[FormalX]", ",", "trait1min", ",", "trait1max"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[FormalY]", ",", "trait1min", ",", "trait1max"}], 
              "}"}], ",", "\n", "\t\t", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", "framelabel"}], ",", 
             RowBox[{"EvaluationMonitor", "\[RuleDelayed]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"x", ",", "y"}], "}"}], "=", 
                RowBox[{"{", 
                 RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "}"}]}], 
               "}"}]}]}], "]"}]}], ",", "\n", "\t", 
          RowBox[{"plottype", "\[Equal]", "\"\<RegionPlot\>\""}], ",", " ", 
          "\n", "\t", 
          RowBox[{"res", "=", 
           RowBox[{"RegionPlot", "[", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"inv", "[", 
                RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], ">", 
               "invthreshold"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[FormalX]", ",", "trait1min", ",", "trait1max"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[FormalY]", ",", "trait1min", ",", "trait1max"}], 
              "}"}], ",", "\n", "\t\t", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", "invstyle"}], ",", 
             RowBox[{"BoundaryStyle", "\[Rule]", "boundarystyle"}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", "framelabel"}], ",", 
             RowBox[{"EvaluationMonitor", "\[RuleDelayed]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"x", ",", "y"}], "}"}], "=", 
                RowBox[{"{", 
                 RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "}"}]}], 
               "}"}]}]}], "]"}]}], ",", "\n", "\t", 
          RowBox[{"plottype", "\[Equal]", "\"\<PIP\>\""}], ",", "\n", "\t", 
          RowBox[{"res", "=", 
           RowBox[{"ContourPlot", "[", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{"inv", "[", 
               RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[FormalX]", ",", "trait1min", ",", "trait1max"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[FormalY]", ",", "trait1min", ",", "trait1max"}], 
              "}"}], ",", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", "\n", 
             "\t\t", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"Contours", "\[Rule]", 
              RowBox[{"{", "invthreshold", "}"}]}], ",", 
             RowBox[{"ContourStyle", "\[Rule]", 
              RowBox[{"{", "boundarystyle", "}"}]}], ",", 
             RowBox[{"ContourShading", "\[Rule]", "True"}], ",", 
             RowBox[{"ColorFunction", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"#", ">", "invthreshold"}], ",", "invstyle", ",", 
                  "noninvstyle"}], "]"}], "&"}], ")"}]}], ",", "\n", "\t\t", 
             RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
             RowBox[{"Method", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"\"\<TransparentPolygonMesh\>\"", "\[Rule]", "True"}], 
               "}"}]}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", "framelabel"}], ",", 
             RowBox[{"EvaluationMonitor", "\[RuleDelayed]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"x", ",", "y"}], "}"}], "=", 
                RowBox[{"{", 
                 RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "}"}]}], 
               "}"}]}]}], "]"}]}], ",", "\n", "\t", "Else", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"PlotPIP", "::", "badmtd"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "\n", "]"}], ";", 
        "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"monitor", ",", 
          RowBox[{"NotebookClose", "[", "nb", "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"Return", "[", "res", "]"}]}]}], "\n", "\n", "]"}]}], "]"}]}],
   ";"}]], "Code",
 CellChangeTimes->{{3.6882878053898993`*^9, 3.688287808743078*^9}, 
   3.688288135806472*^9, {3.688571691991478*^9, 3.688571693332206*^9}, {
   3.688571767918311*^9, 3.6885717681985188`*^9}, 3.688571807424464*^9, {
   3.689089001313301*^9, 3.6890890043689737`*^9}, {3.689089064072935*^9, 
   3.689089086138599*^9}, {3.689089143143515*^9, 3.6890891774214573`*^9}, 
   3.689089319114167*^9, {3.6890893978441753`*^9, 3.68908946417699*^9}, {
   3.6890894988659487`*^9, 3.689089502950509*^9}, {3.68908962606043*^9, 
   3.689089707985218*^9}, {3.6890897508996687`*^9, 3.689089752853948*^9}, {
   3.689089795971916*^9, 3.689089811275532*^9}, {3.689094833621719*^9, 
   3.6890948514587193`*^9}, {3.689094910467456*^9, 3.6890949221569777`*^9}, {
   3.6890954370202703`*^9, 3.6890954584809504`*^9}, {3.689095633452139*^9, 
   3.689095634779669*^9}, {3.689096392029808*^9, 3.689096392409925*^9}, 
   3.689109040730095*^9, {3.689111758566491*^9, 3.689111784518702*^9}, {
   3.689111904429968*^9, 3.689111915953508*^9}, {3.689111976407898*^9, 
   3.689111979453858*^9}, {3.689112031839395*^9, 3.689112034130287*^9}, {
   3.689112234797407*^9, 3.689112238688863*^9}, {3.689112335834444*^9, 
   3.689112341527008*^9}, {3.689112410877317*^9, 3.689112416319282*^9}, {
   3.6891124757905483`*^9, 3.6891124785613213`*^9}, {3.689174823424921*^9, 
   3.689174829366109*^9}, {3.6891783281588087`*^9, 3.689178328497805*^9}, {
   3.689178370594777*^9, 3.689178450825324*^9}, {3.6891790813283653`*^9, 
   3.689179127857786*^9}, {3.6891791818152533`*^9, 3.689179231214836*^9}, {
   3.68917973835533*^9, 3.689179779593503*^9}, {3.68918002554659*^9, 
   3.689180030068746*^9}, {3.689180135050324*^9, 3.6891801580467854`*^9}, {
   3.6891802340613937`*^9, 3.689180239945746*^9}, {3.689180294960429*^9, 
   3.6891803050153313`*^9}, {3.689180392448309*^9, 3.689180485273971*^9}, {
   3.6891816382118883`*^9, 3.689181644221792*^9}, {3.689191913231555*^9, 
   3.6891919983976393`*^9}, {3.689197811186739*^9, 3.6891978143392344`*^9}, {
   3.689198544412386*^9, 3.689198568239478*^9}, {3.689198714685821*^9, 
   3.689198716361845*^9}, {3.689198780784491*^9, 3.689198784734527*^9}, 
   3.689198861191393*^9, {3.689198913114086*^9, 3.689198949159569*^9}, {
   3.68919905265482*^9, 3.6891990809619617`*^9}, {3.689199117939396*^9, 
   3.689199152204212*^9}, {3.6891994321929617`*^9, 3.689199474812408*^9}, {
   3.689199517252146*^9, 3.6891995176044188`*^9}, {3.689199587743112*^9, 
   3.6891996617293787`*^9}, {3.689199717876816*^9, 3.6891997680542192`*^9}, {
   3.689200137207405*^9, 3.689200243050371*^9}, {3.689200298027767*^9, 
   3.689200301455925*^9}, {3.689201238814459*^9, 3.689201256720944*^9}, {
   3.689202801977714*^9, 3.6892028035579557`*^9}, {3.689202852554137*^9, 
   3.689202894752262*^9}, {3.689202952746408*^9, 3.6892029611328793`*^9}, {
   3.689203013609786*^9, 3.6892030191456137`*^9}, {3.689203077905377*^9, 
   3.6892031213953457`*^9}, {3.689203172443755*^9, 3.689203175337235*^9}, {
   3.6892034959812326`*^9, 3.68920350669643*^9}, {3.689203577291835*^9, 
   3.68920358644083*^9}, {3.6892036343190327`*^9, 3.689203654362729*^9}, {
   3.6892037096036043`*^9, 3.6892037138753023`*^9}, {3.689203758755131*^9, 
   3.689203779386141*^9}, {3.689203813064961*^9, 3.689203823828795*^9}, {
   3.689203885257016*^9, 3.6892038975928717`*^9}, 3.689204020852828*^9, {
   3.6892040760499287`*^9, 3.689204091491871*^9}, {3.689204247224155*^9, 
   3.6892043556569023`*^9}, 3.689204392097805*^9, {3.689204573658605*^9, 
   3.689204588825337*^9}, {3.6892047072010183`*^9, 3.689204782361391*^9}, {
   3.689204855748041*^9, 3.68920488349269*^9}, {3.689205187275572*^9, 
   3.6892052180399647`*^9}, {3.689205416312755*^9, 3.6892054198705587`*^9}, {
   3.689205502162085*^9, 3.689205546551907*^9}, {3.689205619607603*^9, 
   3.689205629815021*^9}, {3.689205730510394*^9, 3.689205731948648*^9}, {
   3.689205931427723*^9, 3.689205975525549*^9}, {3.6892071341554403`*^9, 
   3.6892071359756813`*^9}, {3.689250431833008*^9, 3.689250470270946*^9}, {
   3.689250715419957*^9, 3.6892507249180403`*^9}, {3.689250784897676*^9, 
   3.689250794159843*^9}, {3.6892508245846043`*^9, 3.689250831778019*^9}, 
   3.689289425324069*^9, {3.6961621421770067`*^9, 3.6961621422215967`*^9}, {
   3.6962787073963833`*^9, 3.6962787150874767`*^9}, {3.696278763823457*^9, 
   3.696278787052191*^9}, 3.696278848675012*^9, {3.696336384425806*^9, 
   3.696336384799808*^9}, {3.696631878688575*^9, 3.69663189812319*^9}, 
   3.696632208448448*^9, 3.6966328706169167`*^9, {3.696807891665193*^9, 
   3.696807893138623*^9}, {3.708834707532692*^9, 3.7088347170895977`*^9}, {
   3.709336791185824*^9, 3.709336792639715*^9}, 3.710105986907427*^9, {
   3.710256264542733*^9, 3.710256270382635*^9}, 3.714059650264831*^9, 
   3.722029506592965*^9, {3.722034137288947*^9, 3.722034141048389*^9}, {
   3.722087635746091*^9, 3.722087644147887*^9}, {3.726056451490245*^9, 
   3.726056465179557*^9}, {3.726071090970359*^9, 3.726071092789983*^9}, {
   3.7260712433557997`*^9, 3.726071245133451*^9}, {3.7260713324157677`*^9, 
   3.726071390476644*^9}, {3.726071497216798*^9, 3.7260715337222557`*^9}, {
   3.726072888227065*^9, 3.726072928006425*^9}, {3.7260730380680227`*^9, 
   3.726073113792355*^9}, {3.726073165290617*^9, 3.726073229326071*^9}, {
   3.726073501884719*^9, 3.726073511653207*^9}, {3.726073576767537*^9, 
   3.72607357691678*^9}, 3.726073697706916*^9, {3.726074316210824*^9, 
   3.726074316927059*^9}, {3.7260743919497013`*^9, 3.726074414547894*^9}, {
   3.726074460259066*^9, 3.726074484902568*^9}, {3.726075238073091*^9, 
   3.726075275152114*^9}, {3.72618828208501*^9, 3.7261882945543127`*^9}, {
   3.7261883720903*^9, 3.726188381323353*^9}, {3.726188420266077*^9, 
   3.726188426293673*^9}, {3.726188776691154*^9, 3.726188789728528*^9}, {
   3.726188842312276*^9, 3.726188860794813*^9}, {3.726188988739767*^9, 
   3.726189108311336*^9}, {3.726230212861211*^9, 3.726230217747037*^9}, {
   3.726230645967428*^9, 3.7262307667987223`*^9}, {3.726230818395987*^9, 
   3.726230884489443*^9}, {3.726231277402527*^9, 3.72623131285391*^9}, {
   3.726231393522318*^9, 3.726231454285048*^9}, {3.726231686756743*^9, 
   3.726231700836083*^9}, {3.726231767053443*^9, 3.726231789154139*^9}, {
   3.7262326686860533`*^9, 3.7262326974127617`*^9}, {3.7262327836341753`*^9, 
   3.726232874572188*^9}, {3.7262329925979958`*^9, 3.7262330788257647`*^9}, {
   3.726233305075042*^9, 3.7262333172963867`*^9}, {3.726233351492125*^9, 
   3.7262333591029997`*^9}, {3.726233758487073*^9, 3.72623380707312*^9}, {
   3.726233870688229*^9, 3.726233908829048*^9}, {3.726237375602306*^9, 
   3.7262373859536543`*^9}, {3.726237423617084*^9, 3.726237464937804*^9}, {
   3.72623772549475*^9, 3.726237738212401*^9}, {3.726237780345769*^9, 
   3.7262378354836693`*^9}, {3.726854018042366*^9, 3.7268540335791807`*^9}, {
   3.726854072833074*^9, 3.726854093841251*^9}, {3.726855239217329*^9, 
   3.726855264118061*^9}, {3.7268557230178823`*^9, 3.726855742664983*^9}, {
   3.726856572217778*^9, 3.726856672024487*^9}, {3.726856779541354*^9, 
   3.7268569744166613`*^9}, {3.726857012712079*^9, 3.726857017083234*^9}, {
   3.726857069306169*^9, 3.726857103092688*^9}, {3.726858001597035*^9, 
   3.726858038086812*^9}, {3.726858074457255*^9, 3.72685807564783*^9}, {
   3.7268581805910053`*^9, 3.7268581835488577`*^9}, {3.7268583043467283`*^9, 
   3.7268583179085207`*^9}, {3.726858361303534*^9, 3.726858362573333*^9}, {
   3.727915959261964*^9, 3.7279159983124447`*^9}, {3.727916030994895*^9, 
   3.727916064560351*^9}, {3.727916099780263*^9, 3.727916106652927*^9}, {
   3.72791618509103*^9, 3.7279162133993177`*^9}, {3.727916248195435*^9, 
   3.7279162894337387`*^9}, 3.727917338867939*^9, {3.727917411241886*^9, 
   3.7279174222276297`*^9}, {3.727963438355867*^9, 3.727963468286482*^9}, {
   3.727963781137619*^9, 3.72796379461798*^9}, {3.727963830105013*^9, 
   3.727963895766238*^9}, {3.7279647005991077`*^9, 3.7279647480513287`*^9}, {
   3.727971244636801*^9, 3.7279712951495256`*^9}, {3.729206049982527*^9, 
   3.729206391094458*^9}, {3.729206430652381*^9, 3.729206442855134*^9}, {
   3.729206473687046*^9, 3.7292065798051653`*^9}, {3.7292097373420963`*^9, 
   3.729209818654113*^9}, {3.72921038555436*^9, 3.729210411446641*^9}, {
   3.729210480345175*^9, 3.7292105212657948`*^9}, {3.729210687937376*^9, 
   3.729210726202386*^9}, {3.729210811355405*^9, 3.72921090763039*^9}, {
   3.729210993322847*^9, 3.729211011628931*^9}, {3.7292110686862717`*^9, 
   3.729211082480344*^9}, 3.7292111344799223`*^9, {3.729246579945427*^9, 
   3.729246582755569*^9}, {3.7292466129223537`*^9, 3.729246665746838*^9}, {
   3.729252843237739*^9, 3.729252869768497*^9}, {3.729252965562705*^9, 
   3.729252982686331*^9}, {3.7292530492225723`*^9, 3.729253052280053*^9}, {
   3.729253106802218*^9, 3.729253109466371*^9}, {3.729516840069571*^9, 
   3.729516866309836*^9}, {3.729516897526276*^9, 3.729516935333987*^9}, {
   3.7295174274676933`*^9, 3.729517434159416*^9}, {3.729517589295079*^9, 
   3.729517589468935*^9}, {3.729521737563169*^9, 3.729521737716382*^9}, {
   3.7295224992948637`*^9, 3.7295225037970133`*^9}, 3.729522573306675*^9, {
   3.729522632857226*^9, 3.729522706721671*^9}, {3.7295227665134687`*^9, 
   3.729522769103799*^9}, {3.729522819596964*^9, 3.7295228302243147`*^9}, {
   3.729522882962694*^9, 3.7295228872019453`*^9}, {3.737047827262353*^9, 
   3.737047860663974*^9}, 3.737049077440442*^9, {3.737049146393955*^9, 
   3.737049172765809*^9}, {3.737049320409162*^9, 3.737049326450137*^9}, {
   3.737049467070519*^9, 3.737049468883052*^9}, {3.737049551402895*^9, 
   3.737049578968912*^9}, {3.737049628102042*^9, 3.737049649104781*^9}, {
   3.7370496994241247`*^9, 3.7370497779819927`*^9}, {3.7471573233244667`*^9, 
   3.7471573294894133`*^9}, {3.747157440439859*^9, 3.7471574407736273`*^9}, {
   3.747170300156291*^9, 3.7471703060836287`*^9}, {3.7471707882957487`*^9, 
   3.747170797665812*^9}, {3.74717091093372*^9, 3.7471709144339123`*^9}, {
   3.7471770568392553`*^9, 3.74717705780588*^9}, 3.7553735087918*^9, {
   3.755438082343615*^9, 3.7554380879410048`*^9}, {3.755438344874769*^9, 
   3.7554383728594112`*^9}, {3.755438413505609*^9, 3.755438447977132*^9}, {
   3.755438493133107*^9, 3.755438516570827*^9}, {3.755438745660039*^9, 
   3.755438783985099*^9}, {3.7554389156762877`*^9, 3.7554389410371933`*^9}, {
   3.7554395103394957`*^9, 3.7554395912531223`*^9}, {3.755439747901032*^9, 
   3.755439772670339*^9}, {3.755439804140441*^9, 3.7554398042919703`*^9}, {
   3.755439834965951*^9, 3.75543987228279*^9}, {3.755439909862715*^9, 
   3.755439914590097*^9}, {3.7554399500723753`*^9, 3.7554399520758867`*^9}, {
   3.7554404669293957`*^9, 3.7554404958744583`*^9}, 3.755440863778035*^9, {
   3.760107455102272*^9, 3.760107482198161*^9}, {3.7605514650769367`*^9, 
   3.7605514651512127`*^9}, 3.7606372939554253`*^9, {3.760935236600765*^9, 
   3.760935284099141*^9}, {3.760940829084181*^9, 3.760940829478738*^9}, {
   3.760940913646481*^9, 3.760940974734029*^9}, 3.760974207052655*^9, {
   3.760975183055622*^9, 3.760975183167212*^9}, {3.760975919643701*^9, 
   3.760975920151441*^9}, {3.760975955202338*^9, 3.760976010981024*^9}, {
   3.761031885211821*^9, 3.7610318853420773`*^9}, {3.761031972113855*^9, 
   3.761032038553437*^9}, {3.7610340348780193`*^9, 3.761034037953529*^9}, 
   3.7610344765653954`*^9, {3.761034532308589*^9, 3.761034537456883*^9}, {
   3.761034575696432*^9, 3.761034584019146*^9}, {3.76103555251679*^9, 
   3.761035601156687*^9}, {3.7610358718643627`*^9, 3.761035874742136*^9}, {
   3.761036689415717*^9, 3.761036699983158*^9}, {3.761037747407172*^9, 
   3.7610377488512487`*^9}, {3.761037949446727*^9, 3.7610379561419353`*^9}, {
   3.76103937326647*^9, 3.7610393736385527`*^9}, {3.761040392497736*^9, 
   3.761040405276497*^9}, {3.76104044937175*^9, 3.761040451392477*^9}, {
   3.7610404814177713`*^9, 3.761040486530677*^9}, {3.7610409571543903`*^9, 
   3.761040957671175*^9}, {3.762421485268777*^9, 3.76242149431919*^9}, {
   3.7695009772965813`*^9, 3.769500977626964*^9}, 3.769760705820644*^9, 
   3.770438265194556*^9, {3.77072144656396*^9, 3.770721447133972*^9}, {
   3.774597057257262*^9, 3.7745970638840027`*^9}, {3.7745971073592*^9, 
   3.774597111166581*^9}, {3.774597217102556*^9, 3.774597218020897*^9}, 
   3.7941372410457573`*^9, {3.807283973728038*^9, 3.807284009662321*^9}, {
   3.807284356907083*^9, 3.807284382212329*^9}, {3.82052351246377*^9, 
   3.820523553909855*^9}, 3.820523665222752*^9, {3.820526531288498*^9, 
   3.820526552575498*^9}, {3.820526676655366*^9, 3.820526680224551*^9}, {
   3.8205281655945168`*^9, 3.82052822606199*^9}, {3.8205282659317513`*^9, 
   3.820528289991193*^9}, {3.820528324620784*^9, 3.8205283680634737`*^9}, {
   3.820530069582368*^9, 3.820530073927483*^9}, {3.8205301395583477`*^9, 
   3.82053014560574*^9}, {3.820530926515708*^9, 3.820530932790655*^9}, {
   3.8205310785560017`*^9, 3.820531079748785*^9}, {3.820684054244623*^9, 
   3.820684075796926*^9}, {3.820684208782403*^9, 3.8206842223344927`*^9}, {
   3.821454169289192*^9, 3.8214541699989777`*^9}, {3.844377398700322*^9, 
   3.844377406692011*^9}},ExpressionUUID->"1c01e065-b52c-4ae3-8f07-\
dc9dca1516f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.769500980923586*^9, 
  3.769500981658609*^9}},ExpressionUUID->"a57363e1-28cc-485f-a2a7-\
af57c949d426"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PlotPIP", "]"}], "=", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"FindEcoAttractorOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"InvOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"RandomSeeding", "\[Rule]", "1234"}], ",", "\n", "\t", 
     RowBox[{"DelayInv", "\[Rule]", "False"}], ",", 
     RowBox[{"PlotType", "\[Rule]", "\"\<PIP\>\""}], ",", 
     RowBox[{"ICs", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"ZeroDiagonal", "\[Rule]", "False"}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"SubtractDiagonal", "\[Rule]", "False"}], ",", 
     RowBox[{"InvThreshold", "\[Rule]", "0"}], ",", "\n", "\t", 
     RowBox[{"PlotOpts", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"MaxRecursion", "\[Rule]", "3"}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", "Automatic"}], ",", "\n", "\t", 
     RowBox[{"BoundaryStyle", "\[Rule]", "Black"}], ",", 
     RowBox[{"InvStyle", "\[Rule]", "Gray"}], ",", 
     RowBox[{"NonInvStyle", "\[Rule]", "White"}], ",", "\n", "\t", 
     RowBox[{"Monitor", "\[Rule]", "False"}], ",", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "\n", "}"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{
  3.7695009888274517`*^9, {3.7702701720263443`*^9, 3.770270174918408*^9}, {
   3.820524522200383*^9, 3.8205245246108828`*^9}, {3.820524558462449*^9, 
   3.8205245888699827`*^9}, {3.820526453153858*^9, 3.820526457896201*^9}, {
   3.820526510545929*^9, 3.8205265166396217`*^9}, {3.820526687279766*^9, 
   3.820526693791527*^9}, {3.8206833292237577`*^9, 3.8206833362141657`*^9}, {
   3.829401679527865*^9, 
   3.829401679972192*^9}},ExpressionUUID->"7cca217a-d72f-403c-91f6-\
b58579412494"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Messages", "Subsubsection",
 CellChangeTimes->{{3.769500962300488*^9, 
  3.76950096768353*^9}},ExpressionUUID->"9720a47d-3b10-4ce1-9014-\
0dc6464c837f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotPIP", "::", "feafail"}], "=", "\n", 
   "\"\<FindEcoAttractor failed at `1`=`2`.\>\""}], ";"}]], "Code",
 CellChangeTimes->{
  3.7695009706162233`*^9},ExpressionUUID->"1e175c6f-f592-46e0-86d7-\
d3785a187d79"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["PlotMIP", "Subsection",ExpressionUUID->"ace3b29b-39cb-4e05-933d-87ebaaa7716b"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"a11640c6-a001-460e-a01c-\
b858094c66c1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotMIP", "::", "usage"}], " ", "=", "\n", 
   "\"\<PlotMIP[{\!\(\*StyleBox[\"trait\", \"TI\"]\), \
\!\(\*StyleBox[\"traitmin\", \"TI\"]\), \!\(\*StyleBox[\"traitmax\", \
\"TI\"]\)}] creates a mutual invasibility plot, where \
\!\(\*StyleBox[\"trait\", \"TI\"]\) varies from \!\(\*StyleBox[\"traitmin\", \
\"TI\"]\) to \!\(\*StyleBox[\"traitmax\", \"TI\"]\).\nPlotMIP[\!\(\*StyleBox[\
\"sol\", \"TI\"]\), {\!\(\*StyleBox[\"trait\", \"TI\"]\), \
\!\(\*StyleBox[\"traitmin\", \"TI\"]\), \!\(\*StyleBox[\"traitmax\", \
\"TI\"]\)}] uses ecological equilibrium \!\(\*StyleBox[\"sol\", \"TI\"]\) for \
improved speed.\nPlotMIP[{\!\(\*StyleBox[\"trait1\", \"TI\"]\), \
\!\(\*StyleBox[\"trait1min\", \"TI\"]\), \!\(\*StyleBox[\"trait1max\", \
\"TI\"]\)}, {\!\(\*StyleBox[\"trait2\", \"TI\"]\), \!\(\*StyleBox[\"trait2min\
\", \"TI\"]\), \!\(\*StyleBox[\"trait2max\", \"TI\"]\)}] allows for two \
different traits.\nPlotMIP[{\!\(\*StyleBox[\"sol1\", \"TI\"]\), \
\!\(\*StyleBox[\"sol2\", \"TI\"]\)}, {\!\(\*StyleBox[\"trait1\", \"TI\"]\), \
\!\(\*StyleBox[\"trait1min\", \"TI\"]\), \!\(\*StyleBox[\"trait1max\", \
\"TI\"]\)}, {\!\(\*StyleBox[\"trait2\", \"TI\"]\), \!\(\*StyleBox[\"trait2min\
\", \"TI\"]\), \!\(\*StyleBox[\"trait2max\", \"TI\"]\)}] uses ecological \
equilibria \!\(\*StyleBox[\"sol1\", \"TI\"]\) and \!\(\*StyleBox[\"sol2\", \
\"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.76948985483081*^9, 
  3.769489871854994*^9}},ExpressionUUID->"368635b4-492e-42a0-88a6-\
2599f14165ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"e5bb1dc3-7e81-4e21-8165-\
269803f539c1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotMIP", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"solin1", ":", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"_", "?", "RuleListQ"}], "|", 
          RowBox[{"_", "?", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "\[Equal]", "\"\<FindEcoAttractor\>\""}], "&"}], 
            ")"}]}]}], ")"}], ":", "\"\<FindEcoAttractor\>\""}], ",", 
       RowBox[{"solin2", ":", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"_", "?", "RuleListQ"}], "|", 
          RowBox[{"_", "?", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "\[Equal]", "\"\<FindEcoAttractor\>\""}], "&"}], 
            ")"}]}]}], ")"}], ":", "\"\<FindEcoAttractor\>\""}]}], "}"}], ",",
      "\n", 
     RowBox[{"{", 
      RowBox[{"trait1_", ",", 
       RowBox[{"trait1min_", "?", "NumericQ"}], ",", 
       RowBox[{"trait1max_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"trait2_", ",", 
       RowBox[{"trait2min_", "?", "NumericQ"}], ",", 
       RowBox[{"trait2max_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<PlotMIP\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "printtrace", ",", "monitor", ",", "\n", "fixed", 
       ",", "delayinv", ",", "findecoattractoropts", ",", "invopts", ",", 
       "plotopts", ",", "plottype", ",", "icsin", ",", "zerodiagonal", ",", 
       "subtractdiagonal", ",", "invthreshold", ",", "\n", "boundarystyle", 
       ",", "spcolors", ",", "invstyle", ",", "noninvstyle", ",", 
       "framelabel", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "nb", ",", 
       "x", ",", "y", ",", "\n", "invfixed", ",", "gu1", ",", "tr1", ",", 
       "sp1", ",", "gu2", ",", "tr2", ",", "sp2", ",", "ics", ",", "sol1", 
       ",", "sol2", ",", "inv12", ",", "inv21", ",", "pip1", ",", "pip2", ",",
        "res"}], "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"printtrace", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PrintTrace", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"monitor", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Monitor", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"fixed", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Fixed", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"delayinv", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"DelayInv", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"findecoattractoropts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"FindEcoAttractorOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"invopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"InvOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"plotopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PlotOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"plottype", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PlotType", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"icsin", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"ICs", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"zerodiagonal", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"ZeroDiagonal", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"subtractdiagonal", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"SubtractDiagonal", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"invthreshold", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"InvThreshold", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"boundarystyle", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"BoundaryStyle", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"spcolors", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"SpeciesColors", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"invstyle", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"InvStyle", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"noninvstyle", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"NonInvStyle", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"framelabel", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"FrameLabel", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"zerodiagonal", ",", 
          RowBox[{
           RowBox[{"inv12", "[", 
            RowBox[{"\[FormalX]_", ",", "\[FormalX]_"}], "]"}], "=", 
           RowBox[{
            RowBox[{"inv21", "[", 
             RowBox[{"\[FormalX]_", ",", "\[FormalX]_"}], "]"}], "=", 
            "0"}]}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "figure", " ", "out", " ", "what", " ", "are", " ", "the", " ", 
           "traits", " ", "on", " ", "the", " ", "x"}], "-", " ", 
          RowBox[{"and", " ", "y"}], "-", "axes"}], " ", "*)"}], "\n", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"gu1", ",", "tr1", ",", "sp1"}], "}"}], "=", 
         RowBox[{
          RowBox[{"LookUp", "[", "trait1", "]"}], "\[LeftDoubleBracket]", 
          RowBox[{"2", ";;", "4"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"gu2", ",", "tr2", ",", "sp2"}], "}"}], "=", 
         RowBox[{
          RowBox[{"LookUp", "[", "trait2", "]"}], "\[LeftDoubleBracket]", 
          RowBox[{"2", ";;", "4"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"framelabel", "===", "Automatic"}], ",", "\n", "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"trait2", "===", "trait1"}], ",", "\n", "\t\t", 
            RowBox[{"framelabel", "=", 
             RowBox[{"{", 
              RowBox[{"trait1", ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"tr1", ",", 
                 RowBox[{"sp1", "+", "1"}]}], "]"}]}], "}"}]}], ",", "\n", 
            "\t\t", 
            RowBox[{"framelabel", "=", 
             RowBox[{"{", 
              RowBox[{"trait1", ",", "trait2"}], "}"}]}]}], "\n", "\t", 
           "]"}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"fixed", " ", "traits", " ", "for", " ", 
          RowBox[{"invader", " ", "[", 
           RowBox[{
           "why", " ", "are", " ", "there", " ", "2", " ", "of", " ", 
            RowBox[{"these", "?"}]}], "]"}]}], " ", "*)"}], "\n", 
        RowBox[{"invfixed", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Join", "[", "\n", "\t", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"trt", ",", "0"}], "]"}], "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"trt", ",", "sp1"}], "]"}], "/.", "fixed"}], 
                ")"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"trt", ",", 
                RowBox[{"Complement", "[", 
                 RowBox[{
                  RowBox[{"gtraits", "[", "gu1", "]"}], ",", 
                  RowBox[{"{", "tr1", "}"}]}], "]"}]}], "}"}]}], "]"}], ",", 
            "\n", "\t", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"trt", ",", "0"}], "]"}], "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"trt", ",", "sp1"}], "]"}], "/.", "fixed"}], 
                ")"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"trt", ",", 
                RowBox[{"Complement", "[", 
                 RowBox[{
                  RowBox[{"gtraits", "[", "gu2", "]"}], ",", 
                  RowBox[{"{", "tr2", "}"}]}], "]"}]}], "}"}]}], "]"}]}], 
           "\n", "]"}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"define", " ", "resident", " ", "sol"}], " ", "*)"}], "\n", 
        "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"solin1", "===", "\"\<FindEcoAttractor\>\""}], ",", "\n", 
          "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"icsin", "\[Equal]", 
              RowBox[{"{", "}"}]}], ",", "\n", "\t\t", 
             RowBox[{"(*", " ", 
              RowBox[{
              "figure", " ", "out", " ", "number", " ", "of", " ", "species", 
               " ", "in", " ", "guilds"}], " ", "*)"}], "\n", "\t\t", 
             RowBox[{
              RowBox[{"Set\[ScriptCapitalN]", "[", 
               RowBox[{"Append", "[", 
                RowBox[{"fixed", ",", 
                 RowBox[{"trait1", "\[Rule]", "trait1"}]}], "]"}], "]"}], ";",
               "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{"Global`debug", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{"func", ",", "\"\<: \[ScriptCapitalN]=\>\"", ",", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "]"}]}], 
               "]"}], ";", "\n", "\t\t", 
              RowBox[{"ics", "=", "DefaultICs"}], ";", "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{"func", ",", "\"\<: ics=\>\"", ",", "ics"}], "]"}]}],
                "]"}], ";"}], "\n", "\t", ",", "\n", "\t\t", 
             RowBox[{"ics", "=", "icsin"}]}], "\n", "\t", "]"}], ";", "\n", 
           "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"tr", "=", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{"fixed", "/.", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], "}"}]}], 
                   "]"}]}], ",", 
                 RowBox[{"ics", "=", "ics"}], ",", 
                 RowBox[{"op", "=", 
                  RowBox[{"Sequence", "@@", "findecoattractoropts"}]}]}], 
                "}"}], ",", "\n", "\t\t\t", 
               RowBox[{"PrintCall", "[", 
                RowBox[{
                 RowBox[{"Global`sol1", "[", 
                  RowBox[{
                   RowBox[{"(", "System`\[FormalX]", ")"}], 
                   RowBox[{"_", "?", "NumberQ"}]}], "]"}], ":=", 
                 RowBox[{
                  RowBox[{"Global`sol1", "[", "System`\[FormalX]", "]"}], "=", 
                  RowBox[{"FindEcoAttractor", "[", 
                   RowBox[{"tr", ",", 
                    RowBox[{"ICs", "->", "ics"}], ",", "op"}], "]"}]}]}], 
                "]"}]}], "\n", "\t", "]"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{
            RowBox[{"sol1", "[", 
             RowBox[{"\[FormalX]_", "?", "NumberQ"}], "]"}], ":=", 
            RowBox[{
             RowBox[{"sol1", "[", "\[FormalX]", "]"}], "=", 
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", "result", "}"}], ",", "\n", "\t\t", 
               RowBox[{
                RowBox[{"result", "=", 
                 RowBox[{"FindEcoAttractor", "[", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"fixed", "/.", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], "}"}]}], 
                    "]"}], ",", 
                   RowBox[{"ICs", "->", "ics"}], ",", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "findecoattractoropts"}], "]"}],
                    ",", 
                   RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}],
                 ";", "\n", "\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{"printtrace", ",", 
                  RowBox[{"Print", "[", 
                   RowBox[{
                   "\"\<EcoAttractor (\>\"", ",", "trait1", ",", "\"\<=\>\"", 
                    ",", "\[FormalX]", ",", "\"\<): \>\"", ",", "result"}], 
                   "]"}]}], "]"}], ";", "\n", "\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"result", "\[Equal]", 
                   RowBox[{"{", "$Failed", "}"}]}], ",", 
                  RowBox[{"Message", "[", 
                   RowBox[{
                    RowBox[{"PlotMIP", "::", "feafail"}], ",", "trait1", ",", 
                    "\[FormalX]"}], "]"}]}], "]"}], ";", "\n", "\t\t", 
                RowBox[{"Return", "[", "result", "]"}], ";"}]}], "\n", "\t", 
              "]"}]}]}], ";", "\n", "\t", 
           RowBox[{"delayinv", "=", "True"}], ";"}], "\n", ",", "\n", "\t", 
          RowBox[{"TemporalRuleListQ", "[", "solin1", "]"}], ",", "\n", "\t", 
          
          RowBox[{
           RowBox[{
            RowBox[{"sol1", "[", "\[FormalX]_", "]"}], "=", 
            RowBox[{"solin1", "/.", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"var_", "\[Rule]", "if_"}], ")"}], "\[Rule]", 
              RowBox[{"(", 
               RowBox[{"var", "\[Rule]", 
                RowBox[{"if", "[", "\[FormalX]", "]"}]}], ")"}]}]}]}], ";"}], 
          "\n", ",", "\n", "\t", "Else", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"PrintCall", "[", 
              RowBox[{
               RowBox[{"Global`sol1", "[", 
                RowBox[{
                 RowBox[{"(", "System`\[FormalX]", ")"}], "_"}], "]"}], "=", 
               RowBox[{"solin1", "/.", 
                RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}]}], "]"}]}], 
            "]"}], ";", "\n", "\t", 
           RowBox[{
            RowBox[{"sol1", "[", "\[FormalX]_", "]"}], "=", 
            RowBox[{"solin1", "/.", 
             RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}]}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: sol1[\[FormalX]]=\>\"", ",", 
               RowBox[{"sol1", "[", "\[FormalX]", "]"}]}], "]"}]}], "]"}]}]}],
          "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"trait1", "=!=", "trait2"}], ",", "\n", "\t", 
          RowBox[{"Which", "[", "\n", "\t\t", 
           RowBox[{
            RowBox[{"solin2", "===", "\"\<FindEcoAttractor\>\""}], ",", "\n", 
            "\t\t", 
            RowBox[{
             RowBox[{"delayinv", "=", "True"}], ";", "\n", "\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"icsin", "\[Equal]", 
                RowBox[{"{", "}"}]}], ",", "\n", "\t\t\t", 
               RowBox[{"(*", " ", 
                RowBox[{
                "figure", " ", "out", " ", "number", " ", "of", " ", 
                 "species", " ", "in", " ", "guilds"}], " ", "*)"}], "\n", 
               "\t\t\t", 
               RowBox[{
                RowBox[{"Set\[ScriptCapitalN]", "[", 
                 RowBox[{"Append", "[", 
                  RowBox[{"fixed", ",", 
                   RowBox[{"trait2", "\[Rule]", "trait2"}]}], "]"}], "]"}], 
                ";", "\n", "\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{"Global`debug", ",", 
                  RowBox[{"Print", "[", 
                   RowBox[{
                   "func", ",", "\"\<: \[ScriptCapitalN]2=\>\"", ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "]"}]}], 
                 "]"}], ";", "\n", "\t\t\t", 
                RowBox[{"ics", "=", "DefaultICs"}], ";", "\n", "\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{"verbose", ",", 
                  RowBox[{"Print", "[", 
                   RowBox[{"func", ",", "\"\<: ics=\>\"", ",", "ics"}], 
                   "]"}]}], "]"}], ";"}], "\n", "\t\t", ",", "\n", "\t\t\t", 
               RowBox[{"ics", "=", "icsin"}]}], "\n", "\t\t", "]"}], ";", 
             "\n", "\t\t", 
             RowBox[{"If", "[", 
              RowBox[{"verbose", ",", "\n", "\t\t\t", 
               RowBox[{"With", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"tr", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"fixed", "/.", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalX]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalX]"}], "}"}]}], 
                    "]"}]}], ",", 
                   RowBox[{"ics", "=", "ics"}], ",", 
                   RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "findecoattractoropts"}]}]}], 
                  "}"}], ",", "\n", "\t\t\t\t", 
                 RowBox[{"PrintCall", "[", 
                  RowBox[{
                   RowBox[{"Global`sol2", "[", 
                    RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}], "]"}], ":=", 
                   RowBox[{
                    RowBox[{"Global`sol2", "[", "System`\[FormalX]", "]"}], 
                    "=", 
                    RowBox[{"FindEcoAttractor", "[", 
                    RowBox[{"tr", ",", 
                    RowBox[{"ICs", "->", "ics"}], ",", "op"}], "]"}]}]}], 
                  "]"}]}], "\n", "\t\t", "]"}]}], "]"}], ";", "\n", "\t\t", 
             RowBox[{
              RowBox[{"sol2", "[", 
               RowBox[{"\[FormalX]_", "?", "NumberQ"}], "]"}], ":=", 
              RowBox[{
               RowBox[{"sol2", "[", "\[FormalX]", "]"}], "=", 
               RowBox[{"Module", "[", 
                RowBox[{
                 RowBox[{"{", "result", "}"}], ",", "\n", "\t\t\t", 
                 RowBox[{
                  RowBox[{"result", "=", 
                   RowBox[{"FindEcoAttractor", "[", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"fixed", "/.", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalX]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalX]"}], "}"}]}], 
                    "]"}], ",", 
                    RowBox[{"ICs", "->", "ics"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "findecoattractoropts"}], "]"}],
                     ",", 
                    RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], 
                    "]"}]}], ";", "\n", "\t\t\t", 
                  RowBox[{"If", "[", 
                   RowBox[{"printtrace", ",", 
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<EcoAttractor (\>\"", ",", "trait2", ",", "\"\<=\>\"",
                     ",", "\[FormalX]", ",", "\"\<): \>\"", ",", "result"}], 
                    "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"result", "\[Equal]", 
                    RowBox[{"{", "$Failed", "}"}]}], ",", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    RowBox[{"PlotMIP", "::", "feafail"}], ",", "trait2", ",", 
                    "\[FormalX]"}], "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                  RowBox[{"Return", "[", "result", "]"}], ";"}]}], "\n", 
                "\t\t", "]"}]}]}], ";"}], "\n", "\t", ",", "\n", "\t\t", 
            RowBox[{"TemporalRuleListQ", "[", "solin2", "]"}], ",", "\n", 
            "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"sol2", "[", "\[FormalX]_", "]"}], "=", 
              RowBox[{"solin2", "/.", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"var_", "\[Rule]", "if_"}], ")"}], "\[Rule]", 
                RowBox[{"(", 
                 RowBox[{"var", "\[Rule]", 
                  RowBox[{"if", "[", "\[FormalX]", "]"}]}], ")"}]}]}]}], 
             ";"}], "\n", "\t", ",", "\n", "\t\t", "Else", ",", "\n", "\t\t", 
            
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{"verbose", ",", 
               RowBox[{"PrintCall", "[", 
                RowBox[{
                 RowBox[{"Global`sol2", "[", 
                  RowBox[{
                   RowBox[{"(", "System`\[FormalX]", ")"}], "_"}], "]"}], "=", 
                 RowBox[{"solin2", "/.", 
                  RowBox[{"trait2", "\[Rule]", "\[FormalX]"}]}]}], "]"}]}], 
              "]"}], ";", "\n", "\t\t", 
             RowBox[{
              RowBox[{"sol2", "[", "\[FormalX]_", "]"}], "=", 
              RowBox[{"solin2", "/.", 
               RowBox[{"trait2", "\[Rule]", "\[FormalX]"}]}]}], ";", "\n", 
             "\t\t", 
             RowBox[{"If", "[", 
              RowBox[{"verbose", ",", 
               RowBox[{"Print", "[", 
                RowBox[{"func", ",", "\"\<: sol2[\[FormalX]]=\>\"", ",", 
                 RowBox[{"sol2", "[", "\[FormalX]", "]"}]}], "]"}]}], 
              "]"}]}]}], "\n", "\t", "]"}], "\n", ",", "\n", "\t", 
          RowBox[{
           RowBox[{
            RowBox[{"sol2", "[", "\[FormalX]_", "]"}], ":=", 
            RowBox[{"sol1", "[", "\[FormalX]", "]"}]}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{
              "func", ",", "\"\<: sol2[\[FormalX]]=sol1[\[FormalX]]\>\""}], 
              "]"}]}], "]"}]}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"define", " ", "inv21"}], " ", "&"}], " ", "inv12"}], " ", 
         "*)"}], "\n", 
        RowBox[{"If", "[", 
         RowBox[{"delayinv", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"tr", "=", 
                  RowBox[{"Append", "[", 
                   RowBox[{"fixed", ",", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}], "]"}]}], 
                 ",", 
                 RowBox[{"so", "=", 
                  RowBox[{
                   RowBox[{"Defer", "[", "Global`sol1", "]"}], "[", 
                   "\[FormalX]", "]"}]}], ",", 
                 RowBox[{"ti", "=", 
                  RowBox[{"Append", "[", 
                   RowBox[{"invfixed", ",", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"tr2", ",", "0"}], "]"}], "\[Rule]", 
                    "\[FormalY]"}]}], "]"}]}], ",", 
                 RowBox[{"op", "=", 
                  RowBox[{"Sequence", "@@", "invopts"}]}], ",", 
                 RowBox[{"trinv", "=", 
                  RowBox[{"Subscript", "[", 
                   RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu2", ",", "tr2"}], "]"}], ",", "0"}], "]"}]}]}],
                 "}"}], ",", "\n", "\t\t\t", 
               RowBox[{"PrintCall", "[", 
                RowBox[{
                 RowBox[{"Global`inv21", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}], ",", 
                   RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}]}], "]"}], ":=", 
                 RowBox[{
                  RowBox[{"Global`inv21", "[", 
                   RowBox[{"System`\[FormalX]", ",", "System`\[FormalY]"}], 
                   "]"}], "=", 
                  RowBox[{"Inv", "[", 
                   RowBox[{"tr", ",", "so", ",", "ti", ",", "op"}], "]"}]}]}],
                 "]"}]}], "\n", "\t", "]"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{
            RowBox[{"inv21", "[", 
             RowBox[{
              RowBox[{"\[FormalX]_", "?", "NumberQ"}], ",", 
              RowBox[{"\[FormalY]_", "?", "NumberQ"}]}], "]"}], ":=", 
            RowBox[{
             RowBox[{"inv21", "[", 
              RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "=", 
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", "result", "}"}], ",", "\n", "\t\t", 
               RowBox[{
                RowBox[{"result", "=", 
                 RowBox[{"Inv", "[", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"{", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], "}"}]}], 
                    "]"}], ",", 
                   RowBox[{"sol1", "[", "\[FormalX]", "]"}], ",", 
                   RowBox[{"Append", "[", 
                    RowBox[{"invfixed", ",", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"tr2", ",", "0"}], "]"}], "\[Rule]", 
                    "\[FormalY]"}]}], "]"}], ",", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}], ",", 
                   RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}],
                 ";", "\n", "\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{"printtrace", ",", 
                  RowBox[{"Print", "[", 
                   RowBox[{
                   "\"\<Inv (\>\"", ",", "trait2", ",", "\"\<=\>\"", ",", 
                    "\[FormalX]", ",", "\"\< \>\"", ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"tr1", ",", "0"}], "]"}], ",", "\"\<=\>\"", ",", 
                    "\[FormalY]", ",", "\"\<): \>\"", ",", "result"}], 
                   "]"}]}], "]"}], ";", "\n", "\t\t", 
                RowBox[{"Return", "[", "result", "]"}]}]}], "\n", "\t", 
              "]"}]}]}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"trait1", "=!=", "trait2"}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", "\n", "\t\t\t", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"tr", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalX]"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"so", "=", 
                    RowBox[{
                    RowBox[{"Defer", "[", "Global`sol2", "]"}], "[", 
                    "\[FormalX]", "]"}]}], ",", 
                    RowBox[{"ti", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"invfixed", ",", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"tr1", ",", "0"}], "]"}], "\[Rule]", 
                    "\[FormalY]"}]}], "]"}]}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "invopts"}]}]}], "}"}], ",", 
                  "\n", "\t\t\t\t", 
                  RowBox[{"PrintCall", "[", 
                   RowBox[{
                    RowBox[{"Global`inv21", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}]}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"Global`inv21", "[", 
                    RowBox[{"System`\[FormalX]", ",", "System`\[FormalY]"}], 
                    "]"}], "=", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "so", ",", "ti", ",", "op"}], 
                    "]"}]}]}], "]"}]}], "\n", "\t\t", "]"}]}], "]"}], ";", 
              "\n", "\t\t", 
              RowBox[{
               RowBox[{"inv12", "[", 
                RowBox[{
                 RowBox[{"\[FormalX]_", "?", "NumberQ"}], ",", 
                 RowBox[{"\[FormalY]_", "?", "NumberQ"}]}], "]"}], ":=", 
               RowBox[{
                RowBox[{"inv12", "[", 
                 RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "=", 
                RowBox[{"Module", "[", 
                 RowBox[{
                  RowBox[{"{", "result", "}"}], ",", "\n", "\t\t\t", 
                  RowBox[{
                   RowBox[{"result", "=", 
                    RowBox[{"Inv", "[", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"{", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalX]"}], "}"}]}], 
                    "]"}], ",", 
                    RowBox[{"sol2", "[", "\[FormalX]", "]"}], ",", 
                    RowBox[{"Append", "[", 
                    RowBox[{"invfixed", ",", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"tr1", ",", "0"}], "]"}], "\[Rule]", 
                    "\[FormalY]"}]}], "]"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}], ",", 
                    RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], 
                    "]"}]}], ";", "\n", "\t\t\t", 
                   RowBox[{"If", "[", 
                    RowBox[{"printtrace", ",", 
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<Inv (\>\"", ",", "trait1", ",", "\"\<=\>\"", ",", 
                    "\[FormalX]", ",", "\"\< \>\"", ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"tr2", ",", "0"}], "]"}], ",", "\"\<=\>\"", ",", 
                    "\[FormalY]", ",", "\"\<): \>\"", ",", "result"}], 
                    "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                   RowBox[{"Return", "[", "result", "]"}]}]}], "\n", "\t\t", 
                 "]"}]}]}], ";"}], "\n", "\t", ",", "\n", "\t\t", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"if", " ", "trait1"}], "=", "trait2"}], ",", " ", 
               RowBox[{
                RowBox[{"then", " ", "re"}], "-", 
                RowBox[{"use", " ", "inv21"}]}]}], " ", "*)"}], "\n", "\t\t", 
             
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", 
                RowBox[{"PrintCall", "[", 
                 RowBox[{
                  RowBox[{"Global`inv12", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], "_"}], ",", 
                    RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], "_"}]}], "]"}], ":=", 
                  RowBox[{"Global`inv21", "[", 
                   RowBox[{"System`\[FormalX]", ",", "System`\[FormalY]"}], 
                   "]"}]}], "]"}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{
               RowBox[{"inv12", "[", 
                RowBox[{"\[FormalX]_", ",", "\[FormalY]_"}], "]"}], ":=", 
               RowBox[{"inv21", "[", 
                RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}]}]}], "\n", 
            "\t", "]"}]}], "\n", ",", "\n", "\t", 
          RowBox[{"(*", " ", 
           RowBox[{"nondelay", " ", "inv"}], " ", "*)"}], "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"tr", "=", 
                  RowBox[{"Append", "[", 
                   RowBox[{"fixed", ",", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}], "]"}]}], 
                 ",", 
                 RowBox[{"so", "=", 
                  RowBox[{
                   RowBox[{"Defer", "[", "Global`sol1", "]"}], "[", 
                   "\[FormalX]", "]"}]}], ",", 
                 RowBox[{"ti", "=", 
                  RowBox[{"Append", "[", 
                   RowBox[{"invfixed", ",", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"tr2", ",", "0"}], "]"}], "\[Rule]", 
                    "\[FormalY]"}]}], "]"}]}], ",", 
                 RowBox[{"op", "=", 
                  RowBox[{"Sequence", "@@", "invopts"}]}]}], "}"}], ",", "\n",
                "\t\t\t", 
               RowBox[{"PrintCall", "[", 
                RowBox[{
                 RowBox[{"Global`inv21", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], "_"}], ",", 
                   RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], "_"}]}], "]"}], 
                 "=", 
                 RowBox[{"Inv", "[", 
                  RowBox[{"tr", ",", "so", ",", "ti", ",", "op"}], "]"}]}], 
                "]"}]}], "\n", "\t", "]"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{
            RowBox[{"inv21", "[", 
             RowBox[{"\[FormalX]_", ",", "\[FormalY]_"}], "]"}], "=", "\n", 
            "\t\t", 
            RowBox[{"Inv", "[", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{"fixed", ",", 
                RowBox[{"{", 
                 RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], "}"}]}], "]"}], 
              ",", 
              RowBox[{"sol1", "[", "\[FormalX]", "]"}], ",", 
              RowBox[{"Append", "[", 
               RowBox[{"invfixed", ",", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"tr2", ",", "0"}], "]"}], "\[Rule]", 
                 "\[FormalY]"}]}], "]"}], ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "invopts"}], "]"}], ",", 
              RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}], ";",
            "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"trait1", "=!=", "trait2"}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", "\n", "\t\t\t", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"tr", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalX]"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"so", "=", 
                    RowBox[{"Global`sol2", "[", "\[FormalX]", "]"}]}], ",", 
                    RowBox[{"ti", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"invfixed", ",", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"tr1", ",", "0"}], "]"}], "\[Rule]", 
                    "\[FormalY]"}]}], "]"}]}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "invopts"}]}]}], "}"}], ",", 
                  "\n", "\t\t\t\t", 
                  RowBox[{"PrintCall", "[", 
                   RowBox[{
                    RowBox[{"Global`inv12", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], "_"}], ",", 
                    RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], "_"}]}], "]"}], 
                    "=", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "so", ",", "ti", ",", "op"}], "]"}]}], 
                   "]"}]}], "\n", "\t\t", "]"}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{
               RowBox[{"inv12", "[", 
                RowBox[{"\[FormalX]_", ",", "\[FormalY]_"}], "]"}], "=", "\n",
                "\t\t\t", 
               RowBox[{"Inv", "[", 
                RowBox[{
                 RowBox[{"Join", "[", 
                  RowBox[{"fixed", ",", 
                   RowBox[{"{", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalX]"}], "}"}]}], 
                  "]"}], ",", 
                 RowBox[{"sol2", "[", "\[FormalX]", "]"}], ",", 
                 RowBox[{"Append", "[", 
                  RowBox[{"invfixed", ",", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"tr1", ",", "0"}], "]"}], "\[Rule]", 
                    "\[FormalY]"}]}], "]"}], ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"Sequence", "@@", "invopts"}], "]"}], ",", 
                 RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}]}],
              "\n", "\t", ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", 
                RowBox[{"PrintCall", "[", 
                 RowBox[{
                  RowBox[{"Global`inv12", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], "_"}], ",", 
                    RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], "_"}]}], "]"}], ":=", 
                  RowBox[{"Global`inv21", "[", 
                   RowBox[{"System`\[FormalX]", ",", "System`\[FormalY]"}], 
                   "]"}]}], "]"}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{
               RowBox[{"inv12", "[", 
                RowBox[{"\[FormalX]_", ",", "\[FormalY]_"}], "]"}], ":=", 
               RowBox[{"inv21", "[", 
                RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], ";", "\n",
               "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{
                 "func", ",", 
                  "\"\<: inv12[\[FormalX],\[FormalY]]=inv21[\[FormalX],\
\[FormalY]]\>\""}], "]"}]}], "]"}]}]}], "\n", "\t", "]"}]}]}], "\n", "]"}], 
        ";", "\n", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"monitor", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"nb", "=", 
            RowBox[{"CreateDialog", "[", 
             RowBox[{
              RowBox[{"Grid", "[", 
               RowBox[{"{", "\n", "\t\t", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"ExpressionCell", "[", "trait1", "]"}], ",", 
                   RowBox[{"TextCell", "[", "\"\<=\>\"", "]"}], ",", 
                   RowBox[{"Dynamic", "[", "x", "]"}]}], "}"}], ",", "\n", 
                 "\t\t", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"ExpressionCell", "[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"trait2", "===", "trait1"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"tr1", ",", 
                    RowBox[{"sp1", "+", "1"}]}], "]"}], ",", "trait2"}], 
                    "]"}], "]"}], ",", 
                   RowBox[{"TextCell", "[", "\"\<=\>\"", "]"}], ",", 
                   RowBox[{"Dynamic", "[", "y", "]"}]}], "}"}]}], "\n", 
                "\t\t", "}"}], "]"}], ",", 
              RowBox[{
              "WindowTitle", "\[Rule]", "\"\<PlotMIP Progress...\>\""}], ",", 
              
              RowBox[{"WindowSize", "\[Rule]", "All"}]}], "]"}]}], ";"}]}], 
         "\n", "]"}], ";", "\n", "\n", "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"plottype", "\[Equal]", "\"\<MIP\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"pip1", "=", 
            RowBox[{"ContourPlot", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}], "=", 
                 RowBox[{"{", 
                  RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "}"}]}], ";", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"inv21", "[", 
                  RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "]"}]}], 
               ")"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[FormalX]", ",", "trait1min", ",", "trait1max"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[FormalY]", ",", "trait2min", ",", "trait2max"}], 
               "}"}], ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", "\n", 
              "\t\t", 
              RowBox[{"Contours", "\[Rule]", 
               RowBox[{"{", "invthreshold", "}"}]}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"ColorFunction", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"#", ">", "invthreshold"}], ",", 
                   RowBox[{"Opacity", "[", "0", "]"}], ",", "noninvstyle"}], 
                  "]"}], "&"}], ")"}]}], ",", 
              RowBox[{"ContourShading", "\[Rule]", "True"}], ",", 
              RowBox[{"ContourStyle", "\[Rule]", "boundarystyle"}], ",", 
              RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]}],
            ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"trait1", "=!=", "trait2"}], ",", "\n", "\t\t", 
             RowBox[{"pip2", "=", 
              RowBox[{"ContourPlot", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}], "=", 
                   RowBox[{"{", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "}"}]}], ";", 
                  RowBox[{"Evaluate", "[", 
                   RowBox[{"inv12", "[", 
                    RowBox[{"\[FormalY]", ",", "\[FormalX]"}], "]"}], "]"}]}],
                  ")"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\[FormalX]", ",", "trait1min", ",", "trait1max"}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\[FormalY]", ",", "trait2min", ",", "trait2max"}], 
                 "}"}], ",", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", "\n", 
                "\t\t\t", 
                RowBox[{"Contours", "\[Rule]", 
                 RowBox[{"{", "invthreshold", "}"}]}], ",", 
                RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
                RowBox[{"ColorFunction", "\[Rule]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"#", ">", "invthreshold"}], ",", 
                    RowBox[{"Opacity", "[", "0", "]"}], ",", "noninvstyle"}], 
                    "]"}], "&"}], ")"}]}], ",", 
                RowBox[{"ContourShading", "\[Rule]", "True"}], ",", 
                RowBox[{"ContourStyle", "\[Rule]", "boundarystyle"}], ",", 
                RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], 
               "]"}]}], ",", "\n", "\t\t", 
             RowBox[{"pip2", "=", 
              RowBox[{"pip1", "//", "AxisFlip"}]}]}], "\n", "\t", "]"}], ";", 
           "\n", "\t", 
           RowBox[{"res", "=", 
            RowBox[{"Show", "[", 
             RowBox[{
              RowBox[{"Graphics", "[", 
               RowBox[{"{", 
                RowBox[{"invstyle", ",", 
                 RowBox[{"Rectangle", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"trait1min", ",", "trait2min"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"trait1max", ",", "trait2max"}], "}"}]}], "]"}]}],
                 "}"}], "]"}], ",", "pip2", ",", "pip1", ",", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"FrameLabel", "\[Rule]", "framelabel"}], ",", "\n", 
              "\t\t", 
              RowBox[{"Method", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"\"\<TransparentPolygonMesh\>\"", "\[Rule]", "True"}],
                 "}"}]}], ",", 
              RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}]}], ",", "\n",
           "\t", 
          RowBox[{"plottype", "\[Equal]", "\"\<RegionMIP\>\""}], ",", "\n", 
          "\t", 
          RowBox[{"res", "=", 
           RowBox[{"RegionPlot", "[", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"inv12", "[", 
                  RowBox[{"\[FormalY]", ",", "\[FormalX]"}], "]"}], ">", 
                 "invthreshold"}], "&&", 
                RowBox[{
                 RowBox[{"inv21", "[", 
                  RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], ">", 
                 "invthreshold"}]}], ")"}], "]"}], ",", "\n", "\t\t", 
             RowBox[{"{", 
              RowBox[{"\[FormalX]", ",", "trait1min", ",", "trait1max"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[FormalY]", ",", "trait2min", ",", "trait2max"}], 
              "}"}], ",", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", "\n", 
             "\t\t", 
             RowBox[{"PlotStyle", "\[Rule]", "invstyle"}], ",", 
             RowBox[{"BoundaryStyle", "\[Rule]", "boundarystyle"}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", "framelabel"}]}], "]"}]}], ",", 
          "\n", "\t", 
          RowBox[{"plottype", "\[Equal]", "\"\<Outcome\>\""}], ",", "\n", 
          "\t", 
          RowBox[{
           RowBox[{"pip1", "=", 
            RowBox[{"ContourPlot", "[", 
             RowBox[{
              RowBox[{"Evaluate", "[", 
               RowBox[{"inv21", "[", 
                RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "]"}], ",", 
              
              RowBox[{"{", 
               RowBox[{"\[FormalX]", ",", "trait1min", ",", "trait1max"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[FormalY]", ",", "trait2min", ",", "trait2max"}], 
               "}"}], ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", "\n", 
              "\t\t", 
              RowBox[{"Contours", "\[Rule]", 
               RowBox[{"{", "invthreshold", "}"}]}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"ColorFunction", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Opacity", "[", 
                    RowBox[{"0.5", "#"}], "]"}], ",", 
                   RowBox[{
                   "spcolors", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "}"}], "&"}], ")"}]}], ",", 
              RowBox[{"ContourShading", "\[Rule]", "True"}], ",", 
              RowBox[{"ContourStyle", "\[Rule]", "boundarystyle"}], ",", 
              RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]}],
            ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"trait1", "=!=", "trait2"}], ",", "\n", "\t\t", 
             RowBox[{"pip2", "=", 
              RowBox[{"ContourPlot", "[", 
               RowBox[{
                RowBox[{"Evaluate", "[", 
                 RowBox[{"inv12", "[", 
                  RowBox[{"\[FormalY]", ",", "\[FormalX]"}], "]"}], "]"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"\[FormalX]", ",", "trait1min", ",", "trait1max"}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\[FormalY]", ",", "trait2min", ",", "trait2max"}], 
                 "}"}], ",", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", "\n", 
                "\t\t\t", 
                RowBox[{"Contours", "\[Rule]", 
                 RowBox[{"{", "invthreshold", "}"}]}], ",", 
                RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
                RowBox[{"ColorFunction", "\[Rule]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Opacity", "[", 
                    RowBox[{"0.5", "#"}], "]"}], ",", 
                    RowBox[{
                    "spcolors", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "}"}], "&"}], ")"}]}], ",", 
                RowBox[{"ContourShading", "\[Rule]", "True"}], ",", 
                RowBox[{"ContourStyle", "\[Rule]", "boundarystyle"}], ",", 
                RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], 
               "]"}]}], ",", "\n", "\t\t", 
             RowBox[{"pip2", "=", 
              RowBox[{
               RowBox[{"pip1", "/.", 
                RowBox[{
                 RowBox[{
                 "spcolors", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], "\[Rule]", 
                 RowBox[{
                 "spcolors", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}]}], "//", "AxisFlip"}]}]}], "\n",
             "\t", "]"}], ";", "\n", "\t", 
           RowBox[{"res", "=", 
            RowBox[{"Show", "[", 
             RowBox[{
              RowBox[{"Graphics", "[", 
               RowBox[{"{", 
                RowBox[{"noninvstyle", ",", 
                 RowBox[{"Rectangle", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"trait1min", ",", "trait2min"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"trait1max", ",", "trait2max"}], "}"}]}], "]"}]}],
                 "}"}], "]"}], ",", "pip2", ",", "pip1", ",", "\n", "\t\t", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"FrameLabel", "\[Rule]", "framelabel"}], ",", 
              RowBox[{"Method", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"\"\<TransparentPolygonMesh\>\"", "\[Rule]", "True"}],
                 "}"}]}], ",", 
              RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}]}], ",", "\n",
           "\t", 
          RowBox[{"plottype", "\[Equal]", "\"\<RegionOutcome\>\""}], ",", 
          "\n", "\t", 
          RowBox[{"res", "=", 
           RowBox[{"RegionPlot", "[", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"inv21", "[", 
                  RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], ">", 
                 "invthreshold"}], ",", 
                RowBox[{
                 RowBox[{"inv12", "[", 
                  RowBox[{"\[FormalY]", ",", "\[FormalX]"}], "]"}], ">", 
                 "invthreshold"}]}], "}"}], "]"}], "\n", "\t\t", ",", 
             RowBox[{"{", 
              RowBox[{"\[FormalX]", ",", "trait1min", ",", "trait1max"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[FormalY]", ",", "trait2min", ",", "trait2max"}], 
              "}"}], ",", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
             RowBox[{"BoundaryStyle", "\[Rule]", "boundarystyle"}], ",", "\n",
              "\t\t", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Directive", "[", 
                 RowBox[{
                  RowBox[{
                  "spcolors", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{"Opacity", "[", "0.4", "]"}]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                 RowBox[{
                  RowBox[{
                  "spcolors", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{"Opacity", "[", "0.4", "]"}]}], "]"}]}], "}"}]}], 
             ",", 
             RowBox[{"FrameLabel", "\[Rule]", "framelabel"}]}], "]"}]}], ",", 
          "\n", "\t", "Else", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"PlotMIP", "::", "badmtd"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "\n", "]"}], ";", 
        "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"monitor", ",", 
          RowBox[{"NotebookClose", "[", "nb", "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"Return", "[", "res", "]"}], ";"}]}], "\n", "\n", "]"}]}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.6885716933866453`*^9, 3.6885716954900103`*^9}, {
   3.688571768255013*^9, 3.688571768702099*^9}, {3.688571807478524*^9, 
   3.688571807527567*^9}, {3.689108864929371*^9, 3.6891088877553473`*^9}, {
   3.689109067165793*^9, 3.689109103846394*^9}, {3.689109225780719*^9, 
   3.6891092365762777`*^9}, {3.689109372777227*^9, 3.689109388280973*^9}, {
   3.6891098969356823`*^9, 3.689109904711069*^9}, {3.689110423535283*^9, 
   3.689110426688055*^9}, {3.689112728050819*^9, 3.689112820029348*^9}, {
   3.689115760819442*^9, 3.689115771852661*^9}, {3.68916407028465*^9, 
   3.6891640706684427`*^9}, {3.689174796096485*^9, 3.689174813285087*^9}, {
   3.6892505853280363`*^9, 3.689250596835215*^9}, {3.689250739454751*^9, 
   3.689250740415022*^9}, {3.6892510750231752`*^9, 3.6892510791011744`*^9}, {
   3.689251146280136*^9, 3.689251146617065*^9}, {3.689251187890675*^9, 
   3.689251189835361*^9}, {3.6892512796005917`*^9, 3.689251297036913*^9}, {
   3.689251557793955*^9, 3.689251595678959*^9}, {3.689254115830702*^9, 
   3.6892541304010677`*^9}, {3.6892543790821123`*^9, 3.689254395460404*^9}, {
   3.68925461279352*^9, 3.689254632571815*^9}, {3.6892548649600163`*^9, 
   3.68925486848878*^9}, 3.689255365170856*^9, {3.68925684173005*^9, 
   3.689256848305175*^9}, {3.6892596680652237`*^9, 3.689259669840993*^9}, {
   3.6892605876329107`*^9, 3.68926064190302*^9}, {3.689262351006629*^9, 
   3.6892623708529177`*^9}, {3.689262589730199*^9, 3.689262600070997*^9}, {
   3.68926282306246*^9, 3.689262863160821*^9}, {3.689262933109714*^9, 
   3.689262937460256*^9}, {3.689262968793339*^9, 3.6892629708609324`*^9}, {
   3.689263081059904*^9, 3.689263093487967*^9}, {3.689263231287607*^9, 
   3.689263239474536*^9}, {3.689263340002339*^9, 3.6892634925019712`*^9}, {
   3.689263567661331*^9, 3.6892636613351517`*^9}, {3.68926392367505*^9, 
   3.689263998296895*^9}, {3.689264082698454*^9, 3.689264101295733*^9}, {
   3.689264427879745*^9, 3.689264432478908*^9}, {3.689287584809477*^9, 
   3.689287598597302*^9}, {3.689289104256342*^9, 3.6892891466024933`*^9}, {
   3.689289279381825*^9, 3.689289284603778*^9}, {3.689289433604415*^9, 
   3.689289435905313*^9}, {3.6961621422447767`*^9, 3.696162142341611*^9}, {
   3.709336794995493*^9, 3.70933680008714*^9}, 3.7101059874771557`*^9, {
   3.7102563429606857`*^9, 3.710256356177361*^9}, 3.710256704275938*^9, {
   3.714059650310484*^9, 3.714059650324486*^9}, 3.722029512360681*^9, {
   3.7220341446661463`*^9, 3.722034147057419*^9}, {3.72208769094881*^9, 
   3.722087702104775*^9}, 3.725227953291498*^9, {3.725228049429574*^9, 
   3.725228050213643*^9}, {3.725228103282597*^9, 3.725228106403531*^9}, {
   3.725228285139535*^9, 3.7252282934837313`*^9}, {3.725228431597127*^9, 
   3.725228488140826*^9}, {3.725228537137508*^9, 3.725228648790201*^9}, {
   3.725228705239497*^9, 3.725228706184533*^9}, {3.725228752618957*^9, 
   3.725228756132215*^9}, {3.725228806249711*^9, 3.725228813207526*^9}, {
   3.72522884384645*^9, 3.7252288468122377`*^9}, {3.7252337164484987`*^9, 
   3.7252337221229677`*^9}, {3.726073703298306*^9, 3.7260737036099977`*^9}, {
   3.726263569093769*^9, 3.726263586867049*^9}, {3.726264163074222*^9, 
   3.7262641754998007`*^9}, {3.726264221061233*^9, 3.726264242669428*^9}, {
   3.726264291883553*^9, 3.726264373374934*^9}, {3.726264464947434*^9, 
   3.726264465538978*^9}, {3.7262645303737173`*^9, 3.72626456342595*^9}, 
   3.726264932181726*^9, 3.726264967863353*^9, {3.72626506182509*^9, 
   3.726265160544785*^9}, {3.726265200592173*^9, 3.72626520899517*^9}, {
   3.726265606711813*^9, 3.726265705260478*^9}, {3.726265762865673*^9, 
   3.7262658078065968`*^9}, {3.726265898644508*^9, 3.726265963313781*^9}, {
   3.726266000660214*^9, 3.726266013954027*^9}, {3.7262665269457417`*^9, 
   3.726266553723341*^9}, {3.726266601269389*^9, 3.7262666323167257`*^9}, 
   3.726767630180628*^9, {3.7267876805255404`*^9, 3.726787698809222*^9}, {
   3.726789151591621*^9, 3.726789156041108*^9}, {3.72678933179195*^9, 
   3.726789398971669*^9}, {3.726789491501684*^9, 3.726789578993129*^9}, {
   3.726789643983367*^9, 3.726789708190847*^9}, {3.726789765804487*^9, 
   3.726789777048833*^9}, {3.7267898603509283`*^9, 3.726789879894936*^9}, {
   3.726790845184514*^9, 3.7267908754720078`*^9}, {3.726790959292288*^9, 
   3.726790974289729*^9}, {3.726791343286654*^9, 3.7267913466046867`*^9}, {
   3.7267913871586533`*^9, 3.726791388024585*^9}, {3.7267914584349537`*^9, 
   3.7267915260061502`*^9}, {3.726792283902265*^9, 3.7267923558946047`*^9}, {
   3.72679519285644*^9, 3.7267952249249887`*^9}, {3.72682956302497*^9, 
   3.726829566733267*^9}, {3.726829968278304*^9, 3.726830009950225*^9}, {
   3.7268301038159323`*^9, 3.72683021406756*^9}, {3.72683111824752*^9, 
   3.726831122071056*^9}, {3.72683116900119*^9, 3.726831193000544*^9}, {
   3.7268359732236633`*^9, 3.726835979423461*^9}, {3.7268360095589657`*^9, 
   3.726836018126993*^9}, {3.726836497044421*^9, 3.726836562050408*^9}, {
   3.72683671822119*^9, 3.726836728897956*^9}, {3.726836949168681*^9, 
   3.7268369562227697`*^9}, {3.726836987223177*^9, 3.7268370686889267`*^9}, {
   3.726837892529642*^9, 3.7268379324567623`*^9}, {3.726838532439761*^9, 
   3.7268385555272913`*^9}, {3.726842987713771*^9, 3.7268430306547003`*^9}, {
   3.72684306096555*^9, 3.726843153975993*^9}, {3.726843217301482*^9, 
   3.726843239755755*^9}, {3.7268434148426533`*^9, 3.726843416350954*^9}, {
   3.726843447197056*^9, 3.726843462982477*^9}, {3.7268464814508457`*^9, 
   3.7268465515412483`*^9}, {3.72684659323842*^9, 3.726846596924529*^9}, {
   3.726846646148954*^9, 3.726846711114327*^9}, {3.726846754070498*^9, 
   3.726846766602809*^9}, {3.7268468299569273`*^9, 3.726846834161998*^9}, {
   3.726846911870566*^9, 3.726846913993132*^9}, {3.726847004546015*^9, 
   3.726847051046322*^9}, {3.726847083250733*^9, 3.726847112142735*^9}, {
   3.726847144737445*^9, 3.726847177101454*^9}, {3.7268473127555437`*^9, 
   3.7268473893203993`*^9}, {3.726847461478011*^9, 3.726847502516295*^9}, {
   3.726847571699216*^9, 3.7268475882250147`*^9}, 3.726847736661543*^9, {
   3.726849996981926*^9, 3.726850003605608*^9}, {3.726850094362369*^9, 
   3.726850130932761*^9}, 3.7268501613967047`*^9, {3.726850708427758*^9, 
   3.7268507372226887`*^9}, {3.726850805131547*^9, 3.726850809266405*^9}, {
   3.7279142262910633`*^9, 3.727914271311763*^9}, {3.72791438842607*^9, 
   3.7279144178855553`*^9}, {3.7279144526772623`*^9, 
   3.7279144765727463`*^9}, {3.727914521220087*^9, 3.72791452906993*^9}, {
   3.7279145704662*^9, 3.727914610753677*^9}, {3.727915018995318*^9, 
   3.7279150281911793`*^9}, {3.727915094284186*^9, 3.727915148190103*^9}, {
   3.727915820012789*^9, 3.727915821906177*^9}, {3.727960719337553*^9, 
   3.727960721962851*^9}, {3.727960754386673*^9, 3.7279607579590063`*^9}, {
   3.72796131820545*^9, 3.7279613373434153`*^9}, {3.727962049620715*^9, 
   3.7279620664617577`*^9}, {3.727962162427454*^9, 3.727962249684669*^9}, {
   3.727962519973853*^9, 3.727962526733266*^9}, {3.727962565613056*^9, 
   3.7279626497108803`*^9}, {3.727962723271372*^9, 3.727962730026843*^9}, {
   3.727962767134984*^9, 3.727962802949327*^9}, {3.727962837047858*^9, 
   3.727962852226585*^9}, {3.7279644671268044`*^9, 3.727964467666615*^9}, 
   3.7280042908357067`*^9, {3.728349077230582*^9, 3.728349088990423*^9}, {
   3.728349513031911*^9, 3.7283495411790113`*^9}, {3.728349614050013*^9, 
   3.7283496301908283`*^9}, {3.7283497564156322`*^9, 3.728349829685257*^9}, 
   3.728349891759902*^9, {3.728350100865735*^9, 3.728350103936035*^9}, 
   3.728350141052981*^9, 3.728398528467161*^9, {3.728400652795231*^9, 
   3.728400671885642*^9}, {3.728401635908023*^9, 3.728401650475312*^9}, {
   3.728401768481154*^9, 3.7284017708095903`*^9}, {3.728402497898736*^9, 
   3.728402505320373*^9}, {3.7284026235401278`*^9, 3.728402640756446*^9}, {
   3.7284031566569977`*^9, 3.7284031579672403`*^9}, {3.72840614012245*^9, 
   3.728406149783086*^9}, 3.728406218837463*^9, {3.728587969600932*^9, 
   3.728587997276472*^9}, {3.728588124100189*^9, 3.728588126135283*^9}, {
   3.728588181694511*^9, 3.728588255002432*^9}, {3.728588324771118*^9, 
   3.7285883273044357`*^9}, 3.728608813120144*^9, {3.729211210858699*^9, 
   3.729211212103812*^9}, {3.7292112801017437`*^9, 3.729211658104629*^9}, {
   3.729211771798024*^9, 3.729212011303164*^9}, {3.729212213040717*^9, 
   3.729212252717127*^9}, 3.729212336903223*^9, {3.7292124004540462`*^9, 
   3.729212411377716*^9}, {3.7292125975986977`*^9, 3.729212605187191*^9}, {
   3.7292126914073133`*^9, 3.72921271550357*^9}, {3.729212758088787*^9, 
   3.7292128387299213`*^9}, {3.729213229954556*^9, 3.729213233537624*^9}, {
   3.7292489476140833`*^9, 3.7292489772112722`*^9}, {3.7292490626888037`*^9, 
   3.729249071094327*^9}, {3.7292493895079803`*^9, 3.729249391131308*^9}, {
   3.729249424676077*^9, 3.729249441546273*^9}, {3.729250132495097*^9, 
   3.729250135277924*^9}, {3.729250216725103*^9, 3.729250219858034*^9}, {
   3.729250453299774*^9, 3.729250460426621*^9}, {3.729250491843782*^9, 
   3.729250507143826*^9}, {3.729251754722826*^9, 3.7292517556190367`*^9}, {
   3.729251821822692*^9, 3.729251854404668*^9}, {3.729251932729233*^9, 
   3.729251935979175*^9}, {3.729252009088285*^9, 3.729252024125621*^9}, {
   3.729252620334993*^9, 3.72925269427159*^9}, {3.729253133231224*^9, 
   3.729253135780006*^9}, {3.742816739608892*^9, 3.742816749379932*^9}, {
   3.7428168543770533`*^9, 3.7428168596393747`*^9}, {3.7428169213153152`*^9, 
   3.742816937705185*^9}, {3.742817233213128*^9, 3.74281726663688*^9}, {
   3.742817564135263*^9, 3.742817568318783*^9}, {3.755373510714422*^9, 
   3.755373512420537*^9}, 3.755395296233417*^9, 3.7553953368979597`*^9, {
   3.755395668623205*^9, 3.755395680217599*^9}, {3.7553957392914867`*^9, 
   3.755395746862495*^9}, {3.755395920750106*^9, 3.755395942176198*^9}, {
   3.755431303911272*^9, 3.755431334481452*^9}, {3.755431388228909*^9, 
   3.755431448507453*^9}, {3.755440585803598*^9, 3.7554406048397827`*^9}, {
   3.7554408133701973`*^9, 3.755440817129981*^9}, {3.755440881915003*^9, 
   3.755440883008457*^9}, {3.755440927612524*^9, 3.7554409504369993`*^9}, {
   3.755441013137809*^9, 3.7554410237735662`*^9}, {3.755442005619063*^9, 
   3.755442012045806*^9}, {3.755442200969708*^9, 3.755442244695324*^9}, {
   3.755442611650363*^9, 3.755442731251186*^9}, {3.755442943355843*^9, 
   3.7554429849716682`*^9}, {3.755443184409596*^9, 3.755443190920092*^9}, {
   3.755443242858095*^9, 3.755443253688854*^9}, {3.755443309940422*^9, 
   3.755443316082019*^9}, {3.755443453842243*^9, 3.755443453996133*^9}, {
   3.7605514651851797`*^9, 3.760551465316766*^9}, {3.76103827908702*^9, 
   3.761038332530114*^9}, {3.761038424851317*^9, 3.761038507616164*^9}, {
   3.761038568392028*^9, 3.76103856853544*^9}, {3.761038619168804*^9, 
   3.761038702183551*^9}, {3.7610387667020597`*^9, 3.7610387824803467`*^9}, {
   3.761038910233761*^9, 3.7610389344067097`*^9}, {3.761039003708254*^9, 
   3.761039045196609*^9}, {3.762421596464191*^9, 3.7624215971648903`*^9}, {
   3.769183312199148*^9, 3.769183312211172*^9}, 3.769760705874435*^9, 
   3.770438265210313*^9, {3.770721447415216*^9, 3.770721448589295*^9}, {
   3.774597372717211*^9, 3.77459743101206*^9}, {3.774597629592362*^9, 
   3.774597670684455*^9}, 3.77459771396848*^9, {3.774632693745784*^9, 
   3.774632694243444*^9}, {3.774632724260519*^9, 3.774632752922708*^9}, {
   3.774632793370878*^9, 3.7746328539863653`*^9}, {3.774632910710767*^9, 
   3.774632911402733*^9}, {3.7746334176327343`*^9, 3.7746334207789373`*^9}, {
   3.774633452994192*^9, 3.774633464491267*^9}, {3.7746335407650137`*^9, 
   3.774633542744689*^9}, {3.774633912880678*^9, 3.774633915950577*^9}, {
   3.774693568888256*^9, 3.7746935739332314`*^9}, {3.77469361775231*^9, 
   3.774693622293419*^9}, {3.774693677361144*^9, 3.774693695814136*^9}, {
   3.774693810162909*^9, 3.774693812518852*^9}, {3.7746939065256567`*^9, 
   3.774693917649974*^9}, 3.7746940207419233`*^9, 3.794137241077723*^9, {
   3.807301412818218*^9, 3.807301446691523*^9}, {3.807301903650414*^9, 
   3.807301959250412*^9}, {3.807310168943272*^9, 3.8073101694628963`*^9}, {
   3.844377411795168*^9, 
   3.844377428979281*^9}},ExpressionUUID->"944f7f45-6069-4043-905a-\
70c9b2e672dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",
 CellChangeTimes->{{3.7702685016561117`*^9, 
  3.7702685027276573`*^9}},ExpressionUUID->"c5549937-2756-4dd0-b1e4-\
66fb638622c5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"only", " ", "one", " ", "sol", " ", "given"}], " ", "*)"}], "\n", 
  
  RowBox[{
   RowBox[{
    RowBox[{"PlotMIP", "[", 
     RowBox[{
      RowBox[{"solin1", ":", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"_", "?", "RuleListQ"}], "|", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "\[Equal]", "\"\<FindEcoAttractor\>\""}], "&"}], 
           ")"}]}]}], ")"}], ":", "\"\<FindEcoAttractor\>\""}], ",", 
      RowBox[{"{", 
       RowBox[{"trait1_", ",", 
        RowBox[{"trait1min_", "?", "NumericQ"}], ",", 
        RowBox[{"trait1max_", "?", "NumericQ"}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"{", 
       RowBox[{"trait2_", ",", 
        RowBox[{"trait2min_", "?", "NumericQ"}], ",", 
        RowBox[{"trait2max_", "?", "NumericQ"}]}], "}"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
    RowBox[{"(", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "1", "]"}], ";"}], "*)"}], 
     RowBox[{"PlotMIP", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"solin1", ",", "solin1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"trait2", ",", "trait2min", ",", "trait2max"}], "}"}], ",", 
       "opts"}], "]"}], ")"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.7283488373608847`*^9, 3.728348856914741*^9}, {
   3.728349310813478*^9, 3.7283493191342287`*^9}, 3.728349640529908*^9, {
   3.7283498398315563`*^9, 3.7283498412749033`*^9}, 3.728401198530712*^9, {
   3.728402463933565*^9, 3.728402484737157*^9}, {3.728402547862425*^9, 
   3.7284025493296947`*^9}, {3.728402609434095*^9, 3.728402612590424*^9}, 
   3.728403174806364*^9, {3.770268879620096*^9, 
   3.77026892530055*^9}},ExpressionUUID->"561fb7d9-6288-40f3-a6fe-\
19560c0e749c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"only", " ", "one", " ", "sol", " ", "given"}], " ", "*)"}], "\n", 
  
  RowBox[{
   RowBox[{
    RowBox[{"PlotMIP", "[", 
     RowBox[{
      RowBox[{"solin1", ":", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"_", "?", "RuleListQ"}], "|", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "\[Equal]", "\"\<FindEcoAttractor\>\""}], "&"}], 
           ")"}]}]}], ")"}], ":", "\"\<FindEcoAttractor\>\""}], ",", 
      RowBox[{"{", 
       RowBox[{"trait1_", ",", 
        RowBox[{"trait1min_", "?", "NumericQ"}], ",", 
        RowBox[{"trait1max_", "?", "NumericQ"}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
    RowBox[{"(", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "2", "]"}], ";"}], "*)"}], 
     RowBox[{"PlotMIP", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"solin1", ",", "solin1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
       "opts"}], "]"}], ")"}]}], ";"}]}]], "Code",
 CellChangeTimes->{
  3.696162142361945*^9, {3.728349322831129*^9, 3.728349327758924*^9}, {
   3.7283496430158863`*^9, 3.7283496453584747`*^9}, {3.7283498489313717`*^9, 
   3.7283498501271133`*^9}, 3.7284012028335857`*^9, {3.728402451616891*^9, 
   3.728402477905108*^9}, {3.728402604878128*^9, 3.7284026067699413`*^9}, 
   3.728403177982925*^9, {3.770268894797097*^9, 3.7702688953036757`*^9}, {
   3.770268930870619*^9, 
   3.770268931227728*^9}},ExpressionUUID->"fc7f87c6-f516-46eb-af46-\
d97129fee0d6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"no", " ", "sol", " ", "given"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"PlotMIP", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"trait1_", ",", 
        RowBox[{"trait1min_", "?", "NumericQ"}], ",", 
        RowBox[{"trait1max_", "?", "NumericQ"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"trait2_", ",", 
        RowBox[{"trait2min_", "?", "NumericQ"}], ",", 
        RowBox[{"trait2max_", "?", "NumericQ"}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
    RowBox[{"(", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "3", "]"}], ";"}], "*)"}], 
     RowBox[{"PlotMIP", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<FindEcoAttractor\>\"", ",", "\"\<FindEcoAttractor\>\""}],
         "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"trait2", ",", "trait2min", ",", "trait2max"}], "}"}], ",", 
       "opts"}], "]"}], ")"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.696162142348516*^9, 3.696162142355567*^9}, {
   3.728349331359377*^9, 3.72834934210454*^9}, 3.728403181368765*^9, {
   3.770268900734272*^9, 
   3.770268936768971*^9}},ExpressionUUID->"69629539-a568-4899-9ca1-\
d53425897e6e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.769494489508699*^9, 
  3.7694944902947073`*^9}},ExpressionUUID->"61a1b39c-c11e-400d-a098-\
c152e2fbc447"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PlotMIP", "]"}], "=", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"PlotType", "\[Rule]", "\"\<MIP\>\""}], ",", 
     RowBox[{"DelayInv", "\[Rule]", "False"}], ",", 
     RowBox[{"FindEcoAttractorOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"InvOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"InvThreshold", "\[Rule]", "0"}], ",", "\n", "\t", 
     RowBox[{"ICs", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"ZeroDiagonal", "\[Rule]", "False"}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", "\t", 
     RowBox[{"BoundaryStyle", "\[Rule]", "Black"}], ",", 
     RowBox[{"SpeciesColors", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
     RowBox[{"InvStyle", "\[Rule]", "Gray"}], ",", 
     RowBox[{"NonInvStyle", "\[Rule]", "White"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", "Automatic"}], ",", "\n", "\t", 
     RowBox[{"PlotOpts", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"MaxRecursion", "\[Rule]", "3"}], "}"}]}], ",", "\n", "\t", 
     RowBox[{"Monitor", "\[Rule]", "False"}], ",", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "\n", "}"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.688571695507079*^9, 3.688571695638255*^9}, 
   3.696162142371252*^9, {3.726789786538767*^9, 3.726789835979041*^9}, {
   3.7267910186945343`*^9, 3.726791034887575*^9}, {3.7267913992620792`*^9, 
   3.726791417319311*^9}, {3.726829435141608*^9, 3.7268294361262007`*^9}, {
   3.726829536793363*^9, 3.7268295519680033`*^9}, {3.726830224667082*^9, 
   3.72683027004139*^9}, {3.7268311018538094`*^9, 3.726831110545719*^9}, 
   3.7268311540766153`*^9, 3.726835906187023*^9, {3.72683602540897*^9, 
   3.726836029361315*^9}, {3.726843157848378*^9, 3.726843188538096*^9}, {
   3.726859850318842*^9, 3.726859854396954*^9}, {3.727915051203515*^9, 
   3.727915080583168*^9}, 3.727916087184874*^9, {3.727916327613612*^9, 
   3.727916328747652*^9}, {3.727918558973761*^9, 3.7279185635756607`*^9}, {
   3.7279622961462107`*^9, 3.727962300337476*^9}, {3.7292112433596497`*^9, 
   3.729211244486216*^9}, {3.729249447583323*^9, 3.729249452749723*^9}, 
   3.7624216043563557`*^9},ExpressionUUID->"a0f7ddf0-fbb2-4b75-9ebc-\
5d9df74e9803"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Messages", "Subsubsection",
 CellChangeTimes->{{3.7695011217950068`*^9, 
  3.769501122804427*^9}},ExpressionUUID->"82275bc7-918b-42ea-8661-\
95d4063a8ce3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotMIP", "::", "feafail"}], "=", "\n", 
    "\"\<FindEcoAttractor failed at `1`=`2`.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotMIP", "::", "badmtd"}], "=", "\n", 
   "\"\<The PlotType option should be a built-in method name (\\\"MIP\\\", \\\
\"RegionMIP\\\", \\\"Outcome\\\", or \\\"RegionOutcome\\\").\>\""}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.7695011242130404`*^9, 
  3.7695011256504602`*^9}},ExpressionUUID->"90e0e4c2-8d24-4564-9cb8-\
928d201bf6da"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evolutionary Functions", "Section",
 CellChangeTimes->{{3.769482561022118*^9, 
  3.769482565015354*^9}},ExpressionUUID->"e22283a5-5703-4d29-8618-\
19adb764ca3e"],

Cell[CellGroupData[{

Cell["EvoEqns", "Subsection",
 CellChangeTimes->{{3.73152621938536*^9, 3.731526222312989*^9}, {
   3.758817447780697*^9, 3.7588174534670773`*^9}, 
   3.758968398825428*^9},ExpressionUUID->"91164660-6832-410b-9a6e-\
7dc73876d9ef"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"4cda8453-61a1-49bf-96ff-\
a710ad84469a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EvoEqns", "::", "usage"}], "=", "\n", 
   "\"\<EvoEqns[\!\(\*StyleBox[\"sol\", \"TI\"]\), \!\(\*StyleBox[\"varcovars\
\", \"TI\"]\)] sets up trait equations with ecological solution \
\!\(\*StyleBox[\"sol\", \"TI\"]\) and trait variances/covariances in \
\!\(\*StyleBox[\"varcovars\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769490036512092*^9, 3.7694900414701843`*^9}, {
  3.7704870801149817`*^9, 
  3.770487101407765*^9}},ExpressionUUID->"fc180173-0fa6-43f6-a5b2-\
13ac84c4e4b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"9af869f2-6f50-46bb-b7af-\
960a772c58ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EvoEqns", "[", 
    RowBox[{
     RowBox[{"solin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Gs", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "GsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", " ", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<EvoEqns\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "fixed", ",", "logged", ",", "delaydinv", ",", 
       "dinvopts", ",", "evoeqn", ",", "traitshiftrate", ",", "nsps", ",", 
       "ics", ",", "time", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "fixedvars", 
       ",", "fixedattributes", ",", "fixedvariables", ",", "nonfixedtraits", 
       ",", "\n", "g", ",", "dtrait", ",", "pre", ",", "wt", ",", "sol", ",", 
       "eqns"}], "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEqns", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEqns", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"fixed", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Fixed", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEqns", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<fixed=\>\"", ",", "fixed"}], "]"}], ";"}], "*)"}], 
        "\n", 
        RowBox[{"fixedvars", "=", 
         RowBox[{"fixed", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: fixedvars=\>\"", ",", "fixedvars"}], 
           "]"}]}], "]"}], ";", "\n", 
        RowBox[{"fixedattributes", "=", 
         RowBox[{"ExtractAttributes", "[", "fixed", "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<fixedattributes=\>\"", ",", "fixedattributes"}], 
           "]"}], ";"}], "*)"}], "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{
           "func", ",", "\"\<: fixedattributes=\>\"", ",", 
            "fixedattributes"}], "]"}]}], "]"}], ";", "\n", 
        RowBox[{"fixedvariables", "=", 
         RowBox[{"ExtractVariables", "[", "fixed", "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{
           "func", ",", "\"\<: fixedvariables=\>\"", ",", "fixedvariables"}], 
           "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"logged", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Logged", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEqns", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"delaydinv", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"DelayDInv", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEqns", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"dinvopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"DInvOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEqns", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelperiod", "=!=", "0"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"dinvopts", ",", 
            RowBox[{"InvOpts", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Method", "\[Rule]", "\"\<Instantaneous\>\""}], 
              "}"}]}]}], "]"}]}], "]"}], ";", "\n", 
        RowBox[{"evoeqn", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"EvoEquation", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEqns", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"traitshiftrate", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"TraitShiftRate", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEqns", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"nsps", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"\[ScriptCapitalN]s", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEqns", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"time", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Time", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEqns", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"sol", "=", 
         RowBox[{"FixVariables", "[", "solin", "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<sol=\>\"", ",", "sol"}], "]"}], ";"}], "*)"}], "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"solin", "===", "\"\<FindEcoAttractor\>\""}], "&&", 
           RowBox[{"nsps", "=!=", 
            RowBox[{"{", "}"}]}]}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "]"}], "=", 
           "nsps"}], ",", "\n", "\t", 
          RowBox[{"Set\[ScriptCapitalN]", "[", 
           RowBox[{"Join", "[", 
            RowBox[{"sol", ",", "fixedvariables"}], "]"}], "]"}]}], "\n", 
         "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: \[ScriptCapitalN]=\>\"", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "]"}]}], 
         "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"shifting", " ", "traits"}], " ", "*)"}], "\n", 
        RowBox[{"Do", "[", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"dtrait", "[", 
            RowBox[{"gu", ",", "gtrait"}], "]"}], "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"traitshiftrate", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
               "gtrait"}], "]"}], ",", 
             RowBox[{"gtrait", "/.", "traitshiftrate"}], ",", "0"}], "]"}]}], 
          "\n", ",", 
          RowBox[{"{", 
           RowBox[{"gu", ",", "guilds"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"gtrait", ",", 
            RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ";", "\n", 
        
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: dtrait=\>\"", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"dtrait", "[", 
               RowBox[{"gu", ",", "gtrait"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"gu", ",", "guilds"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"gtrait", ",", 
                RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}]}], 
           "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"set", " ", "up", " ", "G", " ", "matrices"}], " ", "*)"}], 
        "\n", 
        RowBox[{"Do", "[", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"g", "[", "gu", "]"}], "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MatrixQ", "[", 
               RowBox[{
                RowBox[{"G", "[", "gu", "]"}], "/.", "Gs"}], "]"}], ",", "\n",
               "\t\t", 
              RowBox[{"SymmetrizeMatrix", "[", 
               RowBox[{
                RowBox[{"G", "[", "gu", "]"}], "/.", "Gs"}], "]"}], ",", "\n",
               "\t\t", 
              RowBox[{"DiagonalMatrix", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Head", "[", 
                    RowBox[{
                    RowBox[{"V", "[", "gtrait", "]"}], "/.", "Gs"}], "]"}], "=!=",
                     "V"}], ",", 
                   RowBox[{
                    RowBox[{"V", "[", "gtrait", "]"}], "/.", "Gs"}], ",", 
                   "1"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"gtrait", ",", 
                   RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}], 
               "]"}]}], "\n", "\t", "]"}]}], ";"}], "\n", "\t", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
             RowBox[{"g", "[", "gu", "]"}], "=", 
             RowBox[{"SymmetrizeMatrix", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"tr1", "===", "tr2"}], ",", 
                  RowBox[{"Var", "[", "tr1", "]"}], ",", 
                  RowBox[{"Cov", "[", 
                   RowBox[{"tr1", ",", "tr2"}], "]"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"tr1", ",", 
                  RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"tr2", ",", 
                  RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}], 
              "]"}]}], ";"}], "*)"}], "\n", ",", 
          RowBox[{"{", 
           RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"transitions", "===", "Transitions"}], ",", "\n", "\n", 
          RowBox[{"(*", " ", "traiteqns", " ", "*)"}], "\n", 
          RowBox[{
           RowBox[{"Which", "[", "\n", "\t", 
            RowBox[{
             RowBox[{"evoeqn", "\[Equal]", "\"\<QG\>\""}], ",", "\n", "\t", 
             RowBox[{"Do", "[", 
              RowBox[{
               RowBox[{"Do", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"pre", "[", 
                   RowBox[{"gu", ",", "sp"}], "]"}], "=", "1"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"sp", ",", "0", ",", 
                   RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}]}], "}"}]}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", 
             "\t", 
             RowBox[{"evoeqn", "\[Equal]", "\"\<CE\>\""}], ",", "\n", "\t", 
             RowBox[{"Do", "[", "\n", "\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"Do", "[", "\n", "\t\t\t", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"comptype", "[", "gcomp", "]"}], "\[Equal]", 
                    "\"\<Extensive\>\""}], ",", 
                    RowBox[{
                    RowBox[{"wt", "[", 
                    RowBox[{"gu", ",", "gcomp"}], "]"}], "=", "1"}], ",", 
                    RowBox[{
                    RowBox[{"wt", "[", 
                    RowBox[{"gu", ",", "gcomp"}], "]"}], "=", "0"}]}], "]"}], 
                  "\n", "\t\t", ",", 
                  RowBox[{"{", 
                   RowBox[{"gcomp", ",", 
                    RowBox[{"gcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ";",
                 "\n", "\t\t", 
                RowBox[{"Do", "[", "\n", "\t\t\t", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"pre", "[", 
                    RowBox[{"gu", ",", "sp"}], "]"}], ":=", 
                   RowBox[{"Sum", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"wt", "[", 
                    RowBox[{"gu", ",", "gcomp"}], "]"}], "*", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"gcomp", ",", "sp"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"gcomp", ",", 
                    RowBox[{"gcomps", "[", "gu", "]"}]}], "}"}]}], "]"}]}], 
                  "\n", "\t\t", ",", 
                  RowBox[{"{", 
                   RowBox[{"sp", ",", "0", ",", 
                    RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}]}], "}"}]}], 
                 "]"}]}], "\n", "\t", ",", 
               RowBox[{"{", 
                RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", 
             "\t", "Else", ",", "\n", "\t", 
             RowBox[{
              RowBox[{"Message", "[", 
               RowBox[{"EvoEqns", "::", "badte"}], "]"}], ";", "\n", "\t", 
              RowBox[{"Return", "[", "$Failed", "]"}]}]}], "\n", "]"}], ";", 
           "\n", "\n", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", "\"\<setting eqns...\>\"", "]"}], ";", 
             "\n", 
             RowBox[{"Print", "[", 
              RowBox[{"Join", "[", 
               RowBox[{"BlankTraits", ",", 
                RowBox[{"ExtractAttributes", "[", "solin", "]"}]}], "]"}], 
              "]"}], ";"}], "*)"}], "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"delaydinv", "\[Equal]", "True"}], ",", "\n", "\t", 
             RowBox[{"eqns", "=", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"Table", "[", "\n", "\t\t", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"DT", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"gtrait", ",", "sp"}], "]"}], "]"}], "\[Equal]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"pre", "[", 
                    RowBox[{"gu", ",", "sp"}], "]"}], "*", "\n", "\t\t", 
                    RowBox[{"Sum", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    RowBox[{"g", "[", "gu", "]"}], ",", 
                    RowBox[{"var_Symbol", "\[Rule]", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"var", ",", "sp"}], "]"}], "[", "t", "]"}]}], ",",
                     "\[Infinity]"}], "]"}], "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"index", "[", "gtrait", "]"}], ",", 
                    RowBox[{"index", "[", "gtrait\[Prime]", "]"}]}], 
                    "\[RightDoubleBracket]"}], 
                    RowBox[{"NumDInv", "[", 
                    RowBox[{"BlankUnkTraits", ",", "sol", ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"gtrait\[Prime]", ",", "0"}], "]"}], ",", 
                    RowBox[{"Species", "\[Rule]", "sp"}], ",", 
                    RowBox[{"Method", "\[Rule]", "\"\<NDInv\>\""}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "dinvopts"}], "]"}], ",", 
                    RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], 
                    "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"gtrait\[Prime]", ",", 
                    RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}]}], 
                    "\n", "\t\t", "-", 
                    RowBox[{"dtrait", "[", 
                    RowBox[{"gu", ",", "gtrait"}], "]"}], "+", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}],
                     ",", 
                    RowBox[{"Unk", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"gtrait", ",", "sp"}], "]"}], "]"}], ",", "0"}], 
                    "]"}]}]}], "\n", "\t", ",", 
                    RowBox[{"{", 
                    RowBox[{"gtrait", ",", 
                    RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"sp", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], "\[Equal]",
                     "0"}], ",", "0", ",", "1"}], "]"}], ",", 
                    RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}]}], "}"}]}], 
                   "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "]"}], "/.",
                "fixed"}]}], "\n", ",", "\n", "\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"sol", "===", "\"\<FindEcoAttractor\>\""}], ",", 
                RowBox[{"sol", "=", "BlankVariables"}]}], "]"}], ";", "\n", 
              "\t", 
              RowBox[{"eqns", "=", 
               RowBox[{
                RowBox[{"Flatten", "[", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"Table", "[", "\n", "\t\t", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"DT", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"gtrait", ",", "sp"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"gtrait", ",", 
                    RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}], 
                    "\[Equal]", 
                    RowBox[{"(", "\n", "\t\t", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"pre", "[", 
                    RowBox[{"gu", ",", "sp"}], "]"}], "*", 
                    RowBox[{
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    RowBox[{"g", "[", "gu", "]"}], ",", 
                    RowBox[{"var_Symbol", "\[Rule]", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"var", ",", "sp"}], "]"}]}], ",", "\[Infinity]"}],
                     "]"}], ".", 
                    RowBox[{"DInv", "[", 
                    RowBox[{"BlankTraits", ",", "sol", ",", 
                    RowBox[{"Guild", "\[Rule]", "gu"}], ",", 
                    RowBox[{"Species", "\[Rule]", "sp"}], ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", 
                    RowBox[{"Fixed", "\[Rule]", "fixed"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "dinvopts"}], "]"}], ",", 
                    RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], 
                    "]"}]}]}], "\n", "\t\t", "-", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"dtrait", "[", 
                    RowBox[{"gu", ",", "gtrait"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"gtrait", ",", 
                    RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}], 
                    "\n", "\t\t", "+", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}],
                     ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"gtrait", ",", "sp"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"gtrait", ",", 
                    RowBox[{"gtraits", "[", "gu", "]"}]}], "}"}]}], "]"}], 
                    ",", "0"}], "]"}]}], "\n", "\t\t", "/.", "fixed"}], "/.", 
                    "AddVariablets"}], "/.", "AddTraitts"}], ")"}]}], "]"}], 
                    "\n", "\t", ",", 
                    RowBox[{"{", 
                    RowBox[{"sp", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], "\[Equal]",
                     "0"}], ",", "0", ",", "1"}], "]"}], ",", 
                    RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}]}], "}"}]}], 
                    "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "]"}], "/.",
                 "FixVarCovts"}]}]}]}], "\n", "]"}], ";", "\n", "\n", 
           RowBox[{"eqns", "=", 
            RowBox[{"DeleteCases", "[", 
             RowBox[{"eqns", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"DT", "[", "var_", "]"}], "\[Equal]", "_"}], "/;", 
               RowBox[{"MemberQ", "[", 
                RowBox[{"fixedvars", ",", "var"}], "]"}]}]}], "]"}]}], ";", 
           "\n", "\n", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"\"\<AllVariables=\>\"", ",", "AllVariables"}], "]"}], 
             ";", "\n", 
             RowBox[{"Print", "[", 
              RowBox[{"\"\<logged=\>\"", ",", "logged"}], "]"}], ";", "\n", 
             RowBox[{"Print", "[", 
              RowBox[{"\"\<ExpRule[AllVariables,logged]=\>\"", ",", 
               RowBox[{"ExpRule", "[", 
                RowBox[{"AllVariables", ",", "logged"}], "]"}]}], "]"}], ";", 
             "\n", 
             RowBox[{"Print", "[", 
              RowBox[{"\"\<returning \>\"", ",", 
               RowBox[{"eqns", "/.", 
                RowBox[{"ExpRule", "[", 
                 RowBox[{"AllVariables", ",", "logged"}], "]"}]}]}], "]"}], 
             ";"}], "*)"}], "\n", "\n", 
           RowBox[{"Return", "[", 
            RowBox[{"eqns", "/.", 
             RowBox[{"ExpRule", "[", 
              RowBox[{"AllVariables", ",", "logged"}], "]"}]}], "]"}], ";"}], 
          "\n", "\n", ",", "\n", "\n", 
          RowBox[{
           RowBox[{"traitz", "=", 
            RowBox[{"gtraits", "[", 
             RowBox[{
             "guilds", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
              "]"}]}], ";", "\n", 
           RowBox[{"traiteqns", "=", 
            RowBox[{"Normal", "@", 
             RowBox[{"Merge", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Table", "[", "\[IndentingNewLine]", "\t", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"comp1", ",", "comp2", ",", "s1", ",", "s2"}], 
                    "}"}], "=", 
                   RowBox[{"DeleteSubscripts", "[", 
                    RowBox[{
                    RowBox[{
                    "tr", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "/.", 
                    RowBox[{"{", "\[IndentingNewLine]", "\t", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"c1_", " ", "var1_"}], "\[DoubleRightArrow]", 
                    RowBox[{"c2_", " ", "var2_"}]}], "}"}], "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"var1", ",", "var2", ",", "c1", ",", "c2"}], 
                    "}"}]}], ",", "\[IndentingNewLine]", "\t", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"var1_", "\[DoubleRightArrow]", 
                    RowBox[{"c2_", " ", "var2_"}]}], "}"}], "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"var1", ",", "var2", ",", "1", ",", "c2"}], 
                    "}"}]}], ",", "\[IndentingNewLine]", "\t", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"c1_", " ", "var1_"}], "\[DoubleRightArrow]", 
                    "var2_"}], "}"}], "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"var1", ",", "var2", ",", "c1", ",", "1"}], 
                    "}"}]}], ",", "\[IndentingNewLine]", "\t", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"var1_", "\[DoubleRightArrow]", "var2_"}], "}"}], 
                    "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"var1", ",", "var2", ",", "1", ",", "1"}], 
                    "}"}]}]}], "\[IndentingNewLine]", "\t", "}"}]}], "]"}]}], 
                  ";", "\[IndentingNewLine]", "\t", 
                  RowBox[{"rate", "=", 
                   RowBox[{
                   "tr", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
                  "\t", 
                  RowBox[{"(*", 
                   RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{"\"\<rate=\>\"", ",", "rate"}], "]"}], ";"}], 
                   "*)"}], "\[IndentingNewLine]", "\t", 
                  RowBox[{"fg", "=", 
                   RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"rate", "/", 
                    SubscriptBox["comp1", "\[FormalI]"]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"traitz", ",", 
                    RowBox[{"var_", "\[Rule]", 
                    SubscriptBox[
                    RowBox[{"var", "[", "comp1", "]"}], "\[FormalI]"]}], ",", 
                    "1"}], "]"}], "}"}]}], "]"}]}], ";", 
                  "\[IndentingNewLine]", "\t", 
                  RowBox[{"(*", 
                   RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{"\"\<fg=\>\"", ",", "fg"}], "]"}], ";"}], "*)"}], 
                  "\n", "\t", 
                  RowBox[{"gu", "=", 
                   RowBox[{
                    RowBox[{"LookUp", "[", "comp1", "]"}], 
                    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
                  ";", "\[IndentingNewLine]", "\t", 
                  RowBox[{"<|", "\[IndentingNewLine]", "\t", 
                   RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    SubscriptBox[
                    RowBox[{"Through", "[", 
                    RowBox[{"traitz", "[", "comp1", "]"}], "]"}], 
                    "\[FormalI]"], "]"}], "\[Rule]", 
                    RowBox[{
                    RowBox[{"-", "s1"}], " ", 
                    RowBox[{
                    RowBox[{"g", "[", "gu", "]"}], ".", "fg"}]}]}], "]"}], 
                    ",", "\[IndentingNewLine]", "\t", 
                    RowBox[{"Thread", "[", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    SubscriptBox[
                    RowBox[{"Through", "[", 
                    RowBox[{"traitz", "[", "comp2", "]"}], "]"}], 
                    "\[FormalI]"], "]"}], "\[Rule]", 
                    RowBox[{"s2", " ", 
                    RowBox[{
                    RowBox[{"g", "[", "gu", "]"}], ".", "fg"}]}]}], "]"}], 
                    ",", "\[IndentingNewLine]", "\t", 
                    RowBox[{"Thread", "[", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    SubscriptBox[
                    RowBox[{"Through", "[", 
                    RowBox[{"traitz", "[", "comp2", "]"}], "]"}], 
                    "\[FormalI]"], "]"}], "\[Rule]", 
                    RowBox[{"s2", " ", 
                    RowBox[{"rate", "/", 
                    SubscriptBox["comp2", "\[FormalI]"]}], 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    SubscriptBox[
                    RowBox[{"Through", "[", 
                    RowBox[{"traitz", "[", "comp1", "]"}], "]"}], 
                    "\[FormalI]"], "]"}], "-", 
                    RowBox[{"Thread", "[", 
                    SubscriptBox[
                    RowBox[{"Through", "[", 
                    RowBox[{"traitz", "[", "comp2", "]"}], "]"}], 
                    "\[FormalI]"], "]"}]}], ")"}]}]}], "]"}]}], 
                   "\[IndentingNewLine]", "\t", "|>"}]}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"{", 
                  RowBox[{"tr", ",", "transitions"}], "}"}]}], "]"}], 
               "\[IndentingNewLine]", ",", "Total"}], "]"}]}]}], ";", "\n", 
           "\n", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", "traiteqns", "]"}], ";"}], "*)"}], "\n", 
           "\n", 
           RowBox[{"Return", "[", 
            RowBox[{"Chop", "@", 
             RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Table", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Table", "[", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    SubscriptBox[
                    RowBox[{"trait", "[", "gcomp", "]"}], "sp"], "'"}], "[", 
                    "t", "]"}], "\[Equal]", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    SubscriptBox[
                    RowBox[{"trait", "[", "gcomp", "]"}], "\[FormalI]"], "/.",
                     "traiteqns"}], "/.", 
                    RowBox[{"\[FormalI]", "\[Rule]", "sp"}]}], "/.", 
                    "AddVariablets"}], "/.", "AddTraitts"}], "]"}]}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"gcomp", ",", 
                    RowBox[{"gcomps", "[", 
                    RowBox[{
                    "guilds", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], "]"}], 
                  "\[IndentingNewLine]", ",", 
                  RowBox[{"{", 
                   RowBox[{"trait", ",", "traitz"}], "}"}]}], "]"}], 
                "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{"sp", ",", 
                  RowBox[{"\[ScriptCapitalN]", "[", 
                   RowBox[{
                   "guilds", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], "]"}], "\n", 
              "]"}]}], "]"}]}]}], "\n", "\n", "]"}]}]}], "\n", "\n", "]"}]}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.688409487229787*^9, 3.688410346995085*^9, {3.6885717170330667`*^9, 
   3.688571717543687*^9}, {3.688571775992733*^9, 3.688571776526206*^9}, {
   3.708580358524328*^9, 3.708580367133918*^9}, {3.7085805480249043`*^9, 
   3.708580552957263*^9}, {3.7085806237121067`*^9, 3.708580626686872*^9}, {
   3.7085806780007763`*^9, 3.708580685238158*^9}, {3.7085807226718073`*^9, 
   3.708580746873554*^9}, {3.708580812359832*^9, 3.708580841174244*^9}, {
   3.708580891500785*^9, 3.7085809064428596`*^9}, {3.7085810138866577`*^9, 
   3.70858101422005*^9}, {3.708581073368642*^9, 3.7085811040418367`*^9}, 
   3.7085961658744917`*^9, {3.708597278922868*^9, 3.7085972893497257`*^9}, {
   3.7085974470844193`*^9, 3.7085974974750767`*^9}, {3.708597566711635*^9, 
   3.7085975691400623`*^9}, 3.70859847287843*^9, {3.7086008014413977`*^9, 
   3.70860080362284*^9}, {3.708600837011648*^9, 3.708600839412184*^9}, {
   3.708601266341401*^9, 3.708601269661209*^9}, 3.70860129992697*^9, {
   3.708601634890072*^9, 3.70860169233783*^9}, 3.708601823113695*^9, {
   3.709032277347278*^9, 3.709032330403159*^9}, {3.709032569839916*^9, 
   3.709032621848825*^9}, {3.709033236257003*^9, 3.709033236416822*^9}, {
   3.709111148485799*^9, 3.709111154948862*^9}, {3.70933682108967*^9, 
   3.7093368240934772`*^9}, {3.710105995940238*^9, 3.710105996866913*^9}, {
   3.7127385350462303`*^9, 3.712738535054513*^9}, {3.712740223862005*^9, 
   3.712740223881629*^9}, {3.722033875063723*^9, 3.722033876233472*^9}, {
   3.722034258139152*^9, 3.7220342674868317`*^9}, {3.7220880237571917`*^9, 
   3.722088034520193*^9}, {3.731104242637883*^9, 3.731104278635716*^9}, {
   3.731104997781638*^9, 3.7311050263398447`*^9}, {3.731105876328713*^9, 
   3.731105894099358*^9}, {3.731105938905416*^9, 3.7311059507337418`*^9}, {
   3.731108033278398*^9, 3.731108067757883*^9}, {3.73110814743054*^9, 
   3.7311081521616497`*^9}, {3.7311083849031143`*^9, 3.731108393536907*^9}, {
   3.7311085535965652`*^9, 3.731108606506817*^9}, {3.731108730301261*^9, 
   3.73110873176026*^9}, {3.731108836401286*^9, 3.731108836931473*^9}, 
   3.731108889598999*^9, {3.7311089328030252`*^9, 3.73110895392705*^9}, {
   3.731109330453732*^9, 3.7311093334391327`*^9}, {3.7311093876564302`*^9, 
   3.731109452845138*^9}, {3.731144600632256*^9, 3.731144603028613*^9}, {
   3.73114501783032*^9, 3.731145048660369*^9}, {3.731145080016384*^9, 
   3.7311450831048927`*^9}, {3.731145213309173*^9, 3.731145222493976*^9}, {
   3.731145276224111*^9, 3.73114528092452*^9}, {3.731231960738332*^9, 
   3.7312319650589457`*^9}, {3.731232409757909*^9, 3.731232414896275*^9}, {
   3.7312327649049053`*^9, 3.731232810799704*^9}, {3.7312332089023733`*^9, 
   3.731233223293242*^9}, {3.731233287350834*^9, 3.7312332926707697`*^9}, {
   3.731233329714402*^9, 3.731233340465416*^9}, {3.731233414893477*^9, 
   3.731233458364264*^9}, {3.731233514817432*^9, 3.731233514973345*^9}, {
   3.7312335639590197`*^9, 3.731233593700034*^9}, {3.731233891442408*^9, 
   3.731233900742066*^9}, {3.731234010457054*^9, 3.7312340124423933`*^9}, {
   3.731249212385839*^9, 3.731249237357728*^9}, {3.7312492800564404`*^9, 
   3.7312492941133204`*^9}, {3.731249339535811*^9, 3.731249365257427*^9}, {
   3.731251393536757*^9, 3.731251456459611*^9}, {3.731253719607267*^9, 
   3.731253721022493*^9}, {3.73125375298354*^9, 3.731253754446919*^9}, {
   3.7312538290833073`*^9, 3.731253858968158*^9}, {3.731254100893989*^9, 
   3.731254105593131*^9}, {3.731254275766021*^9, 3.731254316403315*^9}, 
   3.731254508019658*^9, {3.731254564464875*^9, 3.7312545655985937`*^9}, {
   3.7312549503901787`*^9, 3.731254995337842*^9}, {3.731255056378912*^9, 
   3.7312550890162373`*^9}, {3.73125606462327*^9, 3.731256078094046*^9}, {
   3.7312561377447968`*^9, 3.731256146461253*^9}, {3.731256445277829*^9, 
   3.731256453281808*^9}, {3.731257298224099*^9, 3.731257309872786*^9}, {
   3.731257381953423*^9, 3.7312574078388577`*^9}, {3.7312574385592833`*^9, 
   3.731257446831624*^9}, {3.731257653208837*^9, 3.731257671759345*^9}, 
   3.731257713869981*^9, {3.7312630604182034`*^9, 3.731263065150948*^9}, {
   3.731266600116169*^9, 3.7312666462739267`*^9}, {3.731266679355897*^9, 
   3.731266680348941*^9}, {3.731267651339802*^9, 3.731267657364622*^9}, {
   3.7312679781321507`*^9, 3.731268105278483*^9}, {3.731268288730389*^9, 
   3.731268461590226*^9}, {3.731272895231608*^9, 3.731272899930691*^9}, {
   3.73127296391442*^9, 3.731273007394515*^9}, {3.731273046390067*^9, 
   3.7312731187035503`*^9}, {3.73127317548923*^9, 3.731273187167938*^9}, {
   3.7312741636696253`*^9, 3.731274164109251*^9}, 3.7312744797645807`*^9, {
   3.7312794276717577`*^9, 3.731279538417981*^9}, {3.731279621426643*^9, 
   3.731279653438983*^9}, {3.731280286581835*^9, 3.731280291686035*^9}, {
   3.731280393880105*^9, 3.731280410573455*^9}, {3.7312805048047247`*^9, 
   3.7312805388927727`*^9}, {3.731280600180799*^9, 3.731280615960024*^9}, {
   3.731280714400795*^9, 3.731280732421489*^9}, {3.731280775846353*^9, 
   3.731280829597797*^9}, {3.731280885205934*^9, 3.731280907399735*^9}, 
   3.731280946540551*^9, {3.731281567826366*^9, 3.731281631156535*^9}, {
   3.731281766701133*^9, 3.73128176974076*^9}, {3.731281840776827*^9, 
   3.731281867616517*^9}, {3.731281924430279*^9, 3.731281981616087*^9}, {
   3.731282058372973*^9, 3.7312820731719227`*^9}, 3.731282127899729*^9, {
   3.7312821657357597`*^9, 3.731282199733157*^9}, {3.731282325140951*^9, 
   3.731282329520623*^9}, {3.731282531004629*^9, 3.73128253714888*^9}, {
   3.73128265219977*^9, 3.731282694634664*^9}, {3.731282757755281*^9, 
   3.73128286091042*^9}, {3.731283302413376*^9, 3.731283377599361*^9}, {
   3.731284106308639*^9, 3.73128413331852*^9}, {3.731284178545678*^9, 
   3.7312841891668463`*^9}, 3.731284345004175*^9, {3.731284876614265*^9, 
   3.7312849375262947`*^9}, {3.7314229872077713`*^9, 3.731422989210918*^9}, {
   3.731423022526702*^9, 3.7314230243049583`*^9}, {3.7314230727673197`*^9, 
   3.7314231396940203`*^9}, {3.7314231718643847`*^9, 
   3.7314231997101383`*^9}, {3.731423245448696*^9, 3.7314232596523867`*^9}, {
   3.73142458505212*^9, 3.7314245863224173`*^9}, {3.7314246915341682`*^9, 
   3.731424692922903*^9}, {3.731424762855925*^9, 3.731424897585847*^9}, {
   3.731425044363583*^9, 3.73142511736366*^9}, {3.7314252957475233`*^9, 
   3.731425308297345*^9}, {3.7314253901671057`*^9, 3.73142539474082*^9}, {
   3.7314254434704447`*^9, 3.731425445939843*^9}, 3.7314254798405733`*^9, {
   3.731425689136718*^9, 3.7314256982055273`*^9}, {3.7314257558883333`*^9, 
   3.73142576286087*^9}, {3.731426888927384*^9, 3.73142689723682*^9}, {
   3.731450833971335*^9, 3.7314508596380873`*^9}, {3.7314508970485907`*^9, 
   3.7314508974541407`*^9}, {3.731526238215742*^9, 3.731526391020026*^9}, {
   3.7315264280067453`*^9, 3.731526444549638*^9}, {3.7315264796032047`*^9, 
   3.7315264875601597`*^9}, {3.7315265773532352`*^9, 3.731526584842339*^9}, {
   3.7315269753569593`*^9, 3.731527112981538*^9}, {3.7315273280241528`*^9, 
   3.7315273288957787`*^9}, {3.731527421952361*^9, 3.731527423985589*^9}, {
   3.7315274546025047`*^9, 3.7315274691600447`*^9}, 3.731527795761732*^9, {
   3.731527837045167*^9, 3.73152785520822*^9}, {3.7315279067321377`*^9, 
   3.731527906934535*^9}, {3.731527955382228*^9, 3.7315279657321587`*^9}, {
   3.731528229260337*^9, 3.731528263567294*^9}, {3.731528336661065*^9, 
   3.7315283482782707`*^9}, {3.7315283855814447`*^9, 3.731528404854438*^9}, {
   3.731528635441764*^9, 3.731528676526634*^9}, {3.731528823745325*^9, 
   3.731528842515389*^9}, {3.73152900929154*^9, 3.731529038117703*^9}, {
   3.731529077393664*^9, 3.73152911714223*^9}, {3.731529150164506*^9, 
   3.731529204234757*^9}, {3.731539426412466*^9, 3.731539432160592*^9}, {
   3.731539613279729*^9, 3.7315396211117687`*^9}, {3.731539651269733*^9, 
   3.731539685459738*^9}, {3.731539852881021*^9, 3.731539861002081*^9}, {
   3.731588211549037*^9, 3.7315883001040497`*^9}, {3.7315883620692883`*^9, 
   3.73158836866451*^9}, {3.731588409442958*^9, 3.7315884637445793`*^9}, {
   3.731588614372117*^9, 3.7315886145385036`*^9}, {3.731588748544984*^9, 
   3.731588811828478*^9}, {3.731588862765547*^9, 3.7315888993158283`*^9}, {
   3.7316270619451103`*^9, 3.731627062295698*^9}, {3.7316283670345*^9, 
   3.731628406377172*^9}, {3.731629415454463*^9, 3.731629420463972*^9}, {
   3.73163164623908*^9, 3.731631649223393*^9}, {3.731631714006916*^9, 
   3.731631730110814*^9}, {3.731631778981337*^9, 3.731631808471527*^9}, {
   3.7316323319659777`*^9, 3.73163241623783*^9}, 3.73163247389112*^9, {
   3.731632706406403*^9, 3.731632712798625*^9}, {3.731632745228705*^9, 
   3.7316327455180597`*^9}, {3.732540750357403*^9, 3.732540753550756*^9}, {
   3.755373514956738*^9, 3.755373528055237*^9}, {3.758476922325924*^9, 
   3.7584769310481443`*^9}, 3.758480898539714*^9, {3.758480952122157*^9, 
   3.758480964414268*^9}, {3.758480999306613*^9, 3.758481003488456*^9}, {
   3.758481080137578*^9, 3.75848112082932*^9}, {3.7584811592338037`*^9, 
   3.758481168930447*^9}, {3.75853599399649*^9, 3.758535997516572*^9}, {
   3.7585378134246187`*^9, 3.7585378137859383`*^9}, {3.758538324231449*^9, 
   3.758538326481564*^9}, {3.758539114469524*^9, 3.75853911509159*^9}, {
   3.758539384369833*^9, 3.7585394240861187`*^9}, 3.758539810787362*^9, {
   3.7585400825053577`*^9, 3.75854008779704*^9}, {3.758540434681367*^9, 
   3.7585404580082273`*^9}, {3.75854182131308*^9, 3.7585418222765017`*^9}, {
   3.758543707723405*^9, 3.7585437078582563`*^9}, {3.758543902462965*^9, 
   3.758543905747511*^9}, {3.758544107351111*^9, 3.758544112516015*^9}, {
   3.758544215713832*^9, 3.758544219920192*^9}, {3.758556573922331*^9, 
   3.758556598034581*^9}, {3.7585567948158703`*^9, 3.758556820994747*^9}, {
   3.7585656945356073`*^9, 3.7585656953799143`*^9}, {3.7585662403983088`*^9, 
   3.758566291068665*^9}, {3.7585663228948383`*^9, 3.758566510718236*^9}, {
   3.758566679928555*^9, 3.758566684216365*^9}, {3.758566715147884*^9, 
   3.758566720776121*^9}, {3.758566757326034*^9, 3.7585667834913483`*^9}, {
   3.758566826911749*^9, 3.758566829341107*^9}, {3.7586049880876493`*^9, 
   3.758604994378345*^9}, {3.758605113384948*^9, 3.758605118160839*^9}, 
   3.7586051615273237`*^9, {3.7586052290309553`*^9, 3.7586052335751143`*^9}, {
   3.758653737004799*^9, 3.758653738672613*^9}, {3.75882296793782*^9, 
   3.7588229922899027`*^9}, 3.758823072625307*^9, {3.758823210236087*^9, 
   3.7588232530246687`*^9}, {3.7588235552118883`*^9, 
   3.7588235591418543`*^9}, {3.758960368732027*^9, 3.758960416449155*^9}, {
   3.758961412390896*^9, 3.758961429232112*^9}, {3.758961495363811*^9, 
   3.758961521787612*^9}, {3.758963740526894*^9, 3.75896378197176*^9}, {
   3.758964157836873*^9, 3.758964167698135*^9}, {3.758964427481781*^9, 
   3.758964462498947*^9}, {3.758964682364627*^9, 3.758964707461729*^9}, {
   3.7589651551662207`*^9, 3.7589652152805157`*^9}, 3.759060850192254*^9, {
   3.759061395150028*^9, 3.75906139566131*^9}, {3.759073721601737*^9, 
   3.759073810921527*^9}, {3.759122149327434*^9, 3.759122149529971*^9}, {
   3.7591297791050463`*^9, 3.759129788765335*^9}, {3.7591300408257513`*^9, 
   3.759130055184474*^9}, {3.759130107057115*^9, 3.759130107695546*^9}, {
   3.760551341899288*^9, 3.760551404665615*^9}, {3.760551465325651*^9, 
   3.7605514653722277`*^9}, {3.760551528620905*^9, 3.760551568902235*^9}, {
   3.7608644514009953`*^9, 3.7608644548885717`*^9}, {3.760864499796804*^9, 
   3.760864515717348*^9}, {3.760864634496181*^9, 3.7608646703268147`*^9}, {
   3.7608888148623447`*^9, 3.760888839646459*^9}, {3.7608889201258917`*^9, 
   3.760889087052618*^9}, {3.760889361387122*^9, 3.760889362764234*^9}, {
   3.760889395193655*^9, 3.760889396593314*^9}, 3.760889838087203*^9, 
   3.760889869124024*^9, {3.760922736263527*^9, 3.760922740680523*^9}, {
   3.760922966040203*^9, 3.760923036502225*^9}, {3.7609230952839727`*^9, 
   3.7609231069088078`*^9}, 3.760933231405644*^9, {3.7611548286690273`*^9, 
   3.761154829877816*^9}, {3.761154894366496*^9, 3.761154894507638*^9}, 
   3.761155033726552*^9, 3.761377972645853*^9, {3.7614619244224*^9, 
   3.7614619298489017`*^9}, {3.761462015801157*^9, 3.761462021524908*^9}, {
   3.761462910428112*^9, 3.761462952967079*^9}, {3.761463071487103*^9, 
   3.761463099211383*^9}, {3.7614631716664343`*^9, 3.761463220721249*^9}, {
   3.761476682560848*^9, 3.761476692660177*^9}, {3.761756057814684*^9, 
   3.761756073872486*^9}, {3.761756110838912*^9, 3.761756128489506*^9}, {
   3.761757499246736*^9, 3.7617575030786047`*^9}, {3.7617575430796127`*^9, 
   3.761757550434002*^9}, {3.761757947154948*^9, 3.761757979836934*^9}, {
   3.761802444830183*^9, 3.761802459349936*^9}, {3.7618050677290363`*^9, 
   3.76180508262037*^9}, {3.7618052350699253`*^9, 3.761805329516816*^9}, {
   3.7618055138923893`*^9, 3.7618055683996763`*^9}, {3.7618059822175198`*^9, 
   3.761806003678727*^9}, {3.7618074504889917`*^9, 3.7618075305079737`*^9}, {
   3.76180756103611*^9, 3.761807570549027*^9}, {3.7618076153169603`*^9, 
   3.76180761781117*^9}, {3.761814840834003*^9, 3.761814841466052*^9}, {
   3.7618150409659767`*^9, 3.761815041388214*^9}, {3.7618152125396852`*^9, 
   3.7618152232720013`*^9}, 3.761816653071475*^9, {3.761820136341989*^9, 
   3.7618201959060917`*^9}, {3.7618202560825663`*^9, 3.761820323684342*^9}, {
   3.761820369869462*^9, 3.76182042464023*^9}, {3.761821885429888*^9, 
   3.761821889494549*^9}, {3.7618255401180763`*^9, 3.761825614083737*^9}, {
   3.7618257301265306`*^9, 3.761825733870582*^9}, {3.76182586254425*^9, 
   3.7618258805704937`*^9}, {3.761826046040099*^9, 3.761826046170249*^9}, {
   3.7618260941307497`*^9, 3.761826167906207*^9}, {3.761830529008047*^9, 
   3.7618305316110077`*^9}, {3.76183059437302*^9, 3.76183059464709*^9}, {
   3.761830631403709*^9, 3.761830669599181*^9}, {3.761831291950457*^9, 
   3.761831299829701*^9}, {3.7618331219857616`*^9, 3.761833162749485*^9}, 
   3.7618332091712227`*^9, 3.7618987692791033`*^9, 3.761932168184836*^9, 
   3.7619322256091623`*^9, 3.761932432938059*^9, 3.769760705902114*^9, 
   3.7704382652220383`*^9, {3.770487295704417*^9, 3.7704872960099382`*^9}, {
   3.77072144884404*^9, 3.7707214512845497`*^9}, {3.794137241090982*^9, 
   3.794137241097884*^9}, 3.794611852037084*^9, 3.794611986571116*^9, {
   3.794612050475204*^9, 3.794612058546281*^9}, {3.794612088740438*^9, 
   3.794612134227283*^9}, {3.794612196925377*^9, 3.794612209188065*^9}, 
   3.7946134958648653`*^9, {3.794691394492494*^9, 3.794691396280466*^9}, {
   3.7946915052928333`*^9, 3.794691512442984*^9}, 3.794693799664372*^9, 
   3.80027235371393*^9, {3.806953486772881*^9, 3.806953506912684*^9}, {
   3.806953564631736*^9, 3.8069535671276703`*^9}, {3.8070259616724033`*^9, 
   3.8070259632386*^9}, 3.8070271382868223`*^9, 3.807369342961253*^9, {
   3.807545119062212*^9, 3.807545172476706*^9}, {3.807545502326984*^9, 
   3.807545505408037*^9}, {3.807545569615972*^9, 3.807545572143474*^9}, {
   3.807545609737526*^9, 3.807545643162908*^9}, {3.807545755466633*^9, 
   3.807545765609213*^9}, 3.8075499770786657`*^9, {3.807552548864043*^9, 
   3.807552550991582*^9}, {3.80755262803789*^9, 3.807552635319776*^9}, {
   3.807553428939659*^9, 3.807553430737026*^9}, {3.814307535859868*^9, 
   3.814307555978424*^9}, {3.814308616812089*^9, 3.814308638069878*^9}, 
   3.814358222285966*^9, {3.814358291531797*^9, 3.814358291831606*^9}, {
   3.814358911290093*^9, 3.81435891416858*^9}, 3.814358946354199*^9, {
   3.816127838309307*^9, 3.8161278402158127`*^9}, {3.816128036744681*^9, 
   3.816128091714381*^9}, {3.816128816944983*^9, 3.81612881943974*^9}, {
   3.8161291327096357`*^9, 3.8161291653549232`*^9}, {3.816129243445827*^9, 
   3.81612924950095*^9}, 3.816129361337399*^9, 3.8161294000733757`*^9, {
   3.816129516167925*^9, 3.816129521718709*^9}, {3.816129567953721*^9, 
   3.8161295703454437`*^9}, {3.816129662836336*^9, 3.8161296636735086`*^9}, {
   3.816129887149172*^9, 3.816129916629847*^9}, {3.8161300859403543`*^9, 
   3.816130119537418*^9}, {3.8183637339380617`*^9, 3.818363769466839*^9}, {
   3.81836380743711*^9, 3.818363892996622*^9}, {3.818363932591346*^9, 
   3.818364208176915*^9}, 3.8183642656412973`*^9, {3.8183642958585777`*^9, 
   3.818364328282755*^9}, {3.81836436745257*^9, 3.818364373275783*^9}, {
   3.818364937193365*^9, 3.8183649474976063`*^9}, {3.818432728793921*^9, 
   3.818432732097397*^9}, {3.818432773378043*^9, 3.818432802249968*^9}, {
   3.818501119287055*^9, 3.818501136160776*^9}, {3.818503977947412*^9, 
   3.818503984890072*^9}, {3.8185042305103493`*^9, 
   3.818504292024048*^9}},ExpressionUUID->"dad9e441-fb1a-4b23-a79b-\
55bef76eba94"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.70858110896756*^9, 
  3.708581109870212*^9}},ExpressionUUID->"a806768f-ff76-47a1-aba6-\
629149705eac"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "EvoEqns", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Time", "\[Rule]", "t"}], ",", 
     RowBox[{"DelayDInv", "\[Rule]", "False"}], ",", 
     RowBox[{"DInvOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"EvoEquation", "\[Rule]", "\"\<QG\>\""}], ",", 
     RowBox[{"TraitShiftRate", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"\[ScriptCapitalN]s", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Logged", "\[Rule]", "False"}], ",", "\n", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.708581113938579*^9, 3.708581142353598*^9}, {
   3.70903292191361*^9, 3.709032932809966*^9}, {3.709033139894442*^9, 
   3.709033140962489*^9}, {3.731110719735405*^9, 3.731110726950795*^9}, {
   3.7312334667724953`*^9, 3.731233476102783*^9}, {3.731527271653007*^9, 
   3.731527292586875*^9}, {3.7315274335415583`*^9, 3.731527433988908*^9}, 
   3.731527655420206*^9, {3.761805048301374*^9, 3.761805061375827*^9}, 
   3.761820216849469*^9, {3.761825619808569*^9, 3.76182562232938*^9}, 
   3.770487290593297*^9, 3.770721451498992*^9, {3.794612146855267*^9, 
   3.794612148973661*^9}},ExpressionUUID->"d6b56ab5-fedd-4366-a538-\
aa0acb6aa5e8"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["PlotEvoStreams", "Subsection",
 CellChangeTimes->{{3.761415301448875*^9, 
  3.761415309475296*^9}},ExpressionUUID->"a2a2707c-131a-48a8-b69c-\
858d4f8048e2"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"de0da720-2fd0-4dbc-af36-\
e94fd3dc76a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotEvoStreams", "::", "usage"}], "=", "\n", 
   "\"\<PlotEvoStreams[{\!\(\*StyleBox[\"trait1\", \"TI\"]\), \!\(\*StyleBox[\
\"trait1min\", \"TI\"]\), \!\(\*StyleBox[\"trait1max\", \"TI\"]\)}] plots \
two-species evolutionary streams.\nPlotEvoStreams[\!\(\*StyleBox[\"sol\", \
\"TI\"]\), {\!\(\*StyleBox[\"trait1\", \"TI\"]\), \
\!\(\*StyleBox[\"trait1min\", \"TI\"]\), \!\(\*StyleBox[\"trait1max\", \
\"TI\"]\)}] uses two-species ecological equilibrium \!\(\*StyleBox[\"sol\", \
\"TI\"]\) for improved speed.\nPlotEvoStreams[{\!\(\*StyleBox[\"trait1\", \
\"TI\"]\), \!\(\*StyleBox[\"trait1min\", \"TI\"]\), \
\!\(\*StyleBox[\"trait1max\", \"TI\"]\)}, {\!\(\*StyleBox[\"trait2\", \"TI\"]\
\), \!\(\*StyleBox[\"trait2min\", \"TI\"]\), \!\(\*StyleBox[\"trait2max\", \
\"TI\"]\)}] allows for two different traits.\n\
PlotEvoStreams[\!\(\*StyleBox[\"sol\", \"TI\"]\), {\!\(\*StyleBox[\"trait1\", \
\"TI\"]\), \!\(\*StyleBox[\"trait1min\", \"TI\"]\), \
\!\(\*StyleBox[\"trait1max\", \"TI\"]\)}, {\!\(\*StyleBox[\"trait2\", \"TI\"]\
\), \!\(\*StyleBox[\"trait2min\", \"TI\"]\), \!\(\*StyleBox[\"trait2max\", \
\"TI\"]\)}] uses ecological equilibrium \!\(\*StyleBox[\"sol\", \"TI\"]\).\n\
PlotEvoStreams[\!\(\*StyleBox[\"sol\", \"TI\"]\), \
\!\(\*StyleBox[\"varcovars\", \"TI\"]\), {\!\(\*StyleBox[\"trait1\", \
\"TI\"]\), \!\(\*StyleBox[\"trait1min\", \"TI\"]\), \
\!\(\*StyleBox[\"trait1max\", \"TI\"]\)}, {\!\(\*StyleBox[\"trait2\", \"TI\"]\
\), \!\(\*StyleBox[\"trait2min\", \"TI\"]\), \!\(\*StyleBox[\"trait2max\", \
\"TI\"]\)}] uses trait variances/covariances in \!\(\*StyleBox[\"varcovars\", \
\"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.7694900859868593`*^9, 3.769490112314252*^9}, 
   3.769490293986351*^9},ExpressionUUID->"d1bb2114-4051-442a-a765-\
4aa934f4fc1b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"796f9111-a9d6-4168-b215-\
d5b74b896461"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotEvoStreams", "[", 
    RowBox[{
     RowBox[{"solin", ":", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"_", "?", "RuleListQ"}], "|", 
        RowBox[{"_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#", "\[Equal]", "\"\<FindEcoAttractor\>\""}], "&"}], 
          ")"}]}]}], ")"}], ":", "\"\<FindEcoAttractor\>\""}], ",", 
     RowBox[{"Gs_List", ":", 
      RowBox[{"{", "}"}]}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"trait1_", ",", 
       RowBox[{"trait1min_", "?", "NumericQ"}], ",", 
       RowBox[{"trait1max_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"trait2_", ",", 
       RowBox[{"trait2min_", "?", "NumericQ"}], ",", 
       RowBox[{"trait2max_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<PlotEvoStreams\>\"", "]"}]}], ",", 
       "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "monitor", ",", "printtrace", ",", "fixed", ",", 
       "time", ",", "\n", "evoeqn", ",", "fitnessgradient", ",", "dinvopts", 
       ",", "delaydinv", ",", "findecoattractoropts", ",", "streamplotopts", 
       ",", "framelabel", ",", "ecoattnumber", ",", "usesymmetry", ",", 
       "zerodiagonal", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "nb", ",", 
       "evoeqns", ",", "dt", ",", "nsps", ",", "ics", ",", "sol", ",", "\n", 
       "x", ",", "y", ",", "\n", "gu1", ",", "tr1", ",", "sp1", ",", "gu2", 
       ",", "tr2", ",", "sp2", ",", "res"}], "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"monitor", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Monitor", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"printtrace", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PrintTrace", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"fixed", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Fixed", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"time", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Time", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"dinvopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"DInvOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"delaydinv", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"DelayDInv", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"fitnessgradient", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"FitnessGradient", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"fitnessgradient", "\[Equal]", "\"\<NDInv\>\""}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"dinvopts", ",", 
            RowBox[{"Method", "\[Rule]", "\"\<NDInv\>\""}]}], "]"}]}], "]"}], 
        ";", "\n", 
        RowBox[{"findecoattractoropts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"FindEcoAttractorOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"streamplotopts", "=", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"FrameLabel", "\[Rule]", "framelabel"}], ",", "opts", 
              ",", 
              RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "}"}], "]"}],
            ",", 
           RowBox[{"Options", "[", "StreamPlot", "]"}]}], "]"}]}], ";", "\n", 
        
        RowBox[{"framelabel", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"FrameLabel", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"ecoattnumber", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"EcoAttractorNumber", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"usesymmetry", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"UseSymmetry", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"modelperiod", "\[NotEqual]", "0"}], "&&", 
           RowBox[{"time", "\[Equal]", "t"}]}], ",", 
          RowBox[{
           RowBox[{"delaydinv", "=", "True"}], ";", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"dinvopts", ",", 
             RowBox[{"InvOpts", "\[Rule]", 
              RowBox[{"{", "}"}]}]}], "]"}]}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "figure", " ", "out", " ", "what", " ", "are", " ", "the", " ", 
           "traits", " ", "on", " ", "the", " ", "x"}], "-", " ", 
          RowBox[{"and", " ", "y"}], "-", "axes"}], " ", "*)"}], "\n", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"gu1", ",", "tr1", ",", "sp1"}], "}"}], "=", 
         RowBox[{
          RowBox[{"LookUp", "[", "trait1", "]"}], "\[LeftDoubleBracket]", 
          RowBox[{"2", ";;", "4"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"gu2", ",", "tr2", ",", "sp2"}], "}"}], "=", 
         RowBox[{
          RowBox[{"LookUp", "[", "trait2", "]"}], "\[LeftDoubleBracket]", 
          RowBox[{"2", ";;", "4"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"framelabel", "===", "Automatic"}], ",", "\n", "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"tr2", "===", "tr1"}], ",", "\n", "\t\t", 
            RowBox[{"framelabel", "=", 
             RowBox[{"{", 
              RowBox[{"trait1", ",", 
               RowBox[{"SubscriptAdd", "[", 
                RowBox[{"trait1", ",", "1"}], "]"}]}], "}"}]}], ",", "\n", 
            "\t\t", 
            RowBox[{"framelabel", "=", 
             RowBox[{"{", 
              RowBox[{"trait1", ",", "trait2"}], "}"}]}]}], "\n", "\t", 
           "]"}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"set", " ", "up", " ", "sol"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"solin", "===", "\"\<FindEcoAttractor\>\""}], ",", "\n", 
          "\t", 
          RowBox[{"(*", " ", 
           RowBox[{
           "figure", " ", "out", " ", "number", " ", "of", " ", "species", 
            " ", "in", " ", "guilds"}], " ", "*)"}], "\n", "\t", 
          RowBox[{
           RowBox[{"Set\[ScriptCapitalN]", "[", 
            RowBox[{"Join", "[", 
             RowBox[{"fixed", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"trait1", "\[Rule]", "trait1"}], ",", 
                RowBox[{"trait2", "\[Rule]", "trait2"}]}], "}"}]}], "]"}], 
            "]"}], ";", "\n", "\t", 
           RowBox[{"ics", "=", "DefaultICs"}], ";", "\n", "\t", 
           RowBox[{"nsps", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], ";", "\n", 
           "\t", 
           RowBox[{"If", "[", 
            RowBox[{"Global`debug", ",", 
             RowBox[{"Print", "[", 
              RowBox[{
              "func", ",", "\"\<: \[ScriptCapitalN]=\>\"", ",", "nsps"}], 
              "]"}]}], "]"}], ";"}], "\n", ",", "\n", "\t", 
          RowBox[{"nsps", "=", 
           RowBox[{"{", "}"}]}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"evoeqns", "=", 
         RowBox[{"EvoEqns", "[", 
          RowBox[{"solin", ",", "Gs", ",", 
           RowBox[{"DInvOpts", "\[Rule]", "dinvopts"}], ",", 
           RowBox[{"DelayDInv", "\[Rule]", "delaydinv"}], ",", "opts", ",", 
           RowBox[{"\[ScriptCapitalN]s", "\[Rule]", "nsps"}]}], "]"}]}], ";", 
        "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], ",", 
          "\n", "\t", 
          RowBox[{"evoeqns", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"evoeqns", "/.", "RHS"}], "/.", 
               RowBox[{
                RowBox[{"var_", "[", "t", "]"}], "\[Rule]", "var"}]}], "/.", 
              "fixed"}], ")"}], "-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"evoeqns", "/.", "LHS"}], "/.", 
              RowBox[{
               RowBox[{"var_", "[", 
                RowBox[{"t", "+", "1"}], "]"}], "\[Rule]", "var"}]}], 
             ")"}]}]}], ",", "\n", "\t", 
          RowBox[{"evoeqns", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"evoeqns", "/.", "RHS"}], "/.", 
             RowBox[{
              RowBox[{"var_", "[", "t", "]"}], "\[Rule]", "var"}]}], "/.", 
            "fixed"}]}]}], "\n", "]"}], ";", "\n", "\t", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: evoeqns=\>\"", ",", "evoeqns"}], 
           "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"solin", "===", "\"\<FindEcoAttractor\>\""}], ",", "\n", 
          "\t", 
          RowBox[{
           RowBox[{
            RowBox[{"sol", "[", 
             RowBox[{
              RowBox[{"\[FormalX]_", "?", "NumericQ"}], ",", 
              RowBox[{"\[FormalY]_", "?", "NumericQ"}]}], "]"}], ":=", 
            RowBox[{
             RowBox[{"sol", "[", 
              RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"FindEcoAttractor", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                  RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}], ",", 
                RowBox[{"ICs", "->", "ics"}], ",", 
                RowBox[{"Time", "\[Rule]", "time"}], ",", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"Sequence", "@@", "findecoattractoropts"}], "]"}], 
                ",", 
                RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}], "/.",
               "fixed"}]}]}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"delaydinv", ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"dt", "[", 
               RowBox[{
                RowBox[{"\[FormalX]_", "?", "NumericQ"}], ",", 
                RowBox[{"\[FormalY]_", "?", "NumericQ"}]}], "]"}], ":=", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"x", ",", "y"}], "}"}], "=", 
                  RowBox[{"{", 
                   RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "}"}]}], ";", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"evoeqns", "/.", 
                    RowBox[{"\"\<FindEcoAttractor\>\"", "\[Rule]", 
                    RowBox[{"sol", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}]}], "/.", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Unk", "[", "trait1", "]"}], "\[Rule]", 
                    "\[FormalX]"}], ",", 
                    RowBox[{
                    RowBox[{"Unk", "[", "trait2", "]"}], "\[Rule]", 
                    "\[FormalY]"}]}], "}"}]}], "/.", 
                  RowBox[{"t", "\[Rule]", "time"}]}]}], ")"}], "\n", "\t\t", "/;", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                 "trait1min", "\[LessEqual]", "\[FormalX]", "\[LessEqual]", 
                  "trait1max"}], "&&", 
                 RowBox[{
                 "trait2min", "\[LessEqual]", "\[FormalY]", "\[LessEqual]", 
                  "trait2max"}], "&&", 
                 RowBox[{"\[FormalX]", "\[NotEqual]", "\[FormalY]"}]}], 
                ")"}]}]}], "\n", "\t", ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"dt", "[", 
               RowBox[{
                RowBox[{"\[FormalX]_", "?", "NumericQ"}], ",", 
                RowBox[{"\[FormalY]_", "?", "NumericQ"}]}], "]"}], ":=", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"x", ",", "y"}], "}"}], "=", 
                  RowBox[{"{", 
                   RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "}"}]}], ";", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"evoeqns", "/.", 
                    RowBox[{"sol", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], "/.", 
                   
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], "/.", 
                  RowBox[{"t", "\[Rule]", "time"}]}]}], ")"}], "\n", "\t\t", "/;", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                 "trait1min", "\[LessEqual]", "\[FormalX]", "\[LessEqual]", 
                  "trait1max"}], "&&", 
                 RowBox[{
                 "trait2min", "\[LessEqual]", "\[FormalY]", "\[LessEqual]", 
                  "trait2max"}], "&&", 
                 RowBox[{"\[FormalX]", "\[NotEqual]", "\[FormalY]"}]}], 
                ")"}]}]}]}], "\n", "\t", "]"}]}], "\n", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"dt", "[", 
            RowBox[{"\[FormalX]_", ",", "\[FormalY]_"}], "]"}], "=", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"evoeqns", "/.", "solin"}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
               RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
            ")"}]}]}], "\n", "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"sol", "[", 
            RowBox[{"12", ",", "18"}], "]"}], "]"}], ";", 
          RowBox[{"Print", "[", 
           RowBox[{"dt", "[", 
            RowBox[{"12", ",", "18"}], "]"}], "]"}], ";"}], "*)"}], "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"sol", "[", 
            RowBox[{"0.5", ",", "0"}], "]"}], "]"}], ";", 
          RowBox[{"Print", "[", 
           RowBox[{"dt", "[", 
            RowBox[{"0.5", ",", "0"}], "]"}], "]"}], ";"}], "*)"}], "\n", 
        "\n", 
        RowBox[{"If", "[", 
         RowBox[{"monitor", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"nb", "=", 
            RowBox[{"CreateDialog", "[", 
             RowBox[{
              RowBox[{"Grid", "[", 
               RowBox[{"{", "\n", "\t\t", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"ExpressionCell", "[", "trait1", "]"}], ",", 
                   RowBox[{"TextCell", "[", "\"\<=\>\"", "]"}], ",", 
                   RowBox[{"Dynamic", "[", "EcoEvo`Private`xmon", "]"}]}], 
                  "}"}], ",", "\n", "\t\t", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"ExpressionCell", "[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"tr2", "===", "tr1"}], ",", 
                    RowBox[{"SubscriptAdd", "[", 
                    RowBox[{"trait1", ",", "1"}], "]"}], ",", "trait2"}], 
                    "]"}], "]"}], ",", 
                   RowBox[{"TextCell", "[", "\"\<=\>\"", "]"}], ",", 
                   RowBox[{"Dynamic", "[", "EcoEvo`Private`ymon", "]"}]}], 
                  "}"}]}], "\n", "\t\t", "}"}], "]"}], ",", 
              RowBox[{
              "WindowTitle", "\[Rule]", 
               "\"\<PlotEvoStreams Progress...\>\""}], ",", 
              RowBox[{"WindowSize", "\[Rule]", "All"}]}], "]"}]}], ";"}]}], 
         "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"res", "=", 
         RowBox[{"MyStreamPlot", "[", 
          RowBox[{
           RowBox[{"dt", "[", 
            RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[FormalX]", ",", "trait1min", ",", "trait1max"}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"\[FormalY]", ",", "trait2min", ",", "trait2max"}], "}"}],
            ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"Sequence", "@@", "streamplotopts"}], "]"}]}], "]"}]}], 
        ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"monitor", ",", 
          RowBox[{"NotebookClose", "[", "nb", "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"Return", "[", "res", "]"}]}]}], "\n", "\n", "]"}]}], "]"}]}],
   ";"}]], "Code",
 CellChangeTimes->{
  3.687881459317306*^9, {3.68857169573272*^9, 3.688571699832582*^9}, {
   3.6885717687641973`*^9, 3.688571769815319*^9}, 3.688571807586783*^9, 
   3.6885856477291527`*^9, 3.689163998947294*^9, {3.689164089444407*^9, 
   3.689164107480112*^9}, {3.689164150393654*^9, 3.6891641625016527`*^9}, {
   3.6891642618456287`*^9, 3.6891642657560577`*^9}, {3.689164295974613*^9, 
   3.6891643404157333`*^9}, {3.689165062345914*^9, 3.6891650676351223`*^9}, {
   3.689174860486127*^9, 3.6891749178296947`*^9}, {3.689175257388966*^9, 
   3.6891752612883*^9}, {3.6892508042449627`*^9, 3.689250805276569*^9}, 
   3.689289445215261*^9, {3.6893692244211807`*^9, 3.6893692257056293`*^9}, {
   3.689375022610702*^9, 3.6893750419442797`*^9}, {3.689375397179755*^9, 
   3.689375398883882*^9}, 3.689376025533429*^9, {3.689376128139348*^9, 
   3.689376132689744*^9}, {3.6894557279945917`*^9, 3.6894558121801167`*^9}, 
   3.689455994177116*^9, {3.689544626356333*^9, 3.6895446319276876`*^9}, {
   3.689545239772163*^9, 3.689545263327778*^9}, {3.689546235391755*^9, 
   3.6895463352347517`*^9}, {3.6895469903923492`*^9, 
   3.6895470092246313`*^9}, {3.689547798817854*^9, 3.68954780087283*^9}, 
   3.689548920146737*^9, {3.6895499344106073`*^9, 3.689549950128428*^9}, {
   3.689550005890862*^9, 3.689550040118186*^9}, {3.689593464288136*^9, 
   3.6895935337479877`*^9}, {3.6895937933595448`*^9, 
   3.6895937956725187`*^9}, {3.689594141556076*^9, 3.689594142024276*^9}, {
   3.689594293335135*^9, 3.689594293664414*^9}, {3.689594446213599*^9, 
   3.689594446559062*^9}, 3.68959521157778*^9, {3.689595714743671*^9, 
   3.6895957183002377`*^9}, {3.689596709066866*^9, 3.689596727278599*^9}, {
   3.68959686228653*^9, 3.6895968652359123`*^9}, 3.6895970476903143`*^9, {
   3.6895981248991957`*^9, 3.689598137481123*^9}, 3.693593252202392*^9, {
   3.696162142396586*^9, 3.696162142454583*^9}, {3.696807902858117*^9, 
   3.696807917254232*^9}, {3.6968458180709667`*^9, 3.6968458220878983`*^9}, {
   3.696845912496077*^9, 3.6968459125081997`*^9}, {3.696846136982375*^9, 
   3.696846147850618*^9}, {3.696846572472251*^9, 3.696846575661442*^9}, {
   3.6968494913338013`*^9, 3.6968495064847193`*^9}, {3.696849731116643*^9, 
   3.696849738476735*^9}, {3.696849771380685*^9, 3.696849844686883*^9}, {
   3.696851561694058*^9, 3.696851571532259*^9}, {3.696851634199065*^9, 
   3.69685166000632*^9}, {3.696851709856124*^9, 3.696851732854135*^9}, {
   3.696851811809413*^9, 3.696851817647911*^9}, {3.69685272836476*^9, 
   3.6968527508462143`*^9}, {3.696853104071148*^9, 3.6968531513939457`*^9}, {
   3.696853658802146*^9, 3.6968537712826977`*^9}, {3.696853858699686*^9, 
   3.696853859154291*^9}, {3.696854253205824*^9, 3.696854268136705*^9}, {
   3.696870969601756*^9, 3.696871078263034*^9}, {3.696871185578061*^9, 
   3.696871205861805*^9}, {3.696871765844288*^9, 3.6968717712332363`*^9}, {
   3.696872416727644*^9, 3.6968724254329367`*^9}, {3.6968725135523033`*^9, 
   3.696872605983871*^9}, {3.6968727009601917`*^9, 3.696872725738758*^9}, {
   3.696872779594302*^9, 3.6968727908815393`*^9}, {3.696872865571706*^9, 
   3.696872869434085*^9}, {3.696874802623783*^9, 3.696874803796487*^9}, {
   3.696874953547793*^9, 3.696874978971532*^9}, {3.696875009655814*^9, 
   3.6968750326565228`*^9}, {3.696875063689205*^9, 3.6968750930709248`*^9}, 
   3.696875604986285*^9, {3.696875939007553*^9, 3.696875941201187*^9}, {
   3.6968760327696323`*^9, 3.6968760344775877`*^9}, {3.696876064615561*^9, 
   3.696876264188733*^9}, {3.696876356639462*^9, 3.6968764223815737`*^9}, 
   3.6968765244760523`*^9, {3.696876601007773*^9, 3.696876653297557*^9}, 
   3.696877038185253*^9, {3.699568322895866*^9, 3.699568346240407*^9}, {
   3.699571079030094*^9, 3.699571164836667*^9}, {3.6995714612017517`*^9, 
   3.699571465282988*^9}, {3.699571584406988*^9, 3.699571587199932*^9}, {
   3.699656092842185*^9, 3.699656156213704*^9}, {3.699656309483521*^9, 
   3.699656328710538*^9}, {3.699656615974526*^9, 3.699656649834816*^9}, {
   3.699656738523004*^9, 3.699656746287939*^9}, 3.699657491028714*^9, {
   3.6996575210770884`*^9, 3.6996575953200617`*^9}, {3.699657668163952*^9, 
   3.6996577365357637`*^9}, {3.699698329584014*^9, 3.699698333266828*^9}, {
   3.699704648253603*^9, 3.699704660465187*^9}, {3.699704733752638*^9, 
   3.699704747504199*^9}, {3.699718987616672*^9, 3.699718995463883*^9}, {
   3.6997223655205717`*^9, 3.699722365839596*^9}, {3.699722565755423*^9, 
   3.699722566059581*^9}, {3.7093368018236103`*^9, 3.709336803927597*^9}, {
   3.7101059882053947`*^9, 3.7101059888757563`*^9}, {3.7103244209318438`*^9, 
   3.7103244214598494`*^9}, 3.714059650380908*^9, 3.722029518287676*^9, {
   3.7220341508376713`*^9, 3.722034157151712*^9}, {3.722087728678488*^9, 
   3.7220877308896914`*^9}, {3.724166206374755*^9, 3.7241662081853857`*^9}, {
   3.724166253192452*^9, 3.724166255110552*^9}, {3.7280038512996473`*^9, 
   3.728003892367958*^9}, {3.728004307267541*^9, 3.7280043843331614`*^9}, {
   3.72800442325176*^9, 3.72800445337316*^9}, {3.728005083322426*^9, 
   3.72800510478011*^9}, {3.728005365177932*^9, 3.728005370878291*^9}, 
   3.728005453343403*^9, 3.728005489643017*^9, 3.7280055383555717`*^9, {
   3.728005587948308*^9, 3.728005592450006*^9}, {3.7280056474420233`*^9, 
   3.728005653212592*^9}, {3.72800583433388*^9, 3.728005852450213*^9}, 
   3.728006018148295*^9, {3.7280060591539173`*^9, 3.7280060622801113`*^9}, {
   3.7280061988404703`*^9, 3.7280062091355553`*^9}, {3.7280063678893347`*^9, 
   3.728006386987178*^9}, 3.72800657435277*^9, {3.728043139034319*^9, 
   3.728043163883629*^9}, {3.7280433346091022`*^9, 3.728043439209814*^9}, {
   3.728044197245846*^9, 3.7280442115447206`*^9}, {3.728044366863206*^9, 
   3.728044395005888*^9}, {3.728044630746955*^9, 3.7280446321754417`*^9}, {
   3.7280447440339108`*^9, 3.7280447560414553`*^9}, {3.728046200453339*^9, 
   3.728046201335771*^9}, {3.7280462618338003`*^9, 3.7280462924171743`*^9}, {
   3.728046529125313*^9, 3.728046572740513*^9}, {3.728046622023882*^9, 
   3.728046670845047*^9}, {3.728046748929489*^9, 3.728046798792678*^9}, 
   3.728047172635357*^9, {3.728052307371161*^9, 3.72805233621113*^9}, {
   3.728053024167614*^9, 3.728053025394663*^9}, {3.728053164725761*^9, 
   3.728053247104084*^9}, {3.728053287424868*^9, 3.728053317287438*^9}, {
   3.728053363936467*^9, 3.7280533648438253`*^9}, {3.728053783600178*^9, 
   3.728053802302272*^9}, {3.728055347004487*^9, 3.7280553507058563`*^9}, 
   3.7280556106527243`*^9, 3.7280560117048893`*^9, {3.728056440668682*^9, 
   3.728056453216343*^9}, {3.728056622462805*^9, 3.728056679442842*^9}, {
   3.7280573942361403`*^9, 3.728057431037519*^9}, {3.7280597222304*^9, 
   3.728059756695836*^9}, {3.728061315426276*^9, 3.728061316279722*^9}, {
   3.728061348678566*^9, 3.728061615928583*^9}, {3.728061671630785*^9, 
   3.7280617108092947`*^9}, {3.728061750432296*^9, 3.728061752624672*^9}, {
   3.728061794649104*^9, 3.7280618128799543`*^9}, {3.728061859766144*^9, 
   3.728061876822887*^9}, {3.728061985699325*^9, 3.728062006794723*^9}, {
   3.728062040913762*^9, 3.728062171025558*^9}, {3.72806221823498*^9, 
   3.728062218846109*^9}, 3.728062253934822*^9, {3.728062318851809*^9, 
   3.7280623878928823`*^9}, {3.7280625565482273`*^9, 3.728062572651226*^9}, {
   3.728062655076017*^9, 3.7280626554112463`*^9}, {3.7280639778241577`*^9, 
   3.728064004599683*^9}, {3.728089467207551*^9, 3.728089533878951*^9}, {
   3.728089697539517*^9, 3.728089751462469*^9}, 3.728089781965806*^9, {
   3.728090053507224*^9, 3.7280900844582767`*^9}, 3.728090122734415*^9, {
   3.728090331978689*^9, 3.7280903556324787`*^9}, {3.728092246771682*^9, 
   3.7280922613167343`*^9}, {3.728092302221819*^9, 3.728092330314117*^9}, {
   3.728093028380219*^9, 3.728093062164055*^9}, {3.728093102708228*^9, 
   3.728093106916766*^9}, {3.728404848714548*^9, 3.728404855872374*^9}, {
   3.728477819373911*^9, 3.728477820920945*^9}, {3.72883255779204*^9, 
   3.72883255848701*^9}, {3.729253872578898*^9, 3.729253929034142*^9}, {
   3.729254313421723*^9, 3.729254319892911*^9}, {3.729254356923203*^9, 
   3.72925437827731*^9}, {3.72925462412607*^9, 3.729254673844474*^9}, {
   3.729254712343627*^9, 3.72925471645168*^9}, {3.729254919933516*^9, 
   3.729254936208942*^9}, {3.7292552791769123`*^9, 3.729255296645142*^9}, {
   3.729255462984294*^9, 3.7292555198134604`*^9}, {3.729255676050005*^9, 
   3.7292556891370173`*^9}, {3.729256068021099*^9, 3.729256107921653*^9}, {
   3.7292561781473827`*^9, 3.729256323887013*^9}, {3.729256706678145*^9, 
   3.7292567082243853`*^9}, {3.729256948467464*^9, 3.729256992798711*^9}, {
   3.729257063798205*^9, 3.729257073875396*^9}, {3.729257459464819*^9, 
   3.729257473965167*^9}, {3.729257504969715*^9, 3.7292575360482616`*^9}, {
   3.729257606088381*^9, 3.729257630961657*^9}, {3.729257874465569*^9, 
   3.729257930110083*^9}, {3.729257989259652*^9, 3.7292579904668627`*^9}, {
   3.729258332228009*^9, 3.729258382594795*^9}, {3.729258445059969*^9, 
   3.7292584914356117`*^9}, 3.729260937534729*^9, {3.7292820771716022`*^9, 
   3.7292821252018023`*^9}, {3.7292822695662317`*^9, 
   3.7292822756691513`*^9}, {3.729286229041431*^9, 3.729286282005651*^9}, {
   3.729286360552631*^9, 3.729286437805565*^9}, {3.729292070148237*^9, 
   3.729292157523655*^9}, {3.7292921875247393`*^9, 3.729292266851425*^9}, {
   3.729292322389534*^9, 3.7292923610446253`*^9}, {3.729299328198251*^9, 
   3.729299331572461*^9}, {3.7553735296489887`*^9, 3.755373531763218*^9}, {
   3.755449224412355*^9, 3.755449239273074*^9}, 3.755449289324705*^9, {
   3.755449327978368*^9, 3.755449330144649*^9}, {3.7554493725936728`*^9, 
   3.755449386770793*^9}, {3.75544944697408*^9, 3.755449475389791*^9}, {
   3.7554496601192513`*^9, 3.755449668015806*^9}, {3.75544978262493*^9, 
   3.755449788419014*^9}, {3.755449991554192*^9, 3.755449997637231*^9}, {
   3.75545010745433*^9, 3.7554501208422937`*^9}, {3.76055140565132*^9, 
   3.7605514062898283`*^9}, {3.7605514653878202`*^9, 3.7605514654613657`*^9}, 
   3.760551569644559*^9, {3.760933238942268*^9, 3.760933242681723*^9}, {
   3.7610706425479813`*^9, 3.7610706567233467`*^9}, {3.761102283763722*^9, 
   3.761102288718136*^9}, {3.761102695780939*^9, 3.761102711090555*^9}, {
   3.761102777585607*^9, 3.76110278065973*^9}, {3.761103022960466*^9, 
   3.761103046145093*^9}, {3.761103463091921*^9, 3.761103468838018*^9}, {
   3.761129733308963*^9, 3.761129744914798*^9}, {3.7611298882839212`*^9, 
   3.761129888758209*^9}, {3.761132033498583*^9, 3.761132037483127*^9}, {
   3.7611323145781183`*^9, 3.761132314705493*^9}, {3.76113322520415*^9, 
   3.761133334191352*^9}, {3.761133457128921*^9, 3.761133471107335*^9}, {
   3.7611358851553993`*^9, 3.7611358925547047`*^9}, {3.761136988277781*^9, 
   3.761136993534601*^9}, {3.76113705058633*^9, 3.761137057153635*^9}, {
   3.7611371264917192`*^9, 3.761137216157003*^9}, {3.761137295950808*^9, 
   3.7611373291844273`*^9}, {3.7611373858875513`*^9, 
   3.7611373862259417`*^9}, {3.761151106812039*^9, 3.7611511271255817`*^9}, {
   3.761151377719071*^9, 3.761151393587839*^9}, {3.761151490490101*^9, 
   3.761151496799726*^9}, {3.761151529356579*^9, 3.7611515328083467`*^9}, {
   3.7611515638522*^9, 3.761151577441555*^9}, {3.761152303060618*^9, 
   3.7611523124915648`*^9}, {3.761415594930006*^9, 3.761415598493359*^9}, {
   3.761415654292605*^9, 3.761415670069194*^9}, {3.761416228270135*^9, 
   3.761416308987397*^9}, {3.76141655836272*^9, 3.761416569889577*^9}, {
   3.7614166110700274`*^9, 3.761416611306203*^9}, {3.7614166567003193`*^9, 
   3.761416693718834*^9}, {3.761416749649596*^9, 3.761416789902492*^9}, {
   3.761417270280198*^9, 3.761417281958435*^9}, {3.7614173802613287`*^9, 
   3.761417401278158*^9}, {3.7614175144641314`*^9, 3.761417517002947*^9}, {
   3.761417827494834*^9, 3.761417867418556*^9}, {3.7614179195117207`*^9, 
   3.761417923439682*^9}, {3.7614179608934917`*^9, 3.761417963078891*^9}, {
   3.761418119442384*^9, 3.761418196076902*^9}, 3.761418242640374*^9, {
   3.761453125090516*^9, 3.761453252913073*^9}, {3.761453298820245*^9, 
   3.761453322027216*^9}, {3.761453367114917*^9, 3.761453406150177*^9}, {
   3.761453483891713*^9, 3.7614535030304737`*^9}, {3.761454570852673*^9, 
   3.761454575749052*^9}, {3.761454666518984*^9, 3.761454727457087*^9}, {
   3.761454775839054*^9, 3.7614548234956207`*^9}, 3.761455047677888*^9, {
   3.761462372238613*^9, 3.7614624113979197`*^9}, {3.761462546924571*^9, 
   3.7614625593478107`*^9}, {3.761462695455152*^9, 3.761462708419334*^9}, {
   3.761462801502728*^9, 3.7614628073756647`*^9}, {3.7614630001521597`*^9, 
   3.761463022518424*^9}, {3.7614632873132544`*^9, 3.7614632905461884`*^9}, {
   3.7614635443223267`*^9, 3.761463552532805*^9}, {3.7614751825549707`*^9, 
   3.7614752552822227`*^9}, {3.7614754305432243`*^9, 3.761475441836795*^9}, {
   3.761476415736565*^9, 3.761476449447616*^9}, {3.761476507271706*^9, 
   3.761476524610423*^9}, {3.761476655889853*^9, 3.761476661126443*^9}, {
   3.761477514944913*^9, 3.761477555140828*^9}, {3.761477598141506*^9, 
   3.761477598289576*^9}, {3.761477970104639*^9, 3.7614779857169952`*^9}, {
   3.761478162102687*^9, 3.761478183456711*^9}, 3.761478800505653*^9, {
   3.761478861313855*^9, 3.761478869553273*^9}, {3.761478952720975*^9, 
   3.761478957718258*^9}, {3.7614790809587593`*^9, 3.761479081289381*^9}, {
   3.7614800602260237`*^9, 3.7614800603698378`*^9}, {3.7614905193837833`*^9, 
   3.761490521813573*^9}, {3.7614905577461863`*^9, 3.761490564370914*^9}, {
   3.761490651644093*^9, 3.7614906804947023`*^9}, {3.761490723568214*^9, 
   3.761490769244516*^9}, {3.761491027950815*^9, 3.7614911299617443`*^9}, {
   3.761492311454143*^9, 3.761492333893588*^9}, {3.7617150815934973`*^9, 
   3.761715081783017*^9}, {3.761715498121983*^9, 3.7617155454617643`*^9}, {
   3.761715588938072*^9, 3.761715606844146*^9}, {3.7617156373271627`*^9, 
   3.76171563930589*^9}, {3.761715746760109*^9, 3.761715767439452*^9}, {
   3.761715844106724*^9, 3.7617158994790907`*^9}, {3.761717177502842*^9, 
   3.761717179014241*^9}, 3.761729403126927*^9, {3.76172969179058*^9, 
   3.761729757606865*^9}, {3.761730042684717*^9, 3.7617300547205877`*^9}, {
   3.761756749747341*^9, 3.7617567531893682`*^9}, 3.7617568135627193`*^9, {
   3.76175690174349*^9, 3.761756918260594*^9}, {3.76175695833906*^9, 
   3.761757022432993*^9}, {3.761757285956711*^9, 3.7617572870193253`*^9}, {
   3.761757321745109*^9, 3.761757322726304*^9}, {3.761757434760957*^9, 
   3.7617574562762527`*^9}, {3.7617578899409237`*^9, 3.761757890412978*^9}, {
   3.761758268667658*^9, 3.761758291471895*^9}, {3.761802991757296*^9, 
   3.761803006871282*^9}, {3.761804251594338*^9, 3.761804252362475*^9}, {
   3.7618043250747347`*^9, 3.7618043576848907`*^9}, {3.761804758134721*^9, 
   3.7618047648892384`*^9}, {3.761804832277865*^9, 3.761804832561146*^9}, {
   3.7618048983261843`*^9, 3.761804918385195*^9}, {3.761804956310814*^9, 
   3.761804957018445*^9}, {3.7618076962424297`*^9, 3.761807732860153*^9}, {
   3.761807783864449*^9, 3.761807814865809*^9}, 3.761807845482255*^9, 
   3.761808071627858*^9, {3.761808121606545*^9, 3.7618081422188787`*^9}, {
   3.761808182339634*^9, 3.7618081939434566`*^9}, {3.7618082597038927`*^9, 
   3.7618083200489283`*^9}, {3.761808831330676*^9, 3.761808845860525*^9}, {
   3.761808899461314*^9, 3.7618089011465607`*^9}, {3.761808936300685*^9, 
   3.761808979845595*^9}, {3.761809280520056*^9, 3.761809281046575*^9}, 
   3.7618100970648823`*^9, 3.761810200896058*^9, {3.761810233638384*^9, 
   3.761810234904109*^9}, {3.76181081022331*^9, 3.76181081040629*^9}, {
   3.761810851060553*^9, 3.7618108693489923`*^9}, {3.761810921885532*^9, 
   3.761810972373811*^9}, {3.761813987243002*^9, 3.761814022347164*^9}, {
   3.761814054773971*^9, 3.7618142125232773`*^9}, {3.7618144673951263`*^9, 
   3.761814509699506*^9}, {3.761814690919201*^9, 3.761814691895241*^9}, {
   3.761814779046826*^9, 3.761814788407978*^9}, {3.761815101187446*^9, 
   3.7618151194088993`*^9}, 3.761816284562538*^9, {3.761816388085898*^9, 
   3.761816394079464*^9}, {3.761816488000355*^9, 3.761816495028288*^9}, {
   3.761816549371771*^9, 3.761816553667399*^9}, 3.761817357079413*^9, {
   3.761817472181638*^9, 3.761817512386451*^9}, {3.761817558290023*^9, 
   3.761817559958432*^9}, {3.761817604666174*^9, 3.761817607112604*^9}, {
   3.761817654821814*^9, 3.761817793162286*^9}, {3.76181784957813*^9, 
   3.761817852588122*^9}, {3.761817954874995*^9, 3.761817969482709*^9}, {
   3.7618180275349693`*^9, 3.761818031076407*^9}, {3.761818133679893*^9, 
   3.7618182034448347`*^9}, {3.761818651782239*^9, 3.761818672412387*^9}, 
   3.7618191548199368`*^9, {3.761819486209919*^9, 3.761819495866233*^9}, {
   3.761819740515374*^9, 3.761819782228488*^9}, {3.7618198183822803`*^9, 
   3.761819843034114*^9}, {3.761821013916881*^9, 3.761821018783016*^9}, {
   3.7618210758528976`*^9, 3.761821123550008*^9}, {3.7618214988828077`*^9, 
   3.761821514598362*^9}, {3.7618216010909147`*^9, 3.76182166870546*^9}, {
   3.76182181514391*^9, 3.7618218274570637`*^9}, {3.7618219304135*^9, 
   3.761821955400153*^9}, {3.761822003262072*^9, 3.761822033986326*^9}, {
   3.761822103369557*^9, 3.761822105418173*^9}, {3.7618221818809547`*^9, 
   3.761822202232772*^9}, {3.761822862774098*^9, 3.7618228633721523`*^9}, 
   3.761823004256073*^9, 3.761824473948645*^9, {3.761824856652445*^9, 
   3.761824919605061*^9}, {3.761824979600011*^9, 3.7618249928789454`*^9}, {
   3.76182536979766*^9, 3.761825420023913*^9}, {3.76182548611873*^9, 
   3.761825524934757*^9}, {3.7618259014570217`*^9, 3.761825923175807*^9}, {
   3.761826193858491*^9, 3.761826197209547*^9}, {3.761826273450151*^9, 
   3.761826290816469*^9}, {3.761828610111018*^9, 3.761828610392078*^9}, {
   3.761828642166408*^9, 3.761828643456668*^9}, {3.7618290451984987`*^9, 
   3.761829126513287*^9}, {3.7618291609778433`*^9, 3.761829162690365*^9}, {
   3.761829198883189*^9, 3.761829207000445*^9}, {3.761898772313314*^9, 
   3.7618987743489323`*^9}, {3.7619321681976*^9, 3.761932168218812*^9}, {
   3.761932225616261*^9, 3.761932225636387*^9}, {3.7619324329475718`*^9, 
   3.761932432968483*^9}, {3.7640623482468767`*^9, 3.764062366254319*^9}, 
   3.764062422047752*^9, {3.764062479905922*^9, 3.764062482253615*^9}, {
   3.764063305654182*^9, 3.764063305819326*^9}, {3.764063407059524*^9, 
   3.764063467464864*^9}, {3.7640635614224033`*^9, 3.764063563782687*^9}, 
   3.769185221846673*^9, 3.769760705926634*^9, 3.770438265232188*^9, {
   3.770721451754043*^9, 3.770721452540441*^9}, {3.774598074664448*^9, 
   3.7745980750294247`*^9}, {3.774598130685792*^9, 3.77459813880101*^9}, {
   3.77459838989319*^9, 3.774598424410096*^9}, {3.774598599228222*^9, 
   3.77459865656606*^9}, {3.774598736713179*^9, 3.774598787870865*^9}, {
   3.774598824768323*^9, 3.774598887984436*^9}, {3.774599875066922*^9, 
   3.774599879715576*^9}, {3.774600054581122*^9, 3.774600068377099*^9}, {
   3.7746036678652153`*^9, 3.7746036798804817`*^9}, {3.77460388733988*^9, 
   3.774603889311715*^9}, {3.774603923531184*^9, 3.774603994273391*^9}, {
   3.774604047869413*^9, 3.7746040511238956`*^9}, {3.774604489985203*^9, 
   3.774604541404098*^9}, {3.774604581258515*^9, 3.774604600720488*^9}, 
   3.7746047066419086`*^9, {3.774605391759136*^9, 3.774605418972822*^9}, {
   3.774606032925871*^9, 3.774606119925494*^9}, 3.774606176200919*^9, {
   3.774606209705659*^9, 3.774606209879318*^9}, {3.774606356185495*^9, 
   3.7746063679851427`*^9}, {3.774606704107394*^9, 3.774606709660537*^9}, {
   3.7746071945632544`*^9, 3.774607224360214*^9}, 3.794137241111203*^9, {
   3.807302211999111*^9, 3.8073022165973587`*^9}, {3.807302259517807*^9, 
   3.807302315909917*^9}, {3.828827743804772*^9, 3.828827748211452*^9}, {
   3.8288279850129967`*^9, 3.828827985483644*^9}, 
   3.844377432678878*^9},ExpressionUUID->"715cba62-30a3-474b-aa87-\
a195f2a53694"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotEvoStreams", "[", 
   RowBox[{
    RowBox[{"solin1", ":", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"_", "?", "RuleListQ"}], "|", 
       RowBox[{"_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"#", "\[Equal]", "\"\<FindEcoAttractor\>\""}], "&"}], 
         ")"}]}]}], ")"}], ":", "\"\<FindEcoAttractor\>\""}], ",", 
    RowBox[{"Gs_List", ":", 
     RowBox[{"{", "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"trait1_", ",", 
      RowBox[{"trait1min_", "?", "NumericQ"}], ",", 
      RowBox[{"trait1max_", "?", "NumericQ"}]}], "}"}], ",", 
    RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
  RowBox[{"PlotEvoStreams", "[", 
   RowBox[{"solin1", ",", "Gs", ",", 
    RowBox[{"{", 
     RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"SubscriptAdd", "[", "trait1", "]"}], ",", "trait1min", ",", 
      "trait1max"}], "}"}], ",", "opts"}], "]"}]}]], "Code",
 CellChangeTimes->{{3.72840354707022*^9, 3.7284035571377773`*^9}, {
  3.728403598467949*^9, 3.728403638407946*^9}, {3.728404200503545*^9, 
  3.728404204503395*^9}, {3.728404478589267*^9, 3.7284045181220627`*^9}, {
  3.7284057161507187`*^9, 
  3.728405720828651*^9}},ExpressionUUID->"eb3e3a2f-0b40-4a2f-ba7a-\
ee449062cb0e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.728832562837758*^9, 
  3.728832563540484*^9}},ExpressionUUID->"d880ed02-37db-4bbf-b78a-\
3080d1645452"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PlotEvoStreams", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Time", "\[Rule]", "t"}], ",", 
     RowBox[{"FindEcoAttractorOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"DInvOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"DelayDInv", "\[Rule]", "False"}], ",", "\n", 
     RowBox[{"FrameLabel", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"StreamColorFunction", "\[Rule]", "None"}], ",", 
     RowBox[{"StreamStyle", "\[Rule]", "Gray"}], ",", "\n", 
     RowBox[{"UseSymmetry", "\[Rule]", "False"}], ",", 
     RowBox[{"FitnessGradient", "\[Rule]", "\"\<DInv\>\""}], ",", 
     RowBox[{"ICs", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"EvoEquation", "\[Rule]", "\"\<QG\>\""}], ",", 
     RowBox[{"EcoAttractorNumber", "\[Rule]", "1"}], ",", 
     RowBox[{"TraitShiftRate", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", 
     RowBox[{"Monitor", "\[Rule]", "False"}], ",", 
     RowBox[{"PrintTrace", "\[Rule]", "False"}], ",", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.761818176666605*^9, 3.761818180644987*^9}, {
   3.7802989769423447`*^9, 3.780298981083832*^9}, 
   3.818111929862782*^9},ExpressionUUID->"d9f621e1-ad11-4969-a3b9-\
73b458cc9c96"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["PlotEvoIsoclines", "Subsection",ExpressionUUID->"95908736-6e20-4608-8281-6142e72c8099"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"c85c3eea-b8ab-4ed1-8a0d-\
55b061f818fc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotEvoIsoclines", "::", "usage"}], "=", "\n", 
   "\"\<PlotEvoIsoclines[{\!\(\*StyleBox[\"trait1\", \"TI\"]\), \
\!\(\*StyleBox[\"trait1min\", \"TI\"]\), \!\(\*StyleBox[\"trait1max\", \
\"TI\"]\)}] plots two-species evolutionary isoclines.\n\
PlotEvoIsoclines[\!\(\*StyleBox[\"sol\", \"TI\"]\), \
{\!\(\*StyleBox[\"trait1\", \"TI\"]\), \!\(\*StyleBox[\"trait1min\", \
\"TI\"]\), \!\(\*StyleBox[\"trait1max\", \"TI\"]\)}] uses two-species \
ecological equilibrium \!\(\*StyleBox[\"sol\", \"TI\"]\) for improved speed.\n\
PlotEvoIsoclines[{\!\(\*StyleBox[\"trait1\", \"TI\"]\), \
\!\(\*StyleBox[\"trait1min\", \"TI\"]\), \!\(\*StyleBox[\"trait1max\", \
\"TI\"]\)}, {\!\(\*StyleBox[\"trait2\", \"TI\"]\), \!\(\*StyleBox[\"trait2min\
\", \"TI\"]\), \!\(\*StyleBox[\"trait2max\", \"TI\"]\)}] allows for two \
different traits.\nPlotEvoIsoclines[\!\(\*StyleBox[\"sol\", \"TI\"]\), \
{\!\(\*StyleBox[\"trait1\", \"TI\"]\), \!\(\*StyleBox[\"trait1min\", \
\"TI\"]\), \!\(\*StyleBox[\"trait1max\", \"TI\"]\)}, {\!\(\*StyleBox[\"trait2\
\", \"TI\"]\), \!\(\*StyleBox[\"trait2min\", \"TI\"]\), \
\!\(\*StyleBox[\"trait2max\", \"TI\"]\)}] uses ecological equilibrium \
\!\(\*StyleBox[\"sol\", \"TI\"]\).\nPlotEvoStreams[\!\(\*StyleBox[\"sol\", \
\"TI\"]\), \!\(\*StyleBox[\"varcovars\", \"TI\"]\), \
{\!\(\*StyleBox[\"trait1\", \"TI\"]\), \!\(\*StyleBox[\"trait1min\", \
\"TI\"]\), \!\(\*StyleBox[\"trait1max\", \"TI\"]\)}, {\!\(\*StyleBox[\"trait2\
\", \"TI\"]\), \!\(\*StyleBox[\"trait2min\", \"TI\"]\), \
\!\(\*StyleBox[\"trait2max\", \"TI\"]\)}] uses trait variances/covariances in \
\!\(\*StyleBox[\"varcovars\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769490138368745*^9, 3.769490148322646*^9}, {
  3.7694902866505623`*^9, 
  3.769490290476427*^9}},ExpressionUUID->"019af163-2da8-4766-859f-\
dcbbf8403f5d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"1d13d006-1ef8-4b8e-bbc9-\
0b6ca8be434e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotEvoIsoclines", "[", 
    RowBox[{
     RowBox[{"solin", ":", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"_", "?", "RuleListQ"}], "|", 
        RowBox[{"_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#", "\[Equal]", "\"\<FindEcoAttractor\>\""}], "&"}], 
          ")"}]}]}], ")"}], ":", "\"\<FindEcoAttractor\>\""}], ",", 
     RowBox[{"Gs_List", ":", 
      RowBox[{"{", "}"}]}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"trait1_", ",", 
       RowBox[{"trait1min_", "?", "NumericQ"}], ",", 
       RowBox[{"trait1max_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"trait2_", ",", 
       RowBox[{"trait2min_", "?", "NumericQ"}], ",", 
       RowBox[{"trait2max_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<PlotEvoIsoclines\>\"", "]"}]}], ",", 
       "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "fixed", ",", "time", ",", "\n", "monitor", ",", 
       "printtrace", ",", "dinvopts", ",", "findecoattractoropts", ",", 
       "plotopts", ",", "framelabel", ",", "ics", ",", "ecoattnum", ",", "\n",
        "estest", ",", "isoclinestyle", ",", "delaydinv", ",", "delaydinv2", 
       ",", "dinv2opts", ",", "excludediagonal", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "nb", ",", 
       "evoeqns", ",", "\n", "ics1", ",", "nsps", ",", "color1", ",", 
       "color1es", ",", "color1nes", ",", "color2", ",", "color2es", ",", 
       "color2nes", ",", "style1", ",", "style1es", ",", "style1nes", ",", 
       "style2", ",", "style2es", ",", "style2nes", ",", "\n", "sol", ",", 
       "dt", ",", "dinv21", ",", "dinv22", ",", "gu1", ",", "tr1", ",", "sp1",
        ",", "gu2", ",", "tr2", ",", "sp2", ",", "pre1", ",", "pre2", ",", 
       "iso1", ",", "iso2"}], "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"monitor", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Monitor", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"printtrace", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PrintTrace", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"fixed", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Fixed", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"time", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Time", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"findecoattractoropts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"FindEcoAttractorOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"dinvopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"DInvOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"plotopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PlotOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"framelabel", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"FrameLabel", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"ics", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"ICs", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"ecoattnum", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"EcoAttractorNumber", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"estest", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"ESTest", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"isoclinestyle", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"IsoclineStyle", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"delaydinv", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"DelayDInv", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"delaydinv2", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"DelayDInv2", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"dinv2opts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"DInv2Opts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"excludediagonal", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"ExcludeDiagonal", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "figure", " ", "out", " ", "what", " ", "are", " ", "the", " ", 
           "traits", " ", "on", " ", "the", " ", "x"}], "-", " ", 
          RowBox[{"and", " ", "y"}], "-", "axes"}], " ", "*)"}], "\n", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"gu1", ",", "tr1", ",", "sp1"}], "}"}], "=", 
         RowBox[{
          RowBox[{"LookUp", "[", "trait1", "]"}], "\[LeftDoubleBracket]", 
          RowBox[{"2", ";;", "4"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"gu2", ",", "tr2", ",", "sp2"}], "}"}], "=", 
         RowBox[{
          RowBox[{"LookUp", "[", "trait2", "]"}], "\[LeftDoubleBracket]", 
          RowBox[{"2", ";;", "4"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"excludediagonal", "&&", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"gu1", ",", "tr1"}], "}"}], "\[Equal]", 
            RowBox[{"{", 
             RowBox[{"gu2", ",", "tr2"}], "}"}]}]}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"plotopts", ",", 
            RowBox[{"Exclusions", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\[FormalX]", "\[Equal]", "\[FormalY]"}], "}"}]}]}], 
           "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"isoclinestyle", "===", "Automatic"}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"color1es", "=", 
            RowBox[{"color1nes", "=", 
             RowBox[{"color1", "=", 
              RowBox[{
               RowBox[{"color", "[", "trait1", "]"}], "[", "0", "]"}]}]}]}], 
           ";", "\n", "\t", 
           RowBox[{"color2es", "=", 
            RowBox[{"color2nes", "=", 
             RowBox[{"color2", "=", 
              RowBox[{
               RowBox[{"color", "[", "trait2", "]"}], "[", "1", "]"}]}]}]}], 
           ";", "\n", "\t", 
           RowBox[{"style1es", "=", "Thick"}], ";", 
           RowBox[{"style1nes", "=", "Thin"}], ";", 
           RowBox[{"style1", "=", 
            RowBox[{"Thickness", "[", "Medium", "]"}]}], ";", "\n", "\t", 
           RowBox[{"style2es", "=", "Thick"}], ";", 
           RowBox[{"style2nes", "=", "Thin"}], ";", 
           RowBox[{"style2", "=", 
            RowBox[{"Thickness", "[", "Medium", "]"}]}], ";"}], "\n", ",", 
          "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"ListQ", "[", 
              RowBox[{
              "isoclinestyle", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}], "]"}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"color1es", "=", 
               RowBox[{"ExtractColors", "[", 
                RowBox[{"isoclinestyle", "\[LeftDoubleBracket]", 
                 RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}], 
              ";", "\n", "\t\t", 
              RowBox[{"color1nes", "=", 
               RowBox[{"ExtractColors", "[", 
                RowBox[{"isoclinestyle", "\[LeftDoubleBracket]", 
                 RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}]}], 
              ";", "\n", "\t\t", 
              RowBox[{"style1es", "=", 
               RowBox[{"Complement", "[", 
                RowBox[{
                 RowBox[{"isoclinestyle", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                 "color1es"}], "]"}]}], ";", "\n", "\t\t", 
              RowBox[{"style1nes", "=", 
               RowBox[{"Complement", "[", 
                RowBox[{
                 RowBox[{"isoclinestyle", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                 "color1nes"}], "]"}]}], ";"}], "\n", "\t", ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"color1", "=", 
               RowBox[{"ExtractColors", "[", 
                RowBox[{
                "isoclinestyle", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "]"}]}], ";", "\n", "\t\t", 
              RowBox[{"style1", "=", 
               RowBox[{"Complement", "[", 
                RowBox[{
                 RowBox[{"isoclinestyle", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                 "color1"}], "]"}]}], ";"}]}], "\n", "\t", "]"}], ";", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"ListQ", "[", 
              RowBox[{
              "isoclinestyle", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}], "]"}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"color2es", "=", 
               RowBox[{"ExtractColors", "[", 
                RowBox[{"isoclinestyle", "\[LeftDoubleBracket]", 
                 RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}], 
              ";", "\n", "\t\t", 
              RowBox[{"color2nes", "=", 
               RowBox[{"ExtractColors", "[", 
                RowBox[{"isoclinestyle", "\[LeftDoubleBracket]", 
                 RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "]"}]}], 
              ";", "\n", "\t\t", 
              RowBox[{"style2es", "=", 
               RowBox[{"Complement", "[", 
                RowBox[{
                 RowBox[{"isoclinestyle", "\[LeftDoubleBracket]", 
                  RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                 "color2es"}], "]"}]}], ";", "\n", "\t\t", 
              RowBox[{"style2nes", "=", 
               RowBox[{"Complement", "[", 
                RowBox[{
                 RowBox[{"isoclinestyle", "\[LeftDoubleBracket]", 
                  RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                 "color2nes"}], "]"}]}], ";"}], "\n", "\t", ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"color2", "=", 
               RowBox[{"ExtractColors", "[", 
                RowBox[{
                "isoclinestyle", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}], "]"}]}], ";", "\n", "\t\t", 
              RowBox[{"style2", "=", 
               RowBox[{"Complement", "[", 
                RowBox[{
                 RowBox[{"isoclinestyle", "\[LeftDoubleBracket]", 
                  RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                 "color2"}], "]"}]}], ";"}]}], "\n", "\t", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"framelabel", "===", "Automatic"}], ",", "\n", "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"trait2", "===", "trait1"}], ",", "\n", "\t\t", 
            RowBox[{"framelabel", "=", 
             RowBox[{"{", 
              RowBox[{"trait1", ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{"tr1", ",", 
                 RowBox[{"sp1", "+", "1"}]}], "]"}]}], "}"}]}], ",", "\n", 
            "\t\t", 
            RowBox[{"framelabel", "=", 
             RowBox[{"{", 
              RowBox[{"trait1", ",", "trait2"}], "}"}]}]}], "\n", "\t", 
           "]"}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"set", " ", "up", " ", "sol"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"solin", "===", "\"\<FindEcoAttractor\>\""}], ",", "\n", 
          "\t", 
          RowBox[{
           RowBox[{"delaydinv2", "=", "True"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"ics", "\[Equal]", 
              RowBox[{"{", "}"}]}], ",", "\n", "\t\t", 
             RowBox[{"(*", " ", 
              RowBox[{
              "figure", " ", "out", " ", "number", " ", "of", " ", "species", 
               " ", "in", " ", "guilds"}], " ", "*)"}], "\n", "\t\t", 
             RowBox[{
              RowBox[{"Set\[ScriptCapitalN]", "[", 
               RowBox[{"Join", "[", 
                RowBox[{"fixed", ",", 
                 RowBox[{"{", 
                  RowBox[{"trait1", "\[Rule]", "trait1"}], "}"}]}], "]"}], 
               "]"}], ";", "\n", "\t\t", 
              RowBox[{"ics1", "=", "DefaultICs"}], ";", "\n", "\t\t", 
              RowBox[{"Set\[ScriptCapitalN]", "[", 
               RowBox[{"Join", "[", 
                RowBox[{"fixed", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"trait1", "\[Rule]", "trait1"}], ",", 
                   RowBox[{"trait2", "\[Rule]", "trait2"}]}], "}"}]}], "]"}], 
               "]"}], ";", "\n", "\t\t", 
              RowBox[{"nsps", "=", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], ";", "\n", 
              "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{"Global`debug", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{
                 "func", ",", "\"\<: \[ScriptCapitalN]=\>\"", ",", "nsps"}], 
                 "]"}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{"ics", "=", "DefaultICs"}], ";"}]}], "\n", "\t", "]"}], 
           ";", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{"handle", " ", "diagonal"}], " ", "*)"}], "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"gu1", ",", "tr1"}], "}"}], "\[Equal]", 
              RowBox[{"{", 
               RowBox[{"gu2", ",", "tr2"}], "}"}]}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"sol", "[", 
               RowBox[{
                RowBox[{"\[FormalX]_", "?", "NumberQ"}], ",", 
                RowBox[{"\[FormalX]_", "?", "NumberQ"}]}], "]"}], ":=", 
              RowBox[{
               RowBox[{"sol", "[", 
                RowBox[{"\[FormalX]", ",", "\[FormalX]"}], "]"}], "=", 
               RowBox[{"Module", "[", 
                RowBox[{
                 RowBox[{"{", "result", "}"}], ",", "\n", "\t\t\t", 
                 RowBox[{
                  RowBox[{"result", "=", 
                   RowBox[{"FindEcoAttractor", "[", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"{", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], "}"}]}], 
                    "]"}], ",", 
                    RowBox[{"ICs", "->", "ics1"}], ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "findecoattractoropts"}], "]"}],
                     ",", 
                    RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], 
                    "]"}]}], ";", "\n", "\t\t\t", 
                  RowBox[{"Return", "[", 
                   RowBox[{"Join", "[", 
                    RowBox[{"result", ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"gcomp", ",", "sp2"}], "]"}], "\[Rule]", "0"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"gcomp", ",", 
                    RowBox[{"gcomps", "[", "gu1", "]"}]}], "}"}]}], "]"}]}], 
                    "]"}], "]"}]}]}], "\n", "\t\t", "]"}]}]}]}], "\n", "\t", 
            "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"tr", "=", 
                  RowBox[{"Join", "[", 
                   RowBox[{"fixed", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
                   "]"}]}], ",", 
                 RowBox[{"ics", "=", "ics"}], ",", 
                 RowBox[{"time", "=", "time"}], ",", 
                 RowBox[{"op", "=", 
                  RowBox[{"Sequence", "@@", "findecoattractoropts"}]}]}], 
                "}"}], ",", "\n", "\t\t\t", 
               RowBox[{"PrintCall", "[", 
                RowBox[{
                 RowBox[{"Global`sol", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}], ",", 
                   RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}]}], "]"}], ":=", 
                 RowBox[{
                  RowBox[{"Global`sol", "[", 
                   RowBox[{"System`\[FormalX]", ",", "System`\[FormalY]"}], 
                   "]"}], "=", "\n", "\t\t\t", 
                  RowBox[{"FindEcoAttractor", "[", 
                   RowBox[{"tr", ",", 
                    RowBox[{"ICs", "->", "ics"}], ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", "op"}], 
                   "]"}]}]}], "]"}]}], "]"}]}], "\n", "\t", "]"}], ";", "\n", 
           "\t", 
           RowBox[{
            RowBox[{"sol", "[", 
             RowBox[{
              RowBox[{"\[FormalX]_", "?", "NumberQ"}], ",", 
              RowBox[{"\[FormalY]_", "?", "NumberQ"}]}], "]"}], ":=", 
            RowBox[{
             RowBox[{"sol", "[", 
              RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "=", 
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", "result", "}"}], ",", "\n", "\t\t", 
               RowBox[{
                RowBox[{"result", "=", 
                 RowBox[{"FindEcoAttractor", "[", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
                    "]"}], ",", 
                   RowBox[{"ICs", "->", "ics"}], ",", 
                   RowBox[{"Time", "\[Rule]", "time"}], ",", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "findecoattractoropts"}], "]"}],
                    ",", 
                   RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}],
                 ";", "\n", "\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{"printtrace", ",", 
                  RowBox[{"Print", "[", 
                   RowBox[{"\"\<FindEcoAttractor \>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}], 
                    ",", "\"\<=\>\"", ",", "result"}], "]"}]}], "]"}], ";", 
                "\n", "\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"ArrayDepth", "[", "result", "]"}], "<", "2"}], 
                  ",", 
                  RowBox[{"Return", "[", "result", "]"}], ",", 
                  RowBox[{
                   RowBox[{"Print", "[", 
                    RowBox[{"result", ",", "\"\< \>\"", ",", 
                    RowBox[{"ArrayDepth", "[", "result", "]"}]}], "]"}], ";", 
                   
                   RowBox[{"Return", "[", 
                    RowBox[{
                    "result", "\[LeftDoubleBracket]", "ecoattnum", 
                    "\[RightDoubleBracket]"}], "]"}]}]}], "]"}]}]}], "\n", 
              "\t", "]"}]}]}], ";"}], "\n", ",", " ", 
          RowBox[{"(*", " ", 
           RowBox[{"sol", " ", "given"}], " ", "*)"}], "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"PrintCall", "[", 
              RowBox[{
               RowBox[{"Global`sol", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", "System`\[FormalX]", ")"}], "_"}], ",", 
                 RowBox[{
                  RowBox[{"(", "System`\[FormalY]", ")"}], "_"}]}], "]"}], 
               "=", 
               RowBox[{"solin", "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                  RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}]}], 
              "]"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{
            RowBox[{"sol", "[", 
             RowBox[{"\[FormalX]_", ",", "\[FormalY]_"}], "]"}], "=", 
            RowBox[{"solin", "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
               RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}]}], ";", 
           "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{
              "func", ",", "\"\<: sol[\[FormalX],\[FormalY]]=\>\"", ",", 
               RowBox[{"sol", "[", 
                RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], "]"}]}], 
            "]"}]}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"evoeqns", "=", 
         RowBox[{"EvoEqns", "[", 
          RowBox[{"solin", ",", "Gs", ",", 
           RowBox[{"DInvOpts", "\[Rule]", "dinvopts"}], ",", 
           RowBox[{"DelayDInv", "\[Rule]", "delaydinv"}], ",", "opts", ",", 
           RowBox[{"\[ScriptCapitalN]s", "\[Rule]", "nsps"}]}], "]"}]}], ";", 
        "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], ",", 
          "\n", "\t", 
          RowBox[{"evoeqns", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"evoeqns", "/.", "RHS"}], "/.", 
               RowBox[{
                RowBox[{"var_", "[", "t", "]"}], "\[Rule]", "var"}]}], "/.", 
              "fixed"}], ")"}], "-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"evoeqns", "/.", "LHS"}], "/.", 
              RowBox[{
               RowBox[{"var_", "[", 
                RowBox[{"t", "+", "1"}], "]"}], "\[Rule]", "var"}]}], 
             ")"}]}]}], ",", "\n", "\t", 
          RowBox[{"evoeqns", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"evoeqns", "/.", "RHS"}], "/.", 
             RowBox[{
              RowBox[{"var_", "[", "t", "]"}], "\[Rule]", "var"}]}], "/.", 
            "fixed"}]}]}], "\n", "]"}], ";", "\n", "\t", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: evoeqns=\>\"", ",", "evoeqns"}], 
           "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"solin", "===", "\"\<FindEcoAttractor\>\""}], ",", "\n", 
          "\t", 
          RowBox[{"If", "[", 
           RowBox[{"delaydinv", ",", "\n", "\t\t", 
            RowBox[{
             RowBox[{"dt", "[", 
              RowBox[{
               RowBox[{"\[FormalX]_", "?", "NumericQ"}], ",", 
               RowBox[{"\[FormalY]_", "?", "NumericQ"}]}], "]"}], ":=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"dt", "[", 
                 RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{
                  RowBox[{"evoeqns", "/.", 
                   RowBox[{"\"\<FindEcoAttractor\>\"", "\[Rule]", 
                    RowBox[{"sol", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}]}], "/.", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Unk", "[", "trait1", "]"}], "\[Rule]", 
                    "\[FormalX]"}], ",", 
                    RowBox[{
                    RowBox[{"Unk", "[", "trait2", "]"}], "\[Rule]", 
                    "\[FormalY]"}]}], "}"}]}], "/.", 
                 RowBox[{"t", "\[Rule]", "time"}]}]}], ")"}], "\n", "\t\t", "/;", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "trait1min", "\[LessEqual]", "\[FormalX]", "\[LessEqual]", 
                 "trait1max"}], "&&", 
                RowBox[{
                "trait2min", "\[LessEqual]", "\[FormalY]", "\[LessEqual]", 
                 "trait2max"}], "&&", 
                RowBox[{"\[FormalX]", "\[NotEqual]", "\[FormalY]"}]}], 
               ")"}]}]}], "\n", "\t", ",", "\n", "\t\t", 
            RowBox[{
             RowBox[{"dt", "[", 
              RowBox[{
               RowBox[{"\[FormalX]_", "?", "NumericQ"}], ",", 
               RowBox[{"\[FormalY]_", "?", "NumericQ"}]}], "]"}], ":=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"dt", "[", 
                 RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{
                  RowBox[{"evoeqns", "/.", 
                   RowBox[{"sol", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], "/.", 
                  
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], "/.", 
                 RowBox[{"t", "\[Rule]", "time"}]}]}], ")"}], "\n", "\t\t", "/;", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "trait1min", "\[LessEqual]", "\[FormalX]", "\[LessEqual]", 
                 "trait1max"}], "&&", 
                RowBox[{
                "trait2min", "\[LessEqual]", "\[FormalY]", "\[LessEqual]", 
                 "trait2max"}], "&&", 
                RowBox[{"\[FormalX]", "\[NotEqual]", "\[FormalY]"}]}], 
               ")"}]}]}]}], "\n", "\t", "]"}], "\n", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"dt", "[", 
            RowBox[{"\[FormalX]_", ",", "\[FormalY]_"}], "]"}], "=", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"evoeqns", "/.", "solin"}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
               RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
            ")"}]}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<solin=\>\"", ",", "solin"}], "]"}], ";", "\n", 
          RowBox[{"Print", "[", 
           RowBox[{"sol", "[", 
            RowBox[{"0.1", ",", "0.2"}], "]"}], "]"}], ";", "\n", 
          RowBox[{"Print", "[", 
           RowBox[{"dt", "[", 
            RowBox[{"0.1", ",", "0.2"}], "]"}], "]"}], ";"}], "*)"}], "\n", 
        "\n", 
        RowBox[{"If", "[", 
         RowBox[{"monitor", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"nb", "=", 
            RowBox[{"CreateDialog", "[", 
             RowBox[{
              RowBox[{"Grid", "[", 
               RowBox[{"{", "\n", "\t\t", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"ExpressionCell", "[", "trait1", "]"}], ",", 
                   RowBox[{"TextCell", "[", "\"\<=\>\"", "]"}], ",", 
                   RowBox[{"Dynamic", "[", "EcoEvo`Private`xmon", "]"}]}], 
                  "}"}], ",", "\n", "\t\t", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"ExpressionCell", "[", "trait2", "]"}], ",", 
                   RowBox[{"TextCell", "[", "\"\<=\>\"", "]"}], ",", 
                   RowBox[{"Dynamic", "[", "EcoEvo`Private`ymon", "]"}]}], 
                  "}"}]}], "\n", "\t\t", "}"}], "]"}], ",", 
              RowBox[{
              "WindowTitle", "\[Rule]", 
               "\"\<PlotEvoIsoclines Progress...\>\""}], ",", 
              RowBox[{"WindowSize", "\[Rule]", "All"}]}], "]"}]}], ";"}]}], 
         "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"iso1", "=", 
         RowBox[{"ContourPlot", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"EcoEvo`Private`xmon", ",", "EcoEvo`Private`ymon"}], 
               "}"}], "=", 
              RowBox[{"{", 
               RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "}"}]}], ";", 
             RowBox[{
              RowBox[{"dt", "[", 
               RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], 
              "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ")"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"\[FormalX]", ",", "trait1min", ",", "trait1max"}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"\[FormalY]", ",", "trait2min", ",", "trait2max"}], "}"}],
            ",", "\n", "\t", 
           RowBox[{"Contours", "\[Rule]", 
            RowBox[{"{", "0", "}"}]}], ",", 
           RowBox[{"ContourShading", "\[Rule]", "False"}], ",", 
           RowBox[{"ContourStyle", "\[Rule]", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"color1", ",", "style1"}], "}"}], "]"}]}], ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
           RowBox[{"ContourLabels", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"None", ",", 
              RowBox[{
               RowBox[{"Tooltip", "[", 
                RowBox[{"Null", ",", "trait1"}], "]"}], "&"}]}], "}"}]}]}], 
          "\n", "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", "iso1", "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "add", " ", "flip", " ", "option", " ", "to", " ", "save", " ", "50",
           "%", " ", "time"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"iso2", "=", 
         RowBox[{"ContourPlot", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"EcoEvo`Private`xmon", ",", "EcoEvo`Private`ymon"}], 
               "}"}], "=", 
              RowBox[{"{", 
               RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "}"}]}], ";", 
             RowBox[{
              RowBox[{"dt", "[", 
               RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], 
              "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ")"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"\[FormalX]", ",", "trait1min", ",", "trait1max"}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"\[FormalY]", ",", "trait2min", ",", "trait2max"}], "}"}],
            ",", "\n", "\t", 
           RowBox[{"Contours", "\[Rule]", 
            RowBox[{"{", "0", "}"}]}], ",", 
           RowBox[{"ContourShading", "\[Rule]", "False"}], ",", 
           RowBox[{"ContourStyle", "\[Rule]", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"color2", ",", "style2"}], "}"}], "]"}]}], ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
           RowBox[{"ContourLabels", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"None", ",", 
              RowBox[{
               RowBox[{"Tooltip", "[", 
                RowBox[{"Null", ",", "trait2"}], "]"}], "&"}]}], "}"}]}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", "iso2", "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"monitor", ",", 
          RowBox[{"NotebookClose", "[", "nb", "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"estest", "\[Equal]", "False"}], ",", "\n", "\t", 
          RowBox[{"Return", "[", 
           RowBox[{"Show", "[", 
            RowBox[{"iso1", ",", "iso2", ",", 
             RowBox[{"FrameLabel", "\[Rule]", "framelabel"}]}], "]"}], 
           "]"}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"ESTest", "\[Equal]", "True"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"delaydinv2", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"tr", "=", 
                  RowBox[{"Join", "[", 
                   RowBox[{"fixed", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
                   "]"}]}], ",", 
                 RowBox[{"so", "=", 
                  RowBox[{"sol", "[", 
                   RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], ",", 
                 "\n", "\t\t\t", 
                 RowBox[{"trinv1", "=", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"tr1", ",", "0"}], "]"}], ",", "2"}], "}"}]}], 
                 ",", 
                 RowBox[{"trinv2", "=", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"tr2", ",", "0"}], "]"}], ",", "2"}], "}"}]}], 
                 ",", 
                 RowBox[{"time", "=", "time"}], ",", 
                 RowBox[{"op", "=", 
                  RowBox[{"Sequence", "@@", "dinvopts"}]}]}], "}"}], ",", 
               "\n", "\t\t\t", 
               RowBox[{
                RowBox[{"PrintCall", "[", 
                 RowBox[{
                  RowBox[{"Global`dinv21", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}]}], "]"}], ":=", 
                  RowBox[{
                   RowBox[{"Global`dinv21", "[", 
                    RowBox[{"System`\[FormalX]", ",", "System`\[FormalY]"}], 
                    "]"}], "=", "\n", "\t\t\t\t", 
                   RowBox[{"DInv", "[", 
                    RowBox[{"tr", ",", "so", ",", "trinv1", ",", "ts1", ",", 
                    RowBox[{"Method", "\[Rule]", "\"\<NDInv\>\""}], ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", "op"}], 
                    "]"}]}]}], "]"}], ";", "\n", "\t\t\t", 
                RowBox[{"PrintCall", "[", 
                 RowBox[{
                  RowBox[{"Global`dinv22", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}]}], "]"}], ":=", 
                  RowBox[{
                   RowBox[{"Global`dinv22", "[", 
                    RowBox[{"System`\[FormalX]", ",", "System`\[FormalY]"}], 
                    "]"}], "=", "\n", "\t\t\t\t", 
                   RowBox[{"DInv", "[", 
                    RowBox[{"tr", ",", "so", ",", "trinv2", ",", "ts2", ",", 
                    RowBox[{"Method", "\[Rule]", "\"\<NDInv\>\""}], ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", "op"}], 
                    "]"}]}]}], "]"}]}]}], "\n", "\t", "]"}]}], "]"}], ";", 
           "\t\t", "\n", "\t", 
           RowBox[{
            RowBox[{"dinv21", "[", 
             RowBox[{
              RowBox[{"\[FormalX]_", "?", "NumberQ"}], ",", 
              RowBox[{"\[FormalY]_", "?", "NumberQ"}]}], "]"}], ":=", 
            RowBox[{
             RowBox[{"dinv21", "[", 
              RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "=", "\n", 
             "\t\t", 
             RowBox[{"DInv", "[", 
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{"fixed", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                   RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
                "]"}], ",", 
               RowBox[{"sol", "[", 
                RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"tr1", ",", "0"}], "]"}], ",", "2"}], "}"}], ",", 
               RowBox[{"Species", "\[Rule]", "sp1"}], ",", "\n", "\t\t\t", 
               RowBox[{"Method", "\[Rule]", "\"\<NDInv\>\""}], ",", 
               RowBox[{"Time", "\[Rule]", "time"}], ",", 
               RowBox[{"Evaluate", "[", 
                RowBox[{"Sequence", "@@", "dinv2opts"}], "]"}], ",", 
               RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}]}], 
           ";", "\n", "\t", 
           RowBox[{
            RowBox[{"dinv22", "[", 
             RowBox[{
              RowBox[{"\[FormalX]_", "?", "NumberQ"}], ",", 
              RowBox[{"\[FormalY]_", "?", "NumberQ"}]}], "]"}], ":=", 
            RowBox[{
             RowBox[{"dinv22", "[", 
              RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "=", "\n", 
             "\t\t", 
             RowBox[{"DInv", "[", 
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{"fixed", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                   RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
                "]"}], ",", 
               RowBox[{"sol", "[", 
                RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"tr2", ",", "0"}], "]"}], ",", "2"}], "}"}], ",", 
               RowBox[{"Species", "\[Rule]", "sp2"}], ",", "\n", "\t\t\t", 
               RowBox[{"Method", "\[Rule]", "\"\<NDInv\>\""}], ",", 
               RowBox[{"Time", "\[Rule]", "time"}], ",", 
               RowBox[{"Evaluate", "[", 
                RowBox[{"Sequence", "@@", "dinv2opts"}], "]"}], ",", 
               RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}]}], 
           ";"}], "\n", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"tr", "=", 
                  RowBox[{"Join", "[", 
                   RowBox[{"fixed", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
                   "]"}]}], ",", 
                 RowBox[{"so", "=", 
                  RowBox[{"sol", "[", 
                   RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], ",", 
                 "\n", "\t\t\t", 
                 RowBox[{"trinv1", "=", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"tr1", ",", "0"}], "]"}], ",", "2"}], "}"}]}], 
                 ",", 
                 RowBox[{"trinv2", "=", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{"tr2", ",", "0"}], "]"}], ",", "2"}], "}"}]}], 
                 ",", 
                 RowBox[{"sp1", "=", "sp1"}], ",", 
                 RowBox[{"sp2", "=", "sp2"}], ",", "\n", "\t\t\t", 
                 RowBox[{"time", "=", "time"}], ",", 
                 RowBox[{"op", "=", 
                  RowBox[{"Sequence", "@@", "dinvopts"}]}]}], "}"}], ",", 
               "\n", "\t\t\t", 
               RowBox[{
                RowBox[{"PrintCall", "[", 
                 RowBox[{
                  RowBox[{"Global`dinv21", "[", 
                   RowBox[{"System`\[FormalX]", ",", "System`\[FormalY]"}], 
                   "]"}], "=", 
                  RowBox[{"DInv", "[", 
                   RowBox[{"tr", ",", "so", ",", "trinv1", ",", 
                    RowBox[{"Species", "\[Rule]", "sp1"}], ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", "op"}], "]"}]}],
                  "]"}], ";", "\n", "\t\t\t", 
                RowBox[{"PrintCall", "[", 
                 RowBox[{
                  RowBox[{"Global`dinv22", "[", 
                   RowBox[{"System`\[FormalX]", ",", "System`\[FormalY]"}], 
                   "]"}], "=", 
                  RowBox[{"DInv", "[", 
                   RowBox[{"tr", ",", "so", ",", "trinv2", ",", 
                    RowBox[{"Species", "\[Rule]", "sp2"}], ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", "op"}], "]"}]}],
                  "]"}]}]}], "\n", "\t", "]"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{
            RowBox[{"dinv21", "[", 
             RowBox[{"\[FormalX]_", ",", "\[FormalY]_"}], "]"}], "=", "\n", 
            "\t\t", 
            RowBox[{"DInv", "[", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{"fixed", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                  RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
               "]"}], ",", 
              RowBox[{"sol", "[", 
               RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"tr1", ",", "0"}], "]"}], ",", "2"}], "}"}], ",", 
              RowBox[{"Species", "\[Rule]", "sp1"}], ",", "\n", "\t\t\t", 
              RowBox[{"Time", "\[Rule]", "time"}], ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "dinv2opts"}], "]"}], ",", 
              RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}], ";",
            "\n", "\t", 
           RowBox[{
            RowBox[{"dinv22", "[", 
             RowBox[{"\[FormalX]_", ",", "\[FormalY]_"}], "]"}], "=", "\n", 
            "\t\t", 
            RowBox[{"DInv", "[", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{"fixed", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                  RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
               "]"}], ",", 
              RowBox[{"sol", "[", 
               RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{"tr2", ",", "0"}], "]"}], ",", "2"}], "}"}], ",", 
              RowBox[{"Species", "\[Rule]", "sp2"}], ",", "\n", "\t\t\t", 
              RowBox[{"Time", "\[Rule]", "time"}], ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "dinv2opts"}], "]"}], ",", 
              RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}], ";",
            "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{
               "func", ",", "\"\<: dinv21[\[FormalX],\[FormalY]]=\>\"", ",", 
                RowBox[{"dinv21", "[", 
                 RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], "]"}], 
              ";", "\n", "\t\t", 
              RowBox[{"Print", "[", 
               RowBox[{
               "func", ",", "\"\<: dinv22[\[FormalX],\[FormalY]]=\>\"", ",", 
                RowBox[{"dinv22", "[", 
                 RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], 
               "]"}]}]}], "\n", "\t", "]"}]}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"Return", "[", 
         RowBox[{"Show", "[", "\n", "\t", 
          RowBox[{
           RowBox[{"ListLinePlot", "[", 
            RowBox[{
             RowBox[{"Tooltip", "[", 
              RowBox[{
               RowBox[{"ExtractPlotPoints", "[", "iso1", "]"}], ",", 
               "trait1"}], "]"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", "style1nes"}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
             RowBox[{"ColorFunction", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Unevaluated", "[", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"dinv21", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], ">", "0"}], ",", 
                   "color1nes", ",", 
                   RowBox[{"{", 
                    RowBox[{"Opacity", "[", "0", "]"}], "}"}]}], "]"}], "]"}],
                 "&"}], ")"}]}]}], "]"}], ",", "\n", "\t", 
           RowBox[{"ListLinePlot", "[", 
            RowBox[{
             RowBox[{"Tooltip", "[", 
              RowBox[{
               RowBox[{"ExtractPlotPoints", "[", "iso1", "]"}], ",", 
               "trait1"}], "]"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", "style1es"}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
             RowBox[{"ColorFunction", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Unevaluated", "[", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"dinv21", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], "<", "0"}], ",", 
                   "color1es", ",", 
                   RowBox[{"{", 
                    RowBox[{"Opacity", "[", "0", "]"}], "}"}]}], "]"}], "]"}],
                 "&"}], ")"}]}]}], "]"}], ",", "\n", "\t", 
           RowBox[{"ListLinePlot", "[", 
            RowBox[{
             RowBox[{"Tooltip", "[", 
              RowBox[{
               RowBox[{"ExtractPlotPoints", "[", "iso2", "]"}], ",", 
               "trait2"}], "]"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", "style2nes"}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
             RowBox[{"ColorFunction", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Unevaluated", "[", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"dinv22", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], ">", "0"}], ",", 
                   "color2nes", ",", 
                   RowBox[{"{", 
                    RowBox[{"Opacity", "[", "0", "]"}], "}"}]}], "]"}], "]"}],
                 "&"}], ")"}]}]}], "]"}], ",", "\n", "\t", 
           RowBox[{"ListLinePlot", "[", 
            RowBox[{
             RowBox[{"Tooltip", "[", 
              RowBox[{
               RowBox[{"ExtractPlotPoints", "[", "iso2", "]"}], ",", 
               "trait2"}], "]"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", "style2es"}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
             RowBox[{"ColorFunction", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Unevaluated", "[", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"dinv22", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], "<", "0"}], ",", 
                   "color2es", ",", 
                   RowBox[{"{", 
                    RowBox[{"Opacity", "[", "0", "]"}], "}"}]}], "]"}], "]"}],
                 "&"}], ")"}]}]}], "]"}], ",", "\n", "\t", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", "framelabel"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"trait1min", ",", "trait1max"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"trait2min", ",", "trait2max"}], "}"}]}], "}"}]}]}], 
          "\n", "]"}], "]"}]}]}], "\n", "\n", "]"}]}], "]"}]}], ";"}]], "Code",\

 CellChangeTimes->{
  3.6878814594890013`*^9, {3.688571699953883*^9, 3.688571707764998*^9}, {
   3.688571769891882*^9, 3.688571771639399*^9}, 3.6885718076602488`*^9, {
   3.689164459988995*^9, 3.689164470752893*^9}, 3.6891645115035887`*^9, {
   3.6891649643228416`*^9, 3.689165013430848*^9}, 3.689165079677661*^9, {
   3.689165133332065*^9, 3.689165314937187*^9}, {3.6891729491331177`*^9, 
   3.6891729828825417`*^9}, {3.689173017440921*^9, 3.689173018177606*^9}, {
   3.689174555123795*^9, 3.6891746000179443`*^9}, {3.6892508385585413`*^9, 
   3.6892508444313297`*^9}, 3.689289452062292*^9, {3.6895501076392097`*^9, 
   3.689550197362814*^9}, {3.6895982873996143`*^9, 3.689598288654265*^9}, 
   3.693593262674309*^9, {3.696162142481098*^9, 3.6961621425471478`*^9}, {
   3.6968458351236687`*^9, 3.6968458355332003`*^9}, {3.696845912524168*^9, 
   3.696845912536572*^9}, {3.696846579768405*^9, 3.696846580160021*^9}, {
   3.699715751817182*^9, 3.699715760598668*^9}, {3.699717856378386*^9, 
   3.6997178902739077`*^9}, {3.699718767492446*^9, 3.699718770130785*^9}, 
   3.699718809688347*^9, 3.6997188441432056`*^9, {3.699718893901142*^9, 
   3.699718899684712*^9}, {3.699719012235765*^9, 3.6997190237904253`*^9}, {
   3.699719068857439*^9, 3.699719080257536*^9}, {3.699719339763303*^9, 
   3.6997193462560053`*^9}, {3.699721875692974*^9, 3.699721892821068*^9}, {
   3.699722350179969*^9, 3.69972235049475*^9}, {3.699722538958785*^9, 
   3.699722552733675*^9}, {3.709336806899913*^9, 3.70933680750506*^9}, {
   3.7101059894928017`*^9, 3.7101059900990973`*^9}, {3.710324422142239*^9, 
   3.710324422561645*^9}, {3.711621355794632*^9, 3.71162135582537*^9}, 
   3.714059650439024*^9, 3.722029524160989*^9, {3.72203416100622*^9, 
   3.722034165439373*^9}, {3.7220877737927322`*^9, 3.722087775031274*^9}, {
   3.728003865515419*^9, 3.728003865521902*^9}, {3.728004830810459*^9, 
   3.728004898114555*^9}, {3.728004980211063*^9, 3.728004985066627*^9}, {
   3.728064429809013*^9, 3.728064445571084*^9}, 3.7280646217788267`*^9, {
   3.728064875521748*^9, 3.728064932545689*^9}, {3.728064968523754*^9, 
   3.728065014337246*^9}, {3.7280650478449183`*^9, 3.728065053674878*^9}, {
   3.728065618287614*^9, 3.728065707463326*^9}, {3.728065739255266*^9, 
   3.728065776495427*^9}, {3.728065918812108*^9, 3.728065920577475*^9}, {
   3.72806595198687*^9, 3.728066008870903*^9}, {3.728066056042964*^9, 
   3.7280660865460787`*^9}, {3.72806619369306*^9, 3.72806621019746*^9}, {
   3.7280662559645777`*^9, 3.728066256205336*^9}, {3.728066337826613*^9, 
   3.728066359881103*^9}, {3.728066849905733*^9, 3.728066863041307*^9}, {
   3.7280670744910803`*^9, 3.7280670961117897`*^9}, {3.7280671269544563`*^9, 
   3.728067150339978*^9}, {3.728067196101091*^9, 3.728067220856*^9}, {
   3.728067430364223*^9, 3.728067430924284*^9}, {3.728068288204021*^9, 
   3.728068288762804*^9}, {3.7280690098849783`*^9, 3.728069016561344*^9}, {
   3.728069069362385*^9, 3.728069113615983*^9}, {3.728069162700776*^9, 
   3.7280691838128347`*^9}, {3.728069213962969*^9, 3.728069258257434*^9}, {
   3.7280804276287737`*^9, 3.728080437898258*^9}, {3.728080638128067*^9, 
   3.728080717923985*^9}, {3.728080756346081*^9, 3.72808077853913*^9}, {
   3.728140189315607*^9, 3.7281402004676657`*^9}, {3.72814023312665*^9, 
   3.7281402398847322`*^9}, 3.7281403036792593`*^9, {3.728140391911646*^9, 
   3.7281404610450974`*^9}, {3.728140538636935*^9, 3.728140561469632*^9}, {
   3.7281435639263144`*^9, 3.728143649009647*^9}, {3.728143705646101*^9, 
   3.728143708171414*^9}, {3.728144393777358*^9, 3.728144395395755*^9}, {
   3.7281444312668533`*^9, 3.728144476984909*^9}, {3.728144518173176*^9, 
   3.728144561330633*^9}, {3.728144609869947*^9, 3.728144640595318*^9}, {
   3.7281446858814363`*^9, 3.72814474427623*^9}, {3.728156802598259*^9, 
   3.7281568179433403`*^9}, {3.728156852376233*^9, 3.72815686878769*^9}, {
   3.7281569176659718`*^9, 3.728156935807035*^9}, {3.7281569865465117`*^9, 
   3.728157116775816*^9}, {3.728157443345725*^9, 3.728157464799403*^9}, {
   3.728157621752425*^9, 3.728157696961872*^9}, {3.728158156123822*^9, 
   3.728158183702548*^9}, {3.728158236499277*^9, 3.728158240502043*^9}, {
   3.728158305500226*^9, 3.7281583077981977`*^9}, {3.728158351886965*^9, 
   3.7281583580886602`*^9}, {3.728158522084908*^9, 3.728158544343421*^9}, {
   3.728158579180567*^9, 3.728158595223648*^9}, {3.728159887086486*^9, 
   3.728159926055706*^9}, {3.728160350540004*^9, 3.728160377762652*^9}, {
   3.728174958945052*^9, 3.728174999402115*^9}, {3.728175275134789*^9, 
   3.728175278071971*^9}, {3.7281753343455467`*^9, 3.728175532955903*^9}, {
   3.728175673817855*^9, 3.728175681226684*^9}, {3.728224254636993*^9, 
   3.728224257855564*^9}, {3.728224412942518*^9, 3.728224458116488*^9}, {
   3.7282245048340282`*^9, 3.728224598853252*^9}, {3.72822466380914*^9, 
   3.728224771162291*^9}, {3.728224820210228*^9, 3.728224827375785*^9}, {
   3.728224868954187*^9, 3.7282248784277077`*^9}, {3.728224938044064*^9, 
   3.728224993062986*^9}, {3.728233896003972*^9, 3.7282339184966784`*^9}, {
   3.728234231588657*^9, 3.728234238944244*^9}, {3.7282572175110073`*^9, 
   3.728257282798112*^9}, {3.7282577394185123`*^9, 3.7282577588342867`*^9}, {
   3.728257810295516*^9, 3.7282578165297117`*^9}, {3.7282583614475737`*^9, 
   3.728258430024981*^9}, {3.7282597404773293`*^9, 3.728259756962343*^9}, {
   3.728259796259425*^9, 3.7282598192714987`*^9}, {3.7282600947054777`*^9, 
   3.728260174965962*^9}, {3.728260289087376*^9, 3.7282603425894747`*^9}, {
   3.728260420484344*^9, 3.728260498175748*^9}, {3.728260558564913*^9, 
   3.7282606455252657`*^9}, {3.7282608036711617`*^9, 
   3.7282608803484583`*^9}, {3.728261829514402*^9, 3.728261918579928*^9}, {
   3.7282619486484423`*^9, 3.728261971303804*^9}, {3.728262005908387*^9, 
   3.728262022308351*^9}, {3.728262072881287*^9, 3.728262116841648*^9}, {
   3.7282622460853443`*^9, 3.728262305899865*^9}, {3.7282623724545393`*^9, 
   3.728262374438142*^9}, {3.728262487014135*^9, 3.72826249361665*^9}, {
   3.7282625743952293`*^9, 3.728262585947839*^9}, {3.728262727833403*^9, 
   3.728262785566162*^9}, {3.728262891405097*^9, 3.728262902051161*^9}, {
   3.7282629427580853`*^9, 3.72826296831098*^9}, {3.7282978354035673`*^9, 
   3.728298031486878*^9}, {3.728321615558627*^9, 3.728321631729383*^9}, {
   3.7283217974507732`*^9, 3.728321829228526*^9}, {3.728321926827709*^9, 
   3.728322073242839*^9}, {3.728322103350535*^9, 3.728322134172978*^9}, {
   3.728322564078043*^9, 3.7283225654158297`*^9}, {3.728326083415308*^9, 
   3.728326113794383*^9}, {3.728326152613716*^9, 3.728326163938983*^9}, {
   3.728326353848483*^9, 3.72832637123834*^9}, {3.728326401585313*^9, 
   3.728326427190529*^9}, {3.728326485907069*^9, 3.728326613809135*^9}, {
   3.728326656246347*^9, 3.728326724904603*^9}, {3.728327027253436*^9, 
   3.7283270328426027`*^9}, {3.7283369029286737`*^9, 3.728336944578652*^9}, {
   3.7283369970114202`*^9, 3.728337266535069*^9}, {3.728339520206999*^9, 
   3.728339528821509*^9}, {3.728339965975909*^9, 3.728339966534225*^9}, {
   3.7284048165495367`*^9, 3.728404839100012*^9}, {3.728433618231145*^9, 
   3.728433620411632*^9}, {3.7284337062108717`*^9, 3.728433715008863*^9}, {
   3.7284337674070177`*^9, 3.728433798604463*^9}, {3.728433958006927*^9, 
   3.728434046583621*^9}, {3.728436838720706*^9, 3.728436847438705*^9}, {
   3.7284378472234173`*^9, 3.728437859299632*^9}, {3.7284771713688993`*^9, 
   3.7284772096247673`*^9}, {3.728477245340866*^9, 3.728477270426364*^9}, {
   3.728477767139233*^9, 3.728477781716845*^9}, {3.728477838615637*^9, 
   3.728477850309677*^9}, {3.72847811355781*^9, 3.72847815653059*^9}, {
   3.728478790561802*^9, 3.7284788228665657`*^9}, {3.728479488897694*^9, 
   3.728479513146933*^9}, {3.72848183658278*^9, 3.7284818739373703`*^9}, {
   3.72848261827427*^9, 3.7284826368404703`*^9}, {3.7284835686169024`*^9, 
   3.7284835815820007`*^9}, {3.7284838389135303`*^9, 
   3.7284838433098173`*^9}, {3.728484211871472*^9, 3.728484266539307*^9}, {
   3.728484299178767*^9, 3.728484311795273*^9}, {3.728484485013381*^9, 
   3.728484485976741*^9}, {3.728484521218224*^9, 3.72848452505655*^9}, {
   3.728484732686821*^9, 3.728484738487377*^9}, {3.7284932841195583`*^9, 
   3.728493350967661*^9}, 3.728493472445822*^9, {3.728493720292115*^9, 
   3.7284937208510447`*^9}, {3.728494307242235*^9, 3.728494312973021*^9}, {
   3.728494489669641*^9, 3.7284945467259827`*^9}, {3.728495774389407*^9, 
   3.728495797339725*^9}, {3.728495853063971*^9, 3.728495855437986*^9}, {
   3.7284960837862663`*^9, 3.728496102812055*^9}, {3.728496427177184*^9, 
   3.728496427570589*^9}, {3.728496592644368*^9, 3.728496599361496*^9}, {
   3.728497031974177*^9, 3.72849705960752*^9}, {3.728497347637471*^9, 
   3.728497380243092*^9}, {3.728497587037928*^9, 3.728497589868354*^9}, 
   3.728497799230768*^9, {3.7284983852219353`*^9, 3.728498385773315*^9}, {
   3.728498641947688*^9, 3.7284986472325783`*^9}, {3.728498861001738*^9, 
   3.728498885776182*^9}, {3.728510968880827*^9, 3.728511032083125*^9}, {
   3.728511203461444*^9, 3.728511219569695*^9}, {3.728511263364973*^9, 
   3.728511264621752*^9}, {3.728511517064052*^9, 3.728511517273555*^9}, {
   3.728519913633072*^9, 3.728519920235322*^9}, {3.728520625700643*^9, 
   3.728520626137554*^9}, {3.728520742039433*^9, 3.728520757999838*^9}, {
   3.728520964854494*^9, 3.7285210085953283`*^9}, {3.7285212278878937`*^9, 
   3.7285212977469273`*^9}, {3.728521383347781*^9, 3.728521398267646*^9}, {
   3.7285214459711723`*^9, 3.728521513584593*^9}, {3.7285215744696207`*^9, 
   3.728521585431163*^9}, {3.7285216705505877`*^9, 3.728521673715851*^9}, {
   3.728521721939542*^9, 3.728521727383099*^9}, {3.7285221091668787`*^9, 
   3.728522117465197*^9}, {3.728522304161846*^9, 3.7285223087413263`*^9}, {
   3.7285231423322973`*^9, 3.728523148553574*^9}, {3.728523538185095*^9, 
   3.728523539395101*^9}, {3.728523593744919*^9, 3.7285235945587473`*^9}, {
   3.72852365789041*^9, 3.7285237759731693`*^9}, {3.7285242824596043`*^9, 
   3.728524283065127*^9}, {3.728579463928833*^9, 3.728579512413872*^9}, {
   3.72857956442381*^9, 3.728579583476493*^9}, {3.728579708762484*^9, 
   3.728579737305962*^9}, {3.728579827777339*^9, 3.728579834712099*^9}, {
   3.728579949194097*^9, 3.728579962600582*^9}, {3.728580024183042*^9, 
   3.728580034490384*^9}, {3.728581090235758*^9, 3.728581117218026*^9}, {
   3.728581343048872*^9, 3.7285813844996443`*^9}, {3.728581438830196*^9, 
   3.7285814923088713`*^9}, {3.7285815569932003`*^9, 
   3.7285815920358057`*^9}, {3.728581670070799*^9, 3.7285816826163473`*^9}, {
   3.72858172976158*^9, 3.728581741985574*^9}, {3.728581777902054*^9, 
   3.728581885027145*^9}, {3.7285819334695377`*^9, 3.728581945348612*^9}, {
   3.728581980670126*^9, 3.728581991685026*^9}, {3.728582133888763*^9, 
   3.7285822359386463`*^9}, {3.72925877664933*^9, 3.7292588391894817`*^9}, {
   3.729259634887621*^9, 3.729259697188465*^9}, {3.729260163039318*^9, 
   3.729260172343327*^9}, {3.72926030872617*^9, 3.72926031638603*^9}, {
   3.729260467222185*^9, 3.7292604809615297`*^9}, 3.7292608082671547`*^9, {
   3.729260890909802*^9, 3.729260903778203*^9}, {3.729260958660063*^9, 
   3.729261004404241*^9}, 3.7292613156396646`*^9, {3.729262111512918*^9, 
   3.729262152308267*^9}, {3.7292622105452843`*^9, 3.7292623179372787`*^9}, {
   3.729262474984887*^9, 3.729262493502987*^9}, {3.729263118330203*^9, 
   3.729263176489319*^9}, {3.729263326160598*^9, 3.7292633502582483`*^9}, {
   3.7292635304800997`*^9, 3.729263533031094*^9}, {3.729264310103199*^9, 
   3.729264335973597*^9}, {3.729264553910914*^9, 3.729264570340673*^9}, {
   3.729264979077066*^9, 3.729264997385151*^9}, 3.7292650821419888`*^9, {
   3.729265654701692*^9, 3.729265703646429*^9}, {3.7292657472931232`*^9, 
   3.729265758777318*^9}, {3.729265907176218*^9, 3.72926602031435*^9}, {
   3.7292670907399883`*^9, 3.729267093778804*^9}, {3.7292680691224003`*^9, 
   3.729268074452829*^9}, {3.7292686635056*^9, 3.729268728252473*^9}, {
   3.7292693039805737`*^9, 3.729269325697414*^9}, {3.729271311838616*^9, 
   3.7292713336096373`*^9}, {3.729279698202639*^9, 3.72927974854849*^9}, {
   3.7292812163203382`*^9, 3.729281258963656*^9}, {3.729281962288897*^9, 
   3.729281963433771*^9}, {3.729285589581912*^9, 3.729285648379578*^9}, {
   3.729295266191888*^9, 3.729295299843636*^9}, {3.729295331093285*^9, 
   3.729295569675976*^9}, {3.7292956006563473`*^9, 3.729295674001246*^9}, 
   3.729296104494722*^9, {3.729528243805068*^9, 3.7295282635266943`*^9}, {
   3.729529345442833*^9, 3.7295293548164177`*^9}, {3.755373533476985*^9, 
   3.755373535195527*^9}, {3.755450421916359*^9, 3.755450424890173*^9}, {
   3.7605514070917063`*^9, 3.760551408414358*^9}, {3.760551465484117*^9, 
   3.7605514656745453`*^9}, 3.7605515703086042`*^9, {3.760933250437797*^9, 
   3.760933252024222*^9}, {3.7611354249288282`*^9, 3.761135446432398*^9}, {
   3.761135626038192*^9, 3.761135640488874*^9}, {3.761135703504025*^9, 
   3.761135819237817*^9}, {3.761135850140152*^9, 3.761135869384615*^9}, {
   3.7611359046172*^9, 3.761136048093885*^9}, {3.7611373634700527`*^9, 
   3.761137367575976*^9}, 3.761838991648872*^9, {3.7618397687637053`*^9, 
   3.761839774587607*^9}, 3.761839901487298*^9, {3.761840178352091*^9, 
   3.7618402697618237`*^9}, {3.761840683984695*^9, 3.761840748675324*^9}, {
   3.761841281710079*^9, 3.761841294539851*^9}, 3.761842083027505*^9, {
   3.761842147781702*^9, 3.7618421591814413`*^9}, {3.761842413196979*^9, 
   3.76184248513547*^9}, {3.761842564606682*^9, 3.761842612507554*^9}, {
   3.7618427940455627`*^9, 3.761842809446913*^9}, {3.761885549061*^9, 
   3.761885549613758*^9}, 3.761885599828106*^9, {3.7618987751230516`*^9, 
   3.761898775288151*^9}, {3.761932168246942*^9, 3.76193216826331*^9}, {
   3.761932225651423*^9, 3.761932225666375*^9}, {3.761932432986026*^9, 
   3.761932433001185*^9}, 3.762422577463286*^9, 3.769760705978869*^9, {
   3.770191543817621*^9, 3.770191552321026*^9}, {3.770191659877988*^9, 
   3.770191669992041*^9}, {3.770191855004878*^9, 3.770191858360186*^9}, 
   3.770438265253755*^9, {3.7707214527144623`*^9, 3.770721453753789*^9}, {
   3.774607484528056*^9, 3.77460753585751*^9}, {3.77460757449634*^9, 
   3.774607669773005*^9}, {3.7746077309188347`*^9, 3.774607733548613*^9}, {
   3.780299001894835*^9, 3.78029900626478*^9}, 3.794137241139957*^9, {
   3.84437743795365*^9, 
   3.844377450506784*^9}},ExpressionUUID->"863835c9-e3ee-4817-ab32-\
188bab86501d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotEvoIsoclines", "[", 
    RowBox[{
     RowBox[{"solin1", ":", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"_", "?", "RuleListQ"}], "|", 
        RowBox[{"_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#", "\[Equal]", "\"\<FindEcoAttractor\>\""}], "&"}], 
          ")"}]}]}], ")"}], ":", "\"\<FindEcoAttractor\>\""}], ",", 
     RowBox[{"Gs_List", ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"trait1_", ",", 
       RowBox[{"trait1min_", "?", "NumericQ"}], ",", 
       RowBox[{"trait1max_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
   RowBox[{"PlotEvoIsoclines", "[", 
    RowBox[{"solin1", ",", "Gs", ",", 
     RowBox[{"{", 
      RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SubscriptAdd", "[", "trait1", "]"}], ",", "trait1min", ",", 
       "trait1max"}], "}"}], ",", "opts"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.72840354707022*^9, 3.7284035571377773`*^9}, {
  3.728403598467949*^9, 3.728403638407946*^9}, {3.728404200503545*^9, 
  3.728404204503395*^9}, {3.728404478589267*^9, 3.7284045181220627`*^9}, {
  3.728404779998283*^9, 3.728404795877049*^9}, {3.728405695019418*^9, 
  3.728405700812039*^9}},ExpressionUUID->"aeeb44f6-0e44-4419-9b3b-\
38951b48ed21"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.780299009523836*^9, 
  3.7802990102294617`*^9}},ExpressionUUID->"dedf6223-0cc3-415b-889a-\
d22139b20cd4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Time", "\[Rule]", "t"}], ",", "\n", "\t", 
     RowBox[{"FitnessGradient", "\[Rule]", "\"\<DInv\>\""}], ",", 
     RowBox[{"ICs", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"EvoEquation", "\[Rule]", "\"\<QG\>\""}], ",", 
     RowBox[{"EcoAttractorNumber", "\[Rule]", "1"}], ",", 
     RowBox[{"ExcludeDiagonal", "\[Rule]", "True"}], ",", 
     RowBox[{"TraitShiftRate", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", "\t", 
     RowBox[{"FindEcoAttractorOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"DelayDInv", "\[Rule]", "False"}], ",", 
     RowBox[{"DInvOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"PlotOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", "Automatic"}], ",", "\n", "\t", 
     RowBox[{"ESTest", "\[Rule]", "True"}], ",", 
     RowBox[{"DelayDInv2", "\[Rule]", "False"}], ",", 
     RowBox[{"DInv2Opts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"IsoclineStyle", "\[Rule]", "Automatic"}], ",", "\n", "\t", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}], ",", 
     RowBox[{"Monitor", "\[Rule]", "False"}], ",", 
     RowBox[{"PrintTrace", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.780299019341299*^9},ExpressionUUID->"d183d749-6ef4-425b-a696-\
ce96e63fb028"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["PlotEvoPhasePlane", "Subsection",
 CellChangeTimes->{{3.727659844495472*^9, 3.727659854638974*^9}, {
  3.727709833007156*^9, 
  3.727709834754821*^9}},ExpressionUUID->"31f8cf0a-32b4-4d00-be2f-\
2fd2072a2ade"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"f13c13df-2c30-4a43-9ddc-\
af91f30b169e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotEvoPhasePlane", "::", "usage"}], "=", "\n", 
   "\"\<PlotEvoPhasePlane[{\!\(\*StyleBox[\"trait1\", \"TI\"]\), \
\!\(\*StyleBox[\"trait1min\", \"TI\"]\), \!\(\*StyleBox[\"trait1max\", \
\"TI\"]\)}] combines PlotMIP, PlotEvoStreams and PlotEvoIsoclines.\n\
PlotEvoPhasePlane[\!\(\*StyleBox[\"eq1\", \"TI\"]\), \!\(\*StyleBox[\"eq2\", \
\"TI\"]\), {\!\(\*StyleBox[\"trait1\", \"TI\"]\), \
\!\(\*StyleBox[\"trait1min\", \"TI\"]\), \!\(\*StyleBox[\"trait1max\", \
\"TI\"]\)}] uses one-species ecological equilibrium \!\(\*StyleBox[\"eq1\", \
\"TI\"]\) and two-species ecological equilibrium \!\(\*StyleBox[\"eq2\", \"TI\
\"]\) for improved speed (2 species).\n\
PlotEvoPhasePlane[{\!\(\*StyleBox[\"trait1\", \"TI\"]\), \
\!\(\*StyleBox[\"trait1min\", \"TI\"]\), \!\(\*StyleBox[\"trait1max\", \
\"TI\"]\)}, {\!\(\*StyleBox[\"trait2\", \"TI\"]\), \!\(\*StyleBox[\"trait2min\
\", \"TI\"]\), \!\(\*StyleBox[\"trait2max\", \"TI\"]\)}] allows for two \
different traits (within or between guilds).\n\
PlotEvoPhasePlane[{\!\(\*StyleBox[\"eq11\", \"TI\"]\), \
\!\(\*StyleBox[\"eq12\", \"TI\"]\)}, \!\(\*StyleBox[\"eq2\", \"TI\"]\), {\!\(\
\*StyleBox[\"trait1\", \"TI\"]\), \!\(\*StyleBox[\"trait1min\", \"TI\"]\), \!\
\(\*StyleBox[\"trait1max\", \"TI\"]\)}, {\!\(\*StyleBox[\"trait2\", \
\"TI\"]\), \!\(\*StyleBox[\"trait2min\", \"TI\"]\), \
\!\(\*StyleBox[\"trait2max\", \"TI\"]\)}] uses one-species ecological \
equilibria \!\(\*StyleBox[\"eq11\", \"TI\"]\) and \!\(\*StyleBox[\"eq12\", \
\"TI\"]\) and two-species ecological equilibrium \!\(\*StyleBox[\"eq2\", \"TI\
\"]\) (2 guilds).\nPlotEvoPhasePlane[{\!\(\*StyleBox[\"eq11\", \"TI\"]\), \
\!\(\*StyleBox[\"eq12\", \"TI\"]\)}, \!\(\*StyleBox[\"eq2\", \"TI\"]\), \
\!\(\*StyleBox[\"varcovars\", \"TI\"]\), {\!\(\*StyleBox[\"trait1\", \
\"TI\"]\), \!\(\*StyleBox[\"trait1min\", \"TI\"]\), \
\!\(\*StyleBox[\"trait1max\", \"TI\"]\)}, {\!\(\*StyleBox[\"trait2\", \"TI\"]\
\), \!\(\*StyleBox[\"trait2min\", \"TI\"]\), \!\(\*StyleBox[\"trait2max\", \
\"TI\"]\)}] uses trait variances/covariances in \!\(\*StyleBox[\"varcovars\", \
\"TI\"]\).\nPlotEvoPhasePlane[\!\(\*StyleBox[\"eq0\", \"TI\"]\), \
\!\(\*StyleBox[\"eq1\", \"TI\"]\), {\!\(\*StyleBox[\"trait1\", \"TI\"]\), \
\!\(\*StyleBox[\"trait1min\", \"TI\"]\), \!\(\*StyleBox[\"trait1max\", \
\"TI\"]\)}, {\!\(\*StyleBox[\"trait2\", \"TI\"]\), \!\(\*StyleBox[\"trait2min\
\", \"TI\"]\), \!\(\*StyleBox[\"trait2max\", \"TI\"]\)}] combines PlotZIP, \
PlotEvoStreams and PlotEvoIsoclines (2 traits)\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769490160213462*^9, 3.7694902001508923`*^9}, {
  3.769490280296153*^9, 
  3.769490281287393*^9}},ExpressionUUID->"c53ffdea-c340-496f-be21-\
abd7b0716d6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"ed75a966-987b-4bd8-842e-\
68142a54ce02"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"two", " ", "guilds"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"PlotEvoPhasePlane", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"eq11", ":", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"_", "?", "RuleListQ"}], "|", 
           RowBox[{"_", "?", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#", "\[Equal]", "\"\<FindEcoAttractor\>\""}], "&"}], 
             ")"}]}]}], ")"}], ":", "\"\<FindEcoAttractor\>\""}], ",", 
        RowBox[{"eq12", ":", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"_", "?", "RuleListQ"}], "|", 
           RowBox[{"_", "?", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#", "\[Equal]", "\"\<FindEcoAttractor\>\""}], "&"}], 
             ")"}]}]}], ")"}], ":", "\"\<FindEcoAttractor\>\""}]}], "}"}], 
      ",", "\n", 
      RowBox[{"eq2", ":", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"_", "?", "RuleListQ"}], "|", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "\[Equal]", "\"\<FindEcoAttractor\>\""}], "&"}], 
           ")"}]}]}], ")"}], ":", "\"\<FindEcoAttractor\>\""}], ",", 
      RowBox[{"Gs", ":", 
       RowBox[{"(", 
        RowBox[{"_", "?", "RuleListQ"}], ")"}], ":", 
       RowBox[{"{", "}"}]}], ",", "\n", 
      RowBox[{"{", 
       RowBox[{"trait1_", ",", 
        RowBox[{"trait1min_", "?", "NumericQ"}], ",", 
        RowBox[{"trait1max_", "?", "NumericQ"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"trait2_", ",", 
        RowBox[{"trait2min_", "?", "NumericQ"}], ",", 
        RowBox[{"trait2max_", "?", "NumericQ"}]}], "}"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"func", "=", 
         RowBox[{"FuncStyle", "[", "\"\<PlotEvoIsoclines (2Gu)\>\"", "]"}]}], 
        ",", "\n", 
        RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "plotmipopts", ",", 
        "plotevoisoclinesopts", ",", "plotevostreamsopts", ",", "verbose", 
        ",", "verboseall", ",", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "pes", ",", 
        "pei", ",", "mip"}], "}"}], ",", "\n", "\n", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
          RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
       RowBox[{"plotmipopts", "=", 
        RowBox[{"FilterRules", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{"PlotMIPOpts", "/.", 
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{"opts", ",", 
                  RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}],
                 "]"}]}], "]"}], ",", "opts", ",", 
             RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}], 
           "]"}], ",", 
          RowBox[{"Options", "[", "PlotMIP", "]"}]}], "]"}]}], ";", "\n", 
       RowBox[{"plotevoisoclinesopts", "=", 
        RowBox[{"FilterRules", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{"PlotEvoIsoclinesOpts", "/.", 
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{"opts", ",", 
                  RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}],
                 "]"}]}], "]"}], ",", "opts", ",", 
             RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}], 
           "]"}], ",", 
          RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"plotevostreamsopts", "=", 
        RowBox[{"FilterRules", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{"PlotEvoStreamsOpts", "/.", 
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{"opts", ",", 
                  RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}],
                 "]"}]}], "]"}], ",", "opts", ",", 
             RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}], 
           "]"}], ",", 
          RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "]"}]}], ";", 
       "\n", "\n", 
       RowBox[{"verbose", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Verbose", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}], 
           "]"}]}], "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
       RowBox[{"verboseall", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"VerboseAll", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}], 
           "]"}]}], "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"verboseall", ",", 
         RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"verbose", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
       "\n", 
       RowBox[{"pes", "=", 
        RowBox[{"PlotEvoStreams", "[", 
         RowBox[{"eq2", ",", "Gs", ",", 
          RowBox[{"{", 
           RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"trait2", ",", "trait2min", ",", "trait2max"}], "}"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Sequence", "@@", "plotevostreamsopts"}], "]"}]}], "]"}]}],
        ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"Print", "[", "pes", "]"}]}], "]"}], ";", "\n", 
       RowBox[{"pei", "=", 
        RowBox[{"PlotEvoIsoclines", "[", 
         RowBox[{"eq2", ",", "Gs", ",", 
          RowBox[{"{", 
           RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"trait2", ",", "trait2min", ",", "trait2max"}], "}"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Sequence", "@@", "plotevoisoclinesopts"}], "]"}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"Print", "[", "pei", "]"}]}], "]"}], ";", "\n", 
       RowBox[{"mip", "=", 
        RowBox[{"PlotMIP", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"eq11", ",", "eq12"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"trait2", ",", "trait2min", ",", "trait2max"}], "}"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Sequence", "@@", "plotmipopts"}], "]"}], ",", 
          RowBox[{"InvStyle", "\[Rule]", 
           RowBox[{"Opacity", "[", "0", "]"}]}]}], "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"Print", "[", "mip", "]"}]}], "]"}], ";", "\n", "\n", 
       RowBox[{"Return", "[", 
        RowBox[{"Show", "[", 
         RowBox[{"pes", ",", "pei", ",", "mip"}], "]"}], "]"}]}]}], "\n", 
     "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.724697019447146*^9, 3.7246970213031073`*^9}, {
   3.72469706642633*^9, 3.724697169129353*^9}, {3.724697214664596*^9, 
   3.724697285641739*^9}, {3.7246981011806183`*^9, 3.7246981736502657`*^9}, {
   3.724698239213654*^9, 3.72469856298286*^9}, {3.724698642137356*^9, 
   3.724698644407136*^9}, {3.72470046389673*^9, 3.724700464286851*^9}, {
   3.724700506231979*^9, 3.724700519840026*^9}, {3.724700566433387*^9, 
   3.724700646902779*^9}, {3.724700774292193*^9, 3.724700778871992*^9}, {
   3.724700826917376*^9, 3.724700830923256*^9}, {3.7247009950713873`*^9, 
   3.724700999429072*^9}, {3.724701287371686*^9, 3.724701300580534*^9}, {
   3.724720978370154*^9, 3.724720983308675*^9}, 3.7251409582546988`*^9, {
   3.728068475006645*^9, 3.728068592342936*^9}, {3.728068632884219*^9, 
   3.728068768467743*^9}, {3.7283432206724977`*^9, 3.728343364836041*^9}, {
   3.7283483012665043`*^9, 3.7283483217739477`*^9}, {3.728348374484375*^9, 
   3.728348396988353*^9}, {3.728348486878311*^9, 3.728348503742139*^9}, {
   3.72834862680094*^9, 3.728348633360413*^9}, {3.728348663588517*^9, 
   3.72834866399977*^9}, {3.728404888603395*^9, 3.728404898454838*^9}, {
   3.728405037260271*^9, 3.728405060744746*^9}, {3.728405119257813*^9, 
   3.72840513247054*^9}, {3.728405318909446*^9, 3.728405332906982*^9}, {
   3.7285861557564774`*^9, 3.728586157112397*^9}, {3.728586198123879*^9, 
   3.7285862004153*^9}, {3.728587415797456*^9, 3.728587435881077*^9}, {
   3.728588271458798*^9, 3.728588276303328*^9}, {3.728783962856596*^9, 
   3.7287839928313637`*^9}, {3.728819296611228*^9, 3.728819308981386*^9}, {
   3.72881937632827*^9, 3.728819445087624*^9}, {3.7288194833672237`*^9, 
   3.728819605143322*^9}, {3.728819745131226*^9, 3.728819770465191*^9}, {
   3.728820247801571*^9, 3.7288202635096493`*^9}, {3.728820831502689*^9, 
   3.7288208878989973`*^9}, {3.728820949063464*^9, 3.72882094945986*^9}, {
   3.728820989629331*^9, 3.728821019958041*^9}, {3.7288315864232407`*^9, 
   3.728831598759779*^9}, {3.728862777260141*^9, 3.7288627878439713`*^9}, {
   3.728862834945445*^9, 3.728862865193548*^9}, {3.729283934794714*^9, 
   3.729283942445722*^9}, 3.729283996525744*^9, 3.769760705993773*^9, 
   3.7704382652610207`*^9, 
   3.7941372411470222`*^9},ExpressionUUID->"652f12f1-ec5b-4ec5-a966-\
1d2f27a6f5df"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"two", " ", "species"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"PlotEvoPhasePlane", "[", 
     RowBox[{
      RowBox[{"eq1", ":", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"_", "?", "RuleListQ"}], "|", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "\[Equal]", "\"\<FindEcoAttractor\>\""}], "&"}], 
           ")"}]}]}], ")"}], ":", "\"\<FindEcoAttractor\>\""}], ",", 
      RowBox[{"eq2", ":", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"_", "?", "RuleListQ"}], "|", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "\[Equal]", "\"\<FindEcoAttractor\>\""}], "&"}], 
           ")"}]}]}], ")"}], ":", "\"\<FindEcoAttractor\>\""}], ",", 
      RowBox[{"Gs", ":", 
       RowBox[{"(", 
        RowBox[{"_", "?", "RuleListQ"}], ")"}], ":", 
       RowBox[{"{", "}"}]}], ",", "\n", 
      RowBox[{"{", 
       RowBox[{"trait1_", ",", 
        RowBox[{"trait1min_", "?", "NumericQ"}], ",", 
        RowBox[{"trait1max_", "?", "NumericQ"}]}], "}"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"func", "=", 
         RowBox[{"FuncStyle", "[", "\"\<PlotEvoIsoclines (2Sp)\>\"", "]"}]}], 
        ",", "\n", 
        RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "plotmipopts", ",", 
        "plotevoisoclinesopts", ",", "plotevostreamsopts", ",", "verbose", 
        ",", "verboseall", ",", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "pes", ",", 
        "pei", ",", "mip"}], "}"}], ",", "\n", "\n", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
          RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
       RowBox[{"plotmipopts", "=", 
        RowBox[{"FilterRules", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{"PlotMIPOpts", "/.", 
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{"opts", ",", 
                  RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}],
                 "]"}]}], "]"}], ",", "opts", ",", 
             RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}], 
           "]"}], ",", 
          RowBox[{"Options", "[", "PlotMIP", "]"}]}], "]"}]}], ";", "\n", 
       RowBox[{"plotevoisoclinesopts", "=", 
        RowBox[{"FilterRules", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{"PlotEvoIsoclinesOpts", "/.", 
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{"opts", ",", 
                  RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}],
                 "]"}]}], "]"}], ",", "opts", ",", 
             RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}], 
           "]"}], ",", 
          RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"plotevostreamsopts", "=", 
        RowBox[{"FilterRules", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{"PlotEvoStreamsOpts", "/.", 
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{"opts", ",", 
                  RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}],
                 "]"}]}], "]"}], ",", "opts", ",", 
             RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}], 
           "]"}], ",", 
          RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "]"}]}], ";", 
       "\n", "\n", 
       RowBox[{"verbose", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Verbose", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}], 
           "]"}]}], "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
       RowBox[{"verboseall", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"VerboseAll", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}], 
           "]"}]}], "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"verboseall", ",", 
         RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"verbose", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
       "\n", 
       RowBox[{"pes", "=", 
        RowBox[{"PlotEvoStreams", "[", 
         RowBox[{"eq2", ",", "Gs", ",", 
          RowBox[{"{", 
           RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Sequence", "@@", "plotevostreamsopts"}], "]"}]}], "]"}]}],
        ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"Print", "[", "pes", "]"}]}], "]"}], ";", "\n", 
       RowBox[{"pei", "=", 
        RowBox[{"PlotEvoIsoclines", "[", 
         RowBox[{"eq2", ",", "Gs", ",", 
          RowBox[{"{", 
           RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Sequence", "@@", "plotevoisoclinesopts"}], "]"}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"Print", "[", "pei", "]"}]}], "]"}], ";", "\n", 
       RowBox[{"mip", "=", 
        RowBox[{"PlotMIP", "[", 
         RowBox[{"eq1", ",", 
          RowBox[{"{", 
           RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Sequence", "@@", "plotmipopts"}], "]"}], ",", 
          RowBox[{"InvStyle", "\[Rule]", 
           RowBox[{"Opacity", "[", "0", "]"}]}]}], "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"Print", "[", "mip", "]"}]}], "]"}], ";", "\n", "\n", 
       RowBox[{"Return", "[", 
        RowBox[{"Show", "[", 
         RowBox[{"pes", ",", "pei", ",", "mip"}], "]"}], "]"}]}]}], "\n", 
     "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.724697019447146*^9, 3.7246970213031073`*^9}, {
   3.72469706642633*^9, 3.724697169129353*^9}, {3.724697214664596*^9, 
   3.724697285641739*^9}, {3.7246981011806183`*^9, 3.7246981736502657`*^9}, {
   3.724698239213654*^9, 3.72469856298286*^9}, {3.724698642137356*^9, 
   3.724698644407136*^9}, {3.72470046389673*^9, 3.724700464286851*^9}, {
   3.724700506231979*^9, 3.724700519840026*^9}, {3.724700566433387*^9, 
   3.724700646902779*^9}, {3.724700774292193*^9, 3.724700778871992*^9}, {
   3.724700826917376*^9, 3.724700830923256*^9}, {3.7247009950713873`*^9, 
   3.724700999429072*^9}, {3.724701287371686*^9, 3.724701300580534*^9}, {
   3.724720978370154*^9, 3.724720983308675*^9}, 3.7251409582546988`*^9, {
   3.728068475006645*^9, 3.728068592342936*^9}, {3.728068632884219*^9, 
   3.728068768467743*^9}, {3.7283432206724977`*^9, 3.728343364836041*^9}, {
   3.7283483012665043`*^9, 3.7283483217739477`*^9}, {3.728348374484375*^9, 
   3.728348396988353*^9}, {3.728348486878311*^9, 3.728348503742139*^9}, {
   3.72834862680094*^9, 3.728348633360413*^9}, {3.728348663588517*^9, 
   3.72834866399977*^9}, {3.728404888603395*^9, 3.728404898454838*^9}, {
   3.728405037260271*^9, 3.728405060744746*^9}, {3.728405119257813*^9, 
   3.72840513247054*^9}, {3.7284051881871643`*^9, 3.7284052034968157`*^9}, {
   3.72840530370956*^9, 3.7284053366663094`*^9}, {3.728405562320778*^9, 
   3.728405573156622*^9}, {3.728405755321515*^9, 3.7284057558381863`*^9}, {
   3.7285859655432863`*^9, 3.728586011519703*^9}, {3.728586047723196*^9, 
   3.72858605137455*^9}, {3.7285861298359003`*^9, 3.728586132108142*^9}, {
   3.7285862096237*^9, 3.728586242317133*^9}, {3.728819782232469*^9, 
   3.728819815422716*^9}, 3.728819845617803*^9, {3.728820268413364*^9, 
   3.728820276597756*^9}, {3.72882086739633*^9, 3.728820885410128*^9}, {
   3.728820956365056*^9, 3.728820986973351*^9}, {3.728821027957884*^9, 
   3.728821039324916*^9}, {3.7288299835716887`*^9, 3.728829987187573*^9}, 
   3.728830357243328*^9, {3.72883157217584*^9, 3.728831604950646*^9}, {
   3.728862792855522*^9, 3.72886279603894*^9}, {3.728862872837451*^9, 
   3.7288628909994802`*^9}, 3.729283948614894*^9, {3.729283987685912*^9, 
   3.729283989670929*^9}, 3.769760706005756*^9, 3.770438265267928*^9, {
   3.77753149643552*^9, 3.777531500881609*^9}, {3.7802982182004347`*^9, 
   3.780298231336269*^9}, {3.7802987124934998`*^9, 3.78029871461928*^9}, 
   3.780299095257649*^9, 
   3.794137241153113*^9},ExpressionUUID->"6f9bb147-4beb-4291-839c-\
51da4dceac41"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"two", " ", "traits"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"PlotEvoPhasePlane", "[", 
     RowBox[{
      RowBox[{"eq0", ":", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"_", "?", "RuleListQ"}], "|", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "\[Equal]", "\"\<FindEcoAttractor\>\""}], "&"}], 
           ")"}]}]}], ")"}], ":", "\"\<FindEcoAttractor\>\""}], ",", 
      RowBox[{"eq1", ":", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"_", "?", "RuleListQ"}], "|", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "\[Equal]", "\"\<FindEcoAttractor\>\""}], "&"}], 
           ")"}]}]}], ")"}], ":", "\"\<FindEcoAttractor\>\""}], ",", "\n", 
      RowBox[{"Gs", ":", 
       RowBox[{"(", 
        RowBox[{"_", "?", "RuleListQ"}], ")"}], ":", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"trait1_", ",", 
        RowBox[{"trait1min_", "?", "NumericQ"}], ",", 
        RowBox[{"trait1max_", "?", "NumericQ"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"trait2_", ",", 
        RowBox[{"trait2min_", "?", "NumericQ"}], ",", 
        RowBox[{"trait2max_", "?", "NumericQ"}]}], "}"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"func", "=", 
         RowBox[{"FuncStyle", "[", "\"\<PlotEvoIsoclines (2Tr)\>\"", "]"}]}], 
        ",", "\n", 
        RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "plotzipopts", ",", 
        "plotevoisoclinesopts", ",", "plotevostreamsopts", ",", "verbose", 
        ",", "verboseall", ",", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "invader", 
        ",", "pes", ",", "pei", ",", "zip"}], "}"}], ",", "\n", "\n", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
          RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
       RowBox[{"plotzipopts", "=", 
        RowBox[{"FilterRules", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{"PlotZIPOpts", "/.", 
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{"opts", ",", 
                  RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}],
                 "]"}]}], "]"}], ",", "opts", ",", 
             RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}], 
           "]"}], ",", 
          RowBox[{"Options", "[", "PlotZIP", "]"}]}], "]"}]}], ";", "\n", 
       RowBox[{"plotevoisoclinesopts", "=", 
        RowBox[{"FilterRules", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{"PlotEvoIsoclinesOpts", "/.", 
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{"opts", ",", 
                  RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}],
                 "]"}]}], "]"}], ",", "opts", ",", 
             RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}], 
           "]"}], ",", 
          RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"plotevostreamsopts", "=", 
        RowBox[{"FilterRules", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{"PlotEvoStreamsOpts", "/.", 
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{"opts", ",", 
                  RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}],
                 "]"}]}], "]"}], ",", "opts", ",", 
             RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}], 
           "]"}], ",", 
          RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "]"}]}], ";", 
       "\n", "\n", 
       RowBox[{"verbose", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Verbose", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}], 
           "]"}]}], "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
       RowBox[{"verboseall", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"VerboseAll", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}], 
           "]"}]}], "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"verboseall", ",", 
         RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"verbose", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
       "\n", 
       RowBox[{"invader", "=", 
        RowBox[{"(", 
         RowBox[{"Guild", "\[Rule]", 
          RowBox[{
           RowBox[{"LookUp", "[", "trait1", "]"}], "\[LeftDoubleBracket]", 
           "2", "\[RightDoubleBracket]"}]}], ")"}]}], ";", "\n", "\n", 
       RowBox[{"pes", "=", 
        RowBox[{"PlotEvoStreams", "[", 
         RowBox[{"eq1", ",", "Gs", ",", 
          RowBox[{"{", 
           RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"trait2", ",", "trait2min", ",", "trait2max"}], "}"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Sequence", "@@", "plotevostreamsopts"}], "]"}]}], "]"}]}],
        ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"Print", "[", "pes", "]"}]}], "]"}], ";", "\n", 
       RowBox[{"pei", "=", 
        RowBox[{"PlotEvoIsoclines", "[", 
         RowBox[{"eq1", ",", "Gs", ",", 
          RowBox[{"{", 
           RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"trait2", ",", "trait2min", ",", "trait2max"}], "}"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Sequence", "@@", "plotevoisoclinesopts"}], "]"}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"Print", "[", "pei", "]"}]}], "]"}], ";", "\n", 
       RowBox[{"zip", "=", 
        RowBox[{"PlotZIP", "[", 
         RowBox[{"eq0", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"trait1", "/.", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x_", ",", "_"}], "]"}], "\[Rule]", 
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", "0"}], "]"}]}]}], ")"}], ",", "trait1min", 
            ",", "trait1max"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"trait2", "/.", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x_", ",", "_"}], "]"}], "\[Rule]", 
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", "0"}], "]"}]}]}], ")"}], ",", "trait2min", 
            ",", "trait2max"}], "}"}], ",", "\n", "invader", ",", 
          RowBox[{"InvStyle", "\[Rule]", 
           RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
          RowBox[{"NonInvStyle", "\[Rule]", "White"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Sequence", "@@", "plotzipopts"}], "]"}]}], "]"}]}], ";", 
       "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"Print", "[", "zip", "]"}]}], "]"}], ";", "\n", "\n", 
       RowBox[{"Return", "[", 
        RowBox[{"Show", "[", 
         RowBox[{"pes", ",", "pei", ",", "zip"}], "]"}], "]"}]}]}], "\n", 
     "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.724697019447146*^9, 3.7246970213031073`*^9}, {
   3.72469706642633*^9, 3.724697169129353*^9}, {3.724697214664596*^9, 
   3.724697285641739*^9}, {3.7246981011806183`*^9, 3.7246981736502657`*^9}, {
   3.724698239213654*^9, 3.72469856298286*^9}, {3.724698642137356*^9, 
   3.724698644407136*^9}, {3.72470046389673*^9, 3.724700464286851*^9}, {
   3.724700506231979*^9, 3.724700519840026*^9}, {3.724700566433387*^9, 
   3.724700646902779*^9}, {3.724700774292193*^9, 3.724700778871992*^9}, {
   3.724700826917376*^9, 3.724700830923256*^9}, {3.7247009950713873`*^9, 
   3.724700999429072*^9}, {3.724701287371686*^9, 3.724701300580534*^9}, {
   3.724720978370154*^9, 3.724720983308675*^9}, 3.7251409582546988`*^9, {
   3.728068475006645*^9, 3.728068592342936*^9}, {3.728068632884219*^9, 
   3.728068768467743*^9}, {3.7283432206724977`*^9, 3.728343364836041*^9}, {
   3.7283483012665043`*^9, 3.7283483217739477`*^9}, {3.728348374484375*^9, 
   3.728348396988353*^9}, {3.728348486878311*^9, 3.728348503742139*^9}, {
   3.72834862680094*^9, 3.728348633360413*^9}, {3.728348663588517*^9, 
   3.72834866399977*^9}, {3.728404888603395*^9, 3.728404898454838*^9}, {
   3.728405037260271*^9, 3.728405060744746*^9}, {3.728405119257813*^9, 
   3.72840513247054*^9}, {3.728405318909446*^9, 3.728405332906982*^9}, {
   3.7285861557564774`*^9, 3.728586157112397*^9}, {3.728586198123879*^9, 
   3.7285862004153*^9}, {3.728587415797456*^9, 3.728587435881077*^9}, {
   3.728588271458798*^9, 3.728588276303328*^9}, {3.728783962856596*^9, 
   3.7287839928313637`*^9}, {3.728819296611228*^9, 3.728819308981386*^9}, {
   3.72881937632827*^9, 3.728819445087624*^9}, {3.7288194833672237`*^9, 
   3.728819605143322*^9}, {3.728819745131226*^9, 3.728819770465191*^9}, {
   3.728819893925602*^9, 3.728819921302905*^9}, {3.728820086054214*^9, 
   3.728820185718195*^9}, {3.7288202858775053`*^9, 3.728820288733839*^9}, {
   3.728820894964156*^9, 3.72882092400508*^9}, {3.728820960892632*^9, 
   3.728820978820166*^9}, {3.728821044180765*^9, 3.7288210572207336`*^9}, {
   3.7288296167784023`*^9, 3.728829673359247*^9}, {3.728829765869041*^9, 
   3.7288297910501013`*^9}, {3.728829860386531*^9, 3.728829865041299*^9}, {
   3.728829954917862*^9, 3.7288299596499662`*^9}, {3.72883036118251*^9, 
   3.728830368278039*^9}, {3.728831247633954*^9, 3.728831321998694*^9}, {
   3.7288315349697533`*^9, 3.7288315658102007`*^9}, 3.728831611039544*^9, {
   3.728831666971657*^9, 3.728831669534005*^9}, {3.728862799818315*^9, 
   3.728862808527206*^9}, {3.72886288038385*^9, 3.728862894175058*^9}, {
   3.728862999191414*^9, 3.728863001779942*^9}, {3.7292977122325573`*^9, 
   3.729297729835682*^9}, {3.729298282334483*^9, 3.729298314467617*^9}, {
   3.7292985097817917`*^9, 3.7292985756987057`*^9}, {3.729298740283801*^9, 
   3.72929876503258*^9}, {3.7292988212312927`*^9, 3.729298837862853*^9}, {
   3.729298880696652*^9, 3.729298885250896*^9}, {3.729299156276926*^9, 
   3.7292991587709103`*^9}, {3.7292994636549788`*^9, 3.729299464105835*^9}, 
   3.76976070601998*^9, {3.770220703311924*^9, 3.7702207087871847`*^9}, 
   3.770438265276232*^9, 
   3.794137241161077*^9},ExpressionUUID->"0332d0e0-1cfb-4e93-a060-\
16cd76de0fef"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"two", " ", "traits"}], " ", "-", " ", 
    RowBox[{"no", " ", "eq0", " ", "alias"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"PlotEvoPhasePlane", "[", 
     RowBox[{
      RowBox[{"eq1", ":", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"_", "?", "RuleListQ"}], "|", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "\[Equal]", "\"\<FindEcoAttractor\>\""}], "&"}], 
           ")"}]}]}], ")"}], ":", "\"\<FindEcoAttractor\>\""}], ",", "\n", 
      RowBox[{"Gs", ":", 
       RowBox[{"(", 
        RowBox[{"_", "?", "RuleListQ"}], ")"}], ":", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"trait1_", ",", 
        RowBox[{"trait1min_", "?", "NumericQ"}], ",", 
        RowBox[{"trait1max_", "?", "NumericQ"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"trait2_", ",", 
        RowBox[{"trait2min_", "?", "NumericQ"}], ",", 
        RowBox[{"trait2max_", "?", "NumericQ"}]}], "}"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
    RowBox[{"PlotEvoPhasePlane", "[", 
     RowBox[{"\"\<FindEcoAttractor\>\"", ",", "eq1", ",", "Gs", ",", 
      RowBox[{"{", 
       RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"trait2", ",", "trait2min", ",", "trait2max"}], "}"}], ",", 
      "opts"}], "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.728830435349831*^9, 3.728830442105711*^9}, {
  3.7288310809803057`*^9, 3.728831133682495*^9}, {3.728831191111587*^9, 
  3.728831194443572*^9}},ExpressionUUID->"b0e38398-155e-41ae-9925-\
43f1aaa63f30"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.769494519664072*^9, 
  3.769494520435389*^9}},ExpressionUUID->"2441b342-24e8-4a33-8a1a-\
1c77334fc66f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PlotMIPOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"PlotZIPOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"PlotEvoIsoclinesOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"PlotEvoStreamsOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.7284053399560347`*^9, {3.728585440908579*^9, 3.728585450823987*^9}, {
   3.728819711431972*^9, 
   3.7288197153434258`*^9}},ExpressionUUID->"5be71ed4-d6c8-4862-804c-\
ba5e024d4598"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["EcoEvoSim", "Subsection",ExpressionUUID->"9aa466c4-fcbb-4363-9c3d-4e50b9fff8d0"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"d34d707f-a2a9-4d15-bde5-\
e724e19d1e25"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoEvoSim", "::", "usage"}], "=", "\n", 
   "\"\<EcoEvoSim[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"variables\", \"TI\"]\), \!\(\*StyleBox[\"tmax\", \"TI\"]\)] \
simulates coupled ecological and evolutionary dynamics, with initial \
\!\(\*StyleBox[\"traits\", \"TI\"]\) and \!\(\*StyleBox[\"variables\", \
\"TI\"]\).\nEcoEvoSim[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"variables\", \"TI\"]\), \!\(\*StyleBox[\"varcovars\", \
\"TI\"]\), \!\(\*StyleBox[\"tmax\", \"TI\"]\)] uses trait \
variances/covariances in \!\(\*StyleBox[\"varcovars\", \"TI\"]\).\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.76949027179428*^9, 3.769490302183877*^9}, {
  3.807402294057211*^9, 3.807402294338151*^9}, {3.807402328906706*^9, 
  3.8074023361789837`*^9}},ExpressionUUID->"544221c0-7165-452a-b218-\
f6ce6f9b007f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"56043399-0bb1-4b9c-b6ad-\
d57380ba038a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EcoEvoSim", "[", 
   RowBox[{
    RowBox[{"traits_", "?", "AttributesQ"}], ",", 
    RowBox[{"variables_", "?", "VariablesQ"}], ",", 
    RowBox[{"Gs", ":", 
     RowBox[{"(", 
      RowBox[{"_", "?", "GsQ"}], ")"}], ":", 
     RowBox[{"{", "}"}]}], ",", 
    RowBox[{"tmax_", "?", "NumericQ"}], ",", 
    RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\n", 
     RowBox[{
      RowBox[{"func", "=", 
       RowBox[{"FuncStyle", "[", "\"\<EcoEvoSim\>\"", "]"}]}], ",", "\n", 
      RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
      "verboseall", ",", "\n", "logged", ",", "boundarydetection", ",", 
      "ndsolveopts", ",", "wheneventopts", ",", "delaydinv", ",", "fixed", 
      ",", "tmin", ",", "outputtmin", ",", "output", ",", "freezetraits", ",",
       "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "fixedvars", 
      ",", "fixedattributes", ",", "fixedvariables", ",", "nonfixedvars", ",",
       "\n", "tic", ",", "ecoeqns", ",", "evoeqns", ",", "eqns", ",", "ics", 
      ",", "unks", ",", "discretevars", ",", "bdwhens", ",", "res", ",", 
      "sol"}], "}"}], ",", "\n", "\n", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
          RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
       "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Max", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"ngcomps", "[", "gu", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "]"}], ">", 
           "1"}], "&&", 
          RowBox[{"modelperiod", "\[NotEqual]", "0"}]}], ",", 
         RowBox[{"Message", "[", 
          RowBox[{"EcoEvoSim", "::", "susmtd"}], "]"}]}], "]"}], ";", "\n", 
       "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
       RowBox[{"verbose", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Verbose", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "EcoEvoSim", "]"}]}], "}"}], "]"}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
       RowBox[{"verboseall", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"VerboseAll", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "EcoEvoSim", "]"}]}], "}"}], "]"}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"verboseall", ",", 
         RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
       RowBox[{"logged", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Logged", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "EcoEvoSim", "]"}]}], "}"}], "]"}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"boundarydetection", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"BoundaryDetection", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "EcoEvoSim", "]"}]}], "}"}], "]"}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"ndsolveopts", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"NDSolveOpts", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "EcoEvoSim", "]"}]}], "}"}], "]"}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"wheneventopts", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"WhenEventOpts", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "EcoEvoSim", "]"}]}], "}"}], "]"}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"delaydinv", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"DelayDInv", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "EcoEvoSim", "]"}]}], "}"}], "]"}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"fixed", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Fixed", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "EcoEvoSim", "]"}]}], "}"}], "]"}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"tmin", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"TMin", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "EcoEvoSim", "]"}]}], "}"}], "]"}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"outputtmin", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"OutputTMin", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "EcoEvoSim", "]"}]}], "}"}], "]"}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"output", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Output", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "EcoEvoSim", "]"}]}], "}"}], "]"}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"freezetraits", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"FreezeTraits", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "EcoEvoSim", "]"}]}], "}"}], "]"}]}], 
         "]"}]}], ";", "\n", "\n", 
       RowBox[{"fixedvars", "=", 
        RowBox[{"fixed", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
       RowBox[{"fixedattributes", "=", 
        RowBox[{"ExtractAttributes", "[", "fixed", "]"}]}], ";", "\n", 
       RowBox[{"fixedvariables", "=", 
        RowBox[{"ExtractVariables", "[", "fixed", "]"}]}], ";", "\n", 
       RowBox[{"nonfixedvars", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"traits", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"variables", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
       ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"func", ",", "\"\<: fixedvars=\>\"", ",", "fixedvars"}], 
          "]"}]}], "]"}], ";", "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{
        "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
         "in", " ", "guilds"}], " ", "*)"}], "\n", 
       RowBox[{"Set\[ScriptCapitalN]", "[", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{"traits", ",", "fixedattributes"}], "]"}], ",", 
         RowBox[{"Join", "[", 
          RowBox[{"variables", ",", "fixedvariables"}], "]"}]}], "]"}], ";", 
       "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<\[ScriptCapitalN]=\>\"", ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "]"}]}], "]"}],
        ";", "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"find", " ", "time", " ", "for", " ", "ICs"}], " ", "*)"}], 
       "\n", 
       RowBox[{"tic", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelwhenevents", "\[Equal]", 
           RowBox[{"{", "}"}]}], ",", "tmin", ",", 
          RowBox[{"tmin", "-", "$MachineEpsilon"}]}], "]"}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "hack", " ", "to", " ", "ensure", " ", "that", " ", "events", " ", 
          "are", " ", "triggered", " ", "at", " ", "t"}], "=", "tmin"}], " ", 
        "*)"}], "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "up", " ", "ics"}], " ", "*)"}], "\n", 
       RowBox[{"ics", "=", 
        RowBox[{"Table", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"logged", "===", "True"}], "&&", 
             RowBox[{
              RowBox[{"comptype", "[", "var", "]"}], "===", 
              "\"\<Extensive\>\""}]}], ",", "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"log", "[", "var", "]"}], "[", "tic", "]"}], "\[Equal]", 
             RowBox[{"Log", "[", 
              RowBox[{"var", "/.", "variables"}], "]"}]}], ",", "\n", "\t\t", 
            
            RowBox[{
             RowBox[{"var", "[", "tic", "]"}], "\[Equal]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"var", "/.", "traits"}], "/.", "variables"}], 
              ")"}]}]}], "]"}], "\n", ",", 
          RowBox[{"{", 
           RowBox[{"var", ",", "nonfixedvars"}], "}"}]}], "]"}]}], ";", "\n", 
       "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"insert", " ", 
         RowBox[{"unks", "[", "]"}], " ", "for", " ", "delaydinv"}], " ", 
        "*)"}], "\n", 
       RowBox[{"If", "[", 
        RowBox[{"delaydinv", ",", 
         RowBox[{"ics", "=", 
          RowBox[{"ics", "/.", "ToUnks"}]}]}], "]"}], ";", "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"set", " ", "up", " ", "ecoeqns"}], " ", "&"}], " ", 
         "evoeqns"}], " ", "*)"}], "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"ecoeqns", "=", 
          RowBox[{
           RowBox[{"EcoEqns", "[", 
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{"BlankTraits", ",", 
               RowBox[{"ExtractInteractions", "[", "traits", "]"}]}], "]"}], 
             ",", "opts"}], "]"}], "/.", "AddTraitts"}]}], ";"}], "*)"}], 
       "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"ecoeqns", "=", 
          RowBox[{
           RowBox[{"EcoEqns", "[", 
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{"BlankTraits", ",", "fixedattributes"}], "]"}], ",", 
             "opts"}], "]"}], "/.", "AddTraitts"}]}], ";"}], "*)"}], "\n", 
       RowBox[{"ecoeqns", "=", 
        RowBox[{
         RowBox[{"EcoEqns", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"\[FormalCapitalN]", "[", "gu", "]"}], "\[Rule]", 
              RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", 
           RowBox[{"Fixed", "\[Rule]", "fixed"}], ",", "opts"}], "]"}], "/.", 
         "AddTraitts"}]}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"evoeqns", "=", 
          RowBox[{"EvoEqns", "[", 
           RowBox[{
            RowBox[{"ExtractInteractions", "[", "traits", "]"}], ",", 
            "BlankVariables", ",", "Gs", ",", "opts"}], "]"}]}], ";"}], 
        "*)"}], "\n", 
       RowBox[{"evoeqns", "=", 
        RowBox[{"EvoEqns", "[", 
         RowBox[{"BlankVariables", ",", "Gs", ",", "opts"}], "]"}]}], ";", 
       "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<ecoeqns=\>\"", ",", "ecoeqns"}], "]"}], ";", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<evoeqns=\>\"", ",", "evoeqns"}], "]"}]}]}], "]"}], 
       ";", "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"insert", " ", 
         RowBox[{"Unks", "[", "]"}], " ", "for", " ", "delaydinv"}], " ", 
        "*)"}], "\n", 
       RowBox[{"If", "[", 
        RowBox[{"delaydinv", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"ecoeqns", "=", 
           RowBox[{"ecoeqns", "/.", "ToUnks"}]}], ";", "\n", "\t", 
          RowBox[{"evoeqns", "=", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"evoeqns", "/.", "ToUnkRules"}], "/.", 
               RowBox[{
                RowBox[{"Unk", "[", "var_", "]"}], "\[Rule]", 
                RowBox[{
                 RowBox[{"Unk", "[", "var", "]"}], "[", "t", "]"}]}]}], "/.", 
              
              RowBox[{
               RowBox[{"var_", "[", 
                RowBox[{"t", "+", "1"}], "]"}], "\[Rule]", 
               RowBox[{
                RowBox[{"Unk", "[", "var", "]"}], "[", 
                RowBox[{"t", "+", "1"}], "]"}]}]}], "/.", 
             RowBox[{
              RowBox[{
               RowBox[{"var_", "'"}], "[", "t", "]"}], "\[Rule]", 
              RowBox[{
               RowBox[{
                RowBox[{"Unk", "[", "var", "]"}], "'"}], "[", "t", "]"}]}]}], 
            "/.", 
            RowBox[{"ExpRule", "[", 
             RowBox[{"AllVariables", ",", "logged"}], "]"}]}]}], ";"}]}], 
        "\n", "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<ecoeqns=\>\"", ",", "ecoeqns"}], "]"}], ";", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<evoeqns=\>\"", ",", "evoeqns"}], "]"}], ";"}], "*)"}], 
       "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"boundary", " ", "detection"}], " ", "*)"}], "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"boundarydetection", "\[Equal]", "True"}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{"Which", "[", "\n", "\t\t", 
           RowBox[{
            RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], ",", 
            "\n", "\t\t", 
            RowBox[{
             RowBox[{"bdwhens", "=", 
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"WhenEvent", "[", 
                  RowBox[{"event", ",", "action", ",", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "wheneventopts"}], "]"}]}], 
                  "]"}], "/.", 
                 RowBox[{"(", 
                  RowBox[{"evoeqns", "/.", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"var_", "'"}], "[", "t", "]"}], "\[Equal]", 
                    "rhs_"}], ")"}], "\[RuleDelayed]", 
                    RowBox[{"{", "\n", "\t\t\t", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"event", "\[Rule]", 
                    RowBox[{
                    RowBox[{"var", "[", "t", "]"}], ">", 
                    RowBox[{"Max", "[", 
                    RowBox[{"range", "[", 
                    RowBox[{"var", "/.", "FromUnks"}], "]"}], "]"}]}]}], ",", 
                    
                    RowBox[{"action", "\[Rule]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"in", "[", "var", "]"}], "[", "t", "]"}], 
                    "\[Rule]", "0"}]}]}], "}"}], ",", "\n", "\t\t\t", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"event", "\[Rule]", 
                    RowBox[{
                    RowBox[{"var", "[", "t", "]"}], "<", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"range", "[", "var", "]"}], "/.", "FromUnks"}], 
                    "]"}]}]}], ",", 
                    RowBox[{"action", "\[Rule]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"in", "[", "var", "]"}], "[", "t", "]"}], 
                    "\[Rule]", "0"}]}]}], "}"}], ",", "\n", "\t\t\t", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"event", "\[Rule]", 
                    RowBox[{
                    RowBox[{"rhs", ">", "0"}], "&&", 
                    RowBox[{
                    RowBox[{"var", "[", "t", "]"}], "\[Equal]", 
                    RowBox[{"Min", "[", 
                    RowBox[{"range", "[", 
                    RowBox[{"var", "/.", "FromUnks"}], "]"}], "]"}]}]}]}], 
                    ",", 
                    RowBox[{"action", "\[Rule]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"in", "[", "var", "]"}], "[", "t", "]"}], 
                    "\[Rule]", "1"}]}]}], "}"}], ",", "\n", "\t\t\t", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"event", "\[Rule]", 
                    RowBox[{
                    RowBox[{"rhs", "<", "0"}], "&&", 
                    RowBox[{
                    RowBox[{"var", "[", "t", "]"}], "\[Equal]", 
                    RowBox[{"Max", "[", 
                    RowBox[{"range", "[", 
                    RowBox[{"var", "/.", "FromUnks"}], "]"}], "]"}]}]}]}], 
                    ",", 
                    RowBox[{"action", "\[Rule]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"in", "[", "var", "]"}], "[", "t", "]"}], 
                    "\[Rule]", "1"}]}]}], "}"}]}], "\n", "\t\t", "}"}]}]}], 
                  ")"}]}], ",", "1"}], "]"}]}], ";", "\n", "\t\t", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"Print", "[", 
                RowBox[{"func", ",", "\"\<: bdwhens=\>\""}], "]"}], ";", 
               RowBox[{"Print", "[", "bdwhens", "]"}], ";"}], "*)"}], "\n", 
             "\t\t", 
             RowBox[{"discretevars", "=", 
              RowBox[{"evoeqns", "/.", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"var_", "'"}], "[", "t", "]"}], "\[Equal]", 
                  "rhs_"}], ")"}], "\[Rule]", 
                RowBox[{"in", "[", "var", "]"}]}]}]}], ";", "\n", "\t\t", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"Print", "[", 
                RowBox[{"\"\<discretevars=\>\"", ",", "discretevars"}], "]"}],
                ";"}], "*)"}], "\n", "\t\t", 
             RowBox[{"ics", "=", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Join", "[", 
                RowBox[{"ics", ",", 
                 RowBox[{"evoeqns", "/.", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"var_", "'"}], "[", "t", "]"}], "\[Equal]", 
                    "rhs_"}], ")"}], "\[Rule]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"in", "[", "var", "]"}], "[", "0", "]"}], 
                    "\[Equal]", "1"}]}]}]}], "]"}], "]"}]}], ";", "\n", 
             "\t\t", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"Print", "[", 
                RowBox[{"\"\<ics=\>\"", ",", "ics"}], "]"}], ";"}], "*)"}], 
             "\n", "\t\t", 
             RowBox[{"evoeqns", "=", 
              RowBox[{"evoeqns", "/.", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"var_", "'"}], "[", "t", "]"}], "\[Equal]", 
                  "rhs_"}], ")"}], "\[Rule]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"var", "'"}], "[", "t", "]"}], "\[Equal]", 
                 RowBox[{"rhs", "*", 
                  RowBox[{
                   RowBox[{"in", "[", "var", "]"}], "[", "t", 
                   "]"}]}]}]}]}]}]}], "\n", "\t", ",", "\n", "\t\t", 
            RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], ",", 
            "\n", "\t\t", 
            RowBox[{
             RowBox[{"evoeqns", "=", 
              RowBox[{"evoeqns", "/.", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"var_", "[", 
                   RowBox[{"t", "+", "1"}], "]"}], "\[Equal]", "rhs_"}], 
                 ")"}], "\[RuleDelayed]", 
                RowBox[{
                 RowBox[{"var", "[", 
                  RowBox[{"t", "+", "1"}], "]"}], "\[Equal]", 
                 RowBox[{"Clip", "[", 
                  RowBox[{"rhs", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"range", "[", "var", "]"}], "]"}], ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{"range", "[", "var", "]"}], "]"}]}], "}"}]}], 
                  "]"}]}]}]}]}], ";"}]}], "\n", "\t", "]"}], ";"}], "\n", ",",
          "\n", "\t", 
         RowBox[{
          RowBox[{"bdwhens", "=", 
           RowBox[{"{", "}"}]}], ";", "\n", "\t", 
          RowBox[{"discretevars", "=", 
           RowBox[{"{", "}"}]}], ";"}]}], "\n", "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<ecoeqns=\>\"", ",", "ecoeqns"}], "]"}], ";", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<evoeqns=\>\"", ",", "evoeqns"}], "]"}], ";"}], "*)"}], 
       "\n", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"freezetraits", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"ecoeqns", "=", 
           RowBox[{"ReplaceRHS", "[", 
            RowBox[{"ecoeqns", ",", 
             RowBox[{"{", 
              RowBox[{"RemoveTraitts", ",", "traits"}], "}"}]}], "]"}]}], ";",
           "\n", "\t", 
          RowBox[{"evoeqns", "=", 
           RowBox[{"ReplaceRHS", "[", 
            RowBox[{"evoeqns", ",", 
             RowBox[{"{", 
              RowBox[{"RemoveTraitts", ",", "traits"}], "}"}]}], "]"}]}], 
          ";"}]}], "\n", "]"}], ";", "\n", "\n", 
       RowBox[{"eqns", "=", 
        RowBox[{"Join", "[", 
         RowBox[{"ecoeqns", ",", "evoeqns"}], "]"}]}], ";", "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "up", " ", "unks"}], " ", "*)"}], "\n", 
       RowBox[{"unks", "=", 
        RowBox[{
         RowBox[{"eqns", "/.", "LHS"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"var_", "'"}], "[", "t", "]"}], "\[Rule]", "var"}], ",", 
           
           RowBox[{
            RowBox[{
             RowBox[{"var_", "[", 
              RowBox[{"t", "+", "1"}], "]"}], "/", 
             RowBox[{"var_", "[", "t", "]"}]}], "\[Rule]", "var"}], ",", 
           RowBox[{
            RowBox[{"var_", "[", 
             RowBox[{"t", "+", "1"}], "]"}], "\[Rule]", "var"}]}], "}"}]}]}], 
       ";", "\n", "\n", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"verbose", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: eqns=\>\""}], "]"}], ";", 
          RowBox[{"Print", "[", "eqns", "]"}], ";", "\n", "\t", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: ics=\>\""}], "]"}], ";", 
          RowBox[{"Print", "[", "ics", "]"}], ";", "\n", "\t", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: unks=\>\""}], "]"}], ";", 
          RowBox[{"Print", "[", "unks", "]"}], ";", "\n", "\t", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: bdwhens=\>\""}], "]"}], ";", 
          RowBox[{"Print", "[", "bdwhens", "]"}], ";", "\n", "\t", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: discretevars=\>\""}], "]"}], ";", 
          RowBox[{"Print", "[", "discretevars", "]"}], ";"}]}], "\n", "]"}], 
       ";", "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"solve", " ", "it"}], " ", "*)"}], "\n", "\n", 
       RowBox[{"Which", "[", "\n", "\t", 
        RowBox[{
         RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], ",", 
         "\n", "\t", 
         RowBox[{
          RowBox[{"Off", "[", 
           RowBox[{"NDSolve", "::", "wenset"}], "]"}], ";", " ", 
          RowBox[{"(*", " ", 
           RowBox[{
           "in", " ", "case", " ", "a", " ", "modelwhenevent", " ", 
            "involves", " ", "a", " ", "fixed", " ", "variable"}], " ", 
           "*)"}], "\n", "\t", 
          RowBox[{"sol", "=", 
           RowBox[{
            RowBox[{"NDSolve", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"Join", "[", 
                RowBox[{
                "eqns", ",", "ics", ",", "bdwhens", ",", "modelwhenevents"}], 
                "]"}], "]"}], ",", "unks", ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "outputtmin", ",", "tmax"}], "}"}], ",", 
              RowBox[{"DiscreteVariables", "\[Rule]", "discretevars"}], ",", 
              "\n", "\t\t", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "ndsolveopts"}], "]"}]}], "]"}], 
            "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";", 
          "\n", "\t", 
          RowBox[{"On", "[", 
           RowBox[{"NDSolve", "::", "wenset"}], "]"}], ";", "\n", "\t", 
          RowBox[{"sol", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"sol", ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"fixedvar", "\[Rule]", 
                RowBox[{"Interpolation", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"tmin", ",", 
                    RowBox[{"fixedvar", "/.", "fixed"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"tmax", ",", 
                    RowBox[{"fixedvar", "/.", "fixed"}]}], "}"}]}], "}"}], 
                  ",", 
                  RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}]}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"fixedvar", ",", "fixedvars"}], "}"}]}], "]"}]}], 
            "]"}]}], ";"}], "\n", ",", "\n", "\t", 
         RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Compiled", "\[Rule]", "False"}], "}"}], " ", 
            "workaround", " ", "for", " ", "bug", " ", "in", " ", 
            "RecurrenceTable", " ", "11.0", ".1"}]}], " ", "*)"}], "\n", "\t", 
         RowBox[{
          RowBox[{"res", "=", 
           RowBox[{"Transpose", "[", 
            RowBox[{"RecurrenceTable", "[", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{"eqns", ",", "ics"}], "]"}], ",", "unks", ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "tmin", ",", "tmax"}], "}"}]}], 
             RowBox[{"(*", 
              RowBox[{",", 
               RowBox[{"Method", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"Compiled", "\[Rule]", "False"}], "}"}]}]}], "*)"}], 
             "]"}], "]"}]}], ";", "\n", "\t", 
          RowBox[{"sol", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
              "unks", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
              "\[Rule]", 
              RowBox[{"TimeSeries", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Table", "[", 
                   RowBox[{"t", ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "tmin", ",", "tmax"}], "}"}]}], "]"}], 
                  ",", 
                  RowBox[{
                  "res", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}]}], "}"}], "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "unks", "]"}]}], "}"}]}], "]"}]}], ";", 
          "\n", "\t", 
          RowBox[{"sol", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"sol", ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"fixedvar", "\[Rule]", 
                RowBox[{"TimeSeries", "[", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"t", ",", 
                    RowBox[{"fixedvar", "/.", "fixed"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"t", ",", "tmin", ",", "tmax"}], "}"}]}], "]"}], 
                 "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"fixedvar", ",", "fixedvars"}], "}"}]}], "]"}]}], 
            "]"}]}], ";"}]}], "\n", "]"}], ";", "\n", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"delaydinv", ",", 
         RowBox[{"sol", "=", 
          RowBox[{"sol", "/.", "FromUnks"}]}]}], "]"}], ";", "\n", "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"logged", "===", "True"}], ",", "\n", 
         StyleBox["\t",
          Background->RGBColor[1, 0.5, 0.5]], 
         StyleBox[
          RowBox[{"res", "=", 
           RowBox[{"Table", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Head", "[", "var", "]"}], "===", "log"}], ",", "\n", 
               "\t\t\t", 
               RowBox[{
                RowBox[{
                "var", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                 "\[Rule]", 
                RowBox[{"Reinterpolation", "[", 
                 RowBox[{
                  RowBox[{"E", "^", "var"}], "/.", "sol"}], "]"}]}], ",", 
               "\n", "\t\t\t", 
               RowBox[{"var", "\[Rule]", 
                RowBox[{"(", 
                 RowBox[{"var", "/.", "sol"}], ")"}]}]}], "]"}], "\n", "\t", 
             ",", 
             RowBox[{"{", 
              RowBox[{"var", ",", 
               RowBox[{"Keys", "[", "sol", "]"}]}], "}"}]}], "]"}]}],
          Background->RGBColor[1, 0.5, 0.5]], "\n", ",", "\n", "\t", 
         RowBox[{"res", "=", "sol"}]}], "\n", "]"}], ";", "\n", "\t", "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"output", "\[Equal]", "\"\<FinalSlice\>\""}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"SortRuleList", "[", 
           RowBox[{
            RowBox[{"Chop", "[", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"FinalSlice", "[", "res", "]"}], ",", "fixed"}], "]"}],
              "]"}], ",", 
            RowBox[{"Join", "[", 
             RowBox[{"AllVariables", ",", "AllTraits"}], "]"}]}], "]"}], 
          "]"}]}], "]"}], ";", "\n", "\n", 
       RowBox[{"Return", "[", 
        RowBox[{"SortRuleList", "[", 
         RowBox[{"res", ",", 
          RowBox[{"Join", "[", 
           RowBox[{"AllVariables", ",", "AllTraits"}], "]"}]}], "]"}], "]"}], 
       ";"}]}], "\n", "\n", "]"}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.687881459708519*^9, 3.6878814620008802`*^9}, {
   3.6885717080399113`*^9, 3.688571710024156*^9}, {3.688571771709165*^9, 
   3.688571772816881*^9}, {3.6891997016816177`*^9, 3.689199704809791*^9}, {
   3.693569531004081*^9, 3.693569533518059*^9}, {3.69356957382106*^9, 
   3.6935695741698933`*^9}, {3.6935696738539143`*^9, 3.693569677819133*^9}, {
   3.6935698047228117`*^9, 3.693569844813993*^9}, {3.693570266714691*^9, 
   3.693570280777845*^9}, {3.6935704353174553`*^9, 3.693570458139625*^9}, {
   3.693570504139751*^9, 3.693570510031801*^9}, {3.693570546228794*^9, 
   3.6935705521105623`*^9}, {3.6935706074368258`*^9, 
   3.6935706090445147`*^9}, {3.6935707324409933`*^9, 3.693570760698144*^9}, {
   3.693574871978578*^9, 3.693574874191864*^9}, {3.693575063460265*^9, 
   3.693575095144539*^9}, {3.6935751282342987`*^9, 3.693575137417612*^9}, {
   3.693575194624599*^9, 3.6935751981367893`*^9}, 3.69359318844517*^9, {
   3.693594089123968*^9, 3.693594131750291*^9}, {3.693648414531608*^9, 
   3.693648418552388*^9}, {3.693649147307433*^9, 3.693649151306587*^9}, {
   3.6936495558963623`*^9, 3.693649567763896*^9}, {3.693649698665764*^9, 
   3.693649718209277*^9}, {3.693649983014291*^9, 3.693649997242382*^9}, {
   3.693650068907185*^9, 3.693650099792047*^9}, {3.693650207173668*^9, 
   3.6936502176510973`*^9}, {3.6936502716791687`*^9, 
   3.6936504039824543`*^9}, {3.693650447098177*^9, 3.693650447238262*^9}, {
   3.693650516407405*^9, 3.693650523667107*^9}, {3.6936506012289047`*^9, 
   3.6936506014161053`*^9}, {3.693650666404994*^9, 3.693650667364908*^9}, 
   3.6937003306398773`*^9, {3.6937006609718924`*^9, 3.693700661809492*^9}, {
   3.693700831095278*^9, 3.693700898853032*^9}, {3.69370119137938*^9, 
   3.69370120184767*^9}, 3.693701251627426*^9, 3.6940327250755777`*^9, {
   3.6940329515374403`*^9, 3.694032956430676*^9}, {3.694032995983953*^9, 
   3.6940330090266*^9}, {3.694033275081205*^9, 3.694033279487762*^9}, {
   3.694033403345838*^9, 3.694033417029489*^9}, {3.6940374471747704`*^9, 
   3.694037448278808*^9}, {3.694037487148347*^9, 3.694037509461347*^9}, {
   3.694043178020327*^9, 3.694043235469736*^9}, {3.6940438426321163`*^9, 
   3.6940438430244303`*^9}, 3.694045986119381*^9, {3.6940463640701723`*^9, 
   3.694046374281918*^9}, {3.694046526541377*^9, 3.694046526768881*^9}, {
   3.6940465778926373`*^9, 3.6940465889427557`*^9}, {3.69404679987775*^9, 
   3.694046880073175*^9}, {3.694089169545682*^9, 3.694089267811854*^9}, {
   3.694091150081328*^9, 3.6940911662282877`*^9}, 3.694091909032544*^9, {
   3.6940919419949903`*^9, 3.694091962161137*^9}, 3.694092114207649*^9, 
   3.696845912573071*^9, {3.700002557556921*^9, 3.700002557690922*^9}, 
   3.700002588925152*^9, {3.709336809919558*^9, 3.709336811451446*^9}, {
   3.710105990667719*^9, 3.71010599131419*^9}, {3.710240498942416*^9, 
   3.7102405058427973`*^9}, {3.7102408221290092`*^9, 
   3.7102408221779833`*^9}, {3.710256756559593*^9, 3.7102568029023542`*^9}, {
   3.710256848497699*^9, 3.710256892649102*^9}, 3.710324423187841*^9, {
   3.711496593406829*^9, 3.711496609176578*^9}, {3.711496720759534*^9, 
   3.711496721303083*^9}, {3.711496818958602*^9, 3.711496846903221*^9}, {
   3.7114980044707527`*^9, 3.711498010870504*^9}, 3.711498043873908*^9, {
   3.7114981398293447`*^9, 3.711498155619417*^9}, {3.7114982532555428`*^9, 
   3.711498280523506*^9}, {3.711498342068375*^9, 3.711498390621694*^9}, {
   3.711498550090169*^9, 3.711498550817781*^9}, {3.711499138450841*^9, 
   3.7114991499244213`*^9}, {3.712738534888835*^9, 3.712738534919189*^9}, {
   3.712740223721537*^9, 3.71274022375333*^9}, 3.722029539710425*^9, {
   3.7220341994453497`*^9, 3.72203420464955*^9}, {3.7220877978492727`*^9, 
   3.722087859064723*^9}, {3.7270980527063303`*^9, 3.727098060996778*^9}, {
   3.72709922156136*^9, 3.727099239639866*^9}, {3.7271397956094227`*^9, 
   3.727139800193638*^9}, {3.727139853896615*^9, 3.72713985981665*^9}, {
   3.731539352918746*^9, 3.731539356684042*^9}, {3.7315397955507183`*^9, 
   3.731539832738296*^9}, {3.7315405061169853`*^9, 3.731540530339773*^9}, {
   3.731540635489408*^9, 3.731540638755509*^9}, {3.731540675970047*^9, 
   3.731540680877969*^9}, {3.731540893063641*^9, 3.731540899053052*^9}, 
   3.7318931550076447`*^9, {3.7324025421308193`*^9, 3.732402637562956*^9}, {
   3.732402768357243*^9, 3.732402846842319*^9}, {3.732402882909769*^9, 
   3.732402931992869*^9}, {3.732402996679434*^9, 3.7324030431611223`*^9}, {
   3.755373537190412*^9, 3.75537356702776*^9}, {3.755481733545354*^9, 
   3.755481771863379*^9}, {3.755524386880787*^9, 3.755524388308819*^9}, {
   3.755524859646653*^9, 3.7555248611243362`*^9}, {3.758728287085534*^9, 
   3.758728292389492*^9}, {3.758728481571526*^9, 3.7587285016926117`*^9}, {
   3.7587286028152657`*^9, 3.7587286272132053`*^9}, {3.758728681155704*^9, 
   3.75872872340527*^9}, {3.758728919539955*^9, 3.758728942571906*^9}, {
   3.758730279597849*^9, 3.758730301937666*^9}, {3.758730672751103*^9, 
   3.75873068187411*^9}, {3.758731094173738*^9, 3.758731097229672*^9}, 
   3.758731774765031*^9, {3.7587318390688257`*^9, 3.758731854196416*^9}, {
   3.758784613715918*^9, 3.758784834317572*^9}, {3.7587849087941847`*^9, 
   3.758784951831129*^9}, {3.758785011678187*^9, 3.7587850392611313`*^9}, {
   3.7587949642297983`*^9, 3.758795011887451*^9}, {3.7587950443701487`*^9, 
   3.758795064336632*^9}, {3.758795096305862*^9, 3.758795111460043*^9}, {
   3.758795160058263*^9, 3.758795163245449*^9}, {3.7587952008778877`*^9, 
   3.758795220333432*^9}, 3.758795900109405*^9, {3.758796808592629*^9, 
   3.758796812427071*^9}, {3.758797419214703*^9, 3.758797425256063*^9}, {
   3.758797490040317*^9, 3.758797722546564*^9}, {3.758797839603215*^9, 
   3.7587978637980556`*^9}, {3.758798234469265*^9, 3.7587983560169764`*^9}, {
   3.758798388613147*^9, 3.7587983997940407`*^9}, {3.7587984704673977`*^9, 
   3.758798492683992*^9}, {3.758798565786216*^9, 3.758798610730391*^9}, {
   3.758798664978298*^9, 3.758798676767742*^9}, {3.7587990592724247`*^9, 
   3.758799063304638*^9}, {3.758799119282651*^9, 3.758799141615849*^9}, {
   3.758799205815187*^9, 3.758799212253229*^9}, {3.758801512194249*^9, 
   3.7588015356577663`*^9}, {3.758811439846456*^9, 3.758811532646517*^9}, {
   3.758812003931816*^9, 3.758812063960512*^9}, {3.758812102043414*^9, 
   3.758812126563641*^9}, {3.758812246945642*^9, 3.7588122632273693`*^9}, {
   3.758812439335827*^9, 3.758812540798933*^9}, {3.758816151533209*^9, 
   3.758816212885056*^9}, {3.758818313027029*^9, 3.758818346402905*^9}, {
   3.758819096143798*^9, 3.758819114611443*^9}, {3.758820689687079*^9, 
   3.758820731871653*^9}, {3.75882076818998*^9, 3.7588207692726173`*^9}, {
   3.7588208809454393`*^9, 3.758820917153376*^9}, {3.75882255116101*^9, 
   3.758822635108686*^9}, {3.758822668564436*^9, 3.758822670702715*^9}, {
   3.7588227614166183`*^9, 3.758822871908394*^9}, {3.758823025977818*^9, 
   3.758823028824059*^9}, {3.758823350583873*^9, 3.75882335467498*^9}, {
   3.758823484747882*^9, 3.75882349441304*^9}, {3.7588235976955442`*^9, 
   3.7588237100852013`*^9}, {3.758823740635364*^9, 3.758823742406148*^9}, {
   3.7588238238878107`*^9, 3.758823937267411*^9}, {3.758823967653405*^9, 
   3.7588239683947477`*^9}, {3.758824061793827*^9, 3.758824111849203*^9}, {
   3.7588241704206047`*^9, 3.758824258785088*^9}, {3.758824301460815*^9, 
   3.758824390434053*^9}, {3.758824443497868*^9, 3.7588245053799133`*^9}, {
   3.758824542019267*^9, 3.7588245843601093`*^9}, {3.758824635076757*^9, 
   3.758824683878714*^9}, {3.7588247339367027`*^9, 3.758824784176186*^9}, {
   3.7588248444420967`*^9, 3.75882486464452*^9}, 3.75882490908883*^9, {
   3.7588249577843103`*^9, 3.758824992314083*^9}, {3.758825038406749*^9, 
   3.75882504735207*^9}, {3.7588250931878767`*^9, 3.7588251960175447`*^9}, {
   3.758825408005166*^9, 3.758825415253249*^9}, {3.758826218920967*^9, 
   3.758826303618712*^9}, {3.758826351439221*^9, 3.7588263779003553`*^9}, 
   3.75882683697724*^9, {3.75896781087959*^9, 3.7589678311626997`*^9}, {
   3.758967970302636*^9, 3.7589679732971163`*^9}, {3.758968322358395*^9, 
   3.758968379789754*^9}, {3.758970723329595*^9, 3.758970735311181*^9}, {
   3.758971589871182*^9, 3.75897162480208*^9}, {3.759041385273615*^9, 
   3.7590413989624653`*^9}, {3.7590414699938498`*^9, 3.759041473807446*^9}, {
   3.759041719960277*^9, 3.7590417255568533`*^9}, 3.759045613184684*^9, 
   3.759045738715007*^9, {3.7590610318116217`*^9, 3.759061037795245*^9}, {
   3.759061093727015*^9, 3.7590611092906313`*^9}, {3.7590613628124437`*^9, 
   3.75906137434818*^9}, {3.759061686710177*^9, 3.7590616954000883`*^9}, {
   3.759061728267799*^9, 3.759061734853003*^9}, {3.759075353095763*^9, 
   3.759075385493682*^9}, {3.7590754426302137`*^9, 3.7590754430464973`*^9}, {
   3.7590755495245667`*^9, 3.7590755662803793`*^9}, {3.759075613101451*^9, 
   3.759075616808888*^9}, {3.759075983784876*^9, 3.7590759859173717`*^9}, {
   3.759076245667095*^9, 3.759076441690548*^9}, {3.759076474057342*^9, 
   3.759076475039936*^9}, {3.7590767962908697`*^9, 3.759076803184688*^9}, {
   3.759119919462574*^9, 3.759119920624248*^9}, {3.759122104647772*^9, 
   3.759122113236862*^9}, {3.759122230569379*^9, 3.7591222511115103`*^9}, {
   3.7591222918036623`*^9, 3.759122309086741*^9}, {3.7591223872490463`*^9, 
   3.75912245404253*^9}, 3.7591225024713583`*^9, 3.759122614308857*^9, {
   3.7591226474661427`*^9, 3.759122651158029*^9}, 3.759128962179697*^9, 
   3.759130176494175*^9, {3.759130272118059*^9, 3.7591303018368607`*^9}, {
   3.759130359376954*^9, 3.759130376948419*^9}, {3.759130468447337*^9, 
   3.759130478747999*^9}, 3.759130524143147*^9, {3.759131187470096*^9, 
   3.7591312081995697`*^9}, {3.759131794063901*^9, 3.759131821907592*^9}, {
   3.759131856587512*^9, 3.759131883298087*^9}, {3.7591319177561398`*^9, 
   3.759131925855157*^9}, {3.759131997285928*^9, 3.7591320489354277`*^9}, {
   3.759132110799502*^9, 3.7591321176461554`*^9}, 3.759233432193329*^9, {
   3.759233499950282*^9, 3.759233525028873*^9}, {3.759233623241468*^9, 
   3.759233633780487*^9}, {3.759237093075122*^9, 3.75923715947023*^9}, {
   3.759237190924262*^9, 3.7592371978741007`*^9}, 3.759241742854505*^9, {
   3.759242070879303*^9, 3.759242125873386*^9}, 3.759242187252877*^9, 
   3.75924221913737*^9, {3.75924260233948*^9, 3.759242606438258*^9}, {
   3.759242647229129*^9, 3.759242656224568*^9}, {3.760248617249618*^9, 
   3.760248646533269*^9}, {3.760249996624086*^9, 3.76025001437652*^9}, {
   3.760250053982356*^9, 3.760250105097843*^9}, {3.760250142183899*^9, 
   3.760250153893796*^9}, {3.760250195167418*^9, 3.760250203808651*^9}, {
   3.760250237822035*^9, 3.760250257409347*^9}, {3.760250566028565*^9, 
   3.760250611374097*^9}, {3.7618149755567923`*^9, 3.761815020086164*^9}, {
   3.761815466845948*^9, 3.7618155463482323`*^9}, {3.761815592610971*^9, 
   3.761815724265292*^9}, {3.761816046531562*^9, 3.7618161043816843`*^9}, {
   3.761898777765307*^9, 3.761898783772559*^9}, {3.7619321682841387`*^9, 
   3.761932168359448*^9}, {3.761932225676304*^9, 3.761932225754258*^9}, {
   3.761932433011448*^9, 3.7619324330897217`*^9}, {3.7691823684474583`*^9, 
   3.7691823684534388`*^9}, 3.769760706051713*^9, 3.770438265289671*^9, {
   3.770471446101419*^9, 3.770471446894745*^9}, {3.7707214540202427`*^9, 
   3.7707214546909227`*^9}, 3.772370807283783*^9, 3.7746090358004847`*^9, 
   3.7746090687248297`*^9, {3.774671083283907*^9, 3.774671102047276*^9}, 
   3.774707726915597*^9, {3.7766166558781147`*^9, 3.7766166767241783`*^9}, {
   3.776617061057146*^9, 3.776617062150002*^9}, {3.77661765507693*^9, 
   3.776617655396223*^9}, {3.794137241180332*^9, 3.7941372411889277`*^9}, 
   3.794610581100609*^9, 3.794611784751899*^9, {3.794612516696892*^9, 
   3.794612554057485*^9}, {3.794612659691745*^9, 3.794612668593524*^9}, {
   3.79461270939045*^9, 3.794612741346552*^9}, {3.794613078303265*^9, 
   3.794613088750025*^9}, {3.794613127120254*^9, 3.794613216183429*^9}, {
   3.7946133920251017`*^9, 3.794613433049821*^9}, 3.7946666914678907`*^9, {
   3.794689603108872*^9, 3.794689626302281*^9}, 3.7946900639015493`*^9, 
   3.7946921870040617`*^9, 3.7946924139803267`*^9, 3.794693247735445*^9, 
   3.7946938407254066`*^9, {3.794693876929035*^9, 3.794693915177382*^9}, {
   3.794693984691003*^9, 3.794694005193503*^9}, {3.794694043111717*^9, 
   3.794694093003483*^9}, {3.794694218869431*^9, 3.794694247899385*^9}, {
   3.794695948616654*^9, 3.794695961251466*^9}, {3.794697278882753*^9, 
   3.7946973020575953`*^9}, {3.8069480062756777`*^9, 3.8069480090742483`*^9}, 
   3.80694847279239*^9, {3.806948831156004*^9, 3.80694883575109*^9}, {
   3.806949394774725*^9, 3.8069494032972527`*^9}, {3.806951443888753*^9, 
   3.80695147846762*^9}, {3.806954243164906*^9, 3.806954243626706*^9}, {
   3.807023524231081*^9, 3.8070235434263983`*^9}, 3.807369342980582*^9, {
   3.807544767703278*^9, 3.807544788980845*^9}, {3.807544925081174*^9, 
   3.8075449372809143`*^9}, 3.807548967635407*^9, {3.81850458341175*^9, 
   3.8185045900971518`*^9}, 3.818504634972987*^9, {3.81850469925968*^9, 
   3.818504729083922*^9}, 3.818504808359446*^9, {3.818505450189331*^9, 
   3.818505527622025*^9}, {3.8185062713361597`*^9, 3.818506300700259*^9}, {
   3.829048635481186*^9, 3.829048650339003*^9}, {3.829049778401506*^9, 
   3.829049788856428*^9}, {3.829049912200491*^9, 3.829049915272496*^9}, {
   3.829049996602859*^9, 3.829050057896387*^9}, {3.829050122428309*^9, 
   3.829050153979887*^9}},ExpressionUUID->"429613b2-3475-4284-bcda-\
ea8f3ea9726a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.7114967884855947`*^9, 
  3.71149678925776*^9}},ExpressionUUID->"c4607337-c462-460f-bef3-\
fd92e8009768"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "EcoEvoSim", "]"}], "=", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Logged", "\[Rule]", "False"}], ",", 
     RowBox[{"BoundaryDetection", "\[Rule]", "False"}], ",", 
     RowBox[{"FreezeTraits", "\[Rule]", "False"}], ",", "\n", "\t", 
     RowBox[{"NDSolveOpts", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"MaxSteps", "\[Rule]", "\[Infinity]"}], "}"}]}], ",", 
     RowBox[{"WhenEventOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"DInvOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"DelayDInv", "\[Rule]", "False"}], ",", 
     RowBox[{"EvoEquation", "\[Rule]", "\"\<QG\>\""}], ",", 
     RowBox[{"TraitShiftRate", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", "\t", 
     RowBox[{"TMin", "\[Rule]", "0"}], ",", 
     RowBox[{"OutputTMin", "\[Rule]", "0"}], ",", 
     RowBox[{"Output", "\[Rule]", "\"\<Dynamics\>\""}], ",", "\n", "\t", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.688571707783112*^9, 3.688571707932355*^9}, 
   3.696845912545287*^9, {3.7114950438556147`*^9, 3.711495046006259*^9}, {
   3.7114982861489353`*^9, 3.7114982989936323`*^9}, {3.729642256945245*^9, 
   3.729642262468515*^9}, {3.729642555345767*^9, 3.7296425572944736`*^9}, {
   3.729642663386723*^9, 3.729642670212463*^9}, {3.7592427789447737`*^9, 
   3.7592427831598167`*^9}, {3.769501748471877*^9, 3.769501751324729*^9}, {
   3.79461256529922*^9, 
   3.794612571730178*^9}},ExpressionUUID->"46e2797c-f123-42db-965b-\
b8163a583c30"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",ExpressionUUID->"b44c9488-5aa4-4641-9cb7-e65a92b5b15e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"split", " ", "traitsandvariables"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"EcoEvoSim", "[", 
     RowBox[{
      RowBox[{"sol_", "?", "AttributesAndVariablesQ"}], ",", 
      RowBox[{"Gs", ":", 
       RowBox[{"(", 
        RowBox[{"_", "?", "RuleListQ"}], ")"}], ":", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"tmax_", "?", "NumericQ"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
    RowBox[{"EcoEvoSim", "[", 
     RowBox[{
      RowBox[{"ExtractTraits", "[", "sol", "]"}], ",", 
      RowBox[{"ExtractVariables", "[", "sol", "]"}], ",", "Gs", ",", "tmax", 
      ",", "opts"}], "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{
  3.711472535872114*^9, {3.711472624221716*^9, 3.711472626036916*^9}, {
   3.71147268754537*^9, 3.711472717132627*^9}, {3.711472800081321*^9, 
   3.7114728419988194`*^9}, 3.711496631210979*^9, {3.71273853492791*^9, 
   3.712738534931539*^9}, {3.769501730815934*^9, 3.769501734573689*^9}, 
   3.798128800072072*^9, 
   3.80736934298456*^9},ExpressionUUID->"2c4b67ba-a3e7-47a0-b68b-\
e0741b6d89e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Messages", "Subsubsection",
 CellChangeTimes->{{3.769501720945112*^9, 
  3.769501722810186*^9}},ExpressionUUID->"8a4c58eb-6a68-41fc-8f04-\
2c43515874a3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EcoEvoSim", "::", "badte"}], "=", 
    "\"\<Bad TraitEqn (should be either \\\"QG\\\" or \\\"CE\\\").\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EcoEvoSim", "::", "susmtd"}], "=", "\n", 
   "\"\<Warning: EcoEvoSim is likely to be inappropriate when there are \
multiple components and non-equilibrium dynamics.\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.7695017244853373`*^9, 3.769501725187407*^9}, {
  3.774671199337881*^9, 
  3.7746712386448317`*^9}},ExpressionUUID->"c1ca4445-5b24-4618-aeef-\
019f750e7b9d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["FindEcoEvoEq  ", "Subsection",
 CellChangeTimes->{{3.700083799240511*^9, 3.700083818139762*^9}, {
  3.732535711018385*^9, 
  3.732535711276197*^9}},ExpressionUUID->"4d7dd79d-2e81-4488-8ac9-\
44fc9fa7c3c4"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"f3a0de6b-0b2c-447e-9405-\
695a7222b07c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindEcoEvoEq", "::", "usage"}], " ", "=", "\n", 
   "\"\<FindEcoEvoEq[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"variables\", \"TI\"]\)] finds an eco-evolutionary \
equilibrium with initial guess \!\(\*StyleBox[\"traits\", \"TI\"]\) and \
\!\(\*StyleBox[\"variables\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769490366991991*^9, 3.769490367750503*^9}, {
  3.77000584329541*^9, 3.770005843435739*^9}, {3.807402385500955*^9, 
  3.807402389611252*^9}},ExpressionUUID->"b4b14427-5274-44fc-a29c-\
806e20d6c555"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"4c8aad95-6297-49d8-b3c0-\
a5c1860fddf3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindEcoEvoEq", "[", 
    RowBox[{
     RowBox[{"traits_", "?", "AttributesQ"}], ",", 
     RowBox[{"variables_", "?", "VariablesQ"}], ",", 
     RowBox[{"Gs", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "GsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<FindEcoEvoEq\>\"", "]"}]}], ",", "\n", 
       
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "method", ",", "boundarydetection", ",", 
       "percapita", ",", "delaydinv", ",", "fixed", ",", "findrootopts", ",", 
       "chop", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "fixedvars", 
       ",", "fixedattributes", ",", "fixedvariables", ",", "ecoeqns", ",", 
       "evoeqns", ",", "eqns", ",", "unks", ",", "newunk", ",", "unksics", 
       ",", "sol"}], "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoEvoEq", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoEvoEq", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"method", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Method", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoEvoEq", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"boundarydetection", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"BoundaryDetection", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoEvoEq", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"percapita", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PerCapita", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoEvoEq", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"delaydinv", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"DelayDInv", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoEvoEq", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"fixed", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Fixed", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoEvoEq", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"findrootopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"FindRootOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoEvoEq", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"chop", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Chop", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoEvoEq", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", "\n", 
        RowBox[{"fixedvars", "=", 
         RowBox[{"fixed", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        RowBox[{"fixedattributes", "=", 
         RowBox[{"ExtractAttributes", "[", "fixed", "]"}]}], ";", "\n", 
        RowBox[{"fixedvariables", "=", 
         RowBox[{"ExtractVariables", "[", "fixed", "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: fixedvars=\>\"", ",", "fixedvars"}], 
           "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"Set\[ScriptCapitalN]", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"traits", ",", "fixedattributes"}], "]"}], ",", 
          RowBox[{"Join", "[", 
           RowBox[{"variables", ",", "fixedvariables"}], "]"}]}], "]"}], ";", 
        "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<\[ScriptCapitalN]=\>\"", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"\[ScriptCapitalN]", "[", "gu", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "]"}], ";"}], 
         "*)"}], "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"set", " ", "up", " ", "eqns"}], " ", "*)"}], "\n", 
        RowBox[{"ecoeqns", "=", 
         RowBox[{"EcoEqns", "[", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{"BlankTraits", ",", "fixedattributes"}], "]"}], ",", 
           "opts", ",", 
           RowBox[{"PerCapita", "\[Rule]", "percapita"}]}], "]"}]}], ";", 
        "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<ecoeqns=\>\"", ",", "ecoeqns"}], "]"}], ";"}], "*)"}],
         "\n", 
        RowBox[{"evoeqns", "=", 
         RowBox[{"EvoEqns", "[", 
          RowBox[{"BlankVariables", ",", "Gs", ",", "opts"}], "]"}]}], ";", 
        "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<evoeqns=\>\"", ",", "evoeqns"}], "]"}], ";"}], "*)"}],
         "\n", 
        RowBox[{"eqns", "=", 
         RowBox[{"If", "[", 
          RowBox[{"delaydinv", ",", "\n", "\t", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"ecoeqns", "/.", "Eq"}], "/.", "RemoveVariablets"}], "/.",
                "RemoveTraitts"}], "/.", "ToUnks"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"evoeqns", "/.", "Eq"}], "/.", "RemoveVariablets"}], "/.",
                "RemoveTraitts"}], "/.", "ToUnkRules"}]}], "]"}], ",", "\n", 
           "\t", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{"ecoeqns", ",", "evoeqns"}], "]"}], "/.", "Eq"}], "/.",
              "RemoveTraitts"}], "/.", "RemoveVariablets"}]}], "\n", "]"}]}], 
        ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"set", " ", "up", " ", "unksics"}], " ", "*)"}], "\n", 
        RowBox[{"unks", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{"ecoeqns", ",", "evoeqns"}], "]"}], "/.", "LHS"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"var_", "'"}], "[", "t", "]"}], "\[Rule]", "var"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"var_", "[", 
               RowBox[{"t", "+", "1"}], "]"}], "/", 
              RowBox[{"var_", "[", "t", "]"}]}], "\[Rule]", "var"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"var_", "[", 
               RowBox[{"t", "+", "1"}], "]"}], "-", 
              RowBox[{"var_", "[", "t", "]"}]}], "\[Rule]", "var"}], ",", 
            RowBox[{
             RowBox[{"var_", "[", 
              RowBox[{"t", "+", "1"}], "]"}], "\[Rule]", "var"}]}], "}"}]}]}],
         ";", "\n", 
        RowBox[{"unksics", "=", 
         RowBox[{"{", "}"}]}], ";", "\n", 
        RowBox[{"Do", "[", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"newunk", "=", 
            RowBox[{"If", "[", 
             RowBox[{"delaydinv", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"var", "/.", "ToUnks"}], ",", 
                RowBox[{
                 RowBox[{"var", "/.", "traits"}], "/.", "variables"}]}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"var", ",", 
                RowBox[{
                 RowBox[{"var", "/.", "traits"}], "/.", "variables"}]}], 
               "}"}]}], "]"}]}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"method", "\[Equal]", "\"\<Secant\>\""}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"newunk", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"var", "+", "0.001"}], "/.", "traits"}], "/.", 
                "variables"}]}], "]"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"boundarydetection", ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"newunk", "=", 
               RowBox[{"Join", "[", 
                RowBox[{"newunk", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Min", "[", 
                    RowBox[{"range", "[", "var", "]"}], "]"}], ",", 
                   RowBox[{"Max", "[", 
                    RowBox[{"range", "[", "var", "]"}], "]"}]}], "}"}]}], 
                "]"}]}], ";", "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"var", "/.", "traits"}], "/.", "variables"}], 
                    ")"}], "<", 
                   RowBox[{"Min", "[", 
                    RowBox[{"range", "[", "var", "]"}], "]"}]}], ")"}], "||", 
                 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"var", "/.", "traits"}], "/.", "variables"}], 
                    ")"}], ">", 
                   RowBox[{"Max", "[", 
                    RowBox[{"range", "[", "var", "]"}], "]"}]}], ")"}]}], ",",
                 "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"Message", "[", 
                  RowBox[{
                   RowBox[{"FindEcoEvoEq", "::", "streg"}], ",", "var", ",", 
                   RowBox[{
                    RowBox[{"var", "/.", "traits"}], "/.", "variables"}], ",", 
                   RowBox[{"NumberForm", "@", 
                    RowBox[{"Min", "[", 
                    RowBox[{"range", "[", "var", "]"}], "]"}]}], ",", 
                   RowBox[{"NumberForm", "@", 
                    RowBox[{"Max", "[", 
                    RowBox[{"range", "[", "var", "]"}], "]"}]}]}], "]"}], ";",
                  "\n", "\t\t\t", 
                 RowBox[{"Abort", "[", "]"}], ";"}]}], "\n", "\t\t", "]"}], 
              ";"}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"unksics", ",", "newunk"}], "]"}], ";"}], "\n", ",", 
          RowBox[{"{", 
           RowBox[{"var", ",", "unks"}], "}"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: eqns=\>\""}], "]"}], ";", 
           RowBox[{"Print", "[", "eqns", "]"}], ";", "\n", "\t", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: unksics=\>\""}], "]"}], ";", 
           RowBox[{"Print", "[", "unksics", "]"}], ";"}]}], "\n", "]"}], ";", 
        "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"solve", " ", "it"}], " ", "*)"}], "\n", 
        RowBox[{"sol", "=", 
         RowBox[{"FindRoot", "[", 
          RowBox[{"eqns", ",", "unksics", ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"Sequence", "@@", "findrootopts"}], "]"}]}], "]"}]}], ";",
         "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: sol=\>\""}], "]"}], ";", 
           RowBox[{"Print", "[", "sol", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "$MessageList", "]"}], ">", "0"}], "&&", 
           RowBox[{
            RowBox[{"$MessageList", "\[LeftDoubleBracket]", 
             RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "===", 
            RowBox[{"HoldForm", "[", 
             RowBox[{"FindRoot", "::", "reged"}], "]"}]}]}], ",", 
          RowBox[{"Message", "[", 
           RowBox[{"FindEcoEvoEq", "::", "reged"}], "]"}]}], "]"}], ";", "\n",
         "\n", 
        RowBox[{"If", "[", 
         RowBox[{"chop", ",", "\n", "\t", 
          RowBox[{"Return", "[", 
           RowBox[{"SortRuleList", "[", 
            RowBox[{
             RowBox[{"Chop", "[", 
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{"sol", ",", "fixed"}], "]"}], "/.", "FromUnks"}], 
              "]"}], ",", 
             RowBox[{"Join", "[", 
              RowBox[{"AllVariables", ",", "AllTraits"}], "]"}]}], "]"}], 
           "]"}], ",", "\n", "\t", 
          RowBox[{"Return", "[", 
           RowBox[{"SortRuleList", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{"sol", ",", "fixed"}], "]"}], "/.", "FromUnks"}], ",", 
             
             RowBox[{"Join", "[", 
              RowBox[{"AllVariables", ",", "AllTraits"}], "]"}]}], "]"}], 
           "]"}]}], "\n", "]"}], ";"}]}], "\n", "\n", "]"}]}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.687881464407789*^9, 3.6878814646212378`*^9}, {
   3.688571713126212*^9, 3.68857171451231*^9}, {3.688571773768346*^9, 
   3.688571774438036*^9}, 3.69684591263888*^9, {3.700053986042231*^9, 
   3.700054025312666*^9}, {3.700054089423847*^9, 3.700054117278082*^9}, {
   3.7000542225607567`*^9, 3.700054252929379*^9}, {3.700054304476479*^9, 
   3.700054342214334*^9}, {3.700054473952258*^9, 3.700054511858478*^9}, {
   3.700054556644319*^9, 3.700054564219124*^9}, {3.700054832438178*^9, 
   3.7000548383045893`*^9}, {3.700083826341268*^9, 3.7000838366998587`*^9}, {
   3.700130279267271*^9, 3.700130293900498*^9}, {3.7001306221171017`*^9, 
   3.700130676811448*^9}, {3.700130891588537*^9, 3.700130942665351*^9}, {
   3.7001319823901577`*^9, 3.700132035194916*^9}, {3.70013219717628*^9, 
   3.7001322072752953`*^9}, {3.700132414260252*^9, 3.700132419057354*^9}, {
   3.700155019248177*^9, 3.7001550215003242`*^9}, {3.7001553657595997`*^9, 
   3.7001553670066977`*^9}, {3.70015873952944*^9, 3.7001587532409163`*^9}, {
   3.70015883430894*^9, 3.7001588851135273`*^9}, {3.709111460880267*^9, 
   3.7091114682561903`*^9}, {3.709332763274658*^9, 3.709332775379322*^9}, {
   3.709336813061647*^9, 3.709336815095068*^9}, {3.710105991929454*^9, 
   3.710105992591704*^9}, {3.710240822195546*^9, 3.710240822246172*^9}, {
   3.71032442384984*^9, 3.7103244251105833`*^9}, {3.712738534962071*^9, 
   3.712738534976501*^9}, {3.71274022377072*^9, 3.712740223800043*^9}, {
   3.72202955192945*^9, 3.7220295528976107`*^9}, {3.722034208092074*^9, 
   3.722034212881749*^9}, {3.722087877001823*^9, 3.7220879212231607`*^9}, {
   3.729678938173211*^9, 3.729678938237918*^9}, 3.729687727407012*^9, {
   3.731110769674596*^9, 3.731110772782567*^9}, {3.7311108931211853`*^9, 
   3.731110912360242*^9}, {3.731110958493635*^9, 3.731110969739661*^9}, {
   3.7311116219911346`*^9, 3.73111162831653*^9}, {3.731233166681489*^9, 
   3.731233168561461*^9}, {3.731539374591838*^9, 3.731539377644134*^9}, 
   3.7318931475805063`*^9, {3.732225099294217*^9, 3.732225107594207*^9}, {
   3.732403261172532*^9, 3.7324033077660017`*^9}, {3.7324033473777857`*^9, 
   3.732403388127776*^9}, {3.755373568773315*^9, 3.7553735890372458`*^9}, {
   3.7555313368915377`*^9, 3.755531383437127*^9}, {3.758464494339382*^9, 
   3.758464523246543*^9}, {3.758464557993224*^9, 3.7584645714430447`*^9}, {
   3.758464674324518*^9, 3.758464674432047*^9}, {3.75846484250132*^9, 
   3.758464944730188*^9}, {3.758476707982667*^9, 3.758476732553213*^9}, {
   3.758476764707849*^9, 3.758476775839473*^9}, 3.758476848920835*^9, {
   3.758479257391142*^9, 3.7584792932392483`*^9}, 3.758479736910811*^9, {
   3.758479782461042*^9, 3.758479844914198*^9}, 3.758480487285429*^9, {
   3.7584806262979307`*^9, 3.7584806883788633`*^9}, {3.758480798129451*^9, 
   3.75848080225915*^9}, {3.758480836441215*^9, 3.7584808434565496`*^9}, {
   3.758481199693733*^9, 3.758481199881687*^9}, {3.7584815153225927`*^9, 
   3.75848155064045*^9}, 3.758520311891034*^9, {3.7585203493738737`*^9, 
   3.758520350838119*^9}, {3.758522163646213*^9, 3.758522170094019*^9}, {
   3.7585222598526707`*^9, 3.7585223236677027`*^9}, 3.7585224946550903`*^9, {
   3.7585225316177187`*^9, 3.7585225455451183`*^9}, {3.758522901139655*^9, 
   3.758522913443453*^9}, 3.7585231685900917`*^9, {3.758523217205983*^9, 
   3.758523217478863*^9}, {3.758523443334169*^9, 3.758523443664281*^9}, {
   3.758523476611198*^9, 3.758523525733502*^9}, {3.75852356442411*^9, 
   3.758523568436954*^9}, {3.758524659913494*^9, 3.758524660191115*^9}, {
   3.7585256552819033`*^9, 3.7585256750805683`*^9}, {3.7585257585810747`*^9, 
   3.758525762713573*^9}, {3.758525802252036*^9, 3.758525816727276*^9}, {
   3.758525972642651*^9, 3.758526010464067*^9}, {3.758526497538562*^9, 
   3.758526524207617*^9}, {3.7585269112309017`*^9, 3.758526943209738*^9}, {
   3.758527120226739*^9, 3.758527144901525*^9}, {3.7585271946598577`*^9, 
   3.758527204146531*^9}, {3.758527896330804*^9, 3.758527897525778*^9}, 
   3.7585347142639017`*^9, {3.7585362752255173`*^9, 3.758536283615759*^9}, {
   3.7585365309615307`*^9, 3.758536531862516*^9}, 3.7585370776104803`*^9, {
   3.7585372365560417`*^9, 3.7585372445163097`*^9}, {3.758537941609831*^9, 
   3.758537957110705*^9}, {3.758537995776026*^9, 3.758537999270245*^9}, {
   3.758538151679225*^9, 3.758538177103258*^9}, {3.7585382346566057`*^9, 
   3.758538255784505*^9}, {3.7585391626683817`*^9, 3.758539166637788*^9}, {
   3.758539836253141*^9, 3.758539879070693*^9}, 3.758540101472336*^9, {
   3.758540388355344*^9, 3.758540392480328*^9}, {3.758540515197661*^9, 
   3.758540521195384*^9}, {3.7585407685534554`*^9, 3.758540784489436*^9}, 
   3.758541016776581*^9, {3.758541201291176*^9, 3.758541222662683*^9}, {
   3.75854185344796*^9, 3.758541912664419*^9}, {3.758542078951735*^9, 
   3.7585421135264597`*^9}, {3.758542161670245*^9, 3.7585422547997417`*^9}, {
   3.7585423437852087`*^9, 3.75854240667165*^9}, 3.7585424453403263`*^9, {
   3.7585425333648243`*^9, 3.7585425461505203`*^9}, 3.758542596659519*^9, {
   3.758542646713977*^9, 3.758542686174193*^9}, {3.758542742721731*^9, 
   3.758542848102914*^9}, {3.758543048009343*^9, 3.758543074191862*^9}, {
   3.758543142127811*^9, 3.758543158459722*^9}, {3.758543212143876*^9, 
   3.758543216798212*^9}, {3.758543254919002*^9, 3.758543265704193*^9}, {
   3.758543295802701*^9, 3.758543420278306*^9}, {3.758543743947795*^9, 
   3.758543760778388*^9}, 3.758544149286491*^9, 3.758544241362988*^9, {
   3.758545456481305*^9, 3.758545503387442*^9}, {3.758545676225519*^9, 
   3.758545678320826*^9}, {3.7585457563794622`*^9, 3.758545790148282*^9}, {
   3.7585461311175623`*^9, 3.758546150275069*^9}, {3.75855063458222*^9, 
   3.7585506396460943`*^9}, {3.758550728729946*^9, 3.758550759695271*^9}, {
   3.758551813549959*^9, 3.758551845195491*^9}, 3.758552114923168*^9, {
   3.758552209227663*^9, 3.758552215362269*^9}, {3.758552273648382*^9, 
   3.75855229543326*^9}, {3.758552537524782*^9, 3.758552551968416*^9}, {
   3.758552768757388*^9, 3.758552792416046*^9}, 3.758552856210053*^9, {
   3.7586053968115053`*^9, 3.758605406208652*^9}, {3.758607064411303*^9, 
   3.75860706882829*^9}, 3.758607357241296*^9, {3.758608085463896*^9, 
   3.758608090992992*^9}, {3.758653794579707*^9, 3.7586538041420507`*^9}, {
   3.7586940000382643`*^9, 3.758694178269039*^9}, {3.758694263316815*^9, 
   3.758694267451076*^9}, {3.758694309540791*^9, 3.758694338376416*^9}, 
   3.758694547655458*^9, {3.7586946496195927`*^9, 3.758694672346096*^9}, {
   3.7586947448086157`*^9, 3.758694771197939*^9}, {3.758695930156831*^9, 
   3.758695942858985*^9}, {3.7586960836374073`*^9, 3.7586961359621162`*^9}, {
   3.758706966295705*^9, 3.7587069835280657`*^9}, {3.758707064009838*^9, 
   3.758707084905662*^9}, {3.758707332622624*^9, 3.758707373845832*^9}, {
   3.760250654449666*^9, 3.7602506712820463`*^9}, {3.761377924841909*^9, 
   3.7613779271734056`*^9}, {3.7691823684590483`*^9, 3.769182368462119*^9}, 
   3.769760706069968*^9, 3.770438265297768*^9, {3.7707214548507013`*^9, 
   3.770721455122272*^9}, {3.7927640732084312`*^9, 3.792764088967772*^9}, 
   3.794137241197228*^9, {3.796983656304845*^9, 3.796983658054797*^9}, {
   3.8075666607460117`*^9, 3.807566737701087*^9}, {3.81439066111443*^9, 
   3.81439066290591*^9}, {3.8143912093999*^9, 3.814391210128347*^9}, {
   3.814391266064604*^9, 3.8143914271798697`*^9}, {3.814391589397644*^9, 
   3.814391640094233*^9}, 3.814391700462996*^9, {3.814391773976042*^9, 
   3.8143917978467283`*^9}, {3.8143918615776367`*^9, 3.81439186195822*^9}, {
   3.8143919067128*^9, 3.814391932688431*^9}, {3.814392023858718*^9, 
   3.814392025882663*^9}, {3.8144026907453527`*^9, 3.814402704045023*^9}, {
   3.814402748644998*^9, 3.814402750795515*^9}, {3.814402815258794*^9, 
   3.8144028596914473`*^9}, {3.81440291810845*^9, 3.814402925857418*^9}, {
   3.814403313593395*^9, 3.814403403016777*^9}, 3.814403435179946*^9, {
   3.8144034846465816`*^9, 3.814403533381955*^9}, {3.8144036979550056`*^9, 
   3.8144036981050577`*^9}, {3.814403733584721*^9, 
   3.814403742669335*^9}},ExpressionUUID->"00400901-ccbb-466c-84c3-\
6ed320dadb3e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",ExpressionUUID->"89050da3-74be-4ba3-9dce-62cc62b9fa47"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "FindEcoEvoEq", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"PerCapita", "\[Rule]", "True"}], ",", 
     RowBox[{"FindRootOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"DelayDInv", "\[Rule]", "False"}], ",", 
     RowBox[{"Chop", "\[Rule]", "True"}], ",", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.688571716541911*^9, 3.6885717166960382`*^9}, 
   3.696845912680583*^9, {3.700084443844001*^9, 3.700084444353344*^9}, {
   3.7296866181104937`*^9, 3.729686644891083*^9}, {3.729687684685556*^9, 
   3.7296877109270763`*^9}, {3.758547661142223*^9, 3.758547675528569*^9}, {
   3.75855071733744*^9, 
   3.7585507202274218`*^9}},ExpressionUUID->"37038112-6241-40be-920c-\
f6bfb93e3fbf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",ExpressionUUID->"990b7bc7-982c-474b-a6ad-1a65fdb5ecb3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"split", " ", "traitsandvariables"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoEvoEq", "[", 
     RowBox[{
      RowBox[{"sol_", "?", "AttributesAndVariablesQ"}], ",", 
      RowBox[{"Gs_", ":", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\t", 
    RowBox[{"FindEcoEvoEq", "[", 
     RowBox[{
      RowBox[{"ExtractTraits", "[", "sol", "]"}], ",", 
      RowBox[{"ExtractVariables", "[", "sol", "]"}], ",", "Gs", ",", "opts"}],
      "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.7000844476384487`*^9, 3.700084450540546*^9}, {
   3.709332794124982*^9, 3.7093327966147747`*^9}, 3.7093328393575087`*^9, {
   3.712738534985525*^9, 3.712738534989333*^9}, {3.7695018007359457`*^9, 
   3.7695018145146837`*^9}, 3.798128800074704*^9, 
   3.807369342987771*^9},ExpressionUUID->"2a71f4dd-182b-4504-a9dc-\
017521939500"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Messages", "Subsubsection",
 CellChangeTimes->{{3.76950179283449*^9, 
  3.7695017937167387`*^9}},ExpressionUUID->"24f8fa5f-389e-4166-aa42-\
ac77beee6d79"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoEvoEq", "::", "badfg"}], "=", 
    "\"\<Bad FitnessGradient method (should be either DInv or NDInv).\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoEvoEq", "::", "badte"}], "=", 
    "\"\<Bad TraitEqn (should be either \\\"QG\\\" or \\\"CE\\\").\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoEvoEq", "::", "streg"}], "=", 
    "\"\<Initial value of `1` = `2` is outside the range `3` < `1` < `4`. \
Either fix it or set BoundaryDetection\[Rule]False.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FindEcoEvoEq", "::", "reged"}], "=", 
   "\"\<Warning: FindRoot reached boundary, don't trust result (maybe try \
again using Fixed to fix variables on the boundary).\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.769501795161996*^9, 3.769501797885182*^9}, {
  3.8143914416570997`*^9, 3.814391527440192*^9}, {3.8144027543616858`*^9, 
  3.8144027553497887`*^9}, {3.8144035422208443`*^9, 3.814403561495943*^9}, {
  3.814403619325942*^9, 
  3.8144036847346*^9}},ExpressionUUID->"4dc97b3a-09a3-4fb2-ba2a-695720b0d2b6"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["TrackEcoEvoEq", "Subsection",
 CellChangeTimes->{{3.8114246778702393`*^9, 3.81142467928655*^9}, {
  3.8114263484255123`*^9, 
  3.811426352400813*^9}},ExpressionUUID->"e1c791f3-6baa-4dc4-93e8-\
3c789dc17150"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.8114249477060347`*^9, 
  3.81142494937716*^9}},ExpressionUUID->"4bc3322c-596d-441d-9773-\
7a39d69f7a53"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TrackEcoEvoEq", "::", "usage"}], "=", "\n", 
   "\"\<TrackEcoEvoEq[\!\(\*StyleBox[\"sol\", \"TI\"]\), \
{\!\(\*StyleBox[\"par\", \"TI\"]\), \!\(\*StyleBox[\"parmin\", \"TI\"]\), \
\!\(\*StyleBox[\"parmax\", \"TI\"]\), \!\(\*StyleBox[\"dpar\", \"TI\"]\)}] \
tracks an eco-evolutionary equilibrium, with initial guess \
\!\(\*StyleBox[\"sol\", \"TI\"]\), over parameter \!\(\*StyleBox[\"par\", \
\"TI\"]\) from \!\(\*StyleBox[\"parmin\", \"TI\"]\) to \
\!\(\*StyleBox[\"parmax\", \"TI\"]\), with initial step size \
\!\(\*StyleBox[\"dpar\", \"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.8114249553402452`*^9, 3.811424973337554*^9}, {
  3.811426357711709*^9, 3.811426358536747*^9}, {3.812190814218378*^9, 
  3.81219086905809*^9}, {3.8121910252736683`*^9, 
  3.812191101330345*^9}},ExpressionUUID->"7f2842c4-17bc-416e-ac69-\
08deec84e218"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.811424976609585*^9, 
  3.8114249777616463`*^9}},ExpressionUUID->"324dbd2b-53d6-4dbf-8619-\
94eb2915645c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TrackEcoEvoEq", "[", 
    RowBox[{
     RowBox[{"init_", "?", "AttributesAndVariablesQ"}], ",", 
     RowBox[{"{", 
      RowBox[{"parname_", ",", 
       RowBox[{"parmin_", "?", "NumericQ"}], ",", 
       RowBox[{"parmax_", "?", "NumericQ"}], ",", 
       RowBox[{"dparin_", ":", "Automatic"}]}], "}"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<TrackEcoEvoEq\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "monitor", ",", "printtrace", ",", "\n", "tests", ",", "\n", 
       "minstepsize", ",", "maxstepsize", ",", "maxsteps", ",", "mindist", 
       ",", "maxbend", ",", "maxchange", ",", "\n", "findecoevoeqopts", ",", 
       "interpolationopts", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "par", ",", 
       "dpar", ",", "tmp", ",", "ics", ",", "unks", ",", "count", ",", "sol", 
       ",", "\n", "m0", ",", "m1", ",", "list"}], "\n", "}"}], ",", "\n", 
     "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "TrackEcoEvoEq", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"monitor", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Monitor", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "TrackEcoEvoEq", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"printtrace", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PrintTrace", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "TrackEcoEvoEq", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"dparin", "===", "Automatic"}], ",", 
          RowBox[{"dpar", "=", 
           RowBox[{"Sign", "[", 
            RowBox[{"parmax", "-", "parmin"}], "]"}]}], ",", 
          RowBox[{"dpar", "=", "dparin"}]}], "]"}], ";", "\n", 
        RowBox[{"minstepsize", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"MinStepSize", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "TrackEcoEvoEq", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"minstepsize", "===", "Automatic"}], ",", 
          RowBox[{"minstepsize", "=", 
           RowBox[{"dpar", "*", 
            RowBox[{"2", "^", 
             RowBox[{"-", "10"}]}]}]}]}], "]"}], ";", "\n", 
        RowBox[{"maxstepsize", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"MaxStepSize", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "TrackEcoEvoEq", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"maxstepsize", "===", "Automatic"}], ",", 
          RowBox[{"maxstepsize", "=", 
           RowBox[{"dpar", "*", 
            RowBox[{"2", "^", "3"}]}]}]}], "]"}], ";", "\n", 
        RowBox[{"maxsteps", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"MaxSteps", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "TrackEcoEvoEq", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"mindist", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"MinDistance", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "TrackEcoEvoEq", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"maxbend", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"MaxBend", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "TrackEcoEvoEq", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"maxchange", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"MaxChange", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "TrackEcoEvoEq", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"tests", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Tests", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "TrackEcoEvoEq", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"findecoevoeqopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"FindEcoEvoEqOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "TrackEcoEvoEq", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"interpolationopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"InterpolationOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "TrackEcoEvoEq", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"monitor", ",", 
          RowBox[{"PrintTemporary", "[", 
           RowBox[{
            RowBox[{"Dynamic", "[", "count", "]"}], ",", "\"\< \>\"", ",", 
            "parname", ",", "\"\<=\>\"", ",", 
            RowBox[{"Dynamic", "[", "par", "]"}], ",", "\"\< d\>\"", ",", 
            "parname", ",", "\"\<=\>\"", ",", 
            RowBox[{"Dynamic", "[", "dpar", "]"}]}], "]"}]}], "]"}], ";", 
        "\n", "\n", 
        RowBox[{
         RowBox[{"Evaluate", "[", "parname", "]"}], ":=", "par"}], ";", "\n", 
        "\n", 
        RowBox[{"unks", "=", 
         RowBox[{"Keys", "[", "init", "]"}]}], ";", "\n", 
        RowBox[{"tmp", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"par", "=", "parmin"}], ";", "\n", 
        RowBox[{"dpar", "=", 
         RowBox[{"dpar", "/", "2"}]}], ";", "\n", 
        RowBox[{"ics", "=", "init"}], ";", "\[IndentingNewLine]", 
        RowBox[{"count", "=", "0"}], ";", "\n", "\n", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"count", "<", "maxsteps"}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"count", "++"}], ";", "\[IndentingNewLine]", "\t", 
           RowBox[{"sol", "=", 
            RowBox[{"Check", "[", 
             RowBox[{
              RowBox[{"FindEcoEvoEq", "[", 
               RowBox[{"ics", ",", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"Sequence", "@@", "findecoevoeqopts"}], "]"}]}], 
               "]"}], ",", "\"\<err\>\""}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"printtrace", "&&", 
              RowBox[{"sol", "=!=", "\"\<err\>\""}]}], ",", 
             RowBox[{"Print", "[", 
              RowBox[{
               RowBox[{"Defer", "@", "parname"}], ",", "\"\<=\>\"", ",", 
               RowBox[{"NumberForm", "@", "par"}], ",", "\"\< sol=\>\"", ",", 
               "sol"}], "]"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"PartsAboveDiagonal", "[", 
                  RowBox[{"TraitDistance", "[", 
                   RowBox[{"sol", ",", "gu"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "]"}], "]"}],
              ";"}], "*)"}], "\[IndentingNewLine]", "\t", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", "\n", "\t\t\t\t", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"m1", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"unk", "/.", 
                    RowBox[{"tmp", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], ")"}], "-", 
                    RowBox[{"(", 
                    RowBox[{"unk", "/.", 
                    RowBox[{"tmp", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"-", "2"}], ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], ")"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"tmp", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "\[RightDoubleBracket]"}],
                     "-", 
                    RowBox[{"tmp", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"-", "2"}], ",", "1"}], 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}], ";", "\n", 
                   "\t\t\t\t", 
                   RowBox[{"m0", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"unk", "/.", "sol"}], ")"}], "-", 
                    RowBox[{"(", 
                    RowBox[{"unk", "/.", 
                    RowBox[{"tmp", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], ")"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"par", "-", 
                    RowBox[{"tmp", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}], ";", "\n", 
                   "\t\t\t\t", 
                   RowBox[{
                    RowBox[{"180", "/", "\[Pi]"}], " ", 
                    RowBox[{"ArcTan", "[", 
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"m0", "-", "m1"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"m0", " ", "m1"}]}], ")"}]}], "]"}], "]"}]}]}], 
                  ",", "\n", "\t\t\t\t", 
                  RowBox[{
                   RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"unk", "/.", "sol"}], ")"}], "-", 
                    RowBox[{"(", 
                    RowBox[{"unk", "/.", 
                    RowBox[{"tmp", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], ")"}]}], "]"}], "/", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Differences", "@", 
                    RowBox[{"MinMax", "[", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"unk", "/.", 
                    RowBox[{
                    "ent", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"ent", ",", "tmp"}], "}"}]}], "]"}], "]"}]}], 
                    ")"}], "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], "}"}], "\n", "\t\t\t", ",", 
                RowBox[{"{", 
                 RowBox[{"unk", ",", "unks"}], "}"}]}], "]"}], "]"}], ";"}], 
            "*)"}], "\n", "\t", 
           RowBox[{"Which", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{"sol", "===", "\"\<err\>\""}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"par", "\[Equal]", "parmin"}], ",", 
                RowBox[{
                 RowBox[{"Message", "[", 
                  RowBox[{
                   RowBox[{"TrackEcoEvoEq", "::", "ferr"}], ",", 
                   RowBox[{"Defer", "@", "parname"}], ",", 
                   RowBox[{"NumberForm", "@", "par"}]}], "]"}], ";", 
                 RowBox[{"Return", "[", "$Aborted", "]"}]}]}], "]"}], ";", 
              "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{"printtrace", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{
                  RowBox[{"Defer", "@", "parname"}], ",", "\"\<=\>\"", ",", 
                  RowBox[{"NumberForm", "@", "par"}], ",", 
                  "\"\< FindEcoEvoEq error\>\""}], "]"}]}], "]"}], ";", "\n", 
              "\t\t", 
              RowBox[{"dpar", "=", 
               RowBox[{"dpar", "/", "2"}]}], ";", "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Abs", "[", "dpar", "]"}], "<", 
                 RowBox[{"Abs", "[", "minstepsize", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"Message", "[", 
                  RowBox[{
                   RowBox[{"TrackEcoEvoEq", "::", "err"}], ",", 
                   RowBox[{"Defer", "@", "parname"}], ",", 
                   RowBox[{"NumberForm", "@", "par"}]}], "]"}], ";", 
                 RowBox[{"Break", "[", "]"}]}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{"par", "=", 
               RowBox[{"par", "-", "dpar"}]}]}], "\[IndentingNewLine]", "\t", 
             ",", "\[IndentingNewLine]", "\t\t", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{"tests", ",", "\"\<CSS\>\""}], "]"}], "&&", 
              RowBox[{
               RowBox[{"Max", "[", 
                RowBox[{"Re", "[", 
                 RowBox[{"EcoEvoEigenvalues", "[", "sol", "]"}], "]"}], "]"}],
                ">", "0"}]}], ",", "\[IndentingNewLine]", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"printtrace", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{
                  RowBox[{"Defer", "@", "parname"}], ",", "\"\<=\>\"", ",", 
                  RowBox[{"NumberForm", "@", "par"}], ",", 
                  "\"\< non-CSS, EcoEvoEigenvalues[sol]=\>\"", ",", 
                  RowBox[{"EcoEvoEigenvalues", "[", "sol", "]"}]}], "]"}]}], 
               "]"}], ";", "\n", "\t\t", 
              RowBox[{"dpar", "=", 
               RowBox[{"dpar", "/", "2"}]}], ";", "\[IndentingNewLine]", 
              "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Abs", "[", "dpar", "]"}], "<", 
                 RowBox[{"Abs", "[", "minstepsize", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"Message", "[", 
                  RowBox[{
                   RowBox[{"TrackEcoEvoEq", "::", "noncss"}], ",", 
                   RowBox[{"Defer", "@", "parname"}], ",", 
                   RowBox[{"NumberForm", "@", "par"}], ",", 
                   RowBox[{"EcoEvoEigenvalues", "[", "sol", "]"}]}], "]"}], 
                 ";", 
                 RowBox[{"Break", "[", "]"}]}]}], "]"}], ";", 
              "\[IndentingNewLine]", "\t\t", 
              RowBox[{"par", "=", 
               RowBox[{"par", "-", "dpar"}]}]}], "\[IndentingNewLine]", "\t", 
             ",", "\[IndentingNewLine]", "\t\t", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{"tests", ",", "\"\<LocalESS\>\""}], "]"}], "&&", 
              RowBox[{"!", 
               RowBox[{"CompoundAnd", "[", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"LocalESSQ", "[", "sol", "]"}], "]"}], "]"}]}]}], 
             ",", "\[IndentingNewLine]", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"printtrace", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{
                  RowBox[{"Defer", "@", "parname"}], ",", "\"\<=\>\"", ",", 
                  RowBox[{"NumberForm", "@", "par"}], ",", 
                  "\"\< non-local ESS, LocalESSQ[sol]=\>\"", ",", 
                  RowBox[{"LocalESSQ", "[", "sol", "]"}]}], "]"}]}], "]"}], 
              ";", "\n", "\t\t", 
              RowBox[{"dpar", "=", 
               RowBox[{"dpar", "/", "2"}]}], ";", "\[IndentingNewLine]", 
              "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Abs", "[", "dpar", "]"}], "<", 
                 RowBox[{"Abs", "[", "minstepsize", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"Message", "[", 
                  RowBox[{
                   RowBox[{"TrackEcoEvoEq", "::", "nonless"}], ",", 
                   RowBox[{"Defer", "@", "parname"}], ",", 
                   RowBox[{"NumberForm", "@", "par"}], ",", 
                   RowBox[{"LocalESSQ", "[", "sol", "]"}]}], "]"}], ";", 
                 RowBox[{"Break", "[", "]"}]}]}], "]"}], ";", 
              "\[IndentingNewLine]", "\t\t", 
              RowBox[{"par", "=", 
               RowBox[{"par", "-", "dpar"}]}]}], "\[IndentingNewLine]", "\t", 
             ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{"tests", ",", "\"\<GlobalESS\>\""}], "]"}], "&&", 
              RowBox[{"!", 
               RowBox[{"CompoundAnd", "[", 
                RowBox[{
                 RowBox[{"GlobalESSQ", "[", "sol", "]"}], 
                 "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "]"}]}]}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"printtrace", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{
                  RowBox[{"Defer", "@", "parname"}], ",", "\"\<=\>\"", ",", 
                  RowBox[{"NumberForm", "@", "par"}], ",", 
                  "\"\< non-global ESS, GlobalESSQ[sol]=\>\"", ",", 
                  RowBox[{"GlobalESSQ", "[", "sol", "]"}]}], "]"}]}], "]"}], 
              ";", "\[IndentingNewLine]", "\t\t", 
              RowBox[{"dpar", "=", 
               RowBox[{"dpar", "/", "2"}]}], ";", "\[IndentingNewLine]", 
              "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Abs", "[", "dpar", "]"}], "<", 
                 RowBox[{"Abs", "[", "minstepsize", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"Message", "[", 
                  RowBox[{
                   RowBox[{"TrackEcoEvoEq", "::", "nongess"}], ",", 
                   RowBox[{"Defer", "@", "parname"}], ",", 
                   RowBox[{"NumberForm", "@", "par"}], ",", 
                   RowBox[{"GlobalESSQ", "[", "sol", "]"}]}], "]"}], ";", 
                 RowBox[{"Break", "[", "]"}]}]}], "]"}], ";", 
              "\[IndentingNewLine]", "\t\t", 
              RowBox[{"par", "=", 
               RowBox[{"par", "-", "dpar"}]}]}], "\[IndentingNewLine]", "\t", 
             ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{"tests", ",", "\"\<Extinction\>\""}], "]"}], "&&", 
              RowBox[{
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{"ExtinctSpecies", "[", "sol", "]"}], ",", 
                 "_Subscript"}], "]"}], "\[NotEqual]", 
               RowBox[{"{", "}"}]}]}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"printtrace", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{
                  RowBox[{"Defer", "@", "parname"}], ",", "\"\<=\>\"", ",", 
                  RowBox[{"NumberForm", "@", "par"}], ",", 
                  "\"\< extinction, sol=\>\"", ",", "sol"}], "]"}]}], "]"}], 
              ";", "\[IndentingNewLine]", "\t\t", 
              RowBox[{"dpar", "=", 
               RowBox[{"dpar", "/", "2"}]}], ";", "\[IndentingNewLine]", 
              "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Abs", "[", "dpar", "]"}], "<", 
                 RowBox[{"Abs", "[", "minstepsize", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"Message", "[", 
                  RowBox[{
                   RowBox[{"TrackEcoEvoEq", "::", "extinct"}], ",", 
                   RowBox[{"Defer", "@", "parname"}], ",", 
                   RowBox[{"NumberForm", "@", "par"}], ",", "sol"}], "]"}], 
                 ";", 
                 RowBox[{"Break", "[", "]"}]}]}], "]"}], ";", 
              "\[IndentingNewLine]", "\t\t", 
              RowBox[{"par", "=", 
               RowBox[{"par", "-", "dpar"}]}]}], "\[IndentingNewLine]", "\t", 
             ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{"tests", ",", "\"\<Convergence\>\""}], "]"}], "&&", 
              RowBox[{
               RowBox[{"Min", "[", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"PartsAboveDiagonal", "[", 
                    RowBox[{"TraitDistance", "[", 
                    RowBox[{"sol", ",", "gu"}], "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "]"}], 
                "]"}], "<", "mindist"}]}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"printtrace", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{
                  RowBox[{"Defer", "@", "parname"}], ",", "\"\<=\>\"", ",", 
                  RowBox[{"NumberForm", "@", "par"}], ",", 
                  "\"\< traits converged, sol=\>\"", ",", "sol"}], "]"}]}], 
               "]"}], ";", "\n", "\t\t", 
              RowBox[{"dpar", "=", 
               RowBox[{"dpar", "/", "2"}]}], ";", "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Abs", "[", "dpar", "]"}], "<", 
                 RowBox[{"Abs", "[", "minstepsize", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"Message", "[", 
                  RowBox[{
                   RowBox[{"TrackEcoEvoEq", "::", "converged"}], ",", 
                   RowBox[{"Defer", "@", "parname"}], ",", 
                   RowBox[{"NumberForm", "@", "par"}], ",", "sol"}], "]"}], 
                 ";", 
                 RowBox[{"Break", "[", "]"}]}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{"par", "=", 
               RowBox[{"par", "-", "dpar"}]}], ";"}], "\n", "\t", ",", "\n", 
             "\t\t", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{"tests", ",", "\"\<MaxBend\>\""}], "]"}], "&&", 
              RowBox[{
               RowBox[{"Length", "[", "tmp", "]"}], "\[GreaterEqual]", "2"}], 
              "&&", 
              RowBox[{"CompoundOr", "[", 
               RowBox[{"Table", "[", "\n", "\t\t\t\t", 
                RowBox[{
                 RowBox[{
                  RowBox[{"m1", "=", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"unk", "/.", 
                    RowBox[{"tmp", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], ")"}], "-", 
                    RowBox[{"(", 
                    RowBox[{"unk", "/.", 
                    RowBox[{"tmp", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"-", "2"}], ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], ")"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"tmp", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "\[RightDoubleBracket]"}],
                     "-", 
                    RowBox[{"tmp", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"-", "2"}], ",", "1"}], 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}], ";", "\n", 
                  "\t\t\t\t", 
                  RowBox[{"m0", "=", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"unk", "/.", "sol"}], ")"}], "-", 
                    RowBox[{"(", 
                    RowBox[{"unk", "/.", 
                    RowBox[{"tmp", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], ")"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"par", "-", 
                    RowBox[{"tmp", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}], ";", "\n", 
                  "\t\t\t\t", 
                  RowBox[{"list", "=", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"unk", "/.", 
                    RowBox[{
                    "ent", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"ent", ",", "tmp"}], "}"}]}], "]"}]}], ";", "\n", 
                  "\t\t\t\t", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"180", "/", "\[Pi]"}], " ", 
                    RowBox[{"ArcTan", "[", 
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"m0", "-", "m1"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"m0", " ", "m1"}]}], ")"}]}], "]"}], "]"}]}], ">",
                     "maxbend"}], "\n", "\t\t\t\t", "&&", "\n", "\t\t\t\t", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"unk", "/.", "sol"}], ")"}], "-", 
                    RowBox[{"(", 
                    RowBox[{"unk", "/.", 
                    RowBox[{"tmp", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], ")"}]}], "]"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"10", "^", 
                    RowBox[{"-", "10"}]}], "+", 
                    RowBox[{
                    RowBox[{"Differences", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Min", "[", "list", "]"}], ",", 
                    RowBox[{"Max", "[", "list", "]"}]}], "}"}], "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                    ")"}]}], ">", "maxchange"}]}]}], "\n", "\t\t\t", ",", 
                 RowBox[{"{", 
                  RowBox[{"unk", ",", "unks"}], "}"}]}], "]"}], "]"}]}], ",", 
             "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"printtrace", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{
                  RowBox[{"Defer", "@", "parname"}], ",", "\"\<=\>\"", ",", 
                  RowBox[{"NumberForm", "@", "par"}], ",", 
                  "\"\< MaxBend exceeded\>\""}], "]"}]}], "]"}], ";", "\n", 
              "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"dpar", ">", "0"}], ",", 
                RowBox[{"dpar", "=", 
                 RowBox[{"Max", "[", 
                  RowBox[{"minstepsize", ",", 
                   RowBox[{"dpar", "/", "2"}]}], "]"}]}], ",", 
                RowBox[{"dpar", "=", 
                 RowBox[{"Min", "[", 
                  RowBox[{"minstepsize", ",", 
                   RowBox[{"dpar", "/", "2"}]}], "]"}]}]}], "]"}], ";", "\n", 
              "\t\t", 
              RowBox[{"par", "=", 
               RowBox[{"par", "-", "dpar"}]}], ";"}], "\t\t\t", "\n", "\t", 
             ",", "\n", "\t\t", "True", ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"tmp", ",", 
                RowBox[{"{", 
                 RowBox[{"par", ",", "sol"}], "}"}]}], "]"}], ";", "\n", 
              "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"par", "\[Equal]", "parmax"}], ",", 
                RowBox[{"Break", "[", "]"}]}], "]"}], ";", " ", 
              RowBox[{"(*", " ", 
               RowBox[{"reached", " ", "end"}], " ", "*)"}], "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"dpar", ">", "0"}], ",", "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"dpar", "=", 
                  RowBox[{"Min", "[", 
                   RowBox[{"maxstepsize", ",", 
                    RowBox[{"2", "dpar"}]}], "]"}]}], ";", "\n", "\t\t\t", 
                 RowBox[{"par", "=", 
                  RowBox[{"Min", "[", 
                   RowBox[{"parmax", ",", 
                    RowBox[{"par", "+", "dpar"}]}], "]"}]}], ";"}], "\n", 
                "\t\t", ",", "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"dpar", "=", 
                  RowBox[{"Max", "[", 
                   RowBox[{"maxstepsize", ",", 
                    RowBox[{"2", "dpar"}]}], "]"}]}], ";", "\n", "\t\t\t", 
                 RowBox[{"par", "=", 
                  RowBox[{"Max", "[", 
                   RowBox[{"parmax", ",", 
                    RowBox[{"par", "+", "dpar"}]}], "]"}]}], ";"}]}], "\n", 
               "\t\t", "]"}], ";"}]}], "\[IndentingNewLine]", "\t", "]"}], 
           ";", "\[IndentingNewLine]", "\t", 
           RowBox[{"ics", "=", 
            RowBox[{"Quiet", "[", 
             RowBox[{
              RowBox[{"Slice", "[", 
               RowBox[{
                RowBox[{"RuleListInterpolation", "[", 
                 RowBox[{"tmp", ",", 
                  RowBox[{"Evaluate", "[", 
                   RowBox[{"Sequence", "@@", "interpolationopts"}], "]"}]}], 
                 "]"}], ",", "par"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Interpolation", "::", "inhr"}], ",", 
                RowBox[{"InterpolatingFunction", "::", "dmval"}]}], "}"}]}], 
             "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\n", "\n", 
        
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"count", "\[Equal]", "maxsteps"}], ",", 
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"TrackEcoEvoEq", "::", "mxst"}], ",", "maxsteps", ",", 
            RowBox[{"Defer", "@", "parname"}], ",", 
            RowBox[{"NumberForm", "@", "par"}]}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"Clear", "[", "parname", "]"}], ";", "\n", "\n", 
        RowBox[{"Return", "[", 
         RowBox[{"RuleListInterpolation", "[", 
          RowBox[{"tmp", ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"Sequence", "@@", "interpolationopts"}], "]"}]}], "]"}], 
         "]"}]}]}], "\n", "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.811424979913665*^9, 3.811424990033875*^9}, {
   3.811425083627582*^9, 3.811425087507594*^9}, {3.811425416943074*^9, 
   3.811425525871992*^9}, {3.811426248257588*^9, 3.811426262569021*^9}, {
   3.8114263613441753`*^9, 3.811426362255292*^9}, {3.811426691462117*^9, 
   3.8114268063274117`*^9}, {3.8114276839933243`*^9, 3.811427699725965*^9}, {
   3.811427743186131*^9, 3.811427800020237*^9}, {3.8114278533045588`*^9, 
   3.811427928161305*^9}, {3.811427990698628*^9, 3.811428155203888*^9}, {
   3.811428350630615*^9, 3.811428416698859*^9}, {3.811428498735832*^9, 
   3.8114286708114777`*^9}, {3.8114287270652027`*^9, 3.811428760124034*^9}, {
   3.8114288066436234`*^9, 3.811428844916338*^9}, {3.8114290075504913`*^9, 
   3.8114290139420843`*^9}, {3.811429047038095*^9, 3.8114291239821587`*^9}, {
   3.811429575898342*^9, 3.811429611586022*^9}, {3.811429651227707*^9, 
   3.811429665754122*^9}, {3.811429708435659*^9, 3.811429732902717*^9}, {
   3.811429779597145*^9, 3.811429779899659*^9}, {3.8114302432891073`*^9, 
   3.8114302455838213`*^9}, {3.811430284129833*^9, 3.8114302854167013`*^9}, {
   3.811430331324958*^9, 3.811430359608901*^9}, {3.811430700350264*^9, 
   3.8114307043734093`*^9}, {3.811430834903132*^9, 3.8114308353182497`*^9}, {
   3.811430970071899*^9, 3.811431029256164*^9}, {3.811431320802589*^9, 
   3.811431399387774*^9}, {3.811431458261181*^9, 3.811431476407226*^9}, {
   3.8114326823714*^9, 3.811432691378113*^9}, {3.811432737058869*^9, 
   3.811432780075306*^9}, {3.811520365108865*^9, 3.8115204403330927`*^9}, {
   3.811520576882028*^9, 3.811520604410397*^9}, {3.811537289002055*^9, 
   3.811537311535388*^9}, {3.811537647475031*^9, 3.811537674916716*^9}, {
   3.811537707276119*^9, 3.8115377174602203`*^9}, {3.811537838053334*^9, 
   3.811537849223753*^9}, {3.81153789738349*^9, 3.81153796240771*^9}, {
   3.811539069472929*^9, 3.8115390719599323`*^9}, {3.811539152217328*^9, 
   3.811539163041366*^9}, {3.811539565829665*^9, 3.8115395661813707`*^9}, {
   3.811539643907712*^9, 3.8115396594780912`*^9}, {3.81153971362004*^9, 
   3.811539715798471*^9}, {3.811539752424336*^9, 3.811539754399194*^9}, {
   3.8115398108552647`*^9, 3.811539837428349*^9}, {3.81154047198381*^9, 
   3.8115404766549997`*^9}, {3.811540709239629*^9, 3.811540727768364*^9}, {
   3.811541167553968*^9, 3.81154117101163*^9}, {3.811541227230109*^9, 
   3.811541230244216*^9}, 3.811541970700821*^9, {3.8115420771810083`*^9, 
   3.811542091180628*^9}, {3.811542158611136*^9, 3.811542168851746*^9}, {
   3.8115425599629087`*^9, 3.811542620852086*^9}, {3.8115426881243258`*^9, 
   3.811542715496551*^9}, {3.811542965559083*^9, 3.811542998634399*^9}, {
   3.8115439048618317`*^9, 3.811543925880986*^9}, {3.811544284868547*^9, 
   3.811544335052224*^9}, {3.811544394840887*^9, 3.811544427149516*^9}, {
   3.811545550273479*^9, 3.811545553427409*^9}, {3.8115479416753063`*^9, 
   3.811547988286862*^9}, {3.811548470262287*^9, 3.811548491517971*^9}, {
   3.8120545198491793`*^9, 3.81205452291227*^9}, {3.8120546097294416`*^9, 
   3.812054651097143*^9}, {3.812054783779213*^9, 3.81205479057876*^9}, {
   3.812055207160581*^9, 3.812055276012147*^9}, {3.812056362640917*^9, 
   3.812056390934861*^9}, {3.812056476378046*^9, 3.8120564777606773`*^9}, {
   3.812056541786911*^9, 3.8120565420327053`*^9}, {3.8120568523741703`*^9, 
   3.812056853852409*^9}, {3.812056965174823*^9, 3.812057018438652*^9}, {
   3.812057198565311*^9, 3.812057248745165*^9}, {3.812057498676593*^9, 
   3.8120575465377607`*^9}, {3.8120576829011374`*^9, 3.812057729845838*^9}, {
   3.812057774153146*^9, 3.812057783838122*^9}, 3.812057828744114*^9, {
   3.812057953832635*^9, 3.812057974032114*^9}, {3.812058104586997*^9, 
   3.812058122129813*^9}, {3.8120581672202177`*^9, 3.812058237619833*^9}, {
   3.812058299582727*^9, 3.812058315766033*^9}, {3.8120585775343637`*^9, 
   3.812058609005827*^9}, {3.8120594740079193`*^9, 3.812059474743684*^9}, {
   3.8120604888237057`*^9, 3.812060489559782*^9}, {3.812060566731502*^9, 
   3.8120605675224943`*^9}, {3.812062248496356*^9, 3.812062382258134*^9}, {
   3.812062442674137*^9, 3.812062493162676*^9}, {3.812062581916356*^9, 
   3.812062608123608*^9}, {3.812062672501499*^9, 3.812062680876231*^9}, {
   3.81206337762809*^9, 3.8120634154120417`*^9}, {3.8120634601004953`*^9, 
   3.812063509492652*^9}, {3.812063566414773*^9, 3.812063587902835*^9}, {
   3.812063769936253*^9, 3.812063788055436*^9}, {3.812064199492947*^9, 
   3.8120642575203648`*^9}, {3.812066665681546*^9, 3.812066678210497*^9}, {
   3.812066764268269*^9, 3.812066780064486*^9}, {3.812067604179583*^9, 
   3.81206764341014*^9}, {3.812068218434013*^9, 3.8120682350115633`*^9}, {
   3.8120682833544073`*^9, 3.8120683222181597`*^9}, {3.812068502477055*^9, 
   3.812068506171905*^9}, {3.812068536534234*^9, 3.812068536677363*^9}, {
   3.8121098129824657`*^9, 3.812109901151663*^9}, {3.812109936539679*^9, 
   3.8121099807318163`*^9}, {3.812110042084972*^9, 3.8121101128443604`*^9}, {
   3.812111696096287*^9, 3.812111887601472*^9}, {3.8121121363888474`*^9, 
   3.812112158581793*^9}, {3.8121125866158867`*^9, 3.8121126757695293`*^9}, 
   3.8121129737043123`*^9, {3.8121131395761414`*^9, 3.812113140999805*^9}, {
   3.8121131756010427`*^9, 3.8121131763678637`*^9}, {3.812113235914027*^9, 
   3.812113424439178*^9}, {3.812113454531911*^9, 3.812113557011454*^9}, 
   3.812113603012507*^9, {3.812113656518749*^9, 3.812113656560107*^9}, {
   3.812114697267949*^9, 3.812114701901701*^9}, 3.8121147571840878`*^9, {
   3.8121148346088257`*^9, 3.812114834648601*^9}, {3.812115280131181*^9, 
   3.8121152865156384`*^9}, {3.81211533802134*^9, 3.812115359867873*^9}, {
   3.812115416795949*^9, 3.8121154200057583`*^9}, {3.812115456012886*^9, 
   3.812115505045827*^9}, {3.812122595832426*^9, 3.8121226822469*^9}, {
   3.812122715031385*^9, 3.812122748873118*^9}, {3.8121227831139183`*^9, 
   3.812122795951055*^9}, {3.81212286481777*^9, 3.8121228819283457`*^9}, 
   3.8121229269363823`*^9, {3.8121229676123533`*^9, 3.812122984872136*^9}, {
   3.8121233807092257`*^9, 3.812123418030747*^9}, {3.812123521271865*^9, 
   3.812123533589839*^9}, {3.8121244458910313`*^9, 3.812124474017437*^9}, {
   3.8121247173565617`*^9, 3.812124756812896*^9}, {3.812124797403253*^9, 
   3.8121248201566353`*^9}, {3.8121248931352873`*^9, 3.812124894885111*^9}, {
   3.8121249991822023`*^9, 3.8121250185915537`*^9}, {3.812125079304188*^9, 
   3.81212510548002*^9}, {3.812125143941709*^9, 3.812125160871703*^9}, {
   3.81212519746972*^9, 3.812125237264615*^9}, {3.81212527554317*^9, 
   3.812125436970538*^9}, 3.8121257361582623`*^9, {3.812129032354097*^9, 
   3.812129079967925*^9}, {3.812129445131248*^9, 3.8121294721285686`*^9}, {
   3.812144028411899*^9, 3.812144051114347*^9}, 3.812145246674012*^9, {
   3.8121519846704493`*^9, 3.812151991070286*^9}, {3.812152025526599*^9, 
   3.812152058968644*^9}, {3.812152177608025*^9, 3.8121522034038363`*^9}, {
   3.812152912142496*^9, 3.812152913784978*^9}, {3.828871736789064*^9, 
   3.8288717720891247`*^9}, {3.828871955317087*^9, 3.828871957939527*^9}, 
   3.828872092817075*^9, {3.82887215502038*^9, 3.8288721886109123`*^9}, {
   3.828872341152272*^9, 3.828872370965329*^9}, {3.828872682315749*^9, 
   3.828872703681423*^9}, {3.82887371129397*^9, 3.828873720174169*^9}, {
   3.8288737802809258`*^9, 3.828873787457513*^9}, {3.828873818268429*^9, 
   3.828873821200626*^9}, {3.828874174026075*^9, 3.828874182762685*^9}, {
   3.828882139624072*^9, 3.8288821629744167`*^9}, {3.828887709431967*^9, 
   3.828887709551049*^9}, {3.8295677317624273`*^9, 3.829567795348219*^9}, {
   3.833984692823866*^9, 3.83398469584015*^9}, {3.833985519104793*^9, 
   3.833985544976718*^9}, {3.8340610135848227`*^9, 3.834061016103651*^9}, {
   3.8341543488021383`*^9, 
   3.834154353162429*^9}},ExpressionUUID->"b2b0c35d-2382-4d6b-aeee-\
4b3a348712a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.8114250257542963`*^9, 
  3.811425026489006*^9}},ExpressionUUID->"5e50f12b-34a3-4dae-b10b-\
35745be90890"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "TrackEcoEvoEq", "]"}], "=", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"PrintTrace", "\[Rule]", "False"}], ",", 
     RowBox[{"Monitor", "\[Rule]", "True"}], ",", "\n", "\t", 
     RowBox[{"MinStepSize", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"MaxStepSize", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"MaxSteps", "\[Rule]", "200"}], ",", "\n", "\t", 
     RowBox[{"Tests", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<CSS\>\"", ",", "\"\<LocalESS\>\"", ",", "\"\<GlobalESS\>\"", ",", 
        "\"\<Extinction\>\"", ",", "\"\<Convergence\>\"", ",", 
        "\"\<MaxBend\>\""}], "}"}]}], ",", "\n", "\t", 
     RowBox[{"FindEcoEvoEqOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"InterpolationOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", "\t", 
     RowBox[{"MinDistance", "\[Rule]", 
      RowBox[{"10", "^", 
       RowBox[{"-", "10"}]}]}], ",", 
     RowBox[{"MaxBend", "\[Rule]", "3"}], ",", 
     RowBox[{"MaxChange", "\[Rule]", "0.01"}]}], "\n", "}"}]}], ";"}]], "Code",\

 CellChangeTimes->{{3.811425031218261*^9, 3.8114250390264063`*^9}, 
   3.811426366432332*^9, {3.811427807161435*^9, 3.811427820632504*^9}, {
   3.811428374388912*^9, 3.811428381164459*^9}, {3.811431033918836*^9, 
   3.811431038230488*^9}, {3.811432785561322*^9, 3.811432795249494*^9}, {
   3.811544092702614*^9, 3.811544098191416*^9}, {3.81154414285635*^9, 
   3.811544207504498*^9}, {3.8115444103184566`*^9, 3.81154441323456*^9}, {
   3.811547927712386*^9, 3.811547933570745*^9}, {3.81206241034264*^9, 
   3.812062431877686*^9}, 3.812062501688244*^9, {3.812066628838398*^9, 
   3.812066659134439*^9}, {3.812115264735362*^9, 3.812115265310049*^9}, {
   3.812115365598723*^9, 3.812115368070902*^9}, {3.812123235527257*^9, 
   3.8121232623986998`*^9}, {3.8121244787804747`*^9, 3.8121245093956137`*^9}, 
   3.812232271547076*^9},ExpressionUUID->"c6809743-5f84-4a91-8630-\
11b9387a6e61"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Messages", "Subsubsection",
 CellChangeTimes->{{3.769500962300488*^9, 
  3.76950096768353*^9}},ExpressionUUID->"8d3f2d02-9d3c-48bf-90eb-\
a514ee49fa23"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TrackEcoEvoEq", "::", "err"}], "=", 
   "\"\<FindEcoEvoEq failed at `1`=`2`.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TrackEcoEvoEq", "::", "ferr"}], "=", 
   "\"\<FindEcoEvoEq failed at initial parameter value,`1`=`2`, can not \
continue.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TrackEcoEvoEq", "::", "noncss"}], "=", 
   "\"\<Non-convergence stable EcoEvoEq at `1`=`2`, eigenvalues=`3`).\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TrackEcoEvoEq", "::", "nonless"}], "=", 
   "\"\<Not a local ESS at `1`=`2`, LocalESSQ=`3`.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TrackEcoEvoEq", "::", "nongess"}], "=", 
   "\"\<Not a global ESS at `1`=`2`, GlobalESSQ=`3`.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TrackEcoEvoEq", "::", "extinct"}], "=", 
   "\"\<Extinction at `1`=`2`, sol=`3`.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TrackEcoEvoEq", "::", "converged"}], "=", 
   "\"\<Traits converged at `1`=`2`, sol=`3`.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TrackEcoEvoEq", "::", "mxst"}], "=", 
   "\"\<Maximum number of `1` steps reached at `2`=`3`\>\""}], ";"}]}], "Code",\

 CellChangeTimes->{
  3.7695009706162233`*^9, {3.811539104306443*^9, 3.811539138854909*^9}, {
   3.811539171367899*^9, 3.811539221453659*^9}, {3.8115394474056387`*^9, 
   3.811539467793943*^9}, {3.811539523248638*^9, 3.8115395528991756`*^9}, {
   3.811542243749295*^9, 3.811542278140335*^9}, {3.8120552965463343`*^9, 
   3.812055329649951*^9}, {3.812057026867799*^9, 3.8120570469635773`*^9}, {
   3.812058615068633*^9, 3.8120586176507607`*^9}, {3.812064266416361*^9, 
   3.812064296416676*^9}, {3.812068240869543*^9, 
   3.812068279293051*^9}},ExpressionUUID->"e5941daf-b574-498b-8c0e-\
f5afc931a007"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["FindEcoEvoCycle / FindEcoCycleEvoEq", "Subsection",
 CellChangeTimes->{{3.70016802803725*^9, 3.700168031995866*^9}, {
  3.759399726025607*^9, 3.759399728381743*^9}, {3.759399921053187*^9, 
  3.7593999213755503`*^9}, {3.759586788725012*^9, 3.759586805703433*^9}, {
  3.769490415695615*^9, 3.769490416157187*^9}, {3.769490479864265*^9, 
  3.769490485977433*^9}},ExpressionUUID->"2cdd0838-2ebd-4dd2-baae-\
d3ace1c006fd"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"b725d167-3565-4aea-90ee-\
ef84a6b5230f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoEvoCycle", "::", "usage"}], "=", "\n", 
    "\"\<FindEcoEvoCycle[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"variables\", \"TI\"]\)] finds an eco-evolutionary cycle, \
with initial guess \!\(\*StyleBox[\"traits\", \"TI\"]\) and \
\!\(\*StyleBox[\"variables\", \"TI\"]\).\n\
FindEcoEvoCycle[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"variables\", \"TI\"]\), \!\(\*StyleBox[\"varcovars\", \
\"TI\"]\)] uses trait variances/covariances in \!\(\*StyleBox[\"varcovars\", \
\"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FindEcoCycleEvoEq", "::", "usage"}], "=", "\n", 
   "\"\<FindEcoCycleEvoEq[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"variables\", \"TI\"]\)] finds an evolutionary equilibrium \
with an ecological cycle, with initial guess \!\(\*StyleBox[\"traits\", \
\"TI\"]\) and \!\(\*StyleBox[\"variables\", \"TI\"]\).\n\
FindEcoCycleEvoEq[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"variables\", \"TI\"]\), \!\(\*StyleBox[\"varscovars\", \
\"TI\"]\)] uses trait variances/covariances in \!\(\*StyleBox[\"varcovars\", \
\"TI\"]\).\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.769490423393537*^9, 3.7694904290047903`*^9}, {
  3.769490473945784*^9, 3.769490478758576*^9}, {3.770005846119035*^9, 
  3.770005848863131*^9}, {3.792422877308174*^9, 3.792422940459433*^9}, {
  3.807402508197011*^9, 
  3.8074025201849947`*^9}},ExpressionUUID->"02419201-364a-4764-a8de-\
06ab610d640f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"25a9bc4e-e46d-4597-9e90-\
e348de8f07b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Periodic", " ", "system"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoEvoCycle", "[", 
     RowBox[{
      RowBox[{"traitsin_", "?", "TraitsQ"}], ",", 
      RowBox[{"variablesin_", "?", "VariablesQ"}], ",", 
      RowBox[{"Gs", ":", 
       RowBox[{"(", 
        RowBox[{"_", "?", "GsQ"}], ")"}], ":", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "\n", 
        RowBox[{
         RowBox[{"func", "=", 
          RowBox[{
          "FuncStyle", "[", "\"\<FindEcoEvoCycle (Periodic)\>\"", "]"}]}], 
         ",", "\n", 
         RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
         "verboseall", ",", "\n", "method", ",", "fitnessgradient", ",", 
         "evoeq", ",", "\n", "ecosimopts", ",", "ndinvopts", ",", 
         "ecoevosimopts", ",", "findrootopts", ",", "monitor", ",", 
         "printtrace", ",", "fixed", ",", "traitshiftrate", ",", "\n", 
         "maxiterations", ",", "rulelistdistanceopts", ",", "\n", 
         "accuracygoal", ",", "traitaccuracygoal", ",", 
         "variableaccuracygoal", ",", "\n", "precisiongoal", ",", 
         "traitprecisiongoal", ",", "variableprecisiongoal", ",", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "traits", 
         ",", "variables", ",", "\n", "fixedvars", ",", "fixedtraits", ",", 
         "fixedvariables", ",", "nonfixedtraits", ",", "nonfixedvars", ",", 
         "nonfixedvariables", ",", "\n", "thing", ",", "fw", ",", "sol", ",", 
         "unks", ",", "unksics", ",", "res", ",", "dtrait", ",", "v", ",", 
         "nb"}], "}"}], ",", "\n", "\n", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
            RowBox[{
             RowBox[{"Message", "[", 
              RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
             RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
          RowBox[{"If", "[", 
           RowBox[{"Global`debug", ",", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
          "\n", 
          RowBox[{"(*", " ", 
           RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
          RowBox[{"verbose", "=", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"Verbose", "/.", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"opts", ",", 
                RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
              "]"}]}], "]"}]}], ";", "\n", 
          RowBox[{"If", "[", 
           RowBox[{"Global`debug", ",", 
            RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
          RowBox[{"verboseall", "=", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"VerboseAll", "/.", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"opts", ",", 
                RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
              "]"}]}], "]"}]}], ";", "\n", 
          RowBox[{"If", "[", 
           RowBox[{"verboseall", ",", 
            RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
          RowBox[{"method", "=", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"Method", "/.", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"opts", ",", 
                RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
              "]"}]}], "]"}]}], ";", "\n", 
          RowBox[{"evoeq", "=", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"EvoEq", "/.", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"opts", ",", 
                RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
              "]"}]}], "]"}]}], ";", "\n", 
          RowBox[{"fitnessgradient", "=", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"FitnessGradient", "/.", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"opts", ",", 
                RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
              "]"}]}], "]"}]}], ";", "\n", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"fitnessgradient", "===", "Automatic"}], ",", "\n", "\t", 
            
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"evoeq", "\[Equal]", "False"}], "||", 
               RowBox[{
                RowBox[{"Max", "[", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"ngcomps", "[", "gu", "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "]"}], 
                "\[Equal]", "1"}]}], ",", 
              RowBox[{"fitnessgradient", "=", "\"\<EcoEvoSim\>\""}], ",", 
              RowBox[{"fitnessgradient", "=", "\"\<NDInv\>\""}]}], "]"}]}], 
           "]"}], ";", "\n", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"ngcomps", "[", "gu", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "]"}], ">", 
              "1"}], "&&", 
             RowBox[{"fitnessgradient", "\[Equal]", "\"\<EcoEvoSim\>\""}]}], 
            ",", 
            RowBox[{"Message", "[", 
             RowBox[{"FindEcoEvoCycle", "::", "susmtd"}], "]"}]}], "]"}], ";",
           "\n", 
          RowBox[{"If", "[", 
           RowBox[{"verbose", ",", 
            RowBox[{"Print", "[", 
             RowBox[{
             "func", ",", "\"\<: FitnessGradient=\>\"", ",", 
              "fitnessgradient"}], "]"}]}], "]"}], ";", "\n", 
          RowBox[{"ndinvopts", "=", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"NDInvOpts", "/.", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"opts", ",", 
                RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
              "]"}]}], "]"}]}], ";", "\n", 
          RowBox[{"findrootopts", "=", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"FindRootOpts", "/.", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"opts", ",", 
                RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
              "]"}]}], "]"}]}], ";", "\n", 
          RowBox[{"ecosimopts", "=", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"EcoSimOpts", "/.", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"opts", ",", 
                RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
              "]"}]}], "]"}]}], ";", "\n", 
          RowBox[{"ecoevosimopts", "=", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"EcoEvoSimOpts", "/.", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"opts", ",", 
                RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
              "]"}]}], "]"}]}], ";", "\n", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"evoeq", "\[Equal]", "True"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"ecoevosimopts", ",", 
              RowBox[{"FreezeTraits", "\[Rule]", "True"}]}], "]"}]}], "]"}], 
          ";", "\n", 
          RowBox[{"monitor", "=", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"Monitor", "/.", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"opts", ",", 
                RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
              "]"}]}], "]"}]}], ";", "\n", 
          RowBox[{"printtrace", "=", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"PrintTrace", "/.", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"opts", ",", 
                RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
              "]"}]}], "]"}]}], ";", "\n", 
          RowBox[{"fixed", "=", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"Fixed", "/.", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"opts", ",", 
                RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
              "]"}]}], "]"}]}], ";", "\n", 
          RowBox[{"traitshiftrate", "=", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"TraitShiftRate", "/.", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"opts", ",", 
                RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
              "]"}]}], "]"}]}], ";", "\n", 
          RowBox[{"maxiterations", "=", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"MaxIterations", "/.", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"opts", ",", 
                RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
              "]"}]}], "]"}]}], ";", "\n", 
          RowBox[{"accuracygoal", "=", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"AccuracyGoal", "/.", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"opts", ",", 
                RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
              "]"}]}], "]"}]}], ";", "\n", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ListQ", "[", "accuracygoal", "]"}], ",", "\n", "\t", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"variableaccuracygoal", ",", "traitaccuracygoal"}], 
              "}"}], "=", 
             RowBox[{"accuracygoal", "\[LeftDoubleBracket]", 
              RowBox[{"1", ";;", "2"}], "\[RightDoubleBracket]"}]}], ",", 
            "\n", "\t", 
            RowBox[{"variableaccuracygoal", "=", 
             RowBox[{"traitaccuracygoal", "=", "accuracygoal"}]}]}], "]"}], 
          ";", "\n", 
          RowBox[{"precisiongoal", "=", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"PrecisionGoal", "/.", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"opts", ",", 
                RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
              "]"}]}], "]"}]}], ";", "\n", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ListQ", "[", "precisiongoal", "]"}], ",", "\n", "\t", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"variableprecisiongoal", ",", "traitprecisiongoal"}], 
              "}"}], "=", 
             RowBox[{"precisiongoal", "\[LeftDoubleBracket]", 
              RowBox[{"1", ";;", "2"}], "\[RightDoubleBracket]"}]}], ",", 
            "\n", "\t", 
            RowBox[{"variableprecisiongoal", "=", 
             RowBox[{"traitprecisiongoal", "=", "precisiongoal"}]}]}], "]"}], 
          ";", "\n", 
          RowBox[{"rulelistdistanceopts", "=", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"RuleListDistanceOpts", "/.", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"opts", ",", 
                RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
              "]"}]}], "]"}]}], ";", "\n", "\n", 
          RowBox[{"(*", " ", 
           RowBox[{
           "drop", " ", "fixed", " ", "variables", " ", "from", " ", "traits",
             " ", "and", " ", "variables"}], " ", "*)"}], "\n", 
          RowBox[{"traits", "=", 
           RowBox[{"RuleListComplement", "[", 
            RowBox[{"traitsin", ",", "fixed"}], "]"}]}], ";", "\n", 
          RowBox[{"variables", "=", 
           RowBox[{"RuleListComplement", "[", 
            RowBox[{"variablesin", ",", "fixed"}], "]"}]}], ";", "\n", "\n", 
          RowBox[{"fixedvars", "=", 
           RowBox[{"fixed", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
          RowBox[{"fixedtraits", "=", 
           RowBox[{"ExtractTraits", "[", "fixed", "]"}]}], ";", "\n", 
          RowBox[{"fixedvariables", "=", 
           RowBox[{"ExtractVariables", "[", "fixed", "]"}]}], ";", "\n", 
          RowBox[{"nonfixedtraits", "=", 
           RowBox[{"traits", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
          RowBox[{"nonfixedvariables", "=", 
           RowBox[{"variables", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
          RowBox[{"nonfixedvars", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"nonfixedvariables", ",", "nonfixedtraits"}], "]"}]}], 
          ";", "\n", "\n", 
          RowBox[{"(*", " ", 
           RowBox[{
           "figure", " ", "out", " ", "number", " ", "of", " ", "species", 
            " ", "in", " ", "guilds"}], " ", "*)"}], "\n", 
          RowBox[{"Set\[ScriptCapitalN]", "[", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{"traits", ",", "fixedtraits"}], "]"}], ",", 
            RowBox[{"Join", "[", 
             RowBox[{"variables", ",", "fixedvariables"}], "]"}]}], "]"}], 
          ";", "\n", "\n", 
          RowBox[{"Which", "[", "\n", "\t", 
           RowBox[{
            RowBox[{"fitnessgradient", "\[Equal]", "\"\<EcoEvoSim\>\""}], ",",
             "\n", "\t", 
            RowBox[{
             RowBox[{"thing", "[", 
              RowBox[{"varsandtraits_", "?", "NumericRuleListQ"}], "]"}], ":=", 
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", "}"}], ",", "\n", "\t\t", 
               RowBox[{
                RowBox[{"$FindEcoEvoCycleSteps", "++"}], ";", "\n", "\t\t", 
                RowBox[{"sol", "=", 
                 RowBox[{"EcoEvoSim", "[", 
                  RowBox[{"varsandtraits", ",", "Gs", ",", "modelperiod", ",", 
                   RowBox[{"Fixed", "\[Rule]", "fixed"}], ",", 
                   RowBox[{"TraitShiftRate", "\[Rule]", "traitshiftrate"}], 
                   ",", "\n", "\t\t\t", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "ecoevosimopts"}], "]"}]}], 
                  "]"}]}], ";", "\n", "\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{"printtrace", ",", 
                  RowBox[{"Print", "[", 
                   RowBox[{"$FindEcoEvoCycleSteps", ",", "\"\< \>\"", ",", 
                    RowBox[{"FinalSlice", "[", "sol", "]"}]}], "]"}]}], "]"}],
                 ";", "\n", "\t\t", 
                RowBox[{"Return", "[", 
                 RowBox[{"Select", "[", 
                  RowBox[{
                   RowBox[{"FinalSlice", "[", "sol", "]"}], ",", 
                   RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"nonfixedvars", ",", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], "&"}]}], "]"}], 
                 "]"}]}]}], "\n", "\t", "]"}]}], "\n", ",", "\t", "\n", "\t", 
            
            RowBox[{"fitnessgradient", "\[Equal]", "\"\<NDInv\>\""}], ",", 
            "\n", "\t", 
            RowBox[{"(*", " ", 
             RowBox[{"shifting", " ", "traits"}], " ", "*)"}], "\n", "\t", 
            RowBox[{
             RowBox[{"Do", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"dtrait", "[", "tr", "]"}], "=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"MemberQ", "[", 
                   RowBox[{
                    RowBox[{"traitshiftrate", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "tr", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                  RowBox[{
                   RowBox[{
                   "tr", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "/.", "traitshiftrate"}], ",", 
                  "0"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"tr", ",", "nonfixedtraits"}], "}"}]}], "]"}], ";", 
             "\n", "\t", 
             RowBox[{"(*", " ", 
              RowBox[{"set", " ", "up", " ", "vs"}], " ", "*)"}], "\n", "\t", 
             
             RowBox[{"Do", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"v", "[", "tr", "]"}], "=", 
                RowBox[{
                 RowBox[{
                  RowBox[{"V", "[", 
                   RowBox[{"DeleteSubscripts", "@", "tr"}], "]"}], "/.", 
                  "Gs"}], "/.", 
                 RowBox[{
                  RowBox[{"V", "[", 
                   RowBox[{"DeleteSubscripts", "@", "tr"}], "]"}], "\[Rule]", 
                  "1"}]}]}], ",", 
               RowBox[{"{", 
                RowBox[{"tr", ",", "nonfixedtraits"}], "}"}]}], "]"}], ";", 
             "\n", "\n", "\t", 
             RowBox[{
              RowBox[{"thing", "[", 
               RowBox[{"varsandtraits_", "?", "NumericRuleListQ"}], "]"}], ":=", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", "fg", "}"}], ",", "\n", "\t\t", 
                RowBox[{
                 RowBox[{"$FindEcoEvoCycleSteps", "++"}], ";", "\n", "\t\t", 
                 RowBox[{"sol", "=", 
                  RowBox[{"EcoSim", "[", 
                   RowBox[{"varsandtraits", ",", "modelperiod", ",", 
                    RowBox[{"Fixed", "\[Rule]", "fixed"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "ecosimopts"}], "]"}]}], 
                   "]"}]}], ";", "\n", "\t\t", 
                 RowBox[{"fg", "=", 
                  RowBox[{"Flatten", "[", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"tr", "\[Rule]", "\n", "\t\t\t", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"v", "[", "tr", "]"}], "*", 
                    RowBox[{"NDInv", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{"varsandtraits", ",", "fixed"}], "]"}], "//", 
                    "ExtractTraits"}], ",", "sol", ",", 
                    RowBox[{"tr", "//", "ZeroSubscripts"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"tr", "//", "ZeroSubscripts"}], ")"}], "\[Rule]", 
                    
                    RowBox[{"(", 
                    RowBox[{"tr", "/.", "varsandtraits"}], ")"}]}], "}"}], 
                    ",", "\n", "\t\t\t", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "ndinvopts"}], "]"}]}], "]"}]}],
                     "-", 
                    RowBox[{"dtrait", "[", "tr", "]"}]}]}], "\n", "\t\t", ",", 
                    RowBox[{"{", 
                    RowBox[{"tr", ",", "nonfixedtraits"}], "}"}]}], "]"}], 
                   "]"}]}], ";", "\n", "\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"printtrace", ",", 
                   RowBox[{"Print", "[", 
                    RowBox[{"$FindEcoEvoCycleSteps", ",", "\"\< \>\"", ",", 
                    RowBox[{"FinalSlice", "[", "sol", "]"}], ",", "\"\< \>\"",
                     ",", 
                    RowBox[{"RuleListAdd", "[", 
                    RowBox[{
                    RowBox[{"ExtractTraits", "[", "varsandtraits", "]"}], ",",
                     "fg"}], "]"}]}], "]"}]}], "]"}], ";", "\n", "\t\t", 
                 RowBox[{"Return", "[", 
                  RowBox[{"Join", "[", "\n", "\t\t\t", 
                   RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"FinalSlice", "[", "sol", "]"}], ",", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"nonfixedvars", ",", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], "&"}]}], "]"}], ",", 
                    "\n", "\t\t\t", 
                    RowBox[{"RuleListAdd", "[", 
                    RowBox[{
                    RowBox[{"ExtractTraits", "[", "varsandtraits", "]"}], ",",
                     "fg"}], "]"}]}], "\n", "\t\t", "]"}], "]"}]}]}], "\n", 
               "\t", "]"}]}]}], ",", "\n", "\t", "Else", ",", "\n", "\t", 
            RowBox[{
             RowBox[{"Message", "[", 
              RowBox[{"FindEcoEvoCycle", "::", "badmtd"}], "]"}], ";", 
             RowBox[{"Return", "[", "$Failed", "]"}]}]}], "\n", "]"}], ";", 
          "\n", "\n", 
          RowBox[{"If", "[", 
           RowBox[{"monitor", ",", "\n", "\t", 
            RowBox[{
             RowBox[{"nb", "=", 
              RowBox[{"CreateDialog", "[", 
               RowBox[{
                RowBox[{"{", "\n", "\t\t", 
                 RowBox[{
                  RowBox[{"TextCell", "[", "\"\<evaluation: \>\"", "]"}], ",",
                   "\n", "\t\t", 
                  RowBox[{"Dynamic", "[", "$FindEcoEvoCycleSteps", "]"}], ",",
                   "\n", "\t\t", 
                  RowBox[{"TextCell", "[", "\"\<vars:\>\"", "]"}], ",", "\n", 
                  "\t\t", 
                  RowBox[{"Dynamic", "[", 
                   RowBox[{"FinalSlice", "[", "sol", "]"}], "]"}]}], "\n", 
                 "\t", "}"}], ",", "\n", "\t", 
                RowBox[{
                "WindowTitle", "\[Rule]", 
                 "\"\<FindEcoEvoCycle Progress...\>\""}], ",", 
                RowBox[{"WindowSize", "\[Rule]", "All"}]}], "]"}]}], ";"}]}], 
           "\n", "]"}], ";", "\n", "\n", 
          RowBox[{"(*", " ", 
           RowBox[{"solve", " ", "it"}], " ", "*)"}], "\n", 
          RowBox[{"$FindEcoEvoCycleSteps", "=", "0"}], ";", "\n", 
          RowBox[{"Which", "[", "\n", "\t", 
           RowBox[{
            RowBox[{"method", "\[Equal]", "\"\<FindRoot\>\""}], ",", "\n", 
            "\t", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{"verbose", ",", 
               RowBox[{"Print", "[", 
                RowBox[{"func", ",", "\"\<: Method FindRoot\>\""}], "]"}]}], 
              "]"}], ";", "\n", "\t", 
             RowBox[{"unks", "=", 
              RowBox[{"nonfixedvars", "/.", "ToUnks"}]}], ";", "\n", "\t", 
             RowBox[{"unksics", "=", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"var", "/.", "ToUnks"}], ",", 
                  RowBox[{
                   RowBox[{"var", "/.", "traits"}], "/.", "variables"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"var", ",", "nonfixedvars"}], "}"}]}], "]"}]}], ";", 
             "\n", "\t", 
             RowBox[{
              RowBox[{"fw", "[", 
               RowBox[{"l_", "?", "NumericListQ"}], "]"}], ":=", 
              RowBox[{"nonfixedvars", "/.", 
               RowBox[{"thing", "[", 
                RowBox[{"Thread", "[", 
                 RowBox[{"nonfixedvars", "\[Rule]", "l"}], "]"}], "]"}]}]}], 
             ";", "\n", "\t", 
             RowBox[{"res", "=", 
              RowBox[{"FindRoot", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"fw", "[", "unks", "]"}], "\[Equal]", "unks"}], ",", 
                "unksics", ",", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"Sequence", "@@", "findrootopts"}], "]"}]}], "]"}]}],
              ";", "\n", "\t", 
             RowBox[{"If", "[", 
              RowBox[{"monitor", ",", 
               RowBox[{"NotebookClose", "[", "nb", "]"}]}], "]"}], ";", "\n", 
             "\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"evoeq", "\[Equal]", "True"}], ",", "\n", "\t\t", 
               RowBox[{"Return", "[", 
                RowBox[{
                 RowBox[{"SortRuleList", "[", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"ExtractTraits", "[", 
                    RowBox[{"res", "/.", "FromUnks"}], "]"}], ",", 
                    RowBox[{"ExtractVariables", "[", "sol", "]"}], ",", 
                    "fixed"}], "]"}], ",", 
                   RowBox[{"Join", "[", 
                    RowBox[{"AllVariables", ",", "AllTraits"}], "]"}]}], 
                  "]"}], "/.", 
                 RowBox[{"if_InterpolatingFunction", "\[Rule]", 
                  RowBox[{
                  "MakeInterpolatingFunctionPeriodic", "[", "if", "]"}]}]}], 
                "]"}], ",", "\n", "\t\t", 
               RowBox[{"Return", "[", 
                RowBox[{
                 RowBox[{"SortRuleList", "[", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{"sol", ",", "fixed"}], "]"}], ",", 
                   RowBox[{"Join", "[", 
                    RowBox[{"AllVariables", ",", "AllTraits"}], "]"}]}], 
                  "]"}], "/.", 
                 RowBox[{"if_InterpolatingFunction", "\[Rule]", 
                  RowBox[{
                  "MakeInterpolatingFunctionPeriodic", "[", "if", "]"}]}]}], 
                "]"}]}], "\n", "\t", "]"}]}], "\n", ",", "\n", "\t", 
            RowBox[{"method", "\[Equal]", "\"\<FixedPoint\>\""}], ",", "\n", 
            "\t", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{"verbose", ",", 
               RowBox[{"Print", "[", 
                RowBox[{"func", ",", "\"\<: Method FixedPoint\>\""}], "]"}]}],
               "]"}], ";", "\n", "\t", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"res", "=", 
                RowBox[{"FixedPoint", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"thing", "[", "#", "]"}], "&"}], ",", 
                  RowBox[{"Join", "[", 
                   RowBox[{"variables", ",", "traits"}], "]"}], ",", 
                  "maxiterations", ",", 
                  RowBox[{"SameTest", "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"RuleListDistance", "[", 
                    RowBox[{"#1", ",", "#2", ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "rulelistdistanceopts"}], 
                    "]"}]}], "]"}], "<", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "accuracygoal"}]}]}], "&"}], ")"}]}]}], 
                 "]"}]}], ";"}], "*)"}], "\n", "\t", 
             RowBox[{"res", "=", 
              RowBox[{"FixedPoint", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"thing", "[", "#", "]"}], "&"}], ",", 
                RowBox[{"Join", "[", 
                 RowBox[{"variables", ",", "traits"}], "]"}], ",", 
                "maxiterations", ",", 
                RowBox[{"SameTest", "\[Rule]", 
                 RowBox[{"(", "\n", "\t\t", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"RuleListDistance", "[", 
                    RowBox[{
                    RowBox[{"ExtractTraits", "[", "#1", "]"}], ",", 
                    RowBox[{"ExtractTraits", "[", "#2", "]"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "rulelistdistanceopts"}], 
                    "]"}]}], "]"}], "<", 
                    RowBox[{
                    RowBox[{"10", "^", 
                    RowBox[{"-", "traitaccuracygoal"}]}], "\n", "\t\t\t", "+", 
                    RowBox[{
                    RowBox[{"RuleListDistance", "[", 
                    RowBox[{
                    RowBox[{"ExtractTraits", "[", "#1", "]"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "rulelistdistanceopts"}], 
                    "]"}]}], "]"}], "*", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "traitprecisiongoal"}]}]}]}]}], " ", "&&", 
                    "\n", "\t\t", 
                    RowBox[{
                    RowBox[{"RuleListDistance", "[", 
                    RowBox[{
                    RowBox[{"ExtractVariables", "[", "#1", "]"}], ",", 
                    RowBox[{"ExtractVariables", "[", "#2", "]"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "rulelistdistanceopts"}], 
                    "]"}]}], "]"}], "<", 
                    RowBox[{
                    RowBox[{"10", "^", 
                    RowBox[{"-", "variableaccuracygoal"}]}], "\n", "\t\t\t", 
                    "+", 
                    RowBox[{
                    RowBox[{"RuleListDistance", "[", 
                    RowBox[{
                    RowBox[{"ExtractVariables", "[", "#1", "]"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "rulelistdistanceopts"}], 
                    "]"}]}], "]"}], "*", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "variableprecisiongoal"}]}]}]}]}]}], "\n", 
                   "\t", "&"}], ")"}]}]}], "]"}]}], ";", "\n", "\t", 
             RowBox[{"If", "[", 
              RowBox[{"monitor", ",", 
               RowBox[{"NotebookClose", "[", "nb", "]"}]}], "]"}], ";", "\n", 
             "\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"$FindEcoEvoCycleSteps", "\[Equal]", "maxiterations"}],
                ",", 
               RowBox[{"Message", "[", 
                RowBox[{
                 RowBox[{"FindEcoEvoCycle", "::", "cvmit"}], ",", 
                 "maxiterations"}], "]"}]}], "]"}], ";", "\n", "\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"evoeq", "\[Equal]", "True"}], ",", "\n", "\t\t", 
               RowBox[{"Return", "[", 
                RowBox[{
                 RowBox[{"SortRuleList", "[", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"ExtractTraits", "[", "res", "]"}], ",", 
                    RowBox[{"ExtractVariables", "[", "sol", "]"}], ",", 
                    "fixed"}], "]"}], ",", 
                   RowBox[{"Join", "[", 
                    RowBox[{"AllVariables", ",", "AllTraits"}], "]"}]}], 
                  "]"}], "/.", 
                 RowBox[{"if_InterpolatingFunction", "\[Rule]", 
                  RowBox[{
                  "MakeInterpolatingFunctionPeriodic", "[", "if", "]"}]}]}], 
                "]"}], ",", "\t", "\n", "\t\t", 
               RowBox[{"Return", "[", 
                RowBox[{
                 RowBox[{"SortRuleList", "[", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{"sol", ",", "fixed"}], "]"}], ",", 
                   RowBox[{"Join", "[", 
                    RowBox[{"AllVariables", ",", "AllTraits"}], "]"}]}], 
                  "]"}], "/.", 
                 RowBox[{"if_InterpolatingFunction", "\[Rule]", 
                  RowBox[{
                  "MakeInterpolatingFunctionPeriodic", "[", "if", "]"}]}]}], 
                "]"}]}], "\n", "\t", "]"}]}], "\n", ",", "\n", "\t", "Else", 
            ",", "\n", "\t", 
            RowBox[{
             RowBox[{"Message", "[", 
              RowBox[{"FindEcoEvoCycle", "::", "badmtd"}], "]"}], ";", 
             RowBox[{"Return", "[", "$Failed", "]"}]}]}], "\n", "]"}], 
          ";"}]}], "\n", "\n", "]"}]}], "]"}], "/;", 
     RowBox[{"modelperiod", "=!=", "0"}]}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.688467219380802*^9, 3.688467220189288*^9}, {
   3.688571714573394*^9, 3.6885717150579643`*^9}, {3.688571774498156*^9, 
   3.6885717746869707`*^9}, {3.688571807725027*^9, 3.688571807770288*^9}, {
   3.6965894931424437`*^9, 3.696589495437352*^9}, {3.70008475724277*^9, 
   3.7000847591671333`*^9}, 3.70017206819726*^9, {3.700173024004677*^9, 
   3.700173029727997*^9}, {3.7001733055048103`*^9, 3.700173306851651*^9}, {
   3.700173836745476*^9, 3.700173857852957*^9}, {3.7002117073391657`*^9, 
   3.700211732669055*^9}, {3.700480211909071*^9, 3.700480212436982*^9}, {
   3.700480371829898*^9, 3.70048038977988*^9}, {3.700480456026506*^9, 
   3.700480491715068*^9}, {3.7004805486845837`*^9, 3.700480549008582*^9}, {
   3.700480664466621*^9, 3.700480720420683*^9}, {3.700481337010475*^9, 
   3.700481339349255*^9}, 3.7004879858683243`*^9, {3.700499399299684*^9, 
   3.70049940958946*^9}, {3.7004994566029654`*^9, 3.7004994943584967`*^9}, {
   3.700499537853911*^9, 3.700499581864044*^9}, {3.700499620601129*^9, 
   3.700499633204071*^9}, {3.700500365945609*^9, 3.700500424214325*^9}, {
   3.700500515192569*^9, 3.700500564493429*^9}, {3.700500598189919*^9, 
   3.700500624374425*^9}, {3.7005007519479923`*^9, 3.700500815795212*^9}, {
   3.700501030717408*^9, 3.7005010491459427`*^9}, {3.700501147498949*^9, 
   3.700501150063616*^9}, {3.7005052869707403`*^9, 3.700505315496647*^9}, {
   3.700505366201033*^9, 3.7005053792231483`*^9}, {3.700505773882741*^9, 
   3.7005057807979603`*^9}, {3.700505833914215*^9, 3.7005058361489573`*^9}, {
   3.700505877685948*^9, 3.7005059044987392`*^9}, {3.700505947303727*^9, 
   3.7005059713889112`*^9}, 3.7005061386247807`*^9, {3.7005061837037163`*^9, 
   3.700506194169366*^9}, {3.7005062465689907`*^9, 3.700506285845989*^9}, {
   3.700506388140911*^9, 3.7005064097489567`*^9}, {3.7005065394438143`*^9, 
   3.700506553337372*^9}, {3.7005065868676643`*^9, 3.70050659194707*^9}, {
   3.700506668825436*^9, 3.700506673907991*^9}, {3.700506704998438*^9, 
   3.700506783357108*^9}, {3.700507630403081*^9, 3.7005076444940767`*^9}, {
   3.7005160787281637`*^9, 3.700516179450632*^9}, {3.7005162536485033`*^9, 
   3.7005162671988373`*^9}, {3.700519317978774*^9, 3.700519366356497*^9}, {
   3.7005194028216953`*^9, 3.700519403828404*^9}, {3.70060576745996*^9, 
   3.70060581847192*^9}, {3.7093368173533173`*^9, 3.7093368186660433`*^9}, {
   3.7101059934886103`*^9, 3.710105995210424*^9}, {3.7102405148353157`*^9, 
   3.710240515588624*^9}, {3.710257135319757*^9, 3.710257138653057*^9}, {
   3.710587507930113*^9, 3.710587512031444*^9}, {3.7105877649424953`*^9, 
   3.7105877652431593`*^9}, 3.710588197216445*^9, {3.710589288592297*^9, 
   3.710589295759266*^9}, {3.712738535007062*^9, 3.7127385350204287`*^9}, {
   3.712740223814287*^9, 3.712740223838167*^9}, {3.7220295615236483`*^9, 
   3.722029562436973*^9}, {3.722034219253039*^9, 3.722034252077383*^9}, {
   3.722087940231101*^9, 3.722088005844839*^9}, {3.731539390096672*^9, 
   3.7315393938092546`*^9}, 3.731893137556381*^9, {3.7352236188815813`*^9, 
   3.735223634942692*^9}, {3.735223711833832*^9, 3.735223730570304*^9}, {
   3.7352237620715837`*^9, 3.735223775431983*^9}, 3.7352238425920773`*^9, {
   3.735223951135943*^9, 3.73522395235406*^9}, {3.735224063019718*^9, 
   3.735224066426886*^9}, {3.7352241030023937`*^9, 3.735224156141096*^9}, {
   3.735224664876266*^9, 3.735224735503276*^9}, {3.735224822787269*^9, 
   3.735224823952361*^9}, {3.7352249610951567`*^9, 3.735224988185626*^9}, {
   3.735225022290709*^9, 3.7352250586745863`*^9}, {3.735225198445705*^9, 
   3.7352252096744347`*^9}, {3.73522525741336*^9, 3.735225258777094*^9}, {
   3.7352252934447203`*^9, 3.735225365586637*^9}, {3.735225443467051*^9, 
   3.735225447042448*^9}, {3.735226066123672*^9, 3.735226100474572*^9}, {
   3.735226222505571*^9, 3.735226236679626*^9}, {3.735226352652855*^9, 
   3.73522635843865*^9}, {3.735226395315218*^9, 3.735226435414192*^9}, {
   3.735226465732422*^9, 3.7352264702264843`*^9}, {3.7352304616520576`*^9, 
   3.735230471602627*^9}, {3.735230596225532*^9, 3.735230603859885*^9}, {
   3.7352307252958603`*^9, 3.735230727307143*^9}, {3.735231316246887*^9, 
   3.735231372272636*^9}, {3.735231486289946*^9, 3.735231628592849*^9}, {
   3.735231684890648*^9, 3.735231704154419*^9}, {3.73523190656601*^9, 
   3.735231951566351*^9}, {3.735231994559011*^9, 3.735231998743342*^9}, {
   3.735232033278144*^9, 3.735232034653742*^9}, {3.7352320923918447`*^9, 
   3.735232121717106*^9}, 3.735232169081893*^9, {3.735232341196566*^9, 
   3.7352323705619698`*^9}, {3.735232408233213*^9, 3.735232409201316*^9}, {
   3.735232445223509*^9, 3.735232445905283*^9}, 3.7352325622609177`*^9, 
   3.735232611466007*^9, 3.7352326600610857`*^9, {3.735234072523628*^9, 
   3.7352341090486803`*^9}, {3.735234200555768*^9, 3.735234231992691*^9}, {
   3.735234530013994*^9, 3.7352345320031776`*^9}, {3.73523456742404*^9, 
   3.735234644092083*^9}, {3.735234699809146*^9, 3.73523472246941*^9}, {
   3.7352353103808393`*^9, 3.735235315578307*^9}, {3.7352353994238787`*^9, 
   3.735235481869584*^9}, {3.735235548224306*^9, 3.735235557365044*^9}, {
   3.735235922257666*^9, 3.735235998779353*^9}, {3.735236581776868*^9, 
   3.735236626372979*^9}, 3.735236775749032*^9, {3.735236827187209*^9, 
   3.735236829695763*^9}, {3.7352368970822277`*^9, 3.7352369325372543`*^9}, {
   3.7352369635233994`*^9, 3.735236998283945*^9}, {3.73523704456411*^9, 
   3.735237059849861*^9}, 3.735237292944786*^9, {3.735237405510766*^9, 
   3.735237408813499*^9}, {3.735237459463545*^9, 3.735237516550386*^9}, 
   3.735237634395543*^9, {3.735237679815528*^9, 3.7352376841117496`*^9}, {
   3.735238145326779*^9, 3.735238168250351*^9}, {3.735238225021942*^9, 
   3.735238225529821*^9}, {3.7352382607403507`*^9, 3.735238351244864*^9}, {
   3.735238395658094*^9, 3.7352384078214912`*^9}, {3.735238445826252*^9, 
   3.735238480446452*^9}, {3.73523851478788*^9, 3.7352385185143547`*^9}, {
   3.7352388209663057`*^9, 3.735238825714755*^9}, {3.735238884060905*^9, 
   3.735238951379249*^9}, {3.735239013072414*^9, 3.7352391080203743`*^9}, {
   3.7352391562002897`*^9, 3.735239248145949*^9}, {3.735239305331264*^9, 
   3.7352393337030067`*^9}, {3.735239369002862*^9, 3.735239405745796*^9}, {
   3.735253148953515*^9, 3.735253196536811*^9}, {3.735253263066064*^9, 
   3.7352532665724983`*^9}, {3.7352534326989717`*^9, 3.735253501739789*^9}, {
   3.735253536276533*^9, 3.735253540238658*^9}, {3.7352536836462193`*^9, 
   3.735253727054995*^9}, 3.735254332820922*^9, {3.735254363832509*^9, 
   3.735254366520323*^9}, {3.735254953752369*^9, 3.735254964746745*^9}, {
   3.735255778270913*^9, 3.735255779083488*^9}, {3.7352983228544283`*^9, 
   3.73529833067583*^9}, {3.7352985338451366`*^9, 3.735298536587431*^9}, {
   3.735298582391798*^9, 3.735298595091683*^9}, {3.7352986425288754`*^9, 
   3.735298642901226*^9}, {3.755373590487363*^9, 3.755373593372116*^9}, {
   3.7592177410912867`*^9, 3.759217753416176*^9}, {3.759217940946991*^9, 
   3.759217945759392*^9}, {3.759218015796183*^9, 3.759218016592643*^9}, {
   3.759218237654193*^9, 3.759218238034522*^9}, {3.759218507813245*^9, 
   3.759218674801817*^9}, {3.7592193356055202`*^9, 3.759219345565042*^9}, {
   3.759228579095845*^9, 3.759228579631447*^9}, {3.7592287077168694`*^9, 
   3.759228732544639*^9}, {3.7592287706272497`*^9, 3.75922880325429*^9}, {
   3.759229703692004*^9, 3.7592297307497463`*^9}, 3.759232837637402*^9, {
   3.759233064191592*^9, 3.75923306547432*^9}, {3.759233114579824*^9, 
   3.759233131951342*^9}, {3.7592469633704643`*^9, 3.759246967992753*^9}, {
   3.759247273324669*^9, 3.759247297212412*^9}, 3.7592475324864073`*^9, {
   3.759248667526066*^9, 3.759248754041979*^9}, {3.759248787305072*^9, 
   3.759248803780765*^9}, {3.7592489917932796`*^9, 3.759249008492675*^9}, {
   3.759249148573278*^9, 3.7592491660146*^9}, {3.759249196280652*^9, 
   3.759249233822393*^9}, {3.7592500336183147`*^9, 3.7592500411365833`*^9}, {
   3.759250109995933*^9, 3.759250124081401*^9}, {3.7592502516064863`*^9, 
   3.759250253688921*^9}, {3.75925042291634*^9, 3.759250433260293*^9}, {
   3.7592506440716476`*^9, 3.759250651869771*^9}, {3.759251065955776*^9, 
   3.7592511242052794`*^9}, {3.759251195497511*^9, 3.759251196170073*^9}, {
   3.7592513086365757`*^9, 3.759251325827579*^9}, {3.759251365566555*^9, 
   3.759251376541162*^9}, {3.759251508208103*^9, 3.759251532331058*^9}, {
   3.759251675408547*^9, 3.759251680764234*^9}, {3.759251806396661*^9, 
   3.7592518094284887`*^9}, {3.7592549984934263`*^9, 3.759255018732072*^9}, {
   3.759257057245137*^9, 3.759257058329484*^9}, {3.759257091338319*^9, 
   3.759257102598681*^9}, {3.7592572300338583`*^9, 3.759257237181624*^9}, 
   3.759294824003006*^9, {3.759294863615203*^9, 3.75929488890511*^9}, {
   3.759294952170689*^9, 3.75929507050299*^9}, {3.759296472024598*^9, 
   3.7592964827904587`*^9}, {3.759296579052528*^9, 3.75929662302466*^9}, {
   3.759296657460176*^9, 3.759296700635881*^9}, {3.759296877389697*^9, 
   3.7592969228544083`*^9}, {3.7593073682560587`*^9, 3.759307464809155*^9}, {
   3.759307612597794*^9, 3.7593076146358957`*^9}, {3.759307908023367*^9, 
   3.759307949323143*^9}, {3.759308046361002*^9, 3.759308056520619*^9}, {
   3.759308425596257*^9, 3.7593084831562347`*^9}, {3.7593085636865387`*^9, 
   3.7593085853721933`*^9}, {3.759312071110161*^9, 3.759312122972887*^9}, 
   3.759323016138083*^9, {3.759323051028426*^9, 3.759323055186556*^9}, {
   3.759323142845489*^9, 3.7593232248262587`*^9}, {3.759323408986553*^9, 
   3.759323409292046*^9}, {3.75932345424339*^9, 3.759323496539909*^9}, {
   3.759323540747075*^9, 3.7593235669997807`*^9}, {3.759324272091139*^9, 
   3.7593243109927263`*^9}, {3.7593245135179777`*^9, 
   3.7593245358045683`*^9}, {3.759324569918899*^9, 3.759324579214983*^9}, {
   3.7593249182063227`*^9, 3.759324926166637*^9}, {3.759325007139296*^9, 
   3.7593250090549593`*^9}, {3.7593252397003317`*^9, 3.759325247646821*^9}, {
   3.7593256476071377`*^9, 3.759325683452235*^9}, {3.759325825649138*^9, 
   3.7593258647406054`*^9}, {3.7593258973236017`*^9, 3.759325899263063*^9}, {
   3.75932610701798*^9, 3.759326114219687*^9}, {3.759327636005405*^9, 
   3.759327689458632*^9}, {3.759384462420744*^9, 3.759384513290648*^9}, {
   3.7593847406179657`*^9, 3.759384766221096*^9}, {3.759385024934536*^9, 
   3.7593850551343946`*^9}, {3.759385111807715*^9, 3.759385119279563*^9}, {
   3.759385158460888*^9, 3.7593851808182507`*^9}, {3.7593870849823227`*^9, 
   3.759387093375518*^9}, {3.759387123425446*^9, 3.759387157512713*^9}, {
   3.7593872161195*^9, 3.7593872517815933`*^9}, {3.759388661173729*^9, 
   3.759388675634555*^9}, {3.7593888838564377`*^9, 3.7593888894214363`*^9}, {
   3.759388966510695*^9, 3.759388996943575*^9}, {3.7593892951120663`*^9, 
   3.75938929880744*^9}, {3.7593893452633743`*^9, 3.7593893540280867`*^9}, 
   3.7593894139110813`*^9, {3.759389501132962*^9, 3.759389507070487*^9}, {
   3.759389548760593*^9, 3.759389565352504*^9}, {3.7593896013344593`*^9, 
   3.759389626308899*^9}, {3.759389951630437*^9, 3.759389952824215*^9}, {
   3.759390005429452*^9, 3.759390017612043*^9}, {3.7593909900832167`*^9, 
   3.759391014063958*^9}, {3.759391653138711*^9, 3.759391654590974*^9}, {
   3.759391769089592*^9, 3.7593917782094517`*^9}, {3.75939189426289*^9, 
   3.7593919130704107`*^9}, {3.759391943678071*^9, 3.75939195130972*^9}, {
   3.759392159949892*^9, 3.759392404552251*^9}, {3.759393991648416*^9, 
   3.759394044558777*^9}, 3.759394276950086*^9, {3.759394472495139*^9, 
   3.759394505501532*^9}, {3.759394797269175*^9, 3.759394828471554*^9}, {
   3.7593948601262627`*^9, 3.7593948698281612`*^9}, {3.759395603300131*^9, 
   3.759395612906035*^9}, {3.7593956735362473`*^9, 3.759395762481584*^9}, {
   3.759395867702772*^9, 3.7593958707668333`*^9}, {3.7593959446943007`*^9, 
   3.75939598482971*^9}, {3.7593960419546633`*^9, 3.7593960765035973`*^9}, {
   3.759396198174075*^9, 3.7593961983726673`*^9}, {3.759398357584046*^9, 
   3.759398387107416*^9}, {3.759398989661968*^9, 3.759398993640278*^9}, {
   3.759399033595235*^9, 3.759399095446154*^9}, {3.759400156402536*^9, 
   3.759400228329153*^9}, {3.7594113376067123`*^9, 3.759411338067451*^9}, {
   3.7594117972845993`*^9, 3.759411803291584*^9}, {3.7594124821386423`*^9, 
   3.7594124873110247`*^9}, {3.759412588767086*^9, 3.759412607909379*^9}, {
   3.7594139087623796`*^9, 3.759413909057248*^9}, {3.759421781666049*^9, 
   3.759421844150896*^9}, {3.759424573685688*^9, 3.759424732673991*^9}, {
   3.759424969436839*^9, 3.7594249813681583`*^9}, 3.7594256689505777`*^9, {
   3.7594283036951427`*^9, 3.7594283753038683`*^9}, {3.760251017178981*^9, 
   3.760251079746913*^9}, {3.760551465692081*^9, 3.760551465711451*^9}, {
   3.7612136744281683`*^9, 3.76121368591955*^9}, {3.7618859775963097`*^9, 
   3.761885977937068*^9}, {3.769182368471425*^9, 3.769182368487236*^9}, {
   3.769494553475361*^9, 3.769494564848466*^9}, 3.769760706100006*^9, {
   3.77010526150067*^9, 3.7701052932826843`*^9}, {3.7701053346750183`*^9, 
   3.770105347523457*^9}, {3.770109845454763*^9, 3.770109849711969*^9}, 
   3.770438265311253*^9, {3.770528574453642*^9, 3.770528598532178*^9}, {
   3.77053177480787*^9, 3.770531837689692*^9}, {3.770531880391448*^9, 
   3.77053188315189*^9}, {3.770651940222707*^9, 3.770652035501219*^9}, {
   3.770721455274523*^9, 3.770721455595916*^9}, {3.774608596973238*^9, 
   3.7746086337931004`*^9}, {3.774608699615576*^9, 3.774608700863324*^9}, {
   3.774608955946015*^9, 3.774608972504999*^9}, {3.774609116817567*^9, 
   3.774609117111986*^9}, {3.788941924995736*^9, 3.788941925774335*^9}, {
   3.78894197265285*^9, 3.788941972662053*^9}, {3.788975620363676*^9, 
   3.7889756337134123`*^9}, {3.7941372412106953`*^9, 3.794137241237678*^9}, {
   3.794697462490899*^9, 3.7946974653623323`*^9}, {3.794697560236413*^9, 
   3.794697633348385*^9}, {3.794697988381641*^9, 3.794698005815693*^9}, {
   3.794698039672494*^9, 3.794698042208487*^9}, {3.794698214072547*^9, 
   3.794698228324641*^9}, {3.794698389116588*^9, 3.794698389445361*^9}, {
   3.794698574751924*^9, 3.79469862837293*^9}, {3.7946992094141417`*^9, 
   3.794699217532853*^9}, {3.7946992743739033`*^9, 3.794699290085902*^9}, {
   3.794699337702981*^9, 3.794699389878668*^9}, {3.794699438511239*^9, 
   3.794699492679174*^9}, {3.794699528904427*^9, 3.79469954968862*^9}, {
   3.794699603318625*^9, 3.794699752875393*^9}, {3.794699979679019*^9, 
   3.7947000028452387`*^9}, {3.7947001202762938`*^9, 
   3.7947001630934467`*^9}, {3.794701700534381*^9, 3.794701818912354*^9}, {
   3.794702047848909*^9, 3.7947020637770576`*^9}, {3.794702997519466*^9, 
   3.794702998012171*^9}, {3.815510552354104*^9, 3.815510584565241*^9}, {
   3.8155108933738947`*^9, 
   3.815510899268689*^9}},ExpressionUUID->"caac3509-e984-4019-99d6-\
456845cefb34"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",ExpressionUUID->"d553aa7d-b596-4ae7-bfe0-8de86b74e0e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}], "=", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"Method", "\[Rule]", "\"\<FindRoot\>\""}], ",", 
     RowBox[{"FitnessGradient", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"EvoEq", "\[Rule]", "False"}], ",", "\n", "\t", 
     RowBox[{"RuleListDistanceOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", "\t", 
     RowBox[{"BoundaryDetection", "\[Rule]", "False"}], ",", 
     RowBox[{"TraitShiftRate", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", "\t", 
     RowBox[{"FindRootOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"EcoSimOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"EcoEvoSimOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"NDInvOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", "\t", 
     RowBox[{"Chop", "\[Rule]", "True"}], ",", 
     RowBox[{"MaxIterations", "\[Rule]", "100"}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "4"}], ",", 
     RowBox[{"PrecisionGoal", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"4", ",", "\[Infinity]"}], "}"}]}], ",", "\n", "\t", 
     RowBox[{"PrintTrace", "\[Rule]", "False"}], ",", 
     RowBox[{"Monitor", "\[Rule]", "False"}], ",", "\n", "\t", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.688571716541911*^9, 3.6885717166960382`*^9}, 
   3.696845912680583*^9, {3.700084443844001*^9, 3.700084444353344*^9}, {
   3.70017334546529*^9, 3.700173346931806*^9}, {3.700500440545138*^9, 
   3.7005004757573757`*^9}, {3.7005006294882812`*^9, 3.700500633408839*^9}, {
   3.700501019420169*^9, 3.700501020930078*^9}, {3.7305917476561537`*^9, 
   3.7305917675339003`*^9}, {3.759247310641811*^9, 3.759247312719409*^9}, {
   3.759324977437945*^9, 3.759324987967677*^9}, {3.759325693801169*^9, 
   3.759325702291596*^9}, {3.7593276172540083`*^9, 3.759327619110215*^9}, {
   3.759329306615399*^9, 3.759329311749673*^9}, {3.7593924140603647`*^9, 
   3.759392429136025*^9}, {3.759395558033033*^9, 3.7593955837312403`*^9}, {
   3.759395839053213*^9, 3.759395840572667*^9}, {3.7593961471961193`*^9, 
   3.759396174001652*^9}, 3.759400230202376*^9, {3.759421877454664*^9, 
   3.759421887143705*^9}, {3.759422802276264*^9, 3.7594228068697643`*^9}, {
   3.759422865577162*^9, 3.7594228663007603`*^9}, {3.794697549580881*^9, 
   3.794697555228796*^9}, {3.79469796933836*^9, 3.794697982513403*^9}, 
   3.794698065572021*^9, {3.7946982037407722`*^9, 3.794698211155986*^9}, {
   3.794698559039798*^9, 3.794698599720168*^9}, {3.79470019004097*^9, 
   3.794700192369173*^9}, {3.7947002388098516`*^9, 
   3.794700249712758*^9}},ExpressionUUID->"0661ac18-2c3c-4079-8420-\
7d3678d09b41"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",
 CellChangeTimes->{{3.711392910593471*^9, 
  3.7113929144125013`*^9}},ExpressionUUID->"889676e9-4bf5-4423-9f50-\
aa7a1df8f7d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"split", " ", "traitsandvariables"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"FindEcoEvoCycle", "[", 
      RowBox[{
       RowBox[{"traitsandvariables_", "?", "AttributesAndVariablesQ"}], ",", 
       RowBox[{"Gs_List", ":", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
     RowBox[{"FindEcoEvoCycle", "[", 
      RowBox[{
       RowBox[{"ExtractTraits", "[", "traitsandvariables", "]"}], ",", 
       RowBox[{"ExtractVariables", "[", "traitsandvariables", "]"}], ",", 
       "Gs", ",", "opts"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"FindEcoCycleEvoEq", "[", "stuff___", "]"}], ":=", 
     RowBox[{"FindEcoEvoCycle", "[", 
      RowBox[{"stuff", ",", 
       RowBox[{"EvoEq", "\[Rule]", "True"}]}], "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.7113929204987917`*^9, 3.711392970316506*^9}, {
   3.7113948359592237`*^9, 3.711394848887685*^9}, {3.711394887031405*^9, 
   3.711394889332657*^9}, {3.712738535029456*^9, 3.712738535032954*^9}, {
   3.712740223844207*^9, 3.7127402238516693`*^9}, {3.759400233092518*^9, 
   3.759400234299798*^9}, {3.759429138517144*^9, 3.759429168969955*^9}, {
   3.7695014511158447`*^9, 3.769501454865204*^9}, 3.7981288000775547`*^9, 
   3.8073693429924307`*^9},ExpressionUUID->"93516ea1-90b1-4c80-a544-\
866458c861f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Messages", "Subsubsection",
 CellChangeTimes->{{3.7695014395355453`*^9, 
  3.7695014405659447`*^9}},ExpressionUUID->"edcb1090-a3e4-4e43-9e10-\
942f3bd38c21"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoCycleEvoEq", "::", "cvmit"}], "=", "\n", 
    "\"\<Failed to converge to the requested accuracy within \[NoBreak]`1`\
\[NoBreak] iterations.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FindEcoEvoCycle", "::", "susmtd"}], "=", "\n", 
   "\"\<Warning: FitnessGradient\[Rule]\\\"EcoEvoSim\\\" is likely to be \
inappropriate when there are multiple components. Try EvoEq\[Rule]True and \
FitnessGradient\[Rule]\\\"EcoEvoSim\\\".\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.769501441031636*^9, 3.769501444541383*^9}, {
  3.76950238289133*^9, 
  3.76950238310297*^9}},ExpressionUUID->"99f887a3-1a0f-4c83-b457-\
9f94615b64e7"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["*EvoEq: SolveEvoEq / NSolveEvoEq / FindEvoEq", "Subsection",
 CellChangeTimes->{{3.708579622828477*^9, 3.708579635334839*^9}, {
  3.708579831057356*^9, 
  3.7085798333017693`*^9}},ExpressionUUID->"40dfd640-0212-4454-9cbd-\
b77220008346"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"5dbd2d8c-2d59-4f60-be34-\
60520a356845"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EvoEq", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<EvoEq contains SolveEvoEq, NSolveEvoEq, and FindEvoEq. Use them \
instead.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SolveEvoEq", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<SolveEvoEq[\!\(\*StyleBox[\"sol\", \"TI\"]\)] solves for \
evolutionary equilibria using ecological equilibrium \!\(\*StyleBox[\"sol\", \
\"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NSolveEvoEq", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<NSolveEvoEq[\!\(\*StyleBox[\"sol\", \"TI\"]\)] numerically solves \
for evolutionary equilibria using ecological equilibrium \!\(\*StyleBox[\"sol\
\", \"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FindEvoEq", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<FindEvoEq[\!\(\*StyleBox[\"sol\", \"TI\"]\)] finds an evolutionary \
equilibrium using ecological equilibrium \!\(\*StyleBox[\"sol\", \"TI\"]\).\n\
FindEvoEq[\!\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"sol\", \
\"TI\"]\)] finds an evolutionary equilibrium using ecological equilibrium \
\!\(\*StyleBox[\"sol\", \"TI\"]\), with initial guess \!\(\*StyleBox[\"traits\
\", \"TI\"]\).\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.769490585862607*^9, 
  3.769490586967708*^9}},ExpressionUUID->"18fb80cb-9119-45b9-a5c4-\
658e484af97b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"d97232ec-3798-4e21-a3d0-\
4ab6631c64e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EvoEq", "[", 
    RowBox[{
     RowBox[{"traits", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "AttributesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"sol", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Gs_List", ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], " ", ":=", "\n", " ", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<EvoEq\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "method", ",", "fixed", ",", "delaydinv", ",", 
       "solveopts", ",", "nsolveopts", ",", "findrootopts", ",", 
       "findinstanceopts", ",", "boundarydetection", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "fixedvars", 
       ",", "fixedtraits", ",", "fixedvariables", ",", "tounks", ",", 
       "fromunks", ",", "evoeqns", ",", "eqns", ",", "unks", ",", "unksics", 
       ",", "newunk", ",", "res"}], "}"}], ",", "\n", "   ", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", " ", 
              RowBox[{"Options", "[", "EvoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", " ", 
              RowBox[{"Options", "[", "EvoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"method", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Method", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"fixed", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Fixed", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"fixedvars", "=", 
         RowBox[{"fixed", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        RowBox[{"fixedtraits", "=", 
         RowBox[{"ExtractTraits", "[", "fixed", "]"}]}], ";", "\n", 
        RowBox[{"fixedvariables", "=", 
         RowBox[{"ExtractVariables", "[", "fixed", "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: fixedvars=\>\"", ",", "fixedvars"}], 
           "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"method", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Method", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"delaydinv", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"DelayDInv", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"solveopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"SolveOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"$VersionNumber", "\[GreaterEqual]", "12.2"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"solveopts", ",", 
            RowBox[{"Assumptions", "\[Rule]", 
             RowBox[{"{", "}"}]}]}], "]"}]}], "]"}], ";", "\n", 
        RowBox[{"nsolveopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"NSolveOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"findrootopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"FindRootOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"findinstanceopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"FindInstanceOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"boundarydetection", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"BoundaryDetection", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"Set\[ScriptCapitalN]", "[", 
         RowBox[{"Join", "[", 
          RowBox[{"sol", ",", "fixedvariables"}], "]"}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"evoeqns", "=", 
         RowBox[{"EvoEqns", "[", 
          RowBox[{"sol", ",", "Gs", ",", "opts"}], "]"}]}], ";", "\n", 
        RowBox[{"eqns", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"evoeqns", "/.", "Eq"}], "/.", "RemoveTraitts"}], "/.", 
          "RemoveVariablets"}]}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"set", " ", "up", " ", "unksics"}], " ", "*)"}], "\n", 
        RowBox[{"unks", "=", 
         RowBox[{
          RowBox[{"evoeqns", "/.", "LHS"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"var_", "'"}], "[", "t", "]"}], "\[Rule]", "var"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"var_", "[", 
               RowBox[{"t", "+", "1"}], "]"}], "/", 
              RowBox[{"var_", "[", "t", "]"}]}], "\[Rule]", "var"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"var_", "[", 
               RowBox[{"t", "+", "1"}], "]"}], "-", 
              RowBox[{"var_", "[", "t", "]"}]}], "\[Rule]", "var"}], ",", 
            RowBox[{
             RowBox[{"var_", "[", 
              RowBox[{"t", "+", "1"}], "]"}], "\[Rule]", "var"}]}], "}"}]}]}],
         ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"method", "\[Equal]", "\"\<FindRoot\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"unksics", "=", 
            RowBox[{"{", "}"}]}], ";", "\n", "\t", 
           RowBox[{"Do", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"newunk", "=", 
               RowBox[{"{", 
                RowBox[{"var", ",", 
                 RowBox[{"var", "/.", "traits"}]}], "}"}]}], ";", "\n", 
              "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{"boundarydetection", ",", "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"var", "/.", "traits"}], ")"}], "<", 
                    RowBox[{"Min", "[", 
                    RowBox[{"range", "[", "var", "]"}], "]"}]}], ")"}], "||", 
                    
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"var", "/.", "traits"}], ")"}], ">", 
                    RowBox[{"Max", "[", 
                    RowBox[{"range", "[", "var", "]"}], "]"}]}], ")"}]}], ",",
                    "\n", "\t\t\t\t", 
                   RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    RowBox[{"FindEvoEq", "::", "streg"}], ",", "var", ",", 
                    RowBox[{"var", "/.", "traits"}], ",", 
                    RowBox[{"NumberForm", "@", 
                    RowBox[{"Min", "[", 
                    RowBox[{"range", "[", "var", "]"}], "]"}]}], ",", 
                    RowBox[{"NumberForm", "@", 
                    RowBox[{"Max", "[", 
                    RowBox[{"range", "[", "var", "]"}], "]"}]}]}], "]"}], ";",
                     "\n", "\t\t\t\t", 
                    RowBox[{"Abort", "[", "]"}], ";"}]}], "\n", "\t\t\t", 
                  "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"newunk", "=", 
                  RowBox[{"Join", "[", 
                   RowBox[{"newunk", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"range", "[", "var", "]"}], "]"}], ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{"range", "[", "var", "]"}], "]"}]}], "}"}]}], 
                   "]"}]}]}]}], "\n", "\t\t", "]"}], ";", "\n", "\t\t", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"unksics", ",", "newunk"}], "]"}], ";"}], "\n", "\t", 
             ",", 
             RowBox[{"{", 
              RowBox[{"var", ",", "unks"}], "}"}]}], "]"}]}]}], "\n", "]"}], 
        ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"solve", " ", "it"}], " ", "*)"}], "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"method", "\[Equal]", "\"\<Solve\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"eqns", "=", "eqns"}], ",", 
                 RowBox[{"unks", "=", "unks"}], ",", 
                 RowBox[{"op", "=", 
                  RowBox[{"Sequence", "@@", "solveopts"}]}]}], "}"}], ",", 
               "\n", "\t\t", 
               RowBox[{"PrintCall", "[", 
                RowBox[{"Global`res", "=", 
                 RowBox[{"Solve", "[", 
                  RowBox[{"eqns", ",", "unks", ",", "op"}], "]"}]}], "]"}]}], 
              "]"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{"res", "=", 
            RowBox[{"Solve", "[", 
             RowBox[{"eqns", ",", "unks", ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "solveopts"}], "]"}]}], "]"}]}]}], 
          ",", "\n", "\t", 
          RowBox[{"method", "\[Equal]", "\"\<NSolve\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"eqns", "=", "eqns"}], ",", 
                 RowBox[{"unks", "=", "unks"}], ",", 
                 RowBox[{"op", "=", 
                  RowBox[{"Sequence", "@@", "nsolveopts"}]}]}], "}"}], ",", 
               "\n", "\t\t", 
               RowBox[{"PrintCall", "[", 
                RowBox[{"Global`res", "=", 
                 RowBox[{"NSolve", "[", 
                  RowBox[{"eqns", ",", "unks", ",", "op"}], "]"}]}], "]"}]}], 
              "]"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{"res", "=", 
            RowBox[{"NSolve", "[", 
             RowBox[{"eqns", ",", "unks", ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "nsolveopts"}], "]"}]}], "]"}]}]}], 
          ",", "\n", "\t", 
          RowBox[{"method", "\[Equal]", "\"\<FindRoot\>\""}], ",", "\n", "\t", 
          RowBox[{"If", "[", 
           RowBox[{"delaydinv", ",", "\n", "\t\t", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{"verbose", ",", "\n", "\t\t\t", 
               RowBox[{"With", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"eqns", "=", "eqns"}], ",", 
                   RowBox[{"unksics", "=", "unksics"}], ",", 
                   RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "findrootopts"}]}]}], "}"}], 
                 ",", "\n", "\t\t\t", 
                 RowBox[{"PrintCall", "[", 
                  RowBox[{"Global`res", "=", 
                   RowBox[{
                    RowBox[{"FindRoot", "[", 
                    RowBox[{
                    RowBox[{"eqns", "/.", "ToUnkRules"}], ",", 
                    RowBox[{"unksics", "/.", "ToUnks"}], ",", "op"}], "]"}], "/.",
                     "FromUnks"}]}], "]"}]}], "]"}]}], "]"}], ";", "\n", 
             "\t\t", 
             RowBox[{"res", "=", 
              RowBox[{
               RowBox[{"FindRoot", "[", 
                RowBox[{
                 RowBox[{"eqns", "/.", "ToUnkRules"}], ",", 
                 RowBox[{"unksics", "/.", "ToUnks"}], ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"Sequence", "@@", "findrootopts"}], "]"}]}], "]"}], 
               "/.", "FromUnks"}]}]}], "\n", "\t", ",", "\n", "\t\t", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{"verbose", ",", "\n", "\t\t\t", 
               RowBox[{"With", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"eqns", "=", "eqns"}], ",", 
                   RowBox[{"unksics", "=", "unksics"}], ",", 
                   RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "findrootopts"}]}]}], "}"}], 
                 ",", "\n", "\t\t\t", 
                 RowBox[{"PrintCall", "[", 
                  RowBox[{"Global`res", "=", 
                   RowBox[{"FindRoot", "[", 
                    RowBox[{"eqns", ",", "unksics", ",", "op"}], "]"}]}], 
                  "]"}]}], "]"}]}], "]"}], ";", "\n", "\t\t", 
             RowBox[{"res", "=", 
              RowBox[{"FindRoot", "[", 
               RowBox[{"eqns", ",", "unksics", ",", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"Sequence", "@@", "findrootopts"}], "]"}]}], 
               "]"}]}]}]}], "\n", "\t", "]"}], ",", "\n", "\t", 
          RowBox[{"method", "\[Equal]", "\"\<FindInstance\>\""}], ",", "\n", 
          "\t", 
          RowBox[{"If", "[", 
           RowBox[{"delaydinv", ",", "\n", "\t\t", 
            RowBox[{
             RowBox[{"Message", "[", 
              RowBox[{"FindEvoEq", "::", "needic"}], "]"}], ";", 
             RowBox[{"Return", "[", "$Failed", "]"}]}], "\n", "\t", ",", "\n",
             "\t\t", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{"verbose", ",", "\n", "\t\t\t", 
               RowBox[{"With", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"eqns", "=", "eqns"}], ",", 
                   RowBox[{"unks", "=", "unks"}], ",", 
                   RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@", "findinstanceopts"}]}]}], "}"}], 
                 ",", "\n", "\t\t\t", 
                 RowBox[{"PrintCall", "[", 
                  RowBox[{"Global`res", "=", 
                   RowBox[{
                    RowBox[{"FindInstance", "[", 
                    RowBox[{"eqns", ",", "unks", ",", "op"}], "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                  "]"}]}], "]"}]}], "]"}], ";", "\n", "\t\t", 
             RowBox[{"res", "=", 
              RowBox[{
               RowBox[{"FindInstance", "[", 
                RowBox[{"eqns", ",", "unks", ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"Sequence", "@@", "findinstanceopts"}], "]"}]}], 
                "]"}], "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}]}]}]}], "\n", "\t", "]"}], ",", "\n", 
          "\t", "Else", ",", " ", 
          RowBox[{"(*", " ", "else", " ", "*)"}], "\n", "\t", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EvoEq", "::", "badmtd"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "\n", "]"}], ";", 
        "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Solve", ",", "NSolve"}], "}"}], ",", 
            RowBox[{"Head", "[", "res", "]"}]}], "]"}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EvoEq", "::", "nosol"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}], ",", "\n", "\t", 
          RowBox[{"Return", "[", 
           RowBox[{"SortRuleList", "[", 
            RowBox[{
             RowBox[{"EqSort", "[", 
              RowBox[{"Chop", "[", "res", "]"}], "]"}], ",", "AllTraits"}], 
            "]"}], "]"}]}], "\n", "]"}], ";"}]}], "\n", "\n", "]"}]}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.688409487229787*^9, 3.688410346995085*^9, {3.6885717170330667`*^9, 
   3.688571717543687*^9}, {3.688571775992733*^9, 3.688571776526206*^9}, {
   3.708580358524328*^9, 3.708580367133918*^9}, {3.7085805480249043`*^9, 
   3.708580552957263*^9}, {3.7085806237121067`*^9, 3.708580626686872*^9}, {
   3.7085806780007763`*^9, 3.708580685238158*^9}, {3.7085807226718073`*^9, 
   3.708580746873554*^9}, {3.708580812359832*^9, 3.708580841174244*^9}, {
   3.708580891500785*^9, 3.7085809064428596`*^9}, {3.7085810138866577`*^9, 
   3.70858101422005*^9}, {3.708581073368642*^9, 3.7085811040418367`*^9}, 
   3.7085961658744917`*^9, {3.708597278922868*^9, 3.7085972893497257`*^9}, {
   3.7085974470844193`*^9, 3.7085974974750767`*^9}, {3.708597566711635*^9, 
   3.7085975691400623`*^9}, 3.70859847287843*^9, {3.7086008014413977`*^9, 
   3.70860080362284*^9}, {3.708600837011648*^9, 3.708600839412184*^9}, {
   3.708601266341401*^9, 3.708601269661209*^9}, 3.70860129992697*^9, {
   3.708601634890072*^9, 3.70860169233783*^9}, 3.708601823113695*^9, {
   3.709032277347278*^9, 3.709032330403159*^9}, {3.709032569839916*^9, 
   3.709032621848825*^9}, {3.709033236257003*^9, 3.709033236416822*^9}, {
   3.709111148485799*^9, 3.709111154948862*^9}, {3.70933682108967*^9, 
   3.7093368240934772`*^9}, {3.710105995940238*^9, 3.710105996866913*^9}, {
   3.7127385350462303`*^9, 3.712738535054513*^9}, {3.712740223862005*^9, 
   3.712740223881629*^9}, {3.722033875063723*^9, 3.722033876233472*^9}, {
   3.722034258139152*^9, 3.7220342674868317`*^9}, {3.7220880237571917`*^9, 
   3.722088034520193*^9}, {3.731104242637883*^9, 3.731104278635716*^9}, {
   3.731104997781638*^9, 3.7311050263398447`*^9}, {3.731105876328713*^9, 
   3.731105894099358*^9}, {3.731105938905416*^9, 3.7311059507337418`*^9}, {
   3.731108033278398*^9, 3.731108067757883*^9}, {3.73110814743054*^9, 
   3.7311081521616497`*^9}, {3.7311083849031143`*^9, 3.731108393536907*^9}, {
   3.7311085535965652`*^9, 3.731108606506817*^9}, {3.731108730301261*^9, 
   3.73110873176026*^9}, {3.731108836401286*^9, 3.731108836931473*^9}, 
   3.731108889598999*^9, {3.7311089328030252`*^9, 3.73110895392705*^9}, {
   3.731109330453732*^9, 3.7311093334391327`*^9}, {3.7311093876564302`*^9, 
   3.731109452845138*^9}, {3.731144600632256*^9, 3.731144603028613*^9}, {
   3.73114501783032*^9, 3.731145048660369*^9}, {3.731145080016384*^9, 
   3.7311450831048927`*^9}, {3.731145213309173*^9, 3.731145222493976*^9}, {
   3.731145276224111*^9, 3.73114528092452*^9}, {3.731231960738332*^9, 
   3.7312319650589457`*^9}, {3.731232409757909*^9, 3.731232414896275*^9}, {
   3.7312327649049053`*^9, 3.731232810799704*^9}, {3.7312332089023733`*^9, 
   3.731233223293242*^9}, {3.731233287350834*^9, 3.7312332926707697`*^9}, {
   3.731233329714402*^9, 3.731233340465416*^9}, {3.731233414893477*^9, 
   3.731233458364264*^9}, {3.731233514817432*^9, 3.731233514973345*^9}, {
   3.7312335639590197`*^9, 3.731233593700034*^9}, {3.731233891442408*^9, 
   3.731233900742066*^9}, {3.731234010457054*^9, 3.7312340124423933`*^9}, {
   3.731249212385839*^9, 3.731249237357728*^9}, {3.7312492800564404`*^9, 
   3.7312492941133204`*^9}, {3.731249339535811*^9, 3.731249365257427*^9}, {
   3.731251393536757*^9, 3.731251456459611*^9}, {3.731253719607267*^9, 
   3.731253721022493*^9}, {3.73125375298354*^9, 3.731253754446919*^9}, {
   3.7312538290833073`*^9, 3.731253858968158*^9}, {3.731254100893989*^9, 
   3.731254105593131*^9}, {3.731254275766021*^9, 3.731254316403315*^9}, 
   3.731254508019658*^9, {3.731254564464875*^9, 3.7312545655985937`*^9}, {
   3.7312549503901787`*^9, 3.731254995337842*^9}, {3.731255056378912*^9, 
   3.7312550890162373`*^9}, {3.73125606462327*^9, 3.731256078094046*^9}, {
   3.7312561377447968`*^9, 3.731256146461253*^9}, {3.731256445277829*^9, 
   3.731256453281808*^9}, {3.731257298224099*^9, 3.731257309872786*^9}, {
   3.731257381953423*^9, 3.7312574078388577`*^9}, {3.7312574385592833`*^9, 
   3.731257446831624*^9}, {3.731257653208837*^9, 3.731257671759345*^9}, 
   3.731257713869981*^9, {3.7312630604182034`*^9, 3.731263065150948*^9}, {
   3.731266600116169*^9, 3.7312666462739267`*^9}, {3.731266679355897*^9, 
   3.731266680348941*^9}, {3.731267651339802*^9, 3.731267657364622*^9}, {
   3.7312679781321507`*^9, 3.731268105278483*^9}, {3.731268288730389*^9, 
   3.731268461590226*^9}, {3.731272895231608*^9, 3.731272899930691*^9}, {
   3.73127296391442*^9, 3.731273007394515*^9}, {3.731273046390067*^9, 
   3.7312731187035503`*^9}, {3.73127317548923*^9, 3.731273187167938*^9}, {
   3.7312741636696253`*^9, 3.731274164109251*^9}, 3.7312744797645807`*^9, {
   3.7312794276717577`*^9, 3.731279538417981*^9}, {3.731279621426643*^9, 
   3.731279653438983*^9}, {3.731280286581835*^9, 3.731280291686035*^9}, {
   3.731280393880105*^9, 3.731280410573455*^9}, {3.7312805048047247`*^9, 
   3.7312805388927727`*^9}, {3.731280600180799*^9, 3.731280615960024*^9}, {
   3.731280714400795*^9, 3.731280732421489*^9}, {3.731280775846353*^9, 
   3.731280829597797*^9}, {3.731280885205934*^9, 3.731280907399735*^9}, 
   3.731280946540551*^9, {3.731281567826366*^9, 3.731281631156535*^9}, {
   3.731281766701133*^9, 3.73128176974076*^9}, {3.731281840776827*^9, 
   3.731281867616517*^9}, {3.731281924430279*^9, 3.731281981616087*^9}, {
   3.731282058372973*^9, 3.7312820731719227`*^9}, 3.731282127899729*^9, {
   3.7312821657357597`*^9, 3.731282199733157*^9}, {3.731282325140951*^9, 
   3.731282329520623*^9}, {3.731282531004629*^9, 3.73128253714888*^9}, {
   3.73128265219977*^9, 3.731282694634664*^9}, {3.731282757755281*^9, 
   3.73128286091042*^9}, {3.731283302413376*^9, 3.731283377599361*^9}, {
   3.731284106308639*^9, 3.73128413331852*^9}, {3.731284178545678*^9, 
   3.7312841891668463`*^9}, 3.731284345004175*^9, {3.731284876614265*^9, 
   3.7312849375262947`*^9}, {3.7314229872077713`*^9, 3.731422989210918*^9}, {
   3.731423022526702*^9, 3.7314230243049583`*^9}, {3.7314230727673197`*^9, 
   3.7314231396940203`*^9}, {3.7314231718643847`*^9, 
   3.7314231997101383`*^9}, {3.731423245448696*^9, 3.7314232596523867`*^9}, {
   3.73142458505212*^9, 3.7314245863224173`*^9}, {3.7314246915341682`*^9, 
   3.731424692922903*^9}, {3.731424762855925*^9, 3.731424897585847*^9}, {
   3.731425044363583*^9, 3.73142511736366*^9}, {3.7314252957475233`*^9, 
   3.731425308297345*^9}, {3.7314253901671057`*^9, 3.73142539474082*^9}, {
   3.7314254434704447`*^9, 3.731425445939843*^9}, 3.7314254798405733`*^9, {
   3.731425689136718*^9, 3.7314256982055273`*^9}, {3.7314257558883333`*^9, 
   3.73142576286087*^9}, {3.731426888927384*^9, 3.73142689723682*^9}, {
   3.731450833971335*^9, 3.7314508596380873`*^9}, {3.7314508970485907`*^9, 
   3.7314508974541407`*^9}, {3.7315371159072733`*^9, 
   3.7315371594483337`*^9}, {3.7315372093818827`*^9, 3.731537260695656*^9}, {
   3.731537295857874*^9, 3.731537297923717*^9}, {3.731538698320225*^9, 
   3.731538701586135*^9}, {3.7315394650747538`*^9, 3.73153946806116*^9}, {
   3.731628639090846*^9, 3.7316287378012333`*^9}, {3.7316287974162083`*^9, 
   3.731628813596323*^9}, {3.731628878118383*^9, 3.731628946553934*^9}, {
   3.731628981708934*^9, 3.731628993515253*^9}, 3.731629448335478*^9, {
   3.7316295546722107`*^9, 3.731629680971987*^9}, {3.731629884305613*^9, 
   3.7316299067377167`*^9}, {3.731629942228643*^9, 3.731629961840302*^9}, {
   3.73163012105191*^9, 3.7316301323572273`*^9}, {3.731630197546854*^9, 
   3.7316302473787613`*^9}, {3.731631111581359*^9, 3.731631186197981*^9}, {
   3.7316312783359737`*^9, 3.731631283989497*^9}, 3.731631325447534*^9, {
   3.7316315566866503`*^9, 3.7316315704384813`*^9}, {3.731631875935011*^9, 
   3.7316318819599953`*^9}, {3.7316322253460207`*^9, 
   3.7316322295719852`*^9}, {3.7316326810817423`*^9, 3.731632690339054*^9}, {
   3.731633340442411*^9, 3.731633348246553*^9}, {3.7316334100932293`*^9, 
   3.731633478815362*^9}, {3.7316731998244123`*^9, 3.731673207368875*^9}, {
   3.731673245508831*^9, 3.7316732459382257`*^9}, {3.731673313376671*^9, 
   3.7316733966919928`*^9}, {3.731673841011094*^9, 3.731673899994464*^9}, {
   3.7316739303713923`*^9, 3.731674020737067*^9}, {3.731674076374237*^9, 
   3.731674116927333*^9}, {3.73167446741199*^9, 3.731674483021229*^9}, {
   3.731674671274207*^9, 3.731674686053875*^9}, {3.731674817460943*^9, 
   3.731674824090164*^9}, {3.731674855619108*^9, 3.7316748754962473`*^9}, {
   3.731675052751121*^9, 3.7316750871684504`*^9}, {3.7316755793994226`*^9, 
   3.73167558767528*^9}, {3.7316756908917513`*^9, 3.731675691882739*^9}, {
   3.731805303531169*^9, 3.731805304114072*^9}, 3.731979039384169*^9, {
   3.7322251214319*^9, 3.732225124344277*^9}, {3.732467676763352*^9, 
   3.7324676906438637`*^9}, 3.732467943330927*^9, {3.732468239312109*^9, 
   3.732468245541072*^9}, {3.7324692337074823`*^9, 3.73246932004558*^9}, {
   3.732470085622654*^9, 3.732470102820382*^9}, 3.732470950007395*^9, {
   3.73317570956045*^9, 3.733175798569789*^9}, {3.735226645210906*^9, 
   3.7352266574768267`*^9}, {3.735226689380849*^9, 3.735226709532523*^9}, {
   3.735226880847226*^9, 3.7352268952941427`*^9}, {3.755373595257044*^9, 
   3.755373600807515*^9}, {3.758523859056376*^9, 3.758523887672247*^9}, {
   3.75868990946905*^9, 3.7586899270281363`*^9}, {3.758693521905422*^9, 
   3.758693604294526*^9}, {3.758707464500107*^9, 3.7587074649633923`*^9}, {
   3.7587075191537943`*^9, 3.75870754270959*^9}, {3.758707769046726*^9, 
   3.758707773469331*^9}, {3.758707803730268*^9, 3.7587078262552156`*^9}, {
   3.758708452143674*^9, 3.758708498961294*^9}, {3.758708604038638*^9, 
   3.7587087038052187`*^9}, {3.7587088958895073`*^9, 3.758708903185689*^9}, {
   3.758708967379262*^9, 3.758709066546454*^9}, {3.7587091722382727`*^9, 
   3.758709220032202*^9}, {3.758713085928673*^9, 3.758713104846285*^9}, 
   3.75871314173385*^9, {3.758713677573009*^9, 3.758713687657476*^9}, {
   3.758713991692647*^9, 3.7587139920838013`*^9}, {3.758714094860787*^9, 
   3.7587140970520487`*^9}, {3.758716029225338*^9, 3.758716041814361*^9}, {
   3.758716115585401*^9, 3.758716132004547*^9}, {3.758716218676671*^9, 
   3.758716225339161*^9}, {3.7587168004909563`*^9, 3.758716922601359*^9}, {
   3.758717027935792*^9, 3.758717029152979*^9}, {3.758717120383669*^9, 
   3.758717250194357*^9}, {3.758718661791471*^9, 3.758718678416768*^9}, {
   3.758719035219838*^9, 3.758719066951592*^9}, {3.7587191550661077`*^9, 
   3.7587191620482807`*^9}, {3.761217554184865*^9, 3.76121757008366*^9}, 
   3.761217608031665*^9, 3.761217793070181*^9, 3.7613779280113783`*^9, 
   3.76918236849461*^9, 3.769760706122819*^9, 3.770438265321216*^9, {
   3.770721455738872*^9, 3.770721455957752*^9}, {3.794137241246085*^9, 
   3.794137241259548*^9}, 3.798128132844166*^9, 3.80736934300404*^9, {
   3.814402611954583*^9, 3.814402660481776*^9}, {3.8144027727126627`*^9, 
   3.814402773537068*^9}, {3.829316163625751*^9, 
   3.829316163913445*^9}},ExpressionUUID->"6d27d783-39dc-4c80-80d2-\
54518a3ed583"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",
 CellChangeTimes->{{3.7085811611223593`*^9, 
  3.708581162674871*^9}},ExpressionUUID->"3eb13cb0-62d6-48c0-92e6-\
9eab4b04ea28"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SolveEvoEq", "[", "args___", "]"}], ":=", 
   RowBox[{"EvoEq", "[", 
    RowBox[{"args", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Solve\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NSolveEvoEq", "[", "args___", "]"}], ":=", 
   RowBox[{"EvoEq", "[", 
    RowBox[{"args", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NSolve\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindEvoEq", "[", 
    RowBox[{
     RowBox[{"sol", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Gs", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "GsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"EvoEq", "[", 
    RowBox[{"sol", ",", "Gs", ",", "opts", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<FindInstance\>\""}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FindEvoEq", "[", "args___", "]"}], ":=", 
   RowBox[{"EvoEq", "[", 
    RowBox[{"args", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<FindRoot\>\""}]}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.6954002528825893`*^9, 3.6954002987471733`*^9}, {
  3.708581196290766*^9, 3.708581213389889*^9}, {3.733175869485119*^9, 
  3.7331759283558598`*^9}, {3.758713224538867*^9, 3.7587132291665993`*^9}, {
  3.7587133587261267`*^9, 3.758713362802606*^9}, {3.758714111808833*^9, 
  3.758714113127393*^9}},ExpressionUUID->"823ffeb0-80f4-493d-8d16-\
bb933eb0f127"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.70858110896756*^9, 
  3.708581109870212*^9}},ExpressionUUID->"265d7a1b-9b03-4e3a-b339-\
1c5179e7182d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "EvoEq", "]"}], "=", 
   RowBox[{"{", "\n", 
    RowBox[{
     RowBox[{"Method", "\[Rule]", "\"\<None\>\""}], ",", "\n", 
     RowBox[{"DelayDInv", "\[Rule]", "False"}], ",", 
     RowBox[{"DInvOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"SolveOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"NSolveOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"FindRootOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"FindInstanceOpts", "\[Rule]", 
      RowBox[{"{", "Reals", "}"}]}], ",", "\n", 
     RowBox[{"BoundaryDetection", "\[Rule]", "False"}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.708581113938579*^9, 3.708581142353598*^9}, {
   3.70903292191361*^9, 3.709032932809966*^9}, {3.709033139894442*^9, 
   3.709033140962489*^9}, {3.731110719735405*^9, 3.731110726950795*^9}, {
   3.7312334667724953`*^9, 3.731233476102783*^9}, {3.731536233681926*^9, 
   3.731536234385519*^9}, 3.73153683519956*^9, {3.733176001804069*^9, 
   3.733176007278928*^9}, {3.733176130242333*^9, 3.7331761324864397`*^9}, {
   3.7587197889751177`*^9, 3.758719792644939*^9}, {3.7695019069998426`*^9, 
   3.769501909432497*^9}},ExpressionUUID->"29885eb5-1849-40f1-a04c-\
3e06fd8fffca"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Messages", "Subsubsection",
 CellChangeTimes->{{3.7695019121032543`*^9, 
  3.7695019132278223`*^9}},ExpressionUUID->"7bddaeae-cbe0-419a-84d0-\
6ba6361c0572"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EvoEq", "::", "nosol"}], "=", 
    "\"\<Solve/NSolve couldn't find a solution.  Try FindEcoEq \
instead.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EvoEq", "::", "badmtd"}], "=", 
    "\"\<The Method option should be \\\"Solve\\\", \\\"NSolve\\\", \
\\\"FindRoot\\\", or \\\"FindInstance\\\".\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEvoEq", "::", "needic"}], "=", 
    "\"\<Method FindInstance doesn't work with DelayDInv.  Give an initial \
guess to use Method FindRoot instead.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FindEvoEq", "::", "streg"}], "=", 
   "\"\<Initial value of `1` = `2` is outside the range `3` < `1` < `4`. \
Either fix it or set BoundaryDetection\[Rule]False.\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.769501914916206*^9, 3.769501915673628*^9}, {
  3.814402675586149*^9, 3.8144026786417437`*^9}, {3.814402765190686*^9, 
  3.814402766633314*^9}},ExpressionUUID->"7685f096-e7b0-46c1-b7f1-\
89889838c646"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["EcoEvoJacobian", "Subsection",ExpressionUUID->"4bce4d5b-d870-4abf-8f1a-c919feb9e0ce"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"075ff897-456c-410e-9952-\
9ec4f507cdda"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoEvoJacobian", "::", "usage"}], "=", " ", "\n", 
   "\"\<EcoEvoJacobian[\!\(\*StyleBox[\"attributes\", \"TI\"]\), \
\!\(\*StyleBox[\"variables\", \"TI\"]\), \!\(\*StyleBox[\"varcovars\", \
\"TI\"]\)] calculates the Jacobian of an eco-evolutionary equilibrium with \
trait values/interaction coefficients \!\(\*StyleBox[\"attributes\", \
\"TI\"]\), \!\(\*StyleBox[\"variables\", \"TI\"]\), trait \
variances/covariances in \!\(\*StyleBox[\"varcovars\", \"TI\"]\).\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.769491113371407*^9, 3.769491117946005*^9}, {
  3.807402625824233*^9, 3.807402639683902*^9}, {3.80773320037492*^9, 
  3.807733206518538*^9}, {3.8077333008301888`*^9, 
  3.807733301147069*^9}},ExpressionUUID->"dd3ec1c7-0457-4b9e-aaf0-\
b28453a5c961"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"bb5acfdb-7244-4849-9de3-\
30daec1baa07"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoEvoJacobian", "[", 
    RowBox[{
     RowBox[{"attributesin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "AttributesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"variablesin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Gs", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "GsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<EcoEvoJacobian\>\"", "]"}]}], ",", 
       "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "fixed", ",", "chop", ",", "\n", 
       RowBox[{"(*", " ", "rules", " ", "*)"}], "\n", "removets", ",", "\n", 
       RowBox[{"(*", " ", "fixed", " ", "*)"}], "\n", "fixedvars", ",", 
       "fixedattributes", ",", "fixedvariables", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "attributes", 
       ",", "variables", ",", "interactions", ",", "eqns", ",", "unks", ",", 
       "jmat"}], "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEvoJacobian", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEvoJacobian", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"chop", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Chop", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEvoJacobian", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"fixed", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Fixed", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEvoJacobian", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"fixedvars", "=", 
         RowBox[{"fixed", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        RowBox[{"fixedattributes", "=", 
         RowBox[{"ExtractAttributes", "[", "fixed", "]"}]}], ";", "\n", 
        RowBox[{"fixedvariables", "=", 
         RowBox[{"ExtractVariables", "[", "fixed", "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: fixedvars=\>\"", ",", "fixedvars"}], 
           "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"handle", " ", "blanks"}], " ", "&"}], " ", "figure", " ", 
          "out", " ", "number", " ", "of", " ", "species", " ", "in", " ", 
          "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"attributes", "=", 
         RowBox[{"FixAttributes", "[", "attributesin", "]"}]}], ";", "\n", 
        RowBox[{"variables", "=", 
         RowBox[{"FixVariables", "[", "variablesin", "]"}]}], ";", "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"interactions", "=", 
           RowBox[{"ExtractInteractions", "[", "attributesin", "]"}]}], ";"}],
          "*)"}], "\n", 
        RowBox[{"interactions", "=", 
         RowBox[{"ExtractInteractions", "[", "attributes", "]"}]}], ";", "\n",
         "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"Set\[ScriptCapitalN]", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"attributes", ",", "fixedattributes"}], "]"}], ",", 
          RowBox[{"Join", "[", 
           RowBox[{"variables", ",", "fixedvariables"}], "]"}]}], "]"}], ";", 
        "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"set", " ", "up", " ", "eqns"}], " ", "&"}], " ", "unks"}],
          " ", "*)"}], "\n", 
        RowBox[{"eqns", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"EcoEqns", "[", 
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{
              "BlankTraits", ",", "interactions", ",", "fixedattributes"}], 
              "]"}], ",", "opts"}], "]"}], ",", 
           RowBox[{"EvoEqns", "[", 
            RowBox[{"BlankVariables", ",", "Gs", ",", "opts", ",", 
             RowBox[{"Fixed", "\[Rule]", "interactions"}]}], "]"}]}], "]"}]}],
         ";", "\n", 
        RowBox[{"unks", "=", 
         RowBox[{
          RowBox[{"eqns", "/.", "LHS"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"var_", "'"}], "[", "t", "]"}], "\[Rule]", "var"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"var_", "[", 
               RowBox[{"t", "+", "1"}], "]"}], "/", 
              RowBox[{"var_", "[", "t", "]"}]}], "\[Rule]", "var"}], ",", 
            RowBox[{
             RowBox[{"var_", "[", 
              RowBox[{"t", "+", "1"}], "]"}], "\[Rule]", "var"}]}], "}"}]}]}],
         ";", "\n", 
        RowBox[{"eqns", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"eqns", "/.", "RHS"}], "/.", "RemoveTraitts"}], "/.", 
          "RemoveVariablets"}]}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: eqns=\>\""}], "]"}], ";", 
           RowBox[{"Print", "[", "eqns", "]"}], ";", "\n", "\t", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: unks=\>\""}], "]"}], ";", 
           RowBox[{"Print", "[", "unks", "]"}], ";"}]}], "\n", "]"}], ";", 
        "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"set", " ", "up", " ", "jacobian"}], " ", "*)"}], "\n", 
        RowBox[{"jmat", "=", 
         RowBox[{"D", "[", 
          RowBox[{"eqns", ",", 
           RowBox[{"{", "unks", "}"}]}], "]"}]}], ";", " ", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: jmat=\>\"", ",", "jmat"}], "]"}]}], 
         "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"chop", ",", "\n", "\t", 
          RowBox[{"Return", "[", 
           RowBox[{"Chop", "[", 
            RowBox[{
             RowBox[{"jmat", "/.", "variables"}], "/.", "attributes"}], "]"}],
            "]"}], ",", "\n", "\t", 
          RowBox[{"Return", "[", 
           RowBox[{
            RowBox[{"jmat", "/.", "variables"}], "/.", "attributes"}], 
           "]"}]}], "\n", "]"}], ";"}]}], "\n", "\n", "]"}]}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.687881463923338*^9, 3.6878814642206593`*^9}, {
   3.688571712031157*^9, 3.688571712970069*^9}, {3.688571773438903*^9, 
   3.688571773691594*^9}, {3.688585647886649*^9, 3.688585647950056*^9}, 
   3.6968459126099863`*^9, {3.709111069104553*^9, 3.709111071146356*^9}, {
   3.709111188579338*^9, 3.709111206600791*^9}, 3.709112345311878*^9, {
   3.709113170032196*^9, 3.70911320751721*^9}, {3.7091161216288033`*^9, 
   3.709116132278907*^9}, {3.70912471384448*^9, 3.709124714812223*^9}, {
   3.7091247525894337`*^9, 3.709124753236*^9}, {3.709124905981728*^9, 
   3.709124908675071*^9}, {3.7091251563288107`*^9, 3.7091252148336477`*^9}, {
   3.709125256966683*^9, 3.709125266144486*^9}, 3.709125319429579*^9, {
   3.709125487460884*^9, 3.70912550009022*^9}, {3.709125565851274*^9, 
   3.709125603050583*^9}, {3.709125643282658*^9, 3.709125652304858*^9}, {
   3.7091353045459547`*^9, 3.709135304723246*^9}, {3.709135339875559*^9, 
   3.70913534053586*^9}, {3.709135421209797*^9, 3.70913546669312*^9}, {
   3.709136303686781*^9, 3.709136304664163*^9}, {3.709336826194422*^9, 
   3.709336827721236*^9}, 3.710105997800356*^9, {3.710240822263516*^9, 
   3.710240822306775*^9}, 3.710324425713889*^9, {3.7127385350799313`*^9, 
   3.712738535091407*^9}, {3.7127402238954687`*^9, 3.712740223918549*^9}, {
   3.722033881951179*^9, 3.722033882679332*^9}, {3.722034298059016*^9, 
   3.722034304441523*^9}, {3.722088057303978*^9, 3.722088063591494*^9}, {
   3.722088095545795*^9, 3.72208813934046*^9}, {3.731539401126726*^9, 
   3.731539403487095*^9}, {3.731806893384124*^9, 3.73180690920345*^9}, {
   3.7318070052160587`*^9, 3.731807191935503*^9}, {3.731807223755814*^9, 
   3.731807262042197*^9}, {3.731807313270775*^9, 3.7318073239052677`*^9}, {
   3.731807382634013*^9, 3.731807399455317*^9}, {3.731807442504713*^9, 
   3.7318074773785057`*^9}, {3.7318075153810377`*^9, 3.73180752155061*^9}, {
   3.7318075792935457`*^9, 3.7318075796205883`*^9}, {3.7318080343289022`*^9, 
   3.731808067701665*^9}, {3.7318087633754587`*^9, 3.731808777563792*^9}, {
   3.73180882600138*^9, 3.7318088299801826`*^9}, {3.731845078919231*^9, 
   3.731845086394939*^9}, {3.731891176682523*^9, 3.73189119492102*^9}, {
   3.7318924222308083`*^9, 3.731892427565631*^9}, {3.731892752601499*^9, 
   3.73189275341535*^9}, {3.731892845528639*^9, 3.73189286778662*^9}, {
   3.731892915726254*^9, 3.731892917897695*^9}, {3.7318930132438793`*^9, 
   3.7318930316843967`*^9}, {3.731937902886425*^9, 3.731937924621661*^9}, {
   3.7319381511251917`*^9, 3.731938153734726*^9}, {3.7319733707174053`*^9, 
   3.7319733855238857`*^9}, {3.755373602092381*^9, 3.755373603415042*^9}, {
   3.759165448329403*^9, 3.759165464402302*^9}, {3.759165768408996*^9, 
   3.7591657767475147`*^9}, {3.759165832525058*^9, 3.75916590243913*^9}, {
   3.759214098237523*^9, 3.7592141198436327`*^9}, {3.760255621712562*^9, 
   3.7602556473042173`*^9}, {3.760256595441625*^9, 3.7602565963680058`*^9}, 
   3.7613779286929913`*^9, 3.769760706136499*^9, 3.770438265328044*^9, {
   3.77072145619442*^9, 3.7707214567492037`*^9}, 3.794137241264974*^9, 
   3.7981281328496037`*^9, {3.8002723413795557`*^9, 3.800272353721396*^9}, {
   3.807369343011153*^9, 3.807369343014269*^9}, {3.80756693985212*^9, 
   3.807566963699831*^9}, 3.807567059694471*^9, {3.807567129534039*^9, 
   3.807567138687379*^9}, {3.8075672071999273`*^9, 3.807567209406927*^9}, {
   3.807567293144713*^9, 3.807567399913288*^9}, {3.807567641125024*^9, 
   3.8075676460914717`*^9}, {3.80756767628608*^9, 3.807567684093892*^9}, {
   3.807567715885408*^9, 3.807567716284464*^9}, {3.807728356284816*^9, 
   3.807728383717409*^9}, {3.807728850044386*^9, 3.807728854154614*^9}, {
   3.807728895307581*^9, 3.807728895459128*^9}, {3.807729188436594*^9, 
   3.8077291914461*^9}, {3.807732125805044*^9, 
   3.807732133475767*^9}},ExpressionUUID->"91185ca6-a1c4-481d-852a-\
fbf349eb972c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",ExpressionUUID->"7f89a814-576e-4acd-842a-c9db5299ea5b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "EcoEvoJacobian", "]"}], "=", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"EvoEquation", "\[Rule]", "\"\<QG\>\""}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"TraitShiftRate", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Chop", "\[Rule]", "True"}], ",", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.688571711851214*^9, 3.6885717119411697`*^9}, 
   3.696845912585609*^9, 3.731891258738823*^9, {3.731941266690382*^9, 
   3.7319412706051683`*^9}, 
   3.769875597833514*^9},ExpressionUUID->"e20cfd66-d9e9-44b6-a80d-\
f31ae114d25a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",ExpressionUUID->"0799de86-7434-452f-bc3c-639a9eafcaa0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"split", " ", "traitsandvariables"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"EcoEvoJacobian", "[", 
      RowBox[{
       RowBox[{"sol_", "?", "AttributesAndVariablesQ"}], ",", 
       RowBox[{"Gs_List", ":", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\t", 
     RowBox[{"EcoEvoJacobian", "[", 
      RowBox[{
       RowBox[{"ExtractAttributes", "[", "sol", "]"}], ",", 
       RowBox[{"ExtractVariables", "[", "sol", "]"}], ",", "Gs", ",", 
       "opts"}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"EcoEvoJacobian", "[", "___", "]"}], ":=", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"EcoEvoJacobian", "::", "noper"}], "]"}], "/;", 
      RowBox[{"modelperiod", "=!=", "0"}]}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.709209376223256*^9, 3.709209385366888*^9}, 
   3.710105998965596*^9, {3.7102571571658697`*^9, 3.7102571585086*^9}, {
   3.712738535100851*^9, 3.712738535104472*^9}, 3.731856404569442*^9, {
   3.731891112583371*^9, 3.731891128668326*^9}, {3.7318929816218*^9, 
   3.7318929897444773`*^9}, {3.769502044768778*^9, 3.7695020626637487`*^9}, 
   3.7941372412674522`*^9, 3.798128800080358*^9, 3.807369343017108*^9, {
   3.807567164686741*^9, 
   3.80756716715617*^9}},ExpressionUUID->"f5491eb1-4246-455c-a14b-\
c3a836b2fcff"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Messages", "Subsubsection",
 CellChangeTimes->{{3.769502034342538*^9, 
  3.769502037445849*^9}},ExpressionUUID->"2b956c1e-c4a7-434c-870b-\
248ddff466a7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoEvoJacobian", "::", "noper"}], "=", 
   "\"\<EcoEvoJacobian can't handle periodic models yet.\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.7695020391056337`*^9, 
  3.76950204010688*^9}},ExpressionUUID->"21187646-720f-464b-8062-\
213254a952f9"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["EcoEvoEigenvalues", "Subsection",ExpressionUUID->"1f123f0a-20ec-4bcb-95e8-04909875b67a"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"ab525055-33b1-40a0-87be-\
b5c7e9e8d9c8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoEvoEigenvalues", "::", "usage"}], "=", " ", "\n", 
   "\"\<EcoEvoEigenvalues[\!\(\*StyleBox[\"attributes\", \"TI\"]\), \
\!\(\*StyleBox[\"variables\", \"TI\"]\), \!\(\*StyleBox[\"varcovars\", \
\"TI\"]\)] calculates the eigenvalues of an eco-evolutionary equilibrium with \
trait values/interaction coefficients \!\(\*StyleBox[\"attributes\", \
\"TI\"]\), \!\(\*StyleBox[\"variables\", \"TI\"]\), trait \
variances/covariances in \!\(\*StyleBox[\"varcovars\", \"TI\"]\).\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.7694911321363993`*^9, 3.7694911328697157`*^9}, 
   3.769502082442067*^9, {3.8074026785086823`*^9, 3.807402680217986*^9}, {
   3.807733277526094*^9, 
   3.807733286199328*^9}},ExpressionUUID->"a6c4b076-88bf-4624-9185-\
e82392aae29e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"1675f3fe-4582-4a7d-abc3-\
052f317e0c98"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoEvoEigenvalues", "[", 
    RowBox[{
     RowBox[{"attributes", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "AttributesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"variables", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Gs", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "GsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"chop", ",", "eejopts", ",", "res"}], "}"}], ",", "\n", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"chop", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Chop", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoEvoEigenvalues", "]"}]}], "}"}], 
          "]"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"eejopts", "=", 
       RowBox[{"FilterRules", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoEvoEigenvalues", "]"}]}], "}"}], 
          "]"}], ",", 
         RowBox[{"Options", "[", "EcoEvoJacobian", "]"}]}], "]"}]}], ";", 
      "\n", "\n", "\t", 
      RowBox[{"res", "=", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{"EcoEvoJacobian", "[", 
         RowBox[{"attributes", ",", "variables", ",", "Gs", ",", "eejopts"}], 
         "]"}], "]"}]}], ";", "\n", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{"chop", ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Chop", "[", "res", "]"}], "]"}], ",", 
        RowBox[{"Return", "[", "res", "]"}]}], "]"}], ";"}]}], "\n", "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{
  3.709203022991229*^9, 3.7127385351131763`*^9, {3.73184544793521*^9, 
   3.731845452867155*^9}, 3.731893121482032*^9, {3.760255655561718*^9, 
   3.760255661414131*^9}, 3.798128132852563*^9, 3.807369343020268*^9, {
   3.807568881837625*^9, 3.807568887734941*^9}, {3.807569004568893*^9, 
   3.8075690121274233`*^9}, {3.807569175723208*^9, 
   3.807569176040523*^9}},ExpressionUUID->"90f4e859-f4da-4060-9e59-\
9faa205993b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",ExpressionUUID->"772939a9-b1c8-474e-94cf-5fded27a4b5e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "EcoEvoEigenvalues", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"EvoEquation", "\[Rule]", "\"\<QG\>\""}], ",", 
      RowBox[{"Fixed", "\[Rule]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"TraitShiftRate", "\[Rule]", 
       RowBox[{"{", "}"}]}], ","}], "*)"}], "\n", 
    RowBox[{
     RowBox[{"Chop", "\[Rule]", "True"}], ",", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.6885717129872503`*^9, 3.688571713022046*^9}, {
   3.731941318762336*^9, 3.731941344377482*^9}, 3.769868272789584*^9, 
   3.8075691462023973`*^9, {3.807569199858612*^9, 
   3.807569212609421*^9}},ExpressionUUID->"c904b69d-6e37-4367-bc31-\
2887f8b450be"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",ExpressionUUID->"49f5b039-1f0f-40a2-8dff-c247535e3abf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"split", " ", "traitsandvariables"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"EcoEvoEigenvalues", "[", 
     RowBox[{
      RowBox[{"sol_", "?", "AttributesAndVariablesQ"}], ",", 
      RowBox[{"Gs_List", ":", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\t", 
    RowBox[{"EcoEvoEigenvalues", "[", 
     RowBox[{
      RowBox[{"ExtractAttributes", "[", "sol", "]"}], ",", 
      RowBox[{"ExtractVariables", "[", "sol", "]"}], ",", "Gs", ",", "opts"}],
      "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.712738535121628*^9, 3.712738535125637*^9}, {
   3.731855988352993*^9, 3.731855989485139*^9}, {3.769502096235298*^9, 
   3.769502100384637*^9}, 3.798128800082843*^9, 3.807369343022936*^9, {
   3.8075688731521378`*^9, 
   3.807568874380479*^9}},ExpressionUUID->"22f95fc4-03a8-4d56-bb02-\
8dcbeb9c4fa7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Messages", "Subsubsection",
 CellChangeTimes->{{3.769502086683226*^9, 
  3.7695020878173943`*^9}},ExpressionUUID->"015fa1eb-e9d7-42ad-8f04-\
fae868f25426"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoEvoEigenvalues", "::", "noper"}], "=", 
   "\"\<EcoEvoEigenvalues can't handle periodic models yet.\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.7695020888794823`*^9, 
  3.7695020907686853`*^9}},ExpressionUUID->"2b714f28-37ae-4abb-9613-\
d28b24cef870"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["EvoJacobian", "Subsection",ExpressionUUID->"0d343083-a116-4ea4-a8ab-3d69eb542d71"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"f6f8b0df-4929-434e-bf71-\
f7d7c69007b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EvoJacobian", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<EvoJacobian[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"variables\", \"TI\"]\), \!\(\*StyleBox[\"varcovars\", \
\"TI\"]\)] calculates the Jacobian of an evolutionary equilibrium with \
\!\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"variables\", \
\"TI\"]\), trait variances/covariances in \!\(\*StyleBox[\"varcovars\", \
\"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.7694911432065067`*^9, 3.769491144157872*^9}, {
  3.80740272129823*^9, 
  3.807402723035198*^9}},ExpressionUUID->"66f54936-b3a4-4e8c-a7c5-\
06b96c19a0e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"215c619d-4404-4531-9340-\
c8285f2d0038"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EvoJacobian", "[", 
    RowBox[{
     RowBox[{"traitsin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "AttributesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"variablesin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Gs", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "GsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<EvoJacobian\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "fixed", ",", "chop", ",", "\n", 
       RowBox[{"(*", " ", "rules", " ", "*)"}], "\n", "removets", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"fixed", " ", "vars"}], " ", "*)"}], "\n", "fixedvars", ",", 
       "fixedtraits", ",", "fixedvariables", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "traits", ",",
        "variables", ",", "eqns", ",", "unks", ",", "jmat"}], "}"}], ",", 
     "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "\[ScriptCapitalN]", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoJacobian", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoJacobian", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"chop", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Chop", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoJacobian", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"fixed", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Fixed", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoJacobian", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"fixedvars", "=", 
         RowBox[{"fixed", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        RowBox[{"fixedtraits", "=", 
         RowBox[{"ExtractTraits", "[", "fixed", "]"}]}], ";", "\n", 
        RowBox[{"fixedvariables", "=", 
         RowBox[{"ExtractVariables", "[", "fixed", "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: fixedvars=\>\"", ",", "fixedvars"}], 
           "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"handle", " ", "blanks"}], " ", "&"}], " ", "figure", " ", 
          "out", " ", "number", " ", "of", " ", "species", " ", "in", " ", 
          "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"traits", "=", 
         RowBox[{"FixAttributes", "[", "traitsin", "]"}]}], ";", "\n", 
        RowBox[{"variables", "=", 
         RowBox[{"FixVariables", "[", "variablesin", "]"}]}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"Set\[ScriptCapitalN]", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"traits", ",", "fixedtraits"}], "]"}], ",", 
          RowBox[{"Join", "[", 
           RowBox[{"variables", ",", "fixedvariables"}], "]"}]}], "]"}], ";", 
        "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"set", " ", "up", " ", "eqns"}], " ", "&"}], " ", "unks"}],
          " ", "*)"}], "\n", 
        RowBox[{"eqns", "=", 
         RowBox[{"EvoEqns", "[", 
          RowBox[{"BlankVariables", ",", "Gs", ",", "opts"}], "]"}]}], ";", 
        "\n", 
        RowBox[{"unks", "=", 
         RowBox[{
          RowBox[{"eqns", "/.", "LHS"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"var_", "'"}], "[", "t", "]"}], "\[Rule]", "var"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"var_", "[", 
               RowBox[{"t", "+", "1"}], "]"}], "/", 
              RowBox[{"var_", "[", "t", "]"}]}], "\[Rule]", "var"}], ",", 
            RowBox[{
             RowBox[{"var_", "[", 
              RowBox[{"t", "+", "1"}], "]"}], "\[Rule]", "var"}]}], "}"}]}]}],
         ";", "\n", 
        RowBox[{"eqns", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"eqns", "/.", "RHS"}], "/.", "RemoveTraitts"}], "/.", 
          "RemoveVariablets"}]}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: eqns=\>\""}], "]"}], ";", 
           RowBox[{"Print", "[", "eqns", "]"}], ";", "\n", "\t", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: unks=\>\""}], "]"}], ";", 
           RowBox[{"Print", "[", "unks", "]"}], ";"}]}], "\n", "]"}], ";", 
        "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"set", " ", "up", " ", "jacobian"}], " ", "*)"}], "\n", 
        RowBox[{"jmat", "=", 
         RowBox[{"D", "[", 
          RowBox[{"eqns", ",", 
           RowBox[{"{", "unks", "}"}]}], "]"}]}], ";", " ", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: jmat=\>\"", ",", "jmat"}], "]"}]}], 
         "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"chop", ",", "\n", "\t", 
          RowBox[{"Return", "[", 
           RowBox[{"Chop", "[", 
            RowBox[{
             RowBox[{"jmat", "/.", "variables"}], "/.", "traits"}], "]"}], 
           "]"}], ",", "\n", "\t", 
          RowBox[{"Return", "[", 
           RowBox[{
            RowBox[{"jmat", "/.", "variables"}], "/.", "traits"}], "]"}]}], 
         "\n", "]"}], ";"}]}], "\n", "\n", "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.687881465162212*^9, 3.687881465327681*^9}, {
   3.688571717625523*^9, 3.688571718505179*^9}, {3.688571776587853*^9, 
   3.688571776823722*^9}, {3.688585648070167*^9, 3.688585648129046*^9}, 
   3.6968459127034063`*^9, {3.709146854538561*^9, 3.709146934544635*^9}, {
   3.709147136741681*^9, 3.709147157740947*^9}, 3.7092030327432203`*^9, {
   3.709336830376745*^9, 3.70933683134243*^9}, 3.710106000029181*^9, {
   3.710240822320994*^9, 3.71024082235406*^9}, 3.71025897688914*^9, 
   3.710324426343544*^9, {3.7127385351494293`*^9, 3.712738535159951*^9}, {
   3.712740223931374*^9, 3.712740223952577*^9}, {3.7220339122381496`*^9, 
   3.72203391281808*^9}, {3.722034318500297*^9, 3.722034327583869*^9}, {
   3.722088155327507*^9, 3.722088200058957*^9}, {3.731539416453166*^9, 
   3.731539418422411*^9}, {3.731805390587207*^9, 3.7318054458666697`*^9}, {
   3.731805490546177*^9, 3.7318054921982822`*^9}, {3.73180595146091*^9, 
   3.731805952273254*^9}, {3.7318061488294*^9, 3.731806181161949*^9}, {
   3.731806222290551*^9, 3.731806224923895*^9}, {3.731806594753873*^9, 
   3.731806622010099*^9}, {3.731806655132272*^9, 3.731806691819386*^9}, {
   3.731806972626893*^9, 3.731806975597787*^9}, {3.731807529252302*^9, 
   3.731807535329926*^9}, 3.7318914674251137`*^9, {3.731893066081298*^9, 
   3.7318930928583813`*^9}, {3.731893335805414*^9, 3.731893349289456*^9}, {
   3.731893626140045*^9, 3.731893630683405*^9}, 3.731893716792038*^9, 
   3.755373604782435*^9, {3.759208550691798*^9, 3.759208579071454*^9}, {
   3.759214018443651*^9, 3.759214029661666*^9}, {3.7592141389252577`*^9, 
   3.759214139246903*^9}, {3.760255797843589*^9, 3.760255813508545*^9}, {
   3.760256603523882*^9, 3.760256604605028*^9}, 3.761377929403407*^9, 
   3.769760706152236*^9, 3.770438265334633*^9, {3.770721456984371*^9, 
   3.770721457636353*^9}, 3.794137241272615*^9, 3.79812813285777*^9, {
   3.800272341386146*^9, 3.800272353725156*^9}, {3.807369343028062*^9, 
   3.807369343032947*^9}},ExpressionUUID->"36217579-b395-4e1f-95cc-\
850588f56e6f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",ExpressionUUID->"fc2d3a6d-6d5c-460c-bf88-6f5fc457590f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"split", " ", "traitsandvariables"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"EvoJacobian", "[", 
      RowBox[{
       RowBox[{"sol_", "?", "AttributesAndVariablesQ"}], ",", 
       RowBox[{"Gs", ":", 
        RowBox[{"(", 
         RowBox[{"_", "?", "GsQ"}], ")"}], ":", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
     RowBox[{"EvoJacobian", "[", 
      RowBox[{
       RowBox[{"ExtractAttributes", "[", "sol", "]"}], ",", 
       RowBox[{"ExtractVariables", "[", "sol", "]"}], ",", "Gs", ",", 
       "opts"}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"EvoJacobian", "[", "___", "]"}], ":=", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"EvoJacobian", "::", "noper"}], "]"}], "/;", 
      RowBox[{"modelperiod", "=!=", "0"}]}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.709203389957925*^9, 3.709203392319108*^9}, {
   3.709208983663639*^9, 3.709209046465527*^9}, 3.710106000791006*^9, 
   3.7102571655880423`*^9, 3.71025898111604*^9, {3.712738535168481*^9, 
   3.7127385351721897`*^9}, 3.731893402181643*^9, {3.76950212900033*^9, 
   3.769502145480624*^9}, 3.794137241274973*^9, 3.7981288000854263`*^9, 
   3.8073693430358562`*^9, 
   3.8075693991817703`*^9},ExpressionUUID->"51fab449-1b84-41a7-b468-\
44d5114d56fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",ExpressionUUID->"ac2f350b-78dd-4bf0-a2bc-0b3250cf2c1f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "EvoJacobian", "]"}], "=", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"EvoEquation", "\[Rule]", "\"\<QG\>\""}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"TraitShiftRate", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Chop", "\[Rule]", "True"}], ",", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.6885717185309*^9, 3.688571718619993*^9}, 
   3.696845912715047*^9, {3.731941361785515*^9, 
   3.731941365950726*^9}},ExpressionUUID->"e0ce4515-ed97-4dac-a863-\
6bb52c3f50b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Messages", "Subsubsection",
 CellChangeTimes->{{3.7695021223194647`*^9, 
  3.769502123367832*^9}},ExpressionUUID->"213b4b54-fbbb-4bb3-8102-\
4d44ca28dad7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EvoJacobian", "::", "noper"}], "=", 
   "\"\<EvoJacobian can't handle periodic models yet.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769502124369857*^9, 
  3.7695021252797337`*^9}},ExpressionUUID->"2beaab80-1e1f-4b89-a2e8-\
19b7e10aa7b9"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["EvoEigenvalues", "Subsection",ExpressionUUID->"08361093-baa7-4fb2-80e4-06c98c44ae80"],

Cell[CellGroupData[{

Cell["Usage", "Subsubsection",
 CellChangeTimes->{{3.769494692292095*^9, 
  3.769494692848196*^9}},ExpressionUUID->"9b794274-4a11-4719-a02e-\
f37eb37579d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EvoEigenvalues", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<EvoEigenvalues[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"variables\", \"TI\"]\), \!\(\*StyleBox[\"varcovars\", \
\"TI\"]\)] calculates the eigenvalues of an evolutionary equilibrium with \
\!\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"variables\", \
\"TI\"]\), trait variances/covariances in \!\(\*StyleBox[\"varcovars\", \
\"TI\"]\).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.769491154994836*^9, 3.769491161571965*^9}, {
  3.8074027610683327`*^9, 
  3.807402762778884*^9}},ExpressionUUID->"5a9d6379-4db8-4cfe-8765-\
76111e5675ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition", "Subsubsection",
 CellChangeTimes->{{3.7694936745853653`*^9, 
  3.769493676072991*^9}},ExpressionUUID->"fe5f4d9e-1f49-4cf7-8038-\
79d57d559552"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EvoEigenvalues", "[", 
    RowBox[{
     RowBox[{"traits", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "AttributesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"variables", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Gs", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "GsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"chop", ",", "ejopts", ",", "res"}], "}"}], ",", "\n", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
         RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", "\n", 
      "\t", 
      RowBox[{"chop", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Chop", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EvoEigenvalues", "]"}]}], "}"}], "]"}]}],
         "]"}]}], ";", "\n", "\t", 
      RowBox[{"ejopts", "=", 
       RowBox[{"FilterRules", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EvoEigenvalues", "]"}]}], "}"}], "]"}], 
         ",", 
         RowBox[{"Options", "[", "EvoJacobian", "]"}]}], "]"}]}], ";", "\n", 
      "\n", "\t", 
      RowBox[{"res", "=", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{"EvoJacobian", "[", 
         RowBox[{"traits", ",", "variables", ",", "Gs", ",", "ejopts"}], 
         "]"}], "]"}]}], ";", "\n", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{"chop", ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Chop", "[", "res", "]"}], "]"}], ",", 
        RowBox[{"Return", "[", "res", "]"}]}], "]"}], ";"}]}], "\n", "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.709203054250413*^9, 3.7092030572537107`*^9}, {
   3.709336843646798*^9, 3.709336846104929*^9}, 3.710106001540656*^9, 
   3.712738535180859*^9, {3.731891488133377*^9, 3.731891499928199*^9}, {
   3.731893105185738*^9, 3.731893112700819*^9}, {3.760255821332177*^9, 
   3.7602558235803547`*^9}, 3.769760706159892*^9, 3.7704382653388166`*^9, 
   3.7941372412779713`*^9, 3.798128132860807*^9, 
   3.807369343039111*^9},ExpressionUUID->"7f9aa6a9-15bc-4eac-bf54-\
973d21216c4c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",ExpressionUUID->"f08c104e-41ad-425f-9d28-705730ba62a0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"split", " ", "traitsandvariables"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"EvoEigenvalues", "[", 
      RowBox[{
       RowBox[{"sol_", "?", "AttributesAndVariablesQ"}], ",", 
       RowBox[{"Gs", ":", 
        RowBox[{"(", 
         RowBox[{"_", "?", "GsQ"}], ")"}], ":", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
     RowBox[{"EvoEigenvalues", "[", 
      RowBox[{
       RowBox[{"ExtractAttributes", "[", "sol", "]"}], ",", 
       RowBox[{"ExtractVariables", "[", "sol", "]"}], ",", "Gs", ",", 
       "opts"}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"EvoEigenvalues", "[", "___", "]"}], ":=", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"EvoEigenvalues", "::", "noper"}], "]"}], "/;", 
      RowBox[{"modelperiod", "=!=", "0"}]}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{
  3.709203401234977*^9, 3.709209360029107*^9, {3.712738535189382*^9, 
   3.7127385351929483`*^9}, 3.731941388791111*^9, {3.769502171814561*^9, 
   3.7695022038667316`*^9}, 3.794137241280295*^9, 3.7981288000880127`*^9, 
   3.807369343043249*^9, 
   3.807569391831377*^9},ExpressionUUID->"d3cb501f-9d29-4b61-982f-\
5e1850730e09"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",ExpressionUUID->"6140255f-ec9a-4f56-a54e-c498c484f33d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "EvoEigenvalues", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"EvoEquation", "\[Rule]", "\"\<QG\>\""}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"TraitShiftRate", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Chop", "\[Rule]", "True"}], ",", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.688571718643941*^9, 3.688571718676917*^9}, {
  3.731941378897524*^9, 
  3.7319413819035597`*^9}},ExpressionUUID->"e19cbf5c-09b2-4d0d-b98b-\
fac97241bd8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Messages", "Subsubsection",
 CellChangeTimes->{{3.769502162392602*^9, 
  3.769502164151875*^9}},ExpressionUUID->"74e3571e-0f37-4468-9dda-\
68771be17391"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EvoEigenvalues", "::", "noper"}], "=", 
   "\"\<EvoEigenvalues can't handle periodic models yet.\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.769502165544804*^9, 
  3.7695021678717947`*^9}},ExpressionUUID->"4c3b4f80-16a7-4207-93c2-\
b3dc081ed253"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["End", "Chapter",ExpressionUUID->"9e7a41c9-f14c-410a-a386-1b3b18771802"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Protect", " ", "all", " ", "package", " ", "symbols"}], " ", 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"syms", " ", "=", " ", 
        RowBox[{"Names", "[", "\"\<EcoEvo`*\>\"", "]"}]}], "}"}], ",", "\n", 
      "  ", 
      RowBox[{"SetAttributes", "[", 
       RowBox[{"syms", ",", "Protected"}], "]"}]}], "\n", "]"}], ";"}], "\n", 
   
   RowBox[{
    RowBox[{"Unprotect", "[", 
     RowBox[{
     "Unk", ",", "t", ",", "LookUp", ",", "$FindEcoCycleSteps", ",", 
      "$InvCount", ",", "$FindEcoEvoCycleSteps"}], "]"}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.755815040664567*^9, 3.755815048005134*^9}, {
   3.755815141432612*^9, 3.755815150005804*^9}, {3.755816971198441*^9, 
   3.7558169714937973`*^9}, {3.7558177423679*^9, 3.755817746243328*^9}, {
   3.755819834315268*^9, 3.7558198387356358`*^9}, {3.755820202741007*^9, 
   3.755820203867004*^9}, {3.7592139689276752`*^9, 3.759213969101913*^9}, {
   3.759586442249503*^9, 3.759586444600618*^9}, 3.759586660067216*^9, {
   3.761932525188398*^9, 3.761932526520341*^9}, {3.769521818788369*^9, 
   3.769521835542224*^9}, 
   3.770106612621214*^9},ExpressionUUID->"24dd4262-847d-4354-b33f-\
0afd48df8d8e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.737047416403627*^9, 3.737047416707726*^9}, {
  3.73704745886162*^9, 3.737047459418858*^9}, {3.769836413613371*^9, 
  3.7698364139321947`*^9}, {3.7698364521391697`*^9, 3.7698364559963293`*^9}, {
  3.7698375125666313`*^9, 
  3.769837512972221*^9}},ExpressionUUID->"93d977e5-d294-4f2d-88fd-\
a7663acfa234"],

Cell[BoxData[
 RowBox[{"\"\<EcoEvo Package Version \>\"", "<>", "$EcoEvoVersion", "<>", 
  "\"\<\nChristopher A. Klausmeier \
<christopher.klausmeier@gmail.com>\>\""}]], "Code",
 CellChangeTimes->{
  3.7698375147468863`*^9},ExpressionUUID->"a4e621c3-d10e-4117-b0a3-\
fee82c3f4c54"]
}, Closed]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1274, 1313},
WindowMargins->{{Automatic, 5}, {Automatic, 2}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
PrintingOptions->{"PaperOrientation"->"Landscape",
"PaperSize"->{792, 612},
"PrintCellBrackets"->False,
"PrintMultipleHorizontalPages"->False,
"PrintRegistrationMarks"->False,
"PrintingMargins"->18},
ShowGroupOpener->True,
WholeCellGroupOpener->False,
TaggingRules->None,
Magnification:>1.25 Inherited,
FrontEndVersion->"12.3 for Mac OS X x86 (64-bit) (June 19, 2021)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    RawData["Cell[StyleData[\"Input\"],\n InitializationCell->True]"], 
    InitializationCell -> True]}, Visible -> False, FrontEndVersion -> 
  "12.3 for Mac OS X x86 (64-bit) (June 19, 2021)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"79ac2464-2770-402b-9879-7bd0928055e9"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 333, 5, 86, "Chapter",ExpressionUUID->"ee91c845-923f-4862-a074-70610eec46ee"],
Cell[916, 29, 1121, 32, 142, "Code",ExpressionUUID->"76f16d85-e149-4291-bc81-575debee65dc"],
Cell[2040, 63, 247, 5, 81, "Code",ExpressionUUID->"17161ef8-7f50-4d34-b3e6-90b10fd2d8f8"],
Cell[2290, 70, 411, 10, 112, "Code",ExpressionUUID->"5b56744b-6c60-4503-bff9-c7931f653e8e"]
}, Closed]],
Cell[CellGroupData[{
Cell[2738, 85, 200, 4, 71, "Chapter",ExpressionUUID->"3ddbb646-eea6-455b-9da7-9f6cf32ef4fb"],
Cell[CellGroupData[{
Cell[2963, 93, 161, 3, 84, "Section",ExpressionUUID->"a4a7603a-381b-415e-967a-914eae427e64"],
Cell[3127, 98, 641, 15, 202, "Code",ExpressionUUID->"25d539eb-443b-4bac-843b-0adc56e61bcf"]
}, Closed]],
Cell[CellGroupData[{
Cell[3805, 118, 204, 4, 65, "Section",ExpressionUUID->"146b5739-a254-44dc-bdb0-b3dd36c556d3"],
Cell[4012, 124, 880, 14, 31938, "Code",ExpressionUUID->"235d3caf-0e35-45b5-b267-39e1d7aa5c4c"]
}, Closed]],
Cell[CellGroupData[{
Cell[4929, 143, 163, 3, 65, "Section",ExpressionUUID->"02e09870-63d3-4188-b0ad-0c913acdef51"],
Cell[5095, 148, 676, 18, 142, "Code",ExpressionUUID->"9145396c-ab76-4c00-b78b-725ab38dfb7c"],
Cell[5774, 168, 5930, 94, 982, "Code",ExpressionUUID->"5a29371a-eb15-45db-ac3b-c59ddfb54012"]
}, Closed]],
Cell[CellGroupData[{
Cell[11741, 267, 172, 3, 65, "Section",ExpressionUUID->"4b842b94-ae53-4b3f-b0f1-579f3e294909"],
Cell[11916, 272, 562, 9, 81, "Code",ExpressionUUID->"a1f1bb0d-a91e-4bb6-8060-6d570aa43490"]
}, Closed]],
Cell[CellGroupData[{
Cell[12515, 286, 172, 3, 65, "Section",ExpressionUUID->"4ca43e10-c2cf-47cf-88a8-b6232e9cc1aa"],
Cell[12690, 291, 1324, 22, 262, "Code",ExpressionUUID->"66572530-b7a6-46cb-8794-321e0c0e45d4"]
}, Closed]],
Cell[CellGroupData[{
Cell[14051, 318, 246, 5, 65, "Section",ExpressionUUID->"c71ba46d-dafa-4098-b64c-03b927199635"],
Cell[14300, 325, 1524, 22, 232, "Code",ExpressionUUID->"424da367-340c-4455-b841-89eca92c484b"]
}, Closed]],
Cell[CellGroupData[{
Cell[15861, 352, 277, 4, 65, "Section",ExpressionUUID->"02939f0d-18b0-43e2-88ce-7e1f9cb9112f"],
Cell[16141, 358, 6118, 156, 1137, "Code",ExpressionUUID->"74cf4280-4d50-4b8f-8624-75f707011f78"]
}, Closed]],
Cell[CellGroupData[{
Cell[22296, 519, 165, 3, 65, "Section",ExpressionUUID->"a0a3f02c-cbc9-465c-a9ed-557b030d924c"],
Cell[22464, 524, 1229, 20, 232, "Code",ExpressionUUID->"61535074-90ab-4bfa-a5be-ce9d660580c5"]
}, Closed]],
Cell[CellGroupData[{
Cell[23730, 549, 164, 3, 65, "Section",ExpressionUUID->"7fc19cd7-7f45-4173-9b26-4f90325a9323"],
Cell[23897, 554, 712, 12, 172, "Code",ExpressionUUID->"ef719f2c-d1da-44a9-8ef3-58a34d0f2d4d"]
}, Closed]],
Cell[CellGroupData[{
Cell[24646, 571, 169, 3, 65, "Section",ExpressionUUID->"2805f313-aca1-4430-9455-847f77231666"],
Cell[24818, 576, 1307, 23, 262, "Code",ExpressionUUID->"49c22d47-99b8-4a46-92e8-501a3cbaa5d9"]
}, Closed]],
Cell[CellGroupData[{
Cell[26162, 604, 176, 3, 65, "Section",ExpressionUUID->"4c963b28-8bc2-4fd5-97a8-edbcd1f8e998"],
Cell[26341, 609, 31795, 759, 3522, "Code",ExpressionUUID->"d5ce3ad5-cd57-4a39-ae0b-4f8a7ab9b76c"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[58185, 1374, 81, 0, 86, "Chapter",ExpressionUUID->"13997123-8f35-4d7f-b66b-ab675c388f8f"],
Cell[CellGroupData[{
Cell[58291, 1378, 203, 4, 84, "Section",ExpressionUUID->"019273fb-695e-42f8-96e1-1690139e7929"],
Cell[58497, 1384, 148, 3, 65, "Code",ExpressionUUID->"8a98817b-ba9b-4b7f-9beb-f3a1cdcf5595"],
Cell[58648, 1389, 7343, 102, 65, "Code",ExpressionUUID->"dc46b9ba-4da1-4106-86c0-38a2eeedc8b0"],
Cell[65994, 1493, 206, 5, 65, "Code",ExpressionUUID->"e8c83d7b-6824-48d3-a22c-848ed466391f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66237, 1503, 205, 4, 84, "Section",ExpressionUUID->"36ec8172-2759-4c4f-bbbf-7ec1b61e94ed"],
Cell[CellGroupData[{
Cell[66467, 1511, 160, 3, 83, "Subsection",ExpressionUUID->"4c6dfa9f-5686-4e31-a72b-c98e70af3897"],
Cell[CellGroupData[{
Cell[66652, 1518, 157, 3, 70, "Subsubsection",ExpressionUUID->"b022898c-4729-4de3-a71d-e367010affa6"],
Cell[66812, 1523, 318, 8, 112, "Code",ExpressionUUID->"301c229c-a435-42d8-a582-0b455a4e8b78"]
}, Closed]],
Cell[CellGroupData[{
Cell[67167, 1536, 163, 3, 56, "Subsubsection",ExpressionUUID->"e10ed2e7-b9bf-4280-95f4-1598446e8ebc"],
Cell[67333, 1541, 2863, 70, 723, "Code",ExpressionUUID->"3f31bbd5-959d-4267-8d73-9188e3ad55b3"]
}, Closed]],
Cell[CellGroupData[{
Cell[70233, 1616, 160, 3, 56, "Subsubsection",ExpressionUUID->"2249bb7b-0353-4674-a89a-ce3e5ef8b3f7"],
Cell[70396, 1621, 264, 7, 112, "Code",ExpressionUUID->"50350193-4a61-4f4a-a063-d08d13307908"]
}, Closed]],
Cell[CellGroupData[{
Cell[70697, 1633, 160, 3, 56, "Subsubsection",ExpressionUUID->"b52a2f4b-2726-4246-a067-584b14c22927"],
Cell[70860, 1638, 204, 4, 81, "Code",ExpressionUUID->"f224eae1-b06a-480f-b180-d3aa84f5f70c"]
}, Closed]],
Cell[CellGroupData[{
Cell[71101, 1647, 159, 3, 56, "Subsubsection",ExpressionUUID->"360a228e-a18d-4146-a99f-10bd93323847"],
Cell[71263, 1652, 80, 0, 81, "Code",ExpressionUUID->"a302eddd-fa75-4a1e-9c4b-455da198ef4c"]
}, Closed]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[71404, 1659, 89, 0, 65, "Section",ExpressionUUID->"84bfba9b-ce84-4b9e-b0ff-5f972631c3d5"],
Cell[71496, 1661, 602, 16, 126, "Code",ExpressionUUID->"2759cad6-4a29-43ad-9086-0dda9ed37fc3"]
}, Closed]],
Cell[CellGroupData[{
Cell[72135, 1682, 162, 3, 65, "Section",ExpressionUUID->"c6e46a86-2613-4fa3-951d-1d7af9be1c7d"],
Cell[CellGroupData[{
Cell[72322, 1689, 210, 4, 67, "Subsection",ExpressionUUID->"b2ae2846-6fe1-430d-a952-7ec9b07614b7"],
Cell[CellGroupData[{
Cell[72557, 1697, 158, 3, 70, "Subsubsection",ExpressionUUID->"bd40ddae-6f98-41e4-b5f8-73d49a4752ea"],
Cell[72718, 1702, 515, 10, 81, "Code",ExpressionUUID->"534951f8-6d59-4081-8195-b2369c9d5f3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73270, 1717, 161, 3, 70, "Subsubsection",ExpressionUUID->"b54b695a-e4cc-424d-ab06-cd3611617702"],
Cell[73434, 1722, 1019, 32, 142, "Code",ExpressionUUID->"a6bc6d96-e781-454e-a2d5-41f3ca7339a0"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[74502, 1760, 168, 3, 46, "Subsection",ExpressionUUID->"da0bee4b-2e24-403d-898d-0a98ea8c1413"],
Cell[CellGroupData[{
Cell[74695, 1767, 155, 3, 70, "Subsubsection",ExpressionUUID->"c4099b62-057a-4305-bbc1-463e1fa356f1"],
Cell[74853, 1772, 362, 9, 81, "Code",ExpressionUUID->"3ee3238b-32b1-408b-8653-4f18e24fe113"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75252, 1786, 160, 3, 70, "Subsubsection",ExpressionUUID->"7f807275-199e-4641-9294-0d798d9ff6d1"],
Cell[75415, 1791, 2924, 78, 352, "Code",ExpressionUUID->"5c56787a-8dac-45df-b32e-cbaf5a48c029"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[78388, 1875, 166, 3, 46, "Subsection",ExpressionUUID->"c131596a-93ef-4741-9802-e1ca20f02741"],
Cell[CellGroupData[{
Cell[78579, 1882, 156, 3, 70, "Subsubsection",ExpressionUUID->"43ccff73-ad45-4706-90dd-01db4553ddf9"],
Cell[78738, 1887, 246, 7, 81, "Code",ExpressionUUID->"8ed837d2-8b22-4d89-a923-5c1c2535b46d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79021, 1899, 161, 3, 70, "Subsubsection",ExpressionUUID->"f1019e74-3be3-4478-b437-c1d67e90d07c"],
Cell[79185, 1904, 461, 12, 81, "Code",ExpressionUUID->"9bc1f076-da4a-4b96-83c3-16bf394fcec4"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[79695, 1922, 159, 3, 46, "Subsection",ExpressionUUID->"5341ce70-23a8-4509-877f-69a9287b7027"],
Cell[CellGroupData[{
Cell[79879, 1929, 156, 3, 70, "Subsubsection",ExpressionUUID->"8e6976ee-08da-49ad-9c3f-cbdfa75a500c"],
Cell[80038, 1934, 735, 16, 112, "Code",ExpressionUUID->"82c65188-36c1-4cba-8142-74a8d5ba2ee3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80810, 1955, 163, 3, 70, "Subsubsection",ExpressionUUID->"94fbb2fd-682c-4cb9-9ecd-f8a6c331d36f"],
Cell[80976, 1960, 1507, 39, 172, "Code",ExpressionUUID->"45b60309-d8bf-45d1-822c-70515e8faeb8"],
Cell[82486, 2001, 1599, 40, 172, "Code",ExpressionUUID->"a7124a4b-218f-4fde-9782-1cc49b434fd4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84122, 2046, 162, 3, 70, "Subsubsection",ExpressionUUID->"cd48e07c-c9e3-47fa-99d9-44de9a5d73b2"],
Cell[84287, 2051, 1386, 36, 112, "Code",ExpressionUUID->"5ac20f16-a0bf-416f-a8b7-2009ca6bf7db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85710, 2092, 158, 3, 70, "Subsubsection",ExpressionUUID->"f57a4bd1-a2df-4501-990f-035ef46a4307"],
Cell[85871, 2097, 447, 13, 112, "Code",ExpressionUUID->"0ddaa4ea-7aa0-4438-a5d3-27c35273016e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86355, 2115, 159, 3, 70, "Subsubsection",ExpressionUUID->"eebf1c5c-228c-4a7c-be33-b7aeb568fd89"],
Cell[86517, 2120, 411, 11, 112, "Code",ExpressionUUID->"b8a46a42-4a3d-4082-a7ce-80033a9d2b6c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[86977, 2137, 165, 3, 46, "Subsection",ExpressionUUID->"cdb57a9c-ebff-4e86-9999-147f047d19e3"],
Cell[CellGroupData[{
Cell[87167, 2144, 158, 3, 70, "Subsubsection",ExpressionUUID->"ccc9d3c6-fc6f-4f83-a9ad-5a7bed3df2da"],
Cell[87328, 2149, 371, 9, 81, "Code",ExpressionUUID->"695096e4-dd40-408f-ae2b-687296713401"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87736, 2163, 161, 3, 70, "Subsubsection",ExpressionUUID->"f3b6685f-aa4c-4bb3-afc0-c571c0eebe55"],
Cell[87900, 2168, 8118, 185, 952, "Code",ExpressionUUID->"96d88b1c-f196-46b9-9b4d-5be39056a87b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96055, 2358, 162, 3, 70, "Subsubsection",ExpressionUUID->"14d2c502-9066-4eda-8a2d-d7654580cf8a"],
Cell[96220, 2363, 325, 9, 81, "Code",ExpressionUUID->"3d1662ae-04f9-4f27-9a85-61687ab0cc43"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[96594, 2378, 181, 3, 46, "Subsection",ExpressionUUID->"4fe9b444-e6a9-4f11-b7e5-107816d7c8da"],
Cell[CellGroupData[{
Cell[96800, 2385, 156, 3, 70, "Subsubsection",ExpressionUUID->"5c93c609-2414-4bc5-888d-2094793b28ac"],
Cell[96959, 2390, 405, 8, 81, "Code",ExpressionUUID->"3042d780-1c05-4d82-994e-b2baa9e808ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97401, 2403, 161, 3, 70, "Subsubsection",ExpressionUUID->"c96a5181-8e87-48ef-9f8e-d9e57c084a53"],
Cell[97565, 2408, 4395, 105, 652, "Code",ExpressionUUID->"b186fa8e-59f1-4f67-b72d-a77affaf17c6"],
Cell[101963, 2515, 2176, 56, 858, "Code",ExpressionUUID->"1a2eeb87-1362-4ee0-85c7-fae26ac541a4"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[104188, 2577, 162, 3, 46, "Subsection",ExpressionUUID->"f938d8ea-97b3-4d04-87d9-4b4fdd332ef8"],
Cell[CellGroupData[{
Cell[104375, 2584, 156, 3, 200, "Subsubsection",ExpressionUUID->"bf00cf4f-bc28-49b4-8402-d92c0f97d30a"],
Cell[104534, 2589, 493, 10, 335, "Code",ExpressionUUID->"33bc3188-bbf0-4d80-b6bc-fd5e1aa3e500"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105064, 2604, 161, 3, 200, "Subsubsection",ExpressionUUID->"e483b895-cd5b-4a16-b94e-d20903863dc6"],
Cell[105228, 2609, 463, 13, 243, "Code",ExpressionUUID->"8cec39d5-8928-4dae-8d94-30a08a9e6a14"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[105740, 2628, 185, 3, 46, "Subsection",ExpressionUUID->"bd57a215-d2d7-4f1f-b388-db849219b02a"],
Cell[CellGroupData[{
Cell[105950, 2635, 158, 3, 27371, "Subsubsection",ExpressionUUID->"f9900e28-a610-455f-b444-e0f6e67527df"],
Cell[106111, 2640, 511, 11, 44452, "Code",ExpressionUUID->"368a1195-61d5-4db8-8286-f83f93e3a170"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106659, 2656, 163, 3, 27371, "Subsubsection",ExpressionUUID->"69c02a13-eea9-4460-ba17-92a22d16646d"],
Cell[106825, 2661, 613, 16, 31938, "Code",ExpressionUUID->"1d59565d-be69-4532-8b6c-71b21b736404"],
Cell[107441, 2679, 706, 18, 44452, "Code",ExpressionUUID->"5b01a4e6-e011-45ab-9778-161dada16e51"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[108196, 2703, 188, 3, 46, "Subsection",ExpressionUUID->"1a765064-2e50-496a-a347-95bc9daa64cf"],
Cell[CellGroupData[{
Cell[108409, 2710, 157, 3, 27371, "Subsubsection",ExpressionUUID->"6cc88fb7-43db-4033-a7d5-77cb571f9fb3"],
Cell[108569, 2715, 801, 14, 44452, "Code",ExpressionUUID->"68215932-51ec-4d62-bd6d-2184ba53cb54"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109407, 2734, 163, 3, 27371, "Subsubsection",ExpressionUUID->"eea1bc9b-7d71-4636-8d20-79b1931c226a"],
Cell[109573, 2739, 1055, 30, 45178, "Code",ExpressionUUID->"4d560fdc-8667-462d-b335-f7abf781f998"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[110677, 2775, 165, 3, 46, "Subsection",ExpressionUUID->"a27464e3-b50a-42e5-8b54-0caef39668ff"],
Cell[CellGroupData[{
Cell[110867, 2782, 155, 3, 27371, "Subsubsection",ExpressionUUID->"9be9affa-9239-41c4-829e-f71be8a1bf93"],
Cell[111025, 2787, 810, 14, 44452, "Code",ExpressionUUID->"0957d330-4fb8-4386-848e-033c066d8e51"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111872, 2806, 161, 3, 27371, "Subsubsection",ExpressionUUID->"6571a0f0-fe18-4880-b717-716cdf3c709f"],
Cell[112036, 2811, 711, 19, 31938, "Code",ExpressionUUID->"a5013849-3990-40fe-b70a-dc8a2634c153"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[112796, 2836, 156, 3, 46, "Subsection",ExpressionUUID->"9a2e4391-0ae3-4d79-a550-f6d77d86f535"],
Cell[CellGroupData[{
Cell[112977, 2843, 156, 3, 70, "Subsubsection",ExpressionUUID->"676595b1-d57c-4289-b270-fb1483042b3c"],
Cell[113136, 2848, 466, 10, 112, "Code",ExpressionUUID->"d9463442-68c3-498e-874c-960e73fa741d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113639, 2863, 161, 3, 70, "Subsubsection",ExpressionUUID->"4ab1ee25-378b-4275-8ef0-2d28032c4e5d"],
Cell[113803, 2868, 2039, 58, 118, "Code",ExpressionUUID->"135dc384-f51d-4ac4-bb27-6fcf21bb3896"],
Cell[115845, 2928, 263, 7, 81, "Code",ExpressionUUID->"cef3dd18-4194-4d36-a342-707b4263afce"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[116157, 2941, 205, 4, 46, "Subsection",ExpressionUUID->"ecb66b53-cfa6-4697-812e-bc076490c199"],
Cell[CellGroupData[{
Cell[116387, 2949, 158, 3, 27371, "Subsubsection",ExpressionUUID->"04c7ed91-76b0-490e-8f6e-26afae546b6c"],
Cell[116548, 2954, 584, 15, 79852, "Code",ExpressionUUID->"93dc19d4-4d84-48f0-a49e-b4827b226b30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117169, 2974, 163, 3, 27371, "Subsubsection",ExpressionUUID->"bfa6b35d-4ba2-4753-92f9-e63c1d980625"],
Cell[117335, 2979, 518, 16, 44452, "Code",ExpressionUUID->"bed86304-a18b-43df-9f1f-72a014f1d036"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[117902, 3001, 171, 3, 46, "Subsection",ExpressionUUID->"390595aa-b239-4e7f-948a-6de9ecc85885"],
Cell[CellGroupData[{
Cell[118098, 3008, 156, 3, 165, "Subsubsection",ExpressionUUID->"0835d0fe-b82a-4d6d-aafa-9e09c1de0542"],
Cell[118257, 3013, 862, 19, 491, "Code",ExpressionUUID->"3608718d-d12b-4db3-b950-79ee3247f2ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119156, 3037, 163, 3, 165, "Subsubsection",ExpressionUUID->"3bc01381-d581-4ec4-b91d-2a8fdefc97c9"],
Cell[119322, 3042, 2095, 59, 565, "Code",ExpressionUUID->"c0274e4a-eea6-401d-921a-48d5a616025a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[121466, 3107, 199, 4, 46, "Subsection",ExpressionUUID->"b716ced8-7083-460e-b2cd-6e76022767b8"],
Cell[CellGroupData[{
Cell[121690, 3115, 158, 3, 70, "Subsubsection",ExpressionUUID->"b00138ef-8a6d-4af1-a6ab-fc1cd7dca114"],
Cell[121851, 3120, 369, 8, 112, "Code",ExpressionUUID->"ec630fe7-0d26-4e05-b8fa-15025b76a8cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122257, 3133, 161, 3, 70, "Subsubsection",ExpressionUUID->"1d7f3bba-0ccd-46bb-975c-899993ff54de"],
Cell[122421, 3138, 610, 17, 81, "Code",ExpressionUUID->"59f1e247-aa00-464f-9c9e-d6c9561629dd"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[123080, 3161, 155, 3, 46, "Subsection",ExpressionUUID->"8fdf514b-2771-41f2-9378-68b9623b71c4"],
Cell[CellGroupData[{
Cell[123260, 3168, 155, 3, 27371, "Subsubsection",ExpressionUUID->"3fdda70c-f6a8-469c-bb36-8b7e9a40961a"],
Cell[123418, 3173, 359, 8, 44452, "Code",ExpressionUUID->"1189f0f5-12a7-4957-bcda-e769eb8377b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123814, 3186, 163, 3, 27371, "Subsubsection",ExpressionUUID->"9aa50687-df0c-498a-95c4-9518cd6c1e0e"],
Cell[123980, 3191, 326, 9, 31938, "Code",ExpressionUUID->"5d21935b-a30d-4e00-984d-555b3e0d434d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[124355, 3206, 206, 4, 46, "Subsection",ExpressionUUID->"c59ae084-3047-4351-ae6f-8cac1c03d1ef"],
Cell[CellGroupData[{
Cell[124586, 3214, 158, 3, 27371, "Subsubsection",ExpressionUUID->"5d3d7e19-3d4e-48b8-aef4-7db633e6276c"],
Cell[124747, 3219, 355, 8, 31938, "Code",ExpressionUUID->"8b1f7ae1-6c64-48af-af96-44b5194382e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125139, 3232, 161, 3, 27371, "Subsubsection",ExpressionUUID->"afabb8d1-c92b-40a9-b9a0-8f26c8b5c2dc"],
Cell[125303, 3237, 449, 11, 31938, "Code",ExpressionUUID->"ca29d02d-c681-4c33-bbb7-1f4d08e6a8d5"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[125801, 3254, 162, 3, 46, "Subsection",ExpressionUUID->"7db0ec15-5a6c-4a24-b5f2-29ade1f98e51"],
Cell[CellGroupData[{
Cell[125988, 3261, 156, 3, 165, "Subsubsection",ExpressionUUID->"b4044ab6-750a-49ec-a23c-858f7359220f"],
Cell[126147, 3266, 466, 9, 272, "Code",ExpressionUUID->"92f489af-eec8-44de-b959-ea4ff0cf78d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126650, 3280, 163, 3, 165, "Subsubsection",ExpressionUUID->"f160dedd-9e22-486d-a64d-a5a6bcb8ad5b"],
Cell[126816, 3285, 532, 15, 196, "Code",ExpressionUUID->"74b5025c-cb9e-4418-a462-353d3b27370d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[127397, 3306, 187, 3, 46, "Subsection",ExpressionUUID->"02c78071-8521-4aa0-ac00-047b7300c66c"],
Cell[CellGroupData[{
Cell[127609, 3313, 158, 3, 165, "Subsubsection",ExpressionUUID->"8266bb9b-71a7-4b89-a7c5-58b9b22cb3e1"],
Cell[127770, 3318, 448, 9, 272, "Code",ExpressionUUID->"59da8aaa-544b-41da-b390-63990167bf46"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128255, 3332, 161, 3, 165, "Subsubsection",ExpressionUUID->"7baf2a34-3f2b-4327-8a7a-22e02fa1b2c2"],
Cell[128419, 3337, 445, 12, 196, "Code",ExpressionUUID->"72c5aa19-6cb3-403d-ba98-cb4d787d5b93"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[128913, 3355, 187, 3, 46, "Subsection",ExpressionUUID->"87770f6b-4cf8-4888-a237-8a1c35bb9f73"],
Cell[CellGroupData[{
Cell[129125, 3362, 158, 3, 165, "Subsubsection",ExpressionUUID->"50d5c22d-bef2-46c4-8c3a-d96dca1a175c"],
Cell[129286, 3367, 443, 9, 272, "Code",ExpressionUUID->"1f73026d-8ad1-44ee-b15e-12914cc9dcf0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129766, 3381, 188, 3, 165, "Subsubsection",ExpressionUUID->"e5fc4e0e-4b69-46ba-9ae8-f09275474502"],
Cell[129957, 3386, 533, 13, 196, "Code",ExpressionUUID->"d9bcfd98-fd85-422f-90bb-699711afe270"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[130539, 3405, 164, 3, 46, "Subsection",ExpressionUUID->"ee2cd685-c5b9-463a-85ac-9986fc32a8a5"],
Cell[CellGroupData[{
Cell[130728, 3412, 157, 3, 210, "Subsubsection",ExpressionUUID->"8b24a0e0-e916-4995-911c-b9315df0326b"],
Cell[130888, 3417, 368, 8, 335, "Code",ExpressionUUID->"7bf88c2e-0a40-4a20-830e-3ca5a2f7d149"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131293, 3430, 184, 3, 210, "Subsubsection",ExpressionUUID->"77699c0a-d3cf-4434-ba46-022606ade4fe"],
Cell[131480, 3435, 4575, 104, 1737, "Code",ExpressionUUID->"c177f39e-fad6-4e59-86f8-cf71e5fa2db5"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[136104, 3545, 163, 3, 46, "Subsection",ExpressionUUID->"698ddb06-bc17-4e89-b137-36f19bd15b13"],
Cell[CellGroupData[{
Cell[136292, 3552, 156, 3, 200, "Subsubsection",ExpressionUUID->"64358a67-cc36-49f1-906e-83f8fb9d76b9"],
Cell[136451, 3557, 380, 8, 335, "Code",ExpressionUUID->"e30b011f-23c0-4473-9805-3031d7c35a21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136868, 3570, 184, 3, 200, "Subsubsection",ExpressionUUID->"e4d29719-8b04-4fc2-8d1a-719f5fd53190"],
Cell[137055, 3575, 376, 10, 243, "Code",ExpressionUUID->"9aa46028-d3b9-4296-832a-0ad68b9b18e3"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[137480, 3591, 178, 3, 46, "Subsection",ExpressionUUID->"27319d79-58c6-4356-b3ca-963d1e6dd888"],
Cell[CellGroupData[{
Cell[137683, 3598, 153, 2, 27371, "Subsubsection",ExpressionUUID->"c71b70f5-6793-49e8-aae6-78d5b503d8ea"],
Cell[137839, 3602, 315, 7, 44452, "Code",ExpressionUUID->"79541290-4ae3-4a3e-b1f1-da94460cc5a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138191, 3614, 184, 3, 27371, "Subsubsection",ExpressionUUID->"381c613d-25b0-4c99-8b53-47c8da1a92d2"],
Cell[138378, 3619, 1237, 37, 44663, "Code",ExpressionUUID->"a77553c2-06bf-4db8-b6d3-1933b1614089"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[139664, 3662, 156, 3, 46, "Subsection",ExpressionUUID->"971b1880-008f-425e-acf1-582a17fc1b1a"],
Cell[CellGroupData[{
Cell[139845, 3669, 155, 3, 27065, "Subsubsection",ExpressionUUID->"6ab496c5-132b-4494-8b83-f897da514e6b"],
Cell[140003, 3674, 396, 9, 44452, "Code",ExpressionUUID->"06790b0a-0f0e-4a45-9da2-7f1e6613e028"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140436, 3688, 184, 3, 27065, "Subsubsection",ExpressionUUID->"d8f40113-e63b-41d8-8ab6-ecad07610432"],
Cell[140623, 3693, 407, 9, 31938, "Code",ExpressionUUID->"0db77f5b-baa7-4902-b73b-c77e5940de80"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[141079, 3708, 206, 4, 46, "Subsection",ExpressionUUID->"d23c2628-6ae5-4149-9f11-ad85267d1d15"],
Cell[CellGroupData[{
Cell[141310, 3716, 154, 3, 70, "Subsubsection",ExpressionUUID->"63c981f5-3ee6-4bf9-bcb1-e8df3816d5d4"],
Cell[141467, 3721, 399, 9, 112, "Code",ExpressionUUID->"edbb9553-87f7-4155-b918-29ba5feaf24c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141903, 3735, 184, 3, 70, "Subsubsection",ExpressionUUID->"2a0444b1-e59f-4771-8b51-e8d1de423b82"],
Cell[142090, 3740, 8472, 204, 502, "Code",ExpressionUUID->"d173eb45-7ac8-42a4-8d12-ba2f5adbafc8"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[150611, 3950, 553, 11, 46, "Subsection",ExpressionUUID->"cdb4e017-fa27-4371-8b6d-fe84f9aa1d27"],
Cell[CellGroupData[{
Cell[151189, 3965, 158, 3, 70, "Subsubsection",ExpressionUUID->"8dec8f13-4f1e-4dde-bcba-83eb7f038e2f"],
Cell[151350, 3970, 605, 14, 55, "Text",ExpressionUUID->"1eacaa1d-8671-4778-8c79-ecc0be0d4826"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151992, 3989, 184, 3, 70, "Subsubsection",ExpressionUUID->"48bebda9-e173-443a-92a9-8cd2c29ad11f"],
Cell[152179, 3994, 11603, 275, 1402, "Code",ExpressionUUID->"0eae6244-9806-46cf-b937-416d2ab5c463"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[163831, 4275, 157, 3, 46, "Subsection",ExpressionUUID->"f8b9c8aa-f6cd-4c19-9378-ebffd3f80170"],
Cell[CellGroupData[{
Cell[164013, 4282, 156, 3, 210, "Subsubsection",ExpressionUUID->"1ab1211f-a644-4e47-bd20-69e5691bab2e"],
Cell[164172, 4287, 455, 8, 335, "Code",ExpressionUUID->"e988b9aa-06e5-4504-9b43-d07b176ee6e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164664, 4300, 186, 3, 210, "Subsubsection",ExpressionUUID->"771bbf9c-7ac0-4d72-9bfb-bd0f709e9ed7"],
Cell[164853, 4305, 1881, 54, 610, "Code",ExpressionUUID->"5fc760c5-8bff-4d54-ab52-4b2c0cbcf97b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[166783, 4365, 347, 5, 46, "Subsection",ExpressionUUID->"7b346daf-5a2b-4b50-b585-0f3d866a562e"],
Cell[CellGroupData[{
Cell[167155, 4374, 156, 3, 210, "Subsubsection",ExpressionUUID->"18accf27-ae83-47d7-b35c-af3707455d1f"],
Cell[167314, 4379, 491, 10, 335, "Code",ExpressionUUID->"c13f6a20-7fe6-456b-8294-2dbb6dba89be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167842, 4394, 184, 3, 210, "Subsubsection",ExpressionUUID->"dbf98e20-2b28-4070-b71d-8cfc78f60ab7"],
Cell[168029, 4399, 1654, 42, 335, "Code",ExpressionUUID->"5d57f349-d9b8-466a-b18f-e91620f5bdbb"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[169732, 4447, 224, 4, 46, "Subsection",ExpressionUUID->"32e0792c-676a-4118-b390-e1b2f4e206e4"],
Cell[CellGroupData[{
Cell[169981, 4455, 156, 3, 70, "Subsubsection",ExpressionUUID->"f98067d7-71f3-4200-bb39-072f3fbc68a3"],
Cell[170140, 4460, 364, 9, 112, "Code",ExpressionUUID->"18e3002d-40a4-4500-8500-988de4b4393e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170541, 4474, 163, 3, 70, "Subsubsection",ExpressionUUID->"1ba47c63-b5f1-45da-b0b9-2bf27b78f228"],
Cell[170707, 4479, 572, 14, 81, "Code",ExpressionUUID->"00572da9-93db-492d-99f0-243c0ad66211"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[171328, 4499, 282, 5, 46, "Subsection",ExpressionUUID->"c906219e-d31a-46bd-a319-ad22d2c917b1"],
Cell[CellGroupData[{
Cell[171635, 4508, 158, 3, 70, "Subsubsection",ExpressionUUID->"75ca1073-0436-458b-9291-da9a75f1df7c"],
Cell[171796, 4513, 933, 16, 172, "Code",ExpressionUUID->"a743c8c6-ac8a-49c5-9061-6811c048158d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172766, 4534, 163, 3, 70, "Subsubsection",ExpressionUUID->"ba23e4e9-e158-4bb4-8c6d-e5ee393c2ceb"],
Cell[172932, 4539, 1858, 52, 172, "Code",ExpressionUUID->"e3744e1f-dec0-4f02-b178-5177dc4759aa"],
Cell[174793, 4593, 711, 18, 112, "Code",ExpressionUUID->"44633a54-5b9b-4612-9885-c77b3bbc7cd2"],
Cell[175507, 4613, 5729, 128, 638, "Code",ExpressionUUID->"feb7193e-ddf1-4236-931d-b6ad1c65fb79"],
Cell[181239, 4743, 4552, 90, 562, "Code",ExpressionUUID->"9283a4f1-96ef-4a04-b05f-f5f69d61ec96"],
Cell[185794, 4835, 1943, 46, 172, "Code",ExpressionUUID->"3d13a2f8-a69a-4e4d-8957-f1858c2433ed"],
Cell[187740, 4883, 1607, 40, 172, "Code",ExpressionUUID->"09888ab4-f138-4243-ac61-89c3170e66d3"],
Cell[189350, 4925, 4401, 87, 532, "Code",ExpressionUUID->"38197ba4-98dd-4aab-82aa-536c6eaeffeb"],
Cell[193754, 5014, 1660, 36, 112, "Code",ExpressionUUID->"c15d6be1-1711-4727-81de-0b38477c59c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195451, 5055, 160, 3, 70, "Subsubsection",ExpressionUUID->"64211cf7-3200-4fd8-9990-482cd2487ea7"],
Cell[195614, 5060, 778, 17, 81, "Code",ExpressionUUID->"a57e5873-dfea-48f7-8bdd-84f3ef9b590c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[196441, 5083, 239, 4, 46, "Subsection",ExpressionUUID->"50590707-fde7-488d-963b-7e96ce6483bd"],
Cell[CellGroupData[{
Cell[196705, 5091, 156, 3, 70, "Subsubsection",ExpressionUUID->"057ea6c1-d4bd-4f2f-879d-6620025b80a2"],
Cell[196864, 5096, 984, 18, 172, "Code",ExpressionUUID->"0b6cdca0-bcbe-402f-8396-fd45f0427948"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197885, 5119, 163, 3, 70, "Subsubsection",ExpressionUUID->"aef6bb57-aae0-4654-af06-453d3cace02c"],
Cell[198051, 5124, 6727, 149, 668, "Code",ExpressionUUID->"0769eb6a-9477-410a-8dc8-53ab14b2b01e"],
Cell[204781, 5275, 2860, 66, 172, "Code",ExpressionUUID->"705ad888-5e07-4179-823a-ffbf4922774c"],
Cell[207644, 5343, 5083, 102, 592, "Code",ExpressionUUID->"646d2b5e-f6f9-41ff-92a3-892caf83f8a8"],
Cell[212730, 5447, 1887, 45, 172, "Code",ExpressionUUID->"b55eaa50-1be8-46c3-ace2-4ff1fabda70b"],
Cell[214620, 5494, 2841, 70, 412, "Code",ExpressionUUID->"86861291-aa26-4a8e-8fce-3fc2138099e0"],
Cell[217464, 5566, 4618, 90, 532, "Code",ExpressionUUID->"e6ff9756-6cac-4bc7-8f6c-2d75fae7fa4b"],
Cell[222085, 5658, 1404, 28, 112, "Code",ExpressionUUID->"a28b7234-f9ea-4dc7-8937-3bc7d7b411c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223526, 5691, 157, 3, 70, "Subsubsection",ExpressionUUID->"c2a06834-bd7c-4523-8de3-b1ff3f3ec6aa"],
Cell[223686, 5696, 886, 20, 81, "Code",ExpressionUUID->"0fbe3a77-6c75-4b6a-8f3c-10391b4e5d68"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[224621, 5722, 293, 5, 46, "Subsection",ExpressionUUID->"68a5ea3f-91cd-4d3c-99df-26946fe640a9"],
Cell[CellGroupData[{
Cell[224939, 5731, 156, 3, 165, "Subsubsection",ExpressionUUID->"2160da0c-6fc6-4f38-b84d-c1ae5237caf6"],
Cell[225098, 5736, 1188, 20, 415, "Code",ExpressionUUID->"058cfd5d-22f7-42b8-98cb-7f3281744a4f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226323, 5761, 163, 3, 165, "Subsubsection",ExpressionUUID->"8d747166-254e-43c2-a13a-31fc250441d4"],
Cell[226489, 5766, 7953, 178, 1846, "Code",ExpressionUUID->"fccb2e1d-a5d1-4620-aee0-fee3f7649c09"],
Cell[234445, 5946, 4707, 119, 1587, "Code",ExpressionUUID->"e5b6b9b1-5322-476f-b437-8f60a35d8e0b"],
Cell[239155, 6067, 5654, 118, 1587, "Code",ExpressionUUID->"d83813d2-8ab0-4208-9097-1bad2412f669"],
Cell[244812, 6187, 2140, 50, 518, "Code",ExpressionUUID->"c7568b08-d664-4379-9b83-a81ea95d3584"],
Cell[246955, 6239, 3563, 85, 1251, "Code",ExpressionUUID->"9f09e03d-bcd2-4273-b844-a36c520d923f"],
Cell[250521, 6326, 6430, 133, 2166, "Code",ExpressionUUID->"63af9682-547d-493e-8fd1-b70bdae59baf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256988, 6464, 160, 3, 210, "Subsubsection",ExpressionUUID->"a5017321-4655-42e5-a681-3751e46e87a7"],
Cell[257151, 6469, 892, 20, 243, "Code",ExpressionUUID->"da6716aa-2588-4a38-97df-8e751b4e61f8"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[258092, 6495, 261, 4, 46, "Subsection",ExpressionUUID->"77ac0e8f-57d0-4044-93f4-0d9998e7dea8"],
Cell[CellGroupData[{
Cell[258378, 6503, 158, 3, 200, "Subsubsection",ExpressionUUID->"35735037-467a-4dc5-9119-1980613239fa"],
Cell[258539, 6508, 387, 9, 335, "Code",ExpressionUUID->"a7ab6946-7961-4858-9b72-196f64686d24"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258963, 6522, 163, 3, 200, "Subsubsection",ExpressionUUID->"f50788cd-9397-45dd-ac12-8e2936df37ca"],
Cell[259129, 6527, 1193, 29, 335, "Code",ExpressionUUID->"9031e534-1577-4d94-b5f8-b07a89ed0e43"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[260371, 6562, 160, 3, 46, "Subsection",ExpressionUUID->"54d234c6-a413-4897-ba82-d9ded5620d39"],
Cell[260534, 6567, 1366, 41, 126, "Code",ExpressionUUID->"20b7acb1-2d86-41d8-ad83-0ac7a231f86d"]
}, Closed]],
Cell[CellGroupData[{
Cell[261937, 6613, 154, 3, 46, "Subsection",ExpressionUUID->"3400c6dc-4cea-4bdd-bbfc-22ca704d8fae"],
Cell[CellGroupData[{
Cell[262116, 6620, 160, 3, 27065, "Subsubsection",ExpressionUUID->"e435ab6f-1759-4abd-b148-4d8aaacbd581"],
Cell[262279, 6625, 267, 7, 44452, "Code",ExpressionUUID->"00046ded-d472-4971-add5-0d497411c4d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[262583, 6637, 163, 3, 27065, "Subsubsection",ExpressionUUID->"d95ef452-6e79-45d0-9777-087feb7fd1bf"],
Cell[262749, 6642, 199, 5, 31938, "Code",ExpressionUUID->"3db227ac-b126-4796-abe6-3a7b94bd7ec3"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[262997, 6653, 156, 3, 46, "Subsection",ExpressionUUID->"3a213472-3450-4976-9e39-a2bb5395ed47"],
Cell[CellGroupData[{
Cell[263178, 6660, 156, 3, 70, "Subsubsection",ExpressionUUID->"8158ae23-a0f7-4262-b827-7958708edd72"],
Cell[263337, 6665, 677, 13, 112, "Code",ExpressionUUID->"6ee6c4c7-5ad7-43cb-8919-5df685457786"]
}, Open  ]],
Cell[CellGroupData[{
Cell[264051, 6683, 163, 3, 70, "Subsubsection",ExpressionUUID->"7ea9b595-10f0-415d-9057-ceeec4ba6ae6"],
Cell[264217, 6688, 972, 25, 112, "Code",ExpressionUUID->"a00631cd-4493-4998-a32a-a12bd1a0cb2e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[265238, 6719, 157, 3, 46, "Subsection",ExpressionUUID->"26931e65-f1d9-40a9-aef3-a32b9dadf192"],
Cell[CellGroupData[{
Cell[265420, 6726, 156, 3, 27065, "Subsubsection",ExpressionUUID->"064334f2-ccb2-4346-a524-37ded89eeb0e"],
Cell[265579, 6731, 469, 10, 44452, "Code",ExpressionUUID->"c424ccfc-1589-4052-9bc6-85d2f0301671"]
}, Open  ]],
Cell[CellGroupData[{
Cell[266085, 6746, 163, 3, 27065, "Subsubsection",ExpressionUUID->"0818eecb-d15a-40ef-96a1-f6c3ecc6c265"],
Cell[266251, 6751, 378, 10, 31938, "Code",ExpressionUUID->"e3051963-851b-4e9f-9057-0462ce01abe9"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[266678, 6767, 166, 3, 46, "Subsection",ExpressionUUID->"41535405-13f0-43c8-abf7-232a2b08a557"],
Cell[CellGroupData[{
Cell[266869, 6774, 158, 3, 27065, "Subsubsection",ExpressionUUID->"304729b3-49ab-4e16-befa-19c0705e4516"],
Cell[267030, 6779, 438, 10, 44452, "Code",ExpressionUUID->"6eb3143a-a579-443f-9b69-84be634bf643"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267505, 6794, 163, 3, 27065, "Subsubsection",ExpressionUUID->"7f6a9c88-3830-4106-9e1d-fcc83c0bef7b"],
Cell[267671, 6799, 529, 15, 31938, "Code",ExpressionUUID->"8a3f6984-a0d4-4ae1-8ee1-62ca495a1ee8"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[268249, 6820, 289, 5, 46, "Subsection",ExpressionUUID->"5d732cf5-1cb8-473f-b845-d7d4752231d7"],
Cell[CellGroupData[{
Cell[268563, 6829, 158, 3, 200, "Subsubsection",ExpressionUUID->"1e8c604a-e04e-413d-8f8e-c6c58ef2ac7e"],
Cell[268724, 6834, 909, 16, 516, "Code",ExpressionUUID->"ecf0cbdf-b649-469a-9d10-26ba9393b578"]
}, Open  ]],
Cell[CellGroupData[{
Cell[269670, 6855, 163, 3, 200, "Subsubsection",ExpressionUUID->"10b840c2-ce7f-4002-aa26-90c1f15c3a50"],
Cell[269836, 6860, 1286, 36, 335, "Code",ExpressionUUID->"ae3cd843-d7a8-4c4d-ae61-e5d4f60f722d"],
Cell[271125, 6898, 2490, 60, 608, "Code",ExpressionUUID->"7e79943d-9d59-42be-8460-da92c2a595f5"],
Cell[273618, 6960, 1354, 34, 425, "Code",ExpressionUUID->"af5c363e-acef-4011-8f1f-22f7aa7dba13"],
Cell[274975, 6996, 1699, 45, 425, "Code",ExpressionUUID->"c69231c6-babe-46c0-9f6d-c035ee544233"],
Cell[276677, 7043, 1011, 26, 425, "Code",ExpressionUUID->"9b1d4dd8-a7f6-4b36-9834-ea05fd925164"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[277737, 7075, 287, 5, 46, "Subsection",ExpressionUUID->"10ccc410-b16f-498a-aa76-1374362a5d2a"],
Cell[CellGroupData[{
Cell[278049, 7084, 158, 3, 200, "Subsubsection",ExpressionUUID->"e2c17728-92e0-424d-80f5-a505e53d744d"],
Cell[278210, 7089, 909, 16, 516, "Code",ExpressionUUID->"4cf81534-36ff-4f41-b7d6-faf67e18651f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279156, 7110, 163, 3, 200, "Subsubsection",ExpressionUUID->"d45ac66e-9352-419c-9987-9a21cc9daada"],
Cell[279322, 7115, 1284, 36, 335, "Code",ExpressionUUID->"906e25eb-0859-4a27-a478-cfe9e7bd15b0"],
Cell[280609, 7153, 2421, 59, 608, "Code",ExpressionUUID->"9fcc4916-5cd0-49ab-9214-b2952034b5ff"],
Cell[283033, 7214, 1067, 28, 425, "Code",ExpressionUUID->"7aca4b28-dffd-4f81-aeea-d77b61024115"],
Cell[284103, 7244, 1674, 44, 425, "Code",ExpressionUUID->"b1ecf1b6-1b37-48f7-bcac-aeb9e5c955bb"],
Cell[285780, 7290, 1061, 27, 425, "Code",ExpressionUUID->"5d70f647-5b16-4f69-ad31-ec65525b0b6f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[286890, 7323, 286, 5, 46, "Subsection",ExpressionUUID->"dba77544-15b5-4c31-b647-34aef9021138"],
Cell[CellGroupData[{
Cell[287201, 7332, 158, 3, 200, "Subsubsection",ExpressionUUID->"bc448c71-90f1-43cd-8265-f12533926ae3"],
Cell[287362, 7337, 892, 16, 516, "Code",ExpressionUUID->"e8f020e9-ac70-45f9-b747-ebcd2487cd07"]
}, Open  ]],
Cell[CellGroupData[{
Cell[288291, 7358, 163, 3, 200, "Subsubsection",ExpressionUUID->"66cd79b0-5b42-45e4-8a6f-824c01279ac3"],
Cell[288457, 7363, 1286, 36, 335, "Code",ExpressionUUID->"13eb846e-624c-4b2d-9acc-6c96d3e62366"],
Cell[289746, 7401, 2395, 59, 608, "Code",ExpressionUUID->"de8083a9-38cf-4405-ae42-a382bce0dda1"],
Cell[292144, 7462, 1304, 32, 425, "Code",ExpressionUUID->"1ed622d3-70c3-40bd-81de-4f169cc79855"],
Cell[293451, 7496, 1853, 50, 425, "Code",ExpressionUUID->"27cce7e4-3e73-4b67-a0d7-1f34ca251475"],
Cell[295307, 7548, 1117, 28, 425, "Code",ExpressionUUID->"52da6e04-6d59-48ce-90d6-6496b77d7bf4"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[296473, 7582, 239, 4, 46, "Subsection",ExpressionUUID->"af3caa1b-b477-4ed5-80f4-0cf2cd168d6d"],
Cell[CellGroupData[{
Cell[296737, 7590, 156, 3, 70, "Subsubsection",ExpressionUUID->"7fa46a7d-56e2-4f6c-8842-e340f8fcc10c"],
Cell[296896, 7595, 927, 16, 172, "Code",ExpressionUUID->"cb56d244-7189-469b-89bf-312bcee090fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[297860, 7616, 163, 3, 70, "Subsubsection",ExpressionUUID->"104058af-257f-4b8d-bcdd-9ea2200849be"],
Cell[298026, 7621, 2064, 50, 293, "Code",ExpressionUUID->"80192735-760b-41b2-9f91-0f5d95b21a04"],
Cell[300093, 7673, 2438, 60, 293, "Code",ExpressionUUID->"26021095-b484-4373-a99c-7728d3c555a2"],
Cell[302534, 7735, 1523, 43, 172, "Code",ExpressionUUID->"ce5fa5c9-9951-4a18-9093-5919b00f3539"],
Cell[304060, 7780, 645, 18, 112, "Code",ExpressionUUID->"d0e152ce-dd12-4707-89e0-bc2494b4802f"],
Cell[304708, 7800, 874, 24, 142, "Code",ExpressionUUID->"ab88e05c-e6b8-489d-937e-0340555f4711"],
Cell[305585, 7826, 948, 24, 142, "Code",ExpressionUUID->"05f4ac98-90a9-47b1-9854-83b1cf6d79b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[306570, 7855, 160, 3, 70, "Subsubsection",ExpressionUUID->"75714df9-fcce-48a1-a0fb-075dee3a2824"],
Cell[306733, 7860, 404, 11, 81, "Code",ExpressionUUID->"a1e31b93-9ed9-4c06-9718-7952fd511f4b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[307186, 7877, 263, 4, 46, "Subsection",ExpressionUUID->"6b32c6e2-297f-436a-bd9b-9ba8ec725bcc"],
Cell[CellGroupData[{
Cell[307474, 7885, 156, 3, 70, "Subsubsection",ExpressionUUID->"b4ad4ba5-4af6-45a5-b00b-a2415b5d52bd"],
Cell[307633, 7890, 928, 16, 172, "Code",ExpressionUUID->"ae4c481b-beb0-4688-909a-bbd788559142"]
}, Open  ]],
Cell[CellGroupData[{
Cell[308598, 7911, 163, 3, 70, "Subsubsection",ExpressionUUID->"4258f6e5-4f47-429a-bb48-2e5872472df2"],
Cell[308764, 7916, 2779, 58, 293, "Code",ExpressionUUID->"1db3ae77-ce1d-4eaa-90f0-3d990704b12c"],
Cell[311546, 7976, 2538, 61, 293, "Code",ExpressionUUID->"e9c5e4c6-f322-4f16-ae95-90cd36a2c260"],
Cell[314087, 8039, 1575, 44, 172, "Code",ExpressionUUID->"12c774f6-d113-4c02-bbe6-4c11f8e51327"],
Cell[315665, 8085, 643, 18, 112, "Code",ExpressionUUID->"9d075dc9-e317-44eb-90a1-6b3059869fe5"],
Cell[316311, 8105, 948, 25, 142, "Code",ExpressionUUID->"6528cfce-897f-4dd4-816e-c865a958a599"],
Cell[317262, 8132, 950, 24, 142, "Code",ExpressionUUID->"11a0b5b2-d213-4d1e-9843-0315314df536"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318249, 8161, 160, 3, 70, "Subsubsection",ExpressionUUID->"88af5868-402e-4b4d-a354-860fc96940c6"],
Cell[318412, 8166, 448, 11, 81, "Code",ExpressionUUID->"c8fee30f-0eec-456c-80a5-0a958f559064"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[318909, 8183, 242, 4, 46, "Subsection",ExpressionUUID->"8652e52c-39a8-404e-8dc0-94f6de9b8b4b"],
Cell[CellGroupData[{
Cell[319176, 8191, 156, 3, 70, "Subsubsection",ExpressionUUID->"6e22cbef-8482-49ae-bf20-b9351485e12d"],
Cell[319335, 8196, 913, 16, 172, "Code",ExpressionUUID->"df314428-4f8a-41cb-b972-7e615143ee09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[320285, 8217, 163, 3, 70, "Subsubsection",ExpressionUUID->"5c2d9894-bc06-40e6-9913-35fb7e9237fd"],
Cell[320451, 8222, 2878, 59, 293, "Code",ExpressionUUID->"a7141a8b-6c9d-47b2-86d5-f405c73d9be9"],
Cell[323332, 8283, 2621, 62, 293, "Code",ExpressionUUID->"003e78c5-8b3e-40cf-bf6e-fa272e3e3704"],
Cell[325956, 8347, 1686, 46, 172, "Code",ExpressionUUID->"a240ebe2-7568-453e-ad05-95afa4677067"],
Cell[327645, 8395, 793, 20, 112, "Code",ExpressionUUID->"a55de117-fc22-4c9a-986f-be63bf016d06"],
Cell[328441, 8417, 1050, 27, 142, "Code",ExpressionUUID->"ddc546e2-1c84-4279-8ed4-61e7158cd249"],
Cell[329494, 8446, 904, 24, 142, "Code",ExpressionUUID->"a132fa67-c8c6-4e87-95ad-452f9266bb04"]
}, Open  ]],
Cell[CellGroupData[{
Cell[330435, 8475, 160, 3, 70, "Subsubsection",ExpressionUUID->"33603662-f101-4c4c-b2cc-559d7c1e6673"],
Cell[330598, 8480, 453, 11, 81, "Code",ExpressionUUID->"6bdf0d36-38db-40e1-9415-ba62871ee5af"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[331100, 8497, 87, 0, 46, "Subsection",ExpressionUUID->"e446d061-1f10-4ad3-afa5-bbdc051d700e"],
Cell[CellGroupData[{
Cell[331212, 8501, 155, 3, 200, "Subsubsection",ExpressionUUID->"6a724745-8128-4254-a911-46d17da30227"],
Cell[331370, 8506, 387, 8, 335, "Code",ExpressionUUID->"9cd22eaa-f358-4fad-acdd-d640ce887a46"]
}, Open  ]],
Cell[CellGroupData[{
Cell[331794, 8519, 163, 3, 200, "Subsubsection",ExpressionUUID->"48d3746e-12c5-4044-9077-c77daf7c3550"],
Cell[331960, 8524, 5466, 131, 2133, "Code",ExpressionUUID->"b772a55d-9174-402b-bfc7-5d2fa90999d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[337463, 8660, 158, 3, 200, "Subsubsection",ExpressionUUID->"c90d9638-cac2-4cde-8d92-b9530eac3dae"],
Cell[337624, 8665, 478, 12, 243, "Code",ExpressionUUID->"de15622b-e2ba-432c-abdf-3890b556ac30"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[338151, 8683, 208, 4, 46, "Subsection",ExpressionUUID->"60516b59-40e1-4b4e-8a5e-efe596b9e7c0"],
Cell[CellGroupData[{
Cell[338384, 8691, 156, 3, 70, "Subsubsection",ExpressionUUID->"bf592729-4066-4fe5-aed2-8c17d934f878"],
Cell[338543, 8696, 588, 11, 112, "Code",ExpressionUUID->"e09046af-8210-435a-87d8-4057977e67fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[339168, 8712, 163, 3, 70, "Subsubsection",ExpressionUUID->"8c04a195-f9fc-4c92-ae02-aa48a7d0c794"],
Cell[339334, 8717, 10316, 243, 901, "Code",ExpressionUUID->"9fb01c63-7ca2-4656-b12b-a27a2778d039"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[349699, 8966, 89, 0, 46, "Subsection",ExpressionUUID->"dbc19b57-acbc-4764-acfc-8b642d35e469"],
Cell[CellGroupData[{
Cell[349813, 8970, 157, 3, 168, "Subsubsection",ExpressionUUID->"6050bab0-fabf-4c2f-8cdd-a3c73afbc653"],
Cell[349973, 8975, 406, 9, 272, "Code",ExpressionUUID->"15b54065-656b-46f6-9678-438f35618eb7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[350416, 8989, 163, 3, 168, "Subsubsection",ExpressionUUID->"db2147a8-c31b-42c6-8206-5d28b0715211"],
Cell[350582, 8994, 388, 12, 196, "Code",ExpressionUUID->"89c82ee0-f421-4f1c-99c5-655222a347ff"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[351019, 9012, 88, 0, 46, "Subsection",ExpressionUUID->"7b4a298a-8bac-4698-9931-d6c4228734be"],
Cell[CellGroupData[{
Cell[351132, 9016, 157, 3, 27065, "Subsubsection",ExpressionUUID->"def3dd9a-da6f-4053-abc4-97b5d0589a44"],
Cell[351292, 9021, 416, 10, 44452, "Code",ExpressionUUID->"cae004cd-15a3-4722-805d-16de6d83c2ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351745, 9036, 163, 3, 27065, "Subsubsection",ExpressionUUID->"e25e6d1b-e579-4d62-831e-9eb3989c060a"],
Cell[351911, 9041, 359, 10, 31938, "Code",ExpressionUUID->"17d323c9-412f-437e-926f-b78b9d3849ab"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[352319, 9057, 87, 0, 46, "Subsection",ExpressionUUID->"4d369ef8-a66c-4465-9714-81c6bc9efeaa"],
Cell[CellGroupData[{
Cell[352431, 9061, 156, 3, 27065, "Subsubsection",ExpressionUUID->"22133e83-09a3-4275-adc8-eefb9d295c9a"],
Cell[352590, 9066, 409, 9, 44452, "Code",ExpressionUUID->"88f0321c-024d-4066-ae8e-1c09df633ccb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[353036, 9080, 163, 3, 27065, "Subsubsection",ExpressionUUID->"961541ad-3072-4662-9f01-f66af3172004"],
Cell[353202, 9085, 357, 10, 31938, "Code",ExpressionUUID->"571b7fd4-c4c8-48a6-9d5f-663a4f933956"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[353608, 9101, 162, 3, 46, "Subsection",ExpressionUUID->"a489b1c5-8bdb-4715-bd84-b125fa26f01f"],
Cell[CellGroupData[{
Cell[353795, 9108, 156, 3, 210, "Subsubsection",ExpressionUUID->"8b456804-31e6-4dee-9d52-e058f8351fb4"],
Cell[353954, 9113, 379, 9, 335, "Code",ExpressionUUID->"579d6557-2764-4d7a-aa67-0f5ba65a4d84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[354370, 9127, 163, 3, 210, "Subsubsection",ExpressionUUID->"a2bd03ad-0765-45fb-a594-f541743485ed"],
Cell[354536, 9132, 436, 12, 243, "Code",ExpressionUUID->"623c72e1-7841-426d-ab52-60be8250f4d8"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[355021, 9150, 145, 3, 46, "Subsection",ExpressionUUID->"05cc40a3-d46f-4798-9061-50cb49951b83"],
Cell[CellGroupData[{
Cell[355191, 9157, 156, 3, 27065, "Subsubsection",ExpressionUUID->"0d4c28e0-1feb-459b-8675-05f792e72c14"],
Cell[355350, 9162, 444, 10, 44452, "Code",ExpressionUUID->"bc10e9da-d019-455f-9695-8197fe912994"]
}, Open  ]],
Cell[CellGroupData[{
Cell[355831, 9177, 163, 3, 27065, "Subsubsection",ExpressionUUID->"b8d7ae27-8651-4594-8e69-485ebd13a6ee"],
Cell[355997, 9182, 524, 13, 31938, "Code",ExpressionUUID->"7b5bf8fb-a0c6-4bac-bfbf-fbc0f8b13fc7"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[356570, 9201, 140, 3, 46, "Subsection",ExpressionUUID->"f2869814-5ebf-4166-aca9-c0aed4dc9372"],
Cell[CellGroupData[{
Cell[356735, 9208, 158, 3, 210, "Subsubsection",ExpressionUUID->"6811cefc-ca10-4b63-a042-33afe2d3d750"],
Cell[356896, 9213, 471, 10, 335, "Code",ExpressionUUID->"07e778bb-8cbd-4ddd-a62b-2d01136d35ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[357404, 9228, 163, 3, 210, "Subsubsection",ExpressionUUID->"d5a64abb-7ff4-433a-8d20-932280a4bd30"],
Cell[357570, 9233, 756, 18, 243, "Code",ExpressionUUID->"425acadd-6c82-489f-ad9b-f7d3bd8d834f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[358375, 9257, 239, 4, 46, "Subsection",ExpressionUUID->"bae94a03-8229-46b7-aa9b-9d10f5d22f4f"],
Cell[CellGroupData[{
Cell[358639, 9265, 156, 3, 210, "Subsubsection",ExpressionUUID->"8e146a52-66d5-4776-9fa4-e10ad1fc692e"],
Cell[358798, 9270, 2261, 36, 702, "Code",ExpressionUUID->"78b79a9e-18b2-41da-9bf5-e4944b4193a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[361096, 9311, 163, 3, 210, "Subsubsection",ExpressionUUID->"4de241e4-724f-4f91-a0fe-1436901379ef"],
Cell[361262, 9316, 1220, 30, 243, "Code",ExpressionUUID->"cbbf181c-1cbf-4a10-bf30-7517becc6a6b"],
Cell[362485, 9348, 3400, 80, 1160, "Code",ExpressionUUID->"cea4cd3d-d493-4744-bfa8-ceed2a41c344"],
Cell[365888, 9430, 1197, 25, 243, "Code",ExpressionUUID->"e8aeb53e-507f-401f-9a38-530527e3896d"],
Cell[367088, 9457, 1179, 31, 243, "Code",ExpressionUUID->"afc16961-ef64-4afa-aefe-ea724d2a04a1"],
Cell[368270, 9490, 1117, 28, 610, "Code",ExpressionUUID->"c3c949c9-442e-4fb2-b78b-95005b0d47e1"],
Cell[369390, 9520, 416, 7, 243, "Code",ExpressionUUID->"8d92236c-d0f6-4cee-9e72-5050e8491f47"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[369855, 9533, 163, 3, 46, "Subsection",ExpressionUUID->"e9079f1a-3118-498f-89b8-003be029bf5a"],
Cell[CellGroupData[{
Cell[370043, 9540, 156, 3, 56, "Subsubsection",ExpressionUUID->"6247a4ff-6535-4674-b2d8-0b5b7437f27d"],
Cell[370202, 9545, 485, 9, 90, "Code",ExpressionUUID->"56d655dd-c463-447f-928f-034d1fb8157c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[370724, 9559, 161, 3, 56, "Subsubsection",ExpressionUUID->"51a35c9c-3d2d-4c56-8a7d-aa695d4a1cf9"],
Cell[370888, 9564, 621, 18, 69, "Code",ExpressionUUID->"7000f0c0-3a3d-41e6-a874-62f507447f8d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[371558, 9588, 133, 3, 46, "Subsection",ExpressionUUID->"265feb73-edbc-4eda-acf1-401ae4c3d978"],
Cell[CellGroupData[{
Cell[371716, 9595, 158, 3, 200, "Subsubsection",ExpressionUUID->"2f5b5727-b5c7-4854-943d-58f380342fcf"],
Cell[371877, 9600, 406, 9, 335, "Code",ExpressionUUID->"050e3417-2d54-4111-8d51-3c61d2142acf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[372320, 9614, 163, 3, 200, "Subsubsection",ExpressionUUID->"041fcc10-cea8-4003-9d95-71c31e82084b"],
Cell[372486, 9619, 723, 19, 243, "Code",ExpressionUUID->"6be2eba5-6ea8-44e8-a150-3eae921bdd5e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[373258, 9644, 167, 3, 46, "Subsection",ExpressionUUID->"b9c8c0d0-7d3d-4f56-97ab-81eeaa6fa8a4"],
Cell[CellGroupData[{
Cell[373450, 9651, 156, 3, 70, "Subsubsection",ExpressionUUID->"d8bee110-e2fc-4282-aa42-f0641a82229a"],
Cell[373609, 9656, 454, 10, 81, "Code",ExpressionUUID->"c5ad63d9-d1b7-4ccf-911f-013f46bbb3db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[374100, 9671, 163, 3, 70, "Subsubsection",ExpressionUUID->"2a914011-f574-4a5e-92fe-50ba93e2acc9"],
Cell[374266, 9676, 1117, 27, 83, "Code",ExpressionUUID->"b953d438-bd57-4d04-ac88-3b8e1106cff9"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[375432, 9709, 161, 3, 46, "Subsection",ExpressionUUID->"4c71738a-9ffe-4d3d-93c8-89aff95bbf31"],
Cell[CellGroupData[{
Cell[375618, 9716, 158, 3, 210, "Subsubsection",ExpressionUUID->"0922e993-3254-47e0-80a0-e6e07181f648"],
Cell[375779, 9721, 393, 9, 335, "Code",ExpressionUUID->"d01240db-d4d3-4705-9b7f-1eb63ac29ce1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[376209, 9735, 163, 3, 210, "Subsubsection",ExpressionUUID->"3c50faac-4e30-4e65-8e9c-04659770850b"],
Cell[376375, 9740, 379, 10, 243, "Code",ExpressionUUID->"89dbd965-adae-4c0a-b1c8-29f90f747183"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[376803, 9756, 187, 3, 46, "Subsection",ExpressionUUID->"757509bb-1f88-4aa4-b326-77026ab687ad"],
Cell[CellGroupData[{
Cell[377015, 9763, 158, 3, 70, "Subsubsection",ExpressionUUID->"8502af78-66a1-47af-a791-39c234f7b24b"],
Cell[377176, 9768, 668, 12, 142, "Code",ExpressionUUID->"1325ea7e-989d-4359-aa38-7257520f2711"]
}, Open  ]],
Cell[CellGroupData[{
Cell[377881, 9785, 163, 3, 70, "Subsubsection",ExpressionUUID->"a56ee9fa-2b1a-4510-9038-ebdf5b3817cd"],
Cell[378047, 9790, 2941, 69, 562, "Code",ExpressionUUID->"7601c93d-d640-46b5-99c2-fbe819b0bd13"],
Cell[380991, 9861, 461, 12, 81, "Code",ExpressionUUID->"11e77ce3-32d0-48d4-98c7-57e896ff9cf4"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[381501, 9879, 139, 3, 46, "Subsection",ExpressionUUID->"cf7e94f1-d30e-4145-bfbb-48be937a284f"],
Cell[CellGroupData[{
Cell[381665, 9886, 156, 3, 27065, "Subsubsection",ExpressionUUID->"8c4228fa-ea53-4b81-8da3-e8fe7a85d0f2"],
Cell[381824, 9891, 796, 14, 56031, "Code",ExpressionUUID->"c72a7a08-52d0-4395-a9b2-c767e32aab0d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[382657, 9910, 163, 3, 27065, "Subsubsection",ExpressionUUID->"fec384f4-ae34-42af-a93f-2194a4ab2f2e"],
Cell[382823, 9915, 2607, 78, 56031, "Code",ExpressionUUID->"162ea259-d218-49e2-bf7b-e9f6bce6d318"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[385479, 9999, 213, 4, 46, "Subsection",ExpressionUUID->"58e1e633-fe5d-4d3c-9b11-8c4e58e8844c"],
Cell[CellGroupData[{
Cell[385717, 10007, 156, 3, 56, "Subsubsection",ExpressionUUID->"6ff71524-c9d4-40e3-aaf9-b25afa3db46e"],
Cell[385876, 10012, 751, 14, 114, "Code",ExpressionUUID->"43bf5dd4-e4d4-4e46-827a-ff498da15827"]
}, Open  ]],
Cell[CellGroupData[{
Cell[386664, 10031, 163, 3, 56, "Subsubsection",ExpressionUUID->"1c416056-97e9-4324-9523-d8f9ef07cfc8"],
Cell[386830, 10036, 1554, 45, 114, "Code",ExpressionUUID->"1a6452ed-75ea-4c27-82d9-85d5292300fb"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[388433, 10087, 211, 4, 46, "Subsection",ExpressionUUID->"add7cbe2-a15d-414a-9f7d-dd3b36252b31"],
Cell[CellGroupData[{
Cell[388669, 10095, 158, 3, 56, "Subsubsection",ExpressionUUID->"1192edd3-8d96-45d5-8088-1a4d5dfd450f"],
Cell[388830, 10100, 573, 11, 90, "Code",ExpressionUUID->"dc9db62f-8c8c-4744-9820-f78777c79417"]
}, Open  ]],
Cell[CellGroupData[{
Cell[389440, 10116, 163, 3, 56, "Subsubsection",ExpressionUUID->"6025f154-ba41-47ef-b69c-d68239ee368e"],
Cell[389606, 10121, 765, 18, 65, "Code",ExpressionUUID->"7d4be5f3-48ed-4cf0-ad3c-dcc7dca4e64b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[390420, 10145, 163, 3, 46, "Subsection",ExpressionUUID->"9db61aaf-d555-4ada-b650-1011e65458ce"],
Cell[CellGroupData[{
Cell[390608, 10152, 155, 3, 56, "Subsubsection",ExpressionUUID->"1b9c6c67-5a66-4efd-a8ae-077e4ba9c40e"],
Cell[390766, 10157, 758, 14, 114, "Code",ExpressionUUID->"5cb9aad8-cfe8-4f48-912b-79cc82abea99"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391561, 10176, 163, 3, 56, "Subsubsection",ExpressionUUID->"adede948-5996-4b39-bee5-61ff001f4036"],
Cell[391727, 10181, 1505, 44, 114, "Code",ExpressionUUID->"254b370f-5310-4803-9a48-0ddd4ebe581e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[393281, 10231, 176, 3, 46, "Subsection",ExpressionUUID->"be38bb34-4efd-4bbf-a3b3-fbf17f6fd155"],
Cell[CellGroupData[{
Cell[393482, 10238, 158, 3, 210, "Subsubsection",ExpressionUUID->"012e14e1-b3f6-4076-9844-fbc1cace0b17"],
Cell[393643, 10243, 557, 11, 335, "Code",ExpressionUUID->"3a021a1e-1628-45c2-9e9d-17e0d3d8abba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[394237, 10259, 163, 3, 210, "Subsubsection",ExpressionUUID->"1dc51ca1-eccd-48b3-8072-39d77319aa61"],
Cell[394403, 10264, 330, 9, 243, "Code",ExpressionUUID->"3ef8ad6f-3e09-4e28-912a-9c7818bffbc9"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[394782, 10279, 222, 4, 46, "Subsection",ExpressionUUID->"cadd76c0-6fbd-469d-bf9b-9036076b0202"],
Cell[CellGroupData[{
Cell[395029, 10287, 158, 3, 210, "Subsubsection",ExpressionUUID->"a5caa320-97c4-4f44-9fc7-2dc2f8b7e8ec"],
Cell[395190, 10292, 680, 13, 335, "Code",ExpressionUUID->"93ae4386-3408-4463-9580-ecea87b2741e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[395907, 10310, 160, 3, 210, "Subsubsection",ExpressionUUID->"9f205721-a4ad-4476-8618-23afdc5fecc2"],
Cell[396070, 10315, 2107, 55, 610, "Code",ExpressionUUID->"142376db-638e-4ab9-8146-6b690f603855"]
}, Open  ]],
Cell[CellGroupData[{
Cell[398214, 10375, 160, 3, 210, "Subsubsection",ExpressionUUID->"2fba3d4a-2513-4b50-ab7d-6222588a1b4d"],
Cell[398377, 10380, 266, 7, 243, "Code",ExpressionUUID->"46b3f9a3-02c9-4ad4-b69a-a709e5ff38ab"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[398692, 10393, 173, 3, 46, "Subsection",ExpressionUUID->"4cc5017c-4f25-455f-a836-a40431f4d51e"],
Cell[CellGroupData[{
Cell[398890, 10400, 157, 3, 70, "Subsubsection",ExpressionUUID->"af7c6a08-3016-4486-b00c-7a71393e9df6"],
Cell[399050, 10405, 521, 10, 112, "Code",ExpressionUUID->"d0f02ec5-c407-4dd4-8b0d-61ae656ea055"]
}, Open  ]],
Cell[CellGroupData[{
Cell[399608, 10420, 163, 3, 70, "Subsubsection",ExpressionUUID->"ae63d2b8-e578-4941-b8f3-e09ce4d6b6eb"],
Cell[399774, 10425, 10199, 277, 930, "Code",ExpressionUUID->"3b2dcfe8-3773-49e3-9cd8-6031ff93b2fd"],
Cell[409976, 10704, 9442, 249, 775, "Code",ExpressionUUID->"08ad98d7-7b39-4d8d-a745-5cc81f20119d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[419467, 10959, 129, 3, 46, "Subsection",ExpressionUUID->"2272c246-6e3f-44f8-a579-3c020e95e38c"],
Cell[CellGroupData[{
Cell[419621, 10966, 156, 3, 70, "Subsubsection",ExpressionUUID->"80389554-1b6f-4daa-970b-dd9ac3cf8867"],
Cell[419780, 10971, 674, 13, 142, "Code",ExpressionUUID->"944e72b4-8d3c-4149-aedf-9f2e7ba88a7b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[420491, 10989, 163, 3, 70, "Subsubsection",ExpressionUUID->"d9219a55-5c6e-48ed-99af-defc3c8b5a58"],
Cell[420657, 10994, 6523, 156, 833, "Code",ExpressionUUID->"6d1f288d-c23c-419c-b3e5-f7b69b515f09"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[427229, 11156, 136, 3, 46, "Subsection",ExpressionUUID->"175ed360-d00d-46ea-9b47-689e813eafc5"],
Cell[CellGroupData[{
Cell[427390, 11163, 158, 3, 70, "Subsubsection",ExpressionUUID->"96f203ed-ecd7-419e-844f-2b25610e20e9"],
Cell[427551, 11168, 572, 11, 142, "Code",ExpressionUUID->"f97b6322-c8a4-40a1-8fec-da21965ed294"]
}, Open  ]],
Cell[CellGroupData[{
Cell[428160, 11184, 163, 3, 70, "Subsubsection",ExpressionUUID->"cc2aa371-a2fd-4ad8-a3c9-07e3eac1d6a2"],
Cell[428326, 11189, 2562, 56, 262, "Code",ExpressionUUID->"79f96a6b-adb8-454f-ba4d-a48cd876d0d0"],
Cell[430891, 11247, 357, 10, 81, "Code",ExpressionUUID->"fa2fd9b2-3daf-44c8-bb78-326c14eaabf1"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[431297, 11263, 134, 3, 46, "Subsection",ExpressionUUID->"0f4ee5f0-78d3-438b-9e68-f44b978cad2c"],
Cell[CellGroupData[{
Cell[431456, 11270, 155, 3, 70, "Subsubsection",ExpressionUUID->"0ada3a19-935d-4994-93a6-4ee6fc7c197d"],
Cell[431614, 11275, 566, 11, 142, "Code",ExpressionUUID->"ab4225af-cac5-483a-b364-b8f181b308f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[432217, 11291, 163, 3, 70, "Subsubsection",ExpressionUUID->"63caa562-7b57-4ce1-a01d-bafdd29ee17a"],
Cell[432383, 11296, 1795, 40, 202, "Code",ExpressionUUID->"8af99e05-5103-47fc-ba8e-67543d0fb65d"],
Cell[434181, 11338, 355, 10, 81, "Code",ExpressionUUID->"a6225ac8-69a4-49f4-9780-8d18469a2256"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[434585, 11354, 93, 0, 46, "Subsection",ExpressionUUID->"5b9f956d-b9a1-4ff3-9967-3ca5fb1bd1ee"],
Cell[CellGroupData[{
Cell[434703, 11358, 156, 3, 70, "Subsubsection",ExpressionUUID->"5f6cb098-7071-4ff6-9497-70354a4a1e15"],
Cell[434862, 11363, 604, 11, 142, "Code",ExpressionUUID->"4c7b35ec-eafd-48c6-8671-8f8fa5f4a2ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[435503, 11379, 163, 3, 70, "Subsubsection",ExpressionUUID->"ae8c58ba-da38-497b-8f55-8ecabc78bb56"],
Cell[435669, 11384, 20863, 474, 1132, "Code",ExpressionUUID->"30b00826-7b67-4a64-98e6-eaaf2e957a06"],
Cell[456535, 11860, 761, 21, 81, "Code",ExpressionUUID->"14e7d230-462c-47e7-ad29-dafcd44d8ac9"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[457345, 11887, 135, 3, 46, "Subsection",ExpressionUUID->"9294cf2e-5be7-4cd7-b934-40d4e5a604b2"],
Cell[CellGroupData[{
Cell[457505, 11894, 156, 3, 70, "Subsubsection",ExpressionUUID->"806ba4c0-553e-4709-8294-e936c9549dee"],
Cell[457664, 11899, 383, 9, 112, "Code",ExpressionUUID->"e110d418-7b14-4654-b453-0a6f2547bde3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[458084, 11913, 163, 3, 70, "Subsubsection",ExpressionUUID->"32d3b364-949d-4e79-b260-2610872966b6"],
Cell[458250, 11918, 1544, 36, 202, "Code",ExpressionUUID->"3c6e4a63-ac34-4438-a90f-3c76391ed5c3"],
Cell[459797, 11956, 2721, 67, 391, "Code",ExpressionUUID->"99a6197a-d366-4ccd-aa10-aaa9ebee68b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[462555, 12028, 159, 3, 70, "Subsubsection",ExpressionUUID->"b8e896c1-e598-4b67-a6be-93ce68c3a632"],
Cell[462717, 12033, 446, 9, 81, "Code",ExpressionUUID->"c98cea5f-266d-415d-8365-d69576849b5b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[463212, 12048, 133, 3, 46, "Subsection",ExpressionUUID->"b60bf42e-b7b5-4a26-950e-1d733b8ee6ac"],
Cell[CellGroupData[{
Cell[463370, 12055, 158, 3, 70, "Subsubsection",ExpressionUUID->"bbc209f6-dfea-409f-96f4-9ff7be9855f4"],
Cell[463531, 12060, 353, 9, 112, "Code",ExpressionUUID->"99c2788a-8643-4792-b134-1f9caaae8d9f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[463921, 12074, 163, 3, 70, "Subsubsection",ExpressionUUID->"8ea2f9ef-48da-462c-b2a7-240c4bbdaa5f"],
Cell[464087, 12079, 1568, 37, 202, "Code",ExpressionUUID->"ff3cfd44-6236-44dc-859c-fb688445ca7e"],
Cell[465658, 12118, 3418, 82, 391, "Code",ExpressionUUID->"5ae73c1f-ff17-4d97-8f08-cdf81a14b853"]
}, Open  ]],
Cell[CellGroupData[{
Cell[469113, 12205, 159, 3, 70, "Subsubsection",ExpressionUUID->"6395016d-abf8-4b6f-b973-4c3066ca85ac"],
Cell[469275, 12210, 394, 9, 81, "Code",ExpressionUUID->"a12f20c0-cc5f-4d02-adfd-a2031d79487e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[469718, 12225, 163, 3, 46, "Subsection",ExpressionUUID->"28edf3c2-d873-4264-9b8f-09814781b6f3"],
Cell[CellGroupData[{
Cell[469906, 12232, 156, 3, 27065, "Subsubsection",ExpressionUUID->"354c1a80-ac28-49ea-9478-b2bc96901a3f"],
Cell[470065, 12237, 432, 9, 44452, "Code",ExpressionUUID->"8c441654-cb0e-432d-9f3a-4ee70421671c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[470534, 12251, 163, 3, 27065, "Subsubsection",ExpressionUUID->"479f1f73-52e3-45e0-b7c9-7d447cfc602b"],
Cell[470700, 12256, 1301, 39, 56702, "Code",ExpressionUUID->"92e6bff0-db68-4106-81f2-e053afbe37cd"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[472050, 12301, 138, 3, 46, "Subsection",ExpressionUUID->"c29556f0-b3dc-4a54-82bd-975c81278bb0"],
Cell[CellGroupData[{
Cell[472213, 12308, 156, 3, 27065, "Subsubsection",ExpressionUUID->"9fff178f-13ff-4b33-af5b-8d15079a9376"],
Cell[472372, 12313, 351, 8, 44452, "Code",ExpressionUUID->"e32ee77c-c8ec-442a-95ec-98c0979ca118"]
}, Open  ]],
Cell[CellGroupData[{
Cell[472760, 12326, 163, 3, 27065, "Subsubsection",ExpressionUUID->"dc0516ad-dfdd-45c7-ae6d-c7860d907abf"],
Cell[472926, 12331, 1236, 36, 44663, "Code",ExpressionUUID->"7a3dae09-e320-4a86-9103-d3f873a2d20b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[474211, 12373, 167, 3, 46, "Subsection",ExpressionUUID->"e1fc9dbe-01f0-4d23-aaef-50e8b6ba0b34"],
Cell[CellGroupData[{
Cell[474403, 12380, 158, 3, 200, "Subsubsection",ExpressionUUID->"7cb22b7f-cb0c-45a6-9603-52fbfd6c1c63"],
Cell[474564, 12385, 407, 10, 335, "Code",ExpressionUUID->"135c82e7-c907-4f99-95cb-0aa756615cb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[475008, 12400, 163, 3, 200, "Subsubsection",ExpressionUUID->"32559b1c-4d9c-412b-9a2f-51cda9694d69"],
Cell[475174, 12405, 6662, 152, 1446, "Code",ExpressionUUID->"90085df8-d9b8-4865-a1de-8cc7c818573f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[481885, 12563, 157, 3, 46, "Subsection",ExpressionUUID->"960bb267-5788-4813-805f-57794c4aae84"],
Cell[CellGroupData[{
Cell[482067, 12570, 158, 3, 200, "Subsubsection",ExpressionUUID->"8a3fdfa6-d289-4b9e-bb3e-1c01d221e436"],
Cell[482228, 12575, 440, 10, 243, "Code",ExpressionUUID->"24119e3e-3a17-4116-b310-306c6ef6867b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[482705, 12590, 163, 3, 200, "Subsubsection",ExpressionUUID->"62a9a5ec-73bc-43ac-941a-e8f438e180d4"],
Cell[482871, 12595, 739, 21, 243, "Code",ExpressionUUID->"67267c1d-12d6-41d2-836b-c4a6510172ee"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[483659, 12622, 267, 5, 46, "Subsection",ExpressionUUID->"4cfc0ca7-6981-4be0-8943-90b4d5dcc762"],
Cell[CellGroupData[{
Cell[483951, 12631, 156, 3, 56, "Subsubsection",ExpressionUUID->"3b4b9d7a-2144-4336-b4b8-701dbf6e531b"],
Cell[484110, 12636, 1558, 25, 90, "Code",ExpressionUUID->"2447c3e3-8c25-4bdd-8477-ac0130973221"]
}, Open  ]],
Cell[CellGroupData[{
Cell[485705, 12666, 163, 3, 56, "Subsubsection",ExpressionUUID->"9d719231-04d0-4890-b52b-f0b58b29d399"],
Cell[485871, 12671, 4537, 99, 389, "Code",ExpressionUUID->"e12f67f7-6abc-4e79-81f8-a4f0737fd674"]
}, Open  ]],
Cell[CellGroupData[{
Cell[490445, 12775, 158, 3, 56, "Subsubsection",ExpressionUUID->"d002705a-eb6e-4c35-9fa7-78d3a99040c9"],
Cell[490606, 12780, 626, 12, 65, "Code",ExpressionUUID->"7f8a2193-f748-454b-b319-b4d900c6b274"],
Cell[491235, 12794, 1812, 43, 190, "Code",ExpressionUUID->"6fc7e8e5-0542-4201-b11e-9656cd934c1e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[493096, 12843, 287, 5, 46, "Subsection",ExpressionUUID->"34bdabbd-8623-4d8b-8abf-d1a160a499ef"],
Cell[CellGroupData[{
Cell[493408, 12852, 156, 3, 70, "Subsubsection",ExpressionUUID->"d711f46f-3977-4964-92a5-f2fdee0f929c"],
Cell[493567, 12857, 1214, 22, 262, "Code",ExpressionUUID->"b786382d-f495-4199-a07e-d3f7b5ccd282"]
}, Open  ]],
Cell[CellGroupData[{
Cell[494818, 12884, 163, 3, 70, "Subsubsection",ExpressionUUID->"3cafed4b-b092-4856-8435-d27cfee87353"],
Cell[494984, 12889, 58242, 1175, 5613, "Code",ExpressionUUID->"61d6e73d-fe1c-47e5-b92b-37662d3f48de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[553263, 14069, 158, 3, 70, "Subsubsection",ExpressionUUID->"cef33477-b16d-4f6d-98d6-aaaf8e0737f5"],
Cell[553424, 14074, 3328, 85, 412, "Code",ExpressionUUID->"fe1c920e-c6dd-43bd-a208-6fbd600e9a4b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[556789, 14164, 158, 3, 70, "Subsubsection",ExpressionUUID->"4dc05325-9f15-4fed-8006-fa12ef487f25"],
Cell[556950, 14169, 2948, 63, 262, "Code",ExpressionUUID->"021901a2-b2eb-4c81-9563-bdc3366f649b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[559947, 14238, 160, 3, 46, "Subsection",ExpressionUUID->"5a82203c-71d2-4cbb-b6eb-6b921a7c7e4b"],
Cell[CellGroupData[{
Cell[560132, 14245, 160, 3, 56, "Subsubsection",ExpressionUUID->"580b57ff-fa7b-43ce-945d-82984af79ee4"],
Cell[560295, 14250, 915, 16, 138, "Code",ExpressionUUID->"23dc5efb-32f0-4e53-83d1-02008dc8f3d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[561247, 14271, 161, 3, 56, "Subsubsection",ExpressionUUID->"9fd57180-3556-4df5-b2c4-b80f02687613"],
Cell[561411, 14276, 38285, 831, 3108, "Code",ExpressionUUID->"cc02d15c-de27-45d1-aa6e-e68e8c35077b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[599733, 15112, 158, 3, 43, "Subsubsection",ExpressionUUID->"8926fbef-1d43-42a0-9009-3508cadbcafb"],
Cell[599894, 15117, 440, 11, 62, "Code",ExpressionUUID->"d0d5440a-9239-46b6-b8cf-37e93caf2f4e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[600371, 15133, 158, 3, 43, "Subsubsection",ExpressionUUID->"9f29c44c-f393-4122-ba9e-b3a3dc3791be"],
Cell[600532, 15138, 4533, 93, 195, "Code",ExpressionUUID->"92636d25-691b-4293-8b55-f6c2a79a4d87"]
}, Open  ]],
Cell[CellGroupData[{
Cell[605102, 15236, 161, 3, 43, "Subsubsection",ExpressionUUID->"bab8ef3b-7be0-4a60-8b6e-bf6a512244f7"],
Cell[605266, 15241, 414, 9, 61, "Code",ExpressionUUID->"2ba8f199-94e3-4dd2-ac1a-78fed489abdb"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[605729, 15256, 157, 3, 46, "Subsection",ExpressionUUID->"c916bf6d-e0ad-41a6-97f2-f08557c5c1f7"],
Cell[CellGroupData[{
Cell[605911, 15263, 158, 3, 210, "Subsubsection",ExpressionUUID->"ec0c526c-2879-4a3b-8ebf-bce7d6cfe54b"],
Cell[606072, 15268, 1166, 19, 335, "Code",ExpressionUUID->"fa0588f8-82a7-46c8-b8f9-d89a6c8f4136"]
}, Open  ]],
Cell[CellGroupData[{
Cell[607275, 15292, 159, 3, 210, "Subsubsection",ExpressionUUID->"d02e11f1-967e-494e-8d20-363bb3d5cc8f"],
Cell[607437, 15297, 388, 9, 243, "Code",ExpressionUUID->"49e2f9fc-ad92-44ea-b820-f151af48c32a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[607862, 15311, 161, 3, 210, "Subsubsection",ExpressionUUID->"06d220ed-6529-45b8-83b4-c3bcb4666ba0"],
Cell[608026, 15316, 17109, 399, 6972, "Code",ExpressionUUID->"cf9c1ac9-9160-4f81-aa35-05ed4e7f6e4e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[625172, 15720, 162, 3, 210, "Subsubsection",ExpressionUUID->"398da4aa-ca55-4b45-a6ff-696614ff1690"],
Cell[625337, 15725, 2055, 51, 793, "Code",ExpressionUUID->"f83d1d9c-9d15-4d72-969c-74a819b3c6fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[627429, 15781, 162, 3, 210, "Subsubsection",ExpressionUUID->"7b206c77-18cd-4263-a8d0-89741d445cbd"],
Cell[627594, 15786, 598, 16, 243, "Code",ExpressionUUID->"bfbc5c29-ccb0-411c-b343-bc7b6dced32f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[628241, 15808, 168, 3, 46, "Subsection",ExpressionUUID->"1eb52944-ff7c-415c-98f0-df1e3dc94173"],
Cell[628412, 15813, 1021, 29, 518, "Code",ExpressionUUID->"f0b8b4ef-9bc0-4ec8-8e01-9b1f7adefc0e"]
}, Closed]],
Cell[CellGroupData[{
Cell[629470, 15847, 160, 3, 46, "Subsection",ExpressionUUID->"393278e2-30a5-4089-93e3-9fc7bbdc4862"],
Cell[629633, 15852, 742, 22, 335, "Code",ExpressionUUID->"4f6e8745-a4b5-455d-9ec0-a2907540859a"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[630424, 15880, 243, 4, 84, "Section",ExpressionUUID->"2cc023c3-42cc-4546-96aa-ce2e4a0795dc"],
Cell[CellGroupData[{
Cell[630692, 15888, 193, 3, 67, "Subsection",ExpressionUUID->"b1023c06-2b7b-4e99-8f38-a1f977756565"],
Cell[CellGroupData[{
Cell[630910, 15895, 163, 3, 70, "Subsubsection",ExpressionUUID->"44e52bef-7f83-4e71-b1de-68280c2fc6f8"],
Cell[631076, 15900, 29502, 603, 2723, "Code",ExpressionUUID->"344ab327-90e3-4d65-9c10-8a057b0ee504"]
}, Open  ]],
Cell[CellGroupData[{
Cell[660615, 16508, 161, 3, 70, "Subsubsection",ExpressionUUID->"c12bb37b-385e-43f3-9ffc-0e0d463bdff6"],
Cell[660779, 16513, 1064, 28, 382, "Code",ExpressionUUID->"de4ed89b-995a-4b5a-8798-712006e002d1"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[661892, 16547, 838, 12, 46, "Subsection",ExpressionUUID->"e4da1fc9-cb7f-429a-854d-97db80612312"],
Cell[662733, 16561, 504, 15, 428, "Code",ExpressionUUID->"4157956f-5478-4cb6-9482-31d2e987b288"],
Cell[CellGroupData[{
Cell[663262, 16580, 163, 3, 210, "Subsubsection",ExpressionUUID->"ca1c1191-123a-4c8e-822e-c577d411ced9"],
Cell[663428, 16585, 1072, 17, 243, "Code",ExpressionUUID->"5825cf09-27c2-45c9-8333-7a2c10e9c458"],
Cell[664503, 16604, 3026, 68, 745, "Code",ExpressionUUID->"b9a01b2a-626c-4ac6-bd60-794d3b786b22"],
Cell[667532, 16674, 7406, 183, 1956, "Code",ExpressionUUID->"7f83a836-b362-4692-aae3-8578687c719f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[674987, 16863, 239, 4, 46, "Subsection",ExpressionUUID->"a1ce38d6-d808-406c-8ab9-904e21b23cd5"],
Cell[675229, 16869, 537, 15, 142, "Code",ExpressionUUID->"273fc28b-5d85-4725-ab95-06c41aa24b56"],
Cell[CellGroupData[{
Cell[675791, 16888, 163, 3, 70, "Subsubsection",ExpressionUUID->"f083b8b3-e1b1-434e-af51-2cd9148369e3"],
Cell[675957, 16893, 2127, 52, 142, "Code",ExpressionUUID->"63cfbb51-bd04-4f6a-a1af-02a808cf6bd5"],
Cell[678087, 16947, 1929, 46, 202, "Code",ExpressionUUID->"2aa0e65a-de59-4f61-b191-ed6fd6263af1"],
Cell[680019, 16995, 1211, 28, 172, "Code",ExpressionUUID->"2265fbcf-4517-41ef-8393-5f33c10a832c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[681279, 17029, 322, 6, 46, "Subsection",ExpressionUUID->"bdb1be11-dfc9-487b-84d1-73a589e05136"],
Cell[681604, 17037, 647, 19, 172, "Code",ExpressionUUID->"27046c8d-6e50-475a-8747-383919e96c8b"],
Cell[CellGroupData[{
Cell[682276, 17060, 163, 3, 70, "Subsubsection",ExpressionUUID->"f29f55e0-ad3f-4fd5-878f-c5aa559bfe30"],
Cell[682442, 17065, 1486, 37, 335, "Code",ExpressionUUID->"19b50a83-122e-4c84-81b2-36da6ceb31fd"],
Cell[683931, 17104, 1914, 43, 335, "Code",ExpressionUUID->"0a712bba-d86d-4906-93c5-42ca9b32e0bb"],
Cell[685848, 17149, 2262, 53, 610, "Code",ExpressionUUID->"90c24a8d-2990-4409-b739-d66b13e0d2f7"],
Cell[688113, 17204, 2530, 58, 610, "Code",ExpressionUUID->"09a2d3a4-ab0a-420b-88b8-36b49efa5486"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[690692, 17268, 432, 7, 46, "Subsection",ExpressionUUID->"bff8f10f-23e7-4604-bfaa-3477b3290c4a"],
Cell[691127, 17277, 567, 13, 90, "Code",ExpressionUUID->"d4363be8-d76e-4268-929d-44f427181b04"],
Cell[CellGroupData[{
Cell[691719, 17294, 163, 3, 56, "Subsubsection",ExpressionUUID->"9d8b3bb3-b1e9-4084-8f51-513c1d46f3e1"],
Cell[691885, 17299, 1681, 35, 69, "Code",ExpressionUUID->"00d145dd-00b1-43d2-a935-00af1c782bb3"],
Cell[693569, 17336, 831, 19, 69, "Code",ExpressionUUID->"b25ed788-ff3e-4b3c-bf7c-946d85648891"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[694449, 17361, 160, 3, 46, "Subsection",ExpressionUUID->"d5255a85-689c-4875-9e00-c7dfffb503f4"],
Cell[CellGroupData[{
Cell[694634, 17368, 158, 3, 56, "Subsubsection",ExpressionUUID->"6e2b9e1d-ca98-4386-a370-b2d1b42adfa3"],
Cell[694795, 17373, 241, 7, 65, "Code",ExpressionUUID->"36993993-0408-4c48-b321-c0e5f5c6f488"]
}, Open  ]],
Cell[CellGroupData[{
Cell[695073, 17385, 161, 3, 56, "Subsubsection",ExpressionUUID->"f2194c58-6ffb-4d6b-8e47-3507906c7eec"],
Cell[695237, 17390, 1303, 35, 97, "Code",ExpressionUUID->"39d4c7ff-01d2-4a65-b4d1-444c1d08840c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[696589, 17431, 131, 3, 46, "Subsection",ExpressionUUID->"b1472905-9889-4791-8002-bdb0ad4824b3"],
Cell[696723, 17436, 360, 9, 243, "Code",ExpressionUUID->"a365d682-5d4d-410b-b7a4-3f162f96aac8"],
Cell[CellGroupData[{
Cell[697108, 17449, 163, 3, 210, "Subsubsection",ExpressionUUID->"8882bd07-bc13-4acf-905f-f15dc6bf01e1"],
Cell[697274, 17454, 3094, 78, 335, "Code",ExpressionUUID->"995641e2-e257-413a-909c-a8ec2b39fced"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[700417, 17538, 445, 9, 46, "Subsection",ExpressionUUID->"9cba5aa2-666f-49bd-bf60-cd978b5f8989"],
Cell[700865, 17549, 937, 28, 232, "Code",ExpressionUUID->"0cd3f122-ded4-48b7-9db3-0b1c8a41997d"],
Cell[CellGroupData[{
Cell[701827, 17581, 163, 3, 70, "Subsubsection",ExpressionUUID->"bdadb260-462d-42fc-8cb2-5ce54fabc919"],
Cell[701993, 17586, 737, 17, 81, "Code",ExpressionUUID->"b0d57085-3cec-4640-84cf-523b8ab006e3"],
Cell[702733, 17605, 3723, 88, 340, "Code",ExpressionUUID->"81ee0f5f-5716-464d-a4e9-475509ba22b8"],
Cell[706459, 17695, 3059, 65, 360, "Code",ExpressionUUID->"77fd7795-74a1-4446-aab5-78cda0976f80"],
Cell[709521, 17762, 1338, 38, 86, "Code",ExpressionUUID->"d9072340-d773-4fd7-bcaa-ba6d32a68645"],
Cell[710862, 17802, 2590, 56, 280, "Code",ExpressionUUID->"74ed862e-fd58-417e-b9f0-4b9109ef04ed"],
Cell[713455, 17860, 1014, 26, 153, "Code",ExpressionUUID->"164f4b33-4055-4354-ba4e-865cb7012810"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[714518, 17892, 181, 3, 46, "Subsection",ExpressionUUID->"abd25943-d488-42df-8b14-66b86607838c"],
Cell[714702, 17897, 263, 7, 81, "Code",ExpressionUUID->"45c7a397-86e3-4468-8e06-e9786ab5c9f2"],
Cell[CellGroupData[{
Cell[714990, 17908, 163, 3, 70, "Subsubsection",ExpressionUUID->"03a3e299-245d-4c0f-b531-c865c2df1d16"],
Cell[715156, 17913, 4129, 103, 202, "Code",ExpressionUUID->"0b8b96bd-cddd-48d1-b5a4-c28122f7cba5"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[719334, 18022, 171, 3, 46, "Subsection",ExpressionUUID->"ce337e42-3142-4642-bb08-c4cf34c94f84"],
Cell[719508, 18027, 242, 7, 81, "Code",ExpressionUUID->"38cccf2f-09f9-4249-acf8-450c55067370"],
Cell[719753, 18036, 253, 7, 81, "Code",ExpressionUUID->"d57dc447-3e88-4675-aed8-f594bc58face"],
Cell[720009, 18045, 1865, 54, 232, "Code",ExpressionUUID->"df581828-0d9a-4a3a-8843-601ec8214d49"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[721923, 18105, 170, 3, 84, "Section",ExpressionUUID->"2fcbbfa2-d027-44b2-967b-eeb030aa0f4d"],
Cell[CellGroupData[{
Cell[722118, 18112, 160, 3, 67, "Subsection",ExpressionUUID->"6a44a643-dcbe-4ee1-b434-747dd1df28fd"],
Cell[CellGroupData[{
Cell[722303, 18119, 155, 3, 27371, "Subsubsection",ExpressionUUID->"e1cf47bf-d96a-4bbc-947c-35c82ab311ec"],
Cell[722461, 18124, 280, 7, 31938, "Code",ExpressionUUID->"1159b705-673a-43c1-9ab5-73613f19e3f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[722778, 18136, 161, 3, 27371, "Subsubsection",ExpressionUUID->"f1b14103-4223-4dc1-822f-e68faffdc0ec"],
Cell[722942, 18141, 335, 9, 31938, "Code",ExpressionUUID->"431ff3fc-e538-48c3-9e5b-71b8be074e1c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[723326, 18156, 393, 8, 80, "Subsection",ExpressionUUID->"3ef6ddd7-ed26-4962-9db9-65d3472f6a6a"],
Cell[CellGroupData[{
Cell[723744, 18168, 156, 3, 70, "Subsubsection",ExpressionUUID->"ccb52fa9-eb35-47e8-a3ae-882094e2ec39"],
Cell[723903, 18173, 3151, 68, 802, "Code",ExpressionUUID->"4ff1b352-5311-4ce2-908b-84191aebcee7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[727091, 18246, 186, 3, 70, "Subsubsection",ExpressionUUID->"371ab853-678a-4458-aeae-fea57938dab7"],
Cell[727280, 18251, 3446, 70, 346, "Code",ExpressionUUID->"c8c9cbdd-0ec0-4a24-8d68-e5b3f50d6047"],
Cell[730729, 18323, 6901, 159, 805, "Code",ExpressionUUID->"b1420268-b51e-4720-b9ae-61a3178a715b"],
Cell[737633, 18484, 755, 18, 81, "Code",ExpressionUUID->"82154185-087d-4411-baac-3e681f5cc747"],
Cell[738391, 18504, 5025, 122, 705, "Code",ExpressionUUID->"38659521-1994-41eb-861b-7ab28ab3dbdd"],
Cell[743419, 18628, 800, 15, 81, "Code",ExpressionUUID->"a421e90b-3be3-4e5e-9ece-3d82f12eb928"],
Cell[744222, 18645, 928, 21, 81, "Code",ExpressionUUID->"d09c50d8-e42a-44c4-b7f3-3b4dadd8f25f"],
Cell[745153, 18668, 723, 17, 81, "Code",ExpressionUUID->"fdb77459-dbad-4f0c-91d8-77fde33488a7"],
Cell[745879, 18687, 740, 17, 81, "Code",ExpressionUUID->"2d7f9a18-e161-4975-ba9e-171bea55de23"],
Cell[746622, 18706, 3426, 90, 382, "Code",ExpressionUUID->"688fd88b-075c-4154-bc76-10d2eb22ddbd"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[750097, 18802, 547, 10, 46, "Subsection",ExpressionUUID->"c2bc71c5-9b2a-427c-b666-5bd7c3ca8461"],
Cell[CellGroupData[{
Cell[750669, 18816, 156, 3, 70, "Subsubsection",ExpressionUUID->"f761e716-52ba-49e2-8de1-df236770ee31"],
Cell[750828, 18821, 2384, 51, 562, "Code",ExpressionUUID->"397917a9-cb7c-41f9-92ef-0e35c7fdf1c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[753249, 18877, 163, 3, 70, "Subsubsection",ExpressionUUID->"0ef051dc-b55c-482d-9b86-c5392df80e25"],
Cell[753415, 18882, 1685, 39, 86, "Code",ExpressionUUID->"899fa9e3-ba6e-4fe1-a47b-43792ddea20a"],
Cell[755103, 18923, 1724, 40, 86, "Code",ExpressionUUID->"41f558fe-72ce-4edf-8f83-753a7bc9d658"],
Cell[756830, 18965, 1615, 41, 86, "Code",ExpressionUUID->"180b3602-5637-4e9a-928b-9038c45ca08f"],
Cell[758448, 19008, 1898, 45, 86, "Code",ExpressionUUID->"6078d0a6-d9ca-4cbe-9f64-7ac5aec4001d"],
Cell[760349, 19055, 1655, 34, 112, "Code",ExpressionUUID->"0fc3e62a-5e9c-4ac2-acd0-d8f28e135083"],
Cell[762007, 19091, 731, 18, 81, "Code",ExpressionUUID->"6bbc6363-df66-4db0-b7e3-08ac2e6e6c29"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[762787, 19115, 184, 3, 46, "Subsection",ExpressionUUID->"2a54b519-bd3e-4b53-a73e-08df8112affd"],
Cell[CellGroupData[{
Cell[762996, 19122, 156, 3, 70, "Subsubsection",ExpressionUUID->"347d4f2b-6cef-49ce-9e98-469015b22779"],
Cell[763155, 19127, 887, 23, 292, "Code",ExpressionUUID->"78128b0f-bc35-44c1-bfbc-f32cb778370d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[764079, 19155, 160, 3, 70, "Subsubsection",ExpressionUUID->"312f7649-43be-482d-9694-10a5a7b7118d"],
Cell[764242, 19160, 5787, 141, 322, "Code",ExpressionUUID->"49e84c1a-f647-4c66-aeeb-bc826bbd6663"],
Cell[770032, 19303, 3219, 76, 245, "Code",ExpressionUUID->"5ccd08d1-f015-4c4f-a675-bc051696076c"],
Cell[773254, 19381, 975, 27, 81, "Code",ExpressionUUID->"c7e424ce-c040-44c6-9da4-a6b81e641849"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[774278, 19414, 160, 3, 46, "Subsection",ExpressionUUID->"e5fa1016-75d8-4e8b-ae67-83c71bc65cbe"],
Cell[CellGroupData[{
Cell[774463, 19421, 156, 3, 210, "Subsubsection",ExpressionUUID->"9639104e-21f3-4605-bd77-17b0819d1241"],
Cell[774622, 19426, 387, 9, 335, "Code",ExpressionUUID->"ee564172-ae55-4d37-b785-ed253e5259e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[775046, 19440, 163, 3, 210, "Subsubsection",ExpressionUUID->"4dbf0506-3926-4702-987c-275c3c7de4b9"],
Cell[775212, 19445, 476, 13, 243, "Code",ExpressionUUID->"5368694f-6195-41cd-b13f-9a5f339afd7f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[775737, 19464, 88, 0, 46, "Subsection",ExpressionUUID->"2f001460-ba96-496e-854d-e5316ae00074"],
Cell[CellGroupData[{
Cell[775850, 19468, 156, 3, 210, "Subsubsection",ExpressionUUID->"27b3153a-23ee-416b-950b-b5f919bc8578"],
Cell[776009, 19473, 395, 9, 335, "Code",ExpressionUUID->"249f4e09-bc3a-4512-b7f4-c08737e45bcf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[776441, 19487, 163, 3, 210, "Subsubsection",ExpressionUUID->"37a72122-4579-4eb9-b58a-331eb69929f2"],
Cell[776607, 19492, 5556, 116, 2012, "Code",ExpressionUUID->"2a8a8890-398b-474d-ae14-4e49a08f7791"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[782212, 19614, 160, 3, 46, "Subsection",ExpressionUUID->"60cd7c9d-8eae-4860-addd-ce6a0cac9f78"],
Cell[CellGroupData[{
Cell[782397, 19621, 158, 3, 126, "Subsubsection",ExpressionUUID->"8913fef5-67db-4141-ade4-451fd38450bc"],
Cell[782558, 19626, 820, 14, 303, "Code",ExpressionUUID->"ce28c2c1-1935-46d2-ad67-d71a33483cbc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[783415, 19645, 163, 3, 126, "Subsubsection",ExpressionUUID->"047a4258-b290-4f99-8c47-36b0af4694ba"],
Cell[783581, 19650, 8365, 197, 2900, "Code",ExpressionUUID->"30c8c9e3-4ecd-44b8-b4b5-680dabcf8fd3"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[792007, 19854, 158, 3, 65, "Section",ExpressionUUID->"abe0c0e0-89f6-4432-be8a-1ef2c1459dac"],
Cell[CellGroupData[{
Cell[792190, 19861, 85, 0, 67, "Subsection",ExpressionUUID->"57e7b90f-fb29-438d-80ae-054ee7e41371"],
Cell[CellGroupData[{
Cell[792300, 19865, 156, 3, 56, "Subsubsection",ExpressionUUID->"6f1fc0e3-315c-42d2-904a-9bfce1fd7b6a"],
Cell[792459, 19870, 374, 8, 90, "Code",ExpressionUUID->"66e80abd-5a09-4652-827e-ea8eb07a0a93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[792870, 19883, 163, 3, 56, "Subsubsection",ExpressionUUID->"851655de-73a0-4e0d-b3bf-e52e76b076e5"],
Cell[793036, 19888, 76574, 1798, 7250, "Code",ExpressionUUID->"5694f552-59cf-43ff-b182-bc3ad66f6774"]
}, Open  ]],
Cell[CellGroupData[{
Cell[869647, 21691, 160, 3, 70, "Subsubsection",ExpressionUUID->"2f1cb091-b27b-42f5-b7c1-5624f716b48a"],
Cell[869810, 21696, 1789, 33, 232, "Code",ExpressionUUID->"b0180908-835d-4db1-9245-437455ca2cc8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[871636, 21734, 159, 3, 70, "Subsubsection",ExpressionUUID->"c8a3b36f-0fe6-4ebd-bd68-66418e267d81"],
Cell[871798, 21739, 598, 15, 172, "Code",ExpressionUUID->"1397ab93-5380-4ac9-8b47-81dbb89eb83e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[872445, 21760, 157, 3, 46, "Subsection",ExpressionUUID->"1775e4eb-2610-480a-b584-6ae50dce037c"],
Cell[CellGroupData[{
Cell[872627, 21767, 156, 3, 27371, "Subsubsection",ExpressionUUID->"2839ff9c-b155-4332-9a9e-24a171a9376b"],
Cell[872786, 21772, 303, 8, 44452, "Code",ExpressionUUID->"c84be6d4-3a5f-4412-a457-0a5fcbcc9cf0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[873126, 21785, 163, 3, 27371, "Subsubsection",ExpressionUUID->"d4d8ad89-7ac7-4de5-86a0-554eb61e2067"],
Cell[873292, 21790, 1387, 25, 141215, "Code",ExpressionUUID->"a8435aad-0be8-4fdb-a332-576438c9f984"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[874728, 21821, 86, 0, 46, "Subsection",ExpressionUUID->"7ca130ee-1cfb-488a-a622-e4bdc4272a6e"],
Cell[CellGroupData[{
Cell[874839, 21825, 156, 3, 200, "Subsubsection",ExpressionUUID->"0b114fa4-622b-4844-b9bf-bbb93106538e"],
Cell[874998, 21830, 330, 8, 335, "Code",ExpressionUUID->"f9074127-4a94-4831-ab53-b4f684139ed0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[875365, 21843, 163, 3, 200, "Subsubsection",ExpressionUUID->"81e3d78c-10bb-4bc7-a6ec-8658daacba13"],
Cell[875531, 21848, 7945, 173, 4760, "Code",ExpressionUUID->"886973d3-3542-4e49-be7f-8ebd0b0062f6"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[883525, 22027, 268, 4, 46, "Subsection",ExpressionUUID->"1ca909d6-44d1-4beb-a3aa-4a6050f84f65"],
Cell[CellGroupData[{
Cell[883818, 22035, 156, 3, 56, "Subsubsection",ExpressionUUID->"d1253f6b-9e33-4162-97f3-805e93d099a8"],
Cell[883977, 22040, 1494, 26, 210, "Code",ExpressionUUID->"e5ae8e09-b821-4749-b4a8-d3905bcf0495"]
}, Open  ]],
Cell[CellGroupData[{
Cell[885508, 22071, 163, 3, 56, "Subsubsection",ExpressionUUID->"87e8e302-bcbc-4c4c-afc9-8e4eb390447f"],
Cell[885674, 22076, 3392, 68, 210, "Code",ExpressionUUID->"d25f3230-2978-4202-9e69-878618ea6d42"],
Cell[889069, 22146, 3874, 83, 217, "Code",ExpressionUUID->"3dedea06-2919-4884-bf18-5625b0784161"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[892992, 22235, 238, 4, 46, "Subsection",ExpressionUUID->"bde68da7-67bd-41c2-b1db-886a40077bc9"],
Cell[CellGroupData[{
Cell[893255, 22243, 158, 3, 70, "Subsubsection",ExpressionUUID->"08253f47-3981-4e4f-ad99-c35c352a275b"],
Cell[893416, 22248, 935, 16, 112, "Code",ExpressionUUID->"408a4efc-5f81-4a74-b012-3471dbc29a77"]
}, Open  ]],
Cell[CellGroupData[{
Cell[894388, 22269, 161, 3, 70, "Subsubsection",ExpressionUUID->"1e00de60-e468-45e0-bb1f-3f563ceeec9b"],
Cell[894552, 22274, 11282, 228, 1306, "Code",ExpressionUUID->"bcad2e3f-192e-430e-b450-d6e2468ef5e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[905871, 22507, 160, 3, 70, "Subsubsection",ExpressionUUID->"91d02602-dff0-40e7-b47f-da9fa3e61865"],
Cell[906034, 22512, 487, 13, 81, "Code",ExpressionUUID->"753c045e-6863-4d1f-831f-cce37ac5dcdd"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[906570, 22531, 210, 4, 46, "Subsection",ExpressionUUID->"1fdd3135-e42f-438c-8aa8-826622e1cd14"],
Cell[CellGroupData[{
Cell[906805, 22539, 158, 3, 210, "Subsubsection",ExpressionUUID->"1886e9af-80ab-4627-8f7b-49f4da410d1a"],
Cell[906966, 22544, 848, 15, 335, "Code",ExpressionUUID->"26364af5-6c33-4bf6-b042-058aef4c249b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[907851, 22564, 161, 3, 210, "Subsubsection",ExpressionUUID->"7b2150a8-db7c-4df2-a142-cd2be7eafb3a"],
Cell[908015, 22569, 6413, 127, 2666, "Code",ExpressionUUID->"6c633dd8-0f2d-48a9-9dfd-35b12338eeea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[914465, 22701, 160, 3, 210, "Subsubsection",ExpressionUUID->"64e845a6-75c0-4bec-9118-c8fd8fc84e17"],
Cell[914628, 22706, 473, 11, 243, "Code",ExpressionUUID->"65de8702-f1e0-4cad-b1af-2d45ba9da6fc"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[915150, 22723, 157, 3, 46, "Subsection",ExpressionUUID->"9345ad3a-47a5-448b-81ad-29e01a098e57"],
Cell[CellGroupData[{
Cell[915332, 22730, 158, 3, 56, "Subsubsection",ExpressionUUID->"2d603119-ffd4-4d4c-9a85-f09a62afadd3"],
Cell[915493, 22735, 770, 13, 88, "Code",ExpressionUUID->"968c40d4-c800-417e-99f9-5eca3dfc0e92"]
}, Open  ]],
Cell[CellGroupData[{
Cell[916300, 22753, 161, 3, 56, "Subsubsection",ExpressionUUID->"bff12ad1-3c61-425b-bc7b-0b815491504a"],
Cell[916464, 22758, 7087, 143, 733, "Code",ExpressionUUID->"48dc7474-c553-4690-a23c-05c7e2bf99b8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[923588, 22906, 160, 3, 210, "Subsubsection",ExpressionUUID->"8fc75a8d-9f46-4fd5-b773-bc7f7f9fd1f4"],
Cell[923751, 22911, 336, 9, 428, "Code",ExpressionUUID->"bf5a3a70-d186-4595-bc30-23ae48fab1f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[924124, 22925, 160, 3, 210, "Subsubsection",ExpressionUUID->"c7d52c02-5608-48fc-848d-91e54af1026e"],
Cell[924287, 22930, 890, 20, 428, "Code",ExpressionUUID->"ccebe1c3-f58a-4cc1-9318-53f3a834c7d5"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[925226, 22956, 212, 4, 46, "Subsection",ExpressionUUID->"5e86da3a-44df-45f9-a4fb-a18e0adb1fb9"],
Cell[CellGroupData[{
Cell[925463, 22964, 158, 3, 210, "Subsubsection",ExpressionUUID->"0637d2c7-032d-43c9-b509-ae88fbd5bfcd"],
Cell[925624, 22969, 836, 15, 335, "Code",ExpressionUUID->"8a65186e-11be-4a03-937a-e931927a369d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[926497, 22989, 161, 3, 210, "Subsubsection",ExpressionUUID->"916da872-eea1-46f3-961e-3299184a4c7e"],
Cell[926661, 22994, 7120, 143, 2941, "Code",ExpressionUUID->"95410cec-df24-44a5-81e8-8af5cac02c19"]
}, Open  ]],
Cell[CellGroupData[{
Cell[933818, 23142, 160, 3, 210, "Subsubsection",ExpressionUUID->"5b7b74f3-b421-4807-8edb-b9e87c577a79"],
Cell[933981, 23147, 391, 10, 428, "Code",ExpressionUUID->"27a0a230-df6c-4f60-a9cc-29d6262af34f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[934409, 23162, 160, 3, 210, "Subsubsection",ExpressionUUID->"9397fb43-e256-45b3-988d-0bfaab8c1026"],
Cell[934572, 23167, 950, 21, 428, "Code",ExpressionUUID->"f1b35c24-248e-4e76-a293-deaa7c469599"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[935571, 23194, 161, 3, 46, "Subsection",ExpressionUUID->"9d73bd5e-d208-45d2-80c1-629e8656b647"],
Cell[CellGroupData[{
Cell[935757, 23201, 156, 3, 70, "Subsubsection",ExpressionUUID->"a4ffcd52-926e-4e61-93e0-3f2646be128c"],
Cell[935916, 23206, 798, 15, 142, "Code",ExpressionUUID->"a9197e55-366c-4f9e-b94a-0a1550ca063e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[936751, 23226, 161, 3, 70, "Subsubsection",ExpressionUUID->"d73eac0f-0101-4045-9f1a-38ad783ee513"],
Cell[936915, 23231, 3656, 83, 783, "Code",ExpressionUUID->"20403195-3d97-4015-b2e6-51b72b83af6f"],
Cell[940574, 23316, 3338, 78, 671, "Code",ExpressionUUID->"e72a7879-881b-4a25-8aac-4db2b294d0b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[943949, 23399, 162, 3, 70, "Subsubsection",ExpressionUUID->"fa4c2d0e-a5ee-44b6-8d35-ea6bc612be80"],
Cell[944114, 23404, 258, 7, 81, "Code",ExpressionUUID->"424de938-2f26-4445-8afd-e2b0436eb387"]
}, Open  ]],
Cell[CellGroupData[{
Cell[944409, 23416, 158, 3, 70, "Subsubsection",ExpressionUUID->"fe482541-e75f-421f-8446-a5ebb68a2556"],
Cell[944570, 23421, 389, 11, 81, "Code",ExpressionUUID->"217af0b0-b3ec-4d45-9e78-b37c0c6328c6"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[945008, 23438, 173, 3, 46, "Subsection",ExpressionUUID->"fef3a198-d291-4197-bd1f-f62801738006"],
Cell[CellGroupData[{
Cell[945206, 23445, 158, 3, 70, "Subsubsection",ExpressionUUID->"964f797c-1207-4ab7-98ae-ad5be812c667"],
Cell[945367, 23450, 691, 13, 112, "Code",ExpressionUUID->"a415f0eb-34d6-4120-863b-9fc7fc22a8ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[946095, 23468, 214, 4, 70, "Subsubsection",ExpressionUUID->"a1dd39d1-8f8d-4814-a628-3ad32366a3af"],
Cell[946312, 23474, 19602, 415, 2271, "Code",ExpressionUUID->"fda570bd-bbac-4c95-a54e-ea95f1c38ccd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[965951, 23894, 160, 3, 70, "Subsubsection",ExpressionUUID->"61338fe8-ebd7-48be-af0a-28ec44b039ee"],
Cell[966114, 23899, 1268, 24, 172, "Code",ExpressionUUID->"b6e60507-fec0-4cc9-a1de-feee3bf66454"]
}, Open  ]],
Cell[CellGroupData[{
Cell[967419, 23928, 158, 3, 70, "Subsubsection",ExpressionUUID->"e150c581-ae7e-4792-bfed-c3e4e8e519d3"],
Cell[967580, 23933, 1346, 28, 143, "Code",ExpressionUUID->"92fcd135-096f-4dd7-9fb0-bb5679a79d82"]
}, Open  ]],
Cell[CellGroupData[{
Cell[968963, 23966, 161, 3, 70, "Subsubsection",ExpressionUUID->"0453b5fe-e95d-4f7a-a194-47c916e979e3"],
Cell[969127, 23971, 760, 17, 112, "Code",ExpressionUUID->"1ebcca21-8e6a-4895-be19-4c4f87040257"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[969936, 23994, 216, 4, 46, "Subsection",ExpressionUUID->"b280b723-4004-4605-9781-cdca96c4318c"],
Cell[CellGroupData[{
Cell[970177, 24002, 157, 3, 126, "Subsubsection",ExpressionUUID->"913def41-2902-4490-a08c-8a9499377338"],
Cell[970337, 24007, 423, 9, 243, "Code",ExpressionUUID->"53d55242-0759-4d51-b87d-8c1c45c9223d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[970797, 24021, 163, 3, 126, "Subsubsection",ExpressionUUID->"df94aab7-12cd-4fe5-9f13-7743e246bd65"],
Cell[970963, 24026, 6428, 140, 2503, "Code",ExpressionUUID->"6101d7e8-d904-4a87-b9b5-c6c339f3b8e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[977428, 24171, 160, 3, 126, "Subsubsection",ExpressionUUID->"4e2418b3-1b7d-42c0-9842-cb4fe02cc05d"],
Cell[977591, 24176, 781, 17, 181, "Code",ExpressionUUID->"25f8d4e9-4a5e-44b7-8c58-b9edfce37024"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[978421, 24199, 260, 4, 46, "Subsection",ExpressionUUID->"c794cc01-098a-4c1b-8bb4-5657fc34beaf"],
Cell[CellGroupData[{
Cell[978706, 24207, 157, 3, 126, "Subsubsection",ExpressionUUID->"8c40e204-4c9a-40a4-8eec-e974501e76d4"],
Cell[978866, 24212, 467, 9, 243, "Code",ExpressionUUID->"8c35e621-eb66-41ca-be53-c4fbe0a5eb37"]
}, Open  ]],
Cell[CellGroupData[{
Cell[979370, 24226, 163, 3, 126, "Subsubsection",ExpressionUUID->"6d58ed34-4571-4f29-b94e-129d108fb536"],
Cell[979536, 24231, 6392, 139, 2503, "Code",ExpressionUUID->"663d44d0-2f74-40df-9abd-5a2a4965b6b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[985965, 24375, 158, 3, 126, "Subsubsection",ExpressionUUID->"07d80e03-2de6-45ba-b42b-b0ccc3709379"],
Cell[986126, 24380, 586, 15, 181, "Code",ExpressionUUID->"1679d9bd-1db6-4bd0-a004-9e34382df0f5"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[986761, 24401, 241, 4, 46, "Subsection",ExpressionUUID->"144984d4-619b-44fc-86eb-b43e6ba0785a"],
Cell[987005, 24407, 564, 13, 285, "Code",ExpressionUUID->"9cdc78a2-4f0b-4228-8006-54886d0ec90f"]
}, Closed]],
Cell[CellGroupData[{
Cell[987606, 24425, 163, 3, 46, "Subsection",ExpressionUUID->"772c049c-f99f-4c33-8b6f-a065e8ac52a2"],
Cell[CellGroupData[{
Cell[987794, 24432, 157, 3, 70, "Subsubsection",ExpressionUUID->"22d0658a-cf2b-4032-85ad-d1ec88f1212c"],
Cell[987954, 24437, 339, 8, 81, "Code",ExpressionUUID->"5e5bd3bc-19aa-469d-8775-116be6140355"]
}, Open  ]],
Cell[CellGroupData[{
Cell[988330, 24450, 161, 3, 70, "Subsubsection",ExpressionUUID->"97c6ca90-a4e6-4250-8f09-410f5e0fd933"],
Cell[988494, 24455, 387, 10, 81, "Code",ExpressionUUID->"fb9130ae-530c-44ad-8e4c-9396e415d9ee"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[988930, 24471, 165, 3, 46, "Subsection",ExpressionUUID->"9dcdf6bc-e752-45a8-911a-b811da682571"],
Cell[CellGroupData[{
Cell[989120, 24478, 156, 3, 70, "Subsubsection",ExpressionUUID->"6cd73cc7-e9ce-4bbe-9a74-801c97879552"],
Cell[989279, 24483, 471, 10, 81, "Code",ExpressionUUID->"49ec1bd7-48e1-400c-bddf-ba4f112e33b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[989787, 24498, 162, 3, 70, "Subsubsection",ExpressionUUID->"30e579e3-b584-422f-a643-5b39b3c19e28"],
Cell[989952, 24503, 405, 10, 81, "Code",ExpressionUUID->"c48024e8-d284-4489-b2eb-568b1c8b342c"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[990418, 24520, 169, 3, 84, "Section",ExpressionUUID->"43716e7c-e20d-4543-bdf8-0295bf3473cd"],
Cell[CellGroupData[{
Cell[990612, 24527, 155, 3, 67, "Subsection",ExpressionUUID->"1b9fb46b-0ca8-40d5-8fd1-2dab555a0d8d"],
Cell[CellGroupData[{
Cell[990792, 24534, 156, 3, 56, "Subsubsection",ExpressionUUID->"d1c960d0-a46f-4690-acc3-727e88f706bb"],
Cell[990951, 24539, 610, 12, 90, "Code",ExpressionUUID->"0c52117b-e0eb-4ee3-95ed-4659a36c03cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[991598, 24556, 163, 3, 56, "Subsubsection",ExpressionUUID->"a6fe2546-5afb-4f6f-8a4a-abd845c69a1b"],
Cell[991764, 24561, 18046, 373, 1995, "Code",ExpressionUUID->"d10f7276-c76f-4756-a49c-3d5219781273"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1009847, 24939, 160, 3, 70, "Subsubsection",ExpressionUUID->"2e1dfde3-f860-4d66-ac05-01eb82fd0ce4"],
Cell[1010010, 24944, 719, 17, 81, "Code",ExpressionUUID->"b0ad0756-b486-43f8-aa3d-dcf9c3aa94bd"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1010778, 24967, 154, 3, 46, "Subsection",ExpressionUUID->"84e888aa-0472-485b-bce8-a731b0aacee4"],
Cell[CellGroupData[{
Cell[1010957, 24974, 156, 3, 56, "Subsubsection",ExpressionUUID->"438a915e-1229-4804-9ab6-95e3886674d1"],
Cell[1011116, 24979, 987, 17, 114, "Code",ExpressionUUID->"cbb024eb-31ee-4cf9-9a5f-d7008612b261"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1012140, 25001, 163, 3, 56, "Subsubsection",ExpressionUUID->"908389d4-cb31-4dc3-bb2c-387ab2b4a731"],
Cell[1012306, 25006, 38487, 784, 2787, "Code",ExpressionUUID->"26ae94e3-8b1d-48cd-94b7-ceb5928ee840"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1050830, 25795, 87, 0, 56, "Subsubsection",ExpressionUUID->"b7028708-b90a-461f-8852-b4e5a43a31ed"],
Cell[1050920, 25797, 1762, 36, 114, "Code",ExpressionUUID->"935203c8-2e68-41e1-b172-f21f51676264"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1052719, 25838, 160, 3, 56, "Subsubsection",ExpressionUUID->"cb5b213f-33ac-4f24-b356-083616993615"],
Cell[1052882, 25843, 872, 20, 114, "Code",ExpressionUUID->"40d03795-3b45-4f04-84a2-7564fff90c9d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1053803, 25869, 271, 4, 46, "Subsection",ExpressionUUID->"85b4811f-d38e-497d-a0b4-4fb57bb77cb9"],
Cell[CellGroupData[{
Cell[1054099, 25877, 156, 3, 56, "Subsubsection",ExpressionUUID->"84893dd5-a625-4b35-9c47-16a5bd233aa0"],
Cell[1054258, 25882, 2970, 54, 546, "Code",ExpressionUUID->"5b5193d3-9f3b-4ed0-bebe-80be6c7bbc43"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1057265, 25941, 163, 3, 56, "Subsubsection",ExpressionUUID->"52f8ee1d-3557-46e5-a2b0-1c8530082de2"],
Cell[1057431, 25946, 30654, 651, 2967, "Code",ExpressionUUID->"d2cb9fb9-b075-4f94-b900-688385331578"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1088122, 26602, 87, 0, 56, "Subsubsection",ExpressionUUID->"30c5af73-ba1c-4af6-9538-b8a722987efd"],
Cell[1088212, 26604, 1721, 38, 90, "Code",ExpressionUUID->"62650bd4-3a4a-496f-abe2-bdc744f23f19"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1089970, 26647, 160, 3, 56, "Subsubsection",ExpressionUUID->"ccebbf96-2c87-4a05-add0-b464d2b85f22"],
Cell[1090133, 26652, 1084, 28, 114, "Code",ExpressionUUID->"e8315929-585d-468b-9e79-ada0f9576d21"],
Cell[1091220, 26682, 971, 24, 90, "Code",ExpressionUUID->"321df1c3-7cca-40f2-b1aa-e39d93110c0d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1092228, 26711, 161, 3, 56, "Subsubsection",ExpressionUUID->"1dad2754-42dc-467a-bbc8-22bd04eace49"],
Cell[1092392, 26716, 526, 14, 114, "Code",ExpressionUUID->"c34e4ea7-98c2-4845-8a9e-c1be44036552"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1092967, 26736, 236, 5, 46, "Subsection",ExpressionUUID->"a332ca41-ac01-457b-a20b-5939be3a8d03"],
Cell[CellGroupData[{
Cell[1093228, 26745, 156, 3, 168, "Subsubsection",ExpressionUUID->"6ebc727a-2f70-4fad-a680-d95dbdd9e7ea"],
Cell[1093387, 26750, 635, 13, 345, "Code",ExpressionUUID->"a1c807ba-dca3-4583-8cb9-1488e7f05889"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1094059, 26768, 163, 3, 168, "Subsubsection",ExpressionUUID->"d492efca-cfe9-41e8-a342-ae3f157b957c"],
Cell[1094225, 26773, 39978, 822, 14477, "Code",ExpressionUUID->"3a80915d-64fa-41c1-8a5a-641e71aadaaf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1134240, 27600, 87, 0, 168, "Subsubsection",ExpressionUUID->"3afa9d04-d1c1-43bf-8603-560894ae1a7a"],
Cell[1134330, 27602, 2032, 45, 712, "Code",ExpressionUUID->"fed60a2c-db54-42a0-8830-e29e5fe13132"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1136399, 27652, 158, 3, 168, "Subsubsection",ExpressionUUID->"bbf4ac53-ee04-435f-87aa-4512b765ca9f"],
Cell[1136560, 27657, 992, 22, 345, "Code",ExpressionUUID->"0c6d2b0c-42c8-4970-b3b2-008634610fe8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1137589, 27684, 159, 3, 168, "Subsubsection",ExpressionUUID->"e3f057d5-8529-45c5-9dd2-eceed7d2180e"],
Cell[1137751, 27689, 984, 27, 931, "Code",ExpressionUUID->"e7ae6756-baa2-465c-b624-dd1d2c8c49e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1138772, 27721, 159, 3, 168, "Subsubsection",ExpressionUUID->"54a32e33-1215-4f37-aee0-2fe72e286338"],
Cell[1138934, 27726, 327, 8, 196, "Code",ExpressionUUID->"965ed384-abf9-4940-8865-b1ba8ec22789"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1139310, 27740, 88, 0, 46, "Subsection",ExpressionUUID->"61f27e60-5470-4d35-9d95-187aa2ff31c5"],
Cell[CellGroupData[{
Cell[1139423, 27744, 156, 3, 70, "Subsubsection",ExpressionUUID->"9063505d-84ec-403d-a6df-5c93f586c8db"],
Cell[1139582, 27749, 687, 12, 142, "Code",ExpressionUUID->"22aacc26-f777-4b7e-9522-4d3fcf2b351b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1140306, 27766, 163, 3, 70, "Subsubsection",ExpressionUUID->"72c38206-79ed-41de-a84c-290d40ddc34a"],
Cell[1140472, 27771, 1099, 27, 112, "Code",ExpressionUUID->"bc8d17b8-2ecf-49bd-85fc-4e3c9b636f3e"],
Cell[1141574, 27800, 12031, 251, 1893, "Code",ExpressionUUID->"d1306c71-01de-4685-adb5-ab976ac23085"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1153642, 28056, 87, 0, 70, "Subsubsection",ExpressionUUID->"b8267323-31b7-4ad3-a956-9c90c0fd6ce8"],
Cell[1153732, 28058, 703, 18, 142, "Code",ExpressionUUID->"7ecda5a8-9a28-4295-b2ac-83b4920777f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1154472, 28081, 87, 0, 70, "Subsubsection",ExpressionUUID->"4ba194f8-672a-4c9b-93ec-ef7df33652c7"],
Cell[1154562, 28083, 608, 15, 81, "Code",ExpressionUUID->"49bfa0f1-9a9b-4b78-9f14-f69fcf19399f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1155219, 28104, 91, 0, 46, "Subsection",ExpressionUUID->"c79e308e-9678-4528-a0cf-1de5b0c05510"],
Cell[CellGroupData[{
Cell[1155335, 28108, 156, 3, 210, "Subsubsection",ExpressionUUID->"16be8d71-03ef-4282-8e56-9fd8392bd809"],
Cell[1155494, 28113, 719, 13, 428, "Code",ExpressionUUID->"d9ed2110-f1bd-4e3a-862f-f085bd945bb6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1156250, 28131, 163, 3, 210, "Subsubsection",ExpressionUUID->"202b1977-511b-407d-b333-acf391151249"],
Cell[1156416, 28136, 1300, 30, 335, "Code",ExpressionUUID->"4f28d588-44e1-4df0-97c9-d4459181c2d6"],
Cell[1157719, 28168, 10758, 250, 4847, "Code",ExpressionUUID->"9fb828fd-93f9-4378-8808-4c1b0c210836"],
Cell[1168480, 28420, 783, 17, 243, "Code",ExpressionUUID->"e1be42fb-a461-45b9-b1b5-3ba78c45abd6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1169300, 28442, 87, 0, 210, "Subsubsection",ExpressionUUID->"853e26e7-627e-4aba-94fc-fe7c121c6114"],
Cell[1169390, 28444, 918, 21, 243, "Code",ExpressionUUID->"90bbe12e-9d68-419f-b4f0-cc5ea4cb6e70"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1170357, 28471, 130, 2, 46, "Subsection",ExpressionUUID->"d6e07f9a-d802-4a56-8b55-1e956857f345"],
Cell[CellGroupData[{
Cell[1170512, 28477, 156, 3, 210, "Subsubsection",ExpressionUUID->"ff634956-c59d-43dc-a31a-760ddc376943"],
Cell[1170671, 28482, 793, 15, 428, "Code",ExpressionUUID->"6fba95f8-0896-4ea6-ad09-5bbf9cbfd27e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1171501, 28502, 163, 3, 210, "Subsubsection",ExpressionUUID->"fee96dc1-ff2e-4558-bf3c-da1f6e40c923"],
Cell[1171667, 28507, 1672, 35, 335, "Code",ExpressionUUID->"0f3b83dd-7429-40e9-8b11-f22487c357e2"],
Cell[1173342, 28544, 17012, 336, 7688, "Code",ExpressionUUID->"e8a0d079-56bf-41bf-9476-05e75e833886"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1190391, 28885, 158, 3, 210, "Subsubsection",ExpressionUUID->"73894a0b-ea0c-4f4e-9cf8-b5c616d41333"],
Cell[1190552, 28890, 1070, 23, 428, "Code",ExpressionUUID->"d7feed21-57a9-4df8-a8b0-4e2cb9de3ddc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1191659, 28918, 160, 3, 210, "Subsubsection",ExpressionUUID->"421c4dda-795f-4356-8430-c30e9915bd9f"],
Cell[1191822, 28923, 2033, 38, 335, "Code",ExpressionUUID->"48845c87-f17e-421a-9b81-88f4e8ff5c22"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1193904, 28967, 141, 3, 46, "Subsection",ExpressionUUID->"8a0c511d-2eaf-4d83-a082-f7011a64b435"],
Cell[CellGroupData[{
Cell[1194070, 28974, 156, 3, 210, "Subsubsection",ExpressionUUID->"212c02e3-2abe-43a5-989c-22b4554a15c9"],
Cell[1194229, 28979, 606, 12, 428, "Code",ExpressionUUID->"a0b6816e-d874-447c-b42c-3aff72502e30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1194872, 28996, 163, 3, 210, "Subsubsection",ExpressionUUID->"411b5dac-c81b-4e31-b4e4-242ef5ad4936"],
Cell[1195038, 29001, 3513, 73, 1096, "Code",ExpressionUUID->"59489b6b-977a-44cd-8b75-e492ae5d22b9"],
Cell[1198554, 29076, 576, 15, 243, "Code",ExpressionUUID->"475cdf26-25f9-4c09-94cf-851b1f0d6318"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1199167, 29096, 158, 3, 210, "Subsubsection",ExpressionUUID->"c30f1681-ffdb-4ae6-a047-e55d389ad70c"],
Cell[1199328, 29101, 236, 7, 243, "Code",ExpressionUUID->"b4baa49b-dde2-46f4-9a3b-b0dd1b3c96e5"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1199613, 29114, 212, 4, 46, "Subsection",ExpressionUUID->"42d92744-0dbe-4633-a485-bbc2b146651e"],
Cell[CellGroupData[{
Cell[1199850, 29122, 156, 3, 56, "Subsubsection",ExpressionUUID->"fac7a524-5f7a-4e81-a1df-8227c93eb87d"],
Cell[1200009, 29127, 953, 17, 138, "Code",ExpressionUUID->"c4e6d9fd-4858-487f-bce6-0d089afeea4d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1200999, 29149, 163, 3, 56, "Subsubsection",ExpressionUUID->"65a488ac-fe1a-4b7b-b6a1-8fbfe170d483"],
Cell[1201165, 29154, 70364, 1453, 7856, "Code",ExpressionUUID->"4ee072fa-c86e-402b-8047-c79eecb17942"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1271566, 30612, 87, 0, 56, "Subsubsection",ExpressionUUID->"24fd674f-a1b3-4f94-8506-596244820b69"],
Cell[1271656, 30614, 2398, 53, 162, "Code",ExpressionUUID->"61897e06-6141-433f-8fe0-1e3d2bcc7c83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1274091, 30672, 159, 3, 56, "Subsubsection",ExpressionUUID->"7292c3db-faf1-463d-8a55-97c6a4726f82"],
Cell[1274253, 30677, 2123, 55, 594, "Code",ExpressionUUID->"a57d54c0-cdf5-4e8b-a55c-6acc31507693"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1276425, 30738, 93, 0, 46, "Subsection",ExpressionUUID->"7c7feded-abaa-4bc3-909d-57b58777660f"],
Cell[CellGroupData[{
Cell[1276543, 30742, 156, 3, 56, "Subsubsection",ExpressionUUID->"79c2beb0-a5ea-4d4f-8fe0-dd38608565e3"],
Cell[1276702, 30747, 1115, 19, 114, "Code",ExpressionUUID->"ca7e87c9-95d8-4059-aa3f-0ec641c19ea4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1277854, 30771, 163, 3, 56, "Subsubsection",ExpressionUUID->"899d63d5-e808-49d7-b642-64bfd47cab3c"],
Cell[1278020, 30776, 26909, 543, 2066, "Code",ExpressionUUID->"ed20a51f-32d7-4df3-b912-5c4424333731"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1304978, 31325, 91, 0, 46, "Subsection",ExpressionUUID->"b81e90f1-9396-47b8-8509-956f5f1f550a"],
Cell[CellGroupData[{
Cell[1305094, 31329, 156, 3, 70, "Subsubsection",ExpressionUUID->"402edaa9-d29e-4be2-8f83-547d6fa861e6"],
Cell[1305253, 31334, 1084, 19, 142, "Code",ExpressionUUID->"9b313dda-54be-40fa-8fde-fd5d4c3dc7a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1306374, 31358, 163, 3, 70, "Subsubsection",ExpressionUUID->"623edd06-7d5d-4fef-a204-3144f1d4a708"],
Cell[1306540, 31363, 12854, 271, 1682, "Code",ExpressionUUID->"374911a7-18b2-4da3-9dce-82fe6f801576"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1319443, 31640, 165, 3, 46, "Subsection",ExpressionUUID->"4713f981-ad4b-4882-b792-ecc7724d032d"],
Cell[CellGroupData[{
Cell[1319633, 31647, 156, 3, 210, "Subsubsection",ExpressionUUID->"0865ce11-8197-4d58-aa28-74c9ee21c0c6"],
Cell[1319792, 31652, 1102, 19, 428, "Code",ExpressionUUID->"e3b5c4fa-a1d2-4008-aa8b-8bf2d88e53c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1320931, 31676, 163, 3, 210, "Subsubsection",ExpressionUUID->"b31fdf00-e69c-41d8-87cd-21459a2aaea9"],
Cell[1321097, 31681, 4913, 106, 1983, "Code",ExpressionUUID->"7faef566-c591-4261-90cc-973189697d42"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1326047, 31792, 160, 3, 210, "Subsubsection",ExpressionUUID->"eb3dc447-3d50-455a-bb21-b35edc5108c4"],
Cell[1326210, 31797, 753, 18, 518, "Code",ExpressionUUID->"643864bf-f2e3-4316-bccf-fe4449610a62"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1327012, 31821, 258, 4, 46, "Subsection",ExpressionUUID->"eb17bf7d-d7a9-41da-b4c8-d9e6e7400aea"],
Cell[CellGroupData[{
Cell[1327295, 31829, 156, 3, 210, "Subsubsection",ExpressionUUID->"1055b119-d4e9-4f64-88ee-e9ab71567ff4"],
Cell[1327454, 31834, 448, 10, 335, "Code",ExpressionUUID->"cf9032cc-47a0-4f20-94ab-49e820027fba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1327939, 31849, 163, 3, 210, "Subsubsection",ExpressionUUID->"0f035f44-526e-4f3c-a8b5-d713d71bf24f"],
Cell[1328105, 31854, 15021, 305, 4856, "Code",ExpressionUUID->"d68ae6d2-2376-4921-be0d-18e75da0182f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1343163, 32164, 158, 3, 210, "Subsubsection",ExpressionUUID->"d3bf25e1-c7a2-4fc6-9093-99317b036aaf"],
Cell[1343324, 32169, 987, 21, 428, "Code",ExpressionUUID->"fdeca739-581b-49ad-b958-5833506c5496"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1344360, 32196, 312, 5, 46, "Subsection",ExpressionUUID->"fe7d94a1-7988-421b-90a1-85e14f3bd4be"],
Cell[CellGroupData[{
Cell[1344697, 32205, 156, 3, 70, "Subsubsection",ExpressionUUID->"53a324b2-5558-4ba1-8941-b5b1048f3f40"],
Cell[1344856, 32210, 443, 10, 112, "Code",ExpressionUUID->"897d4ec0-fbf5-4841-a17d-ee1bc3d18e60"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1345336, 32225, 163, 3, 70, "Subsubsection",ExpressionUUID->"15194021-61f9-4a14-8f26-748259d06586"],
Cell[1345502, 32230, 10076, 200, 1206, "Code",ExpressionUUID->"8cc64a6d-9ea7-466d-815e-5c291c159130"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1355615, 32435, 158, 3, 70, "Subsubsection",ExpressionUUID->"943be980-fd2f-49b1-8fca-4807a3a7aee2"],
Cell[1355776, 32440, 632, 14, 81, "Code",ExpressionUUID->"945292da-2729-48ae-b78f-d13d1e07410b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1356457, 32460, 210, 4, 46, "Subsection",ExpressionUUID->"513878cd-c935-4671-9a95-f0272c1416d5"],
Cell[CellGroupData[{
Cell[1356692, 32468, 156, 3, 56, "Subsubsection",ExpressionUUID->"f509be43-2e0c-4ed4-8a89-6a3362c99eae"],
Cell[1356851, 32473, 669, 13, 90, "Code",ExpressionUUID->"738ed46d-4ac4-43ed-abfc-371e5db0751e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1357557, 32491, 163, 3, 56, "Subsubsection",ExpressionUUID->"14f27690-8078-43bd-89cd-88479176d52d"],
Cell[1357723, 32496, 53007, 1088, 4167, "Code",ExpressionUUID->"696d93c6-1069-4d10-8e62-acc7a45e5973"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1410767, 33589, 160, 3, 70, "Subsubsection",ExpressionUUID->"351e926a-c9ab-4543-8cfd-c819ba317130"],
Cell[1410930, 33594, 3725, 75, 322, "Code",ExpressionUUID->"36c01fb9-f961-4750-9da9-9b63c47877ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1414692, 33674, 87, 0, 70, "Subsubsection",ExpressionUUID->"18601ec1-cd47-4f05-88aa-bb31aae87456"],
Cell[1414782, 33676, 975, 22, 142, "Code",ExpressionUUID->"76f8b617-b209-422e-8b5e-05e64e4c1692"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1415794, 33703, 163, 3, 70, "Subsubsection",ExpressionUUID->"52a619b8-c097-4d2a-860a-b413e45e9e38"],
Cell[1415960, 33708, 381, 9, 81, "Code",ExpressionUUID->"66e0702c-10a8-4216-8be8-356d58553b2d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1416390, 33723, 160, 3, 46, "Subsection",ExpressionUUID->"eb89df43-f51e-4006-85e6-41332fe2040b"],
Cell[CellGroupData[{
Cell[1416575, 33730, 158, 3, 70, "Subsubsection",ExpressionUUID->"0e5b4bca-fd4b-46c9-ae19-8c6deb433eae"],
Cell[1416736, 33735, 768, 14, 112, "Code",ExpressionUUID->"8fa60780-8b12-412e-a94d-c77806c6d4a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1417541, 33754, 161, 3, 70, "Subsubsection",ExpressionUUID->"8567e61a-62ba-441d-aef7-ccfcb2bf18d8"],
Cell[1417705, 33759, 585, 17, 81, "Code",ExpressionUUID->"e8dbaf9d-eeb4-49b3-9356-2bfcf683543f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1418339, 33782, 163, 3, 46, "Subsection",ExpressionUUID->"d72e0c62-1fc7-420c-a6d4-6d57a6ac8eee"],
Cell[CellGroupData[{
Cell[1418527, 33789, 156, 3, 126, "Subsubsection",ExpressionUUID->"c4dd318e-398c-4f1c-9fd3-dff365efa740"],
Cell[1418686, 33794, 1668, 27, 363, "Code",ExpressionUUID->"8d8527ec-603d-4fe7-865d-d9c77debbc3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1420391, 33826, 161, 3, 126, "Subsubsection",ExpressionUUID->"73820d98-01cf-4a82-bcfd-323d7b93fdc1"],
Cell[1420555, 33831, 1357, 30, 243, "Code",ExpressionUUID->"b8217098-5bb9-405e-8654-e4dade755374"],
Cell[1421915, 33863, 2997, 66, 652, "Code",ExpressionUUID->"5dabb7dc-a8de-438e-8317-219c7984e3ba"],
Cell[1424915, 33931, 2914, 72, 590, "Code",ExpressionUUID->"6fa12b4d-9645-431a-bad3-7c7da209a926"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1427866, 34008, 160, 3, 126, "Subsubsection",ExpressionUUID->"e33c8574-48a5-4dfa-89e6-240183ce9799"],
Cell[1428029, 34013, 428, 12, 181, "Code",ExpressionUUID->"be7f3be5-c3ad-427b-8e58-1f4c9a2830aa"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1428518, 34032, 166, 3, 84, "Section",ExpressionUUID->"d381b9b7-b2e6-4b17-be14-656071c30377"],
Cell[CellGroupData[{
Cell[1428709, 34039, 259, 5, 67, "Subsection",ExpressionUUID->"971be81d-214e-436d-8c24-fc4fbcfb8815"],
Cell[CellGroupData[{
Cell[1428993, 34048, 156, 3, 56, "Subsubsection",ExpressionUUID->"32f3a6cb-ffea-4516-b411-42c6dd7282ad"],
Cell[1429152, 34053, 4083, 70, 498, "Code",ExpressionUUID->"5c10c41d-fa92-4a33-8253-5988f8385da9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1433272, 34128, 163, 3, 56, "Subsubsection",ExpressionUUID->"0ccf2d24-80ce-4bc3-8acd-1d370cfaaa54"],
Cell[1433438, 34133, 1013, 23, 90, "Code",ExpressionUUID->"81951699-db0d-452a-b292-b21b29d982c6"],
Cell[1434454, 34158, 132032, 2700, 10799, "Code",ExpressionUUID->"de26666d-6328-4a2c-b147-7078c1ad31d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1566523, 36863, 160, 3, 56, "Subsubsection",ExpressionUUID->"27c89c36-d277-4528-b3ee-fab95ab85014"],
Cell[1566686, 36868, 2614, 57, 210, "Code",ExpressionUUID->"e8f4aa96-dc0a-4de2-ab1a-8ec2e3ca415d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1569337, 36930, 160, 3, 56, "Subsubsection",ExpressionUUID->"380a1635-530e-475d-b4c5-cc1f2f7c7c40"],
Cell[1569500, 36935, 939, 26, 114, "Code",ExpressionUUID->"333fbf6b-fea7-45f6-bc7f-4a1b339047c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1570476, 36966, 161, 3, 56, "Subsubsection",ExpressionUUID->"beaefb72-ad5e-408d-88d2-3a22f94c8cde"],
Cell[1570640, 36971, 1534, 41, 450, "Code",ExpressionUUID->"42f7edcd-0834-4d2d-bd78-00d117e8a483"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1572211, 37017, 163, 3, 56, "Subsubsection",ExpressionUUID->"74d3773d-9ec9-4e34-b7ee-0146221a0180"],
Cell[1572377, 37022, 416, 11, 90, "Code",ExpressionUUID->"86e64d1f-e7d4-4463-8061-5f8166f049a0"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1572842, 37039, 89, 0, 46, "Subsection",ExpressionUUID->"5de9877c-dc88-445d-8645-23b4fe7d7ec4"],
Cell[CellGroupData[{
Cell[1572956, 37043, 156, 3, 56, "Subsubsection",ExpressionUUID->"c897c4d0-8129-4afb-8775-6c496cb08d81"],
Cell[1573115, 37048, 3128, 50, 354, "Code",ExpressionUUID->"4631955d-96b6-4d66-b9ad-3bc7daa9a003"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1576280, 37103, 160, 3, 56, "Subsubsection",ExpressionUUID->"e4cc5470-3040-439d-9bf5-e14924c7f07b"],
Cell[1576443, 37108, 1958, 46, 138, "Code",ExpressionUUID->"f71239be-97e8-406b-b853-f413dc7e412d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1578438, 37159, 163, 3, 56, "Subsubsection",ExpressionUUID->"54be2c57-9d7b-4ea2-9415-aa6b4c3ad08b"],
Cell[1578604, 37164, 617, 14, 65, "Code",ExpressionUUID->"a4f46646-cfc2-4630-89c5-4451c0dd903d"],
Cell[1579224, 37180, 55170, 1131, 5741, "Code",ExpressionUUID->"f53e35b2-92ff-4e04-a502-367f97f3470c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1634431, 38316, 158, 3, 56, "Subsubsection",ExpressionUUID->"e2634b83-567f-4341-8c77-8467a521e5b9"],
Cell[1634592, 38321, 2369, 51, 187, "Code",ExpressionUUID->"b7e93898-4ce8-4cda-a3d5-41ccacde49bd"],
Cell[1636964, 38374, 2390, 51, 187, "Code",ExpressionUUID->"7858232b-0a68-4e97-8926-e7feab7594b2"],
Cell[1639357, 38427, 2506, 53, 187, "Code",ExpressionUUID->"ca56b5fa-80fe-4193-864c-1361b086a679"],
Cell[1641866, 38482, 2632, 55, 187, "Code",ExpressionUUID->"ae4e6461-e55e-4a2a-85b4-2eb0d9b1cbbc"],
Cell[1644501, 38539, 2305, 49, 186, "Code",ExpressionUUID->"1952eeae-5f7d-4bc9-9f16-29cb9d5e98c3"],
Cell[1646809, 38590, 1997, 48, 187, "Code",ExpressionUUID->"af07fdf9-7e7c-4790-8368-90bd04963e99"],
Cell[1648809, 38640, 1955, 46, 187, "Code",ExpressionUUID->"9877f782-58a9-4841-9d00-46d00b40b116"],
Cell[1650767, 38688, 1890, 39, 186, "Code",ExpressionUUID->"2e4e2238-90b4-404c-b949-f6dd7e23cf04"],
Cell[1652660, 38729, 2405, 54, 187, "Code",ExpressionUUID->"eca88c5a-d75d-4ca3-8644-d766182220c2"],
Cell[1655068, 38785, 319, 10, 65, "Code",ExpressionUUID->"a667433d-0d72-4502-817d-d3c7367bb3c9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1655436, 38801, 88, 0, 67, "Subsection",ExpressionUUID->"c600ede2-2253-483e-a245-c0763176e513"],
Cell[CellGroupData[{
Cell[1655549, 38805, 156, 3, 70, "Subsubsection",ExpressionUUID->"9f2c17dc-29f7-4c2d-ab5a-6cef42ecebcb"],
Cell[1655708, 38810, 502, 10, 112, "Code",ExpressionUUID->"277cb08c-61d5-4878-8683-18c26950de74"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1656247, 38825, 163, 3, 70, "Subsubsection",ExpressionUUID->"6283b168-12b8-47a3-a3ec-7fb82560ec0a"],
Cell[1656413, 38830, 15017, 305, 2332, "Code",ExpressionUUID->"05bab04f-45b3-45b8-a81c-e86b59ff8e8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1671467, 39140, 160, 3, 70, "Subsubsection",ExpressionUUID->"de553b90-8cb7-49bc-9fe8-1b59abab5c74"],
Cell[1671630, 39145, 976, 21, 112, "Code",ExpressionUUID->"47b6d93e-f4c6-4fe6-8545-0935b4f777d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1672643, 39171, 87, 0, 70, "Subsubsection",ExpressionUUID->"e69d84ab-5463-498f-854b-f9481f6fd04c"],
Cell[1672733, 39173, 995, 22, 142, "Code",ExpressionUUID->"2e795bb4-738e-4185-a58c-3fc83b3a29c5"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1673777, 39201, 155, 3, 46, "Subsection",ExpressionUUID->"9ed494df-c3dc-46e3-8d30-72edcc4aa329"],
Cell[CellGroupData[{
Cell[1673957, 39208, 156, 3, 70, "Subsubsection",ExpressionUUID->"6cf635ce-a21c-466b-b008-8e30b25c1e18"],
Cell[1674116, 39213, 522, 11, 112, "Code",ExpressionUUID->"0cedab26-865e-491d-91a1-0cbed16a6e1b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1674675, 39229, 163, 3, 70, "Subsubsection",ExpressionUUID->"3969b113-4528-4b6e-a32a-9548f838c89b"],
Cell[1674841, 39234, 7283, 164, 1173, "Code",ExpressionUUID->"4db54ca2-f5e9-45ec-8642-6177f8186af8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1682161, 39403, 158, 3, 70, "Subsubsection",ExpressionUUID->"776c3c1f-a70a-49a7-ad7f-0e25006808ee"],
Cell[1682322, 39408, 679, 17, 81, "Code",ExpressionUUID->"547a508b-04d4-4be3-bd68-a6026fab6150"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1683038, 39430, 158, 3, 70, "Subsubsection",ExpressionUUID->"dbf460c1-e6a8-4187-8990-9aa3ee4217e1"],
Cell[1683199, 39435, 684, 16, 112, "Code",ExpressionUUID->"4295c53a-e39b-4176-9cca-16b98051cd26"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1683932, 39457, 206, 4, 46, "Subsection",ExpressionUUID->"9e12619c-c95e-4b6b-a2d7-1fa44ca75b21"],
Cell[CellGroupData[{
Cell[1684163, 39465, 157, 3, 126, "Subsubsection",ExpressionUUID->"b2048827-bbac-4249-9287-eecbe1c73e6a"],
Cell[1684323, 39470, 610, 12, 243, "Code",ExpressionUUID->"df842ca0-7674-40ee-845b-1905b3866b61"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1684970, 39487, 163, 3, 126, "Subsubsection",ExpressionUUID->"a112cf7b-60c5-4916-9921-9cffb17a6f46"],
Cell[1685136, 39492, 3319, 77, 1585, "Code",ExpressionUUID->"197a56b8-7fe3-4ab1-8cf7-ee6aeddffc9f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1688492, 39574, 160, 3, 126, "Subsubsection",ExpressionUUID->"4ca2f99f-5d97-4145-bff2-7dc0be77932b"],
Cell[1688655, 39579, 311, 8, 243, "Code",ExpressionUUID->"b72c27a5-fab1-4976-a9a5-907c04a2f35a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1689003, 39592, 160, 3, 126, "Subsubsection",ExpressionUUID->"bf02fe9a-d6d2-4617-9940-8a771d66b742"],
Cell[1689166, 39597, 624, 15, 183, "Code",ExpressionUUID->"f31b744c-cef5-45f1-8e00-763dbcd43a60"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1689839, 39618, 84, 0, 46, "Subsection",ExpressionUUID->"1f7ea93e-cc68-4e47-9f98-0f4f291302ee"],
Cell[CellGroupData[{
Cell[1689948, 39622, 156, 3, 70, "Subsubsection",ExpressionUUID->"9f3864d8-dca5-4c42-80a0-b51e3bd4871b"],
Cell[1690107, 39627, 826, 15, 112, "Code",ExpressionUUID->"8d14fff6-4b8c-4193-83e5-6cda8e4d1f48"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1690970, 39647, 163, 3, 70, "Subsubsection",ExpressionUUID->"64595bb4-a591-4de3-bcb5-b17cf49168e6"],
Cell[1691136, 39652, 44261, 908, 4191, "Code",ExpressionUUID->"a4faf0bc-5eeb-49c0-bf5e-860578dd2853"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1735434, 40565, 159, 3, 70, "Subsubsection",ExpressionUUID->"2b428564-dedd-453b-9d5a-20000496ba89"],
Cell[1735596, 40570, 1086, 26, 142, "Code",ExpressionUUID->"0a812c37-f124-4b87-bc15-c4bd5ecd4970"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1736719, 40601, 158, 3, 70, "Subsubsection",ExpressionUUID->"f1cf0190-85d8-4945-b89b-868ee2d55c71"],
Cell[1736880, 40606, 1753, 35, 322, "Code",ExpressionUUID->"3c664b8b-b964-46ae-9d84-00b153bb3012"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1738682, 40647, 232, 4, 46, "Subsection",ExpressionUUID->"6b175291-20d9-4d8b-a1fc-df2e979fc58d"],
Cell[CellGroupData[{
Cell[1738939, 40655, 156, 3, 56, "Subsubsection",ExpressionUUID->"c18810e2-d43b-42e9-811d-825cfacf5938"],
Cell[1739098, 40660, 1334, 22, 114, "Code",ExpressionUUID->"65a14529-660a-4f3c-9101-0a463ed0d6c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1740469, 40687, 163, 3, 56, "Subsubsection",ExpressionUUID->"88518556-c845-4db4-856c-855a5c0bbfe5"],
Cell[1740635, 40692, 51426, 1028, 4481, "Code",ExpressionUUID->"96f015fa-4ead-4eb8-a1db-1a8a830fa168"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1792098, 41725, 160, 3, 56, "Subsubsection",ExpressionUUID->"c13b0ca0-8d90-4837-9152-e7ca70215a74"],
Cell[1792261, 41730, 1533, 34, 234, "Code",ExpressionUUID->"edfa81f1-6da2-4049-aec0-87cdb3c7f832"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1793831, 41769, 208, 4, 56, "Subsubsection",ExpressionUUID->"71d52d56-730d-4c75-b6df-3243656bbe80"],
Cell[1794042, 41775, 529, 14, 162, "Code",ExpressionUUID->"c592ed7c-3dd5-44cc-b14e-fd72bee42c4f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1794620, 41795, 155, 3, 67, "Subsection",ExpressionUUID->"52f7ca5e-b6fd-4489-af4f-452ff44ff830"],
Cell[CellGroupData[{
Cell[1794800, 41802, 156, 3, 210, "Subsubsection",ExpressionUUID->"d7f99620-949b-44e0-8f1f-9e9ff2c67dd6"],
Cell[1794959, 41807, 1358, 22, 518, "Code",ExpressionUUID->"1fa140ca-bec0-45f8-8e41-96a01f31470d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1796354, 41834, 210, 4, 210, "Subsubsection",ExpressionUUID->"a8919ea7-112f-41d0-8d24-e996a7d8f276"],
Cell[1796567, 41840, 7090, 153, 3187, "Code",ExpressionUUID->"65caf97d-45c3-4b53-b916-ef7a415113a1"],
Cell[1803660, 41995, 1445, 34, 453, "Code",ExpressionUUID->"e3007c96-cde4-42bb-872f-b1401bf88a6c"],
Cell[1805108, 42031, 1226, 30, 453, "Code",ExpressionUUID->"1f9536f2-1712-4323-a4f9-e37208fab0c0"],
Cell[1806337, 42063, 648, 14, 550, "Code",ExpressionUUID->"725dc63e-b7be-4b2e-9d1d-bfbe92796abe"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1807034, 42083, 84, 0, 46, "Subsection",ExpressionUUID->"7705db07-c604-4c5a-a978-eca143a8534f"],
Cell[CellGroupData[{
Cell[1807143, 42087, 156, 3, 56, "Subsubsection",ExpressionUUID->"930a52ee-7136-45f3-bf9e-11b5908f356d"],
Cell[1807302, 42092, 811, 15, 114, "Code",ExpressionUUID->"ceeb0b3d-f6e3-4797-bc7f-68eac4c1d6af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1808150, 42112, 163, 3, 56, "Subsubsection",ExpressionUUID->"92bf0c0c-785f-4b24-ab9d-4dd79ea605eb"],
Cell[1808316, 42117, 52353, 1062, 4107, "Code",ExpressionUUID->"1c01e065-b52c-4ae3-8f07-dc9dca1516f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1860706, 43184, 158, 3, 56, "Subsubsection",ExpressionUUID->"a57363e1-28cc-485f-a2a7-af57c949d426"],
Cell[1860867, 43189, 1845, 39, 210, "Code",ExpressionUUID->"7cca217a-d72f-403c-91f6-b58579412494"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1862749, 43233, 158, 3, 56, "Subsubsection",ExpressionUUID->"9720a47d-3b10-4ce1-9014-0dc6464c837f"],
Cell[1862910, 43238, 259, 7, 90, "Code",ExpressionUUID->"1e175c6f-f592-46e0-86d7-d3785a187d79"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1863218, 43251, 84, 0, 67, "Subsection",ExpressionUUID->"ace3b29b-39cb-4e05-933d-87ebaaa7716b"],
Cell[CellGroupData[{
Cell[1863327, 43255, 156, 3, 56, "Subsubsection",ExpressionUUID->"a11640c6-a001-460e-a01c-b858094c66c1"],
Cell[1863486, 43260, 1542, 25, 162, "Code",ExpressionUUID->"368635b4-492e-42a0-88a6-2599f14165ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1865065, 43290, 163, 3, 56, "Subsubsection",ExpressionUUID->"e5bb1dc3-7e81-4e21-8165-269803f539c1"],
Cell[1865231, 43295, 71129, 1489, 5909, "Code",ExpressionUUID->"944f7f45-6069-4043-905a-70c9b2e672dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1936397, 44789, 162, 3, 56, "Subsubsection",ExpressionUUID->"c5549937-2756-4dd0-b1e4-66fb638622c5"],
Cell[1936562, 44794, 1922, 47, 139, "Code",ExpressionUUID->"561fb7d9-6288-40f3-a6fe-19560c0e749c"],
Cell[1938487, 44843, 1759, 44, 139, "Code",ExpressionUUID->"fc7f87c6-f516-46eb-af46-d97129fee0d6"],
Cell[1940249, 44889, 1367, 35, 138, "Code",ExpressionUUID->"69629539-a568-4899-9ca1-d53425897e6e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1941653, 44929, 160, 3, 56, "Subsubsection",ExpressionUUID->"61a1b39c-c11e-400d-a098-c152e2fbc447"],
Cell[1941816, 44934, 2372, 46, 210, "Code",ExpressionUUID->"a0f7ddf0-fbb2-4b75-9ebc-5d9df74e9803"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1944225, 44985, 161, 3, 56, "Subsubsection",ExpressionUUID->"82275bc7-918b-42ea-8661-95d4063a8ce3"],
Cell[1944389, 44990, 547, 14, 162, "Code",ExpressionUUID->"90e0e4c2-8d24-4564-9cb8-928d201bf6da"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1944997, 45011, 167, 3, 84, "Section",ExpressionUUID->"e22283a5-5703-4d29-8618-19adb764ca3e"],
Cell[CellGroupData[{
Cell[1945189, 45018, 229, 4, 67, "Subsection",ExpressionUUID->"91164660-6832-410b-9a6e-7dc73876d9ef"],
Cell[CellGroupData[{
Cell[1945443, 45026, 156, 3, 56, "Subsubsection",ExpressionUUID->"4cda8453-61a1-49bf-96ff-a710ad84469a"],
Cell[1945602, 45031, 545, 11, 90, "Code",ExpressionUUID->"fc180173-0fa6-43f6-a5b2-13ac84c4e4b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1946184, 45047, 163, 3, 56, "Subsubsection",ExpressionUUID->"9af869f2-6f50-46bb-b7af-960a772c58ba"],
Cell[1946350, 45052, 50349, 995, 3799, "Code",ExpressionUUID->"dad9e441-fb1a-4b23-a79b-55bef76eba94"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1996736, 46052, 157, 3, 70, "Subsubsection",ExpressionUUID->"a806768f-ff76-47a1-aba6-629149705eac"],
Cell[1996896, 46057, 1416, 29, 112, "Code",ExpressionUUID->"d6b56ab5-fedd-4366-a538-aa0acb6aa5e8"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1998361, 46092, 162, 3, 46, "Subsection",ExpressionUUID->"a2a2707c-131a-48a8-b69c-858d4f8048e2"],
Cell[CellGroupData[{
Cell[1998548, 46099, 156, 3, 56, "Subsubsection",ExpressionUUID->"de0da720-2fd0-4dbc-af36-e94fd3dc76a5"],
Cell[1998707, 46104, 1827, 29, 186, "Code",ExpressionUUID->"d1bb2114-4051-442a-a765-4aa934f4fc1b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2000571, 46138, 163, 3, 56, "Subsubsection",ExpressionUUID->"796f9111-a9d6-4168-b215-d5b74b896461"],
Cell[2000737, 46143, 40468, 759, 2555, "Code",ExpressionUUID->"715cba62-30a3-474b-aa87-a195f2a53694"],
Cell[2041208, 46904, 1329, 33, 91, "Code",ExpressionUUID->"eb3e3a2f-0b40-4a2f-ba7a-ee449062cb0e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2042574, 46942, 158, 3, 56, "Subsubsection",ExpressionUUID->"d880ed02-37db-4bbf-b78a-3080d1645452"],
Cell[2042735, 46947, 1460, 32, 138, "Code",ExpressionUUID->"d9f621e1-ad11-4969-a3b9-73b458cc9c96"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2044244, 46985, 93, 0, 67, "Subsection",ExpressionUUID->"95908736-6e20-4608-8281-6142e72c8099"],
Cell[CellGroupData[{
Cell[2044362, 46989, 156, 3, 56, "Subsubsection",ExpressionUUID->"c85c3eea-b8ab-4ed1-8a0d-55b061f818fc"],
Cell[2044521, 46994, 1865, 30, 186, "Code",ExpressionUUID->"019af163-2da8-4766-859f-dcbbf8403f5d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2046423, 47029, 163, 3, 56, "Subsubsection",ExpressionUUID->"1d13d006-1ef8-4b8e-bbc9-0b6ca8be434e"],
Cell[2046589, 47034, 68718, 1420, 5451, "Code",ExpressionUUID->"863835c9-e3ee-4817-ab32-188bab86501d"],
Cell[2115310, 48456, 1421, 34, 91, "Code",ExpressionUUID->"aeeb44f6-0e44-4419-9b3b-38951b48ed21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2116768, 48495, 160, 3, 56, "Subsubsection",ExpressionUUID->"dedf6223-0cc3-415b-889a-d22139b20cd4"],
Cell[2116931, 48500, 1588, 36, 162, "Code",ExpressionUUID->"d183d749-6ef4-425b-a696-ce96e63fb028"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2118568, 48542, 214, 4, 67, "Subsection",ExpressionUUID->"31f8cf0a-32b4-4d00-be2f-2fd2072a2ade"],
Cell[CellGroupData[{
Cell[2118807, 48550, 156, 3, 210, "Subsubsection",ExpressionUUID->"f13c13df-2c30-4a43-9ddc-af91f30b169e"],
Cell[2118966, 48555, 2738, 42, 793, "Code",ExpressionUUID->"c53ffdea-c340-496f-be21-abd7b0716d6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2121741, 48602, 163, 3, 210, "Subsubsection",ExpressionUUID->"ed75a966-987b-4bd8-842e-68142a54ce02"],
Cell[2121907, 48607, 10336, 229, 3391, "Code",ExpressionUUID->"652f12f1-ec5b-4ec5-a966-1d2f27a6f5df"],
Cell[2132246, 48838, 9574, 208, 3293, "Code",ExpressionUUID->"6f9bb147-4beb-4291-839c-51da4dceac41"],
Cell[2141823, 49048, 11687, 251, 3566, "Code",ExpressionUUID->"0332d0e0-1cfb-4e93-a060-16cd76de0fef"],
Cell[2153513, 49301, 1699, 42, 516, "Code",ExpressionUUID->"b0e38398-155e-41ae-9925-43f1aaa63f30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2155249, 49348, 158, 3, 200, "Subsubsection",ExpressionUUID->"2441b342-24e8-4a33-8a1a-1c77334fc66f"],
Cell[2155410, 49353, 664, 18, 243, "Code",ExpressionUUID->"5be71ed4-d6c8-4862-804c-ba5e024d4598"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2156123, 49377, 86, 0, 46, "Subsection",ExpressionUUID->"9aa466c4-fcbb-4363-9c3d-4e50b9fff8d0"],
Cell[CellGroupData[{
Cell[2156234, 49381, 156, 3, 70, "Subsubsection",ExpressionUUID->"d34d707f-a2a9-4d15-bde5-e724e19d1e25"],
Cell[2156393, 49386, 878, 16, 142, "Code",ExpressionUUID->"544221c0-7165-452a-b218-f6ce6f9b007f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2157308, 49407, 163, 3, 70, "Subsubsection",ExpressionUUID->"56043399-0bb1-4b9c-b6ad-d57380ba038a"],
Cell[2157474, 49412, 45247, 954, 4658, "Code",ExpressionUUID->"429613b2-3475-4284-bcda-ea8f3ea9726a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2202758, 50371, 159, 3, 70, "Subsubsection",ExpressionUUID->"c4607337-c462-460f-bef3-fd92e8009768"],
Cell[2202920, 50376, 1710, 35, 202, "Code",ExpressionUUID->"46e2797c-f123-42db-965b-b8163a583c30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2204667, 50416, 87, 0, 70, "Subsubsection",ExpressionUUID->"b44c9488-5aa4-4641-9cb7-e65a92b5b15e"],
Cell[2204757, 50418, 1137, 27, 142, "Code",ExpressionUUID->"2c4b67ba-a3e7-47a0-b68b-e0741b6d89e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2205931, 50450, 159, 3, 70, "Subsubsection",ExpressionUUID->"8a4c58eb-6a68-41fc-8f04-2c43515874a3"],
Cell[2206093, 50455, 599, 15, 172, "Code",ExpressionUUID->"c1ca4445-5b24-4618-aeef-019f750e7b9d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2206741, 50476, 211, 4, 46, "Subsection",ExpressionUUID->"4d7dd79d-2e81-4488-8ac9-44fc9fa7c3c4"],
Cell[CellGroupData[{
Cell[2206977, 50484, 156, 3, 56, "Subsubsection",ExpressionUUID->"f3a0de6b-0b2c-447e-9405-695a7222b07c"],
Cell[2207136, 50489, 584, 11, 90, "Code",ExpressionUUID->"b4b14427-5274-44fc-a29c-806e20d6c555"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2207757, 50505, 163, 3, 56, "Subsubsection",ExpressionUUID->"4c8aad95-6297-49d8-b3c0-a5c1860fddf3"],
Cell[2207923, 50510, 23398, 482, 1949, "Code",ExpressionUUID->"00400901-ccbb-466c-84c3-6ed320dadb3e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2231358, 50997, 87, 0, 56, "Subsubsection",ExpressionUUID->"89050da3-74be-4ba3-9dce-62cc62b9fa47"],
Cell[2231448, 50999, 948, 21, 65, "Code",ExpressionUUID->"37038112-6241-40be-920c-f6bfb93e3fbf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2232433, 51025, 87, 0, 56, "Subsubsection",ExpressionUUID->"990b7bc7-982c-474b-a6ad-1a65fdb5ecb3"],
Cell[2232523, 51027, 949, 22, 114, "Code",ExpressionUUID->"2a71f4dd-182b-4504-a9dc-017521939500"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2233509, 51054, 160, 3, 56, "Subsubsection",ExpressionUUID->"24f8fa5f-389e-4166-aa42-ac77beee6d79"],
Cell[2233672, 51059, 1180, 29, 210, "Code",ExpressionUUID->"4dc97b3a-09a3-4fb2-ba2a-695720b0d2b6"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2234901, 51094, 213, 4, 46, "Subsection",ExpressionUUID->"e1c791f3-6baa-4dc4-93e8-3c789dc17150"],
Cell[CellGroupData[{
Cell[2235139, 51102, 157, 3, 56, "Subsubsection",ExpressionUUID->"4bc3322c-596d-441d-9773-7a39d69f7a53"],
Cell[2235299, 51107, 893, 16, 90, "Code",ExpressionUUID->"7f2842c4-17bc-416e-ac69-08deec84e218"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2236229, 51128, 163, 3, 56, "Subsubsection",ExpressionUUID->"324dbd2b-53d6-4dbf-8619-94eb2915645c"],
Cell[2236395, 51133, 41145, 854, 3181, "Code",ExpressionUUID->"b2b0c35d-2382-4d6b-aeee-4b3a348712a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2277577, 51992, 160, 3, 56, "Subsubsection",ExpressionUUID->"5e50f12b-34a3-4dae-b10b-35745be90890"],
Cell[2277740, 51997, 2044, 40, 210, "Code",ExpressionUUID->"c6809743-5f84-4a91-8630-11b9387a6e61"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2279821, 52042, 158, 3, 56, "Subsubsection",ExpressionUUID->"8d3f2d02-9d3c-48bf-90eb-a514ee49fa23"],
Cell[2279982, 52047, 1822, 45, 234, "Code",ExpressionUUID->"e5941daf-b574-498b-8c0e-f5afc931a007"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2281853, 52098, 423, 6, 46, "Subsection",ExpressionUUID->"2cdd0838-2ebd-4dd2-baae-d3ace1c006fd"],
Cell[CellGroupData[{
Cell[2282301, 52108, 156, 3, 70, "Subsubsection",ExpressionUUID->"b725d167-3565-4aea-90ee-ef84a6b5230f"],
Cell[2282460, 52113, 1530, 29, 262, "Code",ExpressionUUID->"02419201-364a-4764-a8de-06ab610d640f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2284027, 52147, 163, 3, 70, "Subsubsection",ExpressionUUID->"25a9bc4e-e46d-4597-9e90-e348de8f07b6"],
Cell[2284193, 52152, 47169, 913, 4587, "Code",ExpressionUUID->"caac3509-e984-4019-99d6-456845cefb34"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2331399, 53070, 87, 0, 70, "Subsubsection",ExpressionUUID->"d553aa7d-b596-4ae7-bfe0-8de86b74e0e0"],
Cell[2331489, 53072, 2868, 53, 292, "Code",ExpressionUUID->"0661ac18-2c3c-4079-8420-7d3678d09b41"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2334394, 53130, 160, 3, 70, "Subsubsection",ExpressionUUID->"889676e9-4bf5-4423-9f50-aa7a1df8f7d2"],
Cell[2334557, 53135, 1424, 31, 172, "Code",ExpressionUUID->"93516ea1-90b1-4c80-a544-866458c861f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2336018, 53171, 163, 3, 70, "Subsubsection",ExpressionUUID->"edcb1090-a3e4-4e43-9e10-942f3bd38c21"],
Cell[2336184, 53176, 710, 16, 202, "Code",ExpressionUUID->"99f887a3-1a0f-4c83-b457-9f94615b64e7"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2336943, 53198, 243, 4, 46, "Subsection",ExpressionUUID->"40dfd640-0212-4454-9cbd-b77220008346"],
Cell[CellGroupData[{
Cell[2337211, 53206, 156, 3, 70, "Subsubsection",ExpressionUUID->"5dbd2d8c-2d59-4f60-be34-60520a356845"],
Cell[2337370, 53211, 1442, 32, 412, "Code",ExpressionUUID->"18fb80cb-9119-45b9-a5c4-658e484af97b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2338849, 53248, 163, 3, 70, "Subsubsection",ExpressionUUID->"d97232ec-3798-4e21-a3d0-4ab6631c64e6"],
Cell[2339015, 53253, 29606, 584, 3212, "Code",ExpressionUUID->"6d27d783-39dc-4c80-80d2-54518a3ed583"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2368658, 53842, 160, 3, 70, "Subsubsection",ExpressionUUID->"3eb13cb0-62d6-48c0-92e6-9eab4b04ea28"],
Cell[2368821, 53847, 1602, 44, 172, "Code",ExpressionUUID->"823ffeb0-80f4-493d-8d16-bb933eb0f127"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2370460, 53896, 157, 3, 70, "Subsubsection",ExpressionUUID->"265d7a1b-9b03-4e3a-b339-1c5179e7182d"],
Cell[2370620, 53901, 1479, 31, 202, "Code",ExpressionUUID->"29885eb5-1849-40f1-a04c-3e06fd8fffca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2372136, 53937, 163, 3, 70, "Subsubsection",ExpressionUUID->"7bddaeae-cbe0-419a-84d0-6ba6361c0572"],
Cell[2372302, 53942, 1086, 27, 262, "Code",ExpressionUUID->"7685f096-e7b0-46c1-b7f1-89889838c646"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2373437, 53975, 91, 0, 46, "Subsection",ExpressionUUID->"4bce4d5b-d870-4abf-8f1a-c919feb9e0ce"],
Cell[CellGroupData[{
Cell[2373553, 53979, 156, 3, 210, "Subsubsection",ExpressionUUID->"075ff897-456c-410e-9952-9ec4f507cdda"],
Cell[2373712, 53984, 809, 15, 335, "Code",ExpressionUUID->"dd3ec1c7-0457-4b9e-aaf0-b28453a5c961"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2374558, 54004, 163, 3, 210, "Subsubsection",ExpressionUUID->"bb5acfdb-7244-4849-9de3-30daec1baa07"],
Cell[2374724, 54009, 12307, 257, 5956, "Code",ExpressionUUID->"91185ca6-a1c4-481d-852a-fbf349eb972c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2387068, 54271, 87, 0, 210, "Subsubsection",ExpressionUUID->"7f89a814-576e-4acd-842a-c9db5299ea5b"],
Cell[2387158, 54273, 761, 18, 335, "Code",ExpressionUUID->"e20cfd66-d9e9-44b6-a80d-f31ae114d25a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2387956, 54296, 87, 0, 210, "Subsubsection",ExpressionUUID->"0799de86-7434-452f-bc3c-639a9eafcaa0"],
Cell[2388046, 54298, 1433, 33, 610, "Code",ExpressionUUID->"f5491eb1-4246-455c-a14b-c3a836b2fcff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2389516, 54336, 159, 3, 210, "Subsubsection",ExpressionUUID->"2b956c1e-c4a7-434c-870b-248ddff466a7"],
Cell[2389678, 54341, 297, 8, 243, "Code",ExpressionUUID->"21187646-720f-464b-8062-213254a952f9"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2390024, 54355, 94, 0, 46, "Subsection",ExpressionUUID->"1f123f0a-20ec-4bcb-95e8-04909875b67a"],
Cell[CellGroupData[{
Cell[2390143, 54359, 156, 3, 210, "Subsubsection",ExpressionUUID->"ab525055-33b1-40a0-87be-b5c7e9e8d9c8"],
Cell[2390302, 54364, 802, 15, 335, "Code",ExpressionUUID->"a6c4b076-88bf-4624-9185-e82392aae29e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2391141, 54384, 163, 3, 210, "Subsubsection",ExpressionUUID->"1675f3fe-4582-4a7d-abc3-052f317e0c98"],
Cell[2391307, 54389, 2303, 60, 977, "Code",ExpressionUUID->"90f4e859-f4da-4060-9e59-9faa205993b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2393647, 54454, 87, 0, 210, "Subsubsection",ExpressionUUID->"772939a9-b1c8-474e-94cf-5fded27a4b5e"],
Cell[2393737, 54456, 836, 20, 335, "Code",ExpressionUUID->"c904b69d-6e37-4367-bc31-2887f8b450be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2394610, 54481, 87, 0, 210, "Subsubsection",ExpressionUUID->"49f5b039-1f0f-40a2-8dff-c247535e3abf"],
Cell[2394700, 54483, 937, 22, 428, "Code",ExpressionUUID->"22f95fc4-03a8-4d56-bb02-8dcbeb9c4fa7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2395674, 54510, 161, 3, 210, "Subsubsection",ExpressionUUID->"015fa1eb-e9d7-42ad-8f04-fae868f25426"],
Cell[2395838, 54515, 306, 8, 243, "Code",ExpressionUUID->"2b714f28-37ae-4abb-9613-d28b24cef870"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2396193, 54529, 88, 0, 46, "Subsection",ExpressionUUID->"0d343083-a116-4ea4-a8ab-3d69eb542d71"],
Cell[CellGroupData[{
Cell[2396306, 54533, 156, 3, 210, "Subsubsection",ExpressionUUID->"f6f8b0df-4929-434e-bf71-f7d7c69007b4"],
Cell[2396465, 54538, 660, 13, 335, "Code",ExpressionUUID->"66f54936-b3a4-4e8c-a7c5-06b96c19a0e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2397162, 54556, 163, 3, 210, "Subsubsection",ExpressionUUID->"215c619d-4404-4531-9340-c8285f2d0038"],
Cell[2397328, 54561, 9710, 214, 5678, "Code",ExpressionUUID->"36217579-b395-4e1f-95cc-850588f56e6f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2407075, 54780, 87, 0, 210, "Subsubsection",ExpressionUUID->"fc2d3a6d-6d5c-460c-bf88-6f5fc457590f"],
Cell[2407165, 54782, 1410, 34, 610, "Code",ExpressionUUID->"51fab449-1b84-41a7-b468-44d5114d56fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2408612, 54821, 87, 0, 210, "Subsubsection",ExpressionUUID->"ac2f350b-78dd-4bf0-a2bc-0b3250cf2c1f"],
Cell[2408702, 54823, 704, 17, 335, "Code",ExpressionUUID->"e0ce4515-ed97-4dac-a863-6bb52c3f50b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2409443, 54845, 161, 3, 210, "Subsubsection",ExpressionUUID->"213b4b54-fbbb-4bb3-8102-4d44ca28dad7"],
Cell[2409607, 54850, 289, 7, 243, "Code",ExpressionUUID->"2beaab80-1e1f-4b89-a2e8-19b7e10aa7b9"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2409945, 54863, 91, 0, 46, "Subsection",ExpressionUUID->"08361093-baa7-4fb2-80e4-06c98c44ae80"],
Cell[CellGroupData[{
Cell[2410061, 54867, 156, 3, 210, "Subsubsection",ExpressionUUID->"9b794274-4a11-4719-a02e-f37eb37579d2"],
Cell[2410220, 54872, 670, 13, 335, "Code",ExpressionUUID->"5a9d6379-4db8-4cfe-8765-76111e5675ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2410927, 54890, 163, 3, 210, "Subsubsection",ExpressionUUID->"fe5f4d9e-1f49-4cf7-8038-79d57d559552"],
Cell[2411093, 54895, 2638, 68, 1187, "Code",ExpressionUUID->"7f9aa6a9-15bc-4eac-bf54-973d21216c4c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2413768, 54968, 87, 0, 210, "Subsubsection",ExpressionUUID->"f08c104e-41ad-425f-9d28-705730ba62a0"],
Cell[2413858, 54970, 1301, 33, 610, "Code",ExpressionUUID->"d3cb501f-9d29-4b61-982f-5e1850730e09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2415196, 55008, 87, 0, 210, "Subsubsection",ExpressionUUID->"6140255f-ec9a-4f56-a54e-c498c484f33d"],
Cell[2415286, 55010, 681, 17, 243, "Code",ExpressionUUID->"e19cbf5c-09b2-4d0d-b98b-fac97241bd8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2416004, 55032, 159, 3, 210, "Subsubsection",ExpressionUUID->"74e3571e-0f37-4468-9dda-68771be17391"],
Cell[2416166, 55037, 298, 8, 243, "Code",ExpressionUUID->"4c3b4f80-16a7-4207-93c2-b3dc081ed253"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2416537, 55053, 77, 0, 86, "Chapter",ExpressionUUID->"9e7a41c9-f14c-410a-a386-1b3b18771802"],
Cell[2416617, 55055, 1292, 30, 79852, "Code",ExpressionUUID->"24dd4262-847d-4354-b33f-0afd48df8d8e"],
Cell[2417912, 55087, 473, 10, 44452, "Code",ExpressionUUID->"93d977e5-d294-4f2d-88fd-a7663acfa234"],
Cell[2418388, 55099, 281, 6, 44452, "Code",ExpressionUUID->"a4e621c3-d10e-4117-b0a3-fee82c3f4c54"]
}, Closed]]
}
]
*)

