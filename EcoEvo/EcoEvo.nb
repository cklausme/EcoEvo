(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1669668,      37320]
NotebookOptionsPosition[   1620756,      36539]
NotebookOutlinePosition[   1621732,      36573]
CellTagsIndexPosition[   1621689,      36570]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
heart = tested with new guild nomenclature
club = uses EcoEqns/EvoEqns\
\>", "Text",
 CellChangeTimes->{{3.755194336740038*^9, 3.755194354939456*^9}, {
  3.755266350100189*^9, 3.755266350316128*^9}, {3.755814314814104*^9, 
  3.755814334631366*^9}},ExpressionUUID->"8625f8ec-707c-4645-8dba-\
c554347b4827"],

Cell[CellGroupData[{

Cell["Begin", "Section",
 CellChangeTimes->{{3.688571926165935*^9, 
  3.68857192691094*^9}},ExpressionUUID->"ee91c845-923f-4862-a074-\
70610eec46ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"hack", " ", "to", " ", "address"}], " ", "<", 
     RowBox[{"https", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
         "questions"}], "/", "167143"}], "/", "setdelayedwrsym"}], "-", "on", 
      "-", "first", "-", "use", "-", "of", "-", "formalx"}], ">"}]}], " ", 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"ContourPlot", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.737047601991708*^9, 3.737047606676053*^9}, {
  3.7370477948534613`*^9, 3.737047798125465*^9}, {3.737048144402083*^9, 
  3.737048145672566*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"76f16d85-e149-4291-bc81-575debee65dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<EcoEvo`\>\"", "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.683718353527194*^9, 3.6837183539277973`*^9}, 
   3.725323159113635*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"17161ef8-7f50-4d34-b3e6-90b10fd2d8f8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "@@", 
   RowBox[{"Names", "[", "\"\<EcoEvo`*\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "@@", 
   RowBox[{"Names", "[", "\"\<EcoEvo`*\>\"", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.6884670295521193`*^9, 3.688467037498824*^9}, {
  3.725323159636595*^9, 3.7253231601857643`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"5b56744b-6c60-4503-bff9-c7931f653e8e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Public", "Section",
 CellChangeTimes->{{3.697579150718771*^9, 
  3.697579151943507*^9}},ExpressionUUID->"e81aba31-0d97-4477-be9e-\
65159a258a3e"],

Cell[CellGroupData[{

Cell["General Utilities", "Subsection",
 CellChangeTimes->{{3.683807192051161*^9, 3.6838071933356857`*^9}, {
  3.6838073166123123`*^9, 
  3.683807317411933*^9}},ExpressionUUID->"9e4fcf98-a656-4ad1-bdc5-\
07decd0bf7ef"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RestrictedTo", "::", "usage"}], "=", 
    "\"\<RestrictedTo[\!\(\*StyleBox[\"x\", \"TI\"]\), \
{\!\(\*StyleBox[SubscriptBox[\"x\", \"min\"], \"TI\"]\), \
\!\(\*StyleBox[SubscriptBox[\"x\", \"max\"], \"TI\"]\)}] restricts numerical \
value \!\(\*StyleBox[\"x\", \"TI\"]\) to the range \
{\!\(\*StyleBox[SubscriptBox[\"x\", \"min\"], \"TI\"]\), \
\!\(\*StyleBox[SubscriptBox[\"x\", \"max\"], \"TI\"]\)}.\n\
RestrictedTo[\!\(\*StyleBox[\"x\", \"TI\"]\), \
Interval[{\!\(\*StyleBox[SubscriptBox[\"x\", \"min\"], \"TI\"]\), \
\!\(\*StyleBox[SubscriptBox[\"x\", \"max\"], \"TI\"]\)}]] does the \
same.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"VarSort", "::", "usage"}], "=", 
    "\"\<VarSort[\!\(\*StyleBox[\"rulelist\", \"TI\"]\), \
\!\(\*StyleBox[\"vars\", \"TI\"]\)] sorts \!\(\*StyleBox[\"rulelist\", \
\"TI\"]\) in order of \!\(\*StyleBox[\"vars\", \"TI\"]\).\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"orderedComplement", "::", "usage"}], "=", 
    "\"\<orderedComplement is like Complement, but doesn't sort the \
list.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EqSort", "::", "usage"}], "=", 
    "\"\<EqSort[\!\(\*StyleBox[\"list\", \"TI\"]\)] sorts \
\!\(\*StyleBox[\"list\", \"TI\"]\) in order of increasing species richness.\>\
\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReplaceRHS", "::", "usage"}], "=", 
    "\"\<ReplaceRHS[\!\(\*StyleBox[\"eqn\", \"TI\"]\), \
\!\(\*StyleBox[\"rule\", \"TI\"]\)] applies replacement rule \
\!\(\*StyleBox[\"rule\", \"TI\"]\) to the right-hand side of \
\!\(\*StyleBox[\"eqn\", \"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReplaceLHS", "::", "usage"}], "=", 
    "\"\<ReplaceLHS[eqn, rule] applies replacement rule rule to the left-hand \
side of eqn.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RHS", "::", "usage"}], "=", 
    "\"\<RHS is a replacement rule that returns the right-hand side of \
equations.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LHS", "::", "usage"}], "=", 
    "\"\<LHS is a replacement rule that returns the left-hand side of \
equations.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Eq", "::", "usage"}], "=", 
    "\"\<Eq is a replacement rule that sets time derivatives to zero and next \
time steps equal to this time steps.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ZeroLHS", "::", "usage"}], "=", 
    "\"\<ZeroLHS is a replacement rule that sets the left hand side of \
equations equal to zero.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ZeroVector", "::", "usage"}], "=", 
    "\"\<ZeroVector[\!\(\*StyleBox[\"d\", \"TI\"]\)] returns a \
\!\(\*StyleBox[\"d\", \"TI\"]\)-dimensional zero vector.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SubscriptAdd", "::", "usage"}], "=", 
    "\"\<SubscriptAdd[\!\(\*StyleBox[\"expr\", \"TI\"]\), \
\!\(\*StyleBox[\"add\", \"TI\"]\)] adds \!\(\*StyleBox[\"add\", \"TI\"]\) \
(default=1) to all subscripts in \!\(\*StyleBox[\"expr\", \"TI\"]\).\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DeleteSubscript", "::", "usage"}], "=", 
    "\"\<DeleteSubscript[\!\(\*StyleBox[\"expr\", \"TI\"]\)] removes the \
subscript from \!\(\*StyleBox[\"expr\", \"TI\"]\).\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ZeroSubscript", "::", "usage"}], "=", 
    "\"\<ZeroSubscript[\!\(\*StyleBox[\"expr\", \"TI\"]\)] changes the \
subscript in \!\(\*StyleBox[\"expr\", \"TI\"]\) to zero.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HighlightChanges", "::", "usage"}], "=", 
    "\"\<HighlightChanges[True] turns on change highlighting. \
HighlightChanges[False] turns it off.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExtractColors", "::", "usage"}], "=", 
    "\"\<ExtractColor[\!\(\*StyleBox[\"list\", \"TI\"]\)] extracts colors \
from \!\(\*StyleBox[\"list\", \"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"axisFlip", "::", "usage"}], "=", 
    "\"\<axisFlip exchanges axes on Graphics object.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FuncStyle", "::", "usage"}], "=", 
    "\"\<FuncStyle[\!\(\*StyleBox[\"string\", \"TI\"]\)] formats \
\!\(\*StyleBox[\"string\", \"TI\"]\) for use in debugging output.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PrintCall", "::", "usage"}], "=", 
    "\"\<PrintCall[\!\(\*StyleBox[\"expression\", \"TI\"]\)] prints \
\!\(\*StyleBox[\"expression\", \"TI\"]\) unevaluated.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Msg", "::", "usage"}], "=", 
    "\"\<Msg[\!\(\*StyleBox[\"message\", \"TI\"]\)] is a robust replacement \
for Message.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RuleList", "::", "usage"}], "=", "\n", 
    "\"\<RuleList[\!\(\*StyleBox[\"var\", \"TI\"]\), \!\(\*StyleBox[\"n\", \
\"TI\"]\), \!\(\*StyleBox[\"val\", \"TI\"]\)] makes a list of \!\(\*StyleBox[\
\"n\", \"TI\"]\) rules where \!\(\*StyleBox[\"var\", \"TI\"]\) takes on value \
\!\(\*StyleBox[\"val\", \"TI\"]\).\nRuleList[\!\(\*StyleBox[\"var\", \
\"TI\"]\), \!\(\*StyleBox[\"n\", \"TI\"]\), {\!\(\*StyleBox[\"min\", \
\"TI\"]\), \!\(\*StyleBox[\"max\", \"TI\"]\)}] makes a list of \
\!\(\*StyleBox[\"n\", \"TI\"]\) rules where \!\(\*StyleBox[\"var\", \"TI\"]\) \
ranges from \!\(\*StyleBox[\"min\", \"TI\"]\) to \!\(\*StyleBox[\"max\", \"TI\
\"]\).\nRuleList[\!\(\*StyleBox[\"vars\", \"TI\"]\), \!\(\*StyleBox[\"n\", \
\"TI\"]\), \!\(\*StyleBox[\"vals\", \"TI\"]\)] makes a list of rules between \
corresponding elements of the lists \!\(\*StyleBox[\"vars\", \"TI\"]\) and \!\
\(\*StyleBox[\"vals\", \"TI\"]\).\nRuleList[\!\(\*StyleBox[\"var\", \
\"TI\"]\), \!\(\*StyleBox[\"ns\", \"TI\"]\), \!\(\*StyleBox[\"val\", \
\"TI\"]\)] makes a list of rules with dimensions \!\(\*StyleBox[\"ns\", \
\"TI\"]\) where \!\(\*StyleBox[\"var\", \"TI\"]\) takes on value \
\!\(\*StyleBox[\"val\", \"TI\"]\).\n\
RuleList[{\!\(\*SubscriptBox[StyleBox[\"var\", \"TI\"], \"1\"]\), \
\[Ellipsis], \!\(\*SubscriptBox[StyleBox[\"var\", \"TI\"], \"nv\"]\)}, \
{\!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], \"1\"]\), \[Ellipsis] , \
\!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], \"nv\"]\)}, \
{{\!\(\*SubscriptBox[StyleBox[\"min\", \"TI\"], \"1\"]\), \
\!\(\*SubscriptBox[StyleBox[\"max\", \"TI\"], \"1\"]\)}, \[Ellipsis] , \
{\!\(\*SubscriptBox[StyleBox[\"min\", \"TI\"], \"nv\"]\), \
\!\(\*SubscriptBox[StyleBox[\"max\", \"TI\"], \"nv\"]\)}}] makes a list of \
rules with dimensions \!\(\*StyleBox[\"ns\", \"TI\"]\) where \
\!\(\*SubscriptBox[StyleBox[\"var\", \"TI\"], \"i\"]\) ranges from \
\!\(\*SubscriptBox[StyleBox[\"min\", \"TI\"], \"i\"]\) to \
\!\(\*SubscriptBox[StyleBox[\"max\", \"TI\"], \"i\"]\).\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[IGrave]", "::", "usage"}], "=", 
    "\"\<\[IGrave] is a placeholder index in RuleList and PlotTAD.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ClearCache", "::", "usage"}], "=", 
    "\"\<ClearCache[\!\(\*StyleBox[\"f\", \"TI\"]\), \!\(\*StyleBox[\"g\", \
\"TI\"]\), ...] removes memoized DownValues of \!\(\*StyleBox[\"f\", \
\"TI\"]\), \!\(\*StyleBox[\"g\", \"TI\"]\), etc.\>\""}], ";"}], "\n"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IFFQ", "::", "usage"}], "=", 
    "\"\<IFFQ[\!\(\*StyleBox[\"x\", \"TI\"]\)] is True if \
\!\(\*StyleBox[\"x\", \"TI\"]\) is a InterpolatingFunction function.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Avg", "::", "usage"}], "=", "\n", 
    "\"\<Avg[\!\(\*StyleBox[\"f\", \"TI\"]\), \!\(\*StyleBox[\"var\", \"TI\"]\
\)] gives the average of the function \!\(\*StyleBox[\"f\", \"TI\"]\), which \
contains an InterpolatingFunction, with respect to \!\(\*StyleBox[\"var\", \
\"TI\"]\)\!\(\*StyleBox[\" \", \"TI\"]\)(default \!\(\*StyleBox[\"var\", \"TI\
\"]\)=t).\nAvg[\!\(\*StyleBox[\"f\", \"TI\"]\), {\!\(\*StyleBox[\"var\", \"TI\
\"]\), \!\(\*StyleBox[\"varmin\", \"TI\"]\), \!\(\*StyleBox[\"varmax\", \
\"TI\"]\)}] gives the average of the function \!\(\*StyleBox[\"f\", \"TI\"]\) \
with respect to \!\(\*StyleBox[\"var\", \"TI\"]\), ranging from \
\!\(\*StyleBox[\"varmin\", \"TI\"]\) to \!\(\*StyleBox[\"varmax\", \"TI\"]\).\
\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Var", "::", "usage"}], "=", "\n", 
    "\"\<Var[\!\(\*StyleBox[\"f\", \"TI\"]\), \!\(\*StyleBox[\"var\", \"TI\"]\
\)] gives the variance of the function \!\(\*StyleBox[\"f\", \"TI\"]\), which \
contains an InterpolatingFunction, with respect to \!\(\*StyleBox[\"var\", \
\"TI\"]\)\!\(\*StyleBox[\" \", \"TI\"]\)(default \!\(\*StyleBox[\"var\", \"TI\
\"]\)=t).\nVar[\!\(\*StyleBox[\"f\", \"TI\"]\), {\!\(\*StyleBox[\"var\", \"TI\
\"]\), \!\(\*StyleBox[\"varmin\", \"TI\"]\), \!\(\*StyleBox[\"varmax\", \
\"TI\"]\)}] gives the variance of the function \!\(\*StyleBox[\"f\", \
\"TI\"]\) with respect to \!\(\*StyleBox[\"var\", \"TI\"]\), ranging from \
\!\(\*StyleBox[\"varmin\", \"TI\"]\) to \!\(\*StyleBox[\"varmax\", \"TI\"]\).\
\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Cov", "::", "usage"}], "=", "\n", 
    "\"\<Cov[\!\(\*StyleBox[SubscriptBox[\"f\", \"1\"], \"TI\"]\), \
\!\(\*StyleBox[SubscriptBox[\"f\", \"2\"], \"TI\"]\), \!\(\*StyleBox[\"var\", \
\"TI\"]\)] gives the covariance of \!\(\*StyleBox[SubscriptBox[\"f\", \"1\"], \
\"TI\"]\)\!\(\*StyleBox[\" \", \"TI\"]\)and \
\!\(\*StyleBox[SubscriptBox[\"f\", \"2\"], \"TI\"]\), at least one of which \
contains an InterpolatingFunction, with respect to \!\(\*StyleBox[\"var\", \
\"TI\"]\)\!\(\*StyleBox[\" \", \"TI\"]\)(default \!\(\*StyleBox[\"var\", \"TI\
\"]\)=t).\nCov[\!\(\*StyleBox[SubscriptBox[\"f\", \"1\"], \"TI\"]\), \
\!\(\*StyleBox[SubscriptBox[\"f\", \"2\"], \"TI\"]\), \
{\!\(\*StyleBox[\"var\", \"TI\"]\), \!\(\*StyleBox[\"varmin\", \"TI\"]\), \
\!\(\*StyleBox[\"varmax\", \"TI\"]\)}] gives the covariance of the functions \
\!\(\*StyleBox[SubscriptBox[\"f\", \"1\"], \"TI\"]\) and \
\!\(\*StyleBox[SubscriptBox[\"f\", \"2\"], \"TI\"]\) with respect to \
\!\(\*StyleBox[\"var\", \"TI\"]\), ranging from \!\(\*StyleBox[\"varmin\", \
\"TI\"]\) to \!\(\*StyleBox[\"varmax\", \"TI\"]\).\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExtractPlotPoints", "::", "usage"}], "=", "\n", 
    "\"\<ExtractPlotPoints[\!\(\*StyleBox[\"plot\", \"TI\"]\)] extracts lists \
of points from lines in \!\(\*StyleBox[\"plot\", \"TI\"]\).\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Else", "::", "usage"}], "=", "\n", 
    "\"\<Else is an alias for True.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SpFrac", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<\!\(\*StyleBox[\"SpFrac\", \"InlineCode\"]\)\!\(\*StyleBox[\"[\", \
\"InlineCode\"]\)\!\(\*StyleBox[\"sp\", \"TI\"]\)\!\(\*StyleBox[\",\", \
\"InlineCode\"]\)\!\(\*StyleBox[\" \", \
\"InlineCode\"]\)\!\(\*StyleBox[\"nsp\", \"TI\"]\)] gives \
(\!\(\*StyleBox[\"sp\", \"TI\"]\)-1)/(\!\(\*StyleBox[\"nsp\", \"TI\"]\)-1).\>\
\""}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ModPart", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<ModPart[\!\(\*StyleBox[\"list\", \"TI\"]\), \!\(\*StyleBox[\"part\", \
\"TI\"]\)] returns part number \!\(\*StyleBox[\"part\", \"TI\"]\) of \
\!\(\*StyleBox[\"list\", \"TI\"]\) like Part, but wraps around.\>\""}], ";"}],
   "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NumberedGridForm", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<NumberedGridForm[\!\(\*StyleBox[\"list\", \"TI\",FontSlant->\"Italic\
\"]\)] formats \!\(\*StyleBox[\"list\", \"TI\",FontSlant->\"Italic\"]\) in a \
table with numbers\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindMaxima", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<FindMaxima[\!\(\*StyleBox[\"f\", \"TI\"]\), \
{\!\(\*StyleBox[\"tmin\", \"TI\"]\), \!\(\*StyleBox[\"tmax\", \"TI\"]\)}] \
finds local maxima of InterpolatingFunction \!\(\*StyleBox[\"f\", \"TI\"]\) \
between \!\(\*StyleBox[\"tmin\", \"TI\"]\) and \!\(\*StyleBox[\"tmax\", \
\"TI\"]\).\nFindMaxima[\!\(\*StyleBox[\"f\", \"TI\"]\)] looks over entire \
domain of \!\(\*StyleBox[\"f\", \"TI\"]\).\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindMinima", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<FindMinima[\!\(\*StyleBox[\"f\", \"TI\"]\), \
{\!\(\*StyleBox[\"tmin\", \"TI\"]\), \!\(\*StyleBox[\"tmax\", \"TI\"]\)}] \
finds local minima of InterpolatingFunction \!\(\*StyleBox[\"f\", \"TI\"]\) \
between \!\(\*StyleBox[\"tmin\", \"TI\"]\) and \!\(\*StyleBox[\"tmax\", \
\"TI\"]\).\nFindMinima[\!\(\*StyleBox[\"f\", \"TI\"]\)] looks over entire \
domain of \!\(\*StyleBox[\"f\", \"TI\"]\).\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindExtrema", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<FindExtrema[\!\(\*StyleBox[\"f\", \"TI\"]\), \
{\!\(\*StyleBox[\"tmin\", \"TI\"]\), \!\(\*StyleBox[\"tmax\", \"TI\"]\)}] \
finds local extrema of InterpolatingFunction \!\(\*StyleBox[\"f\", \"TI\"]\) \
between \!\(\*StyleBox[\"tmin\", \"TI\"]\) and \!\(\*StyleBox[\"tmax\", \
\"TI\"]\).\nFindExtrema[\!\(\*StyleBox[\"f\", \"TI\"]\)] looks over entire \
domain of \!\(\*StyleBox[\"f\", \"TI\"]\).\>\""}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"myStreamPlot", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<myStreamPlot[\!\(\*StyleBox[\"f\", \"TI\"]\), {\!\(\*StyleBox[\"x\", \
\"TI\"]\), \!\(\*StyleBox[\"xmin\", \"TI\"]\), \!\(\*StyleBox[\"xmax\", \
\"TI\"]\)}, {\!\(\*StyleBox[\"y\", \"TI\"]\), \!\(\*StyleBox[\"ymin\", \
\"TI\"]\), \!\(\*StyleBox[\"ymax\", \"TI\"]\)}] is like StreamPlot, but with \
better arrow spacing.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RealSimplify", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<RealSimplify[\!\(\*StyleBox[\"expression\", \"TI\"]\)] Simplifies \!\
\(\*StyleBox[\"expression\", \"TI\"]\) assuming everything is Real.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TD", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<TD[\!\(\*StyleBox[\"list\", \"TI\"]\)] returns a TemporalData object \
if Mathematica version >=9, otherwise returns \!\(\*StyleBox[\"list\", \
\"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RunFile", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<RunFile[\!\(\*StyleBox[\"file\", \"TI\"]\)] displays & runs code \
from a file or URL.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CompoundAnd", "::", "usage"}], 
    StyleBox["=", "TI"], 
    StyleBox["\[IndentingNewLine]", "TI"], 
    "\"\<CompoundAnd[\!\(\*StyleBox[\"conds\", \"TI\"]\)] is True if all \!\(\
\*StyleBox[\"conds\", \"TI\"]\) are True.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CompoundOr", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<CompoundOr[\!\(\*StyleBox[\"conds\", \"TI\"]\)] is True if any of \!\
\(\*FormBox[StyleBox[\"conds\", \"TI\"],TraditionalForm]\) are True.\>\""}], 
   ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SortedEigensystem", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<SortedEigensystem[\!\(\*StyleBox[\"matrix\", \"TI\"]\)] is \
Eigensystem[\!\(\*StyleBox[\"matrix\", \"TI\"]\)], sorted from largest to \
smallest Re[eigenvalue].\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ListMultiplier", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<ListMultiplier[\!\(\*StyleBox[\"list\", \"TI\"]\)] multiplies a list \
of matrices.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NumericListQ", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<NumericListQ[\!\(\*StyleBox[\"x\", \"TI\"]\)] returns True if \
\!\(\*StyleBox[\"x\", \"TI\"]\) is a list of numbers, False otherwise.\>\""}],
    ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NumericFlattenedListQ", "::", "usage"}], " ", "=", 
    "\[IndentingNewLine]", 
    "\"\<NumericFlattenedListQ[\!\(\*StyleBox[\"x\", \"TI\"]\)] returns True \
if \!\(\*StyleBox[\"x\", \"TI\"]\) is a list of numbers when Flattened, False \
otherwise.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NumericRuleListQ", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<NumericRuleListQ[\!\(\*StyleBox[\"x\", \"TI\"]\)] returns True if \!\
\(\*StyleBox[\"x\", \"TI\"]\) is a list of replacement rules with numeric \
values, False otherwise.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RuleListQ", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<RuleListQ[\!\(\*StyleBox[\"x\", \"TI\"]\)] returns True if \
\!\(\*StyleBox[\"x\", \"TI\"]\) is a list of replacement rules, False \
otherwise.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RuleListListQ", "::", "usage"}], "=", "\n", 
    "\"\<RuleListListQ[\!\(\*StyleBox[\"x\", \"TI\"]\)] returns True if \
\!\(\*StyleBox[\"x\", \"TI\"]\) is a list of RuleLists, False \
otherwise.\>\""}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InterpolatingFunctionTake", "::", "usage"}], "=", "\n", 
    "\"\<InterpolatingFunctionTake[\!\(\*StyleBox[\"if\", \"TI\"]\), \
{\!\(\*StyleBox[\"tmin\", \"TI\"]\), \!\(\*StyleBox[\"tmax\", \"TI\"]\)}] \
takes part of an InterpolatingFunction from \!\(\*StyleBox[\"tmin\", \
\"TI\"]\) to \!\(\*StyleBox[\"tmax\", \"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Slice", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<Slice[\!\(\*StyleBox[\"rulelist\", \"TI\"]\), \!\(\*StyleBox[\"t\", \
\"TI\"]\)] replaces temporal \!\(\*StyleBox[\"rulelist\", \"TI\"]\) with its \
values at \!\(\*StyleBox[\"t\", \"TI\"]\).\n\
Slice[\!\(\*StyleBox[\"rulelist\", \"TI\"]\), {\!\(\*StyleBox[\"tmin\", \
\"TI\"]\), \!\(\*StyleBox[\"tmax\", \"TI\"]\)}] extracts values from \
\!\(\*StyleBox[\"tmin\", \"TI\"]\) to \!\(\*StyleBox[\"tmax\", \
\"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InitialSlice", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<InitialSlice[\!\(\*StyleBox[\"rulelist\", \"TI\"]\)] extracts the \
initial values from temporal \!\(\*StyleBox[\"rulelist\", \"TI\"]\).\n\
InitialSlice[\!\(\*StyleBox[\"rulelist\", \"TI\"]\), \!\(\*StyleBox[\"tmax\", \
\"TI\"]\)] extracts the initial values ending at \!\(\*StyleBox[\"tmax\", \
\"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FinalSlice", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<FinalSlice[\!\(\*StyleBox[\"rulelist\", \"TI\"]\)] extracts the \
final values from temporal \!\(\*StyleBox[\"rulelist\", \"TI\"]\).\n\
FinalSlice[\!\(\*StyleBox[\"rulelist\", \"TI\"]\), \!\(\*StyleBox[\"tmin\", \
\"TI\"]\)] extracts the final values starting at \!\(\*StyleBox[\"tmin\", \
\"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FinalDerivatives", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<FinalDerivatives[\!\(\*StyleBox[\"rulelist\", \"TI\"]\)] replaces \
temporal \!\(\*StyleBox[\"rulelist\", \"TI\"]\) with their final derivatives.\
\nFinalDerivatives[\!\(\*StyleBox[\"rulelist\", \"TI\"]\), \!\(\*StyleBox[\"\
\[Delta]\", \"TI\"]\)] averages over the final values starting at \
\!\(\*StyleBox[\"\[Delta]\", \"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InitialTime", "::", "usage"}], "=", "\n", 
    "\"\<InitialTime[\!\(\*StyleBox[\"rulelist\", \"TI\"]\)] returns the \
initial time of temporal \!\(\*StyleBox[\"rulelist\", \"TI\"]\).\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FinalTime", "::", "usage"}], "=", "\n", 
    "\"\<FinalTime[\!\(\*StyleBox[\"rulelist\", \"TI\"]\)] returns the final \
time of temporal \!\(\*StyleBox[\"rulelist\", \"TI\"]\).\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindPeriod", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<FindPeriod[\!\(\*StyleBox[\"rulelist\", \"TI\"]\)] returns the \
period of temporal \!\(\*StyleBox[\"rulelist\", \"TI\"]\).\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RuleListAdd", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<RuleListAdd[\!\(\*StyleBox[\"l1\", \"TI\"]\), \!\(\*StyleBox[\"l2\", \
\"TI\"]\)] adds corresponding elements of two rulelists.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RuleListSubtract", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<RuleListSubtract[\!\(\*StyleBox[\"l1\", \"TI\"]\), \
\!\(\*StyleBox[\"l2\", \"TI\"]\)] subtracts corresponding elements of two \
rulelists.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RuleListMultiply", "::", "usage"}], "=", "\n", 
    "\"\<RuleListMultiply[\!\(\*StyleBox[\"l\", \"TI\"]\), \!\(\*StyleBox[\"x\
\", \"TI\"]\)] or RuleListMultiply[\!\(\*StyleBox[\"x\", \"TI\"]\), \
\!\(\*StyleBox[\"l\", \"TI\"]\)] multiply elements of rulelist \
\!\(\*StyleBox[\"l\", \"TI\"]\) by number \!\(\*StyleBox[\"x\", \
\"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RuleListTweak", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<RuleListTweak[\!\(\*StyleBox[\"point\", \"TI\"]\), \
\!\(\*StyleBox[\"var\", \"TI\"]\), \!\(\*StyleBox[\"h\", \"TI\"]\)] perturbs \
variable \!\(\*StyleBox[\"var\", \"TI\"]\) in rulelist \!\(\*StyleBox[\"point\
\", \"TI\"]\) by \!\(\*StyleBox[\"h\", \"TI\"]\).\n\
RuleListTweak[\!\(\*StyleBox[\"point\", \"TI\"]\), \!\(\*StyleBox[\"vars\", \
\"TI\"]\), \!\(\*StyleBox[\"h\", \"TI\"]\)] perturbs variables \
\!\(\*StyleBox[\"vars\", \"TI\"]\) in rulelist \!\(\*StyleBox[\"point\", \"TI\
\"]\) by \!\(\*StyleBox[\"h\", \"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NumericRuleListToNumericList", "::", "usage"}], "=", "\n", 
    "\"\<NumericRuleListToNumericList[\!\(\*StyleBox[\"rulelist\", \"TI\"]\), \
\!\(\*StyleBox[\"vars\", \"TI\"]\)] converts a numeric rule list \
\!\(\*StyleBox[\"rulelist\", \"TI\"]\) to a numeric list, in order of \
\!\(\*StyleBox[\"vars\", \"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"listMultiplier", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<listMultiplier[\!\(\*StyleBox[\"list\", \"TI\"]\)] multiplies a list \
of matrices.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RouthHurwitzCriteria", "::", "usage"}], "=", 
   "\[IndentingNewLine]", 
   "\"\<RouthHurwitzCriteria[\!\(\*StyleBox[\"matrix\", \"TI\"]\)] gives the \
modified Routh-Hurwitz stability criteria (up to 3x3).\>\""}], ";"}]}], "Code",\

 CellChangeTimes->{{3.68380719498838*^9, 3.683807195151351*^9}, {
   3.683807378678966*^9, 3.683807378988051*^9}, {3.683807467322033*^9, 
   3.6838074704162197`*^9}, {3.683807541029111*^9, 3.683807542942554*^9}, 
   3.6841859112249727`*^9, {3.68418595271404*^9, 3.684185960183709*^9}, 
   3.684186522894973*^9, {3.684186622349656*^9, 3.6841866330659246`*^9}, {
   3.684863809480382*^9, 3.68486384483776*^9}, {3.685659013684334*^9, 
   3.685659035410736*^9}, {3.685702579590947*^9, 3.685702656017858*^9}, {
   3.685713389581637*^9, 3.685713418017913*^9}, 3.6857200284972687`*^9, {
   3.685919769423114*^9, 3.685919794868782*^9}, {3.686954783749514*^9, 
   3.686954826755436*^9}, {3.6877844552828617`*^9, 3.687784513996684*^9}, {
   3.687963991753602*^9, 3.687964035327302*^9}, {3.688409594389316*^9, 
   3.688409637567925*^9}, {3.688410235782116*^9, 3.688410613749858*^9}, {
   3.688410650422881*^9, 3.68841070664258*^9}, {3.68841087545935*^9, 
   3.688410890699197*^9}, {3.688410928699452*^9, 3.688411027110922*^9}, {
   3.688411086722623*^9, 3.688411102928093*^9}, {3.688411133124668*^9, 
   3.688411194716774*^9}, {3.688411777297476*^9, 3.68841177812325*^9}, {
   3.6884706793398323`*^9, 3.688470687476819*^9}, 3.688470730628847*^9, {
   3.688470787061833*^9, 3.688470798136381*^9}, {3.688470972372849*^9, 
   3.688471036429407*^9}, {3.6884711399047117`*^9, 3.688471152858824*^9}, {
   3.6885759492210407`*^9, 3.6885759618789177`*^9}, {3.689174436582649*^9, 
   3.6891744737330427`*^9}, {3.690284143752183*^9, 3.690284151659047*^9}, {
   3.6902844301642923`*^9, 3.6902844619090977`*^9}, {3.6902845232487183`*^9, 
   3.6902846413412733`*^9}, {3.690284677513002*^9, 3.690284704432893*^9}, {
   3.690287262701178*^9, 3.6902873081235523`*^9}, {3.690327210518495*^9, 
   3.690327237994134*^9}, {3.6903812221684227`*^9, 3.690381440624542*^9}, {
   3.690381517087982*^9, 3.690381671030032*^9}, {3.690390206589902*^9, 
   3.690390206720489*^9}, {3.690407526879868*^9, 3.6904075376293*^9}, {
   3.690410147789995*^9, 3.6904101534987097`*^9}, {3.6904748326099987`*^9, 
   3.690474865519696*^9}, {3.690474997176695*^9, 3.690475110587904*^9}, {
   3.690478383305266*^9, 3.6904785029367228`*^9}, {3.691230871862175*^9, 
   3.691230878811804*^9}, {3.691231160293252*^9, 3.6912311936624002`*^9}, {
   3.691233492146802*^9, 3.6912335135059233`*^9}, {3.69386585938129*^9, 
   3.693865865476445*^9}, {3.6938661728407927`*^9, 3.693866254496829*^9}, {
   3.6938664530308332`*^9, 3.693866471750029*^9}, {3.6938665087767677`*^9, 
   3.693866549206998*^9}, {3.693869696661652*^9, 3.693869717692437*^9}, {
   3.6938700545085173`*^9, 3.693870062609948*^9}, {3.693870625798123*^9, 
   3.6938706582758617`*^9}, {3.694111129989005*^9, 3.694111428977806*^9}, {
   3.69411146711337*^9, 3.694111485554792*^9}, {3.694111527713537*^9, 
   3.694111608598023*^9}, {3.694111901969573*^9, 3.6941119377647753`*^9}, 
   3.694116134408751*^9, {3.694116680289248*^9, 3.694116680461046*^9}, {
   3.6941173320094*^9, 3.694117341187622*^9}, {3.69412857284093*^9, 
   3.694128600005624*^9}, {3.694128977121953*^9, 3.694128979985108*^9}, {
   3.694129084917769*^9, 3.694129182860187*^9}, {3.6941292188175993`*^9, 
   3.694129239129553*^9}, {3.6941296056113567`*^9, 3.6941296109959173`*^9}, {
   3.6947331944447412`*^9, 3.694733233324676*^9}, {3.6966060133088427`*^9, 
   3.696606302338293*^9}, {3.696606482108094*^9, 3.696606484458791*^9}, 
   3.696606683216866*^9, {3.69965419507227*^9, 3.699654223112288*^9}, {
   3.704727666868267*^9, 3.704727696696006*^9}, 3.7102020395259657`*^9, {
   3.710240070041046*^9, 3.710240072549161*^9}, {3.710240526517641*^9, 
   3.7102405272991667`*^9}, {3.710240822365191*^9, 3.710240822380368*^9}, {
   3.710245934214594*^9, 3.710245934229291*^9}, {3.710246294569062*^9, 
   3.710246300617359*^9}, {3.71024911333603*^9, 3.7102491160302877`*^9}, {
   3.7102510475325823`*^9, 3.710251047585515*^9}, 3.710442485170146*^9, {
   3.710496908075673*^9, 3.710496908084663*^9}, {3.710498650125012*^9, 
   3.710498675191455*^9}, {3.711544895503516*^9, 3.71154491202914*^9}, {
   3.711559938272799*^9, 3.711559938548174*^9}, {3.711560010202146*^9, 
   3.711560013359174*^9}, {3.711560043677731*^9, 3.71156006289946*^9}, {
   3.7115619572646837`*^9, 3.71156205095557*^9}, {3.711562176845039*^9, 
   3.7115621799272346`*^9}, {3.711562381256556*^9, 3.711562437533298*^9}, 
   3.7115631408098907`*^9, {3.711564081513056*^9, 3.7115641127460613`*^9}, {
   3.711580577126952*^9, 3.711580577945861*^9}, {3.71158068977185*^9, 
   3.711580690918893*^9}, {3.7115824113279533`*^9, 3.7115824113369617`*^9}, {
   3.711583353448552*^9, 3.711583356187407*^9}, {3.7115835514525146`*^9, 
   3.711583552353013*^9}, {3.7115839998432007`*^9, 3.711583999851878*^9}, {
   3.711584999355082*^9, 3.711585000580291*^9}, {3.7116213558464212`*^9, 
   3.7116213558565207`*^9}, {3.7116331215424843`*^9, 3.711633124067383*^9}, {
   3.71163591677396*^9, 3.711635935415167*^9}, {3.711635991366354*^9, 
   3.711635996120242*^9}, {3.711641586259606*^9, 3.7116415862705*^9}, {
   3.711642747861431*^9, 3.7116427478718033`*^9}, 3.711642783021637*^9, {
   3.711643501393243*^9, 3.711643531366722*^9}, {3.711644433148741*^9, 
   3.7116444447142687`*^9}, {3.711644508969887*^9, 3.711644517295004*^9}, {
   3.7116445890274*^9, 3.711644667938092*^9}, {3.7127403199162407`*^9, 
   3.712740322139163*^9}, {3.712911695286179*^9, 3.712911728744343*^9}, {
   3.712911870251788*^9, 3.712911871616246*^9}, {3.7154548086652117`*^9, 
   3.715454811812196*^9}, {3.715962935628359*^9, 3.715962959495516*^9}, {
   3.718382839974576*^9, 3.7183828499224377`*^9}, {3.718382903083486*^9, 
   3.71838295904427*^9}, 3.718385130683734*^9, {3.721849351776514*^9, 
   3.721849386903656*^9}, 3.723380975923571*^9, {3.723481357124353*^9, 
   3.72348141004427*^9}, {3.723481607525854*^9, 3.7234816889407473`*^9}, {
   3.726752408402685*^9, 3.726752423335722*^9}, {3.7267524785886106`*^9, 
   3.7267524853140717`*^9}, {3.72832502293099*^9, 3.728325061362618*^9}, {
   3.728398865649353*^9, 3.7283988979215117`*^9}, {3.728404071629161*^9, 
   3.728404123385149*^9}, {3.731255686512319*^9, 3.7312557372653713`*^9}, {
   3.731255813072953*^9, 3.731255829302224*^9}, {3.731257974692462*^9, 
   3.7312579978238564`*^9}, {3.731534692821413*^9, 3.731534720114447*^9}, {
   3.7318057970559196`*^9, 3.7318058039926987`*^9}, {3.73180587209179*^9, 
   3.731805889820736*^9}, {3.731979055279499*^9, 3.7319791275356197`*^9}, {
   3.7322210134526577`*^9, 3.732221075399441*^9}, {3.732273322282134*^9, 
   3.732273363847911*^9}, {3.732393403109112*^9, 3.732393430986405*^9}, {
   3.735236201396747*^9, 3.7352362480964317`*^9}, {3.755875872544231*^9, 
   3.755875878478614*^9}, {3.758525087351231*^9, 3.7585251003488703`*^9}, {
   3.759072650686749*^9, 3.7590727941222563`*^9}, {3.759236703287867*^9, 
   3.7592367712199697`*^9}, {3.759255660253244*^9, 3.759255670450871*^9}, {
   3.7593070299801188`*^9, 
   3.7593070790727587`*^9}},ExpressionUUID->"44c1c6c5-e51f-4d8b-8560-\
6c6f36ef2221"]
}, Closed]],

Cell[CellGroupData[{

Cell["EcoEvo Utilities", "Subsection",
 CellChangeTimes->{{3.683807321148446*^9, 
  3.683807324048629*^9}},ExpressionUUID->"7fc8e1ba-b99e-479d-be48-\
499ac25f3173"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"$EcoEvoVersion", "::", "usage"}], "=", "\n", 
    "\"\<$EcoEvoVersion gives the version of the loaded EcoEvo \
package.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DeleteInvaders", "::", "usage"}], "=", "\n", 
    "\"\<DeleteInvaders[\!\(\*StyleBox[\"list\", \"TI\"]\)] removes invaders \
(with subscript 0) from \!\(\*StyleBox[\"list\", \"TI\"]\).\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RuleListDistance", "::", "usage"}], "=", "\n", 
    "\"\<RuleListDistance[\!\(\*StyleBox[\"rulelist1\", \
\"TI\"]\),\!\(\*StyleBox[\"rulelist2\", \"TI\"]\),\!\(\*StyleBox[\"p\", \
\"TI\"]\)] gives the \!\(\*StyleBox[\"p\", \"TI\"]\)-norm distance between \
two rule lists (default \!\(\*StyleBox[\"p\", \"TI\"]\)=\[Infinity]).\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TraitsQ", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<TraitsQ[\!\(\*StyleBox[\"x\", \"TI\"]\)] returns True if \
\!\(\*StyleBox[\"x\", \"TI\"]\) is a rulelist of traits.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"VariablesQ", "::", "usage"}], "=", "\n", 
    "\"\<VariablesQ[\!\(\*StyleBox[\"x\", \"TI\"]\)] returns True if \
\!\(\*StyleBox[\"x\", \"TI\"]\) is a rulelist of variables.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ListOfVariablesQ", "::", "usage"}], "=", "\n", 
    "\"\<ListOfVariablesQ[\!\(\*StyleBox[\"x\", \"TI\"]\)] returns True if \!\
\(\*StyleBox[\"x\", \"TI\"]\) is a list of rulelists of variables.\>\""}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TraitsAndVariablesQ", "::", "usage"}], "=", "\n", 
    "\"\<TraitsAndVariablesQ[\!\(\*StyleBox[\"x\", \"TI\"]\)] returns True if \
\!\(\*StyleBox[\"x\", \"TI\"]\) is a rulelist of traits and/or \
variables.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InvaderQ", "::", "usage"}], "=", "\n", 
    "\"\<InvaderQ[\!\(\*StyleBox[\"x\", \"TI\"]\)] returns True if \
\!\(\*StyleBox[\"x\", \"TI\"]\) is a possible invader.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NotInvaderTraitsQ", "::", "usage"}], "=", "\n", 
    "\"\<NotInvaderTraitsQ[\!\(\*StyleBox[\"x\", \"TI\"]\)] returns True if \
\!\(\*StyleBox[\"x\", \"TI\"]\) is a rulelist of traits with no \
invaders.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GsQ", "::", "usage"}], "=", "\n", 
    "\"\<GsQ[\!\(\*StyleBox[\"x\", \"TI\"]\)] returns True if \!\(\*StyleBox[\
\"x\", \"TI\"]\) is a list of G matrices or V variances.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExtractTraits", "::", "usage"}], "=", "\n", 
    "\"\<ExtractTraits[\!\(\*StyleBox[\"x\", \"TI\"]\)] extracts traits from \
rulelist or list of rulelists \!\(\*StyleBox[\"x\", \"TI\"]\).\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExtractPops", "::", "usage"}], "=", "\n", 
    "\"\<ExtractPops[\!\(\*StyleBox[\"x\", \"TI\"]\)] extracts pops from \
rulelist or list of rulelists \!\(\*StyleBox[\"x\", \"TI\"]\).\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExtractAuxs", "::", "usage"}], "=", "\n", 
    "\"\<ExtractAuxs[\!\(\*StyleBox[\"x\", \"TI\"]\)] extracts auxs from \
rulelist or list of rulelists \!\(\*StyleBox[\"x\", \"TI\"]\).\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExtractGuilds", "::", "usage"}], "=", "\n", 
    "\"\<ExtractGuilds[\!\(\*StyleBox[\"x\", \"TI\"]\)] extracts guilds from \
rulelist or list of rulelists \!\(\*StyleBox[\"x\", \"TI\"]\).\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExtractVariables", "::", "usage"}], "=", "\n", 
    "\"\<ExtractVariables[\!\(\*StyleBox[\"x\", \"TI\"]\)] extracts pops, \
guilds, and auxs from rulelist or list of rulelists \!\(\*StyleBox[\"x\", \
\"TI\"]\).\>\""}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LookUp", "::", "usage"}], " ", "=", "\n", 
    "\"\<LookUp[\!\(\*StyleBox[\"var\", \"TI\"]\)] finds the indices of a \
variable or trait.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotDynamics", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<PlotDynamics[\!\(\*StyleBox[\"sol\", \"TI\"]\)] plots the functions \
in \!\(\*StyleBox[\"sol\", \"TI\"]\) across their entire domain.\n\
PlotDynamics[\!\(\*StyleBox[\"sol\", \"TI\"]\), \!\(\*StyleBox[\"funcs\", \
\"TI\"]\)] plots \!\(\*StyleBox[\"funcs\", \"TI\"]\) in \
\!\(\*StyleBox[\"sol\", \"TI\"]\) across their entire domain.\>\""}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.683807425259964*^9, 3.6838074334106627`*^9}, {
   3.683807573181162*^9, 3.683807573393408*^9}, {3.683807769276572*^9, 
   3.68380776954066*^9}, {3.683809264653675*^9, 3.68380926498942*^9}, {
   3.685092524614745*^9, 3.685092556960705*^9}, {3.6884113879060793`*^9, 
   3.688411389289035*^9}, {3.688411433027636*^9, 3.688411495560199*^9}, {
   3.688411539522587*^9, 3.6884115931514063`*^9}, 3.688411798884659*^9, {
   3.6941121921888647`*^9, 3.694112201096081*^9}, {3.694116139852159*^9, 
   3.694116141099772*^9}, {3.7102026209621572`*^9, 3.7102026365455933`*^9}, {
   3.710202684944713*^9, 3.710202690371896*^9}, {3.710250338513974*^9, 
   3.7102503390421124`*^9}, {3.7127385341276827`*^9, 3.712738534155387*^9}, {
   3.712837287235999*^9, 3.712837287994637*^9}, {3.7128373272662573`*^9, 
   3.712837340057786*^9}, {3.712837379993816*^9, 3.712837480787797*^9}, {
   3.712838300302177*^9, 3.7128383644979362`*^9}, 3.712838415214463*^9, 
   3.712839360837996*^9, {3.712839739897827*^9, 3.712839743219182*^9}, {
   3.7140771546207743`*^9, 3.714077160545862*^9}, {3.729614739978458*^9, 
   3.729614747062317*^9}, {3.729614850898477*^9, 3.729614860879962*^9}, {
   3.729988623821126*^9, 3.729988651300312*^9}, {3.7318923445329523`*^9, 
   3.731892394060824*^9}, {3.7340979106546707`*^9, 3.73409793873967*^9}, {
   3.735227923965584*^9, 3.7352279832370777`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"27dc5eb2-b7db-49e5-bf79-f42ccdbf000d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Model Parts", "Subsection",
 CellChangeTimes->{{3.683806521764365*^9, 
  3.683806523233171*^9}},ExpressionUUID->"49f06351-b35f-4d94-8e9b-\
3a6328bad478"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"t", "::", "usage"}], "=", "\"\<Reserved for time.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"log", "::", "usage"}], "=", 
    "\"\<Indicated a log-transformed variable.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Component", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Variable", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Equation", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Trait", "::", "usage"}], "=", "\"\<Internal usage only ;)\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Aux", "::", "usage"}], "=", "\"\<Internal usage only ;)\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Type", "::", "usage"}], "=", "\"\<Internal usage only ;)\>\""}], 
   ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ModelType", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Name", "::", "usage"}], "=", "\"\<Internal usage only ;)\>\""}], 
   ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FromUnks", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ToUnks", "::", "usage"}], "=", "\"\<Internal usage only ;)\>\""}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ToUnkRules", "::", "usage"}], "=", 
    "\"\<Internal usage only ;)\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExpRules", "::", "usage"}], "=", 
    "\"\<Internal usage only ;)\>\""}], ";"}], "\n"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Nsp", "::", "usage"}], " ", "=", "\n", 
    "\"\<Nsp[\!\(\*StyleBox[\"gu\", \"TI\"]\)] is a reserved symbol that \
denotes the number of species in guild \!\(\*StyleBox[\"gu\", \"TI\"]\).  Do \
not set directly.\>\""}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AllTraits", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AllVariables", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BlankTraits", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BlankUnkTraits", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BlankVariables", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BlankUnkVariables", "::", "usage"}], "=", 
    "\"\<Internal usage only ;)\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RemovePopts", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RemovePopt1s", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RemoveTraitts", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AddPopts", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AddTraitts", "::", "usage"}], "=", 
   "\"\<Internal usage only ;)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AddUnkts", "::", "usage"}], "=", 
    "\"\<Internal usage only ;)\>\""}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"ImplicitFixedVariables", "::", "usage"}], "=", 
     "\"\<Internal usage only ;)\>\""}], ";"}], "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Color", "::", "usage"}], "=", 
   "\"\<Color gives the color for a model part.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Colors", "::", "usage"}], "=", 
    "\"\<Colors is a list of default colors for model parts.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LineStyle", "::", "usage"}], "=", 
   "\"\<LineStyle gives the line style for a model part.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LineStyles", "::", "usage"}], "=", 
    "\"\<LineStyles is a list of default line styles for model parts.\>\""}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotMarker", "::", "usage"}], "=", 
   "\"\<PlotMarker gives the plot marker for a model part.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"PlotMarkers", "::", "usage"}], "=", 
     "\"\<PlotMarkers is a list of default plot markers for model \
part.\>\""}], ";"}], "*)"}]}]}], "Code",
 CellChangeTimes->{{3.6838065316693087`*^9, 3.683806546781102*^9}, {
   3.683806703372558*^9, 3.683806703928244*^9}, {3.6877784129209003`*^9, 
   3.687778459326251*^9}, {3.687782230719596*^9, 3.687782260295039*^9}, {
   3.687782324341193*^9, 3.687782356156653*^9}, {3.68778389771948*^9, 
   3.687783930132292*^9}, {3.687785220938472*^9, 3.687785379543303*^9}, {
   3.6878810080459213`*^9, 3.687881019473278*^9}, {3.687966498258645*^9, 
   3.687966514744217*^9}, {3.6879681050010977`*^9, 3.687968105419128*^9}, {
   3.690478302404015*^9, 3.6904783075520477`*^9}, {3.693649504738083*^9, 
   3.6936495379670258`*^9}, 3.693700330660178*^9, {3.6989426550171013`*^9, 
   3.6989426593884687`*^9}, {3.710285847011244*^9, 3.71028585624712*^9}, {
   3.71028689995612*^9, 3.710286900886554*^9}, 3.712738534165015*^9, {
   3.7140886507630568`*^9, 3.7140886590355253`*^9}, {3.716504417097521*^9, 
   3.71650442272858*^9}, {3.731534293566882*^9, 3.731534323070795*^9}, {
   3.7315345884138613`*^9, 3.731534602808832*^9}, {3.7319779549772577`*^9, 
   3.7319779675087433`*^9}, {3.7319801527399282`*^9, 3.731980159206297*^9}, {
   3.735230679302363*^9, 3.735230695333346*^9}, {3.75572546727521*^9, 
   3.755725478105403*^9}, {3.755797701144059*^9, 3.755797712263321*^9}, {
   3.755876580699943*^9, 3.755876591783761*^9}, 3.7558771968529778`*^9, {
   3.755878124382565*^9, 3.7558781336893053`*^9}, {3.758537883964911*^9, 
   3.758537886493432*^9}, {3.758538065618039*^9, 3.758538069368191*^9}, {
   3.758539266387745*^9, 3.7585392722496777`*^9}, {3.758540358458702*^9, 
   3.75854036292303*^9}, {3.7585409253456907`*^9, 3.758540955161317*^9}, 
   3.758543568932716*^9, {3.758543695478956*^9, 3.7585436959425077`*^9}, {
   3.75882333100869*^9, 
   3.758823336539878*^9}},ExpressionUUID->"3aca5366-c006-4cc1-965e-\
7ac5d29ae06d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Eqns", "Subsection",
 CellChangeTimes->{{3.731527128999905*^9, 
  3.7315271294988623`*^9}},ExpressionUUID->"3959c3d8-8379-4f29-9d73-\
844ce67fb3f7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"EcoEqns", "::", "usage"}], "=", "\"\<EcoEqns[traits]\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EvoEqns", "::", "usage"}], "=", "\"\<EvoEqns[sol,Gs]\>\""}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.731527132560794*^9, 3.731527147632297*^9}, {
  3.731533321630245*^9, 3.7315333369154377`*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"9882a46e-909e-4bdc-b43d-2ae1676f3ee0"]
}, Closed]],

Cell[CellGroupData[{

Cell["Main Functions", "Subsection",
 CellChangeTimes->{{3.7253232723205147`*^9, 3.7253232733408527`*^9}, {
  3.7257567355346813`*^9, 
  3.725756736041974*^9}},ExpressionUUID->"4db4f18a-1e86-486e-81eb-\
2a7f119d5cc2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SetModel", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<SetModel[\!\(\*StyleBox[\"model\", \"TI\"]\)] sets an EcoEvo \
\!\(\*StyleBox[\"model\", \"TI\"]\) for analysis.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ModelInfo", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<ModelInfo gives a summary of the currently loaded EcoEvo \
model.\>\""}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MatrixToPopComponents", "::", "usage"}], "=", "\n", 
    "\"\<MatrixToPopComponents[\!\(\*StyleBox[\"a\", \"TI\"]\), \
\!\(\*StyleBox[\"var\", \"TI\"]\)] constructs a structured population based \
on square matrix \!\(\*StyleBox[\"a\", \"TI\"]\) and variable \!\(\*StyleBox[\
\"var\", \"TI\"]\).\nMatrixToPopComponents[\!\(\*StyleBox[\"a\", \"TI\"]\), \
\!\(\*StyleBox[\"var\", \"TI\"]\), \!\(\*StyleBox[\"ncomps\", \"TI\"]\)] sets \
the number of components to \!\(\*StyleBox[\"ncomps\", \
\"TI\"]\)\!\(\*StyleBox[\" \", \"TI\"]\)(in case of undefined matrix \
\!\(\*StyleBox[\"a\", \"TI\"]\)).\>\""}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MatrixToGuildComponents", "::", "usage"}], "=", "\n", 
    "\"\<MatrixToGuildComponents[\!\(\*StyleBox[\"a\", \"TI\"]\), \
\!\(\*StyleBox[\"var\", \"TI\"]\)] constructs a structured population based \
on square matrix \!\(\*StyleBox[\"a\", \"TI\"]\) and variable \!\(\*StyleBox[\
\"var\", \"TI\"]\).\nMatrixToGuildComponents[\!\(\*StyleBox[\"a\", \"TI\"]\), \
\!\(\*StyleBox[\"var\", \"TI\"]\), \!\(\*StyleBox[\"ncomps\", \"TI\"]\)] sets \
the number of components to \!\(\*StyleBox[\"ncomps\", \
\"TI\"]\)\!\(\*StyleBox[\" \", \"TI\"]\)(in case of undefined matrix \
\!\(\*StyleBox[\"a\", \"TI\"]\)).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SelectValid", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<SelectValid[\!\(\*StyleBox[\"sol\", \"TI\"]\)] selects valid \
solutions in list of rule lists \!\(\*StyleBox[\"sol\", \"TI\"]\).\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EcoSim", "::", "usage"}], "=", "\n", 
    "\"\<EcoSim[\!\(\*StyleBox[\"pops\", \"TI\"]\), \!\(\*StyleBox[\"tmax\", \
\"TI\"]\)] simulates ecological dynamics, with initial densities in \
\!\(\*StyleBox[\"pops\", \"TI\"]\), from time \!\(\*StyleBox[\"t\", \
\"TI\"]\)=0 to \!\(\*StyleBox[\"tmax\", \"TI\"]\).\n\
EcoSim[\!\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"pops\", \"TI\"]\
\), \!\(\*StyleBox[\"tmax\", \"TI\"]\)] uses trait values \
\!\(\*StyleBox[\"traits\", \"TI\"]\).\n\
EcoSim[\!\(\*StyleBox[\"traitsandpops\", \"TI\"]\), \!\(\*StyleBox[\"tmax\", \
\"TI\"]\)] uses combined \!\(\*StyleBox[\"traitsandpops\", \"TI\"]\).\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EcoEq", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<EcoEq[] solves for ecological equilibria.\n\
EcoEq[\!\(\*StyleBox[\"pops\", \"TI\"]\)] finds an ecological equilibrium \
using initial guess \!\(\*StyleBox[\"pops\", \"TI\"]\).\n\
EcoEq[\!\(\*StyleBox[\"traits\", \"TI\"]\)] uses trait values \!\(\*StyleBox[\
\"traits\", \"TI\"]\).\nEcoEq[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"pops\", \"TI\"]\)] uses trait values \!\(\*StyleBox[\"traits\
\", \"TI\"]\) and initial guess \!\(\*StyleBox[\"pops\", \"TI\"]\).\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SolveEcoEq", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<SolveEcoEq[] solves for ecological equilibria.\n\
SolveEcoEq[\!\(\*StyleBox[\"vars\", \"TI\"]\)] solves for variables \
\!\(\*StyleBox[\"vars\", \"TI\"]\).\nSolveEcoEq[\!\(\*StyleBox[\"traits\", \
\"TI\"]\)] uses trait values \!\(\*StyleBox[\"traits\", \"TI\"]\).\n\
SolveEcoEq[\!\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"vars\", \
\"TI\"]\)] solves for variables \!\(\*StyleBox[\"vars\", \"TI\"]\) using \
trait values \!\(\*StyleBox[\"traits\", \"TI\"]\).\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NSolveEcoEq", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<NSolveEcoEq[] numerically solves for ecological equilibria.\n\
NSolveEcoEq[\!\(\*StyleBox[\"vars\", \"TI\"]\)] numerically solves for \
variables \!\(\*StyleBox[\"vars\", \"TI\"]\).\n\
NSolveEcoEq[\!\(\*StyleBox[\"traits\", \"TI\"]\)] uses trait values \
\!\(\*StyleBox[\"traits\", \"TI\"]\).\nNSolveEcoEq[\!\(\*StyleBox[\"traits\", \
\"TI\"]\), \!\(\*StyleBox[\"vars\", \"TI\"]\)] numerically solves for \
variables \!\(\*StyleBox[\"vars\", \"TI\"]\) using trait values \
\!\(\*StyleBox[\"traits\", \"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoEq", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<FindEcoEq[\!\(\*StyleBox[\"pops\", \"TI\"]\)] finds an ecological \
equilibrium using initial guess \!\(\*StyleBox[\"pops\", \"TI\"]\).\n\
FindEcoEq[\!\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"pops\", \"TI\
\"]\)] uses trait values \!\(\*StyleBox[\"traits\", \"TI\"]\) and initial \
guess \!\(\*StyleBox[\"pops\", \"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoCycle", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<FindEcoCycle[\!\(\*StyleBox[\"pops\", \"TI\"]\)] finds an ecological \
limit cycle using initial guess \!\(\*StyleBox[\"pops\", \"TI\"]\).\n\
FindEcoCycle[\!\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"pops\", \
\"TI\"]\)] uses trait values \!\(\*StyleBox[\"traits\", \"TI\"]\).\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EcoJacobian", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<EcoJacobian[\!\(\*StyleBox[\"pops\", \"TI\"]\)] returns the Jacobian \
matrix of the ecological equations evaluated at \!\(\*StyleBox[\"pops\", \"TI\
\"]\).\nEcoJacobian[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"pops\", \"TI\"]\)] uses trait values \!\(\*StyleBox[\"traits\
\", \"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EcoEigenvalues", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<EcoEigenvalues[\!\(\*StyleBox[\"pops\", \"TI\"]\)] returns the \
eigenvalues of the Jacobian matrix of the ecological equations evaluated at \
\!\(\*StyleBox[\"pops\", \"TI\"]\).\n\
EcoEigenvalues[\!\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"pops\", \
\"TI\"]\)] uses trait values \!\(\*StyleBox[\"traits\", \"TI\"]\).\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotEcoIsoclines", "::", "usage"}], " ", "=", "\n", 
    "\"\<PlotEcoIsoclines[{\!\(\*StyleBox[\"var1\", \"TI\"]\), \
\!\(\*StyleBox[\"var1min\", \"TI\"]\), \!\(\*StyleBox[\"var1max\", \
\"TI\"]\)}, {\!\(\*StyleBox[\"var2\", \"TI\"]\), \!\(\*StyleBox[\"var2min\", \
\"TI\"]\), \!\(\*StyleBox[\"var2max\", \"TI\"]\)}] plots ecological isoclines \
in the phase plane of variables \!\(\*StyleBox[\"var1\", \"TI\"]\) and \
\!\(\*StyleBox[\"var2\", \"TI\"]\).\nPlotEcoIsoclines[\!\(\*StyleBox[\"traits\
\", \"TI\"]\),{\!\(\*StyleBox[\"var1\", \"TI\"]\), \
\!\(\*StyleBox[\"var1min\", \"TI\"]\), \!\(\*StyleBox[\"var1max\", \
\"TI\"]\)},{\!\(\*StyleBox[\"var2\", \"TI\"]\), \!\(\*StyleBox[\"var2min\", \
\"TI\"]\), \!\(\*StyleBox[\"var2max\", \"TI\"]\)}] uses trait values \
\!\(\*StyleBox[\"traits\", \"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotEcoStreams", "::", "usage"}], " ", "=", "\n", 
    "\"\<PlotEcoStreams[{\!\(\*StyleBox[\"var1\", \"TI\"]\), \
\!\(\*StyleBox[\"var1min\", \"TI\"]\), \!\(\*StyleBox[\"var1max\", \
\"TI\"]\)}, {\!\(\*StyleBox[\"var2\", \"TI\"]\), \!\(\*StyleBox[\"var2min\", \
\"TI\"]\), \!\(\*StyleBox[\"var2max\", \"TI\"]\)}] plots ecological streams \
in the phase plane of variables \!\(\*StyleBox[\"var1\", \"TI\"]\) and \
\!\(\*StyleBox[\"var2\", \"TI\"]\).\n\
PlotEcoStreams[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
{\!\(\*StyleBox[\"var1\", \"TI\"]\), \!\(\*StyleBox[\"var1min\", \"TI\"]\), \
\!\(\*StyleBox[\"var1max\", \"TI\"]\)}, {\!\(\*StyleBox[\"var2\", \"TI\"]\), \
\!\(\*StyleBox[\"var2min\", \"TI\"]\), \!\(\*StyleBox[\"var2max\", \
\"TI\"]\)}] uses trait values \!\(\*StyleBox[\"traits\", \"TI\"]\).\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotEcoPhasePlane", "::", "usage"}], "=", "\n", 
    "\"\<PlotEcoPhasePlane[{\!\(\*StyleBox[\"var1\", \"TI\"]\), \
\!\(\*StyleBox[\"var1min\", \"TI\"]\), \!\(\*StyleBox[\"var1max\", \
\"TI\"]\)}, {\!\(\*StyleBox[\"var2\", \"TI\"]\), \!\(\*StyleBox[\"var2min\", \
\"TI\"]\), \!\(\*StyleBox[\"var2max\", \"TI\"]\)}] plots ecological streams \
and isoclines in the phase plane of variables \!\(\*StyleBox[\"var1\", \
\"TI\"]\) and \!\(\*StyleBox[\"var2\", \"TI\"]\).\n\
PlotEcoPhasePlane[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
{\!\(\*StyleBox[\"var1\", \"TI\"]\), \!\(\*StyleBox[\"var1min\", \"TI\"]\), \
\!\(\*StyleBox[\"var1max\", \"TI\"]\)}, {\!\(\*StyleBox[\"var2\", \"TI\"]\), \
\!\(\*StyleBox[\"var2min\", \"TI\"]\), \!\(\*StyleBox[\"var2max\", \
\"TI\"]\)}] uses trait values \!\(\*StyleBox[\"traits\", \"TI\"]\).\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SelectEcoStable", "::", "usage"}], "=", "\n", 
    "\"\<SelectEcoStable[\!\(\*StyleBox[\"sol\", \"TI\"]\)] selects stable \
equilibria from \!\(\*StyleBox[\"sol\", \"TI\"]\).\n\
SelectEcoStable[\!\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"sol\", \
\"TI\"]\)] uses trait values \!\(\*StyleBox[\"traits\", \"TI\"]\).\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EcoStableQ", "::", "usage"}], "=", "\n", 
    "\"\<EcoStableQ[\!\(\*StyleBox[\"pops\", \"TI\"]\)] reports the linear \
stability of an equilibrium as True, False, or Indeterminate.\n\
EcoStableQ[\!\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"pops\", \
\"TI\"]\)] uses trait values \!\(\*StyleBox[\"traits\", \"TI\"]\).\n\
EcoStableQ[\!\(\*StyleBox[\"traitsandpops\", \"TI\"]\)] uses combined trait \
and community state \!\(\*StyleBox[\"traitsandpops\", \"TI\"]\).\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoAttractor", "::", "usage"}], "=", "\n", 
    "\"\<FindEcoAttractor[] tries to find an ecological attractor.\n\
FindEcoAttractor[\!\(\*StyleBox[\"traits\", \"TI\"]\)] uses trait values \!\(\
\*StyleBox[\"traits\", \"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Inv", "::", "usage"}], "=", "\n", 
    "\"\<Inv[\!\(\*StyleBox[\"pops\", \"TI\"]\), \!\(\*StyleBox[\"inv\", \"TI\
\"]\)] calculates the growth rate of invader \!\(\*StyleBox[\"inv\", \
\"TI\"]\) invading the resident community \!\(\*StyleBox[\"pops\", \"TI\"]\).\
\nInv[\!\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"pops\", \
\"TI\"]\), Guild\[Rule]\!\(\*StyleBox[\"guild\", \"TI\"]\)] calculates the \
growth rate of an invader in guild \!\(\*StyleBox[\"guild\", \"TI\"]\) \
(default=1), using resident trait values \!\(\*StyleBox[\"traits\", \
\"TI\"]\).\nInv[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"pops\", \"TI\"]\), \!\(\*StyleBox[\"traitinv\", \"TI\"]\)] \
uses invader traits \!\(\*StyleBox[\"traitinv\", \"TI\"]\).\n\
Inv[\!\(\*StyleBox[\"traitsandpops\", \"TI\"]\), \!\(\*StyleBox[\"traitinv\", \
\"TI\"]\)] uses combined trait and community state \
\!\(\*StyleBox[\"traitsandpops\", \"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"StablePopulationStructure", "::", "usage"}], "=", "\n", 
    "\"\<StablePopulationStructure[\!\(\*StyleBox[\"pops\", \"TI\"]\), \
\!\(\*StyleBox[\"inv\", \"TI\"]\)] calculates the stable population structure \
of invader \!\(\*StyleBox[\"inv\", \"TI\"]\) invading the resident community \
\!\(\*StyleBox[\"pops\", \"TI\"]\).\n\
StablePopulationStructure[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"pops\", \"TI\"]\), Guild\[Rule]\!\(\*StyleBox[\"guild\", \
\"TI\"]\)] calculates the stable population structure of an invader in guild \
\!\(\*StyleBox[\"guild\", \"TI\"]\), using resident trait values \
\!\(\*StyleBox[\"traits\", \"TI\"]\).\n\
StablePopulationStructure[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"pops\", \"TI\"]\), \!\(\*StyleBox[\"traitinv\", \"TI\"]\)] \
uses invader traits \!\(\*StyleBox[\"traitinv\", \"TI\"]\).\n\
StablePopulationStructure[\!\(\*StyleBox[\"traitsandpops\", \"TI\"]\), \
\!\(\*StyleBox[\"traitinv\", \"TI\"]\)] uses combined trait and community \
state \!\(\*StyleBox[\"traitsandpops\", \"TI\"]\).\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReproductiveValues", "::", "usage"}], " ", "=", "\n", 
    "\"\<ReproductiveValues[\!\(\*StyleBox[\"pops\", \"TI\"]\), \
\!\(\*StyleBox[\"inv\", \"TI\"]\)] calculates the reproductive values of \
invader \!\(\*StyleBox[\"inv\", \"TI\"]\) invading the resident community \
\!\(\*StyleBox[\"pops\", \"TI\"]\).\n\
ReproductiveValues[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"pops\", \"TI\"]\), Guild\[Rule]\!\(\*StyleBox[\"guild\", \
\"TI\"]\)] calculates the reproductive value of an invader in guild \
\!\(\*StyleBox[\"guild\", \"TI\"]\), using resident trait values \
\!\(\*StyleBox[\"traits\", \"TI\"]\).\n\
ReproductiveValues[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"pops\", \"TI\"]\), \!\(\*StyleBox[\"traitinv\", \"TI\"]\)] \
uses invader traits \!\(\*StyleBox[\"traitinv\", \"TI\"]\).\n\
ReproductiveValues[\!\(\*StyleBox[\"traitsandpops\", \"TI\"]\), \
\!\(\*StyleBox[\"traitinv\", \"TI\"]\)] uses combined trait and community \
state \!\(\*StyleBox[\"traitsandpops\", \"TI\"]\).\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InvSPS", "::", "usage"}], " ", "=", "\n", 
    "\"\<InvSPS[\!\(\*StyleBox[\"pops\", \"TI\"]\), \!\(\*StyleBox[\"inv\", \
\"TI\"]\)] calculates the growth rate and stable population structure of \
invader \!\(\*StyleBox[\"inv\", \"TI\"]\) invading the resident community \
\!\(\*StyleBox[\"pops\", \"TI\"]\).\nInvSPS[\!\(\*StyleBox[\"traits\", \
\"TI\"]\), \!\(\*StyleBox[\"pops\", \"TI\"]\), \
Guild\[Rule]\!\(\*StyleBox[\"guild\", \"TI\"]\)] calculates the growth rate \
and stable population structure of an invader in guild \!\(\*StyleBox[\"guild\
\", \"TI\"]\), using resident trait values \!\(\*StyleBox[\"traits\", \"TI\"]\
\).\nInvSPS[\!\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"pops\", \
\"TI\"]\), \!\(\*StyleBox[\"traitinv\", \"TI\"]\)] uses invader traits \
\!\(\*StyleBox[\"traitinv\", \"TI\"]\).\n\
InvSPS[\!\(\*StyleBox[\"traitsandpops\", \"TI\"]\), \!\(\*StyleBox[\"traitinv\
\", \"TI\"]\)] uses combined trait and community state \
\!\(\*StyleBox[\"traitsandpops\", \"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DInv", "::", "usage"}], " ", "=", "\n", 
    "\"\<DInv[\!\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"pops\", \
\"TI\"]\), \!\(\*StyleBox[\"target\", \"TI\"]\), \!\(\*StyleBox[\"point\", \
\"TI\"]\)] calculates a derivative of invasion fitness with respect to \
\!\(\*StyleBox[\"target\", \"TI\"]\), with resident traits \
\!\(\*StyleBox[\"traits\", \"TI\"]\) and community \!\(\*StyleBox[\"pops\", \
\"TI\"]\)\!\(\*StyleBox[\".\", \"Code\"]\)\n\!\(\*StyleBox[\"target\", \
\"TI\"]\) can be \!\(\*StyleBox[\"x\", \"TI\"]\) for a single trait, \
{\!\(\*StyleBox[\"x1\", \"TI\"]\),\!\(\*StyleBox[\"x2\", \
\"TI\"]\),...,\!\(\*StyleBox[\"xn\", \"TI\"]\)} for multiple traits, \
{\!\(\*StyleBox[\"x\", \"TI\"]\),2} for the second derivative with respect to \
x, {{\!\(\*StyleBox[\"x1\", \"TI\"]\),\!\(\*StyleBox[\"x2\", \"TI\"]\),...,\!\
\(\*StyleBox[\"xn\", \"TI\"]\)},2} for the Hessian matrix.\n\
\!\(\*StyleBox[\"point\", \"TI\"]\) is where DInv will be evaluated.\nDInv[\!\
\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"pops\", \"TI\"]\), \
\!\(\*StyleBox[\"target\", \"TI\"]\)] gives derivatives for all species in a \
guild determined from \!\(\*StyleBox[\"target\", \"TI\"]\).\n\
DInv[\!\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"pops\", \
\"TI\"]\)] gives derivatives for all traits in Guild (default=1).\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NDInv", "::", "usage"}], " ", "=", "\n", 
    "\"\<NDInv[\!\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"pops\", \
\"TI\"]\), \!\(\*StyleBox[\"target\", \"TI\"]\), \!\(\*StyleBox[\"point\", \
\"TI\"]\)] numerically approximates a derivative of invasion fitness with \
respect to \!\(\*StyleBox[\"target\", \"TI\"]\), with resident traits \
\!\(\*StyleBox[\"traits\", \"TI\"]\) and community \!\(\*StyleBox[\"pops\", \
\"TI\"]\)\!\(\*StyleBox[\".\", \"Code\"]\)\n\!\(\*StyleBox[\"target\", \
\"TI\"]\) can be \!\(\*StyleBox[\"x\", \"TI\"]\) for a single trait, \
{\!\(\*StyleBox[\"x1\", \"TI\"]\),\!\(\*StyleBox[\"x2\", \
\"TI\"]\),...,\!\(\*StyleBox[\"xn\", \"TI\"]\)} for multiple traits, \
{\!\(\*StyleBox[\"x\", \"TI\"]\),2} for the second derivative with respect to \
x, {{\!\(\*StyleBox[\"x1\", \"TI\"]\),\!\(\*StyleBox[\"x2\", \"TI\"]\),...,\!\
\(\*StyleBox[\"xn\", \"TI\"]\)},2} for the Hessian matrix.\n\
\!\(\*StyleBox[\"point\", \"TI\"]\) is where NDInv will be evaluated.\nNDInv[\
\!\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"pops\", \"TI\"]\), \
\!\(\*StyleBox[\"target\", \"TI\"]\)] gives derivatives for all species in a \
guild determined from \!\(\*StyleBox[\"target\", \"TI\"]\).\n\
NDInv[\!\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"pops\", \
\"TI\"]\)] gives derivatives for all traits in Guild (default=1).\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NumDInv", "::", "usage"}], "=", "\"\<\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GlobalESSQ", "::", "usage"}], " ", "=", "\n", 
    "\"\<GlobalESSQ[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"sol\", \"TI\"]\)] checks global ESS stability with \
\!\(\*StyleBox[\"traits\", \"TI\"]\) and ecological attractor \!\(\*StyleBox[\
\"sol\", \"TI\"]\).\nGlobalESSQ[\!\(\*StyleBox[\"traitsandpops\", \"TI\"]\)] \
uses combined community state \!\(\*StyleBox[\"traitsandpops\", \
\"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PrestonPlot", "::", "usage"}], " ", "=", "\n", 
    "\"\<PrestonPlot[\!\(\*StyleBox[\"pops\", \"TI\"]\)] makes a Preston \
species abundance distribution plot based on \!\(\*StyleBox[\"pops\", \"TI\"]\
\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"WhittakerPlot", "::", "usage"}], " ", "=", "\n", 
    "\"\<WhittakerPlot[\!\(\*StyleBox[\"pops\", \"TI\"]\)] makes a Whittaker \
rank-abundance plot based on \!\(\*StyleBox[\"pops\", \"TI\"]\).\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotTAD", "::", "usage"}], " ", "=", "\n", 
    "\"\<PlotTAD[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"pops\", \"TI\"]\)] plots abundance vs trait for the species \
in \!\(\*StyleBox[\"traits\", \"TI\"]\) and \!\(\*StyleBox[\"pops\", \
\"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotZIP", "::", "usage"}], " ", "=", "\n", 
    "\"\<PlotZIP[{\!\(\*StyleBox[\"var1\", \"TI\"]\), \
\!\(\*StyleBox[\"var1min\", \"TI\"]\), \!\(\*StyleBox[\"var1max\", \
\"TI\"]\)}, {\!\(\*StyleBox[\"var2\", \"TI\"]\), \!\(\*StyleBox[\"var2min\", \
\"TI\"]\), \!\(\*StyleBox[\"var2max\", \"TI\"]\)}, \!\(\*StyleBox[\"inv\", \
\"TI\"]\)] creates a zero invasion plot, with invader \!\(\*StyleBox[\"inv\", \
\"TI\"]\)\!\(\*StyleBox[\" \", \"TI\"]\)(inferred if omitted).\n\
PlotZIP[\!\(\*StyleBox[\"eq0\", \"TI\"]\), {\!\(\*StyleBox[\"var1\", \
\"TI\"]\), \!\(\*StyleBox[\"var1min\", \"TI\"]\), \!\(\*StyleBox[\"var1max\", \
\"TI\"]\)}, {\!\(\*StyleBox[\"var2\", \"TI\"]\), \!\(\*StyleBox[\"var2min\", \
\"TI\"]\), \!\(\*StyleBox[\"var2max\", \"TI\"]\)}, \!\(\*StyleBox[\"inv\", \
\"TI\"]\)] uses equilibrium \!\(\*StyleBox[\"eq0\", \"TI\"]\).\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotInv", "::", "usage"}], " ", "=", "\n", 
    "\"\<PlotInv[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"sol\", \"TI\"]\), {\!\(\*StyleBox[\"trait\", \"TI\"]\), \!\(\
\*StyleBox[\"traitmin\", \"TI\"]\), \!\(\*StyleBox[\"traitmax\", \"TI\"]\)}] \
plots a fitness landscape, where \!\(\*StyleBox[\"trait\", \"TI\"]\) varies \
from \!\(\*StyleBox[\"traitmin\", \"TI\"]\) to \!\(\*StyleBox[\"traitmax\", \
\"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotPIP", "::", "usage"}], " ", "=", "\n", 
    "\"\<PlotPIP[{\!\(\*StyleBox[\"trait\", \"TI\"]\), \
\!\(\*StyleBox[\"traitmin\", \"TI\"]\), \!\(\*StyleBox[\"traitmax\", \
\"TI\"]\)}] creates a pairwise invasibility plot, where \
\!\(\*StyleBox[\"trait\", \"TI\"]\) varies from \!\(\*StyleBox[\"traitmin\", \
\"TI\"]\) to \!\(\*StyleBox[\"traitmax\", \"TI\"]\).\nPlotPIP[\!\(\*StyleBox[\
\"sol\", \"TI\"]\), {\!\(\*StyleBox[\"trait\", \"TI\"]\), \
\!\(\*StyleBox[\"traitmin\", \"TI\"]\), \!\(\*StyleBox[\"traitmax\", \
\"TI\"]\)}] uses equilibrium \!\(\*StyleBox[\"sol\", \"TI\"]\) for improved \
speed.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotMIP", "::", "usage"}], " ", "=", "\n", 
    "\"\<PlotMIP[{\!\(\*StyleBox[\"trait\", \"TI\"]\), \
\!\(\*StyleBox[\"traitmin\", \"TI\"]\), \!\(\*StyleBox[\"traitmax\", \
\"TI\"]\)}] creates a mutual invasibility plot, where \
\!\(\*StyleBox[\"trait\", \"TI\"]\) varies from \!\(\*StyleBox[\"traitmin\", \
\"TI\"]\) to \!\(\*StyleBox[\"traitmax\", \"TI\"]\).\nPlotMIP[\!\(\*StyleBox[\
\"sol\", \"TI\"]\), {\!\(\*StyleBox[\"trait\", \"TI\"]\), \
\!\(\*StyleBox[\"traitmin\", \"TI\"]\), \!\(\*StyleBox[\"traitmax\", \
\"TI\"]\)}] uses equilibrium \!\(\*StyleBox[\"sol\", \"TI\"]\) for improved \
speed.\nPlotMIP[{\!\(\*StyleBox[\"trait1\", \"TI\"]\), \
\!\(\*StyleBox[\"trait1min\", \"TI\"]\), \!\(\*StyleBox[\"trait1max\", \
\"TI\"]\)}, {\!\(\*StyleBox[\"trait2\", \"TI\"]\), \!\(\*StyleBox[\"trait2min\
\", \"TI\"]\), \!\(\*StyleBox[\"trait2max\", \"TI\"]\)}] allows for two \
different traits.\nPlotMIP[{\!\(\*StyleBox[\"sol1\", \"TI\"]\), \
\!\(\*StyleBox[\"sol2\", \"TI\"]\)}, {\!\(\*StyleBox[\"trait1\", \"TI\"]\), \
\!\(\*StyleBox[\"trait1min\", \"TI\"]\), \!\(\*StyleBox[\"trait1max\", \
\"TI\"]\)}, {\!\(\*StyleBox[\"trait2\", \"TI\"]\), \!\(\*StyleBox[\"trait2min\
\", \"TI\"]\), \!\(\*StyleBox[\"trait2max\", \"TI\"]\)}] uses equilibria \!\(\
\*StyleBox[\"sol1\", \"TI\"]\) and \!\(\*StyleBox[\"sol2\", \"TI\"]\).\>\""}],
    ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotEvoStreams", "::", "usage"}], " ", "=", "\n", 
    "\"\<PlotEvoStreams[{\!\(\*StyleBox[\"trait1\", \"TI\"]\), \
\!\(\*StyleBox[\"trait1min\", \"TI\"]\), \!\(\*StyleBox[\"trait1max\", \
\"TI\"]\)}] plots two-species evolutionary streams.\n\
PlotEvoStreams[\!\(\*StyleBox[\"sol\", \"TI\"]\), {\!\(\*StyleBox[\"trait1\", \
\"TI\"]\), \!\(\*StyleBox[\"trait1min\", \"TI\"]\), \
\!\(\*StyleBox[\"trait1max\", \"TI\"]\)}] uses two-species equilibrium \
\!\(\*StyleBox[\"sol\", \"TI\"]\) for improved speed.\n\
PlotEvoStreams[{\!\(\*StyleBox[\"trait1\", \"TI\"]\), \
\!\(\*StyleBox[\"trait1min\", \"TI\"]\), \!\(\*StyleBox[\"trait1max\", \
\"TI\"]\)}, {\!\(\*StyleBox[\"trait2\", \"TI\"]\), \!\(\*StyleBox[\"trait2min\
\", \"TI\"]\), \!\(\*StyleBox[\"trait2max\", \"TI\"]\)}] allows for two \
different traits.\nPlotEvoStreams[\!\(\*StyleBox[\"sol\", \"TI\"]\), \
{\!\(\*StyleBox[\"trait1\", \"TI\"]\), \!\(\*StyleBox[\"trait1min\", \
\"TI\"]\), \!\(\*StyleBox[\"trait1max\", \"TI\"]\)}, {\!\(\*StyleBox[\"trait2\
\", \"TI\"]\), \!\(\*StyleBox[\"trait2min\", \"TI\"]\), \
\!\(\*StyleBox[\"trait2max\", \"TI\"]\)}] uses equilibrium \
\!\(\*StyleBox[\"sol\", \"TI\"]\).\nPlotEvoStreams[\!\(\*StyleBox[\"sol\", \
\"TI\"]\), \!\(\*StyleBox[\"varcovars\", \"TI\"]\), \
{\!\(\*StyleBox[\"trait1\", \"TI\"]\), \!\(\*StyleBox[\"trait1min\", \
\"TI\"]\), \!\(\*StyleBox[\"trait1max\", \"TI\"]\)}, {\!\(\*StyleBox[\"trait2\
\", \"TI\"]\), \!\(\*StyleBox[\"trait2min\", \"TI\"]\), \
\!\(\*StyleBox[\"trait2max\", \"TI\"]\)}] uses trait variances/covariances in \
\!\(\*StyleBox[\"varcovars\", \"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotEvoIsoclines", "::", "usage"}], " ", "=", "\n", 
    "\"\<PlotEvoIsoclines[{\!\(\*StyleBox[\"trait1\", \"TI\"]\), \
\!\(\*StyleBox[\"trait1min\", \"TI\"]\), \!\(\*StyleBox[\"trait1max\", \
\"TI\"]\)}] plots two-species evolutionary isoclines.\n\
PlotEvoIsoclines[\!\(\*StyleBox[\"sol\", \"TI\"]\), \
{\!\(\*StyleBox[\"trait1\", \"TI\"]\), \!\(\*StyleBox[\"trait1min\", \
\"TI\"]\), \!\(\*StyleBox[\"trait1max\", \"TI\"]\)}] uses two-species \
equilibrium \!\(\*StyleBox[\"sol\", \"TI\"]\) for improved speed.\n\
PlotEvoIsoclines[{\!\(\*StyleBox[\"trait1\", \"TI\"]\), \
\!\(\*StyleBox[\"trait1min\", \"TI\"]\), \!\(\*StyleBox[\"trait1max\", \
\"TI\"]\)}, {\!\(\*StyleBox[\"trait2\", \"TI\"]\), \!\(\*StyleBox[\"trait2min\
\", \"TI\"]\), \!\(\*StyleBox[\"trait2max\", \"TI\"]\)}] allows for two \
different traits.\nPlotEvoIsoclines[\!\(\*StyleBox[\"sol\", \"TI\"]\), \
{\!\(\*StyleBox[\"trait1\", \"TI\"]\), \!\(\*StyleBox[\"trait1min\", \
\"TI\"]\), \!\(\*StyleBox[\"trait1max\", \"TI\"]\)}, {\!\(\*StyleBox[\"trait2\
\", \"TI\"]\), \!\(\*StyleBox[\"trait2min\", \"TI\"]\), \
\!\(\*StyleBox[\"trait2max\", \"TI\"]\)}] uses equilibrium \
\!\(\*StyleBox[\"sol\", \"TI\"]\).\nPlotEvoStreams[\!\(\*StyleBox[\"sol\", \
\"TI\"]\), \!\(\*StyleBox[\"varcovars\", \"TI\"]\), \
{\!\(\*StyleBox[\"trait1\", \"TI\"]\), \!\(\*StyleBox[\"trait1min\", \
\"TI\"]\), \!\(\*StyleBox[\"trait1max\", \"TI\"]\)}, {\!\(\*StyleBox[\"trait2\
\", \"TI\"]\), \!\(\*StyleBox[\"trait2min\", \"TI\"]\), \
\!\(\*StyleBox[\"trait2max\", \"TI\"]\)}] uses trait variances/covariances in \
\!\(\*StyleBox[\"varcovars\", \"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotEvoPhasePlane", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<PlotEvoPhasePlane[{\!\(\*StyleBox[\"trait1\", \"TI\"]\), \
\!\(\*StyleBox[\"trait1min\", \"TI\"]\), \!\(\*StyleBox[\"trait1max\", \
\"TI\"]\)}] combines PlotMIP, PlotEvoStreams and PlotEvoIsoclines.\n\
PlotEvoPhasePlane[\!\(\*StyleBox[\"eq1\", \"TI\"]\), \!\(\*StyleBox[\"eq2\", \
\"TI\"]\), {\!\(\*StyleBox[\"trait1\", \"TI\"]\), \
\!\(\*StyleBox[\"trait1min\", \"TI\"]\), \!\(\*StyleBox[\"trait1max\", \
\"TI\"]\)}] uses one-species equilibrium \!\(\*StyleBox[\"eq1\", \"TI\"]\) \
and two-species equilibrium \!\(\*StyleBox[\"eq2\", \"TI\"]\) for improved \
speed (2 species).\nPlotEvoPhasePlane[{\!\(\*StyleBox[\"trait1\", \"TI\"]\), \
\!\(\*StyleBox[\"trait1min\", \"TI\"]\), \!\(\*StyleBox[\"trait1max\", \
\"TI\"]\)}, {\!\(\*StyleBox[\"trait2\", \"TI\"]\), \!\(\*StyleBox[\"trait2min\
\", \"TI\"]\), \!\(\*StyleBox[\"trait2max\", \"TI\"]\)}] allows for two \
different traits (within or between guilds).\n\
PlotEvoPhasePlane[{\!\(\*StyleBox[\"eq11\", \"TI\"]\), \
\!\(\*StyleBox[\"eq12\", \"TI\"]\)}, \!\(\*StyleBox[\"eq2\", \"TI\"]\), {\!\(\
\*StyleBox[\"trait1\", \"TI\"]\), \!\(\*StyleBox[\"trait1min\", \"TI\"]\), \!\
\(\*StyleBox[\"trait1max\", \"TI\"]\)}, {\!\(\*StyleBox[\"trait2\", \
\"TI\"]\), \!\(\*StyleBox[\"trait2min\", \"TI\"]\), \
\!\(\*StyleBox[\"trait2max\", \"TI\"]\)}] uses one-species equilibria \
\!\(\*StyleBox[\"eq11\", \"TI\"]\) and \!\(\*StyleBox[\"eq12\", \"TI\"]\) and \
two-species equilibrium \!\(\*StyleBox[\"eq2\", \"TI\"]\) (2 guilds).\n\
PlotEvoPhasePlane[{\!\(\*StyleBox[\"eq11\", \"TI\"]\), \
\!\(\*StyleBox[\"eq12\", \"TI\"]\)}, \!\(\*StyleBox[\"eq2\", \"TI\"]\), \
\!\(\*StyleBox[\"varcovars\", \"TI\"]\), {\!\(\*StyleBox[\"trait1\", \
\"TI\"]\), \!\(\*StyleBox[\"trait1min\", \"TI\"]\), \
\!\(\*StyleBox[\"trait1max\", \"TI\"]\)}, {\!\(\*StyleBox[\"trait2\", \"TI\"]\
\), \!\(\*StyleBox[\"trait2min\", \"TI\"]\), \!\(\*StyleBox[\"trait2max\", \
\"TI\"]\)}] uses trait variances/covariances in \!\(\*StyleBox[\"varcovars\", \
\"TI\"]\).\nPlotEvoPhasePlane[\!\(\*StyleBox[\"eq0\", \"TI\"]\), \
\!\(\*StyleBox[\"eq1\", \"TI\"]\), {\!\(\*StyleBox[\"trait1\", \"TI\"]\), \
\!\(\*StyleBox[\"trait1min\", \"TI\"]\), \!\(\*StyleBox[\"trait1max\", \
\"TI\"]\)}, {\!\(\*StyleBox[\"trait2\", \"TI\"]\), \!\(\*StyleBox[\"trait2min\
\", \"TI\"]\), \!\(\*StyleBox[\"trait2max\", \"TI\"]\)}] combines PlotZIP, \
PlotEvoStreams and PlotEvoIsoclines (2 traits)\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EvoEq", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<EvoEq contains SolveEvoEq, NSolveEvoEq, and FindEvoEq. Use them \
instead.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SolveEvoEq", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<SolveEvoEq[\!\(\*StyleBox[\"sol\", \"TI\"]\)] solves for \
evolutionary equilibria using ecological equilibrium \!\(\*StyleBox[\"sol\", \
\"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NSolveEvoEq", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<NSolveEvoEq[\!\(\*StyleBox[\"sol\", \"TI\"]\)] numerically solves \
for evolutionary equilibria using ecological equilibrium \!\(\*StyleBox[\"sol\
\", \"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEvoEq", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<FindEvoEq[\!\(\*StyleBox[\"sol\", \"TI\"]\)] finds an evolutionary \
equilibrium using ecological equilibrium \!\(\*StyleBox[\"sol\", \"TI\"]\).\n\
FindEvoEq[\!\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"sol\", \
\"TI\"]\)] finds an evolutionary equilibrium using ecological equilibrium \
\!\(\*StyleBox[\"sol\", \"TI\"]\), with initial guess \!\(\*StyleBox[\"traits\
\", \"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoEvoEq", "::", "usage"}], " ", "=", "\n", 
    "\"\<FindEcoEvoEq[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"pops\", \"TI\"]\)] finds an eco-evolutionary equilibrium \
with initial guess \!\(\*StyleBox[\"traits\", \"TI\"]\) and \
\!\(\*StyleBox[\"pops\", \"TI\"]\).\n\
FindEcoEvoEq[\!\(\*StyleBox[\"traitsandpops\", \"TI\"]\)] uses combined \
initial guess \!\(\*StyleBox[\"traitsandpops\", \"TI\"]\).\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoCycleEvoEq", "::", "usage"}], " ", "=", "\n", 
    "\"\<FindEcoCycleEvoEq[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"pops\", \"TI\"]\)] finds an evolutionary equilibrium with an \
ecological cycle, with initial guess \!\(\*StyleBox[\"traits\", \"TI\"]\) and \
\!\(\*StyleBox[\"pops\", \"TI\"]\). An alias to \
FindEcoEvoCycle[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"pops\", \"TI\"]\), EvoEq\[Rule]True].\n\
FindEcoCycleEvoEq[\!\(\*StyleBox[\"traitsandpops\", \"TI\"]\)] uses combined \
initial guess \!\(\*StyleBox[\"traitsandpops\", \"TI\"]\).\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoEvoCycle", "::", "usage"}], " ", "=", "\n", 
    "\"\<FindEcoEvoCycle[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"pops\", \"TI\"]\)] finds an eco-evolutionary cycle, with \
initial guess \!\(\*StyleBox[\"traits\", \"TI\"]\) and \
\!\(\*StyleBox[\"pops\", \"TI\"]\).\n\
FindEcoEvoCycle[\!\(\*StyleBox[\"traitsandpops\", \"TI\"]\)] uses combined \
initial guess \!\(\*StyleBox[\"traitsandpops\", \"TI\"]\).\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MaximizeInv", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<MaximizeInv[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"sol\", \"TI\"]\)] finds the trait value(s) that maximize \
invasion fitness into a community with \!\(\*StyleBox[\"traits\", \"TI\"]\) \
and \!\(\*StyleBox[\"sol\", \"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EcoEvoSim", "::", "usage"}], " ", "=", "\n", 
    "\"\<EcoEvoSim[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"pops\", \"TI\"]\), \!\(\*StyleBox[\"tmax\", \"TI\"]\)] \
simulates coupled ecological and evolutionary dynamics, with initial \
\!\(\*StyleBox[\"traits\", \"TI\"]\) and \!\(\*StyleBox[\"pops\", \"TI\"]\).\n\
EcoEvoSim[\!\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"pops\", \"TI\
\"]\), \!\(\*StyleBox[\"varcovars\", \"TI\"]\), \!\(\*StyleBox[\"tmax\", \"TI\
\"]\)] uses trait variances/covariances in \!\(\*StyleBox[\"varcovars\", \"TI\
\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EcoEvoSimOld", "::", "usage"}], " ", "=", " ", "\"\<old\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EcoEvoJacobian", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<EcoEvoJacobian[\!\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\
\"pops\", \"TI\"]\), \!\(\*StyleBox[\"varcovars\", \"TI\"]\)] calculates the \
Jacobian of an eco-evolutionary equilibrium with \!\(\*StyleBox[\"traits\", \
\"TI\"]\), \!\(\*StyleBox[\"pops\", \"TI\"]\), trait variances/covariances in \
\!\(\*StyleBox[\"varcovars\", \"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EcoEvoEigenvalues", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<EcoEvoEigenvalues[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"pops\", \"TI\"]\), \!\(\*StyleBox[\"varcovars\", \"TI\"]\)] \
calculates the eigenvalues of an eco-evolutionary equilibrium with \
\!\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"pops\", \"TI\"]\), \
trait variances/covariances in \!\(\*StyleBox[\"varcovars\", \
\"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EvoJacobian", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<EvoJacobian[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"pops\", \"TI\"]\), \!\(\*StyleBox[\"varcovars\", \"TI\"]\)] \
calculates the Jacobian of an evolutionary equilibrium with \
\!\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"pops\", \"TI\"]\), \
trait variances/covariances in \!\(\*StyleBox[\"varcovars\", \
\"TI\"]\).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EvoEigenvalues", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<EvoEigenvalues[\!\(\*StyleBox[\"traits\", \"TI\"]\), \
\!\(\*StyleBox[\"pops\", \"TI\"]\), \!\(\*StyleBox[\"varcovars\", \"TI\"]\)] \
calculates the eigenvalues of an evolutionary equilibrium with \
\!\(\*StyleBox[\"traits\", \"TI\"]\), \!\(\*StyleBox[\"pops\", \"TI\"]\), \
trait variances/covariances in \!\(\*StyleBox[\"varcovars\", \
\"TI\"]\).\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.683806527904275*^9, 3.683806543757947*^9}, {
   3.683806724370289*^9, 3.6838067284094276`*^9}, {3.683807308579492*^9, 
   3.68380733369252*^9}, {3.683807371693272*^9, 3.683807372041073*^9}, {
   3.6838074156091557`*^9, 3.6838074300202303`*^9}, {3.683807460250849*^9, 
   3.683807460912183*^9}, 3.683807532873719*^9, 3.683807566090208*^9, {
   3.6838076305400333`*^9, 3.683807630840476*^9}, {3.683807664647328*^9, 
   3.683807711943388*^9}, {3.6838078252088823`*^9, 3.6838078340025797`*^9}, {
   3.683807871204753*^9, 3.6838079519807568`*^9}, {3.683809246155774*^9, 
   3.683809258084498*^9}, {3.683809351507609*^9, 3.6838093667309647`*^9}, {
   3.683809404088689*^9, 3.6838094051612377`*^9}, 3.683809522774111*^9, {
   3.683809594720418*^9, 3.683809682336467*^9}, {3.683809746805458*^9, 
   3.683809878695706*^9}, {3.683809908894764*^9, 3.683809929757875*^9}, {
   3.683809972507962*^9, 3.68381003908921*^9}, {3.6838100925690613`*^9, 
   3.68381033096093*^9}, {3.6838103615713367`*^9, 3.683810451112596*^9}, {
   3.6850552898090477`*^9, 3.6850553436809263`*^9}, {3.688411926799221*^9, 
   3.688411964977504*^9}, {3.688412004338317*^9, 3.688412172450553*^9}, {
   3.688412203350009*^9, 3.688412239593657*^9}, {3.6884123007578363`*^9, 
   3.688412461466291*^9}, {3.688412530464682*^9, 3.688412581993692*^9}, {
   3.688412619479886*^9, 3.688413275638929*^9}, {3.68841330787739*^9, 
   3.6884134650883827`*^9}, {3.688413502669321*^9, 3.688413971862336*^9}, {
   3.688426139210541*^9, 3.688426169363414*^9}, {3.688427593235258*^9, 
   3.6884277294714203`*^9}, {3.6884781874211884`*^9, 3.688478412575942*^9}, {
   3.689080039065963*^9, 3.6890800391359797`*^9}, {3.689251781362114*^9, 
   3.689251814951828*^9}, {3.695400309557482*^9, 3.695400377809293*^9}, {
   3.696151024807413*^9, 3.696151024826489*^9}, {3.696162141315362*^9, 
   3.6961621413375*^9}, {3.696263592266518*^9, 3.6962636180341597`*^9}, {
   3.700084246163762*^9, 3.700084247265877*^9}, {3.70017303896679*^9, 
   3.700173073809209*^9}, {3.708581282218692*^9, 3.708581384366304*^9}, {
   3.71139213605031*^9, 3.711392148741213*^9}, {3.712574671886932*^9, 
   3.712574681004319*^9}, {3.714692628255619*^9, 3.7146926813251133`*^9}, {
   3.71469271315889*^9, 3.7146927137440042`*^9}, {3.7146927577058153`*^9, 
   3.714692819127956*^9}, {3.7146928626051817`*^9, 3.714692865233872*^9}, {
   3.7147788988777313`*^9, 3.714778919442307*^9}, {3.71529332596481*^9, 
   3.7152933458583107`*^9}, 3.7153476648503838`*^9, {3.715461157564745*^9, 
   3.715461172835701*^9}, {3.71551311422218*^9, 3.715513137084323*^9}, {
   3.715521615214363*^9, 3.7155216331329517`*^9}, 3.715521666094078*^9, {
   3.715554036451271*^9, 3.715554037843298*^9}, {3.715780295443469*^9, 
   3.715780344961734*^9}, {3.715944297482139*^9, 3.715944328457844*^9}, {
   3.723380975944634*^9, 3.723380975957678*^9}, {3.723381762742157*^9, 
   3.723381791127495*^9}, {3.724697307094331*^9, 3.724697370341527*^9}, {
   3.72510664813708*^9, 3.7251066722354307`*^9}, {3.7255626337198133`*^9, 
   3.725562645140074*^9}, {3.725562878714918*^9, 3.7255629115794*^9}, 
   3.7255630754268303`*^9, {3.7255632680424757`*^9, 3.725563277602375*^9}, {
   3.725563406248464*^9, 3.725563409899412*^9}, {3.725751865730708*^9, 
   3.725751880759408*^9}, 3.725756373731728*^9, {3.7258383575756893`*^9, 
   3.725838357582597*^9}, 3.72584262016588*^9, {3.725912461596393*^9, 
   3.725912480128882*^9}, {3.7259623122458277`*^9, 3.725962319959887*^9}, {
   3.725963448472978*^9, 3.7259634506456747`*^9}, {3.727191619205681*^9, 
   3.72719168212715*^9}, {3.727191723123864*^9, 3.727191738250291*^9}, {
   3.728068795935115*^9, 3.728068818046172*^9}, {3.728431835621017*^9, 
   3.728431884534584*^9}, {3.728432003233317*^9, 3.728432032130519*^9}, {
   3.728432135454713*^9, 3.728432186152979*^9}, {3.728433183195426*^9, 
   3.728433205367504*^9}, {3.728433404343684*^9, 3.7284335536705503`*^9}, {
   3.728435258686429*^9, 3.7284353117044687`*^9}, {3.728584299760743*^9, 
   3.728584329352463*^9}, {3.7285843813945637`*^9, 3.728584421137741*^9}, {
   3.728584465667069*^9, 3.728584507494841*^9}, {3.7285845594380827`*^9, 
   3.7285845844770737`*^9}, 3.728585106284184*^9, {3.728606561816103*^9, 
   3.7286065744902477`*^9}, 3.728783486788114*^9, {3.728783582321691*^9, 
   3.728783697619055*^9}, 3.728783728600205*^9, {3.7287837786066713`*^9, 
   3.7287838333429413`*^9}, {3.728866237661441*^9, 3.7288663014143143`*^9}, {
   3.728866528328006*^9, 3.728866530982953*^9}, 3.7296870676032753`*^9, {
   3.729687495850397*^9, 3.729687498347465*^9}, {3.729705260076548*^9, 
   3.7297052606083307`*^9}, {3.7297072591500483`*^9, 3.729707260163169*^9}, {
   3.729707376151276*^9, 3.729707379418502*^9}, {3.729714110314413*^9, 
   3.729714116115698*^9}, {3.731273252556243*^9, 3.731273258654949*^9}, {
   3.7315385291227617`*^9, 3.7315385307356577`*^9}, {3.731538567760866*^9, 
   3.731538571996284*^9}, {3.7329196121532516`*^9, 3.732919616823093*^9}, {
   3.732919774731036*^9, 3.7329198612756147`*^9}, 3.732920259673263*^9, {
   3.732920386405096*^9, 3.732920449301222*^9}, {3.732922981062501*^9, 
   3.73292298272501*^9}, {3.733176261105949*^9, 3.733176283402342*^9}, {
   3.733524192649931*^9, 3.7335242125045443`*^9}, {3.755447350251672*^9, 
   3.75544735162239*^9}, {3.75897184061909*^9, 3.758971851993203*^9}, {
   3.759399942585745*^9, 3.759399966411776*^9}, {3.7594298746275883`*^9, 
   3.7594299279046717`*^9}, 
   3.7594299713327093`*^9},ExpressionUUID->"6a462f52-c718-4458-befd-\
9ece529ef443"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsection",ExpressionUUID->"c66607f0-5666-4218-b772-88d182d2ce1c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EcoEvoSimOpts", "::", "usage"}], "=", 
    "\"\<EcoEvoSimOpts is an option for various EcoEvo functions that passes \
options to EcoEvoSim.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindInstanceOpts", "::", "usage"}], "=", 
    "\"\<FindInstanceOpts in an option for various EcoEvo functions that \
passes options to FindInstance.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MaximizeInvOpts", "::", "usage"}], "=", 
    "\"\<MaximizeInvOpts is an option for GlobalESSQ that passes options to \
MaximizeInv.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExcludeDiagonal", "::", "usage"}], "=", 
    "\"\<ExcludeDiagonal is an option for PlotEvoIsoclines that excludes the \
diagonal.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotMIPOpts", "::", "usage"}], "=", 
    "\"\<PlotMIPOpts is an option for PlotEvoPhasePlane that passes options \
to PlotMIP.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotZIPOpts", "::", "usage"}], "=", 
    "\"\<PlotZIPOpts is an option for PlotEvoPhasePlane that passes options \
to PlotZIP.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotEvoStreamsOpts", "::", "usage"}], "=", 
    "\"\<PlotEvoStreamsOpts is an option for PlotEvoPhasePlane that passes \
options to PlotEvoStreams.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotEvoIsoclinesOpts", "::", "usage"}], "=", "\"\<\>\""}], ";"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IsoclineStyle", "::", "usage"}], "=", 
    "\"\<IsoclineStyle is an option for PlotEcoIsoclines and PlotEvoIsoclines \
that defines the style for isoclines.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"UseSymmetry", "::", "usage"}], "=", 
    "\"\<UseSymmetry is an option for PlotEvoStreams & PlotEvoIsoclines that \
assumes fitness gradients are symmetric.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InvStyle", "::", "usage"}], "=", 
    "\"\<InvStyle is an option for PlotMIP (PlotType->MIP) that defines the \
style for successful invasion.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NonInvStyle", "::", "usage"}], "=", 
    "\"\<NonInvStyle is an option for PlotMIP (PlotType->MIP) that defines \
the style for unsuccessful invasion.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SpeciesColors", "::", "usage"}], "=", 
    "\"\<SpeciesColors is an option for PlotMIP (PlotType->Outcome) that \
defines colors for each species.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ShowSpecies", "::", "usage"}], "=", 
    "\"\<ShowSpecies is an option for PrestonPlot that shows species markers \
or not.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MarkerStyle", "::", "usage"}], "=", 
    "\"\<MarkerStyle is an option for PrestonPlot that styles species \
markers.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Bandwidth", "::", "usage"}], "=", 
    "\"\<Bandwidth is an option for PrestonPlot that sets the bandwidth in \
SmoothKernelDistribution.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MinPop", "::", "usage"}], "=", 
    "\"\<MinPop is an option for varios EcoEvo functions that defines a \
minimum population size.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Base", "::", "usage"}], "=", 
    "\"\<Base is an option for PrestonPlot that sets the logarithm \
base.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QSS", "::", "usage"}], "=", 
    "\"\<QSS is an option for *EcoEq that indicates that nonspecified \
variables should be treated as unknowns.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TMin", "::", "usage"}], "=", 
    "\"\<TMin specifies the starting time for EcoSim and EcoEvoSim.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EcoAttractorNumber", "::", "usage"}], "=", 
    "\"\<EcoAttractorNumber specifies which EcoAttractor to choose in the \
case of multiple attractors.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TestValidity", "::", "usage"}], "=", 
    "\"\<TestValidity is an option for FindEcoAttractor that determines \
whether to test for valid equilibria.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TestStability", "::", "usage"}], "=", 
    "\"\<TestStability is an option for FindEcoAttractor that determines \
whether to test for stable equilibria.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FinalTMax", "::", "usage"}], "=", 
    "\"\<FinalTMax is an option for FindEcoAttractor that sets the length of \
an aperiodic solution.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EigenvaluesOpts", "::", "usage"}], "=", 
    "\"\<EigenvaluesOpts passes options to Eigenvalues.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AvgOpts", "::", "usage"}], "=", 
    "\"\<AvgOpts is an option for Variance and Covariance that passes options \
to Avg.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gradients", "::", "usage"}], "=", 
    "\"\<Gradients is an option for SetModel that provides a list of base \
Colorradients for guilds.\>\""}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TimeScale", "::", "usage"}], "=", 
    "\"\<TimeScale is an option for EcoSim that sets the overall timescale \
(default=1).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"OutputTMin", "::", "usage"}], "=", 
    "\"\<OutputTMin is an option for EcoSim and EcoEvoSim that that sets the \
length of the results (default=0).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Output", "::", "usage"}], "=", 
    "\"\<Output is an option for various EcoEvo functions that determines the \
type of output.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IsoclineLabels", "::", "usage"}], "=", 
    "\"\<IsoclineLabels is an option for PlotEcoIsoclines and \
PlotEvoIsoclines that styles the isocline labels.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotEcoIsoclinesOpts", "::", "usage"}], "=", 
    "\"\<PlotEcoIsoclinesOpts is an option for PlotEcoPhasePlane that passes \
options to PlotEcoIsoclines.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotEcoStreamsOpts", "::", "usage"}], "=", 
    "\"\<PlotEcoStreamsOpts is an option for PlotEcoPhasePlane that passes \
options to PlotEcoStreams.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BasePeriod", "::", "usage"}], "=", 
    "\"\<BasePeriod is an option for FindPeriod that gives the period to look \
at multiples of.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MaxPeriodMultiplier", "::", "usage"}], "=", 
    "\"\<MaxPeriodMultiplier is an option for FindEcoAttractor that sets how \
many multiples of the Period to try.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Multipliers", "::", "usage"}], "=", 
    "\"\<Multipliers is an option for EcoEigenvalues that chooses Floquet \
multipliers (True) or exponents (False).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TMaxPowerMin", "::", "usage"}], "=", 
    "\"\<TMaxPowerMin is an option for FindEcoCycle that sets the minimum \
base-10 power of tmax to try.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TMaxPowerMax", "::", "usage"}], "=", 
    "\"\<TMaxPowerMax is an option for FindEcoCycle that sets the maximum \
base-10 power of tmax to try.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dTMaxPower", "::", "usage"}], "=", 
    "\"\<dTMaxPower is an option for FindEcoCycle that sets the stepsize \
base-10 power of tmax.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"V", "::", "usage"}], "=", 
    "\"\<V is an option to set genetic variance in various EcoEvo \
functions.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "::", "usage"}], "=", 
    "\"\<G is an option to set genetic variance/covariance matrix in various \
EcoEvo functions.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ESTest", "::", "usage"}], "=", 
    "\"\<ESTest is an option for PlotEvoIsoclines that colors isoclines \
according to (local) evolutionary stability.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NonESColor", "::", "usage"}], "=", 
    "\"\<NonESColor is an option for PlotEvoIsoclines that sets the color of \
non-ES contours if ESTest\[Rule]True.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ESColor", "::", "usage"}], "=", 
    "\"\<ESColor is an option for PlotEvoIsoclines that sets the color of \
non-ES contours if ESTest\[Rule]True.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DelayDInv2", "::", "usage"}], "=", 
    "\"\<DelayDInv2 is an option for PlotEvoIsoclines whether to delay \
evaluation of DInv in ESS-test.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DInv2Opts", "::", "usage"}], "=", 
    "\"\<DInvOpts is an option for PlotEvoIsoclines that passed options to \
DInv in ESS-test.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BoundaryDetection", "::", "usage"}], "=", 
    "\"\<BoundaryDetection is an option for various EcoEvo functions to \
enforce variable/trait bounds.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Period", "::", "usage"}], "=", 
    "\"\<Period is an option for EcoEvoModel that defines its period.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RV", "::", "usage"}], "=", 
    "\"\<RV is an option for InvSPS when called from \
ReproductiveValues.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FromInv", "::", "usage"}], "=", 
    "\"\<FromInv is an option for InvSPS when called from Inv.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NumTries", "::", "usage"}], "=", 
    "\"\<NumTries is an option for FindEcoAttractor's method \\\"FindRoot\\\" \
that says how many initial guesses to try.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Switches", "::", "usage"}], "=", 
    "\"\<Switches is an option for EcoSimSSD that says when external mode \
switches occur.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PrintTrace", "::", "usage"}], "=", 
    "\"\<PrintTrace is an option for various EcoEvo functions to leave a \
trace of iterations.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Guild", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<Guild is an option for various EcoEvo functions that sets which \
guild to use.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Species", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<Species is an option for various EcoEvo functions that sets which \
species to use.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Pop", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<Pop is an option for various EcoEvo functions that sets which \
population to use.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Logged", "::", "usage"}], " ", "=", "\n", 
    "\"\<Logged is an option for EcoSim that logs population \
variables.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Averaged", "::", "usage"}], " ", "=", "\n", 
    "\"\<Averaged is an option for Inv that averages growth if True, gives \
instantaneous growth if False.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AbsoluteStepSize", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<AbsoluteStepSize is an option for NDInv that sets the absolute step \
size.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RelativeStepSize", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<RelativeStepSize is an option for NDInv that sets the relative step \
size.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotSpecies", "::", "usage"}], " ", "=", "\n", 
    "\"\<PlotSpecies is an option for PlotInv that puts points for species.\>\
\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PointStyle", "::", "usage"}], " ", "=", "\n", 
    "\"\<PointStyle is an option for PlotInv that determines the style of \
points for species.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ICs", "::", "usage"}], " ", "=", "\n", 
    "\"\<ICs is an option for PlotPIP and PlotMIP that supplies initial \
guesses for FindEcoAttractor.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ZeroDiagonal", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<ZeroDiagonal is an option for PlotPIP that forces Inv=0 along the \
diagonal.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SubtractDiagonal", "::", "usage"}], "=", "\n", 
    "\"\<SubtractDiagonal is an option for PlotPIP that subtracts the \
diagonal from all invasion rates.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EqStop", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<EqStop is an option for various EcoEvo simulation functions that \
stops upon reaching an equilibrium.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"WhenEvents", "::", "usage"}], " ", "=", "\n", 
    "\"\<WhenEvents is an option for various EcoEvo simulation functions that \
adds WhenEvents to NDSolve.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EqThreshold", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<EqThreshold is an option for various EcoEvo simulation functions \
that sets the sensitivity for EqStop.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Fixed", "::", "usage"}], " ", "=", "\n", 
    "\"\<Fixed is an option for various EcoEvo functions that find \
equilibria, that fixes the values of certain species/traits.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"WarmUp", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<WarmUp is an option for various EcoEvo functions that numerical \
solves a model before refining.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"WarmUp2", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<WarmUp2 is an option for various EcoEvo functions that numerical \
solves a model before refining.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"WarmUp3", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<WarmUp3 is an option for various EcoEvo functions that numerical \
solves a model before refining.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TriggerVariable", "::", "usage"}], " ", "=", "\n", 
    "\"\<TriggerVariable is an option for FindEcoCycle that sets which \
variable to focus on.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SolveOpts", "::", "usage"}], " ", "=", "\n", 
    "\"\<SolveOpts is an option for various EcoEvo functions that passes \
options to Solve.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NSolveOpts", "::", "usage"}], " ", "=", "\n", 
    "\"\<NSolveOpts is an option for various EcoEvo functions that passes \
options to NSolve.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindRootOpts", "::", "usage"}], " ", "=", "\n", 
    "\"\<FindRootOpts is an option for various EcoEvo functions that passes \
options to FindRoot.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MaximizeOpts", "::", "usage"}], " ", "=", "\n", 
    "\"\<MaximizeOpts is an option for various EcoEvo functions that passes \
options to Maximize.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NDSolveOpts", "::", "usage"}], " ", "=", "\n", 
    "\"\<NDSolveOpts is an option for various EcoEvo functions that passes \
options to NDSolve.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"WhenEventOpts", "::", "usage"}], " ", "=", "\n", 
    "\"\<WhenEventOpts is an option for various EcoEvo functions that passes \
options to WhenEvent.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NDOpts", "::", "usage"}], " ", "=", "\n", 
    "\"\<NDOpts is an option for various EcoEvo functions that passes options \
to ND.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NIntegrateOpts", "::", "usage"}], " ", "=", "\n", 
    "\"\<NIntegrateOpts is an option for various EcoEvo functions that passes \
options to NIntegrate.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IntegrateOpts", "::", "usage"}], " ", "=", "\n", 
    "\"\<IntegrateOpts is an option for various EcoEvo functions that passes \
options to Integrate.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoEvoEqOpts", "::", "usage"}], " ", "=", "\n", 
    "\"\<FindEcoEvoEqOpts is an option for TrackEcoEvoEq that passes options \
to FindEcoEvoEq.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GlobalESSQOpts", "::", "usage"}], " ", "=", "\n", 
    "\"\<GlobalESSQOpts is an option for TrackEcoEvoEq that passes options to \
GlobalESSQ.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EcoSimOpts", "::", "usage"}], " ", "=", "\n", 
    "\"\<EcoSimOpts is an option for various EcoEvo functions that passes \
options to EcoSim.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EigensystemOpts", "::", "usage"}], " ", "=", "\n", 
    "\"\<EigenvaluesOpts is an option for various EcoEvo functions that \
passes options to Eigenvalues.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BifurcationAction", "::", "usage"}], " ", "=", "\n", 
    "\"\<BifurcationAction is an option for TrackEcoEvoEq that selects what \
to do when a bifurcation is found.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NMaximizeOpts", "::", "usage"}], " ", "=", "\n", 
    "\"\<NMaximizeOpts is an option for GlobalESSQ that passes options to \
NMaximize.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Constraints", "::", "usage"}], " ", "=", "\n", 
    "\"\<Constraints is an option for various EcoEvo functions that add extra \
constraints.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QSSMethod", "::", "usage"}], " ", "=", "\n", 
    "\"\<QSSMethod is an option for Inv that selects how to solve for \
qualitative structure of the invader.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QSSICs", "::", "usage"}], " ", "=", "\n", 
    "\"\<QSSICs is an option for Inv that sets initial conditions for solving \
for qualitative structure of the invader.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PerCapita", "::", "usage"}], " ", "=", "\n", 
    "\"\<PerCapita is an option for various EcoEvo functions that divides by \
population size.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoCycleOpts", "::", "usage"}], " ", "=", "\n", 
    "\"\<FindEcoCycleOpts is an option for various EcoEvo functions that \
passes options to FindEcoCycle.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoAttractorOpts", "::", "usage"}], " ", "=", "\n", 
    "\"\<FindEcoAttractorOpts is an option for various EcoEvo functions that \
passes options to FindEcoAttractor.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SolveEcoEqOpts", "::", "usage"}], "=", "\n", 
    "\"\<SolveEcoEqOpts is an option for various EcoEvo functions that passes \
options to SolveEcoEq.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NSolveEcoEqOpts", "::", "usage"}], "=", "\n", 
    "\"\<NSolveEcoEqOpts is an option for various EcoEvo functions that \
passes options to NSolveEcoEq.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoEqOpts", "::", "usage"}], "=", "\n", 
    "\"\<FindEcoEqOpts is an option for various EcoEvo functions that passes \
options to FindEcoEq.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EcoEigenvaluesOpts", "::", "usage"}], "=", "\n", 
    "\"\<EcoEigenvaluesOpts is an option for various EcoEvo functions that \
passes options to EcoEigenvalues.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TMax", "::", "usage"}], "=", "\n", 
    "\"\<TMax is an option for FindEcoAttractor that sets the maximum time \
for EcoSim.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TMax2", "::", "usage"}], "=", "\n", 
    "\"\<TMax2 is an option for FindEcoAttractor that sets the maximum time \
for EcoSim.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InvOpts", "::", "usage"}], " ", "=", "\n", 
    "\"\<InvOpts is an option for various EcoEvo functions that passes \
options to Inv.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NInvOpts", "::", "usage"}], " ", "=", "\n", 
    "\"\<NInvOpts is an option for various EcoEvo functions that passes \
options to NInv.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DInvOpts", "::", "usage"}], " ", "=", "\n", 
    "\"\<DInvOpts is an option for various EcoEvo functions that passes \
options to DInv.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NDInvOpts", "::", "usage"}], " ", "=", "\n", 
    "\"\<NDInvOpts is an option for various EcoEvo functions that passes \
options to NDInv.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DelayInv", "::", "usage"}], "=", "\n", 
    "\"\<DelayInv is an option for various EcoEvo functions that delays the \
evaluation of Inv.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DelayDInv", "::", "usage"}], "=", "\n", 
    "\"\<DelayDInv is an option for various EcoEvo functions that delays the \
evaluation of DInv.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FitnessGradient", "::", "usage"}], "=", "\n", 
    "\"\<FitnessGradient is an option for various EcoEvo functions that \
chooses which method to use to calculate fitness gradients.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotOpts", "::", "usage"}], "=", "\n", 
    "\"\<PlotOpts is an option for various EcoEvo functions that passes \
options to plotting functions.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotType", "::", "usage"}], "=", "\n", 
    "\"\<PlotType is an option for PlotPIP that chooses plot type \
(ZeroContourPlot [default], ContourPlot, Plot3D).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InvThreshold", "::", "usage"}], "=", "\n", 
    "\"\<InvThreshold is an option for PlotMIP that sets the threshold for \
successful invasion.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SimplifyResult", "::", "usage"}], "=", "\n", 
    "\"\<SimplifyResult is an option for various EcoEvo functions that \
applies Simplify before returning results.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EvoEquation", "::", "usage"}], "=", "\n", 
    "\"\<EvoEquation is an option for EcoEvoSim that sets whether to use the \
breeders' equation (\\\"QG\\\" -- default) or the canonical equation \
(\\\"CE\\\").\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FreezeTraits", "::", "usage"}], "=", "\n", 
    "\"\<FreezeTraits is an option for EcoEvoSim that freezes traits at their \
initial conditions.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"VerboseAll", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<VerboseAll is an option for various EcoEvo functions that \
recursively turns on Verbose reporting.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TraitShiftRate", "::", "usage"}], " ", "=", "\n", 
    "\"\<TraitShiftRate is an option for various evolutionary EcoEvo \
functions that changes into a moving frame of reference for an constantly \
changing environment.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Time", "::", "usage"}], " ", "=", "\n", 
    "\"\<Time is an option for various EcoEvo functions that specifies when \
to evaluation the model.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MaxPeriod", "::", "usage"}], " ", "=", "\n", 
   "\"\<MaxPeriod is an option for FindEcoAttactor that sets the largest \
discrete-time period to look for a cycle.\>\""}], ";"}]}], "Code",
 CellChangeTimes->CompressedData["
1:eJwl0n1MzHEYAPBTNHMyL+tFXeJc6Q1d5ZxWzleirWuOtVDn8pKmHFHKddcl
R6jmxFHJS9cWpbreTJde3JVEk9OV5EJmZVnf1vJOuub7/Prj2Wd7nu15nu15
VhxI2HnIgkajBZEAr7XRVNsTMSoIHssH5QOcYnDCcpAyTrkgf1YKRmK64Sa4
60OmcDgVIyY9OBqsavraFSDFqE/V/Ar0WcupCiTW2mZUg12FiSw7GUbXtyVR
/h15cziGyAt/SzkUxLt2gqg3rM8Dz+s+3xKmYcRRfKG8JOuxKk/HKL1VTAfj
Hw6NmjMxGrd1xmCiwWGjKQsjS1cGpZynfAXmlc4oiqqoGCS6misp5yqCi78R
u28fuAvm3xZ43sgmeyXn+oGVMXY5XjkYpTyckbZo11F1Lkb9vpIToH1vxJM9
V8j8wbx28EvAGINzDyPjKMsZvBhXnASGGCYl4J0L/eytxLZ8JRd0SAhy/UFc
Ru9yBwuqRC/WlWLUeCaGcrXgHzf7Pkb702wCwC2Zc1gLKzGKVIesAjt4H7vX
aMg97LKMoG5+yDjoMqL7DZZ90rWX12DkqBmgLDJtj0+rxeinl4DyqkpmY2zB
6D7/pB34q29yBShS27uA0T1aRzcdRurSjJXgY+ZUszuRpbFsAXenM497EAdS
DieDDvteePD1pO5S6wte7rVnhBHPSMxMMDRUmCRvxWhYwUwG1TxeKvhOtvc0
KBGrvCRtGB3j+LFBf92/H6B0HZ4Gw0x1FqnEP9YPKIXVdWYpcaM3e7aMODmZ
260kCow5vWDFkZo6TIwN82kAnS43aQ62kz3DHR+AHFPK4oQOjN4M3lkKFvLZ
BwuJXMWMs9mLtRrixEgL5XIreQtlhryTyi8RFjUQXwYeKgFtp6Thj4h+5f4R
YAO2ZjQS9caPTmCR5taojuj0PQmDYiz12PSM/NF+pSfoW9+6FqxfE8UGt7gK
eKBIuwGBgdajoaBFX/8OMJY1kQ2WTdGUoPeN02a356Rfdfs0OH6ed/1tJ0ZX
ylQFoOS9RneqGyMDg/sUPLeEL/S0GEMRpn0isP61/jhYMs8/GYyctdnMJv65
EEbzIdbwtYpUojEu4Sz4Hwv1N3c=
  
  "],ExpressionUUID->"5b29208d-864f-42bf-9327-63f3e496b976"],

Cell[BoxData["\<\"FindInstanceOpts in an option for various EcoEvo functions \
that passes options to FindInstance.\"\>"], "Output",
 CellChangeTimes->{3.742769291413394*^9, 3.742770188659795*^9, 
  3.74277149083428*^9, 3.7427718885564938`*^9, 3.742771981854815*^9, 
  3.742772353172167*^9, 3.7427725950782347`*^9, 3.742772647564775*^9, 
  3.7428112379900923`*^9, 3.742811785008998*^9, 3.742811944184346*^9, 
  3.742812364515732*^9, 3.7428131012894907`*^9, 3.742813181206195*^9, 
  3.742813292320866*^9, 3.742816145590208*^9, 3.742816751932591*^9, 
  3.74281678420105*^9, 3.742816863625309*^9, 3.74281695218123*^9, 
  3.742817293477894*^9, 3.742817491502881*^9, 3.742817572096115*^9, 
  3.7428256570890293`*^9, 3.742834299285922*^9, 3.747144044553385*^9},
 CellLabel->
  "Out[157]=",ExpressionUUID->"5d5a77b8-1616-4494-98f7-24d0e72ae9ac"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Counters & Constants", "Subsection",
 CellChangeTimes->{{3.688427758535927*^9, 
  3.6884277618135157`*^9}},ExpressionUUID->"dcd1e8c4-0414-4b5c-91ab-\
2df7ad764a41"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"$invcount", "::", "usage"}], " ", "=", "\n", 
    "\"\<Counts number of times Inv called.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"$findecocyclesteps", "::", "usage"}], " ", "=", "\n", 
    "\"\<Counts the number of EcoSim calls in FindEcoCycle.\>\""}], ";"}], 
  "\n", " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"$findecoeqthingcount", "::", "usage"}], " ", "=", "\n", 
    "\"\<Counts number of times \\\"thing\\\" called inside EcoEq (FindRoot).\
\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"$findevoeqthingcount", "::", "usage"}], " ", "=", "\n", 
    "\"\<Counts number of times \\\"thing\\\" called inside FindEvoEq.\>\""}],
    ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"$ecoevoeqthingcount", "::", "usage"}], " ", "=", "\n", 
    "\"\<Counts number of times \\\"thing\\\" called inside \
FindEcoEvoEq.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"$findecocycleevoeqthingcount", "::", "usage"}], "=", "\n", 
    "\"\<Counts number of times \\\"thing\\\" called inside \
FindEcoCycleEvoEq.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"$roundofftolerance", "::", "usage"}], " ", "=", "\n", 
    "\"\<Buffer when comparing numbers.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$tmax", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<Default maximum time for *Sims.\>\""}], ";"}]}], "Code",
 CellChangeTimes->{
  3.700084271599441*^9, {3.700520139889642*^9, 3.7005201541755743`*^9}, {
   3.716593763115438*^9, 3.7165938023833*^9}, {3.7165948208165894`*^9, 
   3.716594821153515*^9}, 3.7166814334050426`*^9},
 CellLabel->
  "In[272]:=",ExpressionUUID->"0852f374-cbc8-4891-bc1f-674bc3819fce"]
}, Closed]],

Cell[CellGroupData[{

Cell["Errors", "Subsection",ExpressionUUID->"a930f4f8-8b7a-417c-89a7-527b9012e7c6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotZIP", "::", "unkinv"}], "=", "\n", 
    "\"\<Can't figure out who's invading: please specify.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotZIP", "::", "diffsp"}], "=", "\n", 
    "\"\<\!\(\*StyleBox[\"x\", \"TI\"]\)- and \!\(\*StyleBox[\"y\", \
\"TI\"]\)-axes should have the same species.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotPIP", "::", "feafail"}], "=", "\n", 
    "\"\<FindEcoAttractor failed at `1`=`2`.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotMIP", "::", "feafail"}], "=", "\n", 
    "\"\<FindEcoAttractor failed at `1`=`2`.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotMIP", "::", "badmtd"}], "=", "\n", 
    "\"\<The PlotType option should be a built-in method name (\\\"MIP\\\", \
\\\"RegionMIP\\\", \\\"Outcome\\\", or \\\"RegionOutcome\\\").\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "=", 
    "\"\<No model loaded. Use SetModel first.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SetNsp", "::", "badnsp"}], "=", "\n", 
    "\"\<Number of species inconsistent between traits `1` and densities `2`.\
\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SetNsp", "::", "badtr"}], "=", "\n", 
    "\"\<Number of traits in guild `1` inconsistent: `2`.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SetNsp", "::", "badcomm"}], "=", "\n", 
    "\"\<Number of components in guild `1` inconsistent: `2`.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SetModel", "::", "unktype"}], "=", "\n", 
    "\"\<Unknown ModelType (\\\"ContinuousTime\\\", \\\"DiscreteTime\\\" \
currently supported).\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EcoSim", "::", "ndnum"}], "=", "\n", 
    "\"\<Encountered non-numerical value for r.h.s. at t=0.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoCycle", "::", "cvmit"}], "=", "\n", 
    "\"\<Failed to converge to the requested accuracy within \[NoBreak]`1`\
\[NoBreak] iterations.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoCycleEvoEq", "::", "cvmit"}], "=", "\n", 
    "\"\<Failed to converge to the requested accuracy within \[NoBreak]`1`\
\[NoBreak] iterations.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoCycle", "::", "nomaxima"}], "=", "\n", 
    "\"\<Found no maxima in warmup #3, probably not periodic solution.\>\""}],
    ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoCycle", "::", "badmtd"}], "=", "\n", 
    "\"\<The Method option should be a built-in method name \
(\\\"FindRoot\\\", \\\"FixedPoint\\\", \\\"EcoSim\\\" or \\\"Automatic\\\")\>\
\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoCycle", "::", "noecosim"}], "=", "\n", 
    "\"\<\\\"EcoSim\\\" Method only applicable to unforced ContinuousTime \
models.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EcoEq", "::", "nosol"}], "=", "\n", 
    "\"\<NSolve failed to find a solution.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InvSPS", "::", "nosymev"}], "=", "\n", 
    "\"\<Warning: don't know how to find analytical StablePopulationStructure \
for > 2x2 matrix.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InvSPS", "::", "unkinv"}], "=", "\n", 
    "\"\<Can't figure out who's invading: please specify.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InvSPS", "::", "nonzero"}], "=", "\n", 
    "\"\<Invasion rate only defined for rare invaders.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InvSPS", "::", "noqsssol"}], "=", "\n", 
    "\"\<Couldn't find QSS solution for invader's Intensive \
components.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InvSPS", "::", "notraits"}], "=", "\n", 
    "\"\<Trait of invader not defined, so NIntegrate can't work.  Try \
Method->\\\"Integrate\\\" or give invader traits.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoAttractor", "::", "badmtd"}], "=", "\n", 
    "\"\<The Method option should be a built-in method name (\\\"SolveEcoEq\\\
\", \\\"NSolveEcoEq\\\", \\\"FindEcoEq\\\", or \\\"EcoSim\\\")\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoAttractor", "::", "nopops"}], "=", "\n", 
    "\"\<No initial population sizes given, cannot continue with `1`.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoAttractor", "::", "nocycle"}], "=", "\n", 
    "\"\<Warning: couldn't find a cycle with period less than \
MaxPeriod=`1`.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoAttractor", "::", "novalideq"}], "=", "\n", 
    "\"\<Couldn't find a valid equilibrium.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoAttractor", "::", "giveup"}], "=", "\n", 
    "\"\<Couldn't find an equilibrium or cycle, returing EcoSim.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TrackEcoEq", "::", "parvar"}], "=", "\n", 
    "\"\<`1` cannot be used as a variable.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TrackEcoEq", "::", "nosol"}], "=", "\n", 
    "\"\<Could not find a solution at par=`1`, quitting.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TrackEcoEvoEq", "::", "parvar"}], "=", "\n", 
    "\"\<`1` cannot be used as a variable.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TrackEcoEvoEq", "::", "nosol"}], "=", "\n", 
    "\"\<Could not find a solution at par=`1`, quitting.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TrackEcoEvoEq", "::", "conv"}], "=", "\n", 
    "\"\<Two species converged at par=`1`, quitting\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoEvoEq", "::", "badfg"}], "=", 
    "\"\<Bad FitnessGradient method (should be either DInv or NDInv).\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EcoEvoSim", "::", "badte"}], "=", 
    "\"\<Bad TraitEqn (should be either \\\"QG\\\" or \\\"CE\\\").\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoEvoEq", "::", "badte"}], "=", 
    "\"\<Bad TraitEqn (should be either \\\"QG\\\" or \\\"CE\\\").\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EcoEq", "::", "noneq"}], "=", 
    "\"\<Can't find equilibrium of periodically forced model with FindRoot.  \
Give Time option or try FindEcoCycle instead.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EcoEq", "::", "nosol"}], "=", 
    "\"\<Solve/NSolve couldn't find a solution.  Try FindEcoEq \
instead.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EvoEq", "::", "nosol"}], "=", 
    "\"\<Solve/NSolve couldn't find a solution.  Try FindEcoEq \
instead.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EvoEq", "::", "badmtd"}], "=", 
    "\"\<The Method option should be \\\"Solve\\\", \\\"NSolve\\\", \
\\\"FindRoot\\\", or \\\"FindInstance\\\".\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEvoEq", "::", "needic"}], "=", 
    "\"\<Method FindInstance doesn't work with DelayDInv.  Give an initial \
guess to use Method FindRoot instead.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NInv", "::", "badmtd"}], "=", 
    "\"\<The Method option should be a built-in method name.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EcoEvoJacobian", "::", "noper"}], "=", 
    "\"\<EcoEvoJacobian can't handle periodic models yet.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EcoEvoEigenvalues", "::", "noper"}], "=", 
    "\"\<EcoEvoEigenvalues can't handle periodic models yet.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EvoJacobian", "::", "noper"}], "=", 
    "\"\<EvoJacobian can't handle periodic models yet.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EvoEigenvalues", "::", "noper"}], "=", 
   "\"\<EvoEigenvalues can't handle periodic models yet.\>\""}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.688594784953782*^9, 3.688594785626054*^9}, {
   3.688594896125903*^9, 3.6885949726057568`*^9}, 3.688595084989201*^9, {
   3.688644067501049*^9, 3.688644148008717*^9}, 3.688644473593927*^9, {
   3.693575212381463*^9, 3.6935752546089153`*^9}, {3.6961510248867683`*^9, 
   3.6961510248990602`*^9}, {3.696162141418871*^9, 3.696162141444742*^9}, {
   3.6962062681540747`*^9, 3.696206276196927*^9}, 3.6996573832481613`*^9, {
   3.699658040278494*^9, 3.699658070876552*^9}, {3.69969422218328*^9, 
   3.6996942363670597`*^9}, {3.700054533126088*^9, 3.700054539309634*^9}, {
   3.7000545734462757`*^9, 3.700054574058477*^9}, {3.7000842780045013`*^9, 
   3.7000842788476133`*^9}, {3.70050023469529*^9, 3.700500274419197*^9}, {
   3.7005194315074987`*^9, 3.700519434884531*^9}, {3.708668435095048*^9, 
   3.708668479511484*^9}, {3.708792325284853*^9, 3.708792386720058*^9}, {
   3.709033163094268*^9, 3.7090331995425463`*^9}, {3.7092095015911283`*^9, 
   3.709209534748425*^9}, {3.7092095753091393`*^9, 3.7092095901563683`*^9}, {
   3.709336477898844*^9, 3.7093365325462503`*^9}, {3.7102540429503517`*^9, 
   3.710254043449806*^9}, 3.71032440011646*^9, {3.716568897492177*^9, 
   3.7165689485416517`*^9}, {3.7182277478085938`*^9, 3.71822776009208*^9}, {
   3.718290594489812*^9, 3.718290615637891*^9}, {3.726071412052554*^9, 
   3.72607147268169*^9}, {3.726847624519637*^9, 3.726847673286771*^9}, {
   3.7287770965112133`*^9, 3.728777119169063*^9}, {3.728782033796874*^9, 
   3.728782040428337*^9}, {3.7324701427297277`*^9, 3.732470153887085*^9}, {
   3.732470587791355*^9, 3.732470599181779*^9}, {3.732470993042871*^9, 
   3.732470995403124*^9}, {3.732532871092951*^9, 3.7325328789985323`*^9}, {
   3.734010311705757*^9, 3.734010341899413*^9}, {3.7340130284803333`*^9, 
   3.73401308381822*^9}, {3.758719191486796*^9, 3.7587192631917133`*^9}, {
   3.758719304680854*^9, 
   3.7587193047533503`*^9}},ExpressionUUID->"8faa1d37-16f3-45bf-a1c2-\
2e2a994bcf6e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Warnings", "Subsection",
 CellChangeTimes->{{3.699694246051614*^9, 
  3.699694246915069*^9}},ExpressionUUID->"354d1f73-7348-4688-a05d-\
6f0624f17176"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoAttractor", "::", "nosteq"}], "=", "\n", 
    "\"\<Warning: couldn't find a stable equilibrium with traits `1`. Trying \
EcoSim.\>\""}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Off", "[", 
     RowBox[{"FindEcoAttractor", "::", "nosteq"}], "]"}], ";"}], "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoAttractor", "::", "musteq"}], "=", "\n", 
    "\"\<Warning: found `1` stable equilibria with traits `2`.\>\""}], ";"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Off", "[", 
     RowBox[{"FindEcoAttractor", "::", "musteq"}], "]"}], ";"}], "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindEcoAttractor", "::", "nostst"}], "=", "\n", 
    "\"\<Warning: EcoSim did not find a steady state (d/dt=`1` at t=`2`). \
Trying FindEcoCycle.\>\""}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Off", "[", 
     RowBox[{"FindEcoAttractor", "::", "nostst"}], "]"}], ";"}], "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FindEcoEvoCycle", "::", "susmtd"}], "=", "\n", 
   "\"\<Warning: FitnessGradient\[Rule]\\\"EcoEvoSim\\\" is likely to be \
inappropriate when there are multiple components. Try EvoEq\[Rule]True and \
FitnessGradient\[Rule]\\\"EcoEvoSim\\\".\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.7182285601969357`*^9, 3.718228565470413*^9}, {
  3.718285760028723*^9, 3.718285776047394*^9}, {3.7593991127317343`*^9, 
  3.759399170733616*^9}, {3.759428452801124*^9, 3.759428499630618*^9}, {
  3.759428606865347*^9, 
  3.7594286604474773`*^9}},ExpressionUUID->"ff6eec83-61c4-436e-a37e-\
e01919610f17"]
}, Closed]],

Cell[CellGroupData[{

Cell["Option Handlers", "Subsection",ExpressionUUID->"93eafced-5a40-4814-b72b-3ab2a61bee23"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"notEcoEigenvaluesOpts", "::", "usage"}], "=", 
   "\"\<nmotEcoEigenvaluesOpts identifies non-options to \
EcoEigenvalues.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"notInvOpts", "::", "usage"}], "=", 
   "\"\<notInvOpts identifies non-options to Inv.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"notDInvOpts", "::", "usage"}], "=", 
   "\"\<notDInvOpts identifies non-options to DInv.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"notMaximizeInvOpts", "::", "usage"}], "=", 
   "\"\<notDInvOpts identifies non-options to MaximizeInv.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"notEcoEvoJacobianOpts", "::", "usage"}], "=", 
   "\"\<notEcoEvoJacobianOpts identifies non-options to \
EcoEvoJacobian.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"notEcoEvoEigenvaluesOpts", "::", "usage"}], "=", 
   "\"\<notEcoEvoEigenvaluesOpts identifies non-options to EcoEvoEigenvalues.\
\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"notEcoEvoSimOpts", "::", "usage"}], "=", 
   "\"\<notEcoEvoSimOpts identifies non-options to EcoEvoSim.\>\""}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.7127737932136183`*^9, 3.712773814324192*^9}},
 CellLabel->
  "In[327]:=",ExpressionUUID->"adfb8d61-a52b-4b9c-8848-e7e5bb25213c"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Private", "Section",ExpressionUUID->"13997123-8f35-4d7f-b66b-ab675c388f8f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}]], "Code",
 CellLabel->
  "In[334]:=",ExpressionUUID->"8a98817b-ba9b-4b7f-9beb-f3a1cdcf5595"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$EcoEvoVersion", "=", "\"\<0.9.4X (February 17, 2019)\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.729988668417531*^9, 3.7299887010869617`*^9}, {
   3.731103265427038*^9, 3.731103266749578*^9}, 3.731256009056179*^9, {
   3.731539566719577*^9, 3.7315395756387997`*^9}, {3.731676050296213*^9, 
   3.731676055045661*^9}, 3.731856308422261*^9, {3.7319745428360147`*^9, 
   3.731974542893551*^9}, 3.732016997935647*^9, 3.732111662987154*^9, {
   3.7322734540983667`*^9, 3.732273457138485*^9}, {3.732471002212038*^9, 
   3.7324710024724417`*^9}, {3.7325329754141693`*^9, 
   3.7325329754827623`*^9}, {3.732702784852496*^9, 3.732702784905992*^9}, {
   3.732919313129713*^9, 3.732919313219488*^9}, {3.733175329293168*^9, 
   3.733175344872663*^9}, {3.733215724572032*^9, 3.73321572470597*^9}, {
   3.7335248275158253`*^9, 3.73352482758409*^9}, {3.734132075132328*^9, 
   3.734132075197831*^9}, {3.735156293664208*^9, 3.735156299105571*^9}, {
   3.735295730054607*^9, 3.7352957436023827`*^9}, {3.735602177257141*^9, 
   3.735602180368617*^9}, {3.736158296286994*^9, 3.736158301867852*^9}, {
   3.7369747847325*^9, 3.736974785563854*^9}, 3.7370486958794317`*^9, {
   3.7428336487529993`*^9, 3.742833652581053*^9}, {3.74612247696695*^9, 
   3.746122484362652*^9}, 3.746128650681533*^9, {3.755133698172327*^9, 
   3.755133700200118*^9}, {3.755174921910667*^9, 3.755174926482285*^9}, 
   3.7552688291584873`*^9, {3.755439993323732*^9, 3.755439996407857*^9}, {
   3.7583850804445753`*^9, 3.7583850898280277`*^9}, 3.758688507837309*^9, 
   3.758715572265476*^9, {3.7593994165682373`*^9, 3.759399417357306*^9}, {
   3.75939967294774*^9, 
   3.75939967536417*^9}},ExpressionUUID->"dc46b9ba-4da1-4106-86c0-\
38a2eeedc8b0"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<EcoEvo Package Version \>\"", ",", "$EcoEvoVersion"}], "]"}],
    ";"}], "*)"}]], "Code",
 CellChangeTimes->{{3.7327026981906843`*^9, 3.73270274195399*^9}, 
   3.75871571724225*^9},ExpressionUUID->"50b9a7d6-fcbe-400b-a3d2-\
a8ddeaf9a891"],

Cell[CellGroupData[{

Cell["Default Options", "Subsection",ExpressionUUID->"5ee41da3-f36f-4b58-b38f-9b5d0121ab7a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"NDSolve", ",", 
    RowBox[{"MaxSteps", "\[Rule]", "Infinity"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"NIntegrate", ",", 
      RowBox[{"MaxRecursion", "\[Rule]", "30"}]}], "]"}], ";"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.688409470220842*^9, 3.688409470706532*^9}, {
   3.688409536315002*^9, 3.6884095366243896`*^9}, 3.6884670893312187`*^9, {
   3.691174982071932*^9, 3.6911749839680033`*^9}},
 CellLabel->
  "In[337]:=",ExpressionUUID->"afa3a8a2-50d9-48ba-b0dd-a17711b9ca1d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Misc Variables", "Subsection",ExpressionUUID->"667a31df-366f-4e97-93ce-292d8cb7b2db"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$invcount", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"$findecocyclesteps", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$findecoeqthingcount", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"$findevoeqthingcount", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"$ecoevoeqthingcount", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"$roundofftolerance", "=", 
   RowBox[{"10", "^", 
    RowBox[{"-", "10"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"$tmax", "=", 
   RowBox[{"10", "^", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modelloaded", "=", "False"}], ";"}]}], "Input",
 CellChangeTimes->{{3.709336417125695*^9, 3.709336420244362*^9}, {
  3.7165937395099573`*^9, 3.716593745586781*^9}, {3.722080520267847*^9, 
  3.722080523539605*^9}, {3.7220811871447067`*^9, 3.722081187312909*^9}},
 CellLabel->
  "In[338]:=",ExpressionUUID->"41dca06f-fdce-4e7e-80c5-68976249a568"]
}, Closed]],

Cell[CellGroupData[{

Cell["General Utilities", "Subsection",
 CellChangeTimes->{{3.694784683478237*^9, 
  3.694784685102195*^9}},ExpressionUUID->"c6e46a86-2613-4fa3-951d-\
1d7af9be1c7d"],

Cell[CellGroupData[{

Cell["RestrictedTo", "Subsubsection",
 CellChangeTimes->{{3.759072487563525*^9, 
  3.759072489096697*^9}},ExpressionUUID->"7ea36d9d-4923-448e-996c-\
a427b18ff50f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RestrictedTo", "[", 
   RowBox[{"x_", ",", "range_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xmin", ",", "xmax"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xmin", ",", "xmax"}], "}"}], "=", 
      RowBox[{"MinMax", "[", "range", "]"}]}], ";", "\n", "\t", 
     RowBox[{"Max", "[", 
      RowBox[{
       RowBox[{"Min", "[", 
        RowBox[{"x", ",", "xmax"}], "]"}], ",", "xmin"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Code",
 CellChangeTimes->{{3.7590725048473797`*^9, 3.7590725081971283`*^9}, 
   3.759076133235293*^9},ExpressionUUID->"93cd5175-3842-4c7d-8f0f-\
e1d3e9a3acf3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RestrictedTo", "[", 
    RowBox[{"x_", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"xmin_", "?", "NumericQ"}], ",", 
       RowBox[{"xmax_", "?", "NumericQ"}]}], "}"}]}], "]"}], ":=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"Min", "[", 
      RowBox[{"x", ",", "xmax"}], "]"}], ",", "xmin"}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.759066963910637*^9, 3.759067074940947*^9}, {
   3.75906711597552*^9, 3.7590671332911043`*^9}, 3.759072031071679*^9, {
   3.759072083426675*^9, 3.759072083698915*^9}, {3.759072149312306*^9, 
   3.759072167948217*^9}, {3.7590723552203207`*^9, 3.759072364728733*^9}, 
   3.759076137396195*^9},ExpressionUUID->"2ce58e88-7f69-4164-8e1c-\
6060e3bffe79"]
}, Closed]],

Cell[CellGroupData[{

Cell["VarSort", "Subsubsection",
 CellChangeTimes->{{3.732393367234774*^9, 
  3.7323933694466743`*^9}},ExpressionUUID->"bd57a215-d2d7-4f1f-b388-\
db849219b02a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"VarSort", "[", 
    RowBox[{
     RowBox[{"eq_", "?", "RuleListQ"}], ",", "vars_List"}], "]"}], ":=", 
   RowBox[{"SortBy", "[", 
    RowBox[{"eq", ",", 
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"vars", ",", 
        RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
        "]"}], "&"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.732393956404003*^9, 3.7323939732097816`*^9}, {
  3.7558761168989487`*^9, 
  3.755876119186849*^9}},ExpressionUUID->"d1c32cfb-75ec-4164-857c-\
33f360e7212c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"VarSort", "[", 
    RowBox[{
     RowBox[{"eqs_", "?", "RuleListListQ"}], ",", "vars_List"}], "]"}], ":=", 
   
   RowBox[{
    RowBox[{
     RowBox[{"VarSort", "[", 
      RowBox[{"#", ",", "vars"}], "]"}], "&"}], "/@", "eqs"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.7323939583728037`*^9, 3.732394018003927*^9}, 
   3.7323940634252377`*^9, {3.732394165323626*^9, 3.732394172143612*^9}},
 CellLabel->
  "In[347]:=",ExpressionUUID->"4094e350-e8bc-46d4-90eb-0ae9817d9611"]
}, Closed]],

Cell[CellGroupData[{

Cell["orderedComplement", "Subsubsection",
 CellChangeTimes->{{3.732273167164168*^9, 
  3.732273171121632*^9}},ExpressionUUID->"1a765064-2e50-496a-a347-\
95bc9daa64cf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"by", " ", 
      RowBox[{"Mr", ".", " ", "Wizard"}]}], " ", "<", 
     RowBox[{"https", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", "a"}],
        "/", "30434"}], "/", "6358"}], ">"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"orderedComplement", "[", 
     RowBox[{"all_List", ",", " ", "i__List"}], "]"}], " ", ":=", " ", "\n", 
    "  ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Join", " ", "@", " ", "##"}], "]"}], " ", "~", "Drop", "~", 
       " ", 
       RowBox[{"Length", "[", "#", "]"}]}], " ", "&"}], "[", 
     RowBox[{
      RowBox[{"Union", " ", "@", " ", "i"}], ",", " ", 
      RowBox[{"DeleteDuplicates", " ", "@", " ", "all"}]}], "]"}]}], 
   ";"}]}]], "Code",
 CellChangeTimes->{{3.732273173584607*^9, 3.7322731942506723`*^9}},
 CellLabel->
  "In[348]:=",ExpressionUUID->"0db0817b-8f3b-48f4-907e-18a2602a831b"]
}, Closed]],

Cell[CellGroupData[{

Cell["EqSort", "Subsubsection",
 CellChangeTimes->{{3.7322209102178507`*^9, 
  3.732220912867989*^9}},ExpressionUUID->"9a2e4391-0ae3-4d79-a550-\
f6d77d86f535"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EqSort", "[", 
    RowBox[{"x_", "?", "RuleListListQ"}], "]"}], ":=", 
   RowBox[{"SortBy", "[", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"Reverse", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Abs", "[", "#", "]"}], "<", "$MachineEpsilon"}], ",", 
            "0", ",", "1"}], "]"}], "&"}], ",", 
         RowBox[{"#", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}], 
       "]"}], "&"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7322209657956743`*^9, 3.732221005202965*^9}, 
   3.732468271760029*^9},
 CellLabel->
  "In[349]:=",ExpressionUUID->"f0823730-9e53-4777-9b1b-271f2865036e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EqSort", "[", 
    RowBox[{"x_", "?", "RuleListQ"}], "]"}], ":=", "x"}], ";"}]], "Code",
 CellChangeTimes->{{3.732468275148405*^9, 3.7324682928885107`*^9}},
 CellLabel->
  "In[350]:=",ExpressionUUID->"215a036b-3fe3-4736-8cca-c85b20742b5d"]
}, Closed]],

Cell[CellGroupData[{

Cell["RHS / LHS", "Subsubsection",
 CellChangeTimes->{{3.731805711068192*^9, 3.73180571128703*^9}, {
  3.758525021552339*^9, 
  3.758525022730298*^9}},ExpressionUUID->"ecb66b53-cfa6-4697-812e-\
bc076490c199"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RHS", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"_", "\[Equal]", "rhs_"}], "\[Rule]", "rhs"}], ")"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.731805713076478*^9, 3.7318057150564203`*^9}, {
  3.7318057853709087`*^9, 3.731805786130253*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"bf22d057-c12f-4931-b2c8-69786bd738fb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LHS", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"lhs_", "\[Equal]", "_"}], "\[Rule]", "lhs"}], ")"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.758525024562896*^9, 3.758525050026785*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"252e7ee7-e289-4af3-b6d8-906d36c8fa80"]
}, Closed]],

Cell[CellGroupData[{

Cell["ReplaceRHS / ReplaceLHS", "Subsubsection",
 CellChangeTimes->{{3.759236012006619*^9, 
  3.759236015331753*^9}},ExpressionUUID->"390595aa-b239-4e7f-948a-\
6de9ecc85885"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ReplaceRHS", "[", 
    RowBox[{"eqn_", ",", "rules_"}], "]"}], ":=", 
   RowBox[{"eqn", "//.", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"relop_", "[", 
       RowBox[{"lhs_", ",", "rhs_"}], "]"}], "\[RuleDelayed]", 
      RowBox[{"relop", "[", 
       RowBox[{"lhs", ",", 
        RowBox[{"rhs", "/.", 
         RowBox[{"Flatten", "@", "rules"}]}]}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReplaceLHS", "[", 
     RowBox[{"eqn_", ",", "rules_"}], "]"}], ":=", 
    RowBox[{"eqn", "//.", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"relop_", "[", 
        RowBox[{"lhs_", ",", "rhs_"}], "]"}], "\[RuleDelayed]", 
       RowBox[{"relop", "[", 
        RowBox[{
         RowBox[{"lhs", "/.", 
          RowBox[{"Flatten", "@", "rules"}]}], ",", "rhs"}], "]"}]}], 
      ")"}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ReplaceRHS", "[", 
    RowBox[{"eqns_List", ",", "rules_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"ReplaceRHS", "[", 
      RowBox[{"#", ",", "rules"}], "]"}], "&"}], "/@", "eqns"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ReplaceLHS", "[", 
    RowBox[{"eqns_List", ",", "rules_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"ReplaceLHS", "[", 
      RowBox[{"#", ",", "rules"}], "]"}], "&"}], "/@", "eqns"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.759235030871192*^9, 3.7592350419827414`*^9}, {
  3.7592351836776323`*^9, 3.759235190379067*^9}, {3.759235268857779*^9, 
  3.759235282552392*^9}, {3.759235680637436*^9, 3.759235699842043*^9}, {
  3.75923725574949*^9, 3.759237257521983*^9}, {3.7592377090685253`*^9, 
  3.75923778489093*^9}, {3.759237891768417*^9, 3.759237909748558*^9}, {
  3.759238572550476*^9, 3.759238608701079*^9}, {3.759241431681322*^9, 
  3.759241436207963*^9}},ExpressionUUID->"bff90b5f-d6cc-4c79-a690-\
3e395b4951d2"]
}, Closed]],

Cell[CellGroupData[{

Cell["Eq", "Subsubsection",
 CellChangeTimes->{{3.731534730247963*^9, 3.731534732817395*^9}, {
  3.731978628347039*^9, 
  3.731978628679408*^9}},ExpressionUUID->"b716ced8-7083-460e-b2cd-\
6e76022767b8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Eq", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"var_", "[", 
       RowBox[{"t", "+", "1"}], "]"}], "\[Rule]", 
      RowBox[{"var", "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"var_", "'"}], "[", "t", "]"}], "\[Rule]", "0"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.73153474117796*^9, 3.731534745507389*^9}, {
  3.731978630401441*^9, 3.7319787013789053`*^9}, {3.73197873142943*^9, 
  3.731978785056303*^9}, {3.7319791364502907`*^9, 3.731979139653769*^9}},
 CellLabel->
  "In[352]:=",ExpressionUUID->"c70a98a5-71c0-43e2-b3da-f549e766b58f"]
}, Closed]],

Cell[CellGroupData[{

Cell["ZeroLHS", "Subsubsection",
 CellChangeTimes->{{3.731534730247963*^9, 
  3.731534732817395*^9}},ExpressionUUID->"8fdf514b-2771-41f2-9378-\
68b9623b71c4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ZeroLHS", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"lhs_", "\[Equal]", "rhs_"}], "\[Rule]", 
     RowBox[{"0", "\[Equal]", "rhs"}]}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.73153474117796*^9, 3.731534745507389*^9}},
 CellLabel->
  "In[353]:=",ExpressionUUID->"6fc56c8b-1b14-41c5-986c-63380188136e"]
}, Closed]],

Cell[CellGroupData[{

Cell["ZeroVector", "Subsubsection",
 CellChangeTimes->{{3.731255177147348*^9, 3.731255178298004*^9}, {
  3.73125565986614*^9, 
  3.731255660056098*^9}},ExpressionUUID->"c59ae084-3047-4351-ae6f-\
8cac1c03d1ef"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ZeroVector", "[", "dim_Integer", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "dim"}], "}"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.731257951619882*^9, 3.731257965186193*^9}, {
  3.731284066812043*^9, 3.731284067451668*^9}, {3.731422825727209*^9, 
  3.731422829506637*^9}},
 CellLabel->
  "In[354]:=",ExpressionUUID->"9adf83d5-6284-4143-b839-f35e48123496"]
}, Closed]],

Cell[CellGroupData[{

Cell["SubscriptAdd", "Subsubsection",
 CellChangeTimes->{{3.728404058511156*^9, 
  3.7284040607261477`*^9}},ExpressionUUID->"7db0ec15-5a6c-4a24-b5f2-\
29ade1f98e51"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SubscriptAdd", "[", 
    RowBox[{"x_Subscript", ",", 
     RowBox[{"add_Integer:", "1"}]}], "]"}], ":=", 
   RowBox[{"x", "/.", 
    RowBox[{
     RowBox[{"Subscript", "[", 
      RowBox[{"var_", ",", "sub_"}], "]"}], "\[Rule]", 
     RowBox[{"Subscript", "[", 
      RowBox[{"var", ",", 
       RowBox[{"sub", "+", "add"}]}], "]"}]}]}]}], ";"}]], "Code",
 CellChangeTimes->{{3.735236152673773*^9, 3.735236169680941*^9}},
 CellLabel->
  "In[355]:=",ExpressionUUID->"8c8cf04d-8d5e-4215-9980-148846e28fe7"]
}, Closed]],

Cell[CellGroupData[{

Cell["DeleteSubscript", "Subsubsection",
 CellChangeTimes->{{3.735236066786107*^9, 
  3.735236084000763*^9}},ExpressionUUID->"02c78071-8521-4aa0-ac00-\
047b7300c66c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DeleteSubscript", "[", "x_Subscript", "]"}], ":=", 
   RowBox[{"x", "/.", 
    RowBox[{
     RowBox[{"Subscript", "[", 
      RowBox[{"var_", ",", "_"}], "]"}], "\[Rule]", "var"}]}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.735236072544808*^9, 3.735236120057292*^9}},
 CellLabel->
  "In[356]:=",ExpressionUUID->"9919f21a-07a1-43c7-8d53-fbe50178f96d"]
}, Closed]],

Cell[CellGroupData[{

Cell["ZeroSubscript", "Subsubsection",
 CellChangeTimes->{{3.735236133002781*^9, 
  3.735236136617321*^9}},ExpressionUUID->"87770f6b-4cf8-4888-a237-\
8a1c35bb9f73"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ZeroSubscript", "[", "x_Subscript", "]"}], ":=", 
   RowBox[{"x", "/.", 
    RowBox[{
     RowBox[{"Subscript", "[", 
      RowBox[{"var_", ",", "sub_"}], "]"}], "\[Rule]", 
     RowBox[{"Subscript", "[", 
      RowBox[{"var", ",", "0"}], "]"}]}]}]}], ";"}]], "Code",
 CellChangeTimes->{{3.735236072544808*^9, 3.7352361420086412`*^9}, {
  3.7352361767487173`*^9, 3.735236181091713*^9}},
 CellLabel->
  "In[357]:=",ExpressionUUID->"d9bcfd98-fd85-422f-90bb-699711afe270"]
}, Closed]],

Cell[CellGroupData[{

Cell["HighlightChanges", "Subsubsection",
 CellChangeTimes->{{3.728398720984153*^9, 
  3.728398724609352*^9}},ExpressionUUID->"ee2cd685-c5b9-463a-85ac-\
9986fc32a8a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"HighlightChanges", "[", "bool_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"bool", "\[Equal]", "True"}], ",", "\n", "\t", 
     RowBox[{"SetOptions", "[", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
       RowBox[{"{", "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{"CellProlog", "\[RuleDelayed]", 
          RowBox[{"(", "\[IndentingNewLine]", "\t\t", 
           RowBox[{
            RowBox[{"SelectionMove", "[", 
             RowBox[{
              RowBox[{"EvaluationCell", "[", "]"}], ",", "All", ",", 
              "GeneratedCell"}], "]"}], ";", "\[IndentingNewLine]", "\t\t", 
            RowBox[{"$oldoutput", "=", 
             RowBox[{
              RowBox[{"ToExpression", "@*", "First"}], "/@", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"NotebookRead", "[", 
                 RowBox[{"SelectedCells", "[", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
                   "\[Equal]", "\"\<Output\>\""}], "&"}]}], "]"}]}]}]}], 
           "\[IndentingNewLine]", "\t", ")"}]}], ",", "\[IndentingNewLine]", 
         "\t", 
         RowBox[{"CellEpilog", "\[RuleDelayed]", 
          RowBox[{"(", "\[IndentingNewLine]", "\t", 
           RowBox[{
            RowBox[{"SelectionMove", "[", 
             RowBox[{
              RowBox[{"EvaluationCell", "[", "]"}], ",", "All", ",", 
              "GeneratedCell"}], "]"}], ";", "\[IndentingNewLine]", "\t", 
            RowBox[{"$newoutput", "=", 
             RowBox[{
              RowBox[{"ToExpression", "@*", "First"}], "/@", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"NotebookRead", "[", 
                 RowBox[{"SelectedCells", "[", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
                   "\[Equal]", "\"\<Output\>\""}], "&"}]}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", "\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"$oldoutput", "/.", 
                 RowBox[{"x_Graphics", "\[RuleDelayed]", 
                  RowBox[{"ImageData", "@", 
                   RowBox[{"Rasterize", "[", 
                    RowBox[{"x", ",", "\"\<Image\>\""}], "]"}]}]}]}], ")"}], "=!=", 
               RowBox[{"(", 
                RowBox[{"$newoutput", "/.", 
                 RowBox[{"x_Graphics", "\[RuleDelayed]", 
                  RowBox[{"ImageData", "@", 
                   RowBox[{"Rasterize", "[", 
                    RowBox[{"x", ",", "\"\<Image\>\""}], "]"}]}]}]}], ")"}]}],
               ",", "\[IndentingNewLine]", "\t", 
              RowBox[{"Print", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Output change:\>\"", ",", "Red"}], "]"}], ",", 
                "\"\<\\nold=\>\"", ",", "$oldoutput"}], "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", "\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "$newoutput", "]"}], "\[NotEqual]", 
               "0"}], ",", 
              RowBox[{"SelectionMove", "[", 
               RowBox[{
                RowBox[{"EvaluationCell", "[", "]"}], ",", "After", ",", 
                "CellGroup", ",", "2"}], "]"}], ",", 
              RowBox[{"SelectionMove", "[", 
               RowBox[{
                RowBox[{"EvaluationCell", "[", "]"}], ",", "After", ",", 
                "Cell"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", "\t", 
           ")"}]}]}], "\[IndentingNewLine]", "\t", "}"}]}], "]"}], ",", "\n", 
     "\t", 
     RowBox[{"SetOptions", "[", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"CellProlog", "\[Rule]", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"CellEpilog", "\[Rule]", 
          RowBox[{"{", "}"}]}]}], "}"}]}], "]"}]}], "\n", "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.7283987271801977`*^9, 3.728398735329288*^9}, {
  3.72839877329758*^9, 3.728398858515293*^9}},
 CellLabel->
  "In[358]:=",ExpressionUUID->"c177f39e-fad6-4e59-86f8-cf71e5fa2db5"]
}, Closed]],

Cell[CellGroupData[{

Cell["ExtractColors", "Subsubsection",
 CellChangeTimes->{{3.728324944071022*^9, 
  3.7283249462047043`*^9}},ExpressionUUID->"698ddb06-bc17-4e89-b137-\
36f19bd15b13"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExtractColors", "[", "list_List", "]"}], ":=", 
  RowBox[{"Select", "[", 
   RowBox[{"list", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"ColorQ", "[", "#", "]"}], "||", 
      RowBox[{
       RowBox[{"Head", "[", "#", "]"}], "\[Equal]", "Opacity"}]}], "&"}]}], 
   "]"}]}]], "Code",
 CellLabel->
  "In[359]:=",ExpressionUUID->"3c2e4b68-5b74-4252-ae50-979af7516220"]
}, Closed]],

Cell[CellGroupData[{

Cell["axisFlip", "Subsubsection",
 CellChangeTimes->{{3.726748059343292*^9, 
  3.726748062873076*^9}},ExpressionUUID->"27319d79-58c6-4356-b3ca-\
963d1e6dd888"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"by", " ", 
      RowBox[{"Mr", ".", " ", "Wizard"}]}], " ", "<", 
     RowBox[{"https", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", "a"}],
        "/", "18669"}], "/", "6358"}], ">"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"axisFlip", "=", 
    RowBox[{
     RowBox[{"#", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"x_Line", "|", "x_GraphicsComplex"}], "\[RuleDelayed]", 
         RowBox[{"MapAt", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "~", "Reverse", "~", "2"}], "&"}], ",", "x", ",", 
           "1"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"x", ":", 
          RowBox[{"(", 
           RowBox[{"PlotRange", "\[Rule]", "_"}], ")"}]}], "\[RuleDelayed]", 
         RowBox[{"x", "~", "Reverse", "~", "2"}]}]}], "}"}]}], "&"}]}], 
   ";"}]}]], "Code",
 CellChangeTimes->{{3.726748064297176*^9, 3.726748064298506*^9}, {
  3.726752182207823*^9, 3.72675221581242*^9}},
 CellLabel->
  "In[360]:=",ExpressionUUID->"a77553c2-06bf-4db8-b6d3-1933b1614089"]
}, Closed]],

Cell[CellGroupData[{

Cell["FuncStyle", "Subsubsection",
 CellChangeTimes->{{3.722081199432775*^9, 
  3.72208120071259*^9}},ExpressionUUID->"971b1880-008f-425e-acf1-\
582a17fc1b1a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FuncStyle", "[", "func_String", "]"}], ":=", 
   RowBox[{"Style", "[", 
    RowBox[{"func", ",", "Underlined"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7218492982502823`*^9, 3.7218493398025084`*^9}},
 CellLabel->
  "In[361]:=",ExpressionUUID->"ea18ab6f-8f91-4c8c-b809-143b2a70aa10"]
}, Closed]],

Cell[CellGroupData[{

Cell["PrintCall", "Subsubsection",
 CellChangeTimes->{{3.718381762133388*^9, 3.718381763300006*^9}, {
  3.718381942591226*^9, 
  3.718381943407834*^9}},ExpressionUUID->"d23c2628-6ae5-4149-9f11-\
ad85267d1d15"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"based", " ", "on"}], " ", "<", 
      RowBox[{"https", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
         "a"}], "/", "158902"}], "/", "6358"}], ">", " ", 
      RowBox[{"by", " ", "Szabolcs", " ", "and"}], " ", "<", 
      RowBox[{"https", ":"}]}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", "a"}],
        "/", "161310"}], "/", "6358"}], ">", " ", 
     RowBox[{"by", " ", "Carl", " ", "Woll"}]}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"PrintCall", ",", "HoldAll"}], "]"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"PrintCall", "[", "expr_", "]"}], ":=", 
     RowBox[{"CellPrint", "@", 
      RowBox[{"ExpressionCell", "[", 
       RowBox[{
        RowBox[{"Defer", "[", "expr", "]"}], ",", 
        RowBox[{"CellMargins", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"60", ",", "Inherited"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Inherited", ",", "Inherited"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"CellGroupingRules", "\[Rule]", "\"\<GraphicsGrouping\>\""}], 
        ",", 
        RowBox[{"CellDingbat", "\[Rule]", "\"\<Running:\>\""}]}], "]"}]}]}], 
    "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"PrintCall", "[", "expr_", "]"}], ":=", 
      RowBox[{"Print", "[", 
       RowBox[{"Defer", "[", "expr", "]"}], "]"}]}], ";"}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"PrintCall", "[", 
      RowBox[{"expr_", ",", 
       RowBox[{"dingbat_:", "\"\<\>\""}]}], "]"}], ":=", 
     RowBox[{"CellPrint", "@", 
      RowBox[{"ExpressionCell", "[", 
       RowBox[{
        RowBox[{"Defer", "[", "expr", "]"}], ",", 
        RowBox[{"CellMargins", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"60", ",", "Inherited"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Inherited", ",", "Inherited"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"CellGroupingRules", "\[Rule]", "\"\<GraphicsGrouping\>\""}], 
        ",", 
        RowBox[{"CellDingbat", "\[Rule]", "dingbat"}]}], "]"}]}]}], "*)"}], 
   "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"PrintCall", "[", 
       RowBox[{"expr_", ",", 
        RowBox[{"dingbat_:", "\"\<\>\""}]}], "]"}], ":=", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"expr2", "=", 
          RowBox[{"Defer", "[", 
           RowBox[{"expr", "/.", 
            RowBox[{
             RowBox[{"Sequence", "[", "]"}], "\[Rule]", "Null"}]}], "]"}]}], 
         "}"}], ",", "\[IndentingNewLine]", "\t", 
        RowBox[{"CellPrint", "@", 
         RowBox[{"ExpressionCell", "[", 
          RowBox[{
           RowBox[{"Defer", "[", "expr2", "]"}], ",", 
           RowBox[{"CellMargins", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"60", ",", "Inherited"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Inherited", ",", "Inherited"}], "}"}]}], "}"}]}], ",", 
           RowBox[{
           "CellGroupingRules", "\[Rule]", "\"\<GraphicsGrouping\>\""}], ",", 
           
           RowBox[{"CellDingbat", "\[Rule]", "dingbat"}]}], "]"}]}]}], "\n", 
       "]"}]}], ";"}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"PrintCall", "[", 
      RowBox[{"expr_", ",", 
       RowBox[{"dingbat_:", "\"\<\>\""}]}], "]"}], ":=", "\n", 
     RowBox[{"CellPrint", "@", 
      RowBox[{"ExpressionCell", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Defer", "[", "expr", "]"}], "/.", 
         RowBox[{
          RowBox[{"Sequence", "[", "]"}], "\[Rule]", "Nothing"}]}], ",", 
        RowBox[{"CellMargins", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"60", ",", "Inherited"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Inherited", ",", "Inherited"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"CellGroupingRules", "\[Rule]", "\"\<GraphicsGrouping\>\""}], 
        ",", 
        RowBox[{"CellDingbat", "\[Rule]", "dingbat"}]}], "]"}]}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"PrintCall", "[", 
      RowBox[{"expr_", ",", 
       RowBox[{"dingbat_:", "\"\<\>\""}]}], "]"}], ":=", 
     RowBox[{"CellPrint", "@", 
      RowBox[{"ExpressionCell", "[", 
       RowBox[{
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"Unevaluated", "@", 
           RowBox[{"Defer", "[", "expr", "]"}]}], ",", 
          RowBox[{
           RowBox[{"Verbatim", "[", "Sequence", "]"}], "[", "]"}], ",", 
          "\[Infinity]"}], "]"}], ",", "\n", 
        RowBox[{"CellBaseline", "\[Rule]", 
         RowBox[{"Scaled", "[", "0.005", "]"}]}], ",", 
        RowBox[{"CellMargins", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"66", ",", "Inherited"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Inherited", ",", "Inherited"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"CellGroupingRules", "\[Rule]", "\"\<GraphicsGrouping\>\""}], 
        ",", 
        RowBox[{"CellDingbat", "\[Rule]", "dingbat"}]}], "]"}]}]}], "\n", 
    "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"PrintCall", "[", "expr_", "]"}], ":=", 
      RowBox[{"Print", "@", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{"Unevaluated", "@", 
          RowBox[{"Defer", "[", "expr", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Verbatim", "[", "Sequence", "]"}], "[", "]"}], ",", 
         "\[Infinity]"}], "]"}]}]}], ";"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"PrintCall", "[", 
      RowBox[{"expr_", ",", 
       RowBox[{"dingbat_:", "\"\<\>\""}]}], "]"}], ":=", 
     RowBox[{"Print", "[", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"Unevaluated", "@", 
         RowBox[{"Defer", "[", "expr", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Verbatim", "[", "Sequence", "]"}], "[", "]"}], ",", 
        "\[Infinity]"}], "]"}], "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.7183826052939653`*^9, 3.718382607540237*^9}, {
   3.718382708614644*^9, 3.718382735345913*^9}, {3.718382776238965*^9, 
   3.718382795629342*^9}, {3.7183843962398987`*^9, 3.718384422131997*^9}, 
   3.7183845746785917`*^9, {3.7183846131347513`*^9, 3.718384647907742*^9}, {
   3.71838467953401*^9, 3.718384680758685*^9}, {3.718384783947357*^9, 
   3.718384786166733*^9}, {3.7183848318241177`*^9, 3.7183848509052973`*^9}, {
   3.71838493982096*^9, 3.7183849433457727`*^9}, {3.718385002817374*^9, 
   3.718385010657423*^9}, {3.718385059128499*^9, 3.718385070065317*^9}, {
   3.718385629637906*^9, 3.718385661690427*^9}, {3.7186658198449907`*^9, 
   3.7186658359107523`*^9}, {3.7186659321344223`*^9, 3.718665936941848*^9}, {
   3.718665975678014*^9, 3.718666006302705*^9}, {3.718666109574744*^9, 
   3.718666123518352*^9}, {3.718666195821443*^9, 3.718666200124115*^9}, {
   3.719411285776628*^9, 3.719411317479817*^9}, 3.719411613506607*^9, {
   3.719411672375764*^9, 3.7194116731342573`*^9}, {3.719418456630423*^9, 
   3.719418465776979*^9}, {3.7214055202793922`*^9, 3.721405520904112*^9}, {
   3.721406010600062*^9, 3.7214060179791594`*^9}, 3.721406957948864*^9, {
   3.721407027737248*^9, 3.721407031638997*^9}, {3.7214072269145308`*^9, 
   3.721407231741166*^9}, {3.721407399235643*^9, 3.721407422905711*^9}, {
   3.721407574599449*^9, 3.72140757481179*^9}, {3.721407605782576*^9, 
   3.721407630839576*^9}, {3.721407765485879*^9, 3.7214077921098022`*^9}, {
   3.7214080275771503`*^9, 3.721408044640727*^9}, {3.721408185573389*^9, 
   3.721408216850026*^9}, {3.721408348509433*^9, 3.721408441659919*^9}, {
   3.721408482142061*^9, 3.721408512964429*^9}, {3.721408585641458*^9, 
   3.7214085964682627`*^9}, {3.721409473223604*^9, 3.7214095600744953`*^9}, {
   3.7241035183307123`*^9, 3.724103547190987*^9}, {3.724103589283926*^9, 
   3.724103613575808*^9}, 3.724634925986149*^9},
 CellLabel->
  "In[362]:=",ExpressionUUID->"d173eb45-7ac8-42a4-8d12-ba2f5adbafc8"]
}, Closed]],

Cell[CellGroupData[{

Cell["Msg", "Subsubsection",
 CellChangeTimes->{{3.69965482509157*^9, 
  3.699654825779524*^9}},ExpressionUUID->"1e83c51f-c3ff-4530-a1aa-\
427f0ff056be"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Msg", "[", "msgs__", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"$Messages", "=", 
       RowBox[{"Streams", "[", "\"\<stdout\>\"", "]"}]}], "}"}], ",", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"ListQ", "@", "$MessageList"}]}], ",", 
        RowBox[{"$MessageList", "=", 
         RowBox[{"{", "}"}]}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"Message", "[", "msgs", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"Msg", ",", "HoldAll"}], "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.69963422854467*^9, 3.6996343014960012`*^9}, {
  3.699634332455061*^9, 3.699634459980874*^9}, {3.699640297871749*^9, 
  3.69964031207017*^9}, {3.699654829770954*^9, 3.6996548312577763`*^9}, {
  3.755876224428043*^9, 
  3.7558762295476027`*^9}},ExpressionUUID->"359c9812-70ad-464b-9b12-\
811792dd19a6"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
ColorData[\[OpenCurlyDoubleQuote]EEReds\[CloseCurlyDoubleQuote]] / ColorData[\
\[OpenCurlyDoubleQuote]EEGreens\[CloseCurlyDoubleQuote]] / ColorData[\
\[OpenCurlyDoubleQuote]EEBlues\[CloseCurlyDoubleQuote]]\
\>", "Subsubsection",
 CellChangeTimes->{{3.6946898610623293`*^9, 3.694689862702632*^9}, {
  3.6947759789416*^9, 3.69477600029881*^9}, {3.727619469690217*^9, 
  3.727619472386331*^9}},ExpressionUUID->"cdb4e017-fa27-4371-8b6d-\
fe84f9aa1d27"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ColorData", "[", "1", "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"load", " ", "ColorData"}], " ", "*)"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"DataPaclets`ColorDataDump`colorSchemes", ",", "\n", "\t", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<EEReds\>\"", ",", "\"\<\>\"", ",", 
          RowBox[{"{", "}"}]}], "}"}], ",", 
        RowBox[{"{", "\"\<Gradients\>\"", "}"}], ",", "1", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0.8", ",", "0.4"}], "]"}], ",", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0.5", ",", "0"}], "]"}], ",", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0.5"}], "]"}], ",", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"0.5", ",", "0", ",", "0.25"}], "]"}]}], "}"}], ",", 
        "\"\<\>\""}], "}"}]}], "]"}], ";", "\n", 
    RowBox[{"AppendTo", "[", 
     RowBox[{
     "DataPaclets`ColorDataDump`colorSchemeNames", ",", "\"\<EEReds\>\""}], 
     "]"}], ";", "\n", "\n", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"DataPaclets`ColorDataDump`colorSchemes", ",", "\n", "\t", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<EEGreens\>\"", ",", "\"\<\>\"", ",", 
          RowBox[{"{", "}"}]}], "}"}], ",", 
        RowBox[{"{", "\"\<Gradients\>\"", "}"}], ",", "1", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{"0.8", ",", "1", ",", "0.4"}], "]"}], ",", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"0.5", ",", "1", ",", "0"}], "]"}], ",", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], ",", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0.4"}], "]"}], ",", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "0.5", ",", "0.25"}], "]"}]}], "}"}], ",", 
        "\"\<\>\""}], "}"}]}], "]"}], ";", "\n", 
    RowBox[{"AppendTo", "[", 
     RowBox[{
     "DataPaclets`ColorDataDump`colorSchemeNames", ",", "\"\<EEGreens\>\""}], 
     "]"}], ";", "\n", "\n", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"DataPaclets`ColorDataDump`colorSchemes", ",", "\n", "\t", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<EEBlues\>\"", ",", "\"\<\>\"", ",", 
          RowBox[{"{", "}"}]}], "}"}], ",", 
        RowBox[{"{", "\"\<Gradients\>\"", "}"}], ",", "1", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{"0.4", ",", "0.8", ",", "1"}], "]"}], ",", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "0.5", ",", "1"}], "]"}], ",", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"0.4", ",", "0", ",", "1"}], "]"}], ",", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"0.25", ",", "0", ",", "0.5"}], "]"}]}], "}"}], ",", 
        "\"\<\>\""}], "}"}]}], "]"}], ";", "\n", 
    RowBox[{"AppendTo", "[", 
     RowBox[{
     "DataPaclets`ColorDataDump`colorSchemeNames", ",", "\"\<EEBlues\>\""}], 
     "]"}], ";"}], "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"DataPaclets`ColorDataDump`colorSchemes", ",", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<EEReds\>\"", ",", "\"\<\>\"", ",", 
        RowBox[{"{", "}"}]}], "}"}], ",", 
      RowBox[{"{", "\"\<Gradients\>\"", "}"}], ",", "1", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorConvert", "[", 
          RowBox[{"#", ",", "\"\<RGB\>\""}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Hue", "[", 
           RowBox[{"0.083", ",", "0.4", ",", "1"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.083", ",", "0.7", ",", "1"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.083", ",", "1", ",", "1"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0", ",", "1", ",", "1"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.917", ",", "1", ",", "1"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.917", ",", "1", ",", "0.7"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.917", ",", "1", ",", "0.4"}], "]"}]}], "}"}]}], "]"}], 
      "\n", "\t", ",", "\"\<\>\""}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AppendTo", "[", 
    RowBox[{
    "DataPaclets`ColorDataDump`colorSchemeNames", ",", "\"\<EEReds\>\""}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"DataPaclets`ColorDataDump`colorSchemes", ",", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<EEGreens\>\"", ",", "\"\<\>\"", ",", 
        RowBox[{"{", "}"}]}], "}"}], ",", 
      RowBox[{"{", "\"\<Gradients\>\"", "}"}], ",", "1", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorConvert", "[", 
          RowBox[{"#", ",", "\"\<RGB\>\""}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Hue", "[", 
           RowBox[{"0.25", ",", "0.4", ",", "1"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.25", ",", "0.7", ",", "1"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.25", ",", "1", ",", "1"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.333", ",", "1", ",", "1"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.417", ",", "1", ",", "1"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.417", ",", "1", ",", "0.7"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.417", ",", "1", ",", "0.4"}], "]"}]}], "}"}]}], "]"}], 
      "\n", "\t", ",", "\"\<\>\""}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AppendTo", "[", 
    RowBox[{
    "DataPaclets`ColorDataDump`colorSchemeNames", ",", "\"\<EEGreens\>\""}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"DataPaclets`ColorDataDump`colorSchemes", ",", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<EEBlues\>\"", ",", "\"\<\>\"", ",", 
        RowBox[{"{", "}"}]}], "}"}], ",", 
      RowBox[{"{", "\"\<Gradients\>\"", "}"}], ",", "1", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorConvert", "[", 
          RowBox[{"#", ",", "\"\<RGB\>\""}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Hue", "[", 
           RowBox[{"0.567", ",", "0.4", ",", "1"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.583", ",", "0.7", ",", "1"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.583", ",", "1", ",", "1"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.667", ",", "1", ",", "1"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.75", ",", "1", ",", "1"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.75", ",", "1", ",", "0.7"}], "]"}], ",", 
          RowBox[{"Hue", "[", 
           RowBox[{"0.75", ",", "1", ",", "0.4"}], "]"}]}], "}"}]}], "]"}], 
      "\n", "\t", ",", "\"\<\>\""}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AppendTo", "[", 
    RowBox[{
    "DataPaclets`ColorDataDump`colorSchemeNames", ",", "\"\<EEBlues\>\""}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"DataPaclets`ColorDataDump`colorSchemes", ",", "\n", "\t", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<EEReds\>\"", ",", "\"\<\>\"", ",", 
          RowBox[{"{", "}"}]}], "}"}], ",", 
        RowBox[{"{", "\"\<Gradients\>\"", "}"}], ",", "1", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", "\n", "\t", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ColorConvert", "[", 
            RowBox[{"#", ",", "\"\<RGB\>\""}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Hue", "[", 
             RowBox[{"0.1", ",", "0.5", ",", "1"}], "]"}], ",", 
            RowBox[{"Hue", "[", 
             RowBox[{"0.1", ",", "0.7", ",", "1"}], "]"}], ",", 
            RowBox[{"Hue", "[", 
             RowBox[{"0", ",", "0.7", ",", "1"}], "]"}], ",", 
            RowBox[{"Hue", "[", 
             RowBox[{"0", ",", "1", ",", "1"}], "]"}], ",", 
            RowBox[{"Hue", "[", 
             RowBox[{"0", ",", "1", ",", "0.7"}], "]"}], ",", 
            RowBox[{"Hue", "[", 
             RowBox[{"0.9", ",", "1", ",", "0.7"}], "]"}], ",", 
            RowBox[{"Hue", "[", 
             RowBox[{"0.9", ",", "1", ",", "0.5"}], "]"}]}], "}"}]}], "]"}], 
        "\n", "\t", ",", "\"\<\>\""}], "}"}]}], "]"}], ";", "\n", 
    RowBox[{"AppendTo", "[", 
     RowBox[{
     "DataPaclets`ColorDataDump`colorSchemeNames", ",", "\"\<EEReds\>\""}], 
     "]"}], ";", "\n", "\n", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"DataPaclets`ColorDataDump`colorSchemes", ",", "\n", "\t", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<EEGreens\>\"", ",", "\"\<\>\"", ",", 
          RowBox[{"{", "}"}]}], "}"}], ",", 
        RowBox[{"{", "\"\<Gradients\>\"", "}"}], ",", "1", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", "\n", "\t", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ColorConvert", "[", 
            RowBox[{"#", ",", "\"\<RGB\>\""}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Hue", "[", 
             RowBox[{"0.233", ",", "0.5", ",", "1"}], "]"}], ",", 
            RowBox[{"Hue", "[", 
             RowBox[{"0.233", ",", "0.7", ",", "1"}], "]"}], ",", 
            RowBox[{"Hue", "[", 
             RowBox[{"0.333", ",", "0.8", ",", "1"}], "]"}], ",", 
            RowBox[{"Hue", "[", 
             RowBox[{"0.333", ",", "1", ",", "1"}], "]"}], ",", 
            RowBox[{"Hue", "[", 
             RowBox[{"0.333", ",", "1", ",", "0.7"}], "]"}], ",", 
            RowBox[{"Hue", "[", 
             RowBox[{"0.433", ",", "1", ",", "0.7"}], "]"}], ",", 
            RowBox[{"Hue", "[", 
             RowBox[{"0.433", ",", "1", ",", "0.5"}], "]"}]}], "}"}]}], "]"}],
         "\n", "\t", ",", "\"\<\>\""}], "}"}]}], "]"}], ";", "\n", 
    RowBox[{"AppendTo", "[", 
     RowBox[{
     "DataPaclets`ColorDataDump`colorSchemeNames", ",", "\"\<EEGreens\>\""}], 
     "]"}], ";", "\n", "\n", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"DataPaclets`ColorDataDump`colorSchemes", ",", "\n", "\t", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<EEBlues\>\"", ",", "\"\<\>\"", ",", 
          RowBox[{"{", "}"}]}], "}"}], ",", 
        RowBox[{"{", "\"\<Gradients\>\"", "}"}], ",", "1", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", "\n", "\t", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ColorConvert", "[", 
            RowBox[{"#", ",", "\"\<RGB\>\""}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Hue", "[", 
             RowBox[{"0.567", ",", "0.5", ",", "1"}], "]"}], ",", 
            RowBox[{"Hue", "[", 
             RowBox[{"0.567", ",", "0.7", ",", "1"}], "]"}], ",", 
            RowBox[{"Hue", "[", 
             RowBox[{"0.667", ",", "0.6", ",", "1"}], "]"}], ",", 
            RowBox[{"Hue", "[", 
             RowBox[{"0.667", ",", "1", ",", "1"}], "]"}], ",", 
            RowBox[{"Hue", "[", 
             RowBox[{"0.667", ",", "1", ",", "0.7"}], "]"}], ",", 
            RowBox[{"Hue", "[", 
             RowBox[{"0.767", ",", "1", ",", "0.6"}], "]"}], ",", 
            RowBox[{"Hue", "[", 
             RowBox[{"0.767", ",", "1", ",", "0.5"}], "]"}]}], "}"}]}], "]"}],
         "\n", "\t", ",", "\"\<\>\""}], "}"}]}], "]"}], ";", "\n", 
    RowBox[{"AppendTo", "[", 
     RowBox[{
     "DataPaclets`ColorDataDump`colorSchemeNames", ",", "\"\<EEBlues\>\""}], 
     "]"}], ";"}], "*)"}]}]}], "Code",
 CellChangeTimes->{{3.69476948327812*^9, 3.694769483279935*^9}, 
   3.694769872484418*^9, {3.6947700379578123`*^9, 3.694770089005789*^9}, {
   3.6947701292881947`*^9, 3.694770130494711*^9}, 3.6947708501647863`*^9, {
   3.694770889052162*^9, 3.694770951596655*^9}, {3.6947737536308804`*^9, 
   3.694773772541191*^9}, {3.694775268869513*^9, 3.694775311956152*^9}, {
   3.6947753511894007`*^9, 3.694775372205158*^9}, {3.694779891745264*^9, 
   3.694779923839469*^9}, {3.6947831052246437`*^9, 3.694783140879889*^9}, {
   3.694789951773131*^9, 3.694789954097926*^9}, {3.694790038493805*^9, 
   3.69479005396327*^9}, {3.694790249205636*^9, 3.694790251450923*^9}, {
   3.694790320493782*^9, 3.6947903257968063`*^9}, {3.69479046745709*^9, 
   3.69479047041265*^9}, {3.694790523174727*^9, 3.694790537557352*^9}, {
   3.694790598910811*^9, 3.694790603560039*^9}, {3.6947906545027122`*^9, 
   3.694790658133209*^9}, {3.6947907269879713`*^9, 3.6947907723466587`*^9}, {
   3.69479081487438*^9, 3.69479081996202*^9}, {3.6947908692180653`*^9, 
   3.694790876471733*^9}, {3.694790967825206*^9, 3.6947909768873987`*^9}, {
   3.694791074609494*^9, 3.694791105291287*^9}, {3.694791157579941*^9, 
   3.694791270384616*^9}, {3.694791353597101*^9, 3.6947913701468363`*^9}, {
   3.6947914169903603`*^9, 3.6947914524817657`*^9}, {3.694791487628923*^9, 
   3.694791498276554*^9}, {3.694791592156805*^9, 3.694791611067457*^9}, {
   3.694791796957844*^9, 3.69479180322029*^9}, {3.694792861975728*^9, 
   3.6947928720687227`*^9}, {3.694792904076208*^9, 3.694792939975664*^9}, {
   3.694793518112763*^9, 3.694793546788571*^9}, {3.6947936072932*^9, 
   3.694793631989109*^9}, 3.694793663232052*^9, {3.694793731586725*^9, 
   3.69479375491432*^9}, {3.694793820589184*^9, 3.694793839746401*^9}, {
   3.694793894713262*^9, 3.694794065928474*^9}, {3.694794163785286*^9, 
   3.694794192958207*^9}, {3.694794311986534*^9, 3.694794354555914*^9}, {
   3.694794654254499*^9, 3.6947946902157917`*^9}, {3.694794748880672*^9, 
   3.694794809418996*^9}, {3.694794946356922*^9, 3.69479500590238*^9}, {
   3.694795087491493*^9, 3.6947951839945097`*^9}, {3.727619451904771*^9, 
   3.727619502237753*^9}},
 CellLabel->
  "In[366]:=",ExpressionUUID->"0eae6244-9806-46cf-b937-416d2ab5c463"]
}, Closed]],

Cell[CellGroupData[{

Cell["RuleList", "Subsubsection",
 CellDingbat->"\[Wolf]",
 CellChangeTimes->{{3.6938656423257732`*^9, 3.693865645125914*^9}, 
   3.7102510477740097`*^9},ExpressionUUID->"fb2cc3ac-a5e5-4688-a8dd-\
a631879d742e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleList", "[", 
    RowBox[{"var_Symbol", ",", "n_", ",", "val_"}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Subscript", "[", 
        RowBox[{"var", ",", "i"}], "]"}], "\[Rule]", "val"}], "/.", 
      RowBox[{"\[IGrave]", "\[Rule]", "i"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.693865693696254*^9, 3.693865701445835*^9}, 
   3.694034366907428*^9, {3.694035018271508*^9, 3.694035020524955*^9}, {
   3.69403511216334*^9, 3.694035113645142*^9}, {3.6940357908675137`*^9, 
   3.694035840010625*^9}, 3.694036059321824*^9, {3.694106674414954*^9, 
   3.694106676859124*^9}, {3.694106718518457*^9, 3.694106719532486*^9}, {
   3.6947850663057528`*^9, 3.6947850681920958`*^9}, 3.694785203082122*^9, 
   3.694786063752236*^9, {3.704726766142116*^9, 3.704726768532481*^9}, {
   3.704726806522924*^9, 3.704726817070753*^9}, {3.704726907191565*^9, 
   3.704726930156382*^9}, 3.7047275896573677`*^9, 3.7102510477923937`*^9},
 CellLabel->
  "In[373]:=",ExpressionUUID->"992ff0b0-dbe7-4121-9034-97ce2768ec5d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleList", "[", 
    RowBox[{"var_Symbol", ",", "n_", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"min_", "?", "NumericQ"}], ",", 
       RowBox[{"max_", "?", "NumericQ"}]}], "}"}]}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"var", ",", "i"}], "]"}], "\[Rule]", 
      RowBox[{"min", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"max", "-", "min"}], ")"}], "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"i", "-", "1"}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"n", "-", "1"}], ")"}]}]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.693865663870858*^9, 3.693865682750389*^9}, {
   3.694035023407735*^9, 3.694035025413265*^9}, {3.694035116086833*^9, 
   3.69403511718935*^9}, {3.694106680401587*^9, 3.694106714849468*^9}, 
   3.6947860659325047`*^9, {3.7086572439537973`*^9, 3.708657245583734*^9}, 
   3.710251047805561*^9},
 CellLabel->
  "In[374]:=",ExpressionUUID->"5e4d62e3-e565-425f-ba30-57f5ce679611"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleList", "[", 
    RowBox[{"vars_List", ",", "n_", ",", "vals_List"}], "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Subscript", "[", 
        RowBox[{
         RowBox[{
         "vars", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], ",", 
         "i"}], "]"}], "\[Rule]", 
       RowBox[{
       "vals", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}], ",", 
      
      RowBox[{"{", 
       RowBox[{"i", ",", "n"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"Length", "[", "vars", "]"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.69403491189785*^9, 3.694034934590578*^9}, {
   3.694035107196002*^9, 3.694035183777555*^9}, {3.694035215675296*^9, 
   3.694035216649177*^9}, {3.694035265885208*^9, 3.694035374463439*^9}, 
   3.694035648929644*^9, {3.69403607741477*^9, 3.694036102168415*^9}, {
   3.694106688932398*^9, 3.694106723944767*^9}, {3.6947860689732857`*^9, 
   3.694786076140802*^9}, 3.694786123607205*^9, 3.710251047817553*^9},
 CellLabel->
  "In[375]:=",ExpressionUUID->"dcf287c9-5db9-4554-b09c-2e1408d9ccf5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RuleList", "[", 
   RowBox[{"var_Symbol", ",", "ns_List", ",", "val_"}], "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"Thread", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"var", ",", "i"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Times", "[", 
         RowBox[{"Sequence", "@@", "ns"}], "]"}]}], "}"}]}], "]"}], "\[Rule]",
     "\n", "\t\t", 
    RowBox[{"Table", "[", 
     RowBox[{"val", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Times", "[", 
         RowBox[{"Sequence", "@@", "ns"}], "]"}]}], "}"}]}], "]"}]}], "\n", 
   "\t", "]"}]}]], "Code",
 CellChangeTimes->{{3.694107049684195*^9, 3.694107095288486*^9}, {
   3.694107139945345*^9, 3.6941072728285713`*^9}, {3.6941073628776283`*^9, 
   3.694107377242366*^9}, {3.694107407969146*^9, 3.694107418729557*^9}, {
   3.694107844715856*^9, 3.6941079609661913`*^9}, 3.7102510478295603`*^9},
 CellLabel->
  "In[376]:=",ExpressionUUID->"c143ed4c-4779-4522-b4f1-72a58cea7a18"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RuleList", "[", 
   RowBox[{"vars_List", ",", "ns_List", ",", "vals_List"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", "min", ",", "max"}], "}"}], ",", "\n", "\t", 
    RowBox[{"Thread", "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"#", ",", "i"}], "]"}], "&"}], ",", "vars"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Times", "[", 
            RowBox[{"Sequence", "@@", "ns"}], "]"}]}], "}"}]}], "]"}], "]"}], 
      "\n", "\t\t", "\[Rule]", "\n", "\t\t", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Outer", "[", 
        RowBox[{"List", ",", 
         RowBox[{"Sequence", "@@", 
          RowBox[{"Table", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"n", "=", 
              RowBox[{
              "ns", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}], 
             ";", "\n", "\t\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"ListQ", "[", 
                RowBox[{
                "vals", "\[LeftDoubleBracket]", "j", 
                 "\[RightDoubleBracket]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"min", ",", "max"}], "}"}], "=", 
                RowBox[{
                "vals", "\[LeftDoubleBracket]", "j", 
                 "\[RightDoubleBracket]"}]}], ",", 
               RowBox[{"min", "=", 
                RowBox[{"max", "=", 
                 RowBox[{
                 "vals", "\[LeftDoubleBracket]", "j", 
                  "\[RightDoubleBracket]"}]}]}]}], "]"}], ";", "\n", "\t\t\t", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"min", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"max", "-", "min"}], ")"}], "*", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"i", "-", "1"}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"n", "-", "1"}], ")"}]}]}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], "\n", "\t\t", ",", 
            
            RowBox[{"{", 
             RowBox[{"j", ",", 
              RowBox[{"Length", "[", "ns", "]"}]}], "}"}]}], "]"}]}]}], "]"}],
        "]"}]}], "\n", "\t\t", "]"}]}], "\n", "\t", "]"}]}]], "Code",
 CellChangeTimes->{{3.694107049684195*^9, 3.694107095288486*^9}, {
   3.694107139945345*^9, 3.6941072728285713`*^9}, {3.6941073628776283`*^9, 
   3.694107377242366*^9}, {3.694107407969146*^9, 3.694107418729557*^9}, {
   3.694107844715856*^9, 3.6941079609661913`*^9}, {3.694108007191203*^9, 
   3.6941080103733587`*^9}, {3.69410837392626*^9, 3.6941083754056597`*^9}, {
   3.694109125917302*^9, 3.6941095427349873`*^9}, {3.69410960763441*^9, 
   3.694109830875614*^9}, {3.694109892455859*^9, 3.694109916492159*^9}, {
   3.694109986393936*^9, 3.694109993342967*^9}, {3.69411003005512*^9, 
   3.694110088213925*^9}, {3.694785060048889*^9, 3.694785061266922*^9}, 
   3.7102510478425207`*^9},
 CellLabel->
  "In[377]:=",ExpressionUUID->"25ff61b2-78cd-4f65-a8d7-2ad9d2ce6cb6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"RuleList", ",", "HoldAll"}], "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.694034970206361*^9, 3.694034981965995*^9}, {
   3.694035101422332*^9, 3.6940351038192873`*^9}, 3.694784643385989*^9, {
   3.694785047041531*^9, 3.6947850484080276`*^9}, 3.71025104785432*^9},
 CellLabel->
  "In[378]:=",ExpressionUUID->"5188a559-6f23-4b20-935d-2fa006b4e2ef"]
}, Closed]],

Cell[CellGroupData[{

Cell["ClearCache", "Subsubsection",
 CellDingbat->"\[Wolf]",
 CellChangeTimes->{{3.69123082807414*^9, 
  3.691230830120575*^9}},ExpressionUUID->"f8b9c8aa-f6cd-4c19-9378-\
ebffd3f80170"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"mostly", " ", "by", " ", "Simon"}], " ", "-", " ", "see"}], 
     " ", "<", 
     RowBox[{"http", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"stackoverflow", ".", "com"}], "/", "questions"}], "/", 
        "5086749"}], "/", "mathematica"}], "-", "how", "-", "to", "-", 
      "clear", "-", "the", "-", "cache", "-", "for", "-", "a", "-", "symbol", 
      "-", "i", "-", "e", "-", "unset", "-", "pattern", "-", "free", "-", 
      "downva"}], ">"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ClearCache", "[", "f_", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"DownValues", "[", "f", "]"}], "=", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"DownValues", "[", "f", "]"}], ",", 
          RowBox[{"_", "?", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"FreeQ", "[", 
              RowBox[{
               RowBox[{"First", "[", "#", "]"}], ",", "Pattern"}], "]"}], 
             "&"}], ")"}]}]}], "]"}]}], ";"}], ")"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "make", " ", "work", " ", "on", " ", "multiple", " ", "arguments"}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ClearCache", "[", "f__", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"ClearCache", ",", 
         RowBox[{"{", "f", "}"}]}], "]"}], ";"}], ")"}]}], ";"}]}]}]], "Code",\

 CellChangeTimes->{{3.69123083124872*^9, 3.691230856633144*^9}, 
   3.691232443029517*^9, {3.691232987813581*^9, 3.691233072197899*^9}, {
   3.6912601117106457`*^9, 3.6912601134761333`*^9}},
 CellLabel->
  "In[379]:=",ExpressionUUID->"5fc760c5-8bff-4d54-ab52-4b2c0cbcf97b"]
}, Closed]],

Cell[CellGroupData[{

Cell["IFFQ", "Subsubsection",
 CellDingbat->"\[Wolf]",
 CellChangeTimes->{{3.690410140909267*^9, 3.690410142154057*^9}, 
   3.7116415864149513`*^9, 3.7116427477096243`*^9, 3.711643501643952*^9, 
   3.727619508926581*^9, 
   3.727619846767035*^9},ExpressionUUID->"7b346daf-5a2b-4b50-b585-\
0f3d866a562e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"IFFQ", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"Cases", "[", 
        RowBox[{"x", ",", "_InterpolatingFunction", ",", "\[Infinity]", ",", 
         RowBox[{"Heads", "\[Rule]", "True"}]}], "]"}], "]"}], "\[NotEqual]", 
      "0"}], ",", "True", ",", "False"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"IFFQ", "[", "x_", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "[", 
         RowBox[{"Head", "[", "x", "]"}], "]"}], "===", 
        "InterpolatingFunction"}], ",", "True", ",", "False"}], "]"}]}], 
    ";"}], "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"why", " ", "did", " ", "I", " ", "write", " ", 
     RowBox[{"this", "?"}]}], " ", "<", 
    RowBox[{
     RowBox[{"-", " ", "breaks"}], " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"c", "[", "t", "]"}], "/.", "sol"}], ")"}], "^", "2"}]}]}], 
   " ", "*)"}]}]}], "Code",
 CellChangeTimes->{{3.690410089411117*^9, 3.69041011070678*^9}, 
   3.6904105118698807`*^9, 3.7116415864348297`*^9, 3.711642747722727*^9, {
   3.711643440476159*^9, 3.7116434416200857`*^9}, {3.7116435016689043`*^9, 
   3.711643501675763*^9}, {3.7220374578448067`*^9, 3.7220374598213053`*^9}, {
   3.7220377455458717`*^9, 3.722037766093894*^9}},
 CellLabel->
  "In[381]:=",ExpressionUUID->"5d57f349-d9b8-466a-b18f-e91620f5bdbb"]
}, Closed]],

Cell[CellGroupData[{

Cell["Avg", "Subsubsection",
 CellDingbat->"\[Wolf]",
 CellChangeTimes->{{3.6902825801654367`*^9, 3.690282580502798*^9}, {
   3.690407466104957*^9, 3.69040746647934*^9}, 3.690408297629696*^9, 
   3.694128986678575*^9},ExpressionUUID->"c906219e-d31a-46bd-a319-\
ad22d2c917b1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Avg", "[", 
    RowBox[{"f_", ",", 
     RowBox[{"{", 
      RowBox[{"var_", ",", "varmin_", ",", "varmax_"}], "}"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"integrateopts", ",", "nintegrateopts", ",", "method"}], "}"}], 
     ",", "\n", "\t", 
     RowBox[{
      RowBox[{"method", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Method", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "Avg", "]"}]}], "}"}], "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"IFFQ", "[", "f", "]"}], "\[Equal]", "True"}], ",", 
        RowBox[{"method", "=", "\"\<NIntegrate\>\""}]}], "]"}], ";", "\n", 
      "\t", 
      RowBox[{"integrateopts", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"IntegrateOpts", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "Avg", "]"}]}], "}"}], "]"}]}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"nintegrateopts", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"NIntegrateOpts", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "Avg", "]"}]}], "}"}], "]"}]}], "]"}]}], 
      ";", "\n", "\t", "\n", "\t", 
      RowBox[{"Which", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"method", "\[Equal]", "\"\<Integrate\>\""}], ",", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{
          RowBox[{"Integrate", "[", 
           RowBox[{"f", ",", 
            RowBox[{"{", 
             RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"Sequence", "@@", "integrateopts"}], "]"}]}], "]"}], "/", 
          RowBox[{"(", 
           RowBox[{"varmax", "-", "varmin"}], ")"}]}], "]"}], ",", "\n", 
        "\t\t", 
        RowBox[{"method", "\[Equal]", "\"\<NIntegrate\>\""}], ",", "\n", 
        "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{
          RowBox[{"NIntegrate", "[", 
           RowBox[{"f", ",", 
            RowBox[{"{", 
             RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"Sequence", "@@", "nintegrateopts"}], "]"}]}], "]"}], 
          "/", 
          RowBox[{"(", 
           RowBox[{"varmax", "-", "varmin"}], ")"}]}], "]"}], ",", "\n", 
        "\t\t", "Else", ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Msg", "[", 
          RowBox[{"General", "::", "badmtd"}], "]"}], ";", 
         RowBox[{"Return", "[", "$Failed", "]"}]}]}], "\n", "\t", "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.690287863246601*^9, 3.690287918330853*^9}, {
   3.690287949953002*^9, 3.690287984470213*^9}, {3.690288202492288*^9, 
   3.690288203165351*^9}, {3.690288269859326*^9, 3.690288279058405*^9}, {
   3.69028838310036*^9, 3.6902883884881496`*^9}, {3.690289459451592*^9, 
   3.6902895415673*^9}, 3.69029023501518*^9, {3.690388888336788*^9, 
   3.6903888902170763`*^9}, {3.690390055292741*^9, 3.690390055387116*^9}, {
   3.6903903991779747`*^9, 3.690390404783087*^9}, {3.690407440603863*^9, 
   3.690407446063837*^9}, {3.6904075021773167`*^9, 3.690407508645743*^9}, {
   3.690412867733841*^9, 3.690412869860298*^9}, {3.6904765494883738`*^9, 
   3.6904765497100563`*^9}, {3.693593361533389*^9, 3.693593366023024*^9}, {
   3.694125504733014*^9, 3.694125506918964*^9}, {3.6941255581918097`*^9, 
   3.694125577933239*^9}, {3.694128999820868*^9, 3.694129002004552*^9}, 
   3.710105934791916*^9, 3.7116415864563723`*^9, 3.7116427477332373`*^9, 
   3.71164350169057*^9},
 CellLabel->
  "In[382]:=",ExpressionUUID->"feb7193e-ddf1-4236-931d-b6ad1c65fb79"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Avg", "[", 
    RowBox[{
     RowBox[{"if_", "?", "IFFQ"}], ",", 
     RowBox[{"var_:", "t"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nintegrateopts", ",", "ifdomains", ",", "numifdomains", ",", "varmin", 
       ",", "varmax"}], "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"nintegrateopts", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"NIntegrateOpts", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "Avg", "]"}]}], "}"}], "]"}]}], "]"}]}], 
      ";", "\n", "\t", "\n", "\t", 
      RowBox[{"ifdomains", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", "\"\<Domain\>\"", "]"}], "\[LeftDoubleBracket]", 
           "1", "\[RightDoubleBracket]"}], "&"}], ",", 
         RowBox[{"Cases", "[", 
          RowBox[{
          "if", ",", "_InterpolatingFunction", ",", "\[Infinity]", ",", 
           RowBox[{"Heads", "\[Rule]", "True"}]}], "]"}]}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"numifdomains", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"Union", "[", "ifdomains", "]"}], "]"}]}], ";", "\n", "\t", 
      "\n", "\t", 
      RowBox[{"Which", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"numifdomains", "\[Equal]", "0"}], ",", "\n", "\t\t", 
        RowBox[{"Msg", "[", 
         RowBox[{"Avg", "::", "norange"}], "]"}], ",", "\n", "\t\t", 
        RowBox[{"numifdomains", ">", "1"}], ",", "\n", "\t\t", 
        RowBox[{"Msg", "[", 
         RowBox[{"Avg", "::", "unkrange"}], "]"}], ",", "\n", "\t\t", "Else", 
        ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"varmin", ",", "varmax"}], "}"}], "=", 
          RowBox[{
          "ifdomains", "\[LeftDoubleBracket]", "1", 
           "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", "\t\t", 
         RowBox[{"Return", "[", 
          RowBox[{"Avg", "[", 
           RowBox[{"if", ",", 
            RowBox[{"{", 
             RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", 
            RowBox[{"Method", "\[Rule]", "\"\<NIntegrate\>\""}], ",", 
            RowBox[{"NIntegrateOpts", "\[Rule]", "nintegrateopts"}]}], "]"}], 
          "]"}]}]}], "\n", "\t", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.690288357462304*^9, 3.6902883580090103`*^9}, {
   3.690289582493618*^9, 3.690289584258432*^9}, {3.690317796159708*^9, 
   3.6903177985636187`*^9}, {3.690318804083301*^9, 3.690318805137845*^9}, {
   3.6903881916382313`*^9, 3.690388278197209*^9}, {3.690388413809268*^9, 
   3.690388435179152*^9}, {3.690388499184197*^9, 3.690388520277877*^9}, {
   3.6903886012184143`*^9, 3.6903886091307983`*^9}, 3.690388883757769*^9, {
   3.690388971530364*^9, 3.690388980552248*^9}, 3.690389033272348*^9, {
   3.6903900638460484`*^9, 3.690390067774722*^9}, 3.690390408603043*^9, {
   3.6903988456005583`*^9, 3.690398884077207*^9}, {3.690399713988106*^9, 
   3.6903997926007833`*^9}, {3.690402777064375*^9, 3.690402781794685*^9}, {
   3.6904031240208187`*^9, 3.69040314721561*^9}, {3.690403195892778*^9, 
   3.690403201823271*^9}, {3.690407479108864*^9, 3.690407498882142*^9}, {
   3.690410326161085*^9, 3.690410330362163*^9}, {3.690412874849804*^9, 
   3.6904128821499443`*^9}, {3.690476552255224*^9, 3.690476552468194*^9}, 
   3.690476677930087*^9, {3.694128204130086*^9, 3.694128226254518*^9}, {
   3.694128551527742*^9, 3.6941285523522778`*^9}, {3.694129003236915*^9, 
   3.694129008309512*^9}, {3.6941292947892437`*^9, 3.6941292964816093`*^9}, {
   3.710105935857864*^9, 3.7101059370138187`*^9}, 3.711641586477942*^9, 
   3.7116427477448606`*^9, 3.7116435017079563`*^9},
 CellLabel->
  "In[383]:=",ExpressionUUID->"9283a4f1-96ef-4a04-b05f-f5f69d61ec96"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "Avg", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Method", "\[Rule]", "\"\<Integrate\>\""}], ",", 
     RowBox[{"IntegrateOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"NIntegrateOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.690285754694715*^9, 3.6902857723199673`*^9}, 
   3.690286509899975*^9, {3.690288211046316*^9, 3.690288267166891*^9}, {
   3.690388473885751*^9, 3.690388493729035*^9}, {3.6903903913244343`*^9, 
   3.690390391432948*^9}, 3.690407473094401*^9, 3.6941290095319223`*^9, {
   3.710113803881811*^9, 3.710113811552946*^9}},
 CellLabel->
  "In[384]:=",ExpressionUUID->"a57e5873-dfea-48f7-8bdd-84f3ef9b590c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Var", "Subsubsection",
 CellDingbat->"\[Wolf]",
 CellChangeTimes->{{3.6902825801654367`*^9, 3.690282580502798*^9}, 
   3.6902866313642807`*^9, 
   3.690380077368309*^9},ExpressionUUID->"30821515-eb9c-4ecb-ab65-\
546b930db282"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Var", "[", 
    RowBox[{"f_", ",", 
     RowBox[{"{", 
      RowBox[{"var_", ",", "varmin_", ",", "varmax_"}], "}"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "integrateopts", ",", "nintegrateopts", ",", "avgopts", ",", "method", 
       ",", "avg"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"method", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Method", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "Var", "]"}]}], "}"}], "]"}]}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"IFFQ", "[", "f", "]"}], "\[Equal]", "True"}], ",", 
        RowBox[{"method", "=", "\"\<NIntegrate\>\""}]}], "]"}], ";", "\n", 
      "\t", 
      RowBox[{"integrateopts", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"IntegrateOpts", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "Var", "]"}]}], "}"}], "]"}]}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"nintegrateopts", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"NIntegrateOpts", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "Var", "]"}]}], "}"}], "]"}]}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"avgopts", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"AvgOpts", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "Var", "]"}]}], "}"}], "]"}]}], "]"}]}], 
      ";", "\n", "\n", "\t", 
      RowBox[{"avg", "=", 
       RowBox[{"Avg", "[", 
        RowBox[{"f", ",", 
         RowBox[{"{", 
          RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", 
         RowBox[{"Method", "\[Rule]", "method"}]}], "]"}]}], ";", "\n", "\t", 
      "\n", "\t", 
      RowBox[{"Which", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"method", "\[Equal]", "\"\<Integrate\>\""}], ",", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{
          RowBox[{"Integrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"f", "-", "avg"}], ")"}], "^", "2"}], ",", 
            RowBox[{"{", 
             RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"Sequence", "@@", "integrateopts"}], "]"}]}], "]"}], "/", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"varmax", "-", "varmin"}], ")"}], "^", "2"}]}], "]"}], 
        ",", "\n", "\t\t", 
        RowBox[{"method", "\[Equal]", "\"\<NIntegrate\>\""}], ",", "\n", 
        "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"f", "-", "avg"}], ")"}], "^", "2"}], ",", 
            RowBox[{"{", 
             RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"Sequence", "@@", "nintegrateopts"}], "]"}]}], "]"}], 
          "/", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"varmax", "-", "varmin"}], ")"}], "^", "2"}]}], "]"}], 
        ",", "\n", "\t\t", "Else", ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Msg", "[", 
          RowBox[{"General", "::", "badmtd"}], "]"}], ";", 
         RowBox[{"Return", "[", "$Failed", "]"}], ";"}]}], "\n", "\t", "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.690287863246601*^9, 3.690287918330853*^9}, {
   3.690287949953002*^9, 3.690287984470213*^9}, {3.690288202492288*^9, 
   3.690288203165351*^9}, {3.690288269859326*^9, 3.690288279058405*^9}, {
   3.69028838310036*^9, 3.6902883884881496`*^9}, {3.690289459451592*^9, 
   3.6902895415673*^9}, {3.690289607356846*^9, 3.6902896177143087`*^9}, {
   3.6902896562246523`*^9, 3.690289728915841*^9}, {3.690289944640999*^9, 
   3.690289958237813*^9}, 3.6902902294882517`*^9, {3.690318605667149*^9, 
   3.690318614784339*^9}, {3.690318795337082*^9, 3.69031879563405*^9}, {
   3.6903800751157827`*^9, 3.690380109483981*^9}, {3.690398022786777*^9, 
   3.6903980246116047`*^9}, {3.690400360478425*^9, 3.690400374657851*^9}, {
   3.690412835627973*^9, 3.690412850939123*^9}, {3.693593369645336*^9, 
   3.6935933713013573`*^9}, {3.6941250129095163`*^9, 3.694125014179628*^9}, {
   3.694125059357633*^9, 3.6941250633158817`*^9}, {3.69412516588358*^9, 
   3.6941251802240763`*^9}, {3.694125211555581*^9, 3.694125235176145*^9}, {
   3.694129023741926*^9, 3.694129024560474*^9}, {3.694129438354104*^9, 
   3.6941294565046377`*^9}, 3.710105937832038*^9, 3.7116415864973373`*^9, 
   3.7116427477564573`*^9, 3.711643501723898*^9},
 CellLabel->
  "In[385]:=",ExpressionUUID->"678ce95b-35b6-432a-8cea-0e99ec686dfd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Var", "[", 
    RowBox[{
     RowBox[{"if_", "?", "IFFQ"}], ",", 
     RowBox[{"var_:", "t"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nintegrateopts", ",", "avgopts", ",", "ifdomains", ",", "numifdomains",
        ",", "varmin", ",", "varmax"}], "}"}], ",", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{
      RowBox[{"nintegrateopts", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"NIntegrateOpts", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "Var", "]"}]}], "}"}], "]"}]}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"avgopts", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"AvgOpts", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "Var", "]"}]}], "}"}], "]"}]}], "]"}]}], 
      ";", "\n", "\t\t", "\n", "\t", 
      RowBox[{"ifdomains", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", "\"\<Domain\>\"", "]"}], "\[LeftDoubleBracket]", 
           "1", "\[RightDoubleBracket]"}], "&"}], ",", 
         RowBox[{"Cases", "[", 
          RowBox[{
          "if", ",", "_InterpolatingFunction", ",", "\[Infinity]", ",", 
           RowBox[{"Heads", "\[Rule]", "True"}]}], "]"}]}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"numifdomains", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"Union", "[", "ifdomains", "]"}], "]"}]}], ";", "\n", "\t", 
      "\n", "\t", 
      RowBox[{"Which", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"numifdomains", "\[Equal]", "0"}], ",", "\n", "\t\t", 
        RowBox[{"Msg", "[", 
         RowBox[{"Var", "::", "norange"}], "]"}], ",", "\n", "\t\t", 
        RowBox[{"numifdomains", ">", "1"}], ",", "\n", "\t\t", 
        RowBox[{"Msg", "[", 
         RowBox[{"Var", "::", "unkrange"}], "]"}], ",", "\n", "\t\t", "Else", 
        ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"varmin", ",", "varmax"}], "}"}], "=", 
          RowBox[{
          "ifdomains", "\[LeftDoubleBracket]", "1", 
           "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", "\t\t", 
         RowBox[{"Return", "[", 
          RowBox[{"Var", "[", 
           RowBox[{"if", ",", 
            RowBox[{"{", 
             RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", 
            RowBox[{"Method", "\[Rule]", "\"\<NIntegrate\>\""}], ",", 
            RowBox[{"NIntegrateOpts", "\[Rule]", "nintegrateopts"}]}], "]"}], 
          "]"}]}]}], "\[IndentingNewLine]", "\t", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.6902825860308123`*^9, 3.690282586336006*^9}, 
   3.690283427926217*^9, {3.690283959951191*^9, 3.690284042220743*^9}, {
   3.690284123103416*^9, 3.690284123307719*^9}, {3.690285634420931*^9, 
   3.690285634452784*^9}, {3.69028571252498*^9, 3.690285751449379*^9}, {
   3.69028620701888*^9, 3.6902862180093393`*^9}, {3.69028624866474*^9, 
   3.690286296379609*^9}, 3.690286633705567*^9, 3.690286809121889*^9, {
   3.690286953016643*^9, 3.6902870061667233`*^9}, {3.690287109693028*^9, 
   3.6902871491447287`*^9}, {3.690289789036126*^9, 3.690289798076704*^9}, {
   3.6902899269860277`*^9, 3.690289933491602*^9}, {3.690317773704399*^9, 
   3.6903177826181583`*^9}, {3.6903185842783012`*^9, 3.690318601029388*^9}, {
   3.690318738423196*^9, 3.6903187465110197`*^9}, {3.690318792250821*^9, 
   3.6903187928456793`*^9}, {3.69038008312903*^9, 3.6903801012837276`*^9}, {
   3.690381040207081*^9, 3.69038104061723*^9}, {3.690400328062758*^9, 
   3.690400344618637*^9}, {3.690400379873869*^9, 3.690400400260622*^9}, {
   3.690400512422421*^9, 3.690400522871809*^9}, {3.690400617467576*^9, 
   3.6904006178373823`*^9}, {3.690400863113646*^9, 3.690400871160748*^9}, {
   3.6904010165196257`*^9, 3.690401017186185*^9}, {3.690403154456511*^9, 
   3.690403158253292*^9}, 3.690403190188095*^9, {3.694123758796323*^9, 
   3.694123760157484*^9}, 3.694129025995729*^9, {3.694129275361885*^9, 
   3.694129291005376*^9}, {3.6941294248762074`*^9, 3.6941294297189007`*^9}, {
   3.7101059385591927`*^9, 3.710105939150214*^9}, 3.71164158651703*^9, 
   3.711642747772388*^9, 3.711643501743761*^9},
 CellLabel->
  "In[386]:=",ExpressionUUID->"79747f50-ade2-43f0-b958-c93cdf01402b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "Var", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"IntegrateOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"NIntegrateOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"AvgOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Integrate\>\""}]}], "}"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.690285754694715*^9, 3.6902857723199673`*^9}, 
   3.690286509899975*^9, 3.690286813150622*^9, {3.6902870532833443`*^9, 
   3.6902870695436563`*^9}, 3.6902905754284143`*^9, 3.690290606660974*^9, {
   3.690380087890491*^9, 3.690380095834154*^9}, {3.690380174155045*^9, 
   3.690380175192892*^9}, 3.694129031017063*^9},
 CellLabel->
  "In[387]:=",ExpressionUUID->"5cfb7985-fca8-41c2-836e-747aa17c8479"]
}, Closed]],

Cell[CellGroupData[{

Cell["Cov", "Subsubsection",
 CellDingbat->"\[Wolf]",
 CellChangeTimes->{{3.6902825801654367`*^9, 3.690282580502798*^9}, 
   3.6902866313642807`*^9, 3.6902908662738132`*^9, {3.690379928130348*^9, 
   3.690379929203802*^9}},ExpressionUUID->"68a5ea3f-91cd-4d3c-99df-\
26946fe640a9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cov", "[", 
    RowBox[{"f1_", ",", "f2_", ",", 
     RowBox[{"{", 
      RowBox[{"var_", ",", "varmin_", ",", "varmax_"}], "}"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "integrateopts", ",", "nintegrateopts", ",", "avgopts", ",", "method", 
       ",", "avg1", ",", "avg2"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"method", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Method", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "Cov", "]"}]}], "}"}], "]"}]}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"IFFQ", "[", "f1", "]"}], "\[Equal]", "True"}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"IFFQ", "[", "f2", "]"}], "\[Equal]", "True"}], ")"}]}], 
        ",", 
        RowBox[{"method", "=", "\"\<NIntegrate\>\""}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"integrateopts", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"IntegrateOpts", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "Cov", "]"}]}], "}"}], "]"}]}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"nintegrateopts", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"NIntegrateOpts", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "Cov", "]"}]}], "}"}], "]"}]}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"avgopts", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"AvgOpts", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "Cov", "]"}]}], "}"}], "]"}]}], "]"}]}], 
      ";", "\n", "\t", "\n", "\t", 
      RowBox[{"avg1", "=", 
       RowBox[{"Avg", "[", 
        RowBox[{"f1", ",", 
         RowBox[{"{", 
          RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", 
         RowBox[{"Method", "\[Rule]", "method"}]}], "]"}]}], ";", "\n", "\t", 
      
      RowBox[{"avg2", "=", 
       RowBox[{"Avg", "[", 
        RowBox[{"f2", ",", 
         RowBox[{"{", 
          RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", 
         RowBox[{"Method", "\[Rule]", "method"}]}], "]"}]}], ";", "\n", "\t", 
      "\n", "\t", 
      RowBox[{"Which", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"method", "\[Equal]", "\"\<Integrate\>\""}], ",", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{
          RowBox[{"Integrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"f1", "-", "avg1"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"f2", "-", "avg2"}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"Sequence", "@@", "integrateopts"}], "]"}]}], "]"}], "/", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"varmax", "-", "varmin"}], ")"}], "^", "2"}]}], "]"}], 
        ",", "\n", "\t\t", 
        RowBox[{"method", "\[Equal]", "\"\<NIntegrate\>\""}], ",", "\n", 
        "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"f1", "-", "avg1"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"f2", "-", "avg2"}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"Sequence", "@@", "nintegrateopts"}], "]"}]}], "]"}], 
          "/", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"varmax", "-", "varmin"}], ")"}], "^", "2"}]}], "]"}], 
        ",", "\n", "\t\t", "Else", ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Msg", "[", 
          RowBox[{"General", "::", "badmtd"}], "]"}], ";", 
         RowBox[{"Return", "[", "$Failed", "]"}], ";"}]}], "\n", "\t", "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.690287863246601*^9, 3.690287918330853*^9}, {
   3.690287949953002*^9, 3.690287984470213*^9}, {3.690288202492288*^9, 
   3.690288203165351*^9}, {3.690288269859326*^9, 3.690288279058405*^9}, {
   3.69028838310036*^9, 3.6902883884881496`*^9}, {3.690289459451592*^9, 
   3.6902895415673*^9}, {3.690289607356846*^9, 3.6902896177143087`*^9}, {
   3.6902896562246523`*^9, 3.690289728915841*^9}, {3.690289944640999*^9, 
   3.690289958237813*^9}, 3.6902902294882517`*^9, {3.6902908694612083`*^9, 
   3.690290942528583*^9}, {3.690327388583004*^9, 3.690327390152213*^9}, {
   3.690379924506555*^9, 3.690379924958449*^9}, {3.6903801177319803`*^9, 
   3.690380122428493*^9}, {3.690398029283079*^9, 3.6903980346607237`*^9}, {
   3.690411454729187*^9, 3.6904115046970997`*^9}, {3.690411551877288*^9, 
   3.690411557640525*^9}, 3.690412823904641*^9, 3.690413319115198*^9, 
   3.690476739929735*^9, {3.693593373477764*^9, 3.693593374943089*^9}, {
   3.6941252482646*^9, 3.6941252504495077`*^9}, {3.694125922366151*^9, 
   3.694125937974535*^9}, {3.694129032827969*^9, 3.6941290340907917`*^9}, {
   3.694129369273045*^9, 3.6941294010987043`*^9}, 3.710105939853644*^9, {
   3.711641586535746*^9, 3.7116415865468893`*^9}, {3.7116427477924833`*^9, 
   3.7116427478003273`*^9}, {3.71164350176329*^9, 3.7116435017708*^9}},
 CellLabel->
  "In[388]:=",ExpressionUUID->"fccb2e1d-a5d1-4620-aee0-fee3f7649c09"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cov", "[", 
    RowBox[{"if1_", ",", 
     RowBox[{"if2_", "?", "IFFQ"}], ",", 
     RowBox[{"var_:", "t"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nintegrateopts", ",", "avgopts", ",", "ifdomains", ",", "numifdomains",
        ",", "varmin", ",", "varmax"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"nintegrateopts", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"NIntegrateOpts", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "Cov", "]"}]}], "}"}], "]"}]}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"avgopts", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"AvgOpts", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "Cov", "]"}]}], "}"}], "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\n", "\t", 
      RowBox[{"ifdomains", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", "\"\<Domain\>\"", "]"}], "\[LeftDoubleBracket]", 
           "1", "\[RightDoubleBracket]"}], "&"}], ",", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"if1", ",", "if2"}], "}"}], ",", "_InterpolatingFunction",
            ",", "\[Infinity]", ",", 
           RowBox[{"Heads", "\[Rule]", "True"}]}], "]"}]}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"numifdomains", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"Union", "[", "ifdomains", "]"}], "]"}]}], ";", "\n", "\t", 
      "\n", "\t", 
      RowBox[{"Which", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"numifdomains", "\[Equal]", "0"}], ",", "\n", "\t\t", 
        RowBox[{"Msg", "[", 
         RowBox[{"Cov", "::", "norange"}], "]"}], ",", "\n", "\t\t", 
        RowBox[{"numifdomains", ">", "1"}], ",", "\n", "\t\t", 
        RowBox[{"Msg", "[", 
         RowBox[{"Cov", "::", "unkrange"}], "]"}], ",", "\n", "\t\t", "Else", 
        ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"varmin", ",", "varmax"}], "}"}], "=", 
          RowBox[{
          "ifdomains", "\[LeftDoubleBracket]", "1", 
           "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", "\t\t", 
         RowBox[{"Return", "[", 
          RowBox[{"Cov", "[", 
           RowBox[{"if1", ",", "if2", ",", 
            RowBox[{"{", 
             RowBox[{"var", ",", "varmin", ",", "varmax"}], "}"}], ",", 
            RowBox[{"Method", "\[Rule]", "\"\<NIntegrate\>\""}], ",", 
            RowBox[{"NIntegrateOpts", "\[Rule]", "nintegrateopts"}]}], "]"}], 
          "]"}]}]}], "\[IndentingNewLine]", "\t", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.6902825860308123`*^9, 3.690282586336006*^9}, 
   3.690283427926217*^9, {3.690283959951191*^9, 3.690284042220743*^9}, {
   3.690284123103416*^9, 3.690284123307719*^9}, {3.690285634420931*^9, 
   3.690285634452784*^9}, {3.69028571252498*^9, 3.690285751449379*^9}, {
   3.69028620701888*^9, 3.6902862180093393`*^9}, {3.69028624866474*^9, 
   3.690286296379609*^9}, 3.690286633705567*^9, 3.690286809121889*^9, {
   3.690286953016643*^9, 3.6902870061667233`*^9}, {3.690287109693028*^9, 
   3.6902871491447287`*^9}, {3.690289789036126*^9, 3.690289798076704*^9}, {
   3.6902899269860277`*^9, 3.690289933491602*^9}, {3.6902909514288387`*^9, 
   3.690290966453299*^9}, {3.690290997741214*^9, 3.69029101411274*^9}, 
   3.6903188411234713`*^9, {3.6903778841714077`*^9, 3.690377887982587*^9}, {
   3.6903790483596992`*^9, 3.690379054514027*^9}, {3.690379920393053*^9, 
   3.69037992076075*^9}, {3.690380127144643*^9, 3.690380129927813*^9}, {
   3.690400542374116*^9, 3.690400611434642*^9}, {3.690400664016159*^9, 
   3.69040072456695*^9}, {3.690411609451578*^9, 3.690411611225864*^9}, 
   3.690412818679573*^9, {3.6904173719712343`*^9, 3.690417375480257*^9}, {
   3.69041746736761*^9, 3.690417467873968*^9}, {3.6904759952553587`*^9, 
   3.690476002838469*^9}, {3.690476744215679*^9, 3.69047674455567*^9}, 
   3.6941290350524893`*^9, {3.694129314343873*^9, 3.6941293636581917`*^9}, {
   3.69412940594727*^9, 3.69412940624159*^9}, {3.710105940598199*^9, 
   3.7101059411880713`*^9}, 3.711641586558845*^9, 3.711642747816203*^9, 
   3.711643501787431*^9},
 CellLabel->
  "In[389]:=",ExpressionUUID->"d83813d2-8ab0-4208-9097-1bad2412f669"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cov", "[", 
    RowBox[{
     RowBox[{"if1_", "?", "IFFQ"}], ",", "if2_", ",", 
     RowBox[{"var_:", "t"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"Cov", "[", 
    RowBox[{"if2", ",", "if1", ",", "var", ",", "opts"}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.690476084432045*^9, 3.6904760982668037`*^9}, {
   3.694129316879287*^9, 3.694129325586691*^9}, 3.711641586585791*^9, 
   3.711642747830435*^9, 3.7116435018035183`*^9},
 CellLabel->
  "In[390]:=",ExpressionUUID->"f20dec89-7a3d-4f12-9b89-bba34b5ade07"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "Cov", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"IntegrateOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"NIntegrateOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"AvgOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Integrate\>\""}]}], "}"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.690285754694715*^9, 3.6902857723199673`*^9}, 
   3.690286509899975*^9, 3.690286813150622*^9, {3.6902870532833443`*^9, 
   3.6902870695436563`*^9}, 3.6902905754284143`*^9, 3.690290606660974*^9, {
   3.6902908595737457`*^9, 3.690290861480461*^9}, {3.690380145996565*^9, 
   3.690380152860821*^9}, 3.6941290361222963`*^9},
 CellLabel->
  "In[391]:=",ExpressionUUID->"da6716aa-2588-4a38-97df-8e751b4e61f8"]
}, Closed]],

Cell[CellGroupData[{

Cell["ExtractPlotPoints", "Subsubsection",
 CellDingbat->"\[Wolf]",
 CellChangeTimes->{{3.68917332588813*^9, 3.68917332908529*^9}, {
   3.689173764304393*^9, 3.6891737649808893`*^9}, 3.68917439559696*^9, 
   3.7116213557367067`*^9},ExpressionUUID->"77ac0e8f-57d0-4044-93f4-\
0d9998e7dea8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"by", " ", "Jens"}], " ", "<", 
     RowBox[{"http", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", "a"}],
        "/", "20282"}], "/", "6358"}], ">"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"ExtractPlotPoints", "[", "plot_Graphics", "]"}], ":=", 
    RowBox[{"Cases", "[", 
     RowBox[{
      RowBox[{"Normal", "@", "plot"}], ",", 
      RowBox[{
       RowBox[{"Line", "[", "x_", "]"}], "\[RuleDelayed]", "x"}], ",", 
      "\[Infinity]"}], "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.6891731164981318`*^9, 3.689173138669693*^9}, {
   3.689173337156083*^9, 3.68917333789207*^9}, {3.689173747361622*^9, 
   3.689173804104391*^9}, {3.689174284008299*^9, 3.6891742855777407`*^9}, {
   3.689174320478813*^9, 3.6891743237877493`*^9}, {3.689174363001788*^9, 
   3.689174398346958*^9}, 3.711621355753667*^9, {3.71162209038614*^9, 
   3.711622091677738*^9}, 3.711632230547645*^9, {3.7116329475785913`*^9, 
   3.7116329509537573`*^9}},
 CellLabel->
  "In[392]:=",ExpressionUUID->"9031e534-1577-4d94-b5f8-b07a89ed0e43"]
}, Closed]],

Cell[CellGroupData[{

Cell["Else", "Subsubsection",
 CellChangeTimes->{{3.6885759728386517`*^9, 
  3.688575973134968*^9}},ExpressionUUID->"3400c6dc-4cea-4bdd-bbfc-\
22ca704d8fae"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Else", "=", "True"}], ";"}]], "Input",
 CellChangeTimes->{{3.6885759741288233`*^9, 3.68857597592712*^9}},
 CellLabel->
  "In[393]:=",ExpressionUUID->"3db227ac-b126-4796-abe6-3a7b94bd7ec3"]
}, Closed]],

Cell[CellGroupData[{

Cell["SpFrac", "Subsubsection",
 CellChangeTimes->{{3.6879640516646233`*^9, 
  3.687964052933432*^9}},ExpressionUUID->"3a213472-3450-4976-9e39-\
a2bb5395ed47"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"SpFrac", "[", 
      RowBox[{"sp_Integer", ",", "nsp_Integer"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"nsp", "\[Equal]", "1"}], ",", "0.5", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"sp", "-", "1."}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"nsp", "-", "1."}], ")"}]}]}], "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SpFrac", "[", 
     RowBox[{"sp_Integer", ",", "nsp_Integer"}], "]"}], ":=", 
    RowBox[{"sp", "/", 
     RowBox[{"(", 
      RowBox[{"nsp", "+", "1."}], ")"}]}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.687964060466292*^9, 3.687964080899601*^9}, {
   3.6947841982632847`*^9, 3.694784209205868*^9}, {3.6947891519691963`*^9, 
   3.6947891641350393`*^9}, 3.694796215114437*^9},
 CellLabel->
  "In[394]:=",ExpressionUUID->"a00631cd-4493-4998-a32a-a12bd1a0cb2e"]
}, Closed]],

Cell[CellGroupData[{

Cell["ModPart", "Subsubsection",
 CellDingbat->"\[Wolf]",
 CellChangeTimes->{{3.687784433359955*^9, 
  3.6877844343086777`*^9}},ExpressionUUID->"26931e65-f1d9-40a9-aef3-\
a32b9dadf192"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ModPart", "[", 
    RowBox[{"list_List", ",", "part_Integer"}], "]"}], ":=", 
   RowBox[{"Part", "[", 
    RowBox[{"list", ",", 
     RowBox[{"Mod", "[", 
      RowBox[{"part", ",", 
       RowBox[{"Length", "[", "list", "]"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[395]:=",ExpressionUUID->"e3051963-851b-4e9f-9057-0462ce01abe9"]
}, Closed]],

Cell[CellGroupData[{

Cell["NumberedGridForm", "Subsubsection",
 CellDingbat->"\[Wolf]",
 CellChangeTimes->{{3.6869548364110003`*^9, 
  3.686954839706789*^9}},ExpressionUUID->"41535405-13f0-43c8-abf7-\
232a2b08a557"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NumberedGridForm", "[", "list_List", "]"}], ":=", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "list", "]"}], "]"}], ",", "list"}], "}"}], 
      "]"}], ",", 
     RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.68695484146947*^9, 3.686954866468338*^9}},
 CellLabel->
  "In[396]:=",ExpressionUUID->"8a3f6984-a0d4-4ae1-8ee1-62ca495a1ee8"]
}, Closed]],

Cell[CellGroupData[{

Cell["FindMinima / FindMaxima / FindExtrema", "Subsubsection",
 CellDingbat->"\[Wolf]",
 CellChangeTimes->{{3.685702666758609*^9, 3.6857026739026337`*^9}, 
   3.711644444851967*^9, {3.7116445174290037`*^9, 
   3.711644521168236*^9}},ExpressionUUID->"5d732cf5-1cb8-473f-b845-\
d7d4752231d7"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
    "based", " ", "on", " ", "idea", " ", "from", " ", "Daniel", " ", 
     "Lichtblau"}], " ", "<", 
    RowBox[{"http", ":"}]}], "//", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
          "a"}], "/", "5591"}], "/", "6358"}], ">"}], " ", "&"}], " ", "a", 
     " ", "trick", " ", "from", " ", "Mr", " ", "Wizard", " ", 
     ButtonBox[
      RowBox[{
       RowBox[{"<", 
        RowBox[{"http", ":"}]}], "//", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
          "a"}], "/", "67671"}], "/", "6358"}]}],
      BaseStyle->"Hyperlink",
      ButtonData->{
        URL["http://mathematica.stackexchange.com/a/67671/6358"], None}]}], 
    ">"}]}], " ", "*)"}]], "Code",
 CellChangeTimes->{{3.685702776700158*^9, 3.6857027780435047`*^9}, {
  3.685702842441348*^9, 3.685702850743945*^9}, {3.6857042717933693`*^9, 
  3.6857042800615273`*^9}, {3.711644983455364*^9, 3.71164498368927*^9}},
 CellLabel->
  "In[397]:=",ExpressionUUID->"ae3cd843-d7a8-4c4d-ae61-e5d4f60f722d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindMaxima", "[", 
    RowBox[{"if_InterpolatingFunction", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"tmin_", "?", "NumericQ"}], ",", 
       RowBox[{"tmax_", "?", "NumericQ"}]}], "}"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Reap", "[", "\n", "\t", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"y", "'"}], "[", "t", "]"}], "\[Equal]", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"if", "[", "t", "]"}], ",", "t"}], "]"}], "]"}]}], ",", 
          
          RowBox[{"WhenEvent", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"y", "'"}], "[", "t", "]"}], "<", "0"}], ",", 
            RowBox[{"Sow", "[", 
             RowBox[{"{", 
              RowBox[{"t", ",", 
               RowBox[{"y", "[", "t", "]"}]}], "}"}], "]"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"y", "[", "tmin", "]"}], "\[Equal]", 
           RowBox[{"if", "[", "tmin", "]"}]}]}], "}"}], ",", "\n", "\t", 
        RowBox[{"y", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "tmin", ",", "tmax"}], "}"}]}], "]"}], "]"}], 
     "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "/.", 
    RowBox[{
     RowBox[{"{", "x_List", "}"}], "\[RuleDelayed]", "x"}]}]}], ";"}]], "Code",\

 CellChangeTimes->{{3.685703980631134*^9, 3.6857039829321938`*^9}, {
   3.685704154534136*^9, 3.6857041556883497`*^9}, {3.69411787956806*^9, 
   3.6941178977409687`*^9}, {3.6941180445809603`*^9, 3.69411807702491*^9}, {
   3.6941181196800337`*^9, 3.694118126096818*^9}, 3.711635733353395*^9, 
   3.711644433172019*^9, 3.7116445089229403`*^9},
 CellLabel->
  "In[398]:=",ExpressionUUID->"9434e8cc-5cf2-4416-abd9-eabf9b7fd646"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindMaxima", "[", "if_InterpolatingFunction", "]"}], ":=", 
   RowBox[{"FindMaxima", "[", 
    RowBox[{"if", ",", 
     RowBox[{
      RowBox[{"if", "[", "\"\<Domain\>\"", "]"}], "\[LeftDoubleBracket]", "1",
       "\[RightDoubleBracket]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.6941179020046883`*^9, 3.694117930577619*^9}, 
   3.711635736460747*^9, {3.711644433182989*^9, 3.711644433189884*^9}, {
   3.711644508933981*^9, 3.711644508942018*^9}, {3.711645316623*^9, 
   3.711645323218693*^9}, 3.71164535985987*^9},
 CellLabel->
  "In[399]:=",ExpressionUUID->"944d519c-f4ee-45f4-835d-185e5eb0e683"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindMinima", "[", 
    RowBox[{"if_InterpolatingFunction", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"tmin_", "?", "NumericQ"}], ",", 
       RowBox[{"tmax_", "?", "NumericQ"}]}], "}"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Reap", "[", "\[IndentingNewLine]", "\t", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"y", "'"}], "[", "t", "]"}], "\[Equal]", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"if", "[", "t", "]"}], ",", "t"}], "]"}], "]"}]}], ",", 
          
          RowBox[{"WhenEvent", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"y", "'"}], "[", "t", "]"}], ">", "0"}], ",", 
            RowBox[{"Sow", "[", 
             RowBox[{"{", 
              RowBox[{"t", ",", 
               RowBox[{"y", "[", "t", "]"}]}], "}"}], "]"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"y", "[", "tmin", "]"}], "\[Equal]", 
           RowBox[{"if", "[", "tmin", "]"}]}]}], "}"}], ",", "\n", "\t", 
        RowBox[{"y", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "tmin", ",", "tmax"}], "}"}]}], "]"}], "]"}], 
     "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "/.", 
    RowBox[{
     RowBox[{"{", "x_List", "}"}], "\[RuleDelayed]", "x"}]}]}], ";"}]], "Code",\

 CellChangeTimes->{{3.685702685437323*^9, 3.685702689685252*^9}, {
   3.6857041613064947`*^9, 3.685704162264572*^9}, {3.6941178840516853`*^9, 
   3.694117885435462*^9}, {3.694118089062586*^9, 3.6941180945586367`*^9}, {
   3.711634888127334*^9, 3.7116349006180696`*^9}, 3.711635739193421*^9, 
   3.711644444670548*^9, 3.7116445174482927`*^9},
 CellLabel->
  "In[400]:=",ExpressionUUID->"7e79943d-9d59-42be-8460-da92c2a595f5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindMinima", "[", "if_InterpolatingFunction", "]"}], ":=", 
   RowBox[{"FindMinima", "[", 
    RowBox[{"if", ",", 
     RowBox[{
      RowBox[{"if", "[", "\"\<Domain\>\"", "]"}], "\[LeftDoubleBracket]", "1",
       "\[RightDoubleBracket]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7116348361546097`*^9, 3.711634842206381*^9}, 
   3.711635742117948*^9, {3.711644444678464*^9, 3.711644444684857*^9}, {
   3.711644517465555*^9, 3.711644517472163*^9}, 3.71164536566361*^9},
 CellLabel->
  "In[401]:=",ExpressionUUID->"31153e0f-716d-4fe6-a594-4ebda7cda1d3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindExtrema", "[", 
    RowBox[{"if_InterpolatingFunction", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"tmin_", "?", "NumericQ"}], ",", 
       RowBox[{"tmax_", "?", "NumericQ"}]}], "}"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Reap", "[", "\[IndentingNewLine]", "\t", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"y", "'"}], "[", "t", "]"}], "\[Equal]", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"if", "[", "t", "]"}], ",", "t"}], "]"}], "]"}]}], ",", 
          
          RowBox[{"WhenEvent", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"y", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
            RowBox[{"Sow", "[", 
             RowBox[{"{", 
              RowBox[{"t", ",", 
               RowBox[{"y", "[", "t", "]"}]}], "}"}], "]"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"y", "[", "tmin", "]"}], "\[Equal]", 
           RowBox[{"if", "[", "tmin", "]"}]}]}], "}"}], ",", "\n", "\t", 
        RowBox[{"y", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "tmin", ",", "tmax"}], "}"}]}], "]"}], "]"}], 
     "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "/.", 
    RowBox[{
     RowBox[{"{", "x_List", "}"}], "\[RuleDelayed]", "x"}]}]}], ";"}]], "Code",\

 CellChangeTimes->{{3.6857026926897*^9, 3.685702699544488*^9}, {
   3.685704164726482*^9, 3.685704165879361*^9}, {3.694117886707739*^9, 
   3.694117888275161*^9}, {3.694118103694105*^9, 3.694118110717997*^9}, {
   3.711634892749762*^9, 3.7116349051600523`*^9}, 3.7116357440825977`*^9},
 CellLabel->
  "In[402]:=",ExpressionUUID->"bd3ed352-3ccd-4be6-8dab-f30ca1524dac"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindExtrema", "[", "if_InterpolatingFunction", "]"}], ":=", 
   RowBox[{"FindExtrema", "[", 
    RowBox[{"if", ",", 
     RowBox[{
      RowBox[{"if", "[", "\"\<Domain\>\"", "]"}], "\[LeftDoubleBracket]", "1",
       "\[RightDoubleBracket]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.711634860028935*^9, 3.711634862026143*^9}, 
   3.7116357471321087`*^9, 3.711645368862842*^9},
 CellLabel->
  "In[403]:=",ExpressionUUID->"9266fc1a-4c17-4673-a47b-b686176bf5e1"]
}, Closed]],

Cell[CellGroupData[{

Cell["FindPeriod", "Subsubsection",ExpressionUUID->"e446d061-1f10-4ad3-afa5-bbdc051d700e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindPeriod", "[", 
    RowBox[{"sol_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"var1", ",", "res", ",", "tmp"}], "}"}], ",", "\n", "\n", 
     RowBox[{
      RowBox[{"Which", "[", "\n", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", 
          RowBox[{"sol", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], "===", 
         "TemporalData"}], ",", "\n", "\t", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "based", " ", "on", " ", "idea", " ", "from", " ", "bbgodfrey"}], 
          ",", " ", 
          RowBox[{
           RowBox[{"http", ":"}], "//", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
              "a"}], "/", "107741"}], "/", "6358"}]}]}], " ", "*)"}], "\n", 
        "\t", 
        RowBox[{"res", "=", 
         RowBox[{"Length", "[", 
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", "\n", "\t\t", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"#", "/.", "sol"}], ")"}], "[", "\"\<Values\>\"", 
                  "]"}], "\[LeftDoubleBracket]", 
                 RowBox[{
                  RowBox[{"Max", "[", 
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    RowBox[{"sol", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "[", 
                    "\"\<PathLength\>\"", "]"}]}], ",", 
                    RowBox[{"-", 
                    RowBox[{"OptionValue", "[", "MaxPeriod", "]"}]}]}], "]"}],
                   ";;"}], "\[RightDoubleBracket]"}], "&"}], ",", 
               RowBox[{"sol", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}],
              "]"}], ",", "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"Norm", "[", 
               RowBox[{"#1", "-", "#2"}], "]"}], "<", 
              RowBox[{
               RowBox[{"10", "^", 
                RowBox[{"-", 
                 RowBox[{"OptionValue", "[", "AccuracyGoal", "]"}]}]}], "+", 
               RowBox[{
                RowBox[{"Norm", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"#1", "-", "#2"}], ")"}], "/", "#1"}], "]"}], "*", 
                
                RowBox[{"10", "^", 
                 RowBox[{"-", 
                  RowBox[{
                  "OptionValue", "[", "PrecisionGoal", "]"}]}]}]}]}]}], 
             "&"}]}], "]"}], "]"}]}], "\n", ",", "\n", "\t", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", 
           RowBox[{"sol", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], "===", 
          "InterpolatingFunction"}], "&&", 
         RowBox[{
          RowBox[{"OptionValue", "[", "BasePeriod", "]"}], "=!=", "None"}]}], 
        ",", "\n", "\t", 
        RowBox[{
         RowBox[{"var1", "=", 
          RowBox[{"sol", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
         "\t", 
         RowBox[{"tmp", "=", 
          RowBox[{"{", 
           RowBox[{"var1", "\[Rule]", 
            RowBox[{"TimeSeries", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"t", ",", 
                 RowBox[{"var1", "/.", 
                  RowBox[{"Slice", "[", 
                   RowBox[{"sol", ",", "t"}], "]"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", 
                 RowBox[{"InitialTime", "[", "sol", "]"}], ",", 
                 RowBox[{"FinalTime", "[", "sol", "]"}], ",", 
                 RowBox[{"OptionValue", "[", "BasePeriod", "]"}]}], "}"}]}], 
              "]"}], "]"}]}], "}"}]}], ";", "\n", "\t", 
         RowBox[{"res", "=", 
          RowBox[{
           RowBox[{"FindPeriod", "[", "tmp", "]"}], "*", 
           RowBox[{"OptionValue", "[", "BasePeriod", "]"}]}]}]}], "\n", ",", 
        "\n", "\t", "True", ",", " ", 
        RowBox[{"(*", " ", "else", " ", "*)"}], "\n", "\t", 
        RowBox[{
         RowBox[{"Return", "[", "]"}], ";"}]}], "\n", "]"}], ";", "\n", "\n", 
      
      RowBox[{"Return", "[", "res", "]"}]}]}], "\n", "\n", "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{
  3.688571719508432*^9, {3.688571777518642*^9, 3.688571777533386*^9}, {
   3.688571808230686*^9, 3.688571808244776*^9}, 3.693869696839148*^9, {
   3.69387005467272*^9, 3.693870062470398*^9}, {3.696678568121819*^9, 
   3.6966785751418953`*^9}, {3.696678929120338*^9, 3.696678942905458*^9}, {
   3.6966789902261543`*^9, 3.6966790028411503`*^9}, {3.696679219618834*^9, 
   3.696679228417509*^9}, {3.696679270194675*^9, 3.696679272024164*^9}, {
   3.696679392172038*^9, 3.69667940437072*^9}, {3.696679617900676*^9, 
   3.6966796191010647`*^9}, {3.696679857716091*^9, 3.696679858229629*^9}, {
   3.69667998491054*^9, 3.6966799852292747`*^9}},
 CellLabel->
  "In[404]:=",ExpressionUUID->"b772a55d-9174-402b-bfc7-5d2fa90999d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "FindPeriod", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MaxPeriod", "\[Rule]", "4"}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "5"}], ",", 
     RowBox[{"PrecisionGoal", "\[Rule]", "5"}], ",", 
     RowBox[{"BasePeriod", "\[Rule]", "None"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.6885717195343723`*^9, 3.688571719577883*^9}},
 CellLabel->
  "In[405]:=",ExpressionUUID->"de15622b-e2ba-432c-abdf-3890b556ac30"]
}, Closed]],

Cell[CellGroupData[{

Cell["myStreamPlot", "Subsubsection",
 CellDingbat->"\[Wolf]",
 CellChangeTimes->{{3.685659045578321*^9, 
  3.685659051907084*^9}},ExpressionUUID->"60516b59-40e1-4b4e-8a5e-\
efe596b9e7c0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"from", " ", "<", 
      RowBox[{"http", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
         "a"}], "/", "42770"}], "/", "6358"}], ">", " ", 
      RowBox[{"by", " ", "Rahul"}]}]}], ",", " ", 
    RowBox[{"tweaked", " ", "by", " ", "me"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "myStreamPlot", "]"}], "=", 
     RowBox[{"Options", "[", "StreamPlot", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"myStreamPlot", "[", 
     RowBox[{"f_", ",", 
      RowBox[{"{", 
       RowBox[{"x_", ",", "x0_", ",", "x1_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y_", ",", "y0_", ",", "y1_"}], "}"}], ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"u", ",", "v", ",", 
        RowBox[{"a", "=", 
         RowBox[{"OptionValue", "[", "AspectRatio", "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StreamPlot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"x1", "-", "x0"}], ")"}]}], ",", 
              RowBox[{"a", "/", 
               RowBox[{"(", 
                RowBox[{"y1", "-", "y0"}], ")"}]}]}], "}"}], " ", 
            RowBox[{"(", 
             RowBox[{"f", "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"x", "\[Rule]", 
                 RowBox[{"x0", "+", 
                  RowBox[{"u", " ", 
                   RowBox[{"(", 
                    RowBox[{"x1", "-", "x0"}], ")"}]}]}]}], ",", 
                RowBox[{"y", "\[Rule]", 
                 RowBox[{"y0", "+", 
                  RowBox[{
                   RowBox[{"v", "/", "a"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"y1", "-", "y0"}], ")"}]}]}]}]}], "}"}]}], 
             ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"v", ",", "0", ",", "a"}], "}"}], ",", "opts"}], "]"}], "/.", 
         RowBox[{
          RowBox[{"Arrow", "[", "pts_", "]"}], "\[RuleDelayed]", 
          RowBox[{"Arrow", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"x0", ",", "y0"}], "}"}], "+", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"x1", "-", "x0"}], ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"y1", "-", "y0"}], ")"}], "/", "a"}]}], "}"}], 
                " ", "#"}]}], ")"}], "&"}], "/@", "pts"}], "]"}]}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x0", ",", "x1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"y0", ",", "y1"}], "}"}]}], "}"}]}]}], "]"}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.685659056818038*^9, 3.6856590568228416`*^9}, {
  3.6856596905860653`*^9, 3.6856596930979137`*^9}, {3.71158480894562*^9, 
  3.711584812556574*^9}, {3.716815022316052*^9, 3.7168150314553003`*^9}},
 CellLabel->
  "In[406]:=",ExpressionUUID->"31437ba1-5fa8-499b-b0f0-50bb96e65965"]
}, Closed]],

Cell[CellGroupData[{

Cell["RealSimplify", "Subsubsection",
 CellDingbat->
  "\[Wolf]",ExpressionUUID->"dbc19b57-acbc-4764-acfc-8b642d35e469"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RealSimplify", "[", "foo_", "]"}], ":=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"foo", ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"_", "\[Element]", "Reals"}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.688571718778743*^9},
 CellLabel->
  "In[408]:=",ExpressionUUID->"89c82ee0-f421-4f1c-99c5-655222a347ff"]
}, Closed]],

Cell[CellGroupData[{

Cell["TD", "Subsubsection",
 CellDingbat->
  "\[Wolf]",ExpressionUUID->"2168dcc5-a5b3-4e49-9636-f2bbf8127085"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TD", "[", "list_List", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"$VersionNumber", "\[GreaterEqual]", "10"}], ",", 
     RowBox[{"TimeSeries", "[", "list", "]"}], ",", "list"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.683810799966097*^9, {3.711576183471154*^9, 3.7115761958352757`*^9}, {
   3.711576255257551*^9, 3.711576255834434*^9}},
 CellLabel->
  "In[409]:=",ExpressionUUID->"a027fd52-2fd4-4a4a-a22c-e9000fce978e"]
}, Closed]],

Cell[CellGroupData[{

Cell["CompoundAnd", "Subsubsection",
 CellDingbat->
  "\[Wolf]",ExpressionUUID->"7b4a298a-8bac-4698-9931-d6c4228734be"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CompoundAnd", "[", "list_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"And", "[", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"Sequence", "@@", "list"}], "]"}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[410]:=",ExpressionUUID->"17d323c9-412f-437e-926f-b78b9d3849ab"]
}, Closed]],

Cell[CellGroupData[{

Cell["CompoundOr", "Subsubsection",
 CellDingbat->
  "\[Wolf]",ExpressionUUID->"4d369ef8-a66c-4465-9714-81c6bc9efeaa"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CompoundOr", "[", "list_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"Or", "[", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"Sequence", "@@", "list"}], "]"}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[411]:=",ExpressionUUID->"571b7fd4-c4c8-48a6-9d5f-663a4f933956"]
}, Closed]],

Cell[CellGroupData[{

Cell["RuleListDistance", "Subsubsection",
 CellDingbat->"\[Wolf]",
 CellChangeTimes->{{3.710202543609768*^9, 3.710202544108862*^9}, 
   3.710250340695993*^9},ExpressionUUID->"757509bb-1f88-4aa4-b326-\
77026ab687ad"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleListDistance", "[", 
    RowBox[{
     RowBox[{"pop1_", "?", "NumericRuleListQ"}], ",", 
     RowBox[{"pop2_", "?", "NumericRuleListQ"}], ",", 
     RowBox[{"p_:", "\[Infinity]"}]}], "]"}], ":=", 
   RowBox[{"Norm", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Sort", "[", "pop1", "]"}], "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
      RowBox[{
       RowBox[{"Sort", "[", "pop2", "]"}], "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], ",", "p"}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.710202471671939*^9, 3.710202484218748*^9}, {
   3.710202549862443*^9, 3.7102025503409023`*^9}, {3.710250306821698*^9, 
   3.710250308509453*^9}, 3.7102503413027983`*^9},
 CellLabel->
  "In[412]:=",ExpressionUUID->"da91b5ef-3dad-4338-8a0a-c646bb7d2213"]
}, Closed]],

Cell[CellGroupData[{

Cell["NumericListQ", "Subsubsection",
 CellDingbat->"\[Wolf]",
 CellChangeTimes->{{3.710240465866942*^9, 
  3.7102404886090727`*^9}},ExpressionUUID->"c0f00bc7-81bd-4b3f-b9e8-\
16d753c3d27f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NumericListQ", "[", "x_", "]"}], ":=", 
   RowBox[{"VectorQ", "[", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"NumericQ", "[", "#", "]"}], "&"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.710240167648121*^9, {3.7102402302409277`*^9, 3.7102402318474283`*^9}, 
   3.7102404891077423`*^9, 3.7129116645300617`*^9},
 CellLabel->
  "In[413]:=",ExpressionUUID->"c4f1962e-5764-4f09-93b9-35b2328b2829"]
}, Closed]],

Cell[CellGroupData[{

Cell["NumericFlattenedListQ", "Subsubsection",
 CellDingbat->"\[Wolf]",
 CellChangeTimes->{
  3.710240822093184*^9},ExpressionUUID->"37ab3a9d-16b2-43d9-97ad-\
22413442c64a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NumericFlattenedListQ", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"ListQ", "[", "x", "]"}], ",", 
     RowBox[{"NumericListQ", "[", 
      RowBox[{"Flatten", "[", "x", "]"}], "]"}], ",", "False"}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.71024036596973*^9, 3.710240385704095*^9}, 
   3.71024053571239*^9, 3.7102408221019363`*^9, {3.71043503641862*^9, 
   3.710435091038265*^9}},
 CellLabel->
  "In[414]:=",ExpressionUUID->"d4cd5385-c5cd-430f-a5b8-b334e9efe2e5"]
}, Closed]],

Cell[CellGroupData[{

Cell["RuleListQ", "Subsubsection",
 CellDingbat->"\[Wolf]",
 CellChangeTimes->{
  3.710240029407032*^9},ExpressionUUID->"cbb74595-26b7-49af-82a5-\
ffa88d3111f3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleListQ", "[", "x_", "]"}], ":=", 
   RowBox[{"VectorQ", "[", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}], 
         "\[Equal]", "Rule"}], "||", 
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}], 
         "\[Equal]", "RuleDelayed"}]}], ")"}], "&"}]}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.6885717769255047`*^9, 3.688571776945587*^9}, {
   3.710239953188046*^9, 3.710239959113847*^9}, 3.710240031180707*^9, 
   3.7129116689417152`*^9},
 CellLabel->
  "In[415]:=",ExpressionUUID->"4e5fdc04-a3ee-4511-a14a-0e05c690c314"]
}, Closed]],

Cell[CellGroupData[{

Cell["RuleListListQ", "Subsubsection",
 CellChangeTimes->{{3.712911198903387*^9, 
  3.712911207732692*^9}},ExpressionUUID->"986f7d7f-5b80-4631-9510-\
fb250876c602"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleListListQ", "[", "x_", "]"}], ":=", 
   RowBox[{"VectorQ", "[", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"RuleListQ", "[", "#", "]"}], "&"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.712911212860231*^9, 3.712911226730488*^9}, 
   3.712911670102631*^9},
 CellLabel->
  "In[416]:=",ExpressionUUID->"6979bb77-75bf-4f7f-94a9-29ffcdd4a123"]
}, Closed]],

Cell[CellGroupData[{

Cell["NumericRuleListQ", "Subsubsection",
 CellDingbat->"\[Wolf]",
 CellChangeTimes->{
  3.710240048380145*^9},ExpressionUUID->"9a6ba6fb-3e40-42fc-a4b9-\
07587b703d25"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NumericRuleListQ", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"RuleListQ", "[", "x", "]"}], ",", 
     RowBox[{"VectorQ", "[", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"NumericQ", "[", 
         RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         "]"}], "&"}]}], "]"}], ",", "False"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.68857177699957*^9, 3.7102400599807787`*^9, {3.710240145164674*^9, 
   3.7102401508286953`*^9}, {3.710245761525463*^9, 3.7102457657528267`*^9}, {
   3.710438970991184*^9, 3.710439015004156*^9}, {3.710439063943872*^9, 
   3.71043910110842*^9}},
 CellLabel->
  "In[417]:=",ExpressionUUID->"cf160c6a-8484-4e56-9b84-5132297710fc"]
}, Closed]],

Cell[CellGroupData[{

Cell["RuleListTweak", "Subsubsection",
 CellDingbat->"\[Wolf]",
 CellChangeTimes->{
  3.7104969082128267`*^9},ExpressionUUID->"cf7e94f1-d30e-4145-bfbb-\
48be937a284f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RuleListTweak", "[", 
    RowBox[{
     RowBox[{"point_", "?", "RuleListQ"}], ",", "var_Symbol", ",", "h_"}], 
    "]"}], ":=", 
   RowBox[{"Append", "[", 
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{"point", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         "=!=", "var"}], "&"}]}], "]"}], ",", 
     RowBox[{"var", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"var", "/.", "point"}], ")"}], "+", "h"}], ")"}]}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RuleListTweak", "[", 
    RowBox[{
     RowBox[{"point_", "?", "RuleListQ"}], ",", "var_Subscript", ",", "h_"}], 
    "]"}], ":=", 
   RowBox[{"Append", "[", 
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{"point", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         "=!=", "var"}], "&"}]}], "]"}], ",", 
     RowBox[{"var", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"var", "/.", "point"}], ")"}], "+", "h"}], ")"}]}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RuleListTweak", "[", 
    RowBox[{
     RowBox[{"point_", "?", "RuleListQ"}], ",", "var_List", ",", "h_List"}], 
    "]"}], ":=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{"point", ",", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"var", ",", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
          "]"}]}], "&"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "/.", "point"}], ")"}], "+", 
          RowBox[{"h", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"var", ",", "#"}], "]"}], "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
           "\[RightDoubleBracket]"}]}], ")"}]}], "&"}], "/@", "var"}]}], 
    "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{
  3.688409481375136*^9, {3.688571718805376*^9, 3.6885717188261423`*^9}, {
   3.696164797413574*^9, 3.696164815757712*^9}, {3.696165297465616*^9, 
   3.696165302617202*^9}, {3.710245792245047*^9, 3.71024580759614*^9}, {
   3.710496908229487*^9, 3.710496908240161*^9}},
 CellLabel->
  "In[418]:=",ExpressionUUID->"162ea259-d218-49e2-bf7b-e9f6bce6d318"]
}, Closed]],

Cell[CellGroupData[{

Cell["RuleListAdd", "Subsubsection",
 CellDingbat->"\[Wolf]",
 CellChangeTimes->{3.710245934177114*^9, 
  3.710246289067247*^9},ExpressionUUID->"58e1e633-fe5d-4d3c-9b11-\
8c4e58e8844c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"RuleListAdd", "[", 
      RowBox[{
       RowBox[{"l1_", "?", "RuleListQ"}], ",", 
       RowBox[{"l2_", "?", "RuleListQ"}], ",", 
       RowBox[{"m2_:", "1"}], ",", 
       RowBox[{"m1_:", "1"}]}], "]"}], ":=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"e", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "\[Rule]", 
        RowBox[{
         RowBox[{"m1", "*", 
          RowBox[{
          "e", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "+", 
         
         RowBox[{"m2", "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
            "e", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "/.",
             "l2"}], ")"}]}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"e", ",", "l1"}], "}"}]}], "]"}]}], ";"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"RuleListAdd", "[", 
    RowBox[{
     RowBox[{"a_", "?", "RuleListQ"}], ",", 
     RowBox[{"b_", "?", "RuleListQ"}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Normal", "[", 
    RowBox[{"Merge", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], ",", "Total"}], "]"}], 
    "]"}]}]}]], "Code",
 CellChangeTimes->{
  3.688571718843539*^9, {3.7102458891085157`*^9, 3.710245934186613*^9}, {
   3.710440039449045*^9, 3.710440077873204*^9}, 3.7234791316989737`*^9},
 CellLabel->
  "In[421]:=",ExpressionUUID->"1a6452ed-75ea-4c27-82d9-85d5292300fb"]
}, Closed]],

Cell[CellGroupData[{

Cell["RuleListSubtract", "Subsubsection",
 CellDingbat->"\[Wolf]",
 CellChangeTimes->{
  3.710245934177114*^9, 3.710246289067247*^9, {3.75925569996496*^9, 
   3.759255700997251*^9}},ExpressionUUID->"add7cbe2-a15d-414a-9f7d-\
dd3b36252b31"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RuleListSubtract", "[", 
    RowBox[{
     RowBox[{"a_", "?", "RuleListQ"}], ",", 
     RowBox[{"b_", "?", "RuleListQ"}]}], "]"}], ":=", 
   RowBox[{"RuleListAdd", "[", 
    RowBox[{"a", ",", 
     RowBox[{"RuleListMultiply", "[", 
      RowBox[{"b", ",", 
       RowBox[{"-", "1"}]}], "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.688571718843539*^9, {3.7102458891085157`*^9, 3.710245934186613*^9}, {
   3.710440039449045*^9, 3.710440077873204*^9}, 3.7234791316989737`*^9, 
   3.7592558064478188`*^9, {3.759255992301937*^9, 3.759255993758088*^9}, {
   3.759256051338532*^9, 3.75925605153528*^9}, {3.7592561417901287`*^9, 
   3.759256161950488*^9}},
 CellLabel->
  "In[426]:=",ExpressionUUID->"7d4be5f3-48ed-4cf0-ad3c-dcc7dca4e64b"]
}, Closed]],

Cell[CellGroupData[{

Cell["RuleListMultiply", "Subsubsection",
 CellDingbat->"\[Wolf]",
 CellChangeTimes->{{3.72347931336963*^9, 
  3.723479318208311*^9}},ExpressionUUID->"9db61aaf-d555-4ada-b650-\
1011e65458ce"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RuleListMultiply", "[", 
    RowBox[{
     RowBox[{"a_", "?", "RuleListQ"}], ",", 
     RowBox[{"x_", "?", "NumericQ"}]}], "]"}], ":=", 
   RowBox[{"Normal", "[", 
    RowBox[{"Merge", "[", 
     RowBox[{"a", ",", 
      RowBox[{
       RowBox[{"x", "*", 
        RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
        "&"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RuleListMultiply", "[", 
    RowBox[{
     RowBox[{"x_", "?", "NumericQ"}], ",", 
     RowBox[{"a_", "?", "RuleListQ"}]}], "]"}], ":=", 
   RowBox[{"Normal", "[", 
    RowBox[{"Merge", "[", 
     RowBox[{"a", ",", 
      RowBox[{
       RowBox[{"x", "*", 
        RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
        "&"}]}], "]"}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.7234794521554813`*^9, 3.723479484306864*^9}, {
  3.723479574296317*^9, 3.723479600698317*^9}, {3.7234811617822742`*^9, 
  3.7234811688355923`*^9}},
 CellLabel->
  "In[422]:=",ExpressionUUID->"254b370f-5310-4803-9a48-0ddd4ebe581e"]
}, Closed]],

Cell[CellGroupData[{

Cell["NumericRuleListToNumericList", "Subsubsection",
 CellChangeTimes->{{3.759306972886874*^9, 
  3.759307004331427*^9}},ExpressionUUID->"be38bb34-4efd-4bbf-a3b3-\
fbf17f6fd155"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NumericRuleListToNumericList", "[", 
    RowBox[{
     RowBox[{"rl_", "?", "NumericRuleListQ"}], ",", "vars_List"}], "]"}], ":=", 
   RowBox[{"vars", "/.", "rl"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.759307022070628*^9},ExpressionUUID->"3ef8ad6f-3e09-4e28-912a-\
9c7818bffbc9"]
}, Closed]],

Cell[CellGroupData[{

Cell["InterpolatingFunctionTake", "Subsubsection",
 CellDingbat->"\[Wolf]",
 CellChangeTimes->{{3.711552490690751*^9, 
  3.711552496731229*^9}},ExpressionUUID->"4cc5017c-4f25-455f-a836-\
a40431f4d51e"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"based", " ", "on", " ", "code", " ", "by", " ", "MichaelE2"}], 
    " ", "<", 
    RowBox[{"https", ":"}]}], "//", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", "a"}], 
      "/", "152861"}], "/", "6358"}], ">"}]}], " ", "*)"}]], "Code",
 CellChangeTimes->{{3.711559867113413*^9, 3.71155987533477*^9}},
 CellLabel->
  "In[424]:=",ExpressionUUID->"3b2dcfe8-3773-49e3-9cd8-6031ff93b2fd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "ifnPart", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ifnPart", "[", "\"\<Domain\>\"", "]"}], "=", 
    RowBox[{"Sequence", "[", "1", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"bounding", " ", "box", " ", "for", " ", "domain"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ifnPart", "[", "\"\<X1\>\"", "]"}], "=", 
    RowBox[{"Sequence", "[", 
     RowBox[{"1", ",", "1"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "lower", " ", "bound", " ", "for", " ", "first", " ", "coordinate"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ifnPart", "[", "\"\<X2\>\"", "]"}], "=", 
    RowBox[{"Sequence", "[", 
     RowBox[{"1", ",", "2"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "upper", " ", "bound", " ", "for", " ", "first", " ", "coordinate"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ifnPart", "[", "\"\<Version\>\"", "]"}], "=", 
   RowBox[{"Sequence", "[", 
    RowBox[{"2", ",", "1"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ifnPart", "[", "\"\<Flags\>\"", "]"}], "=", 
    RowBox[{"Sequence", "[", 
     RowBox[{"2", ",", "2"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"flags", " ", "indicating", " ", 
     RowBox[{"properties", ":", 
      RowBox[{
       RowBox[{"bit", " ", "field", " ", "positions"}], "-", "inferred"}]}]}],
     ",", 
    RowBox[{
     RowBox[{
      RowBox[{"perhaps", " ", "mistaken", " ", "$extrapolation"}], "=", "0"}],
      ";", 
     RowBox[{
      RowBox[{
      "whether", " ", "to", " ", "warn", " ", "about", " ", "extrapolation", 
       " ", "$fullArrayBit"}], "=", "1"}], ";", 
     RowBox[{
      RowBox[{
      "interpolation", " ", "data", " ", "is", " ", "a", " ", "full", " ", 
       "array", " ", 
       RowBox[{"(", 
        RowBox[{"not", " ", "ragged"}], ")"}], " ", "$packed"}], "=", "2"}], 
     ";", 
     RowBox[{
      RowBox[{"packed", " ", "array", " ", "form", " ", 
       RowBox[{"(", 
        RowBox[{"??", "?"}], ")"}], " ", "$repeatedBit"}], "=", "4"}], ";", 
     RowBox[{
     "whether", " ", "repeated", " ", "abscissae", " ", "are", " ", 
      "permitted"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ifnPart", "[", "\"\<DerivativeOrder\>\"", "]"}], "=", 
    RowBox[{"Sequence", "[", 
     RowBox[{"2", ",", "3"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"max", " ", "derivative", " ", "order"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ifnPart", "[", "\"\<NGrid\>\"", "]"}], "=", 
    RowBox[{"Sequence", "[", 
     RowBox[{"2", ",", "4"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "number", " ", "of", " ", "points", " ", "in", " ", "each", " ", 
    "coordinate", " ", "grid"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ifnPart", "[", "\"\<InterpolationOrder\>\"", "]"}], "=", 
    RowBox[{"Sequence", "[", 
     RowBox[{"2", ",", "5"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"interpolation", " ", "order"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ifnPart", "[", "\"\<Derivative\>\"", "]"}], "=", 
    RowBox[{"Sequence", "[", 
     RowBox[{"2", ",", "6"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"derivative", " ", "to", " ", 
     RowBox[{"evaluate", ":", 
      RowBox[{
       RowBox[{"0", "--"}], ">", 
       RowBox[{"f", "[", "x", "]"}]}]}]}], ",", 
    RowBox[{
     RowBox[{"1", "--"}], ">", 
     RowBox[{
      RowBox[{"f", "'"}], "[", "x", "]"}]}], ",", "..."}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ifnPart", "[", "\"\<Periodic\>\"", "]"}], "=", 
   RowBox[{"Sequence", "[", 
    RowBox[{"2", ",", "7"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ifnPart", "[", "\"\<ExtrapolationHandler\>\"", "]"}], "=", 
   RowBox[{"Sequence", "[", 
    RowBox[{"2", ",", "10"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ifnPart", "[", "\"\<Coordinates\>\"", "]"}], "=", 
    RowBox[{"Sequence", "[", "3", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"list", " ", "of", " ", "lists"}], ",", 
    RowBox[{"abscissae", " ", "of", " ", "interpolation", " ", "grid"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ifnPart", "[", "\"\<InterpolationData\>\"", "]"}], "=", 
    RowBox[{"Sequence", "[", "4", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"interpolation", " ", "data", " ", 
    RowBox[{"(", 
     RowBox[{"values", " ", "or", " ", "coefficients"}], ")"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ifnPart", "[", "\"\<Offsets\>\"", "]"}], "=", 
    RowBox[{"Sequence", "[", 
     RowBox[{"4", ",", "2"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"offsets", " ", "in", " ", 
    RowBox[{"function", "/", "derivative"}], " ", "array", " ", 
    RowBox[{"(", "PackedArrayForm", ")"}]}], "*)"}]}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ifnPart", "[", "\"\<FlatData\>\"", "]"}], "=", 
    RowBox[{"Sequence", "[", 
     RowBox[{"4", ",", "3"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"flattened", " ", 
    RowBox[{"function", "/", "derivative"}], " ", "values", " ", 
    RowBox[{"(", "PackedArrayForm", ")"}]}], "*)"}]}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ifnPart", "[", "\"\<InterpolationStructure\>\"", "]"}], "=", 
    RowBox[{"Sequence", "[", "5", "]"}]}], ";", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"{", "Automatic", "}"}], ",", 
     RowBox[{"or", " ", "dense", " ", "output", " ", "interpolation", " ", 
      RowBox[{"structure", ":", 
       RowBox[{
       "list", " ", "of", " ", "types", " ", "for", " ", "each", " ", 
        RowBox[{"unit", "/", "subinterval"}]}]}]}]}], "*)"}], 
   RowBox[{
    RowBox[{"ifnPart", "[", "\"\<UnitIndices\>\"", "]"}], "=", 
    RowBox[{"Sequence", "[", 
     RowBox[{"5", ",", "1", ",", "1"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"dense", " ", 
    RowBox[{"output", ":", 
     RowBox[{"Indices", " ", 
      RowBox[{"(", 
       RowBox[{"to", " ", "grid"}], ")"}], " ", "for", " ", "corresponding", 
      " ", "coefficients"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ifnPart", "[", "\"\<UnitTypes\>\"", "]"}], "=", 
    RowBox[{"Sequence", "[", 
     RowBox[{"5", ",", "1", ",", "2"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"dense", " ", "output", " ", 
    RowBox[{"types", ":", 
     RowBox[{
     "Automatic", "|", "NDSolve`CubicHermite", "|", "NDSolve`LocalSeries", 
      "|", "ChebyshevT"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ifnPart", "[", "\"\<Properties\>\"", "]"}], "=", 
    RowBox[{"Cases", "[", 
     RowBox[{
      RowBox[{"DownValues", "[", "ifnPart", "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Verbatim", "[", "ifnPart", "]"}], "[", "prop_", "]"}], 
       "\[RuleDelayed]", "prop"}], ",", "Infinity"}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ifnPart", "[", 
    RowBox[{"\"\<ValidPartQ\>\"", ",", 
     RowBox[{"\"\<Chebyshev\>\"", "|", "\"\<Local Taylor Series\>\""}], ",", 
     RowBox[{"\"\<UnitIndices\>\"", "|", "\"\<UnitTypes\>\""}], ",", "_"}], 
    "]"}], ":=", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ifnPart", "[", 
    RowBox[{"\"\<ValidPartQ\>\"", ",", "_", ",", 
     RowBox[{"\"\<UnitIndices\>\"", "|", "\"\<UnitTypes\>\""}], ",", "_"}], 
    "]"}], ":=", "False"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ifnPart", "[", 
    RowBox[{"\"\<ValidPartQ\>\"", ",", "\"\<Hermite\>\"", ",", 
     RowBox[{"\"\<Offsets\>\"", "|", "\"\<FlatData\>\""}], ",", 
     "Developer`PackedArrayForm"}], "]"}], ":=", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ifnPart", "[", 
    RowBox[{"\"\<ValidPartQ\>\"", ",", "_", ",", 
     RowBox[{"\"\<Offsets\>\"", "|", "\"\<FlatData\>\""}], ",", "_"}], "]"}], 
   ":=", "False"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ifnPart", "[", 
     RowBox[{
     "\"\<ValidPartQ\>\"", ",", "method_String", ",", "part_String", ",", 
      "_"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"MemberQ", "[", 
      RowBox[{"method", ",", 
       RowBox[{
       "\"\<Chebyshev\>\"", "|", "\"\<Local Taylor Series\>\"", "|", 
        "\"\<Hermite\>\""}]}], "]"}], "&&", 
     RowBox[{"MemberQ", "[", 
      RowBox[{"part", ",", 
       RowBox[{"ifnPart", "[", "\"\<Properties\>\"", "]"}]}], "]"}]}]}], ":=",
    "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ifnPart", "[", 
    RowBox[{"\"\<ValidPartQ\>\"", ",", "_", ",", "_", ",", "_"}], "]"}], ":=",
    "False"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ifnPart", "[", 
     RowBox[{"if_InterpolatingFunction", ",", "part_String"}], "]"}], "/;", 
    RowBox[{"ifnPart", "[", 
     RowBox[{"\"\<ValidPartQ\>\"", ",", 
      RowBox[{"if", "[", "\"\<InterpolationMethod\>\"", "]"}], ",", "part", 
      ",", 
      RowBox[{"if", "\[LeftDoubleBracket]", 
       RowBox[{"4", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}]}], ":=", 
   RowBox[{"if", "~", "Part", "~", 
    RowBox[{"ifnPart", "[", "part", "]"}]}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.711106280229642*^9, 3.7111062802309237`*^9}, {
  3.711115116196419*^9, 3.7111151240704603`*^9}, {3.71111671407778*^9, 
  3.71111674710261*^9}, {3.711551507534874*^9, 3.711551536381651*^9}},
 CellLabel->
  "In[425]:=",ExpressionUUID->"44ace925-65fd-4f01-8885-d45bb7b9c8ac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dupeLast", "[", "list_", "]"}], ":=", 
    RowBox[{"Append", "[", 
     RowBox[{"list", ",", 
      RowBox[{"Last", "@", "list"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"iDataTake", "[", 
    RowBox[{
     RowBox[{"\"\<Local Taylor series\>\"", "|", "\"\<Chebyshev\>\""}], ",", 
     "data_", ",", "span_"}], "]"}], ":=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{"First", "@", "span"}], ",", 
        RowBox[{"1", ";;", "2"}]}], "\[RightDoubleBracket]"}], "}"}], ",", 
     RowBox[{"data", "\[LeftDoubleBracket]", 
      RowBox[{
       RowBox[{
        RowBox[{"First", "@", "span"}], "+", "1"}], ";;", 
       RowBox[{"Last", "@", "span"}]}], "\[RightDoubleBracket]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"iDataTake", "[", 
    RowBox[{"\"\<Hermite\>\"", ",", 
     RowBox[{"data", ":", 
      RowBox[{"{", 
       RowBox[{"Developer`PackedArrayForm", ",", "_", ",", "_"}], "}"}]}], 
     ",", 
     RowBox[{"span", ":", 
      RowBox[{"{", 
       RowBox[{"s1_", ",", "s2_"}], "}"}]}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"ReplacePart", "[", 
    RowBox[{"data", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Rest", "@", 
         RowBox[{"{", 
          RowBox[{"ifnPart", "[", "\"\<Offsets\>\"", "]"}], "}"}]}], 
        "\[Rule]", 
        RowBox[{
         RowBox[{"data", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", 
           RowBox[{"s1", ";;", 
            RowBox[{"s2", "+", "1"}]}]}], "\[RightDoubleBracket]"}], "-", 
         RowBox[{"data", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "s1"}], "\[RightDoubleBracket]"}]}]}], ",", 
       RowBox[{
        RowBox[{"Rest", "@", 
         RowBox[{"{", 
          RowBox[{"ifnPart", "[", "\"\<FlatData\>\"", "]"}], "}"}]}], 
        "\[Rule]", 
        RowBox[{"data", "\[LeftDoubleBracket]", 
         RowBox[{"3", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"data", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "s1"}], "\[RightDoubleBracket]"}], "+", "1"}], 
           ";;", 
           RowBox[{"data", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", 
             RowBox[{"s2", "+", "1"}]}], "\[RightDoubleBracket]"}]}]}], 
         "\[RightDoubleBracket]"}]}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"iDataTake", "[", 
     RowBox[{"\"\<Hermite\>\"", ",", 
      RowBox[{"data", ":", 
       RowBox[{"{", "__List", "}"}]}], ",", "span_"}], "]"}], ":=", 
    RowBox[{"data", "\[LeftDoubleBracket]", 
     RowBox[{"Span", "@@", "span"}], "\[RightDoubleBracket]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"iStructureTake", "[", 
    RowBox[{
     RowBox[{"\"\<Local Taylor series\>\"", "|", "\"\<Chebyshev\>\""}], ",", 
     "structure_", ",", "span_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"ReplacePart", "[", 
    RowBox[{"structure", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Rest", "@", 
         RowBox[{"{", 
          RowBox[{"ifnPart", "[", "\"\<UnitIndices\>\"", "]"}], "}"}]}], 
        "\[Rule]", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", "1", "}"}], "}"}], ",", 
          RowBox[{
           RowBox[{"1", "+", 
            RowBox[{"structure", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{
                RowBox[{"##2", "&"}], "@", 
                RowBox[{"ifnPart", "[", "\"\<UnitIndices\>\"", "]"}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"First", "@", "span"}], "+", "1"}], ";;", 
                RowBox[{"Last", "@", "span"}]}]}], "]"}], "]"}], "-", 
            RowBox[{"structure", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{
                RowBox[{"##2", "&"}], "@", 
                RowBox[{"ifnPart", "[", "\"\<UnitIndices\>\"", "]"}]}], ",", 
               RowBox[{"First", "@", "span"}], ",", 
               RowBox[{"-", "1"}]}], "]"}], "]"}]}], "//", "dupeLast"}]}], 
         "]"}]}], ",", 
       RowBox[{
        RowBox[{"Rest", "@", 
         RowBox[{"{", 
          RowBox[{"ifnPart", "[", "\"\<UnitTypes\>\"", "]"}], "}"}]}], 
        "\[Rule]", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", "Automatic", "}"}], ",", 
          RowBox[{
           RowBox[{"structure", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{
               RowBox[{"##2", "&"}], "@", 
               RowBox[{"ifnPart", "[", "\"\<UnitTypes\>\"", "]"}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"First", "@", "span"}], "+", "1"}], ";;", 
               RowBox[{"Last", "@", "span"}]}]}], "]"}], "]"}], "//", 
           "dupeLast"}]}], "]"}]}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"iStructureTake", "[", 
     RowBox[{"\"\<Hermite\>\"", ",", "structure_", ",", "span_"}], "]"}], ":=",
     "structure"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InterpolatingFunctionTake", "[", 
     RowBox[{"if_InterpolatingFunction", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"tmin_", "?", "NumericQ"}], ",", 
        RowBox[{"tmax_", "?", "NumericQ"}]}], "}"}]}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "@", 
      RowBox[{"if", "[", "\"\<Domain\>\"", "]"}]}], "\[Equal]", "1"}]}], ":=", 
   RowBox[{"Module", "[", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"coords", ",", 
       RowBox[{"newif", "=", 
        RowBox[{"Hold", "@@", "if"}]}], ",", "span", ",", "method"}], "}"}], 
     ",", "\n", "\n", 
     RowBox[{
      RowBox[{"method", "=", 
       RowBox[{"if", "[", "\"\<InterpolationMethod\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"coords", "=", 
       RowBox[{"First", "@", 
        RowBox[{"if", "[", "\"\<Coordinates\>\"", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"span", "=", 
       RowBox[{"Clip", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"SparseArray", "[", 
             RowBox[{
              RowBox[{"UnitStep", "[", 
               RowBox[{"coords", "-", "tmin"}], "]"}], " ", 
              RowBox[{"UnitStep", "[", 
               RowBox[{"tmax", "-", "coords"}], "]"}]}], "]"}], "[", 
            "\"\<AdjacencyLists\>\"", "]"}], "\[LeftDoubleBracket]", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "1"}]}], "}"}], "\[RightDoubleBracket]"}], "+", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"Length", "@", "coords"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"newif", "\[LeftDoubleBracket]", 
        RowBox[{"ifnPart", "[", "\"\<Domain\>\"", "]"}], 
        "\[RightDoubleBracket]"}], "=", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"tmin", ",", "tmax"}], "}"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"newif", "\[LeftDoubleBracket]", 
        RowBox[{"ifnPart", "[", "\"\<NGrid\>\"", "]"}], 
        "\[RightDoubleBracket]"}], "=", 
       RowBox[{"1", "+", 
        RowBox[{"Differences", "@", "span"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"newif", "\[LeftDoubleBracket]", 
        RowBox[{"ifnPart", "[", "\"\<Coordinates\>\"", "]"}], 
        "\[RightDoubleBracket]"}], "=", 
       RowBox[{"Developer`ToPackedArray", "@", 
        RowBox[{"{", 
         RowBox[{"coords", "\[LeftDoubleBracket]", 
          RowBox[{"Span", "@@", "span"}], "\[RightDoubleBracket]"}], 
         "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"newif", "\[LeftDoubleBracket]", 
        RowBox[{"ifnPart", "[", "\"\<InterpolationData\>\"", "]"}], 
        "\[RightDoubleBracket]"}], "=", 
       RowBox[{"iDataTake", "[", 
        RowBox[{"method", ",", 
         RowBox[{"if", "\[LeftDoubleBracket]", 
          RowBox[{"ifnPart", "[", "\"\<InterpolationData\>\"", "]"}], 
          "\[RightDoubleBracket]"}], ",", "span"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"newif", "\[LeftDoubleBracket]", 
        RowBox[{"ifnPart", "[", "\"\<InterpolationStructure\>\"", "]"}], 
        "\[RightDoubleBracket]"}], "=", 
       RowBox[{"iStructureTake", "[", 
        RowBox[{"method", ",", 
         RowBox[{"if", "\[LeftDoubleBracket]", 
          RowBox[{"ifnPart", "[", "\"\<InterpolationStructure\>\"", "]"}], 
          "\[RightDoubleBracket]"}], ",", "span"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"InterpolatingFunction", "@@", "newif"}]}]}], "\n", "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.711105644934021*^9, 3.7111056449346*^9}, 
   3.711106077122067*^9, {3.71111404900695*^9, 3.711114057957386*^9}, {
   3.711114090587434*^9, 3.711114120037383*^9}, {3.711114153755972*^9, 
   3.711114154935883*^9}, {3.711551540572699*^9, 3.7115517571953697`*^9}, {
   3.711552557274246*^9, 3.711552586371377*^9}},
 CellLabel->
  "In[451]:=",ExpressionUUID->"08ad98d7-7b39-4d8d-a745-5cc81f20119d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Slice", "Subsubsection",
 CellDingbat->"\[Wolf]",
 CellChangeTimes->{
  3.693869696796332*^9},ExpressionUUID->"2272c246-6e3f-44f8-a579-\
3c020e95e38c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Slice", "[", 
     RowBox[{"sol_", ",", 
      RowBox[{"t_", "?", "NumericQ"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"Which", "[", "\n", "\t", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"InterpolatingFunction", ",", "TemporalData"}], "}"}], ",", 
          RowBox[{"Head", "[", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           "]"}]}], "]"}], ",", "\n", "\t", 
        RowBox[{"ReplacePart", "[", 
         RowBox[{"#", ",", 
          RowBox[{"2", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "[", "t", "]"}], "/.", "#"}], ")"}]}]}], "]"}], "\n", ",", "\n",
         "\t", 
        RowBox[{
         RowBox[{"Head", "[", 
          RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
           "]"}], "===", "List"}], ",", "\n", "\t", 
        RowBox[{"ReplacePart", "[", 
         RowBox[{"#", ",", 
          RowBox[{"2", "\[Rule]", 
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"sol", "\[LeftDoubleBracket]", 
               RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "\[Equal]", "t"}], "&"}], ",", "1"}], "]"}], 
            "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}]}], "]"}], 
        "\n", ",", "\n", "\t", "Else", ",", "#"}], "\n", "]"}], "&"}], "/@", 
     "sol"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Slice", "[", 
   RowBox[{"sol_", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t1_", "?", "NumericQ"}], ",", 
      RowBox[{"t2_", "?", "NumericQ"}]}], "}"}]}], "]"}], ":=", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"Which", "[", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"Head", "[", 
        RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        "]"}], "===", "InterpolatingFunction"}], ",", "\n", "\t", 
      RowBox[{"ReplacePart", "[", 
       RowBox[{"#", ",", 
        RowBox[{"2", "\[Rule]", 
         RowBox[{"InterpolatingFunctionTake", "[", 
          RowBox[{
           RowBox[{
           "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
           RowBox[{"{", 
            RowBox[{"t1", ",", "t2"}], "}"}]}], "]"}]}]}], "]"}], "\n", ",", 
      "\n", "\t", 
      RowBox[{
       RowBox[{"Head", "[", 
        RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        "]"}], "===", "List"}], ",", "\n", "\t", 
      RowBox[{"ReplacePart", "[", 
       RowBox[{"#", ",", 
        RowBox[{"2", "\[Rule]", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"sol", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{
            RowBox[{"t1", "\[LessEqual]", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "\[LessEqual]", "t2"}], "&"}]}], "]"}]}]}], "]"}], "\n", ",", 
      "\n", "\t", 
      RowBox[{
       RowBox[{"Head", "[", 
        RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        "]"}], "===", "TemporalData"}], ",", "\n", "\t", 
      RowBox[{"ReplacePart", "[", 
       RowBox[{"#", ",", 
        RowBox[{"2", "\[Rule]", 
         RowBox[{"TimeSeries", "[", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               "[", "\"\<Times\>\"", "]"}], "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"t1", "+", "1"}], ";;", 
               RowBox[{"t2", "+", "1"}]}], "\[RightDoubleBracket]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               "[", "\"\<Values\>\"", "]"}], "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"t1", "+", "1"}], ";;", 
               RowBox[{"t2", "+", "1"}]}], "\[RightDoubleBracket]"}]}], "}"}],
            "]"}], "]"}]}]}], "]"}], "\n", ",", "\n", "\t", "Else", ",", 
      "#"}], "\n", "]"}], "&"}], "/@", "sol"}]}]}], "Code",
 CellChangeTimes->{
  3.688409481882379*^9, 3.6938696968207693`*^9, {3.6938697976200542`*^9, 
   3.693869812035348*^9}, {3.696601015244042*^9, 3.696601074234323*^9}, {
   3.696601503188765*^9, 3.696601533763588*^9}, {3.696601624914488*^9, 
   3.6966016789808607`*^9}, {3.69660173166234*^9, 3.69660178342656*^9}, {
   3.696601824639659*^9, 3.6966018328300667`*^9}, {3.696602382145833*^9, 
   3.696602399274035*^9}, {3.696602477603319*^9, 3.6966024903611097`*^9}, {
   3.696604793175268*^9, 3.696604799724617*^9}, {3.6966056399534187`*^9, 
   3.69660564853788*^9}, {3.711554722778556*^9, 3.711554725883841*^9}, {
   3.7115618775583572`*^9, 3.711561878193462*^9}, {3.7115713322303267`*^9, 
   3.711571346080482*^9}, {3.711576288426737*^9, 3.711576308219507*^9}, {
   3.711576394583687*^9, 3.7115764907296457`*^9}, {3.7115777592517757`*^9, 
   3.711577761564786*^9}, {3.71157780320555*^9, 3.711577809217905*^9}, {
   3.71157865951108*^9, 3.711578733694038*^9}, {3.711579169167437*^9, 
   3.711579183103889*^9}},
 CellLabel->
  "In[458]:=",ExpressionUUID->"6d1f288d-c23c-419c-b3e5-f7b69b515f09"]
}, Closed]],

Cell[CellGroupData[{

Cell["FinalSlice", "Subsubsection",
 CellDingbat->"\[Wolf]",
 CellChangeTimes->{
  3.693869717797543*^9},ExpressionUUID->"0f4ee5f0-78d3-438b-9e68-\
f44b978cad2c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FinalSlice", "[", 
    RowBox[{"sol_", ",", 
     RowBox[{"n", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "NumericQ"}], ")"}], ":", "0"}]}], "]"}], ":=", "\n",
    "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"n", "\[Equal]", "0"}], ",", "\n", "\t\t", 
     RowBox[{"Return", "[", 
      RowBox[{"Slice", "[", 
       RowBox[{"sol", ",", 
        RowBox[{"FinalTime", "[", "sol", "]"}]}], "]"}], "]"}], ",", "\n", 
     "\t\t", 
     RowBox[{"Return", "[", 
      RowBox[{"Slice", "[", 
       RowBox[{"sol", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"FinalTime", "[", "sol", "]"}], "-", "n"}], ",", 
          RowBox[{"FinalTime", "[", "sol", "]"}]}], "}"}]}], "]"}], "]"}]}], 
    "\n", "\t", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.688571719062545*^9, 3.688571719147092*^9}, {
   3.6885717770947104`*^9, 3.688571777188101*^9}, {3.688571807872262*^9, 
   3.688571807944956*^9}, 3.693869717830854*^9, {3.696590991706997*^9, 
   3.696591092322603*^9}, {3.696593929769368*^9, 3.6965939603615217`*^9}, {
   3.696595255552868*^9, 3.696595258855796*^9}, {3.696598655322014*^9, 
   3.6965986963922977`*^9}, {3.696602977389617*^9, 3.696603069211898*^9}, 
   3.696603799462949*^9, {3.696603840423477*^9, 3.6966038439914093`*^9}, {
   3.696603980481254*^9, 3.696603983471485*^9}, 3.696604029081642*^9, {
   3.696604095553693*^9, 3.696604105887484*^9}, {3.696604289595524*^9, 
   3.696604314905676*^9}, {3.696604985742319*^9, 3.696604985884633*^9}, {
   3.696605727346181*^9, 3.69660572752081*^9}},
 CellLabel->
  "In[460]:=",ExpressionUUID->"8af99e05-5103-47fc-ba8e-67543d0fb65d"]
}, Closed]],

Cell[CellGroupData[{

Cell["InitialSlice", "Subsubsection",
 CellDingbat->"\[Wolf]",
 CellChangeTimes->{
  3.693869710362833*^9},ExpressionUUID->"6778b621-baf4-4297-8da5-\
95e0d9b62367"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"InitialSlice", "[", 
    RowBox[{"sol_", ",", 
     RowBox[{"n", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "NumericQ"}], ")"}], ":", "0"}]}], "]"}], ":=", "\n",
    "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"n", "\[Equal]", "0"}], ",", "\n", "\t\t", 
     RowBox[{"Return", "[", 
      RowBox[{"Slice", "[", 
       RowBox[{"sol", ",", 
        RowBox[{
         RowBox[{"InitialTime", "[", "sol", "]"}], "+", 
         RowBox[{"10.", "^", 
          RowBox[{"-", "100"}]}]}]}], "]"}], "]"}], ",", "\n", "\t\t", 
     RowBox[{"Return", "[", 
      RowBox[{"Slice", "[", 
       RowBox[{"sol", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"InitialTime", "[", "sol", "]"}], "+", 
           RowBox[{"10.", "^", 
            RowBox[{"-", "100"}]}]}], ",", 
          RowBox[{
           RowBox[{"InitialTime", "[", "sol", "]"}], "+", "n"}]}], "}"}]}], 
       "]"}], "]"}]}], "\n", "\t", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.6885717191657867`*^9, 3.688571719200466*^9}, {
   3.6885717772152452`*^9, 3.688571777239335*^9}, {3.6885718079688263`*^9, 
   3.688571808054414*^9}, 3.693869710387249*^9, {3.696590926001998*^9, 
   3.6965909727059917`*^9}, {3.696592651554957*^9, 3.696592708155037*^9}, {
   3.696592834284741*^9, 3.696592894244049*^9}, {3.6965938846261377`*^9, 
   3.696593923945304*^9}, {3.6965951944892673`*^9, 3.696595203838542*^9}, {
   3.696598417000312*^9, 3.6965984611169662`*^9}, {3.696598679711795*^9, 
   3.696598681976096*^9}, {3.696603073237365*^9, 3.6966031208358183`*^9}, {
   3.696603357046036*^9, 3.696603362909396*^9}, {3.6966037924807873`*^9, 
   3.696603834751506*^9}, 3.6966042364273252`*^9, {3.696604311450961*^9, 
   3.6966043125856237`*^9}, {3.696604978565135*^9, 3.696604978634736*^9}, {
   3.696605729736561*^9, 3.696605729912896*^9}, {3.739574335626891*^9, 
   3.73957434417268*^9}, {3.739574380930203*^9, 3.739574384029958*^9}, 
   3.7550271865381403`*^9},ExpressionUUID->"8018618c-895d-40c9-a691-\
62927dccccf0"]
}, Closed]],

Cell[CellGroupData[{

Cell["FinalDerivatives", "Subsubsection",
 CellDingbat->
  "\[Wolf]",ExpressionUUID->"5b9f956d-b9a1-4ff3-9967-3ca5fb1bd1ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FinalDerivatives", "[", 
   RowBox[{"sol_", ",", 
    RowBox[{"dt", ":", 
     RowBox[{"(", 
      RowBox[{"_", "?", "NumericQ"}], ")"}], ":", "0"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "res", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"dt", "\[Equal]", "0"}], ",", "\n", "\t\t", 
       RowBox[{"res", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Which", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "]"}], "===", "InterpolatingFunction"}], ",", "\n", "\t\t\t", 
            RowBox[{"ReplacePart", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "\[Rule]", 
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   "'"}]}], ",", 
                RowBox[{"2", "\[Rule]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "'"}], "[", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1", ",", "1", ",", "2"}], 
                    "\[RightDoubleBracket]"}], "]"}], "/.", "#"}], ")"}]}]}], 
               "}"}]}], "]"}], "\n", "\t\t\t", 
            RowBox[{"(*", 
             RowBox[{"ReplacePart", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"2", "\[Rule]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "'"}], "[", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1", ",", "1", ",", "2"}], 
                    "\[RightDoubleBracket]"}], "]"}], "/.", "#"}], ")"}]}], 
                "}"}]}], "]"}], "*)"}], "\n", "\t\t", ",", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "]"}], "===", "List"}], ",", "\n", "\t\t\t", 
            RowBox[{"ReplacePart", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "\[Rule]", 
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   "'"}]}], ",", 
                RowBox[{"2", "\[Rule]", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "1"}], ",", "2"}], "\[RightDoubleBracket]"}],
                     "-", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "2"}], ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "\[RightDoubleBracket]"}],
                     "-", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "2"}], ",", "1"}], 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}]}], "}"}]}], "]"}], 
            "\n", "\t\t\t", 
            RowBox[{"(*", 
             RowBox[{"ReplacePart", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"2", "\[Rule]", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "1"}], ",", "2"}], "\[RightDoubleBracket]"}],
                     "-", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "2"}], ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "\[RightDoubleBracket]"}],
                     "-", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "2"}], ",", "1"}], 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}], "}"}]}], "]"}], 
             "*)"}], "\n", "\t\t", ",", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "]"}], "===", "TemporalData"}], ",", "\n", "\t\t\t", 
            RowBox[{"ReplacePart", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "\[Rule]", 
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   "'"}]}], ",", 
                RowBox[{"2", "\[Rule]", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Values\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Values\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "2"}], "\[RightDoubleBracket]"}]}], ")"}], 
                  "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Times\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Times\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "2"}], "\[RightDoubleBracket]"}]}], 
                   ")"}]}]}]}], "}"}]}], "]"}], "\n", "\t\t\t", 
            RowBox[{"(*", 
             RowBox[{"ReplacePart", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"2", "\[Rule]", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Values\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Values\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "2"}], "\[RightDoubleBracket]"}]}], ")"}], 
                  "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Times\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Times\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "2"}], "\[RightDoubleBracket]"}]}], 
                   ")"}]}]}], "}"}]}], "]"}], "*)"}], "\n", "\t\t", ",", "\n",
             "\t\t\t", "Else", ",", "#"}], "\n", "\t\t", "]"}], "&"}], "/@", 
         "sol"}]}], "\n", "\t", ",", "\n", "\t\t", 
       RowBox[{"res", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Which", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "]"}], "===", "InterpolatingFunction"}], ",", "\n", "\t\t\t", 
            RowBox[{"ReplacePart", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "\[Rule]", 
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   "'"}]}], ",", 
                RowBox[{
                 RowBox[{"2", "\[Rule]", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "[", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1", ",", "1", ",", "2"}], 
                    "\[RightDoubleBracket]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "[", 
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1", ",", "1", ",", "2"}], 
                    "\[RightDoubleBracket]"}], "-", "dt"}], "]"}]}], ")"}], 
                   "/", "dt"}]}], "/.", "#"}]}], "}"}]}], "]"}], "\n", 
            "\t\t\t", 
            RowBox[{"(*", 
             RowBox[{"ReplacePart", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"2", "\[Rule]", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "[", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1", ",", "1", ",", "2"}], 
                    "\[RightDoubleBracket]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "[", 
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1", ",", "1", ",", "2"}], 
                    "\[RightDoubleBracket]"}], "-", "dt"}], "]"}]}], ")"}], 
                   "/", "dt"}]}], "/.", "#"}], "}"}]}], "]"}], "*)"}], "\n", 
            "\t\t", ",", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "]"}], "===", "List"}], ",", "\n", "\t\t\t", 
            RowBox[{"ReplacePart", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "\[Rule]", 
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   "'"}]}], ",", 
                RowBox[{"2", "\[Rule]", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "1"}], ",", "2"}], "\[RightDoubleBracket]"}],
                     "-", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "dt"}], ")"}]}], ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "\[RightDoubleBracket]"}],
                     "-", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "dt"}], ")"}]}], ",", "1"}], 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}]}], "}"}]}], "]"}], 
            "\n", "\t\t\t", 
            RowBox[{"(*", 
             RowBox[{"ReplacePart", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"2", "\[Rule]", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "1"}], ",", "2"}], "\[RightDoubleBracket]"}],
                     "-", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "dt"}], ")"}]}], ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "\[RightDoubleBracket]"}],
                     "-", 
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "dt"}], ")"}]}], ",", "1"}], 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}], "}"}]}], "]"}], 
             "*)"}], "\n", "\t\t", ",", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{
              "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "]"}], "===", "TemporalData"}], ",", "\n", "\t\t\t", 
            RowBox[{"ReplacePart", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "\[Rule]", 
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   "'"}]}], ",", 
                RowBox[{"2", "\[Rule]", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Values\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Values\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "dt"}], ")"}]}], 
                    "\[RightDoubleBracket]"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Times\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Times\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "dt"}], ")"}]}], 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}]}], "}"}]}], "]"}], 
            "\n", "\t\t\t", 
            RowBox[{"(*", 
             RowBox[{"ReplacePart", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"2", "\[Rule]", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Values\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Values\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "dt"}], ")"}]}], 
                    "\[RightDoubleBracket]"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Times\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<Times\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "dt"}], ")"}]}], 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}], "}"}]}], "]"}], 
             "*)"}], "\n", "\t\t", ",", "\n", "\t\t\t", "Else", ",", "#"}], 
           "\n", "\t\t", "]"}], "&"}], "/@", "sol"}]}]}], "\n", "\t", "]"}], 
     ";", "\n", "\t", 
     RowBox[{"Return", "[", "res", "]"}]}]}], "\n", "]"}]}]], "Code",
 CellChangeTimes->{{3.6885717192202168`*^9, 3.6885717193028183`*^9}, {
   3.688571777267274*^9, 3.688571777296155*^9}, {3.688571808081353*^9, 
   3.688571808109118*^9}, {3.696590077606003*^9, 3.6965901903838053`*^9}, 
   3.696590327289241*^9, {3.69659040450349*^9, 3.696590538232264*^9}, {
   3.6965905977709293`*^9, 3.696590639500061*^9}, {3.696590716489375*^9, 
   3.696590744177958*^9}, {3.696590778012137*^9, 3.696590818516485*^9}, {
   3.696591190718431*^9, 3.6965911981404448`*^9}, {3.696591576063525*^9, 
   3.6965916224868603`*^9}, {3.696591703887327*^9, 3.696591705727127*^9}, {
   3.6965918125357323`*^9, 3.6965918766180363`*^9}, {3.6965919654659433`*^9, 
   3.696591982672152*^9}, {3.6965939839160748`*^9, 3.6965940017734528`*^9}, 
   3.696597401027027*^9, {3.696604430959165*^9, 3.6966044379479*^9}, {
   3.722038291330578*^9, 3.722038341323505*^9}, {3.722039357736128*^9, 
   3.7220393970921097`*^9}},
 CellLabel->
  "In[462]:=",ExpressionUUID->"30b00826-7b67-4a64-98e6-eaaf2e957a06"]
}, Closed]],

Cell[CellGroupData[{

Cell["InitialTime", "Subsubsection",
 CellDingbat->"\[Wolf]",
 CellChangeTimes->{
  3.693870054628004*^9},ExpressionUUID->"9294cf2e-5be7-4cd7-b934-\
40d4e5a604b2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"InitialTime", "[", "sol_", "]"}], ":=", 
   RowBox[{"Which", "[", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Head", "[", 
       RowBox[{"sol", "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], "===", 
      "InterpolatingFunction"}], ",", 
     RowBox[{"sol", "\[LeftDoubleBracket]", 
      RowBox[{"1", ",", "2", ",", "1", ",", "1", ",", "1"}], 
      "\[RightDoubleBracket]"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Head", "[", 
       RowBox[{"sol", "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], "===", 
      "List"}], ",", 
     RowBox[{"sol", "\[LeftDoubleBracket]", 
      RowBox[{"1", ",", "2", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}], 
     ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Head", "[", 
       RowBox[{"sol", "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], "===", 
      "TemporalData"}], ",", 
     RowBox[{
      RowBox[{"sol", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "[", 
      "\"\<FirstTime\>\"", "]"}]}], "\n", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.6885717773150377`*^9, 3.68857177734839*^9}, {
   3.688571808132567*^9, 3.688571808156169*^9}, 3.693870054652923*^9, {
   3.696593053452365*^9, 3.696593081740223*^9}},
 CellLabel->
  "In[463]:=",ExpressionUUID->"3c6e4a63-ac34-4438-a90f-3c76391ed5c3"]
}, Closed]],

Cell[CellGroupData[{

Cell["FinalTime", "Subsubsection",
 CellDingbat->"\[Wolf]",
 CellChangeTimes->{
  3.693870062711915*^9},ExpressionUUID->"b60bf42e-b7b5-4a26-950e-\
1d733b8ee6ac"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FinalTime", "[", "sol_", "]"}], ":=", 
   RowBox[{"Which", "[", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Head", "[", 
       RowBox[{"sol", "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], "===", 
      "InterpolatingFunction"}], ",", 
     RowBox[{"sol", "\[LeftDoubleBracket]", 
      RowBox[{"1", ",", "2", ",", "1", ",", "1", ",", "2"}], 
      "\[RightDoubleBracket]"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Head", "[", 
       RowBox[{"sol", "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], "===", 
      "List"}], ",", 
     RowBox[{"sol", "\[LeftDoubleBracket]", 
      RowBox[{"1", ",", "2", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "\[RightDoubleBracket]"}], ",", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"Head", "[", 
       RowBox[{"sol", "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], "===", 
      "TemporalData"}], ",", 
     RowBox[{
      RowBox[{"sol", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "[", 
      "\"\<LastTime\>\"", "]"}]}], "\n", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.688571777365953*^9, 3.688571777400709*^9}, {
   3.688571808180593*^9, 3.6885718082039022`*^9}, 3.693870062738048*^9, {
   3.696593091772633*^9, 3.696593117548478*^9}},
 CellLabel->
  "In[464]:=",ExpressionUUID->"ff3cfd44-6236-44dc-859c-fb688445ca7e"]
}, Closed]],

Cell[CellGroupData[{

Cell["SortedEigensystem", "Subsubsection",
 CellDingbat->"\[Wolf]",
 CellChangeTimes->{3.711581537141165*^9, 
  3.711582411238762*^9},ExpressionUUID->"28edf3c2-d873-4264-9b8f-\
09814781b6f3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"by", " ", "Jens"}], " ", "<", 
     RowBox[{"http", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
         "questions"}], "/", "59172"}], "/", "should"}], "-", "eigenvalues", 
      "-", "be", "-", "ordered"}], ">"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"SortedEigensystem", "[", 
     RowBox[{
      RowBox[{"matrix_", "?", "MatrixQ"}], ",", "opts___"}], "]"}], ":=", 
    "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Eigensystem", "[", 
         RowBox[{
          RowBox[{"matrix", "+", 
           RowBox[{"#", " ", 
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"Dimensions", "[", "matrix", "]"}], "]"}]}]}], ",", 
          "opts"}], "]"}], "-", 
        RowBox[{"{", 
         RowBox[{"#", ",", "0"}], "}"}]}], ")"}], "&"}], "@", 
     RowBox[{"Norm", "[", 
      RowBox[{"Flatten", "[", "matrix", "]"}], "]"}]}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.711581542338729*^9, 3.711581591619627*^9}, {
  3.711582400069806*^9, 3.711582400312333*^9}},
 CellLabel->
  "In[465]:=",ExpressionUUID->"92e6bff0-db68-4106-81f2-e053afbe37cd"]
}, Closed]],

Cell[CellGroupData[{

Cell["ListMultiplier", "Subsubsection",
 CellDingbat->"\[Wolf]",
 CellChangeTimes->{
  3.711583999727496*^9},ExpressionUUID->"c29556f0-b3dc-4a54-82bd-\
975c81278bb0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"by", " ", "Joel", " ", "Wallman"}], " ", "<", 
     RowBox[{"http", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", "a"}],
        "/", "113113"}], "/", "6358"}], ">"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"ListMultiplier", "[", 
     RowBox[{"list_", ",", 
      RowBox[{"partitionwidth_:", "5"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"NestWhile", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Dot", "@@@", 
         RowBox[{"Partition", "[", 
          RowBox[{
          "#", ",", "partitionwidth", ",", "partitionwidth", ",", "1", ",", 
           RowBox[{"{", "}"}]}], "]"}]}], "&"}], ",", "list", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Dimensions", "[", "#", "]"}], "\[LeftDoubleBracket]", "1", 
          "\[RightDoubleBracket]"}], ">", "1"}], "&"}]}], "]"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
   ";"}]}]], "Code",
 CellChangeTimes->{{3.711583999743464*^9, 3.711584027767131*^9}},
 CellLabel->
  "In[466]:=",ExpressionUUID->"7a3dae09-e320-4a86-9103-d3f873a2d20b"]
}, Closed]],

Cell[CellGroupData[{

Cell["RunFile", "Subsubsection",
 CellDingbat->
  "\[Wolf]",ExpressionUUID->"6d56abeb-e484-4d52-a539-2ccea9a39174"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RunFile", "[", "file_String", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "res", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"res", "=", 
       RowBox[{"ReadString", "[", "file", "]"}]}], ";", "\n", "\t", 
      RowBox[{"CellPrint", "[", 
       RowBox[{"Cell", "[", 
        RowBox[{
         RowBox[{"StringTake", "[", 
          RowBox[{"res", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "2"}]}], "}"}]}], "]"}], ",", "\"\<Program\>\""}], 
        "]"}], "]"}], ";", "\n", "\t", 
      RowBox[{"ToExpression", "[", "res", "]"}], ";"}]}], "\n", "]"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[467]:=",ExpressionUUID->"fc5dfd5e-165b-4dc0-8213-5584455e2b82"]
}, Closed]],

Cell[CellGroupData[{

Cell["listMultiplier", "Subsubsection",ExpressionUUID->"4f1a1bce-e381-491e-84d9-4046d3498439"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"by", " ", "Joel", " ", "Wallman"}], " ", "<", 
     RowBox[{"http", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", "a"}],
        "/", "113113"}], "/", "6358"}], ">"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"listMultiplier", "[", 
    RowBox[{"list_", ",", 
     RowBox[{"partitionwidth_:", " ", "5"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"NestWhile", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Dot", "@@@", 
        RowBox[{"Partition", "[", 
         RowBox[{
         "#", ",", "partitionwidth", ",", "partitionwidth", ",", "1", ",", 
          RowBox[{"{", "}"}]}], "]"}]}], "&"}], ",", "list", ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Dimensions", "[", "#", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ">", "1"}], "&"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Code",
 CellLabel->
  "In[468]:=",ExpressionUUID->"05a2ea12-c549-47a4-b359-1310426906e2"]
}, Closed]],

Cell[CellGroupData[{

Cell["RouthHurwitzCriteria", "Subsubsection",
 CellChangeTimes->{{3.68486378218758*^9, 
  3.684863786818391*^9}},ExpressionUUID->"e1fc9dbe-01f0-4d23-aaef-\
50e8b6ba0b34"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RouthHurwitzCriteria", "[", 
    RowBox[{"a_", "?", "MatrixQ"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "c3", "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"SquareMatrixQ", "[", "a", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Msg", "[", 
          RowBox[{"RouthHurwitzCriteria", "::", "nonsq"}], "]"}], ";", 
         RowBox[{"Return", "[", "a", "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"Which", "[", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "1"}], ",", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"Piecewise", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"True", ",", 
               RowBox[{
                RowBox[{"a", "\[LeftDoubleBracket]", 
                 RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "<", 
                "0"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"False", ",", 
               RowBox[{
                RowBox[{"a", "\[LeftDoubleBracket]", 
                 RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ">", 
                "0"}]}], "}"}]}], "}"}], ",", "Indeterminate"}], "]"}], "]"}],
         ",", "\[IndentingNewLine]", "\t\t", 
        RowBox[{
         RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "2"}], ",", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"Piecewise", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"True", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Tr", "[", "a", "]"}], "<", "0"}], "&&", 
                RowBox[{
                 RowBox[{"Det", "[", "a", "]"}], ">", "0"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"False", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Tr", "[", "a", "]"}], ">", "0"}], "||", 
                RowBox[{
                 RowBox[{"Det", "[", "a", "]"}], "<", "0"}]}]}], "}"}]}], 
            "}"}], ",", "Indeterminate"}], "]"}], "]"}], ",", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{
         RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "3"}], ",", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{
         RowBox[{"c3", "=", 
          RowBox[{"Det", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"a", "\[LeftDoubleBracket]", 
                 RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
                RowBox[{"a", "\[LeftDoubleBracket]", 
                 RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], ",", 
               RowBox[{"a", "\[LeftDoubleBracket]", 
                RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}], ",", 
               RowBox[{"-", 
                RowBox[{"a", "\[LeftDoubleBracket]", 
                 RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}]}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"a", "\[LeftDoubleBracket]", 
                RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
               RowBox[{
                RowBox[{"a", "\[LeftDoubleBracket]", 
                 RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
                RowBox[{"a", "\[LeftDoubleBracket]", 
                 RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]}], ",", 
               RowBox[{"a", "\[LeftDoubleBracket]", 
                RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"a", "\[LeftDoubleBracket]", 
                 RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
               RowBox[{"a", "\[LeftDoubleBracket]", 
                RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
               RowBox[{
                RowBox[{"a", "\[LeftDoubleBracket]", 
                 RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "+", 
                RowBox[{"a", "\[LeftDoubleBracket]", 
                 RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]}]}], 
              "}"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", "\t\t", 
         RowBox[{"Return", "[", 
          RowBox[{"Piecewise", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"True", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Tr", "[", "a", "]"}], "<", "0"}], "&&", 
                 RowBox[{
                  RowBox[{"Det", "[", "a", "]"}], "<", "0"}], "&&", 
                 RowBox[{"c3", "<", "0"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"False", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Tr", "[", "a", "]"}], ">", "0"}], "||", 
                 RowBox[{
                  RowBox[{"Det", "[", "a", "]"}], ">", "0"}], "||", 
                 RowBox[{"c3", ">", "0"}]}]}], "}"}]}], "}"}], ",", 
            "Indeterminate"}], "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        "\t\t", 
        RowBox[{
         RowBox[{"Length", "[", "a", "]"}], ">", "3"}], ",", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{
         RowBox[{"Msg", "[", 
          RowBox[{"RouthHurwitzCriteria", "::", "toobig"}], "]"}], ";", 
         RowBox[{"Return", "[", "a", "]"}]}]}], "\[IndentingNewLine]", "\t", 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.684863331038703*^9, 3.684863371301766*^9}, {
  3.684863405124865*^9, 3.684863558475471*^9}, {3.684863616337388*^9, 
  3.684863751243958*^9}, {3.685093592800758*^9, 3.6850935944207478`*^9}, {
  3.6850941873709106`*^9, 3.685094187660965*^9}, {3.685304695018196*^9, 
  3.685304782498827*^9}, {3.685310811705975*^9, 3.685310832463999*^9}, {
  3.6853108838924847`*^9, 3.685310886032216*^9}, {3.685311835167028*^9, 
  3.685311958423547*^9}, {3.693593161199779*^9, 3.6935931783732224`*^9}, {
  3.696872234003128*^9, 3.696872333105813*^9}, {3.7101059424744473`*^9, 
  3.7101059432757263`*^9}},
 CellLabel->
  "In[469]:=",ExpressionUUID->"90085df8-d9b8-4865-a1de-8cc7c818573f"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["SetModel", "Subsection",
 CellDingbat->
  "\[HeartSuit]",ExpressionUUID->"7fdf5ac7-e60e-42f5-af30-ec6767b5f2d6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SetModel", "[", 
    RowBox[{
     RowBox[{"model_", "?", "RuleListQ"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{"(*", " ", "options", " ", "*)"}], "\n", 
      RowBox[{
      "colors", ",", "linestyles", ",", "plotmarkers", ",", "gradients", ",", 
       "\n", 
       RowBox[{"(*", " ", "other", " ", "*)"}], "\n", "stylecount", ",", 
       "basestyle", ",", "in"}], "}"}], ",", "\n", "\n", 
     RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "\n", 
     RowBox[{
      RowBox[{"colors", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Colors", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "SetModel", "]"}]}], "}"}], "]"}]}], 
        "]"}]}], ";", "\n", 
      RowBox[{"linestyles", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"LineStyles", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "SetModel", "]"}]}], "}"}], "]"}]}], 
        "]"}]}], ";", "\n", 
      RowBox[{"plotmarkers", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"PlotMarkers", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "SetModel", "]"}]}], "}"}], "]"}]}], 
        "]"}]}], ";", "\n", "\n", 
      RowBox[{"modelloaded", "=", "True"}], ";", "\n", "\n", 
      RowBox[{"Clear", "[", "LookUp", "]"}], ";", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"LookUp", "[", 
          RowBox[{"_", ":", 
           RowBox[{"(", 
            RowBox[{"Symbol", "|", "Subscript"}], ")"}]}], "]"}], ":=", 
         RowBox[{"{", "\"\<parameter\>\"", "}"}]}], ";"}], "*)"}], "\n", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"model", " ", "type"}], " ", "-", " ", "default"}], "=", 
        "\"\<ContinuousTime\>\""}], " ", "*)"}], "\n", 
      RowBox[{"modeltype", "=", 
       RowBox[{"ModelType", "/.", 
        RowBox[{"Append", "[", 
         RowBox[{"model", ",", 
          RowBox[{"ModelType", "\[Rule]", "\"\<ContinuousTime\>\""}]}], 
         "]"}]}]}], ";", "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<ContinuousTime\>\"", ",", "\"\<DiscreteTime\>\""}], 
            "}"}], ",", "modeltype"}], "]"}]}], ",", 
        RowBox[{"Msg", "[", 
         RowBox[{"SetModel", "::", "unktype"}], "]"}]}], "]"}], ";", "\n", 
      "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"model", " ", "whenevents"}], " ", "-", " ", "default"}], 
        "=", 
        RowBox[{"{", "}"}]}], " ", "*)"}], "\n", 
      RowBox[{"modelwhenevents", ":=", 
       RowBox[{"WhenEvents", "/.", 
        RowBox[{"Append", "[", 
         RowBox[{"model", ",", 
          RowBox[{"WhenEvents", "\[Rule]", 
           RowBox[{"{", "}"}]}]}], "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"model", " ", "assumptions"}], " ", "-", " ", "default"}], 
        "=", 
        RowBox[{"{", "}"}]}], " ", "*)"}], "\n", 
      RowBox[{"$Assumptions", "=", 
       RowBox[{"Assumptions", "/.", 
        RowBox[{"Append", "[", 
         RowBox[{"model", ",", 
          RowBox[{"Assumptions", "\[Rule]", "True"}]}], "]"}]}]}], ";", "\n", 
      "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"period", " ", "-", " ", "default"}], "=", 
        RowBox[{"0", " ", 
         RowBox[{"(", "unforced", ")"}]}]}], " ", "*)"}], "\n", 
      RowBox[{"modelperiod", "=", 
       RowBox[{"Period", "/.", 
        RowBox[{"Append", "[", 
         RowBox[{"model", ",", 
          RowBox[{"Period", "\[Rule]", "0"}]}], "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"stylecount", "=", "0"}], ";", "\n", "\n", 
      RowBox[{"(*", " ", "pops", " ", "*)"}], "\n", "\n", 
      RowBox[{"npops", "=", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"model", ",", 
              RowBox[{
               RowBox[{"Pop", "[", "0", "]"}], "\[Rule]", "0"}]}], "}"}], 
            "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "\[LeftDoubleBracket]", 
              RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], "\[Equal]", 
             "Pop"}], "&"}]}], "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}], 
        "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"pcompeqn", "[", 
        RowBox[{"pop_", ",", "pco_"}], "]"}], ":=", 
       RowBox[{"Equation", "/.", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"RuleListQ", "[", 
           RowBox[{
            RowBox[{"Component", "[", "pco", "]"}], "/.", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Pop", "[", "pop", "]"}], "/.", "model"}], ")"}]}], 
           "]"}], ",", 
          RowBox[{
           RowBox[{"Component", "[", "pco", "]"}], "/.", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Pop", "[", "pop", "]"}], "/.", "model"}], ")"}]}], ",", 
          
          RowBox[{
           RowBox[{"Pop", "[", "pop", "]"}], "/.", "model"}]}], "]"}]}]}], 
      ";", "\n", 
      RowBox[{"popnames", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", "\n", 
      RowBox[{"Do", "[", "\n", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"popname", "[", "pop", "]"}], "=", 
          RowBox[{"Name", "/.", 
           RowBox[{"Append", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Pop", "[", "pop", "]"}], "/.", "model"}], ",", 
             RowBox[{"Name", "\[Rule]", 
              RowBox[{"\"\<Pop\>\"", "<>", 
               RowBox[{"ToString", "[", "pop", "]"}]}]}]}], "]"}]}]}], ";", 
         "\n", "\t", 
         RowBox[{
          RowBox[{"LookUp", "[", 
           RowBox[{"popname", "[", "pop", "]"}], "]"}], "=", 
          RowBox[{"{", 
           RowBox[{"\"\<pop\>\"", ",", "pop"}], "}"}]}], ";", "\n", "\t", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"popnames", ",", 
           RowBox[{"popname", "[", "pop", "]"}]}], "]"}], ";", "\n", "\t", 
         "\n", "\t", 
         RowBox[{
          RowBox[{"npcomps", "[", "pop", "]"}], "=", 
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Pop", "[", "pop", "]"}], "/.", "model"}], ",", 
                 RowBox[{
                  RowBox[{"Component", "[", "1", "]"}], "\[Rule]", "0"}]}], 
                "}"}], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "\[LeftDoubleBracket]", 
                 RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], 
                "\[Equal]", "Component"}], "&"}]}], "]"}], 
            "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}], 
           "]"}]}], ";", "\n", "\t", 
         RowBox[{"Do", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"stylecount", "++"}], ";", "\n", "\t\t", 
            RowBox[{"in", "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"RuleListQ", "[", 
                RowBox[{
                 RowBox[{"Component", "[", "pco", "]"}], "/.", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Pop", "[", "pop", "]"}], "/.", "model"}], ")"}]}],
                 "]"}], ",", 
               RowBox[{
                RowBox[{"Component", "[", "pco", "]"}], "/.", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Pop", "[", "pop", "]"}], "/.", "model"}], ")"}]}], 
               ",", 
               RowBox[{
                RowBox[{"Pop", "[", "pop", "]"}], "/.", "model"}]}], "]"}]}], 
            ";", "\n", "\t\t", 
            RowBox[{
             RowBox[{"pcomp", "[", 
              RowBox[{"pop", ",", "pco"}], "]"}], "=", 
             RowBox[{"Variable", "/.", "in"}]}], ";", "\n", "\t\t", 
            RowBox[{
             RowBox[{"range", "[", 
              RowBox[{"pcomp", "[", 
               RowBox[{"pop", ",", "pco"}], "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"pcomprange", "[", 
               RowBox[{"pop", ",", "pco"}], "]"}], "=", 
              RowBox[{"Range", "/.", 
               RowBox[{"Append", "[", 
                RowBox[{"in", ",", 
                 RowBox[{"Range", "\[Rule]", 
                  RowBox[{"Interval", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "\[Infinity]"}], "}"}], "]"}]}]}], 
                "]"}]}]}]}], ";", "\n", "\t\t", 
            RowBox[{
             RowBox[{"type", "[", 
              RowBox[{"pcomp", "[", 
               RowBox[{"pop", ",", "pco"}], "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"pcomptype", "[", 
               RowBox[{"pop", ",", "pco"}], "]"}], "=", 
              RowBox[{"Type", "/.", 
               RowBox[{"Append", "[", 
                RowBox[{"in", ",", 
                 RowBox[{"Type", "\[Rule]", "\"\<Extensive\>\""}]}], 
                "]"}]}]}]}], ";", "\n", "\t\t", "\n", "\t\t", 
            RowBox[{
             RowBox[{"color", "[", 
              RowBox[{"pcomp", "[", 
               RowBox[{"pop", ",", "pco"}], "]"}], "]"}], "=", 
             RowBox[{"Color", "/.", 
              RowBox[{"Append", "[", 
               RowBox[{"in", ",", 
                RowBox[{"Color", "\[Rule]", 
                 RowBox[{"ModPart", "[", 
                  RowBox[{"colors", ",", "stylecount"}], "]"}]}]}], "]"}]}]}],
             ";", "\n", "\t\t", 
            RowBox[{
             RowBox[{"linestyle", "[", 
              RowBox[{"pcomp", "[", 
               RowBox[{"pop", ",", "pco"}], "]"}], "]"}], "=", 
             RowBox[{"LineStyle", "/.", 
              RowBox[{"Append", "[", 
               RowBox[{"in", ",", 
                RowBox[{"LineStyle", "\[Rule]", 
                 RowBox[{"ModPart", "[", 
                  RowBox[{"linestyles", ",", "stylecount"}], "]"}]}]}], 
               "]"}]}]}], ";", "\n", "\t\t", 
            RowBox[{
             RowBox[{"plotmarker", "[", 
              RowBox[{"pcomp", "[", 
               RowBox[{"pop", ",", "pco"}], "]"}], "]"}], "=", 
             RowBox[{"PlotMarker", "/.", 
              RowBox[{"Append", "[", 
               RowBox[{"in", ",", 
                RowBox[{"PlotMarker", "\[Rule]", 
                 RowBox[{"ModPart", "[", 
                  RowBox[{"plotmarkers", ",", "stylecount"}], "]"}]}]}], 
               "]"}]}]}], ";", "\n", "\t\t", "\n", "\t\t", 
            RowBox[{
             RowBox[{"LookUp", "[", 
              RowBox[{"pcomp", "[", 
               RowBox[{"pop", ",", "pco"}], "]"}], "]"}], "=", 
             RowBox[{"{", 
              RowBox[{"\"\<pcomp\>\"", ",", "pop", ",", "pco"}], "}"}]}], 
            ";"}], "\n", "\t", ",", 
           RowBox[{"{", 
            RowBox[{"pco", ",", 
             RowBox[{"npcomps", "[", "pop", "]"}]}], "}"}]}], "]"}], ";"}], 
        "\n", ",", 
        RowBox[{"{", 
         RowBox[{"pop", ",", "npops"}], "}"}]}], "]"}], ";", "\n", "\n", 
      RowBox[{"(*", " ", "auxs", " ", "*)"}], "\n", "\n", 
      RowBox[{"naux", "=", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{"model", ",", 
             RowBox[{
              RowBox[{"Aux", "[", "0", "]"}], "\[Rule]", "0"}]}], "]"}], ",", 
           
           RowBox[{
            RowBox[{
             RowBox[{"#", "\[LeftDoubleBracket]", 
              RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], "\[Equal]", 
             "Aux"}], "&"}]}], "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}], 
        "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"auxeqn", "[", "au_", "]"}], ":=", 
       RowBox[{"Equation", "/.", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Aux", "[", "au", "]"}], "/.", "model"}], ")"}]}]}], ";", 
      "\n", 
      RowBox[{"auxnames", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", "\n", 
      RowBox[{"Do", "[", "\n", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"stylecount", "++"}], ";", "\n", "\t", 
         RowBox[{"in", "=", 
          RowBox[{
           RowBox[{"Aux", "[", "au", "]"}], "/.", "model"}]}], ";", "\n", 
         "\n", "\t", 
         RowBox[{
          RowBox[{"auxname", "[", "au", "]"}], "=", 
          RowBox[{"Name", "/.", 
           RowBox[{"Append", "[", 
            RowBox[{"in", ",", 
             RowBox[{"Name", "\[Rule]", 
              RowBox[{"\"\<Aux\>\"", "<>", 
               RowBox[{"ToString", "[", "au", "]"}]}]}]}], "]"}]}]}], ";", 
         "\n", "\t", 
         RowBox[{
          RowBox[{"LookUp", "[", 
           RowBox[{"auxname", "[", "au", "]"}], "]"}], "=", 
          RowBox[{"{", 
           RowBox[{"\"\<aux\>\"", ",", "au"}], "}"}]}], ";", "\n", "\t", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"auxnames", ",", 
           RowBox[{"auxname", "[", "au", "]"}]}], "]"}], ";", "\n", "\n", 
         "\t", 
         RowBox[{
          RowBox[{"aux", "[", "au", "]"}], "=", 
          RowBox[{"Variable", "/.", "in"}]}], ";", "\n", "\t", 
         RowBox[{
          RowBox[{"range", "[", 
           RowBox[{"aux", "[", "au", "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"auxrange", "[", "au", "]"}], "=", 
           RowBox[{"Range", "/.", 
            RowBox[{"Append", "[", 
             RowBox[{"in", ",", 
              RowBox[{"Range", "\[Rule]", 
               RowBox[{"Interval", "[", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "\[Infinity]"}], "}"}], "]"}]}]}], 
             "]"}]}]}]}], ";", "\n", "\t", "\n", "\t", 
         RowBox[{
          RowBox[{"color", "[", 
           RowBox[{"aux", "[", "au", "]"}], "]"}], "=", 
          RowBox[{"Color", "/.", 
           RowBox[{"Append", "[", 
            RowBox[{"in", ",", 
             RowBox[{"Color", "\[Rule]", 
              RowBox[{"ModPart", "[", 
               RowBox[{"colors", ",", "stylecount"}], "]"}]}]}], "]"}]}]}], 
         ";", "\n", "\t", 
         RowBox[{
          RowBox[{"linestyle", "[", 
           RowBox[{"aux", "[", "au", "]"}], "]"}], "=", 
          RowBox[{"LineStyle", "/.", 
           RowBox[{"Append", "[", 
            RowBox[{"in", ",", 
             RowBox[{"LineStyle", "\[Rule]", 
              RowBox[{"ModPart", "[", 
               RowBox[{"linestyles", ",", "stylecount"}], "]"}]}]}], 
            "]"}]}]}], ";", "\n", "\t", 
         RowBox[{
          RowBox[{"plotmarker", "[", 
           RowBox[{"aux", "[", "au", "]"}], "]"}], "=", 
          RowBox[{"PlotMarker", "/.", 
           RowBox[{"Append", "[", 
            RowBox[{"in", ",", 
             RowBox[{"PlotMarker", "\[Rule]", 
              RowBox[{"ModPart", "[", 
               RowBox[{"plotmarkers", ",", "stylecount"}], "]"}]}]}], 
            "]"}]}]}], ";", "\n", "\t", "\n", "\t", 
         RowBox[{
          RowBox[{"LookUp", "[", 
           RowBox[{"aux", "[", "au", "]"}], "]"}], "=", 
          RowBox[{"{", 
           RowBox[{"\"\<aux\>\"", ",", "au"}], "}"}]}], ";"}], "\n", ",", 
        RowBox[{"{", 
         RowBox[{"au", ",", "naux"}], "}"}]}], "]"}], ";", "\n", "\n", 
      RowBox[{"(*", " ", "guilds", " ", "*)"}], "\n", "\n", 
      RowBox[{"stylecount", "=", "0"}], ";", "\n", "\n", 
      RowBox[{"modelguilds", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"model", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], "\[Equal]", 
           "Guild"}], "&"}]}], "]"}]}], ";", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<modelguilds=\>\"", ",", "modelguilds"}], "]"}], ";"}], 
       "*)"}], "\n", 
      RowBox[{"guilds", "=", 
       RowBox[{"modelguilds", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";",
       "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<guilds=\>\"", ",", "guilds"}], "]"}], ";"}], "*)"}], 
      "\n", 
      RowBox[{"nguilds", "=", 
       RowBox[{"Length", "[", "guilds", "]"}]}], ";", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<nguilds=\>\"", ",", "nguilds"}], "]"}], ";"}], "*)"}], 
      "\n", 
      RowBox[{
       RowBox[{"gcompeqn", "[", 
        RowBox[{"gu_", ",", "gco_"}], "]"}], ":=", 
       RowBox[{"Equation", "/.", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"RuleListQ", "[", 
           RowBox[{
            RowBox[{"Component", "[", "gco", "]"}], "/.", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Guild", "[", "gu", "]"}], "/.", "model"}], ")"}]}], 
           "]"}], ",", 
          RowBox[{
           RowBox[{"Component", "[", "gco", "]"}], "/.", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Guild", "[", "gu", "]"}], "/.", "model"}], ")"}]}], ",", 
          RowBox[{
           RowBox[{"Guild", "[", "gu", "]"}], "/.", "model"}]}], "]"}]}]}], 
      ";", "\n", "\n", 
      RowBox[{"Do", "[", "\n", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ngcomps", "[", "gu", "]"}], "=", 
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"Append", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Guild", "[", "gu", "]"}], "/.", "model"}], ",", 
                RowBox[{
                 RowBox[{"Component", "[", "1", "]"}], "\[Rule]", 
                 RowBox[{"{", "}"}]}]}], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "\[LeftDoubleBracket]", 
                 RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], 
                "\[Equal]", "Component"}], "&"}]}], "]"}], 
            "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}], 
           "]"}]}], ";", "\n", "\t", 
         RowBox[{
          RowBox[{"ntraits", "[", "gu", "]"}], "=", 
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"Append", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Guild", "[", "gu", "]"}], "/.", "model"}], ",", 
                RowBox[{
                 RowBox[{"Trait", "[", "0", "]"}], "\[Rule]", 
                 RowBox[{"{", "}"}]}]}], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "\[LeftDoubleBracket]", 
                 RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], 
                "\[Equal]", "Trait"}], "&"}]}], "]"}], "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}], 
           "]"}]}], ";", "\n", "\t", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"gu", ",", "\"\< \>\"", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ngcomps", "[", "gu", "]"}], ",", 
               RowBox[{"ntraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ";"}], 
          "*)"}], "\n", "\n", "\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"nguilds", "\[Equal]", "1"}], "&&", 
            RowBox[{
             RowBox[{"ngcomps", "[", 
              RowBox[{
              "guilds", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}], "]"}], "\[Equal]", "1"}], "&&", 
            RowBox[{
             RowBox[{"ntraits", "[", 
              RowBox[{
              "guilds", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}], "]"}], "\[Equal]", "1"}]}], ",", 
           "\n", "\t\t", 
           RowBox[{"gradients", "=", 
            RowBox[{"{", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"Gradient", "/.", 
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{"opts", ",", 
                  RowBox[{"Options", "[", "SetModel", "]"}]}], "}"}], "]"}]}],
               "]"}], "}"}]}], ",", "\n", "\t\t", 
           RowBox[{"gradients", "=", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"Gradients", "/.", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"opts", ",", 
                 RowBox[{"Options", "[", "SetModel", "]"}]}], "}"}], "]"}]}], 
             "]"}]}]}], "\n", "\t", "]"}], ";", "\n", "\t", "\n", "\t", 
         RowBox[{"Do", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"stylecount", "++"}], ";", "\n", "\t\t", 
            RowBox[{
             RowBox[{"basestyle", "[", "gu", "]"}], "=", "stylecount"}], ";", 
            "\n", "\t\t", 
            RowBox[{"in", "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"RuleListQ", "[", 
                RowBox[{
                 RowBox[{"Component", "[", "gco", "]"}], "/.", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Guild", "[", "gu", "]"}], "/.", "model"}], 
                  ")"}]}], "]"}], ",", 
               RowBox[{
                RowBox[{"Component", "[", "gco", "]"}], "/.", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Guild", "[", "gu", "]"}], "/.", "model"}], ")"}]}],
                ",", 
               RowBox[{
                RowBox[{"Guild", "[", "gu", "]"}], "/.", "model"}]}], "]"}]}],
             ";", "\n", "\t\t", 
            RowBox[{
             RowBox[{"gcomp", "[", 
              RowBox[{"gu", ",", "gco"}], "]"}], "=", 
             RowBox[{"Variable", "/.", "in"}]}], ";", "\n", "\t\t", 
            RowBox[{
             RowBox[{"range", "[", 
              RowBox[{"Subscript", "[", 
               RowBox[{
                RowBox[{"gcomp", "[", 
                 RowBox[{"gu", ",", "gco"}], "]"}], ",", "_"}], "]"}], "]"}], 
             "=", 
             RowBox[{
              RowBox[{"range", "[", 
               RowBox[{"gcomp", "[", 
                RowBox[{"gu", ",", "gco"}], "]"}], "]"}], "=", 
              RowBox[{
               RowBox[{"gcomprange", "[", 
                RowBox[{"gu", ",", "gco"}], "]"}], "=", 
               RowBox[{"Range", "/.", 
                RowBox[{"Append", "[", 
                 RowBox[{"in", ",", 
                  RowBox[{"Range", "\[Rule]", 
                   RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "\[Infinity]"}], "}"}], "]"}]}]}], 
                 "]"}]}]}]}]}], ";", "\n", "\t\t", 
            RowBox[{
             RowBox[{"type", "[", 
              RowBox[{"Subscript", "[", 
               RowBox[{
                RowBox[{"gcomp", "[", 
                 RowBox[{"gu", ",", "gco"}], "]"}], ",", "_"}], "]"}], "]"}], 
             "=", 
             RowBox[{
              RowBox[{"type", "[", 
               RowBox[{"gcomp", "[", 
                RowBox[{"gu", ",", "gco"}], "]"}], "]"}], "=", 
              RowBox[{
               RowBox[{"gcomptype", "[", 
                RowBox[{"gu", ",", "gco"}], "]"}], "=", 
               RowBox[{"Type", "/.", 
                RowBox[{"Append", "[", 
                 RowBox[{"in", ",", 
                  RowBox[{"Type", "\[Rule]", "\"\<Extensive\>\""}]}], 
                 "]"}]}]}]}]}], ";", "\n", "\t\t", "\n", "\t\t", 
            RowBox[{
             RowBox[{"color", "[", 
              RowBox[{"Subscript", "[", 
               RowBox[{
                RowBox[{"gcomp", "[", 
                 RowBox[{"gu", ",", "gco"}], "]"}], ",", "_"}], "]"}], "]"}], 
             "=", 
             RowBox[{"Color", "/.", 
              RowBox[{"Append", "[", 
               RowBox[{"in", ",", 
                RowBox[{"Color", "\[Rule]", 
                 RowBox[{"With", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"gradient", "=", 
                    RowBox[{"ModPart", "[", 
                    RowBox[{"gradients", ",", "stylecount"}], "]"}]}], "}"}], 
                   ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"ColorData", "[", "gradient", "]"}], "[", "#", 
                    "]"}], "&"}]}], "]"}]}]}], "]"}]}]}], ";", "\n", "\t\t", 
            RowBox[{
             RowBox[{"linestyle", "[", 
              RowBox[{"Subscript", "[", 
               RowBox[{
                RowBox[{"gcomp", "[", 
                 RowBox[{"gu", ",", "gco"}], "]"}], ",", "_"}], "]"}], "]"}], 
             "=", 
             RowBox[{"LineStyle", "/.", 
              RowBox[{"Append", "[", 
               RowBox[{"in", ",", 
                RowBox[{"LineStyle", "\[Rule]", 
                 RowBox[{"ModPart", "[", 
                  RowBox[{"linestyles", ",", "stylecount"}], "]"}]}]}], 
               "]"}]}]}], ";", "\n", "\t\t", 
            RowBox[{
             RowBox[{"plotmarker", "[", 
              RowBox[{"Subscript", "[", 
               RowBox[{
                RowBox[{"gcomp", "[", 
                 RowBox[{"gu", ",", "gco"}], "]"}], ",", "_"}], "]"}], "]"}], 
             "=", 
             RowBox[{"PlotMarker", "/.", 
              RowBox[{"Append", "[", 
               RowBox[{"in", ",", 
                RowBox[{"PlotMarker", "\[Rule]", 
                 RowBox[{"ModPart", "[", 
                  RowBox[{"plotmarkers", ",", "stylecount"}], "]"}]}]}], 
               "]"}]}]}], ";", "\n", "\n", "\t\t", 
            RowBox[{
             RowBox[{"LookUp", "[", 
              RowBox[{"gcomp", "[", 
               RowBox[{"gu", ",", "gco"}], "]"}], "]"}], "=", 
             RowBox[{"{", 
              RowBox[{"\"\<gcomp\>\"", ",", "gu", ",", "gco"}], "}"}]}], ";", 
            "\n", "\t\t", 
            RowBox[{
             RowBox[{"LookUp", "[", 
              RowBox[{"Subscript", "[", 
               RowBox[{
                RowBox[{"gcomp", "[", 
                 RowBox[{"gu", ",", "gco"}], "]"}], ",", "sp_"}], "]"}], 
              "]"}], "=", 
             RowBox[{"{", 
              RowBox[{"\"\<gcomp\>\"", ",", "gu", ",", "gco", ",", "sp"}], 
              "}"}]}], ";"}], "\n", "\t", ",", 
           RowBox[{"{", 
            RowBox[{"gco", ",", 
             RowBox[{"ngcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ";", "\n",
          "\n", "\t", 
         RowBox[{"Do", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"stylecount", "=", 
             RowBox[{"basestyle", "[", "gu", "]"}]}], ";", "\n", "\t\t", 
            RowBox[{"in", "=", 
             RowBox[{
              RowBox[{"Trait", "[", "tr", "]"}], "/.", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Guild", "[", "gu", "]"}], "/.", "model"}], ")"}]}]}],
             ";", "\n", "\t\t", 
            RowBox[{
             RowBox[{"trait", "[", 
              RowBox[{"gu", ",", "tr"}], "]"}], "=", 
             RowBox[{"Variable", "/.", "in"}]}], ";", "\n", "\t\t", 
            RowBox[{
             RowBox[{"range", "[", 
              RowBox[{"Subscript", "[", 
               RowBox[{
                RowBox[{"trait", "[", 
                 RowBox[{"gu", ",", "tr"}], "]"}], ",", "_"}], "]"}], "]"}], 
             "=", 
             RowBox[{
              RowBox[{"range", "[", 
               RowBox[{"trait", "[", 
                RowBox[{"gu", ",", "tr"}], "]"}], "]"}], "=", 
              RowBox[{
               RowBox[{"traitrange", "[", 
                RowBox[{"gu", ",", "tr"}], "]"}], "=", 
               RowBox[{"Range", "/.", 
                RowBox[{"Append", "[", 
                 RowBox[{"in", ",", 
                  RowBox[{"Range", "\[Rule]", 
                   RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}],
                     "]"}]}]}], "]"}]}]}]}]}], ";", "\n", "\t\t", "\n", 
            "\t\t", 
            RowBox[{
             RowBox[{"color", "[", 
              RowBox[{"Subscript", "[", 
               RowBox[{
                RowBox[{"trait", "[", 
                 RowBox[{"gu", ",", "tr"}], "]"}], ",", "_"}], "]"}], "]"}], 
             "=", 
             RowBox[{"Color", "/.", 
              RowBox[{"Append", "[", 
               RowBox[{"in", ",", 
                RowBox[{"Color", "\[Rule]", 
                 RowBox[{"With", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"gradient", "=", 
                    RowBox[{"ModPart", "[", 
                    RowBox[{"gradients", ",", "stylecount"}], "]"}]}], "}"}], 
                   ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"ColorData", "[", "gradient", "]"}], "[", "#", 
                    "]"}], "&"}]}], "]"}]}]}], "]"}]}]}], ";", "\n", "\t\t", 
            RowBox[{
             RowBox[{"linestyle", "[", 
              RowBox[{"Subscript", "[", 
               RowBox[{
                RowBox[{"trait", "[", 
                 RowBox[{"gu", ",", "tr"}], "]"}], ",", "_"}], "]"}], "]"}], 
             "=", 
             RowBox[{"LineStyle", "/.", 
              RowBox[{"Append", "[", 
               RowBox[{"in", ",", 
                RowBox[{"LineStyle", "\[Rule]", 
                 RowBox[{"ModPart", "[", 
                  RowBox[{"linestyles", ",", "stylecount"}], "]"}]}]}], 
               "]"}]}]}], ";", "\n", "\t\t", 
            RowBox[{
             RowBox[{"plotmarker", "[", 
              RowBox[{"Subscript", "[", 
               RowBox[{
                RowBox[{"trait", "[", 
                 RowBox[{"gu", ",", "tr"}], "]"}], ",", "_"}], "]"}], "]"}], 
             "=", 
             RowBox[{"PlotMarker", "/.", 
              RowBox[{"Append", "[", 
               RowBox[{"in", ",", 
                RowBox[{"PlotMarker", "\[Rule]", 
                 RowBox[{"ModPart", "[", 
                  RowBox[{"plotmarkers", ",", "stylecount"}], "]"}]}]}], 
               "]"}]}]}], ";", "\n", "\n", "\t\t", 
            RowBox[{
             RowBox[{"LookUp", "[", 
              RowBox[{"trait", "[", 
               RowBox[{"gu", ",", "tr"}], "]"}], "]"}], "=", 
             RowBox[{"{", 
              RowBox[{"\"\<trait\>\"", ",", "gu", ",", "tr"}], "}"}]}], ";", 
            "\n", "\t\t", 
            RowBox[{
             RowBox[{"LookUp", "[", 
              RowBox[{"Subscript", "[", 
               RowBox[{
                RowBox[{"trait", "[", 
                 RowBox[{"gu", ",", "tr"}], "]"}], ",", "sp_"}], "]"}], "]"}],
              "=", 
             RowBox[{"{", 
              RowBox[{"\"\<trait\>\"", ",", "gu", ",", "tr", ",", "sp"}], 
              "}"}]}], ";"}], "\n", "\t", ",", 
           RowBox[{"{", 
            RowBox[{"tr", ",", 
             RowBox[{"ntraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ";"}], 
        "\n", ",", 
        RowBox[{"{", 
         RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ";", "\n", "\n", 
      RowBox[{"auxs", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"aux", "[", "au", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"au", ",", "naux"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"pcomps", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"pcomp", "[", 
             RowBox[{"pop", ",", "pco"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"pco", ",", 
              RowBox[{"npcomps", "[", "pop", "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"pop", ",", "npops"}], "}"}]}], "]"}], "]"}]}], ";", "\n", 
      
      RowBox[{"gcomps", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"gcomp", "[", 
             RowBox[{"gu", ",", "gco"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"gco", ",", 
              RowBox[{"ngcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "]"}]}], ";", "\n", 
      
      RowBox[{"traits", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"trait", "[", 
             RowBox[{"gu", ",", "tr"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"tr", ",", 
              RowBox[{"ntraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"Which", "[", "\n", "\t", 
       RowBox[{
        RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], ",", 
        "\n", "\t", 
        RowBox[{
         RowBox[{
          RowBox[{"DT", "[", "var_", "]"}], ":=", 
          RowBox[{
           RowBox[{"var", "'"}], "[", "t", "]"}]}], ";", "\n", "\t", 
         RowBox[{"modelinvthreshold", "=", "0"}]}], "\n", ",", "\n", "\t", 
        RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], ",", "\n", 
        "\t", 
        RowBox[{
         RowBox[{
          RowBox[{"DT", "[", "var_", "]"}], ":=", 
          RowBox[{"var", "[", 
           RowBox[{"t", "+", "1"}], "]"}]}], ";", "\n", "\t", 
         RowBox[{"modelinvthreshold", "=", "1"}]}]}], "\n", "]"}], ";", "\n", 
      "\n", 
      RowBox[{
       RowBox[{"eqn", "[", "var_", "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"luv", "=", 
           RowBox[{"LookUp", "[", "var", "]"}]}], "}"}], ",", "\n", "\t", 
         RowBox[{"Which", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{
            "luv", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "\[Equal]", "\"\<aux\>\""}], ",", 
           RowBox[{"auxeqn", "[", 
            RowBox[{
            "luv", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
            "]"}], ",", "\n", "\t\t", 
           RowBox[{
            RowBox[{
            "luv", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "\[Equal]", "\"\<pcomp\>\""}], ",", 
           RowBox[{"pcompeqn", "[", 
            RowBox[{
             RowBox[{
             "luv", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             ",", 
             RowBox[{
             "luv", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
            "]"}], ",", "\n", "\t\t", 
           RowBox[{
            RowBox[{
            "luv", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "\[Equal]", "\"\<gcomp\>\""}], ",", 
           RowBox[{
            RowBox[{"gcompeqn", "[", 
             RowBox[{
              RowBox[{
              "luv", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "luv", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}],
              "]"}], "[", 
            RowBox[{
            "luv", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
            "]"}]}], "\n", "\t", "]"}]}], "\n", "]"}]}], ";"}]}], "\n", "\n", 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.685313044558269*^9, 3.685313083383671*^9}, {
   3.685313744782654*^9, 3.685313760328356*^9}, {3.685920235914361*^9, 
   3.685920263423078*^9}, {3.6874746713372393`*^9, 3.687474703121883*^9}, {
   3.687474851188427*^9, 3.687474865794237*^9}, 3.687475020305975*^9, {
   3.6874750656075163`*^9, 3.687475068846641*^9}, {3.6874759558770943`*^9, 
   3.6874759748528976`*^9}, {3.687476013230673*^9, 3.687476141559218*^9}, {
   3.687476625753992*^9, 3.6874766709221153`*^9}, {3.687476755024122*^9, 
   3.687476801180263*^9}, {3.687541906475501*^9, 3.6875419286016607`*^9}, {
   3.687541959227232*^9, 3.687541989431466*^9}, {3.687542208801771*^9, 
   3.68754230693442*^9}, {3.687544183422534*^9, 3.687544339187674*^9}, {
   3.687544924725491*^9, 3.6875449795622787`*^9}, {3.687545026098303*^9, 
   3.687545092079125*^9}, {3.68754515447495*^9, 3.687545319689727*^9}, {
   3.687545506337048*^9, 3.68754553109794*^9}, {3.687545568438902*^9, 
   3.687545698217589*^9}, {3.687545790157555*^9, 3.687545894567752*^9}, {
   3.68755317067295*^9, 3.68755318803935*^9}, {3.687553251452821*^9, 
   3.68755338370201*^9}, {3.68755345865413*^9, 3.68755355772652*^9}, {
   3.687553714154756*^9, 3.687553723614995*^9}, {3.6875537729043007`*^9, 
   3.687553787399671*^9}, {3.687554114354685*^9, 3.687554133187295*^9}, 
   3.687554218594781*^9, {3.687554261259988*^9, 3.687554310726242*^9}, {
   3.687554342311133*^9, 3.687554401665142*^9}, {3.687554472057829*^9, 
   3.687554509095552*^9}, {3.687555243150074*^9, 3.687555250737433*^9}, {
   3.6875552915241947`*^9, 3.687555357565558*^9}, {3.687555401905149*^9, 
   3.687555410963324*^9}, 3.687555483048583*^9, {3.6875560656319513`*^9, 
   3.687556081103142*^9}, {3.687556142781748*^9, 3.687556162566121*^9}, {
   3.6875582970620728`*^9, 3.687558319937871*^9}, {3.687558712047935*^9, 
   3.687558773146309*^9}, {3.687562827316997*^9, 3.687562836744032*^9}, {
   3.687562880524579*^9, 3.687562892226343*^9}, {3.6875629589388943`*^9, 
   3.687562987354033*^9}, {3.687563107241558*^9, 3.687563142607102*^9}, {
   3.6875992419924583`*^9, 3.687599255963579*^9}, {3.687601036287821*^9, 
   3.687601107603148*^9}, 3.687601170595758*^9, {3.6877207646798964`*^9, 
   3.6877207831522503`*^9}, {3.687720829874136*^9, 3.687720841820532*^9}, {
   3.687721011250355*^9, 3.687721025660759*^9}, {3.687721122430027*^9, 
   3.687721130528081*^9}, {3.6877212119276114`*^9, 3.687721217614245*^9}, {
   3.6877213234931*^9, 3.687721325740189*^9}, {3.687734784718336*^9, 
   3.687734875520584*^9}, {3.687735980254553*^9, 3.68773599942766*^9}, {
   3.687736679013298*^9, 3.687736686418545*^9}, {3.6877370861689587`*^9, 
   3.687737114193125*^9}, {3.687777389541534*^9, 3.687777392191221*^9}, {
   3.6877774375779057`*^9, 3.6877774478007183`*^9}, {3.687778361772641*^9, 
   3.687778401067758*^9}, {3.687778622442074*^9, 3.6877786996765537`*^9}, 
   3.687779023695715*^9, {3.687781027604732*^9, 3.687781064685392*^9}, {
   3.68778118593357*^9, 3.687781230216408*^9}, {3.687781518928822*^9, 
   3.687781560987303*^9}, {3.687781759888179*^9, 3.6877817610778522`*^9}, {
   3.687781810766111*^9, 3.68778181655956*^9}, {3.687781856894567*^9, 
   3.687781900434196*^9}, {3.6877819377856627`*^9, 3.687782047194821*^9}, {
   3.687782111168213*^9, 3.6877821505419064`*^9}, {3.687783089802771*^9, 
   3.687783149555794*^9}, {3.687783225512991*^9, 3.687783237657694*^9}, {
   3.687783340428749*^9, 3.6877833871023207`*^9}, {3.687783434876254*^9, 
   3.68778344995149*^9}, {3.6877835178178062`*^9, 3.6877835625968723`*^9}, {
   3.687783938494617*^9, 3.687783951675496*^9}, {3.6877845544414883`*^9, 
   3.6877846566125402`*^9}, {3.6877849630919733`*^9, 
   3.6877849663291407`*^9}, {3.68778501942658*^9, 3.687785023496682*^9}, {
   3.6877850681795*^9, 3.6877850909330072`*^9}, {3.687785136338928*^9, 
   3.687785141075389*^9}, {3.687785454512601*^9, 3.687785458713686*^9}, {
   3.687793225732891*^9, 3.687793276446238*^9}, {3.6877933150943317`*^9, 
   3.687793388879899*^9}, {3.687793421459325*^9, 3.687793461704068*^9}, {
   3.68779349807025*^9, 3.687793499670867*^9}, {3.687795712998334*^9, 
   3.6877957164846077`*^9}, {3.687795996374555*^9, 3.687795996580127*^9}, {
   3.6878066797037067`*^9, 3.687806684137431*^9}, {3.687808904719878*^9, 
   3.687808907335101*^9}, {3.687808965325082*^9, 3.687808999782092*^9}, {
   3.687809048871364*^9, 3.687809057322887*^9}, 3.6878091007850323`*^9, {
   3.687809194047708*^9, 3.687809203190592*^9}, {3.687809498090002*^9, 
   3.68780951166749*^9}, {3.687809580724399*^9, 3.6878095937019863`*^9}, {
   3.687823489205772*^9, 3.6878236227652407`*^9}, {3.687881448140135*^9, 
   3.687881448205855*^9}, {3.6879657102936983`*^9, 3.687965742567709*^9}, {
   3.687965979105507*^9, 3.6879660994219503`*^9}, {3.687966150281209*^9, 
   3.687966151654767*^9}, {3.6879662555146008`*^9, 3.687966276489634*^9}, {
   3.687966382895095*^9, 3.6879663988819647`*^9}, {3.687966751831118*^9, 
   3.6879667891663523`*^9}, {3.687966977405525*^9, 3.687966989555606*^9}, {
   3.687967026891163*^9, 3.687967032430191*^9}, {3.6879670999263983`*^9, 
   3.687967164282154*^9}, {3.6879672117070103`*^9, 3.687967221557747*^9}, {
   3.6879672844909153`*^9, 3.687967286368278*^9}, {3.687967536809739*^9, 
   3.68796755096875*^9}, {3.687968002307582*^9, 3.687968039215888*^9}, {
   3.6879680806067343`*^9, 3.687968089710753*^9}, {3.6879681523586884`*^9, 
   3.6879681581980257`*^9}, 3.687971050489574*^9, {3.688287881066416*^9, 
   3.688287910099519*^9}, {3.688571538435277*^9, 3.688571640617483*^9}, {
   3.688571719621088*^9, 3.688571720172166*^9}, {3.68857177757749*^9, 
   3.688571777849605*^9}, {3.688574701829377*^9, 3.688574717069368*^9}, {
   3.688577482902659*^9, 3.688577519200247*^9}, {3.689191333741084*^9, 
   3.6891913661052847`*^9}, {3.689191631730493*^9, 3.689191633418674*^9}, {
   3.689191836605588*^9, 3.689191877766695*^9}, {3.6891977090848*^9, 
   3.689197723153524*^9}, {3.690478187499771*^9, 3.6904782437814417`*^9}, {
   3.690479409641137*^9, 3.690479414981806*^9}, {3.693740807223802*^9, 
   3.693740914359632*^9}, {3.693741373977374*^9, 3.693741385290162*^9}, {
   3.693741626143965*^9, 3.693741628677339*^9}, {3.693750353545495*^9, 
   3.693750355015033*^9}, 3.693750431326503*^9, {3.6937778577001762`*^9, 
   3.693777865515349*^9}, {3.693779750796664*^9, 3.693779769122326*^9}, {
   3.693779827968123*^9, 3.693779832936337*^9}, {3.6940952720113*^9, 
   3.6940952894255133`*^9}, {3.694095336321527*^9, 3.694095337270402*^9}, {
   3.694097056114847*^9, 3.694097058494443*^9}, {3.694097090606649*^9, 
   3.694097124551701*^9}, {3.694097299851501*^9, 3.694097311598242*^9}, {
   3.69409744701939*^9, 3.694097451811501*^9}, {3.694097483211857*^9, 
   3.6940974920111322`*^9}, {3.694098027623019*^9, 3.69409803170265*^9}, {
   3.694783441995212*^9, 3.694783504157219*^9}, {3.694783534923525*^9, 
   3.694783581884001*^9}, {3.6947836589319143`*^9, 3.694783804854447*^9}, {
   3.696589478348522*^9, 3.6965894810013647`*^9}, {3.697579973569522*^9, 
   3.697579988311215*^9}, {3.697729846041853*^9, 3.697729846285396*^9}, {
   3.697731762110268*^9, 3.697731788099659*^9}, {3.698942676834106*^9, 
   3.6989427007771397`*^9}, {3.701791452190126*^9, 3.7017914660791187`*^9}, {
   3.701791813897546*^9, 3.701791876217098*^9}, 3.70179238190372*^9, {
   3.709336339938146*^9, 3.70933634513701*^9}, 3.7101059441635513`*^9, {
   3.710240061754465*^9, 3.710240064217064*^9}, {3.710252513935*^9, 
   3.71025260029497*^9}, {3.7102526318394012`*^9, 3.710252641806282*^9}, {
   3.710253653200513*^9, 3.7102537426812897`*^9}, {3.710254070217935*^9, 
   3.710254072322575*^9}, {3.7103244320424623`*^9, 3.7103244333507643`*^9}, {
   3.711497853061228*^9, 3.711497875557107*^9}, {3.712588671924768*^9, 
   3.71258867563128*^9}, {3.712590315491014*^9, 3.712590317440135*^9}, {
   3.7125974191235647`*^9, 3.712597427548102*^9}, {3.712597694786742*^9, 
   3.7125977068374147`*^9}, {3.712597833889655*^9, 3.712597841932135*^9}, {
   3.7125978833336363`*^9, 3.712597885939991*^9}, {3.7165113078814363`*^9, 
   3.7165114629777803`*^9}, {3.7165120125660343`*^9, 3.716512025021303*^9}, 
   3.716512265003735*^9, {3.716512336357492*^9, 3.7165124926777163`*^9}, {
   3.716512528684404*^9, 3.71651253176227*^9}, {3.716545773993039*^9, 
   3.7165457870941763`*^9}, {3.716546032051161*^9, 3.716546033264488*^9}, {
   3.716682715294182*^9, 3.71668274908251*^9}, {3.728648541048267*^9, 
   3.72864856409293*^9}, {3.7286488047449417`*^9, 3.7286488765047073`*^9}, 
   3.7286489224878397`*^9, 3.7286661267941093`*^9, {3.7296111061113977`*^9, 
   3.729611126855115*^9}, {3.729611212234722*^9, 3.729611298471634*^9}, {
   3.729613414969899*^9, 3.729613419681718*^9}, {3.729613814172146*^9, 
   3.729613831189801*^9}, {3.7297041494343843`*^9, 3.729704152281433*^9}, {
   3.732535855970099*^9, 3.732535874575885*^9}, {3.73253593234685*^9, 
   3.732535952722376*^9}, {3.732571928142281*^9, 3.7325719325083*^9}, {
   3.755176025185134*^9, 3.755176192822185*^9}, {3.755176305545495*^9, 
   3.755176310357321*^9}, {3.75517634386357*^9, 3.7551763564178247`*^9}, {
   3.7551764775001183`*^9, 3.755176477634253*^9}, {3.755176580701296*^9, 
   3.755176594746138*^9}, {3.7551766550825043`*^9, 3.7551766552236433`*^9}, {
   3.755176831489275*^9, 3.7551768329722137`*^9}, {3.755176937133898*^9, 
   3.755176967019574*^9}, {3.755177023670681*^9, 3.755177028995491*^9}, {
   3.755177233078466*^9, 3.755177280639101*^9}, {3.755177444348392*^9, 
   3.755177453819809*^9}, {3.755190502343609*^9, 3.755190515119348*^9}, {
   3.755372870829211*^9, 3.7553728789011593`*^9}, {3.758550152696217*^9, 
   3.758550161017745*^9}, {3.759132231212776*^9, 
   3.759132234975512*^9}},ExpressionUUID->"5d2565d9-25b6-4de7-9790-\
784aa4ef16af"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "SetModel", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Colors", "\[Rule]", 
      RowBox[{"ColorData", "[", 
       RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}]}], ",", 
     RowBox[{"LineStyles", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", "}"}], "}"}]}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"Graphics`PlotMarkers", "[", "]"}]}], ",", 
     RowBox[{"Gradient", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
     RowBox[{"Gradients", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<EEGreens\>\"", ",", "\"\<EEReds\>\"", ",", "\"\<EEBlues\>\""}], 
       "}"}]}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.68778266670955*^9, 3.687782704195657*^9}, {
   3.687782748153638*^9, 3.687782779887557*^9}, {3.687783058221438*^9, 
   3.687783060881928*^9}, {3.687966296138052*^9, 3.6879663037108183`*^9}, {
   3.68796813632402*^9, 3.687968140230082*^9}, {3.687968180450708*^9, 
   3.687968198529475*^9}, {3.687969544662148*^9, 3.687969553485238*^9}, {
   3.6879705894885*^9, 3.687970623173069*^9}, {3.687970735838107*^9, 
   3.6879707459851303`*^9}, 3.688571362569282*^9, {3.693748971272834*^9, 
   3.693748975074456*^9}, {3.693750584587438*^9, 3.693750588758709*^9}, {
   3.694776547024782*^9, 3.6947765552934504`*^9}, {3.694776697727501*^9, 
   3.6947767079017477`*^9}, {3.694783391100212*^9, 3.694783398115305*^9}, {
   3.727619485594096*^9, 3.7276195022465067`*^9}},
 CellLabel->
  "In[471]:=",ExpressionUUID->"fbcc4e35-2078-402b-954f-5f17b179ea67"]
}, Closed]],

Cell[CellGroupData[{

Cell["MatrixTo*Components", "Subsection",
 CellDingbat->"\[Wolf]",
 CellChangeTimes->{{3.732919340241602*^9, 3.732919344560482*^9}, 
   3.733524819988874*^9},ExpressionUUID->"6e23eb1e-2878-448d-8ce4-\
163815f54134"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MatrixToPopComponents", "[", 
    RowBox[{"a_", ",", "var_", ",", 
     RowBox[{"ncompsin_:", "Automatic"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ncomps", ",", "res"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ncompsin", "===", "Automatic"}], ",", 
        RowBox[{"ncomps", "=", 
         RowBox[{"Length", "[", "a", "]"}]}], ",", 
        RowBox[{"ncomps", "=", "ncompsin"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"Off", "[", 
       RowBox[{"Part", "::", "partd"}], "]"}], ";", "\n", "\t", 
      RowBox[{"res", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Component", "[", "c", "]"}], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Variable", "\[Rule]", 
             RowBox[{"var", "[", "c", "]"}]}], ",", 
            RowBox[{"Equation", "\[RuleDelayed]", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"(", 
               RowBox[{"Sum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"a", "\[LeftDoubleBracket]", 
                   RowBox[{"c", ",", "c\[Prime]"}], "\[RightDoubleBracket]"}], 
                  RowBox[{
                   RowBox[{"var", "[", "c\[Prime]", "]"}], "[", "t", "]"}]}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"c\[Prime]", ",", "ncomps"}], "}"}]}], "]"}], ")"}],
               "]"}]}]}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "ncomps"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"On", "[", 
       RowBox[{"Part", "::", "partd"}], "]"}], ";", "\[IndentingNewLine]", 
      "\t", 
      RowBox[{"Return", "[", "res", "]"}]}]}], "\n", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.732914457886091*^9, 3.732914473319949*^9}, {
   3.7329149075143433`*^9, 3.732914940955312*^9}, {3.7329165572900877`*^9, 
   3.732916572109544*^9}, {3.732918105503191*^9, 3.732918188413595*^9}, {
   3.7329182228003473`*^9, 3.7329182643212023`*^9}, {3.732918583621097*^9, 
   3.732918628442878*^9}, {3.7329193535935793`*^9, 3.732919366916873*^9}, {
   3.7329194470503263`*^9, 3.732919477041768*^9}, {3.7329195587881517`*^9, 
   3.732919564111171*^9}, {3.7329231273727093`*^9, 3.7329231415244303`*^9}, {
   3.732923282777381*^9, 3.7329232834272013`*^9}, {3.7330078204880667`*^9, 
   3.7330078338846893`*^9}, {3.733507774778584*^9, 3.733507825294853*^9}, {
   3.7335079130132303`*^9, 3.733507945316153*^9}, {3.733508068421904*^9, 
   3.7335080697482157`*^9}, {3.7335081062294188`*^9, 3.733508145604743*^9}, {
   3.733508279815361*^9, 3.733508336332361*^9}, {3.733508451150741*^9, 
   3.733508520465949*^9}, {3.733521368783247*^9, 3.733521379435356*^9}, {
   3.733521840156846*^9, 3.733521865783543*^9}, {3.733521906636341*^9, 
   3.733521972802689*^9}, {3.733522015550161*^9, 3.73352206580842*^9}, 
   3.733522294778337*^9, {3.733522852306818*^9, 3.733522854949551*^9}, {
   3.7335232552726593`*^9, 3.73352326581982*^9}, {3.733523399632316*^9, 
   3.733523407765934*^9}, {3.7335237771554947`*^9, 3.7335238018927298`*^9}, {
   3.733524148641231*^9, 3.733524149326105*^9}},
 CellLabel->
  "In[472]:=",ExpressionUUID->"b5355846-4612-40ba-9344-e61278b273fa"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MatrixToGuildComponents", "[", 
    RowBox[{"a_", ",", "var_", ",", 
     RowBox[{"ncompsin_:", "Automatic"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ncomps", ",", "res"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ncompsin", "===", "Automatic"}], ",", 
        RowBox[{"ncomps", "=", 
         RowBox[{"Length", "[", "a", "]"}]}], ",", 
        RowBox[{"ncomps", "=", "ncompsin"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"Off", "[", 
       RowBox[{"Part", "::", "partd"}], "]"}], ";", "\n", "\t", 
      RowBox[{"res", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Component", "[", "c", "]"}], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Variable", "\[Rule]", 
             RowBox[{"var", "[", "c", "]"}]}], ",", 
            RowBox[{
             RowBox[{"Equation", "\[RuleDelayed]", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"a", "\[LeftDoubleBracket]", 
                   RowBox[{"c", ",", "c\[Prime]"}], "\[RightDoubleBracket]"}], 
                  RowBox[{
                   RowBox[{"var", "[", "c\[Prime]", "]"}], "[", "t", "]"}]}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"c\[Prime]", ",", "ncomps"}], "}"}]}], "]"}], 
               "]"}]}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"var", "[", "c_", "]"}], "\[Rule]", 
               RowBox[{"Subscript", "[", 
                RowBox[{
                 RowBox[{"var", "[", "c", "]"}], ",", "#"}], "]"}]}], 
              "}"}]}]}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "ncomps"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"On", "[", 
       RowBox[{"Part", "::", "partd"}], "]"}], ";", "\[IndentingNewLine]", 
      "\t", 
      RowBox[{"Return", "[", 
       RowBox[{"res", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Equation", "\[RuleDelayed]", "eqn_"}], ")"}], "\[Rule]", 
          RowBox[{"(", 
           RowBox[{"Equation", "\[RuleDelayed]", 
            RowBox[{"(", 
             RowBox[{"eqn", "&"}], ")"}]}], ")"}]}], "}"}]}], "]"}]}]}], "\n",
     "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.732914457886091*^9, 3.732914473319949*^9}, {
   3.7329149075143433`*^9, 3.732914940955312*^9}, {3.7329165572900877`*^9, 
   3.732916572109544*^9}, {3.732918105503191*^9, 3.732918188413595*^9}, {
   3.7329182228003473`*^9, 3.7329182643212023`*^9}, {3.732918583621097*^9, 
   3.732918628442878*^9}, {3.7329193535935793`*^9, 3.732919366916873*^9}, {
   3.7329194470503263`*^9, 3.732919477041768*^9}, {3.7329195587881517`*^9, 
   3.732919564111171*^9}, {3.7329231273727093`*^9, 3.7329231415244303`*^9}, {
   3.732923282777381*^9, 3.7329232834272013`*^9}, {3.7330078204880667`*^9, 
   3.7330078338846893`*^9}, {3.733507774778584*^9, 3.733507825294853*^9}, {
   3.7335079130132303`*^9, 3.733507945316153*^9}, {3.733508068421904*^9, 
   3.7335080697482157`*^9}, {3.7335081062294188`*^9, 3.733508145604743*^9}, {
   3.733508279815361*^9, 3.733508336332361*^9}, {3.733508451150741*^9, 
   3.733508520465949*^9}, {3.733521368783247*^9, 3.733521379435356*^9}, {
   3.733521840156846*^9, 3.733521865783543*^9}, {3.733521906636341*^9, 
   3.733521972802689*^9}, {3.733522015550161*^9, 3.73352206580842*^9}, 
   3.733522294778337*^9, {3.733522852306818*^9, 3.733522854949551*^9}, {
   3.7335232552726593`*^9, 3.73352326581982*^9}, {3.733523399632316*^9, 
   3.733523401009831*^9}, {3.7335237815605516`*^9, 3.73352378771096*^9}},
 CellLabel->
  "In[473]:=",ExpressionUUID->"1315eb0c-a84d-487a-b675-57b816efcfc2"]
}, Closed]],

Cell[CellGroupData[{

Cell["ModelInfo", "Subsection",
 CellDingbat->
  "\[HeartSuit]",ExpressionUUID->"24b180e6-2f20-4392-8c5d-23ece71ea97f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ModelInfo", ":=", 
   RowBox[{"(", "\n", "\n", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
       RowBox[{
        RowBox[{"Msg", "[", 
         RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
        RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{"model", " ", "type"}], " ", "*)"}], "\n", "\n", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<ModelType=\>\"", ",", "modeltype"}], "]"}], ";", "\n", 
     "\n", 
     RowBox[{"(*", " ", 
      RowBox[{"aux", " ", "vars"}], " ", "*)"}], "\n", "\n", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<NumAuxs=\>\"", ",", "naux"}], "]"}], ";", "\n", 
     RowBox[{"Do", "[", "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<  AuxVar[\>\"", ",", "au", ",", "\"\<]=\>\"", ",", 
          RowBox[{"aux", "[", "au", "]"}]}], "]"}], ";", "\n", "\t", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<  AuxEqn[\>\"", ",", "au", ",", "\"\<]=\>\"", ",", 
          RowBox[{"auxeqn", "[", "au", "]"}]}], "]"}], ";", "\n", "\t", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<  AuxRange[\>\"", ",", "au", ",", "\"\<]=\>\"", ",", 
          RowBox[{"auxrange", "[", "au", "]"}]}], "]"}], ";"}], "\n", ",", 
       RowBox[{"{", 
        RowBox[{"au", ",", "naux"}], "}"}]}], "]"}], ";", "\n", "\n", 
     RowBox[{"(*", " ", "pops", " ", "*)"}], "\n", "\n", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<NumPops=\>\"", ",", "npops"}], "]"}], ";", "\n", 
     RowBox[{"Do", "[", "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<  NumComponents[\>\"", ",", "pop", ",", "\"\<]=\>\"", ",", 
          RowBox[{"npcomps", "[", "pop", "]"}]}], "]"}], ";", "\n", "\t", 
        RowBox[{"Do", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<    PopVar[\>\"", ",", "pop", ",", "\"\<,\>\"", ",", "pco", 
             ",", "\"\<]=\>\"", ",", 
             RowBox[{"pcomp", "[", 
              RowBox[{"pop", ",", "pco"}], "]"}]}], "]"}], ";", "\n", "\t\t", 
           
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<    PopEqn[\>\"", ",", "pop", ",", "\"\<,\>\"", ",", "pco", 
             ",", "\"\<]=\>\"", ",", 
             RowBox[{"pcompeqn", "[", 
              RowBox[{"pop", ",", "pco"}], "]"}]}], "]"}], ";", "\n", "\t\t", 
           
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<    PopRange[\>\"", ",", "pop", ",", "\"\<,\>\"", ",", "pco",
              ",", "\"\<]=\>\"", ",", 
             RowBox[{"pcomprange", "[", 
              RowBox[{"pop", ",", "pco"}], "]"}]}], "]"}], ";", "\n", "\t\t", 
           
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<    PopType[\>\"", ",", "pop", ",", "\"\<,\>\"", ",", "pco", 
             ",", "\"\<]=\>\"", ",", 
             RowBox[{"pcomptype", "[", 
              RowBox[{"pop", ",", "pco"}], "]"}]}], "]"}], ";"}], "\n", "\t", 
          ",", 
          RowBox[{"{", 
           RowBox[{"pco", ",", 
            RowBox[{"npcomps", "[", "pop", "]"}]}], "}"}]}], "]"}], ";"}], 
       "\n", ",", 
       RowBox[{"{", 
        RowBox[{"pop", ",", "npops"}], "}"}]}], "]"}], ";", "\n", "\n", 
     RowBox[{"(*", " ", "guilds", " ", "*)"}], "\n", "\n", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<NumGuilds=\>\"", ",", "nguilds"}], "]"}], ";", "\n", 
     RowBox[{"Do", "[", "\n", 
      RowBox[{"(*", "\t", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<  GuildName[\>\"", ",", "gu", ",", "\"\<]=\>\"", ",", 
          RowBox[{"guildname", "[", "gu", "]"}]}], "]"}], ";"}], "*)"}], "\n",
       "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<  NumGuildComponents[\>\"", ",", "gu", ",", "\"\<]=\>\"", ",", 
          RowBox[{"ngcomps", "[", "gu", "]"}]}], "]"}], ";", "\n", "\t", 
        RowBox[{"Do", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<    GuildComponentVar[\>\"", ",", "gu", ",", "\"\<,\>\"", 
             ",", "gco", ",", "\"\<]=\>\"", ",", 
             RowBox[{"gcomp", "[", 
              RowBox[{"gu", ",", "gco"}], "]"}]}], "]"}], ";", "\n", "\t\t", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<    GuildComponentEqn[\>\"", ",", "gu", ",", "\"\<,\>\"", 
             ",", "gco", ",", "\"\<]=\>\"", ",", 
             RowBox[{"gcompeqn", "[", 
              RowBox[{"gu", ",", "gco"}], "]"}]}], "]"}], ";", "\n", "\t\t", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<    GuildComponentRange[\>\"", ",", "gu", ",", "\"\<,\>\"", 
             ",", "gco", ",", "\"\<]=\>\"", ",", 
             RowBox[{"gcomprange", "[", 
              RowBox[{"gu", ",", "gco"}], "]"}]}], "]"}], ";", "\n", "\t\t", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<    GuildComponentType[\>\"", ",", "gu", ",", "\"\<,\>\"", 
             ",", "gco", ",", "\"\<]=\>\"", ",", 
             RowBox[{"gcomptype", "[", 
              RowBox[{"gu", ",", "gco"}], "]"}]}], "]"}], ";"}], "\n", "\t", 
          ",", 
          RowBox[{"{", 
           RowBox[{"gco", ",", 
            RowBox[{"ngcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ";", "\n", 
        "\t", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<  NumTraits[\>\"", ",", "gu", ",", "\"\<]=\>\"", ",", 
          RowBox[{"ntraits", "[", "gu", "]"}]}], "]"}], ";", "\n", "\t", 
        RowBox[{"Do", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<    TraitVar[\>\"", ",", "gu", ",", "\"\<,\>\"", ",", "tr", 
             ",", "\"\<]=\>\"", ",", 
             RowBox[{"trait", "[", 
              RowBox[{"gu", ",", "tr"}], "]"}]}], "]"}], ";", "\n", "\t\t", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<    TraitRange[\>\"", ",", "gu", ",", "\"\<,\>\"", ",", "tr",
              ",", "\"\<]=\>\"", ",", 
             RowBox[{"traitrange", "[", 
              RowBox[{"gu", ",", "tr"}], "]"}]}], "]"}], ";"}], "\n", "\t", 
          ",", 
          RowBox[{"{", 
           RowBox[{"tr", ",", 
            RowBox[{"ntraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ";"}], 
       "\n", ",", 
       RowBox[{"{", 
        RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ";"}], "\n", "\n", 
    ")"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.698942716521473*^9, 3.698942726597053*^9}, {
   3.709337098769092*^9, 3.70933709906194*^9}, 3.7101059450395203`*^9, 
   3.7555382107400846`*^9, {3.7555382696656427`*^9, 
   3.755538273312888*^9}},ExpressionUUID->"06b6773e-1d17-44b3-ab11-\
11f95a90822c"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
FromUnks / ToUnks / ToUnkRules / AllTraits / AllVariables / BlankTraits / \
BlankUnkTraits / BlankVariables / ExpandNspIn* / SetNsp / ExpRule\
\>", "Subsection",
 CellDingbat->"\[HeartSuit]",
 CellChangeTimes->{{3.688579068634553*^9, 3.688579071254909*^9}, {
   3.688583913731683*^9, 3.688583916564062*^9}, {3.693700257044292*^9, 
   3.693700287486*^9}, {3.709124914994886*^9, 3.7091249170748787`*^9}, 
   3.712738534268155*^9, {3.731980085042235*^9, 3.731980090946699*^9}, {
   3.7352306562892857`*^9, 3.735230657889414*^9}, {3.755725048979398*^9, 
   3.755725051063348*^9}, {3.758537894410185*^9, 3.758537899521847*^9}, {
   3.758539253436051*^9, 3.758539255912182*^9}, {3.758713504660163*^9, 
   3.758713506305879*^9}},ExpressionUUID->"c0f4bb92-05a1-4c2b-bca6-\
5ae1accd8604"],

Cell[BoxData[
 RowBox[{"FromUnks", ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"unk", "[", 
           RowBox[{
            RowBox[{"gcomp", "[", 
             RowBox[{"gu", ",", "gco"}], "]"}], ",", "\[FormalS]_"}], "]"}], 
          "\[Rule]", 
          RowBox[{"Subscript", "[", 
           RowBox[{
            RowBox[{"gcomp", "[", 
             RowBox[{"gu", ",", "gco"}], "]"}], ",", "\[FormalS]"}], "]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"gco", ",", 
           RowBox[{"ngcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", "\t", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"unk", "[", 
           RowBox[{"pcomp", "[", 
            RowBox[{"pop", ",", "pco"}], "]"}], "]"}], "\[Rule]", 
          RowBox[{"pcomp", "[", 
           RowBox[{"pop", ",", "pco"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"pco", ",", 
           RowBox[{"npcomps", "[", "pop", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"pop", ",", "npops"}], "}"}]}], "]"}], ",", "\n", "\t", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"unk", "[", 
         RowBox[{"aux", "[", "au", "]"}], "]"}], "\[Rule]", 
        RowBox[{"aux", "[", "au", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"au", ",", "naux"}], "}"}]}], "]"}], ",", "\n", "\t", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"unk", "[", 
           RowBox[{
            RowBox[{"trait", "[", 
             RowBox[{"gu", ",", "tr"}], "]"}], ",", "\[FormalS]_"}], "]"}], 
          "\[Rule]", 
          RowBox[{"Subscript", "[", 
           RowBox[{
            RowBox[{"trait", "[", 
             RowBox[{"gu", ",", "tr"}], "]"}], ",", "\[FormalS]"}], "]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"tr", ",", 
           RowBox[{"ntraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "\n", "}"}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.7352306469005136`*^9, 3.7352306533618517`*^9}, 
   3.755177709734589*^9, 3.755179828029705*^9, {3.7585203794127817`*^9, 
   3.758520384873486*^9}},ExpressionUUID->"b3fbb569-f456-43f2-a503-\
02a14376ce86"],

Cell[BoxData[
 RowBox[{"FromUnks", ":=", 
  RowBox[{
   RowBox[{"unk", "[", "stuff___", "]"}], "\[Rule]", "stuff"}]}]], "Code",
 CellChangeTimes->{{3.7588264317489223`*^9, 
  3.75882644392819*^9}},ExpressionUUID->"4edaf99c-bd16-4b1b-a38e-\
cb4e0eb9de4d"],

Cell[BoxData[
 RowBox[{"ToUnks", ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{
            RowBox[{"gcomp", "[", 
             RowBox[{"gu", ",", "gco"}], "]"}], ",", "\[FormalS]_"}], "]"}], 
          "\[Rule]", 
          RowBox[{"unk", "[", 
           RowBox[{"Subscript", "[", 
            RowBox[{
             RowBox[{"gcomp", "[", 
              RowBox[{"gu", ",", "gco"}], "]"}], ",", "\[FormalS]"}], "]"}], 
           "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"gco", ",", 
           RowBox[{"ngcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", "\t", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"pcomp", "[", 
           RowBox[{"pop", ",", "pco"}], "]"}], "\[Rule]", 
          RowBox[{"unk", "[", 
           RowBox[{"pcomp", "[", 
            RowBox[{"pop", ",", "pco"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"pco", ",", 
           RowBox[{"npcomps", "[", "pop", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"pop", ",", "npops"}], "}"}]}], "]"}], ",", "\n", "\t", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"aux", "[", "au", "]"}], "\[Rule]", 
        RowBox[{"unk", "[", 
         RowBox[{"aux", "[", "au", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"au", ",", "naux"}], "}"}]}], "]"}], ",", "\n", "\t", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{
            RowBox[{"trait", "[", 
             RowBox[{"gu", ",", "tr"}], "]"}], ",", "\[FormalS]_"}], "]"}], 
          "\[Rule]", 
          RowBox[{"unk", "[", 
           RowBox[{"Subscript", "[", 
            RowBox[{
             RowBox[{"trait", "[", 
              RowBox[{"gu", ",", "tr"}], "]"}], ",", "\[FormalS]"}], "]"}], 
           "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"tr", ",", 
           RowBox[{"ntraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "\n", "}"}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.7352306469005136`*^9, 3.7352306533618517`*^9}, 
   3.755177709734589*^9, 3.755179828029705*^9, {3.7585203794127817`*^9, 
   3.758520384873486*^9}, {3.7585392082667923`*^9, 3.7585392469298153`*^9}, {
   3.7585408800685177`*^9, 3.758540886661631*^9}, {3.758826413647697*^9, 
   3.758826423455049*^9}, {3.758826788003377*^9, 
   3.7588267904063253`*^9}},ExpressionUUID->"46af1460-7dd9-4c26-94d2-\
3882d7908021"],

Cell[BoxData[
 RowBox[{"ToUnkRules", ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Join", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{
              RowBox[{"gcomp", "[", 
               RowBox[{"gu", ",", "gco"}], "]"}], ",", "\[FormalS]_"}], "]"}],
             "\[Rule]", 
            RowBox[{"Subscript", "[", 
             RowBox[{
              RowBox[{"gcomp", "[", 
               RowBox[{"gu", ",", "gco"}], "]"}], ",", "\[FormalS]_"}], 
             "]"}]}], ")"}], "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{
              RowBox[{"gcomp", "[", 
               RowBox[{"gu", ",", "gco"}], "]"}], ",", "\[FormalS]"}], "]"}], 
            "\[Rule]", 
            RowBox[{"unk", "[", 
             RowBox[{"Subscript", "[", 
              RowBox[{
               RowBox[{"gcomp", "[", 
                RowBox[{"gu", ",", "gco"}], "]"}], ",", "\[FormalS]"}], "]"}],
              "]"}]}], ")"}]}], "\n", "\t", ",", 
         RowBox[{"{", 
          RowBox[{"gco", ",", 
           RowBox[{"ngcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", "\t", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{
              RowBox[{"gcomp", "[", 
               RowBox[{"gu", ",", "gco"}], "]"}], ",", "\[FormalS]_"}], "]"}],
             "\[Rule]", 
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{
               RowBox[{"gcomp", "[", 
                RowBox[{"gu", ",", "gco"}], "]"}], ",", "\[FormalS]_"}], 
              "]"}], "[", "t", "]"}]}], ")"}], "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{
              RowBox[{"gcomp", "[", 
               RowBox[{"gu", ",", "gco"}], "]"}], ",", "\[FormalS]"}], "]"}], 
            "\[Rule]", 
            RowBox[{
             RowBox[{"unk", "[", 
              RowBox[{"Subscript", "[", 
               RowBox[{
                RowBox[{"gcomp", "[", 
                 RowBox[{"gu", ",", "gco"}], "]"}], ",", "\[FormalS]"}], 
               "]"}], "]"}], "[", "t", "]"}]}], ")"}]}], "\n", "\t", ",", 
         RowBox[{"{", 
          RowBox[{"gco", ",", 
           RowBox[{"ngcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", "\t", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"pcomp", "[", 
             RowBox[{"pop", ",", "pco"}], "]"}], "\[Rule]", 
            RowBox[{
             RowBox[{"pcomp", "[", 
              RowBox[{"pop", ",", "pco"}], "]"}], "[", "t", "]"}]}], ")"}], 
          "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"pcomp", "[", 
             RowBox[{"pop", ",", "pco"}], "]"}], "\[Rule]", 
            RowBox[{
             RowBox[{"unk", "[", 
              RowBox[{"pcomp", "[", 
               RowBox[{"pop", ",", "pco"}], "]"}], "]"}], "[", "t", "]"}]}], 
           ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"pco", ",", 
           RowBox[{"npcomps", "[", "pop", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"pop", ",", "npops"}], "}"}]}], "]"}], ",", "\n", "\t", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"aux", "[", "au", "]"}], "\[Rule]", 
          RowBox[{
           RowBox[{"aux", "[", "au", "]"}], "[", "t", "]"}]}], ")"}], 
        "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"aux", "[", "au", "]"}], "\[Rule]", 
          RowBox[{
           RowBox[{"unk", "[", 
            RowBox[{"aux", "[", "au", "]"}], "]"}], "[", "t", "]"}]}], 
         ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"au", ",", "naux"}], "}"}]}], "]"}], ",", "\n", "\t", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{
              RowBox[{"trait", "[", 
               RowBox[{"gu", ",", "tr"}], "]"}], ",", "\[FormalS]_"}], "]"}], 
            "\[Rule]", 
            RowBox[{"Subscript", "[", 
             RowBox[{
              RowBox[{"trait", "[", 
               RowBox[{"gu", ",", "tr"}], "]"}], ",", "\[FormalS]_"}], 
             "]"}]}], ")"}], "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{
              RowBox[{"trait", "[", 
               RowBox[{"gu", ",", "tr"}], "]"}], ",", "\[FormalS]"}], "]"}], 
            "\[Rule]", 
            RowBox[{"unk", "[", 
             RowBox[{"Subscript", "[", 
              RowBox[{
               RowBox[{"trait", "[", 
                RowBox[{"gu", ",", "tr"}], "]"}], ",", "\[FormalS]"}], "]"}], 
             "]"}]}], ")"}]}], "\n", "\t", ",", 
         RowBox[{"{", 
          RowBox[{"tr", ",", 
           RowBox[{"ntraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", "\t", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{
              RowBox[{"trait", "[", 
               RowBox[{"gu", ",", "tr"}], "]"}], ",", "\[FormalS]_"}], "]"}], 
            "\[Rule]", 
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{
               RowBox[{"trait", "[", 
                RowBox[{"gu", ",", "tr"}], "]"}], ",", "\[FormalS]_"}], "]"}],
              "[", "t", "]"}]}], ")"}], "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{
              RowBox[{"trait", "[", 
               RowBox[{"gu", ",", "tr"}], "]"}], ",", "\[FormalS]"}], "]"}], 
            "\[Rule]", 
            RowBox[{
             RowBox[{"unk", "[", 
              RowBox[{"Subscript", "[", 
               RowBox[{
                RowBox[{"trait", "[", 
                 RowBox[{"gu", ",", "tr"}], "]"}], ",", "\[FormalS]"}], "]"}],
               "]"}], "[", "t", "]"}]}], ")"}]}], "\n", "\t", ",", 
         RowBox[{"{", 
          RowBox[{"tr", ",", 
           RowBox[{"ntraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "\n", "]"}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.758713547034795*^9, 3.758713593727838*^9}, {
  3.7587138895687237`*^9, 3.7587138922111263`*^9}, {3.758825249181641*^9, 
  3.758825269261628*^9}, {3.75882530433006*^9, 3.7588253083958597`*^9}, {
  3.7588253431792192`*^9, 3.758825348841372*^9}, {3.758826459456697*^9, 
  3.758826487343869*^9}, {3.7590416355776463`*^9, 
  3.759041691948291*^9}},ExpressionUUID->"6230d47a-2d8a-4b6b-bff8-\
03145e3fa31e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AllTraits", ":=", 
   RowBox[{"Flatten", "[", "\n", "\t", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{
            RowBox[{"trait", "[", 
             RowBox[{"gu", ",", "tr"}], "]"}], ",", "sp"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"tr", ",", 
            RowBox[{"ntraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"sp", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Nsp", "[", "gu", "]"}], "\[Equal]", "0"}], ",", "0", 
            ",", "1"}], "]"}], ",", 
          RowBox[{"Nsp", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "]"}]}], ";"}]], "Code",\

 CellChangeTimes->{{3.69364937464179*^9, 3.6936494153621387`*^9}, 
   3.693649466736812*^9, {3.710285824408537*^9, 3.710285827279024*^9}, {
   3.73163249856693*^9, 3.731632514469075*^9}, {3.731980100934689*^9, 
   3.73198011119555*^9}, 
   3.755177712838704*^9},ExpressionUUID->"1a79011a-8ac3-4493-9a6f-\
4cca8d1ac8c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AllVariables", ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Join", "[", "\t\t\t\t", "\n", "\t", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{
              RowBox[{"gcomp", "[", 
               RowBox[{"gu", ",", "gco"}], "]"}], ",", "sp"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"gco", ",", 
              RowBox[{"ngcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"sp", ",", 
            RowBox[{"Nsp", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", "\t", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"pcomp", "[", 
           RowBox[{"pop", ",", "pco"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"pco", ",", 
            RowBox[{"npcomps", "[", "pop", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"pop", ",", "npops"}], "}"}]}], "]"}], ",", "\n", "\t", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"aux", "[", "au", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"au", ",", "naux"}], "}"}]}], "]"}]}], "\n", "]"}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.6936494467363777`*^9, 3.693649486696768*^9}, {
   3.693700283097127*^9, 3.693700283368709*^9}, 3.709337119782999*^9, {
   3.710285813154852*^9, 3.710285816774274*^9}, 3.712738534281795*^9, {
   3.731980122530922*^9, 3.731980134569532*^9}, 
   3.755177714767127*^9},ExpressionUUID->"bd50f148-24b2-4f47-9e1c-\
b5683e04af76"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BlankTraits", ":=", 
   RowBox[{"Flatten", "[", "\n", "\t", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{
             RowBox[{"trait", "[", 
              RowBox[{"gu", ",", "tr"}], "]"}], ",", "sp"}], "]"}], "\[Rule]", 
           RowBox[{"Subscript", "[", 
            RowBox[{
             RowBox[{"trait", "[", 
              RowBox[{"gu", ",", "tr"}], "]"}], ",", "sp"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"tr", ",", 
            RowBox[{"ntraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"sp", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Nsp", "[", "gu", "]"}], "\[Equal]", "0"}], ",", "0", 
            ",", "1"}], "]"}], ",", 
          RowBox[{"Nsp", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "]"}]}], ";"}]], "Code",\

 CellChangeTimes->{{3.69364937464179*^9, 3.6936494153621387`*^9}, 
   3.693649466736812*^9, {3.710285824408537*^9, 3.710285827279024*^9}, {
   3.73163249856693*^9, 3.731632514469075*^9}, 
   3.755177718663726*^9},ExpressionUUID->"fe360ad0-a312-427e-9d9d-\
4aaa27e78fde"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BlankUnkTraits", ":=", 
   RowBox[{"Flatten", "[", "\n", "\t", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"unk", "[", 
           RowBox[{"Subscript", "[", 
            RowBox[{
             RowBox[{"trait", "[", 
              RowBox[{"gu", ",", "tr"}], "]"}], ",", "sp"}], "]"}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"tr", ",", 
            RowBox[{"ntraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"sp", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Nsp", "[", "gu", "]"}], "\[Equal]", "0"}], ",", "0", 
            ",", "1"}], "]"}], ",", 
          RowBox[{"Nsp", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "]"}]}], ";"}]], "Code",\

 CellChangeTimes->{{3.69364937464179*^9, 3.6936494153621387`*^9}, 
   3.693649466736812*^9, {3.710285824408537*^9, 3.710285827279024*^9}, {
   3.73163249856693*^9, 3.731632514469075*^9}, 3.755177718663726*^9, {
   3.758817424038797*^9, 3.75881742679858*^9}, {3.75881788563667*^9, 
   3.75881788780518*^9}, {3.758826499836075*^9, 3.758826502932578*^9}, {
   3.758826565905765*^9, 3.758826612865366*^9}, {3.7588267134796047`*^9, 
   3.758826714569168*^9}},ExpressionUUID->"378a5dd2-87b9-4091-9237-\
bc45f9167fe5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BlankVariables", ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Join", "[", "\t\t\t\t", "\n", "\t", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{
               RowBox[{"gcomp", "[", 
                RowBox[{"gu", ",", "gco"}], "]"}], ",", "sp"}], "]"}], 
             "\[Rule]", 
             RowBox[{"Subscript", "[", 
              RowBox[{
               RowBox[{"gcomp", "[", 
                RowBox[{"gu", ",", "gco"}], "]"}], ",", "sp"}], "]"}]}], ",", 
            
            RowBox[{"{", 
             RowBox[{"gco", ",", 
              RowBox[{"ngcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"sp", ",", 
            RowBox[{"Nsp", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", "\t", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"pcomp", "[", 
            RowBox[{"pop", ",", "pco"}], "]"}], "\[Rule]", 
           RowBox[{"pcomp", "[", 
            RowBox[{"pop", ",", "pco"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"pco", ",", 
            RowBox[{"npcomps", "[", "pop", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"pop", ",", "npops"}], "}"}]}], "]"}], ",", "\n", "\t", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"aux", "[", "au", "]"}], "\[Rule]", 
         RowBox[{"aux", "[", "au", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"au", ",", "naux"}], "}"}]}], "]"}]}], "\n", "]"}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.6936494467363777`*^9, 3.693649486696768*^9}, {
   3.693700283097127*^9, 3.693700283368709*^9}, 3.709337119782999*^9, {
   3.710285813154852*^9, 3.710285816774274*^9}, 3.712738534281795*^9, 
   3.7551777209488783`*^9, {3.75881842318817*^9, 3.758818436727421*^9}, {
   3.758823777038122*^9, 
   3.758823789290497*^9}},ExpressionUUID->"c53dca45-4387-48f1-b089-\
ff668065f0ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BlankUnkVariables", ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Join", "[", "\t\t\t\t", "\n", "\t", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{
               RowBox[{"gcomp", "[", 
                RowBox[{"gu", ",", "gco"}], "]"}], ",", "sp"}], "]"}], 
             "\[Rule]", 
             RowBox[{"unk", "[", 
              RowBox[{"Subscript", "[", 
               RowBox[{
                RowBox[{"gcomp", "[", 
                 RowBox[{"gu", ",", "gco"}], "]"}], ",", "sp"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"gco", ",", 
              RowBox[{"ngcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"sp", ",", 
            RowBox[{"Nsp", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", "\t", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"pcomp", "[", 
            RowBox[{"pop", ",", "pco"}], "]"}], "\[Rule]", 
           RowBox[{"unk", "[", 
            RowBox[{"pcomp", "[", 
             RowBox[{"pop", ",", "pco"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"pco", ",", 
            RowBox[{"npcomps", "[", "pop", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"pop", ",", "npops"}], "}"}]}], "]"}], ",", "\n", "\t", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"aux", "[", "au", "]"}], "\[Rule]", 
         RowBox[{"unk", "[", 
          RowBox[{"aux", "[", "au", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"au", ",", "naux"}], "}"}]}], "]"}]}], "\n", "]"}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.6936494467363777`*^9, 3.693649486696768*^9}, {
   3.693700283097127*^9, 3.693700283368709*^9}, 3.709337119782999*^9, {
   3.710285813154852*^9, 3.710285816774274*^9}, 3.712738534281795*^9, 
   3.7551777209488783`*^9, {3.75881842318817*^9, 3.758818436727421*^9}, {
   3.75882650943286*^9, 
   3.75882651180029*^9}},ExpressionUUID->"b0a23c22-3ae6-4ee7-8673-\
c41ce249de75"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExpandNspInTraits", "[", "traits_", "]"}], ":=", 
   RowBox[{"traits", "/.", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Nsp", "[", "gu_", "]"}], "\[Rule]", "nsp_"}], ")"}], 
     "\[RuleDelayed]", "\n", 
     RowBox[{"Sequence", "@@", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{
              RowBox[{"trait", "[", 
               RowBox[{"gu", ",", "tr"}], "]"}], ",", "sp"}], "]"}], 
            "\[Rule]", 
            RowBox[{"Subscript", "[", 
             RowBox[{
              RowBox[{"trait", "[", 
               RowBox[{"gu", ",", "tr"}], "]"}], ",", "sp"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"tr", ",", 
             RowBox[{"ntraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"sp", ",", "nsp"}], "}"}]}], "]"}], "]"}]}]}]}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.693699746990479*^9, 3.693699747001142*^9}, {
  3.693699778264751*^9, 3.69369978404256*^9}, {3.709124768363275*^9, 
  3.7091247942582893`*^9}},
 CellLabel->
  "In[480]:=",ExpressionUUID->"1d24e3ff-121d-43f6-9720-32f75b60ceb5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExpandNspInPops", "[", "pops_", "]"}], ":=", 
   RowBox[{"pops", "/.", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Nsp", "[", "gu_", "]"}], "\[Rule]", "nsp_"}], ")"}], 
     "\[RuleDelayed]", "\[IndentingNewLine]", 
     RowBox[{"Sequence", "@@", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{
              RowBox[{"gcomp", "[", 
               RowBox[{"gu", ",", "pco"}], "]"}], ",", "sp"}], "]"}], 
            "\[Rule]", 
            RowBox[{"Subscript", "[", 
             RowBox[{
              RowBox[{"gcomp", "[", 
               RowBox[{"gu", ",", "pco"}], "]"}], ",", "sp"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"pco", ",", 
             RowBox[{"ngcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"sp", ",", "nsp"}], "}"}]}], "]"}], "]"}]}]}]}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.709124778756534*^9, 3.7091248314890747`*^9}, {
  3.70913598735986*^9, 3.709135987505537*^9}},
 CellLabel->
  "In[481]:=",ExpressionUUID->"30b6afca-af0a-4547-9be0-0f0b9410b679"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExpRule", "[", 
    RowBox[{"vars_List", ",", "logged_"}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"logged", "===", "True"}], "&&", 
        RowBox[{
         RowBox[{"type", "[", "var", "]"}], "===", "\"\<Extensive\>\""}]}], 
       ",", 
       RowBox[{
        RowBox[{"var", "[", "t", "]"}], "\[Rule]", 
        RowBox[{"E", "^", 
         RowBox[{
          RowBox[{"log", "[", "var", "]"}], "[", "t", "]"}]}]}], ",", 
       "Nothing"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"var", ",", "vars"}], "}"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7557092886304913`*^9, 3.755709339878284*^9}, {
   3.755709397273024*^9, 3.755709510551127*^9}, {3.7557254394763517`*^9, 
   3.755725442738577*^9}, {3.755796931534617*^9, 3.755796932005772*^9}, 
   3.7557970465609093`*^9},ExpressionUUID->"f5626f8e-f3f9-4be7-8201-\
3ad7cc44af30"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SetNsp", "[", 
    RowBox[{
     RowBox[{"traits", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "TraitsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"pops", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"tmp", ",", "tnsp", ",", "pnsp"}], "}"}], ",", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<In SetNsp, traits=\>\"", ",", "traits", ",", "\"\< pops=\>\"", 
          ",", "pops"}], "]"}], ";"}], "*)"}], "\n", "\n", "\t", 
      RowBox[{
       RowBox[{"Do", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"tmp", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{"Select", "[", 
                  RowBox[{"pops", ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], 
                    "\[Equal]", "Subscript"}], "&"}]}], "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
                   "\[Equal]", 
                   RowBox[{"gcomp", "[", 
                    RowBox[{"gu", ",", "gco"}], "]"}]}], "&"}]}], "]"}], 
               "\[LeftDoubleBracket]", 
               RowBox[{"All", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}],
               "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"gco", ",", 
               RowBox[{"ngcomps", "[", "gu", "]"}]}], "}"}]}], "]"}]}], ";", 
          "\n", "\t\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{"Union", "[", "tmp", "]"}], "]"}], "\[Equal]", "1"}], 
            ",", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"pnsp", "[", "gu", "]"}], "=", 
             RowBox[{
             "tmp", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
            ",", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"Msg", "[", 
              RowBox[{
               RowBox[{"SetNsp", "::", "badcomm"}], ",", "gu", ",", "tmp"}], 
              "]"}], ";", "\n", "\t\t\t", 
             RowBox[{"Abort", "[", "]"}]}]}], "\n", "\t\t", "]"}], ";", "\n", 
          "\t\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"pnsp", "[", "gu", "]"}], "\[Equal]", 
             RowBox[{"-", "\[Infinity]"}]}], ",", 
            RowBox[{
             RowBox[{"pnsp", "[", "gu", "]"}], "=", "0"}]}], "]"}], ";"}], 
         "\n", "\t", ",", 
         RowBox[{"{", 
          RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ";", "\n", "\t", 
       "\n", "\t", 
       RowBox[{"Do", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ntraits", "[", "gu", "]"}], "\[NotEqual]", "0"}], ",", 
           "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"tmp", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{"Select", "[", 
                  RowBox[{
                   RowBox[{"Select", "[", 
                    RowBox[{"traits", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], 
                    "\[Equal]", "Subscript"}], "&"}]}], "]"}], ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "\[Equal]", 
                    RowBox[{"trait", "[", 
                    RowBox[{"gu", ",", "tr"}], "]"}]}], "&"}]}], "]"}], 
                 "\[LeftDoubleBracket]", 
                 RowBox[{"All", ",", "1", ",", "2"}], 
                 "\[RightDoubleBracket]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"tr", ",", 
                 RowBox[{"ntraits", "[", "gu", "]"}]}], "}"}]}], "]"}]}], ";",
             "\n", "\t\t\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"Union", "[", "tmp", "]"}], "]"}], "\[Equal]", "1"}], 
              ",", "\n", "\t\t\t\t", 
              RowBox[{
               RowBox[{"tnsp", "[", "gu", "]"}], "=", 
               RowBox[{
               "tmp", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}], ",", "\n", "\t\t\t\t", 
              RowBox[{
               RowBox[{"Msg", "[", 
                RowBox[{
                 RowBox[{"SetNsp", "::", "badtr"}], ",", "gu", ",", "tmp"}], 
                "]"}], ";", "\n", "\t\t\t\t", 
               RowBox[{"Abort", "[", "]"}]}]}], "\n", "\t\t\t", "]"}], ";", 
            "\n", "\t\t\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"tnsp", "[", "gu", "]"}], "\[Equal]", 
               RowBox[{"-", "\[Infinity]"}]}], ",", 
              RowBox[{
               RowBox[{"tnsp", "[", "gu", "]"}], "=", "0"}]}], "]"}], ";"}], 
           "\n", "\t\t", ",", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"tnsp", "[", "gu", "]"}], "=", 
            RowBox[{"pnsp", "[", "gu", "]"}]}]}], "\n", "\t\t", "]"}], "\n", 
         "\t", ",", 
         RowBox[{"{", 
          RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ";", "\n", "\t", 
       "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<SetNsp: tnsp=\>\"", ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"tnsp", "[", "gu", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"gu", ",", "nguilds"}], "}"}]}], "]"}], ",", 
           "\"\< pnsp=\>\"", ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"pnsp", "[", "gu", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"gu", ",", "nguilds"}], "}"}]}], "]"}]}], "]"}], ";"}], 
        "*)"}], "\n", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"tnsp", "[", "gu", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "\[Equal]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"pnsp", "[", "gu", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "||", 
          RowBox[{"pops", "\[Equal]", 
           RowBox[{"{", "}"}]}], "||", 
          RowBox[{"traits", "\[Equal]", 
           RowBox[{"{", "}"}]}]}], ",", "\n", "\t\t", 
         RowBox[{"Do", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"Nsp", "[", "gu", "]"}], "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"traits", "\[NotEqual]", 
               RowBox[{"{", "}"}]}], ",", 
              RowBox[{"tnsp", "[", "gu", "]"}], ",", 
              RowBox[{"pnsp", "[", "gu", "]"}]}], "]"}]}], "\n", "\t\t", ",", 
           
           RowBox[{"{", 
            RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "\n", "\t", ",", 
         "\n", "\t\t", 
         RowBox[{
          RowBox[{"Msg", "[", 
           RowBox[{
            RowBox[{"SetNsp", "::", "badnsp"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"tnsp", "[", "gu", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"pnsp", "[", "gu", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "]"}], ";", 
          "\n", "\t\t", 
          RowBox[{"Abort", "[", "]"}]}]}], "\n", "\t", "]"}], ";"}]}], "\n", 
     "]"}], "/;", 
    RowBox[{"(", 
     RowBox[{"nguilds", "\[NotEqual]", "0"}], ")"}]}]}], ";"}]], "Code",
 CellChangeTimes->{{3.688579086955159*^9, 3.688579180193223*^9}, {
   3.688580555989731*^9, 3.688580566388729*^9}, {3.68858065030599*^9, 
   3.6885806721948147`*^9}, {3.6885826303201113`*^9, 
   3.6885826783752337`*^9}, {3.688582924455892*^9, 3.688582925530192*^9}, {
   3.688582970672365*^9, 3.688582978502492*^9}, {3.688583020561263*^9, 
   3.688583025007845*^9}, {3.688583105125451*^9, 3.688583105808675*^9}, {
   3.68858369069287*^9, 3.688583698406364*^9}, 3.688584478036951*^9, {
   3.688585261986971*^9, 3.688585265026821*^9}, {3.6885883334818277`*^9, 
   3.688588335501728*^9}, {3.6885883762288837`*^9, 3.688588378909995*^9}, {
   3.688588416859016*^9, 3.688588485019401*^9}, {3.688588529892256*^9, 
   3.688588590643197*^9}, {3.688588642096621*^9, 3.688588778290824*^9}, {
   3.688589265020664*^9, 3.6885893715253067`*^9}, {3.6885945191752977`*^9, 
   3.688594519893338*^9}, {3.688594603505329*^9, 3.688594611820771*^9}, {
   3.688594746041967*^9, 3.688594753248499*^9}, {3.6885950331636467`*^9, 
   3.6885950509754143`*^9}, {3.688595146261627*^9, 3.688595193082739*^9}, 
   3.688596043934252*^9, {3.68859640426191*^9, 3.6885964804259577`*^9}, {
   3.688596582016201*^9, 3.688596675350301*^9}, {3.688596733553178*^9, 
   3.688596735151145*^9}, {3.688596792051854*^9, 3.68859683348696*^9}, {
   3.688596896449972*^9, 3.688596915270768*^9}, {3.688597014906212*^9, 
   3.688597022695496*^9}, {3.688601787805529*^9, 3.688601833259913*^9}, {
   3.688601886667426*^9, 3.688601956064496*^9}, {3.6886019886131372`*^9, 
   3.688602071462656*^9}, {3.6886021345965652`*^9, 3.6886021568432703`*^9}, {
   3.6886022176261168`*^9, 3.688602245178185*^9}, {3.688602374408743*^9, 
   3.688602378267004*^9}, {3.6886394764181843`*^9, 3.688639477041656*^9}, {
   3.6886424239326963`*^9, 3.688642549139924*^9}, {3.688642596996933*^9, 
   3.688642649802576*^9}, {3.6886429083153677`*^9, 3.688642927405645*^9}, {
   3.688643214460284*^9, 3.688643219957947*^9}, {3.688643315932542*^9, 
   3.688643319258267*^9}, {3.68864335047991*^9, 3.688643352838253*^9}, {
   3.688644048547125*^9, 3.6886440549116917`*^9}, {3.688644120293647*^9, 
   3.6886441243133173`*^9}, {3.688645308730304*^9, 3.68864531123003*^9}, {
   3.6890808439516478`*^9, 3.689080848557065*^9}, {3.689085242375984*^9, 
   3.689085259587859*^9}, {3.689087272529121*^9, 3.6890872911434298`*^9}, {
   3.6890947553367157`*^9, 3.689094757780344*^9}, 3.689095508373808*^9, 
   3.69365130669004*^9, {3.693698503518755*^9, 3.693698522762718*^9}, {
   3.693700243462899*^9, 3.6937002490997877`*^9}, {3.701793006399646*^9, 
   3.701793010858263*^9}, {3.701793062040805*^9, 3.70179309104665*^9}, {
   3.701793518537808*^9, 3.701793588361517*^9}, {3.70179369292321*^9, 
   3.70179371765716*^9}, {3.701793987274589*^9, 3.701793990959119*^9}, {
   3.7086595279303417`*^9, 3.708659535934751*^9}, {3.708659624523223*^9, 
   3.7086596260939407`*^9}, {3.708660654188656*^9, 3.708660655904091*^9}, {
   3.7091354907105083`*^9, 3.70913549271692*^9}, 3.709136311115431*^9, {
   3.710105946964546*^9, 3.710105948938019*^9}, {3.712285815806229*^9, 
   3.7122858164453497`*^9}, {3.7122886932658863`*^9, 3.712288693701004*^9}, 
   3.712738534292192*^9, 3.731528153095213*^9, 3.731529317336763*^9, {
   3.755177734281653*^9, 
   3.755177758340517*^9}},ExpressionUUID->"3ba97d25-9008-4728-bfcb-\
93c5e1533dec"]
}, Closed]],

Cell[CellGroupData[{

Cell["AddPopts / AddTraitts / RemovePopts / RemoveTraitts", "Subsection",
 CellDingbat->"\[HeartSuit]",
 CellChangeTimes->{{3.731534149563897*^9, 3.7315341787515173`*^9}, {
  3.731534781274663*^9, 
  3.731534788017005*^9}},ExpressionUUID->"9cba5aa2-666f-49bd-bf60-\
cd978b5f8989"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AddUnkts", ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"var_", "\[Rule]", 
      RowBox[{"unk", "[", "stuff___", "]"}]}], ")"}], "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"var", "\[Rule]", 
      RowBox[{
       RowBox[{"unk", "[", "stuff", "]"}], "[", "t", "]"}]}], ")"}]}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.758823285667995*^9, 3.7588233152779703`*^9}, {
  3.758823398267837*^9, 3.758823415264544*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b0d57085-3cec-4640-84cf-523b8ab006e3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AddPopts", ":=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Join", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{
                RowBox[{"gcomp", "[", 
                 RowBox[{"gu", ",", "gco"}], "]"}], ",", "\[FormalS]_"}], 
               "]"}], "\[Rule]", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{
                 RowBox[{"gcomp", "[", 
                  RowBox[{"gu", ",", "gco"}], "]"}], ",", "\[FormalS]"}], 
                "]"}], "[", "t", "]"}]}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"unk", "[", 
               RowBox[{
                RowBox[{"gcomp", "[", 
                 RowBox[{"gu", ",", "gco"}], "]"}], ",", "\[FormalS]_"}], 
               "]"}], "\[Rule]", 
              RowBox[{
               RowBox[{"unk", "[", 
                RowBox[{
                 RowBox[{"gcomp", "[", 
                  RowBox[{"gu", ",", "gco"}], "]"}], ",", "\[FormalS]"}], 
                "]"}], "[", "t", "]"}]}]}], "}"}], "\n", "\t", ",", 
           RowBox[{"{", 
            RowBox[{"gco", ",", 
             RowBox[{"ngcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", "\t", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"pcomp", "[", 
               RowBox[{"pop", ",", "pco"}], "]"}], "\[Rule]", 
              RowBox[{
               RowBox[{"pcomp", "[", 
                RowBox[{"pop", ",", "pco"}], "]"}], "[", "t", "]"}]}], ",", 
             "\n", "\t\t", 
             RowBox[{
              RowBox[{"unk", "[", 
               RowBox[{"pcomp", "[", 
                RowBox[{"pop", ",", "pco"}], "]"}], "]"}], "\[Rule]", 
              RowBox[{
               RowBox[{"unk", "[", 
                RowBox[{"pcomp", "[", 
                 RowBox[{"pop", ",", "pco"}], "]"}], "]"}], "[", "t", 
               "]"}]}]}], "}"}], "\n", "\t", ",", 
           RowBox[{"{", 
            RowBox[{"pco", ",", 
             RowBox[{"npcomps", "[", "pop", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"pop", ",", "npops"}], "}"}]}], "]"}], ",", "\n", "\t", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"aux", "[", "au", "]"}], "\[Rule]", 
            RowBox[{
             RowBox[{"aux", "[", "au", "]"}], "[", "t", "]"}]}], ",", 
           RowBox[{
            RowBox[{"unk", "[", 
             RowBox[{"aux", "[", "au", "]"}], "]"}], "\[Rule]", 
            RowBox[{
             RowBox[{"unk", "[", 
              RowBox[{"aux", "[", "au", "]"}], "]"}], "[", "t", "]"}]}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"au", ",", "naux"}], "}"}]}], "]"}]}], "\n", "]"}], "]"}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7584816559846163`*^9, 3.7584816745074368`*^9}, {
  3.758519884495825*^9, 3.7585198859273577`*^9}, {3.758821068634445*^9, 
  3.758821135826847*^9}},ExpressionUUID->"81ee0f5f-5716-464d-a4e9-\
475509ba22b8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AddTraitts", ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", "\n", "\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{
             RowBox[{"trait", "[", 
              RowBox[{"gu", ",", "tr"}], "]"}], ",", "\[FormalS]_"}], "]"}], 
           "\[Rule]", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{
              RowBox[{"trait", "[", 
               RowBox[{"gu", ",", "tr"}], "]"}], ",", "\[FormalS]"}], "]"}], 
            "[", "t", "]"}]}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"unk", "[", 
            RowBox[{
             RowBox[{"trait", "[", 
              RowBox[{"gu", ",", "tr"}], "]"}], ",", "\[FormalS]_"}], "]"}], 
           "\[Rule]", 
           RowBox[{
            RowBox[{"unk", "[", 
             RowBox[{
              RowBox[{"trait", "[", 
               RowBox[{"gu", ",", "tr"}], "]"}], ",", "\[FormalS]"}], "]"}], 
            "[", "t", "]"}]}]}], "}"}], "\n", ",", 
        RowBox[{"{", 
         RowBox[{"tr", ",", 
          RowBox[{"ntraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "]"}]}], ";"}]], "Code",\

 CellChangeTimes->{{3.731534102201387*^9, 3.731534130560973*^9}, {
   3.731534202254236*^9, 3.731534207377954*^9}, 3.731535957210956*^9, {
   3.731540735515911*^9, 3.731540763111388*^9}, {3.731631980824448*^9, 
   3.731631981281142*^9}, 3.755182423974742*^9, {3.758481685432131*^9, 
   3.7584816905767*^9}, {3.7585198786799*^9, 3.758519881061221*^9}, {
   3.758821474778405*^9, 3.758821476406591*^9}, {3.7588215114096727`*^9, 
   3.758821521303838*^9}},ExpressionUUID->"77fd7795-74a1-4446-aab5-\
78cda0976f80"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RemovePopts", ":=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Join", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{
               RowBox[{"gcomp", "[", 
                RowBox[{"gu", ",", "gco"}], "]"}], ",", "\[FormalS]_"}], 
              "]"}], "[", "t", "]"}], "\[Rule]", 
            RowBox[{"Subscript", "[", 
             RowBox[{
              RowBox[{"gcomp", "[", 
               RowBox[{"gu", ",", "gco"}], "]"}], ",", "\[FormalS]"}], 
             "]"}]}], "\n", "\t", ",", 
           RowBox[{"{", 
            RowBox[{"gco", ",", 
             RowBox[{"ngcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", "\t", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"pcomp", "[", 
              RowBox[{"pop", ",", "pco"}], "]"}], "[", "t", "]"}], "\[Rule]", 
            
            RowBox[{"pcomp", "[", 
             RowBox[{"pop", ",", "pco"}], "]"}]}], "\n", "\t", ",", 
           RowBox[{"{", 
            RowBox[{"pco", ",", 
             RowBox[{"npcomps", "[", "pop", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"pop", ",", "npops"}], "}"}]}], "]"}], ",", "\n", "\t", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"aux", "[", "au", "]"}], "[", "t", "]"}], "\[Rule]", 
          RowBox[{"aux", "[", "au", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"au", ",", "naux"}], "}"}]}], "]"}]}], "\n", "]"}], "]"}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7315341908259172`*^9, 3.731534195922613*^9}, {
   3.731534842787018*^9, 3.731534857513844*^9}, {3.731540861977981*^9, 
   3.731540869418703*^9}, {3.731631973702667*^9, 3.7316319743101883`*^9}, {
   3.731977846408972*^9, 3.7319778655033407`*^9}, {3.731979841111958*^9, 
   3.731979848640787*^9}, 3.755182419930862*^9, {3.755305438364966*^9, 
   3.75530544058921*^9}, {3.755346358125218*^9, 3.755346381612784*^9}, {
   3.758517578150181*^9, 3.75851758657201*^9}, {3.758518773164575*^9, 
   3.7585187765813227`*^9}, {3.758518807634006*^9, 3.758518815237708*^9}, {
   3.758518860899128*^9, 3.758518863888505*^9}, {3.758518900831294*^9, 
   3.758518902493078*^9}, {3.758519274099189*^9, 
   3.758519278730657*^9}},ExpressionUUID->"74ed862e-fd58-417e-b9f0-\
4b9109ef04ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RemoveTraitts", ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", "\n", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{
            RowBox[{"trait", "[", 
             RowBox[{"gu", ",", "tr"}], "]"}], ",", "\[FormalS]_"}], "]"}], 
          "[", "t", "]"}], "\[Rule]", 
         RowBox[{"Subscript", "[", 
          RowBox[{
           RowBox[{"trait", "[", 
            RowBox[{"gu", ",", "tr"}], "]"}], ",", "\[FormalS]"}], "]"}]}], 
        "\n", ",", 
        RowBox[{"{", 
         RowBox[{"tr", ",", 
          RowBox[{"ntraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "]"}]}], ";"}]], "Code",\

 CellChangeTimes->{{3.758481413451056*^9, 3.7584814217502832`*^9}, {
  3.7585193410788183`*^9, 
  3.758519342886611*^9}},ExpressionUUID->"164f4b33-4055-4354-ba4e-\
865cb7012810"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
ExtractTraits / ExtractAuxs / ExtractPops / ExtractGuilds / ExtractVariables\
\>", "Subsection",
 CellDingbat->"\[HeartSuit]",
 CellChangeTimes->{
  3.712738534355612*^9},ExpressionUUID->"3ef6ddd7-ed26-4962-9db9-\
65d3472f6a6a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExtractTraits", "[", "in_List", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "res", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Off", "[", 
       RowBox[{"Part", "::", "partd"}], "]"}], ";", "\n", "\t", 
      RowBox[{"res", "=", 
       RowBox[{"Join", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{"in", ",", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"traits", ",", 
              RowBox[{"#", "\[LeftDoubleBracket]", 
               RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], 
            "&"}]}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"Select", "[", 
          RowBox[{"in", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#", "\[LeftDoubleBracket]", 
               RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], "\[Equal]",
               "Nsp"}], ")"}], "&"}]}], "]"}]}], "\n", "\t", "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"On", "[", 
       RowBox[{"Part", "::", "partd"}], "]"}], ";", "\n", "\t", 
      RowBox[{"Return", "[", "res", "]"}]}]}], "\n", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.6885717778700447`*^9, {3.688577368197812*^9, 3.688577393049588*^9}, {
   3.693749622310945*^9, 3.693749634802327*^9}, 3.693750076711399*^9, {
   3.7128302310469112`*^9, 3.712830232158642*^9}, {3.712837497471251*^9, 
   3.712837498555839*^9}, {3.7218463563633204`*^9, 3.721846356739352*^9}, 
   3.721846695351218*^9, {3.721848617442614*^9, 3.721848617873474*^9}},
 CellLabel->
  "In[487]:=",ExpressionUUID->"e45d94de-7346-4052-87b6-4c7c4c7077c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExtractAuxs", "[", "in_List", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "res", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Off", "[", 
       RowBox[{"Part", "::", "partd"}], "]"}], ";", "\n", "\t", 
      RowBox[{"res", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"in", ",", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"auxs", ",", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           "]"}], "&"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"On", "[", 
       RowBox[{"Part", "::", "partd"}], "]"}], ";", "\n", "\t", 
      RowBox[{"Return", "[", "res", "]"}]}]}], "\n", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.688577400280003*^9, 3.68857740321148*^9}, 
   3.712837525104989*^9, {3.721846359986237*^9, 3.7218463604413967`*^9}, 
   3.721846693392199*^9, {3.721848621479903*^9, 3.721848622577486*^9}},
 CellLabel->
  "In[488]:=",ExpressionUUID->"3fc9b175-37cd-4e76-857d-42ded15afed8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExtractPops", "[", "in_List", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "res", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Off", "[", 
       RowBox[{"Part", "::", "partd"}], "]"}], ";", "\n", "\t", 
      RowBox[{"res", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"in", ",", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"pcomps", ",", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           "]"}], "&"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"On", "[", 
       RowBox[{"Part", "::", "partd"}], "]"}], ";", "\n", "\t", 
      RowBox[{"Return", "[", "res", "]"}]}]}], "\n", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.6885774052677393`*^9, 3.688577407763575*^9}, 
   3.71283752654624*^9, {3.721846363931897*^9, 3.721846364641821*^9}, 
   3.721846691821311*^9, {3.721848653211532*^9, 3.721848653604781*^9}},
 CellLabel->
  "In[489]:=",ExpressionUUID->"d09c50d8-e42a-44c4-b7f3-3b4dadd8f25f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExtractGuilds", "[", "in_List", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "res", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Off", "[", 
       RowBox[{"Part", "::", "partd"}], "]"}], ";", "\n", "\t", 
      RowBox[{"res", "=", 
       RowBox[{"Join", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{"in", ",", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"gcomps", ",", 
              RowBox[{"#", "\[LeftDoubleBracket]", 
               RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], 
            "&"}]}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"Select", "[", 
          RowBox[{"in", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#", "\[LeftDoubleBracket]", 
               RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], "\[Equal]",
               "Nsp"}], ")"}], "&"}]}], "]"}]}], "\n", "\t", "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"On", "[", 
       RowBox[{"Part", "::", "partd"}], "]"}], ";", "\n", "\t", 
      RowBox[{"Return", "[", "res", "]"}]}]}], "\n", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.688571777896756*^9, {3.688577411224319*^9, 3.688577420028517*^9}, {
   3.693749885161036*^9, 3.693749891813983*^9}, 3.6937499410629587`*^9, 
   3.693750081086241*^9, {3.712830225346066*^9, 3.712830225999054*^9}, 
   3.7128375310358143`*^9, {3.721846368243229*^9, 3.7218463686206503`*^9}, {
   3.721846688286047*^9, 3.721846689122287*^9}, {3.7218486256614857`*^9, 
   3.7218486260638943`*^9}},
 CellLabel->
  "In[490]:=",ExpressionUUID->"f6021bc1-4e6a-4600-a94a-cfef666927c8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExtractVariables", "[", "in_List", "]"}], ":=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"ExtractAuxs", "[", "in", "]"}], ",", 
     RowBox[{"ExtractPops", "[", "in", "]"}], ",", 
     RowBox[{"ExtractGuilds", "[", "in", "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.712738534369461*^9, 3.712837533682328*^9, {3.7218463818390293`*^9, 
   3.721846382270219*^9}},
 CellLabel->
  "In[491]:=",ExpressionUUID->"fdb77459-dbad-4f0c-91d8-77fde33488a7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"make", " ", "Listable"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ExtractTraits", "[", 
      RowBox[{"in_", "?", "RuleListListQ"}], "]"}], ":=", 
     RowBox[{"ExtractTraits", "/@", "in"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ExtractAuxs", "[", 
      RowBox[{"in_", "?", "RuleListListQ"}], "]"}], ":=", 
     RowBox[{"ExtractAuxs", "/@", "in"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ExtractPops", "[", 
      RowBox[{"in_", "?", "RuleListListQ"}], "]"}], ":=", 
     RowBox[{"ExtractPops", "/@", "in"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ExtractGuilds", "[", 
      RowBox[{"in_", "?", "RuleListListQ"}], "]"}], ":=", 
     RowBox[{"ExtractGuilds", "/@", "in"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ExtractVariables", "[", 
      RowBox[{"in_", "?", "RuleListListQ"}], "]"}], ":=", 
     RowBox[{"ExtractVariables", "/@", "in"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.712738534381083*^9, 3.71273853438449*^9}, {
  3.712914115067301*^9, 3.712914122632641*^9}},
 CellLabel->
  "In[492]:=",ExpressionUUID->"688fd88b-075c-4154-bc76-10d2eb22ddbd"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
TraitsQ / VariablesQ / TraitsAndVariablesQ / ListOfVariablesQ / InvaderQ / GsQ\
\>", "Subsection",
 CellDingbat->"\[HeartSuit]",
 CellChangeTimes->{{3.6850943774759493`*^9, 3.685094378210535*^9}, {
  3.712738534442067*^9, 3.7127385345778112`*^9}, {3.729615042876402*^9, 
  3.72961504567223*^9}, {3.731892410516787*^9, 
  3.731892411931158*^9}},ExpressionUUID->"c2bc71c5-9b2a-427c-b666-\
5bd7c3ca8461"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TraitsQ", "[", "list_", "]"}], ":=", 
  RowBox[{"VectorQ", "[", 
   RowBox[{"list", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}], 
         "===", "Rule"}], "||", 
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}], 
         "===", "RuleDelayed"}]}], ")"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"First", "@", 
          RowBox[{"LookUp", "[", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "]"}]}], "===", "\"\<trait\>\""}], "||", 
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], "===", 
         "Nsp"}]}], ")"}]}], "&"}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.685094385419814*^9, 3.68509438699021*^9}, {
   3.6884103468055573`*^9, 3.68841034684472*^9}, {3.688571777923759*^9, 
   3.688571777970282*^9}, {3.688574862053771*^9, 3.688574880436173*^9}, 
   3.6885750159533*^9, 3.688575067552972*^9, {3.688577270307032*^9, 
   3.688577297349419*^9}, {3.714672518778007*^9, 3.714672533955903*^9}, 
   3.734026349774651*^9},
 CellLabel->
  "In[497]:=",ExpressionUUID->"e3d2ea35-fe29-4233-821a-283cf145a86e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NotInvaderTraitsQ", "[", "list_", "]"}], ":=", 
  RowBox[{"VectorQ", "[", 
   RowBox[{"list", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}], 
         "===", "Rule"}], "||", 
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}], 
         "===", "RuleDelayed"}]}], ")"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"LookUp", "[", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "]"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "===", "\"\<trait\>\""}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{"LookUp", "[", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "]"}], "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], "=!=",
            "0"}]}], ")"}], "||", 
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], "===", 
         "Nsp"}]}], ")"}]}], "&"}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.734026345983852*^9, 3.734026370544599*^9}, {
  3.734026423128497*^9, 3.734026451697287*^9}, {3.7340978743958893`*^9, 
  3.7340978773533783`*^9}},
 CellLabel->
  "In[498]:=",ExpressionUUID->"0238e485-bbcf-436b-b1cb-f54ec32ee380"],

Cell[BoxData[
 RowBox[{
  RowBox[{"VariablesQ", "[", "list_", "]"}], ":=", 
  RowBox[{
   RowBox[{"list", "===", "\"\<FindEcoAttractor\>\""}], "||", 
   RowBox[{"VectorQ", "[", 
    RowBox[{"list", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}],
           "===", "Rule"}], "||", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}],
           "===", "RuleDelayed"}]}], ")"}], "&&", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<pcomp\>\"", ",", "\"\<gcomp\>\"", ",", "\"\<aux\>\""}], 
            "}"}], ",", 
           RowBox[{"First", "@", 
            RowBox[{"LookUp", "[", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "]"}]}]}], "]"}], "||", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], "===", 
          "Nsp"}]}], ")"}]}], "&"}]}], "]"}]}]}]], "Code",
 CellChangeTimes->{{3.685094385425008*^9, 3.68509438700746*^9}, {
   3.688410346871194*^9, 3.688410346897923*^9}, {3.6885717779886293`*^9, 
   3.6885717780304003`*^9}, {3.688574890268084*^9, 3.6885749108207207`*^9}, 
   3.688575013529243*^9, {3.688577300429867*^9, 3.688577337985496*^9}, 
   3.712738534588655*^9, {3.7146725251878433`*^9, 3.714672537299164*^9}, {
   3.727314415150532*^9, 3.7273144497426243`*^9}},
 CellLabel->
  "In[499]:=",ExpressionUUID->"6078d0a6-d9ca-4cbe-9f64-7ac5aec4001d"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"TraitsAndVariablesQ", "[", "list_", "]"}], ":=", 
   RowBox[{"VectorQ", "[", 
    RowBox[{"list", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}],
           "\[Equal]", "Rule"}], "||", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}],
           "\[Equal]", "RuleDelayed"}]}], ")"}], "&&", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<pcomp\>\"", ",", "\"\<gcomp\>\"", ",", "\"\<aux\>\"", ",", 
             "\"\<trait\>\""}], "}"}], ",", 
           RowBox[{"First", "@", 
            RowBox[{"LookUp", "[", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "]"}]}]}], "]"}], "||", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], "\[Equal]", 
          "Nsp"}]}], ")"}]}], "&"}]}], "]"}]}], "*)"}]], "Code",
 CellChangeTimes->{{3.685094385430084*^9, 3.6850943870263577`*^9}, {
   3.688410346924922*^9, 3.6884103469510593`*^9}, {3.6885717780490627`*^9, 
   3.6885717780837517`*^9}, {3.68857496198407*^9, 3.6885750012469997`*^9}, {
   3.688575032616485*^9, 3.688575049894413*^9}, {3.688577339739606*^9, 
   3.6885773593052387`*^9}, 3.7127385345982847`*^9, 3.712933607485149*^9},
 CellLabel->
  "In[500]:=",ExpressionUUID->"12fca214-49b1-4171-9639-da940036ab75"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TraitsAndVariablesQ", "[", "list_", "]"}], ":=", "\n", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"ListQ", "[", "list", "]"}], "&&", 
        RowBox[{"ExpandNspInTraits", "[", 
         RowBox[{"ExtractTraits", "[", "list", "]"}], "]"}]}], "=!=", 
       "list"}], "&&", 
      RowBox[{"ExpandNspInPops", "[", 
       RowBox[{"ExtractVariables", "[", "list", "]"}], "]"}]}], "=!=", 
     "list"}], ",", "True", ",", "False", ",", "False"}], "]"}]}]], "Code",
 CellChangeTimes->{{3.712909677064527*^9, 3.712909685426083*^9}, {
   3.7129099816012363`*^9, 3.712909981927301*^9}, {3.712910026391035*^9, 
   3.712910064318368*^9}, {3.712910473044516*^9, 3.71291047745501*^9}, {
   3.712933041063407*^9, 3.712933080085595*^9}, {3.712933201536586*^9, 
   3.712933202222687*^9}, {3.712933441418971*^9, 3.712933500964047*^9}, 
   3.712933598900647*^9, 3.727141788333399*^9, {3.727141991542884*^9, 
   3.727141995727724*^9}},
 CellLabel->
  "In[501]:=",ExpressionUUID->"0fc3e62a-5e9c-4ac2-acd0-d8f28e135083"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ListOfVariablesQ", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"x", "===", 
      RowBox[{"{", "}"}]}], ",", "False", ",", 
     RowBox[{"VectorQ", "[", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"VariablesQ", "[", "#", "]"}], "&"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.685029723592835*^9, 3.685029755014036*^9}, {
  3.685094385434823*^9, 3.6850943870427303`*^9}, {3.688575019602787*^9, 
  3.688575024240135*^9}, {3.712738534607686*^9, 3.712738534611191*^9}, {
  3.712785582276157*^9, 3.712785596491372*^9}, {3.714672548288992*^9, 
  3.714672549143828*^9}},
 CellLabel->
  "In[502]:=",ExpressionUUID->"6bbc6363-df66-4db0-b7e3-08ac2e6e6c29"],

Cell[BoxData[
 RowBox[{
  RowBox[{"InvaderQ", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", "\n", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{"pcomps", ",", "popnames"}], "]"}], ",", "x"}], "]"}], "||", 
     "\n", "\t", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}], "===",
         "Rule"}], "&&", 
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"LookUp", "[", 
          RowBox[{"x", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           "]"}], "]"}], "\[GreaterEqual]", "4"}], "&&", 
       RowBox[{
        RowBox[{
         RowBox[{"LookUp", "[", 
          RowBox[{"x", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}], "\[RightDoubleBracket]"}], "===", 
        RowBox[{"{", 
         RowBox[{"\"\<trait\>\"", ",", "0"}], "}"}]}]}], ")"}], "||", "\n", 
     "\t", 
     RowBox[{"VectorQ", "[", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}],
           "===", "Rule"}], "&&", 
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"LookUp", "[", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "]"}], "]"}], "\[GreaterEqual]", "4"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{"LookUp", "[", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "]"}], "\[LeftDoubleBracket]", 
           RowBox[{"{", 
            RowBox[{"1", ",", "4"}], "}"}], "\[RightDoubleBracket]"}], "===", 
          
          RowBox[{"{", 
           RowBox[{"\"\<trait\>\"", ",", "0"}], "}"}]}]}], "&"}]}], "]"}]}], 
    ",", "True", ",", "False"}], "]"}]}]], "Code",
 CellChangeTimes->{{3.7296141658833237`*^9, 3.7296142510971603`*^9}, {
  3.7296143372996798`*^9, 3.729614347163463*^9}, {3.729614438676077*^9, 
  3.729614525164071*^9}, {3.729615160515861*^9, 3.7296152185715237`*^9}, {
  3.729615792473963*^9, 3.729615834352541*^9}},
 CellLabel->
  "In[503]:=",ExpressionUUID->"81da7eac-dae1-4133-a3cb-139fa1df9c6a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GsQ", "[", "list_", "]"}], ":=", 
  RowBox[{"VectorQ", "[", 
   RowBox[{"list", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}], 
         "===", "Rule"}], "||", 
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}], 
         "===", "RuleDelayed"}]}], ")"}], "&&", 
      RowBox[{"(", 
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"G", ",", "V"}], "}"}], ",", 
         RowBox[{"#", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}]}], "]"}], 
       ")"}]}], "&"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.731891664340337*^9, 3.731891727039733*^9}, 
   3.7318923351664667`*^9},
 CellLabel->
  "In[504]:=",ExpressionUUID->"4a2dd40c-9718-48ad-a81b-13f049dcf2ee"]
}, Closed]],

Cell[CellGroupData[{

Cell["DefaultICs", "Subsection",
 CellDingbat->"\[HeartSuit]",
 CellChangeTimes->{{3.689288343730604*^9, 3.689288346032034*^9}, 
   3.714059650081333*^9},ExpressionUUID->"60982037-5214-4bab-b4e5-\
1728f0893440"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DefaultICs", ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{
               RowBox[{"gcomp", "[", 
                RowBox[{"gu", ",", "gco"}], "]"}], ",", "sp"}], "]"}], 
             "\[Rule]", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Min", "[", 
                   RowBox[{"gcomprange", "[", 
                    RowBox[{"gu", ",", "gco"}], "]"}], "]"}], "+", 
                  RowBox[{"Max", "[", 
                   RowBox[{"gcomprange", "[", 
                    RowBox[{"gu", ",", "gco"}], "]"}], "]"}]}], ")"}], "/", 
                "2"}], ",", 
               RowBox[{
                RowBox[{"Min", "[", 
                 RowBox[{"gcomprange", "[", 
                  RowBox[{"gu", ",", "gco"}], "]"}], "]"}], "+", "1"}]}], 
              "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"gco", ",", 
              RowBox[{"ngcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"sp", ",", 
            RowBox[{"Nsp", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", "\t", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"pcomp", "[", 
            RowBox[{"pop", ",", "pco"}], "]"}], "\[Rule]", 
           RowBox[{"Min", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Min", "[", 
                 RowBox[{"pcomprange", "[", 
                  RowBox[{"pop", ",", "pco"}], "]"}], "]"}], "+", 
                RowBox[{"Max", "[", 
                 RowBox[{"pcomprange", "[", 
                  RowBox[{"pop", ",", "pco"}], "]"}], "]"}]}], ")"}], "/", 
              "2"}], ",", 
             RowBox[{
              RowBox[{"Min", "[", 
               RowBox[{"pcomprange", "[", 
                RowBox[{"pop", ",", "pco"}], "]"}], "]"}], "+", "1"}]}], 
            "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"pco", ",", 
            RowBox[{"npcomps", "[", "pop", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"pop", ",", "npops"}], "}"}]}], "]"}], ",", "\n", "\t", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"aux", "[", "au", "]"}], "\[Rule]", 
         RowBox[{"Min", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Min", "[", 
               RowBox[{"auxrange", "[", "au", "]"}], "]"}], "+", 
              RowBox[{"Max", "[", 
               RowBox[{"auxrange", "[", "au", "]"}], "]"}]}], ")"}], "/", 
            "2"}], ",", 
           RowBox[{
            RowBox[{"Min", "[", 
             RowBox[{"auxrange", "[", "au", "]"}], "]"}], "+", "1"}]}], 
          "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"au", ",", "naux"}], "}"}]}], "]"}]}], "\n", "}"}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.689288347867447*^9, 3.689288350913559*^9}, {
   3.689289052158764*^9, 3.6892890713175*^9}, 3.7140596500932293`*^9, 
   3.755392955071602*^9},ExpressionUUID->"c8bcc78e-4e8d-47ba-ace8-\
773613960c7e"]
}, Closed]],

Cell[CellGroupData[{

Cell["DeleteInvaders", "Subsection",
 CellChangeTimes->{{3.7352280013063*^9, 
  3.735228003585195*^9}},ExpressionUUID->"e5fa1016-75d8-4e8b-ae67-\
83c71bc65cbe"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DeleteInvaders", "[", "list_List", "]"}], ":=", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{"list", ",", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"_", ",", "0"}], "]"}], "\[Rule]", "_"}]}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.735228005746393*^9, 3.735228019289205*^9}},
 CellLabel->
  "In[506]:=",ExpressionUUID->"5368694f-6195-41cd-b13f-9a5f339afd7f"]
}, Closed]],

Cell[CellGroupData[{

Cell["PlotDynamics", "Subsection",
 CellDingbat->"\[ClubSuit]",
 CellChangeTimes->{3.69114527838172*^9, 
  3.6911455885674267`*^9},ExpressionUUID->"3bd3ab69-f665-46af-b17c-\
5308cf165382"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotDynamics", "[", 
     RowBox[{"sol_", ",", "plotvarsin_List", ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", 
       RowBox[{
       "logged", ",", "plotstyle", ",", "plotmarkers", ",", "axeslabel", ",", 
        "plotopts", ",", "plotrange", ",", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "lookup", 
        ",", "vars", ",", "plotvars", ",", "yaxislabel", ",", "xinit", ",", 
        "xfinal", ",", "ifvars", ",", "tdvars", ",", "cvars", ",", "tdsol", 
        ",", "ifplot", ",", "tdplot", ",", "cplot"}], "}"}], ",", "\n", "\t", 
      "\n", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "Nsp", "}"}], ",", "\n", "\n", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
           RowBox[{
            RowBox[{"Msg", "[", 
             RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
            RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
         "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
         RowBox[{"logged", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Logged", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotDynamics", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"plotstyle", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"PlotStyle", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotDynamics", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"plotmarkers", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"PlotMarkers", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotDynamics", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"axeslabel", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"AxesLabel", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotDynamics", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", "\n", 
         RowBox[{"vars", "=", 
          RowBox[{"sol", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
         
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<vars=\>\"", ",", "vars"}], "]"}], ";"}], "*)"}], 
         "\n", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ",
            "in", " ", "guilds"}], " ", "*)"}], "\n", 
         RowBox[{"Do", "[", "\n", "\t", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Nsp", "[", "gu", "]"}], "=", 
             RowBox[{"Max", "[", "\n", "\t\t", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Max", "[", 
                  RowBox[{
                   RowBox[{"Select", "[", 
                    RowBox[{"vars", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "0", 
                    "\[RightDoubleBracket]"}], "===", "Subscript"}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[Equal]", 
                    RowBox[{"gcomp", "[", 
                    RowBox[{"gu", ",", "gco"}], "]"}]}], ")"}]}], "&"}]}], 
                    "]"}], "\[LeftDoubleBracket]", 
                   RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"gco", ",", 
                   RowBox[{"ngcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ",",
                "\n", "\t\t", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Max", "[", 
                  RowBox[{
                   RowBox[{"Select", "[", 
                    RowBox[{"vars", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "0", 
                    "\[RightDoubleBracket]"}], "===", "Subscript"}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[Equal]", 
                    RowBox[{"trait", "[", 
                    RowBox[{"gu", ",", "tr"}], "]"}]}], ")"}]}], "&"}]}], 
                    "]"}], "\[LeftDoubleBracket]", 
                   RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"tr", ",", 
                   RowBox[{"ntraits", "[", "gu", "]"}]}], "}"}]}], "]"}]}], 
              "\n", "\t", "]"}]}], ";", "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Nsp", "[", "gu", "]"}], "\[Equal]", 
               RowBox[{"-", "\[Infinity]"}]}], ",", 
              RowBox[{
               RowBox[{"Nsp", "[", "gu", "]"}], "=", "0"}]}], "]"}], ";", 
            "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{"Global`debug", ",", 
              RowBox[{"Print", "[", 
               RowBox[{"\"\<Nsp[\>\"", ",", "gu", ",", "\"\<]=\>\"", ",", 
                RowBox[{"Nsp", "[", "gu", "]"}]}], "]"}]}], "]"}], ";"}], 
           "\n", ",", 
           RowBox[{"{", 
            RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ";", "\n", "\n", 
         "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<plotvarsin=\>\"", ",", "plotvarsin"}], "]"}], ";"}], 
          "*)"}], "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"plotvarsin", "===", 
            RowBox[{"{", "All", "}"}]}], ",", "\n", "\t", 
           RowBox[{"plotvars", "=", "vars"}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{"plotvars", "=", 
             RowBox[{"{", "}"}]}], ";", "\n", "\t", 
            RowBox[{"Do", "[", "\n", "\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"lookup", "=", 
                RowBox[{"LookUp", "[", "var", "]"}]}], ";", "\n", "\t\t", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"MemberQ", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<gcomp\>\"", ",", "\"\<trait\>\""}], "}"}], 
                    ",", 
                    RowBox[{
                    "lookup", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], "&&", 
                  RowBox[{
                   RowBox[{"Length", "[", "lookup", "]"}], "\[Equal]", 
                   "3"}]}], ",", "\n", "\t\t\t", 
                 RowBox[{"Do", "[", 
                  RowBox[{
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"plotvars", ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{"var", ",", "sp"}], "]"}]}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"sp", ",", 
                    RowBox[{"Nsp", "[", 
                    RowBox[{
                    "lookup", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], "]"}], ",", 
                 "\n", "\t\t\t", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"plotvars", ",", "var"}], "]"}]}], "\n", "\t\t", 
                "]"}], ";"}], "\n", "\t", ",", 
              RowBox[{"{", 
               RowBox[{"var", ",", "plotvarsin"}], "}"}]}], "]"}]}]}], "\n", 
          "]"}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<plotvars=\>\"", ",", "plotvars"}], "]"}], ";"}], 
          "*)"}], "\n", "\n", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"axeslabel", "===", "Automatic"}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{"yaxislabel", "=", 
             RowBox[{"{", "}"}]}], ";", "\n", "\t", 
            RowBox[{"Do", "[", "\n", "\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"lookup", "=", 
                RowBox[{"LookUp", "[", "var", "]"}]}], ";", "\n", "\t\t", 
               RowBox[{"Which", "[", "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "lookup", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "\[Equal]", "\"\<gcomp\>\""}], 
                 ",", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"yaxislabel", ",", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"gcomp", "[", 
                    RowBox[{
                    RowBox[{
                    "lookup", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "lookup", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "\"\<i\>\""}], 
                    "]"}]}], "]"}], ",", "\n", "\t\t\t", 
                 RowBox[{
                  RowBox[{
                  "lookup", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "\[Equal]", "\"\<trait\>\""}], 
                 ",", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"yaxislabel", ",", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{
                    RowBox[{
                    "lookup", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "lookup", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", "\"\<i\>\""}], 
                    "]"}]}], "]"}], ",", "\n", "\t\t\t", "Else", ",", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"yaxislabel", ",", "var"}], "]"}]}], "\n", "\t\t", 
                "]"}]}], "\n", "\t", ",", 
              RowBox[{"{", 
               RowBox[{"var", ",", "plotvars"}], "}"}]}], "]"}], ";", "\n", 
            "\t", 
            RowBox[{"yaxislabel", "=", 
             RowBox[{"Sort", "[", 
              RowBox[{"Union", "[", "yaxislabel", "]"}], "]"}]}], ";", "\n", 
            "\t", 
            RowBox[{"axeslabel", "=", 
             RowBox[{"{", 
              RowBox[{"t", ",", 
               RowBox[{"Row", "[", 
                RowBox[{"yaxislabel", ",", "\"\<,\>\""}], "]"}]}], 
              "}"}]}]}]}], "\n", "]"}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<axeslabel=\>\"", ",", "axeslabel"}], "]"}], ";"}], 
          "*)"}], "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"split", " ", "into", " ", "InterpolatingFunctions"}], ",",
            " ", "TemporalData", ",", " ", 
           RowBox[{"and", " ", "constants"}]}], " ", "*)"}], "\n", 
         RowBox[{"ifvars", "=", 
          RowBox[{"Select", "[", 
           RowBox[{"plotvars", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", 
               RowBox[{"#", "/.", "sol"}], "]"}], "\[Equal]", 
              "InterpolatingFunction"}], "&"}]}], "]"}]}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<ifvars=\>\"", ",", "ifvars"}], "]"}], ";"}], "*)"}], 
         "\n", 
         RowBox[{"tdvars", "=", 
          RowBox[{"Select", "[", 
           RowBox[{"plotvars", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Head", "[", 
                RowBox[{"#", "/.", "sol"}], "]"}], "\[Equal]", 
               "TemporalData"}], "||", 
              RowBox[{
               RowBox[{"Head", "[", 
                RowBox[{"#", "/.", "sol"}], "]"}], "\[Equal]", "List"}]}], 
             "&"}]}], "]"}]}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<tdvars=\>\"", ",", "tdvars"}], "]"}], ";"}], "*)"}], 
         "\n", 
         RowBox[{"cvars", "=", 
          RowBox[{"Select", "[", 
           RowBox[{"plotvars", ",", 
            RowBox[{
             RowBox[{"NumericQ", "[", 
              RowBox[{"#", "/.", "sol"}], "]"}], "&"}]}], "]"}]}], ";", "\n", 
         
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<cvars=\>\"", ",", "cvars"}], "]"}], ";"}], "*)"}], 
         "\n", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"plotstyle", "===", 
            RowBox[{"{", "}"}]}], ",", "\n", "\t", 
           RowBox[{"Do", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"lookup", "=", 
               RowBox[{"LookUp", "[", "var", "]"}]}], ";", "\n", "\t\t", 
              RowBox[{"Which", "[", "\n", "\t\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "lookup", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "\[Equal]", "\"\<gcomp\>\""}], "||", 
                 RowBox[{
                  RowBox[{
                  "lookup", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "\[Equal]", "\"\<trait\>\""}]}],
                 ",", "\n", "\t\t\t", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"plotstyle", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"color", "[", "var", "]"}], "[", 
                    RowBox[{"SpFrac", "[", 
                    RowBox[{
                    RowBox[{
                    "lookup", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"Nsp", "[", 
                    RowBox[{
                    "lookup", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "]"}]}], "]"}], "]"}], ",", 
                    RowBox[{"linestyle", "[", "var", "]"}]}], "}"}]}], "]"}], 
                "\n", "\t\t", ",", "\[IndentingNewLine]", "\t\t\t", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "lookup", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "\[Equal]", "\"\<pcomp\>\""}], "||", 
                 RowBox[{
                  RowBox[{
                  "lookup", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "\[Equal]", "\"\<aux\>\""}]}], 
                ",", "\[IndentingNewLine]", "\t\t\t", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"plotstyle", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"color", "[", "var", "]"}], ",", 
                    RowBox[{"linestyle", "[", "var", "]"}]}], "}"}]}], "]"}], 
                "\n", "\t\t", ",", "\n", "\t\t\t", "Else", ",", "\n", 
                "\t\t\t", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"plotstyle", ",", 
                  RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
               "\t\t", "]"}]}], "\n", "\t", ",", 
             RowBox[{"{", 
              RowBox[{"var", ",", "plotvars"}], "}"}]}], "]"}]}], "\n", "]"}],
          ";", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<plotstyle=\>\"", ",", "plotstyle"}], "]"}], ";"}], 
          "*)"}], "\n", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"logged", "\[Equal]", "True"}], ",", "\n", "\t", 
           RowBox[{"plotrange", "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"IntervalUnion", "[", 
                RowBox[{"Sequence", "@@", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"range", "[", "var", "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"var", ",", "plotvars"}], "}"}]}], "]"}]}], "]"}],
                "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Infinity]", "\[Rule]", "All"}], ",", 
                 RowBox[{"0", "\[Rule]", "All"}]}], "}"}]}], ")"}], 
             "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
           "\n", "\t", 
           RowBox[{"plotrange", "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"IntervalUnion", "[", 
                RowBox[{
                 RowBox[{"Sequence", "@@", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"range", "[", "var", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"var", ",", "plotvars"}], "}"}]}], "]"}]}], ",", 
                 RowBox[{"Interval", "[", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "\[Infinity]"}], "}"}], "]"}]}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "\[Infinity]"}], "\[Rule]", "All"}], ",", 
                 RowBox[{"\[Infinity]", "\[Rule]", "All"}]}], "}"}]}], ")"}], 
             "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], "\n",
           "]"}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", "plotrange", "]"}], ";"}], "*)"}], "\n", 
         "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"ifvars", "\[NotEqual]", 
            RowBox[{"{", "}"}]}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{"plotopts", "=", 
             RowBox[{"FilterRules", "[", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{"opts", ",", 
                  RowBox[{"AxesLabel", "\[Rule]", "axeslabel"}], ",", 
                  RowBox[{"PlotStyle", "\[Rule]", "plotstyle"}], ",", 
                  RowBox[{"Options", "[", "PlotDynamics", "]"}]}], "}"}], 
                "]"}], ",", 
               RowBox[{"Options", "[", "Plot", "]"}]}], "]"}]}], ";", "\n", 
            "\t", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{"\"\<plotopts=\>\"", ",", "plotopts"}], "]"}], ";", 
              "\n", "\t", 
              RowBox[{"Print", "[", 
               RowBox[{"\"\<ifvars=\>\"", ",", "ifvars"}], "]"}], ";"}], 
             "*)"}], "\n", "\t", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"xinit", ",", "xfinal"}], "}"}], "=", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                 "ifvars", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], "/.", "sol"}], ")"}], "[", 
               "\"\<Domain\>\"", "]"}], "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}]}], ";", " ", 
            RowBox[{"(*", " ", 
             RowBox[{"extract", " ", "domain"}], " ", "*)"}], "\n", "\t", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{"\"\<{xinit,xfinal}=\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{"xinit", ",", "xfinal"}], "}"}]}], "]"}], ";"}], 
             "*)"}], "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"logged", "\[Equal]", "True"}], ",", "\n", "\t\t", 
              RowBox[{"ifplot", "=", 
               RowBox[{"LogPlot", "[", 
                RowBox[{
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"var", "[", "x", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"var", ",", "ifvars"}], "}"}]}], "]"}], "/.", 
                   "sol"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "xinit", ",", "xfinal"}], "}"}], ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
                 RowBox[{"PlotRange", "\[Rule]", "plotrange"}]}], "]"}]}], 
              "\n", "\t", ",", "\n", "\t\t", 
              RowBox[{"ifplot", "=", 
               RowBox[{"Plot", "[", 
                RowBox[{
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"var", "[", "x", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"var", ",", "ifvars"}], "}"}]}], "]"}], "/.", 
                   "sol"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "xinit", ",", "xfinal"}], "}"}], ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
                 RowBox[{"PlotRange", "\[Rule]", "plotrange"}]}], "]"}]}]}], 
             "\n", "\t", "]"}]}], ",", "\n", ",", "\n", "\t", 
           RowBox[{
            RowBox[{"ifplot", "=", 
             RowBox[{"{", "}"}]}], ";"}]}], "\n", "]"}], ";", "\n", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"tdvars", "\[NotEqual]", 
            RowBox[{"{", "}"}]}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"plotmarkers", "===", 
                RowBox[{"{", "}"}]}], "&&", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Joined", "/.", 
                  RowBox[{"{", "opts", "}"}]}], ")"}], "===", "False"}]}], 
              ",", "\n", "\t\t", 
              RowBox[{"plotmarkers", "=", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"plotmarker", "[", "var", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"var", ",", "tdvars"}], "}"}]}], "]"}]}]}], "\n", 
             "\t\t", 
             RowBox[{"(*", 
              RowBox[{"Do", "[", "\n", "\t\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{"lookup", "=", 
                  RowBox[{"LookUp", "[", "var", "]"}]}], ";", "\n", "\t\t\t", 
                 
                 RowBox[{"Which", "[", "\n", "\t\t\t\t", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    "lookup", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<gcomp\>\""}], 
                    "||", 
                    RowBox[{
                    RowBox[{
                    "lookup", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[Equal]", 
                    "\"\<trait\>\""}]}], ",", "\n", "\t\t\t\t", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"plotmarkers", ",", 
                    RowBox[{"plotmarker", "[", "var", "]"}]}], "]"}], "\n", 
                   "\t\t\t", ",", "\[IndentingNewLine]", "\t\t\t\t", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    "lookup", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<pcomp\>\""}], 
                    "||", 
                    RowBox[{
                    RowBox[{
                    "lookup", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<aux\>\""}]}], 
                   ",", "\[IndentingNewLine]", "\t\t\t\t", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"plotmarkers", ",", 
                    RowBox[{"plotmarker", "[", "var", "]"}]}], "]"}], "\n", 
                   "\t\t\t", ",", "\n", "\t\t\t\t", "Else", ",", "\n", 
                   "\t\t\t\t", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"plotmarkers", ",", 
                    RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
                  "\t\t\t", "]"}]}], "\n", "\t\t", ",", 
                RowBox[{"{", 
                 RowBox[{"var", ",", "vars"}], "}"}]}], "]"}], "*)"}], "\n", 
             "\t", "]"}], ";", "\n", "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"plotmarkers", "\[Equal]", 
               RowBox[{"{", "}"}]}], ",", 
              RowBox[{"plotmarkers", "=", "None"}]}], "]"}], ";", "\n", "\t", 
            
            RowBox[{"plotopts", "=", 
             RowBox[{"FilterRules", "[", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{"opts", ",", 
                  RowBox[{"AxesLabel", "\[Rule]", "axeslabel"}], ",", 
                  RowBox[{"PlotStyle", "\[Rule]", "plotstyle"}], ",", 
                  RowBox[{"PlotMarkers", "\[Rule]", "plotmarkers"}], ",", 
                  RowBox[{"Options", "[", "PlotDynamics", "]"}]}], "}"}], 
                "]"}], ",", 
               RowBox[{"Options", "[", "ListPlot", "]"}]}], "]"}]}], ";", 
            "\n", "\t", 
            RowBox[{"tdsol", "=", 
             RowBox[{"Select", "[", 
              RowBox[{"sol", ",", 
               RowBox[{
                RowBox[{"MemberQ", "[", 
                 RowBox[{"tdvars", ",", 
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}]}], "]"}], "&"}]}], "]"}]}], ";", 
            "\n", "\t", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"xinit", ",", "xfinal"}], "}"}], "=", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"InitialTime", "[", "tdsol", "]"}], ",", 
               RowBox[{"FinalTime", "[", "tdsol", "]"}]}], "}"}]}], ";", "\n",
             "\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"logged", "\[Equal]", "True"}], ",", "\n", "\t\t", 
              RowBox[{"tdplot", "=", 
               RowBox[{"ListLogPlot", "[", 
                RowBox[{
                 RowBox[{"tdvars", "/.", "sol"}], ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
                 RowBox[{"PlotRange", "\[Rule]", "plotrange"}]}], "]"}]}], 
              "\n", "\t", ",", "\n", "\t\t", 
              RowBox[{
               RowBox[{"tdplot", "=", 
                RowBox[{"ListPlot", "[", 
                 RowBox[{
                  RowBox[{"tdvars", "/.", "sol"}], ",", 
                  RowBox[{"Evaluate", "[", 
                   RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
                  RowBox[{"AxesOrigin", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"xinit", ",", "0"}], "}"}]}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", "plotrange"}]}], "]"}]}], 
               ";"}]}], "\n", "\t", "]"}]}], "\n", ",", "\n", "\t", 
           RowBox[{
            RowBox[{"tdplot", "=", 
             RowBox[{"{", "}"}]}], ";"}]}], "\n", "]"}], ";", "\n", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"cvars", "\[NotEqual]", 
            RowBox[{"{", "}"}]}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{"plotopts", "=", 
             RowBox[{"FilterRules", "[", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{"opts", ",", 
                  RowBox[{"AxesLabel", "\[Rule]", "axeslabel"}], ",", 
                  RowBox[{"PlotStyle", "\[Rule]", "plotstyle"}], ",", 
                  RowBox[{"Options", "[", "PlotDynamics", "]"}]}], "}"}], 
                "]"}], ",", 
               RowBox[{"Options", "[", "Plot", "]"}]}], "]"}]}], ";", "\n", 
            "\t", 
            RowBox[{"cplot", "=", 
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"Evaluate", "[", 
                RowBox[{"cvars", "/.", "sol"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "xinit", ",", "xfinal"}], "}"}], ",", 
               RowBox[{"Evaluate", "[", 
                RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", "plotrange"}]}], "]"}]}]}], 
           "\n", ",", "\n", "\t", 
           RowBox[{"cplot", "=", 
            RowBox[{"{", "}"}]}]}], "\n", "]"}], ";", "\n", "\n", "\t", 
         RowBox[{"Return", "[", 
          RowBox[{"Show", "[", 
           RowBox[{"ifplot", ",", "tdplot", ",", "cplot"}], "]"}], "]"}]}]}], 
       "\n", "]"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PlotDynamics", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Logged", "\[Rule]", "False"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "}"}]}], ";"}]}], "Code",\

 CellChangeTimes->{{3.687797595945695*^9, 3.6877976126384373`*^9}, {
   3.687798012105939*^9, 3.6877980546833267`*^9}, {3.68779813797402*^9, 
   3.687798139111555*^9}, {3.687798190262157*^9, 3.68779828043355*^9}, {
   3.6877990150284557`*^9, 3.687799065129637*^9}, {3.687799198469445*^9, 
   3.687799260300704*^9}, {3.687799328510298*^9, 3.687799415225224*^9}, {
   3.6877995134303083`*^9, 3.687799632500143*^9}, {3.687799802447369*^9, 
   3.68779983918661*^9}, {3.6877998936600323`*^9, 3.687799950964031*^9}, {
   3.687800544045809*^9, 3.687800548027688*^9}, {3.687800604344677*^9, 
   3.687800609128182*^9}, {3.687800640340139*^9, 3.687800641759902*^9}, {
   3.687800771078271*^9, 3.687800826471121*^9}, {3.6878010061579857`*^9, 
   3.68780101424544*^9}, {3.687801155915491*^9, 3.687801171386804*^9}, {
   3.687801477581217*^9, 3.6878015179289083`*^9}, {3.687801561951027*^9, 
   3.687801659601326*^9}, {3.687801721911297*^9, 3.687801723770015*^9}, {
   3.6878017637412977`*^9, 3.687801773742324*^9}, {3.6878018071620197`*^9, 
   3.687801836241912*^9}, {3.687801950464526*^9, 3.687801977183444*^9}, {
   3.687802022266906*^9, 3.687802075212785*^9}, {3.687802138936084*^9, 
   3.687802144531447*^9}, {3.6878021813556833`*^9, 3.687802193476531*^9}, {
   3.6878022347787724`*^9, 3.6878022378169394`*^9}, {3.6878023008517237`*^9, 
   3.687802304898903*^9}, {3.687802401549431*^9, 3.6878024062675*^9}, {
   3.687802559767239*^9, 3.687802572890172*^9}, {3.687802723668665*^9, 
   3.687802727116705*^9}, {3.687802773572485*^9, 3.687802777702862*^9}, {
   3.687803180472237*^9, 3.68780318540973*^9}, {3.687803272182111*^9, 
   3.687803275809757*^9}, {3.687803308221483*^9, 3.68780333947058*^9}, {
   3.6878033859875307`*^9, 3.687803413558372*^9}, {3.6878034613758183`*^9, 
   3.687803481258868*^9}, {3.687803538450075*^9, 3.687803562180738*^9}, {
   3.6878035941245937`*^9, 3.687803598511615*^9}, {3.687807720047435*^9, 
   3.687807846519615*^9}, {3.687808002481988*^9, 3.687808031326634*^9}, {
   3.687808088923676*^9, 3.687808100767116*^9}, {3.687808201573749*^9, 
   3.687808220812063*^9}, 3.687808263907771*^9, {3.687808402727716*^9, 
   3.687808417252698*^9}, {3.6878085881872807`*^9, 3.687808592021963*^9}, {
   3.687808794473014*^9, 3.6878088430594797`*^9}, {3.687884562787938*^9, 
   3.687884570372387*^9}, {3.687884627249402*^9, 3.6878846347765837`*^9}, {
   3.687884677617752*^9, 3.687884677825844*^9}, {3.6879638734181557`*^9, 
   3.68796387548654*^9}, {3.68796409137381*^9, 3.6879641017659407`*^9}, {
   3.687967346069304*^9, 3.687967350387145*^9}, {3.687967380448333*^9, 
   3.6879673910273027`*^9}, {3.6879674502234783`*^9, 3.687967454915112*^9}, {
   3.687970755680019*^9, 3.6879707583057528`*^9}, 3.6884671495844097`*^9, {
   3.6884942254082613`*^9, 3.688494229855308*^9}, {3.688494689277803*^9, 
   3.688494747740714*^9}, {3.688571683810927*^9, 3.68857168383834*^9}, {
   3.688571744364574*^9, 3.688571754730345*^9}, {3.688571805014709*^9, 
   3.6885718051513577`*^9}, {3.6885726975615177`*^9, 3.688572714180806*^9}, {
   3.688575084993104*^9, 3.688575091233644*^9}, {3.688575790981965*^9, 
   3.688575867083603*^9}, {3.688575916509324*^9, 3.688575921692882*^9}, {
   3.688575994497368*^9, 3.688576032921064*^9}, {3.688576063080514*^9, 
   3.688576176820436*^9}, {3.688576465353076*^9, 3.688576498077526*^9}, {
   3.688577145266102*^9, 3.68857725711866*^9}, {3.6885777829077044`*^9, 
   3.688577794204474*^9}, {3.691142002969569*^9, 3.69114203292557*^9}, 
   3.691142082513001*^9, {3.691142275010704*^9, 3.691142284574493*^9}, {
   3.691142389691537*^9, 3.691142408630239*^9}, {3.691142495468259*^9, 
   3.6911425351805696`*^9}, {3.693749188933136*^9, 3.693749195977385*^9}, {
   3.6937492458836184`*^9, 3.693749269376172*^9}, {3.6937494384632874`*^9, 
   3.693749531083006*^9}, {3.693750110716283*^9, 3.6937501604224052`*^9}, {
   3.693750209780904*^9, 3.6937502516061077`*^9}, {3.693750300864674*^9, 
   3.6937503165943127`*^9}, {3.693750461132622*^9, 3.693750463032606*^9}, {
   3.693750666513946*^9, 3.6937506686117*^9}, {3.693750824368888*^9, 
   3.6937508578483763`*^9}, {3.693750984764461*^9, 3.6937510629949512`*^9}, {
   3.693751115005555*^9, 3.6937511453292847`*^9}, {3.693751177944715*^9, 
   3.69375117859371*^9}, {3.693751230583714*^9, 3.693751256951168*^9}, 
   3.693770799178801*^9, {3.6937717446086206`*^9, 3.693771817726036*^9}, {
   3.693771927147447*^9, 3.693772021203672*^9}, {3.6937753403950233`*^9, 
   3.6937753419200497`*^9}, 3.693776556840626*^9, {3.693776695109477*^9, 
   3.693776695657991*^9}, {3.693776731502718*^9, 3.693776735012163*^9}, {
   3.693776766508161*^9, 3.693776772749055*^9}, {3.6937785654745607`*^9, 
   3.693778597331914*^9}, {3.694028034250482*^9, 3.694028041253819*^9}, {
   3.694028075522159*^9, 3.694028116606131*^9}, {3.6940281494122133`*^9, 
   3.694028168923747*^9}, {3.694028226198368*^9, 3.694028243482809*^9}, {
   3.6940283709071703`*^9, 3.6940283714165573`*^9}, {3.69402841450386*^9, 
   3.6940284293845778`*^9}, {3.694033591183434*^9, 3.69403359174398*^9}, {
   3.694092671097624*^9, 3.694092673787722*^9}, {3.6940958090373907`*^9, 
   3.694095814257915*^9}, {3.694777655533149*^9, 3.694777656612506*^9}, {
   3.694778221781942*^9, 3.694778222781255*^9}, {3.694778342487958*^9, 
   3.6947783526611423`*^9}, {3.6947784266701927`*^9, 3.694778445198332*^9}, {
   3.694778665566568*^9, 3.694778666526476*^9}, {3.694779066556843*^9, 
   3.694779069877314*^9}, 3.694779634091433*^9, {3.694779677300881*^9, 
   3.694779678978817*^9}, {3.694779709588132*^9, 3.694779710827602*^9}, {
   3.6947797653339777`*^9, 3.6947797928275003`*^9}, 3.69477984422288*^9, {
   3.694796262559032*^9, 3.694796269702836*^9}, {3.694796469496366*^9, 
   3.694796480337871*^9}, {3.694797251437091*^9, 3.694797322951721*^9}, {
   3.694797588812976*^9, 3.69479760306625*^9}, {3.709336684405711*^9, 
   3.70933669049654*^9}, 3.710105949733848*^9, {3.71149866451517*^9, 
   3.711498671635769*^9}, {3.711498729167775*^9, 3.711498730047673*^9}, {
   3.711498865426173*^9, 3.711498877714971*^9}, {3.71355433600957*^9, 
   3.713554349784276*^9}, 3.713554445850088*^9, {3.7135544783882*^9, 
   3.71355449073857*^9}, 3.71355483694092*^9, {3.7140598756705723`*^9, 
   3.714059902976322*^9}, {3.71405994989933*^9, 3.714059960408486*^9}, 
   3.7140606049573717`*^9, {3.7140612389450502`*^9, 3.714061264401244*^9}, 
   3.7140613173736057`*^9, {3.714069679031745*^9, 3.7140696864685717`*^9}, {
   3.714073250101633*^9, 3.714073357351878*^9}, {3.7140734370125628`*^9, 
   3.714073561514372*^9}, {3.714073592985911*^9, 3.71407369019762*^9}, {
   3.714073722412621*^9, 3.714073737354879*^9}, {3.7140745452674513`*^9, 
   3.714074571659171*^9}, {3.714074622862561*^9, 3.7140746237221127`*^9}, {
   3.7140755404377213`*^9, 3.714075554791675*^9}, 3.7140766071509113`*^9, {
   3.714078465478487*^9, 3.714078489602256*^9}, {3.714079034845374*^9, 
   3.714079054294339*^9}, {3.7140791137758303`*^9, 3.714079149751906*^9}, {
   3.7149275037674017`*^9, 3.7149275500809*^9}, {3.714951816596364*^9, 
   3.714951942976797*^9}, {3.714952254294626*^9, 3.714952263303997*^9}, {
   3.7149533639065247`*^9, 3.714953420195266*^9}, {3.714954076675434*^9, 
   3.714954139173443*^9}, {3.714954177515128*^9, 3.7149541811759357`*^9}, {
   3.714954293507196*^9, 3.714954304212686*^9}, {3.715039192425651*^9, 
   3.7150391958422403`*^9}, 3.715258008965784*^9, {3.7165470034731617`*^9, 
   3.716547009938635*^9}, 3.71654704279543*^9, {3.716547138792574*^9, 
   3.716547148755787*^9}, {3.724634128269587*^9, 3.724634147655245*^9}, {
   3.724634178211616*^9, 3.724634243138918*^9}, {3.724634321760565*^9, 
   3.724634326238226*^9}, {3.724634364332995*^9, 3.72463447294419*^9}, {
   3.724634524025531*^9, 3.724634534256383*^9}, 3.724635288866126*^9, {
   3.725140957956243*^9, 3.72514095796167*^9}, 3.725141965204257*^9, {
   3.732571788702252*^9, 3.732571816854514*^9}, {3.732571884780836*^9, 
   3.732571888691463*^9}, 3.735296292192141*^9, 3.742834297270978*^9, 
   3.7428354526349297`*^9, {3.755130819850513*^9, 3.755130832334594*^9}, {
   3.755131161631352*^9, 3.7551311900674143`*^9}, {3.755131623385973*^9, 
   3.755131658542264*^9}, {3.755131705035862*^9, 3.755131713996413*^9}, {
   3.755131763771255*^9, 3.755131769980175*^9}, 3.755131808198929*^9, {
   3.75513212200031*^9, 3.755132138653077*^9}, {3.7551322376299067`*^9, 
   3.75513224023241*^9}, {3.755132416530065*^9, 3.755132482581834*^9}, 
   3.755132829421893*^9, {3.7551333939902687`*^9, 3.755133407669578*^9}, 
   3.755179882013747*^9, {3.759330060629739*^9, 3.759330089614102*^9}, {
   3.759330205388632*^9, 3.7593302204447412`*^9}, {3.759330319669526*^9, 
   3.7593303395756607`*^9}, {3.75933062068467*^9, 3.759330671412463*^9}, {
   3.759330738159605*^9, 3.759330774275729*^9}, {3.7593308050062237`*^9, 
   3.759330815908123*^9}, {3.759330853494788*^9, 3.759330889259322*^9}, {
   3.7593309629117603`*^9, 3.7593309633876657`*^9}, {3.759331005866084*^9, 
   3.759331098373446*^9}, {3.759336413759241*^9, 3.759336458142355*^9}, {
   3.7593378483101883`*^9, 3.759337857775445*^9}, {3.759338019652596*^9, 
   3.759338066966915*^9}, {3.7593794608828707`*^9, 3.7593794693873587`*^9}, {
   3.7593796218260813`*^9, 3.759379640791288*^9}, {3.759379934801901*^9, 
   3.7593800627398*^9}, {3.7593801323716993`*^9, 3.7593802334131107`*^9}, {
   3.759380324423193*^9, 3.7593804170234613`*^9}, {3.759380469110422*^9, 
   3.759380475271708*^9}, {3.759380539042782*^9, 3.7593805425927687`*^9}, 
   3.759380964567342*^9, {3.759382455712289*^9, 3.759382469036578*^9}, {
   3.759382687244749*^9, 3.759382731064433*^9}, {3.759382765147448*^9, 
   3.759382772662837*^9}, {3.759382837223068*^9, 3.759382915450329*^9}, {
   3.759382962310432*^9, 3.759383113762197*^9}, {3.7593832089109507`*^9, 
   3.759383242834505*^9}, {3.759383274029776*^9, 3.7593832744869537`*^9}, 
   3.759383366712426*^9, {3.7593834160197697`*^9, 3.759383442630396*^9}, {
   3.759383554821507*^9, 
   3.759383559979125*^9}},ExpressionUUID->"b9039202-99ae-4adb-8fa8-\
394e8745e159"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotDynamics", "[", 
    RowBox[{"sol_", ",", 
     RowBox[{"plotvarsin_Symbol:", "All"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"PlotDynamics", "[", 
    RowBox[{"sol", ",", 
     RowBox[{"{", "plotvarsin", "}"}], ",", "opts"}], "]"}]}], ";"}]], "Code",\

 CellChangeTimes->{{3.6947790816327868`*^9, 3.694779103255664*^9}},
 CellLabel->
  "In[509]:=",ExpressionUUID->"43ecfcb1-984e-4929-9bf7-7c291520e6c0"]
}, Closed]],

Cell[CellGroupData[{

Cell["EcoEqns", "Subsection",
 CellDingbat->"\[LightBulb]",
 CellChangeTimes->{{3.731532912874427*^9, 
  3.731532914244749*^9}},ExpressionUUID->"02fc9e24-2467-487d-a2d9-\
3e8bb62db3a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoEqns", "[", 
    RowBox[{
     RowBox[{"traitsin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "TraitsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<EcoEqns\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "logged", ",", "fixed", ",", "fixedvars", ",", 
       "fixedvariables", ",", "timescale", ",", "percapita", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "traits", ",",
        "nonfixedvars", ",", "fixed2", ",", "eqns"}], "}"}], ",", "\n", "\n", 
     
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "Nsp", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Msg", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEqns", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEqns", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"logged", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Logged", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEqns", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"timescale", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"TimeScale", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEqns", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"percapita", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PerCapita", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEqns", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"fixed", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Fixed", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEqns", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"fixedvars", "=", 
         RowBox[{"fixed", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        RowBox[{"fixedvariables", "=", 
         RowBox[{"ExtractVariables", "[", "fixed", "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: fixedvars=\>\"", ",", "fixedvars"}], 
           "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"handle", " ", "blanks"}], " ", "&"}], " ", "figure", " ", 
          "out", " ", "number", " ", "of", " ", "species", " ", "in", " ", 
          "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"traits", "=", 
         RowBox[{"ExpandNspInTraits", "[", "traitsin", "]"}]}], ";", "\n", 
        RowBox[{"SetNsp", "[", "traits", "]"}], ";", "\n", "\n", 
        RowBox[{"nonfixedvars", "=", 
         RowBox[{"orderedComplement", "[", 
          RowBox[{"AllVariables", ",", "fixedvars"}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<nonfixedvars=\>\"", ",", "nonfixedvars"}], "]"}]}], 
         "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"add", " ", "[", "t", "]"}], " ", "to", " ", "constant", 
          " ", "fixed", " ", "variables"}], " ", "*)"}], "\n", 
        RowBox[{"fixed2", "=", 
         RowBox[{"ReplaceAll", "[", 
          RowBox[{"fixed", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"var_", "/;", 
               RowBox[{"MemberQ", "[", 
                RowBox[{
                 RowBox[{"fixedvariables", "\[LeftDoubleBracket]", 
                  RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                 "var"}], "]"}]}], "\[Rule]", 
              RowBox[{"val_", "?", "NumericQ"}]}], ")"}], "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"var", "[", "t", "]"}], "\[Rule]", "val"}], ")"}]}]}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"eqns", "=", 
         RowBox[{"Table", "[", "\n", "\t", 
          RowBox[{
           RowBox[{"Which", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"logged", "===", "True"}], "&&", 
              RowBox[{
               RowBox[{"type", "[", "var", "]"}], "===", 
               "\"\<Extensive\>\""}]}], ",", "\n", "\t\t", 
             RowBox[{"Which", "[", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], ",",
                "\n", "\t\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{"DT", "[", 
                  RowBox[{"log", "[", "var", "]"}], "]"}], "-", 
                 RowBox[{
                  RowBox[{"log", "[", "var", "]"}], "[", "t", "]"}]}], 
                "\[Equal]", 
                RowBox[{"RealSimplify", "[", 
                 RowBox[{"timescale", "*", 
                  RowBox[{"Log", "[", 
                   RowBox[{
                    RowBox[{"eqn", "[", "var", "]"}], "/", 
                    RowBox[{"var", "[", "t", "]"}]}], "]"}]}], "]"}]}], ",", 
               "\n", "\t\t\t", 
               RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], 
               ",", "\n", "\t\t\t", 
               RowBox[{
                RowBox[{"DT", "[", 
                 RowBox[{"log", "[", "var", "]"}], "]"}], "\[Equal]", 
                RowBox[{"timescale", "*", 
                 RowBox[{
                  RowBox[{"eqn", "[", "var", "]"}], "/", 
                  RowBox[{"var", "[", "t", "]"}]}]}]}]}], "\n", "\t\t", "]"}],
              "\n", "\t", ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"percapita", "===", "True"}], "&&", 
              RowBox[{
               RowBox[{"type", "[", "var", "]"}], "===", 
               "\"\<Extensive\>\""}]}], ",", "\n", "\t\t", 
             RowBox[{"Which", "[", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], ",",
                "\n", "\t\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{"DT", "[", "var", "]"}], "/", 
                 RowBox[{"var", "[", "t", "]"}]}], "\[Equal]", 
                RowBox[{"timescale", "*", 
                 RowBox[{
                  RowBox[{"eqn", "[", "var", "]"}], "/", 
                  RowBox[{"var", "[", "t", "]"}]}]}]}], ",", "\n", "\t\t\t", 
               RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], 
               ",", "\n", "\t\t\t", 
               RowBox[{
                RowBox[{"DT", "[", "var", "]"}], "\[Equal]", 
                RowBox[{"timescale", "*", 
                 RowBox[{
                  RowBox[{"eqn", "[", "var", "]"}], "/", 
                  RowBox[{"var", "[", "t", "]"}]}]}]}]}], "\n", "\t\t", "]"}],
              "\n", "\t", ",", "\n", "\t\t", "Else", ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"DT", "[", "var", "]"}], "\[Equal]", 
              RowBox[{"timescale", "*", 
               RowBox[{"eqn", "[", "var", "]"}]}]}]}], "\n", "\t", "]"}], 
           "\n", ",", 
           RowBox[{"{", 
            RowBox[{"var", ",", "nonfixedvars"}], "}"}]}], "]"}]}], ";", "\n",
         "\n", 
        RowBox[{"Return", "[", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"eqns", "/.", 
             RowBox[{"ExpRule", "[", 
              RowBox[{"nonfixedvars", ",", "logged"}], "]"}]}], "/.", 
            RowBox[{"Dispatch", "[", "traits", "]"}]}], "/.", "fixed2"}], 
          "]"}], "]"}]}]}], "\n", "\n", "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.73153291508943*^9, 3.73153306480214*^9}, {
   3.731533115319585*^9, 3.73153315088445*^9}, {3.731533245950788*^9, 
   3.7315332729037447`*^9}, {3.7315334204535646`*^9, 3.731533525721775*^9}, {
   3.731533703227294*^9, 3.7315337049086*^9}, {3.731807678738665*^9, 
   3.7318077057774878`*^9}, {3.731975717613166*^9, 3.73197571866803*^9}, {
   3.731975799743685*^9, 3.73197589317135*^9}, {3.7319798828993483`*^9, 
   3.731979885288672*^9}, {3.731980646046186*^9, 3.7319806618113327`*^9}, {
   3.731980700513235*^9, 3.731980717285017*^9}, 3.7322734077947903`*^9, {
   3.755692264028599*^9, 3.7556922644589367`*^9}, {3.755694273443183*^9, 
   3.75569427589289*^9}, {3.755694582132526*^9, 3.7556946368449917`*^9}, {
   3.755694676031395*^9, 3.755694715481515*^9}, {3.755694832859461*^9, 
   3.755694856593852*^9}, {3.7556949555569153`*^9, 3.755694956876268*^9}, 
   3.755708850362474*^9, {3.755709137100767*^9, 3.755709141752791*^9}, {
   3.75572393966397*^9, 3.755723958578627*^9}, {3.755796568077956*^9, 
   3.75579658979016*^9}, {3.7557967000007477`*^9, 3.7557967093409023`*^9}, {
   3.755796752560822*^9, 3.7557967954242897`*^9}, {3.755796916252831*^9, 
   3.7557969165527143`*^9}, 3.755797037475993*^9, {3.755811111301676*^9, 
   3.7558111203301153`*^9}, {3.755813941319138*^9, 3.755813952047359*^9}, {
   3.758538780569724*^9, 3.758538785028316*^9}, {3.758538838628502*^9, 
   3.7585388390071363`*^9}, {3.758538931882943*^9, 3.758538940554407*^9}, {
   3.758539057192698*^9, 3.758539059490943*^9}, {3.758548892059017*^9, 
   3.7585489310658817`*^9}, {3.7585492162866697`*^9, 3.758549225198711*^9}, {
   3.7585502840667877`*^9, 3.758550302625052*^9}, {3.758550360447648*^9, 
   3.758550389113371*^9}, {3.758550450371385*^9, 3.7585504709180202`*^9}, 
   3.7585505493404408`*^9, 3.758551307289364*^9, {3.758551459216346*^9, 
   3.758551539385776*^9}, {3.758552123736377*^9, 3.7585521247598763`*^9}, {
   3.758605937974411*^9, 3.758605951538898*^9}, {3.7586060952641563`*^9, 
   3.75860610557266*^9}, {3.7586062175185537`*^9, 3.758606250442319*^9}, {
   3.7586070232760572`*^9, 3.758607028432029*^9}, {3.758820509052783*^9, 
   3.758820548050082*^9}, {3.758820662676475*^9, 3.758820666715248*^9}, {
   3.759141291282493*^9, 3.759141292038221*^9}, {3.759141745383217*^9, 
   3.759141753555347*^9}, {3.759141801106374*^9, 3.759141809343381*^9}, {
   3.75914199734857*^9, 
   3.759142021782723*^9}},ExpressionUUID->"4c51d1fa-ca30-43ad-8f22-\
54ad860c2073"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "EcoEqns", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"TimeScale", "\[Rule]", "1"}], ",", 
     RowBox[{"Logged", "\[Rule]", "False"}], ",", 
     RowBox[{"PerCapita", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.731533497765864*^9, 3.731533509812358*^9}, 
   3.731533548227298*^9, {3.7557967403738537`*^9, 3.755796742724206*^9}, {
   3.758548685872842*^9, 3.75854869419556*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"129e0cf4-9a43-4b0f-901a-36db417e381d"]
}, Closed]],

Cell[CellGroupData[{

Cell["EcoSim", "Subsection",
 CellDingbat->"\[ClubSuit]",
 CellChangeTimes->{{3.688585331661968*^9, 
  3.688585354654958*^9}},ExpressionUUID->"dd7a46e8-c291-4faf-abb6-\
36839d1c5c74"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoSim", "[", 
    RowBox[{
     RowBox[{"traits", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "TraitsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"pops", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"tmax_", "?", "NumericQ"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<EcoSim\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "method", ",", "ndsolveopts", ",", "logged", ",", 
       "interpolationpoints", ",", "interpolationorder", ",", "fixed", ",", 
       "fixedvars", ",", "whenevents", ",", "timescale", ",", "outputtmin", 
       ",", "\n", "output", ",", "tmin", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", 
       "nonfixedvars", ",", "luv", ",", "gu", ",", "gco", ",", "sp", ",", 
       "pop", ",", "pco", ",", "au", ",", "eqns", ",", "unks", ",", "ics", 
       ",", "tic", ",", "exprule", ",", "sol", ",", "res", ",", "fixedres"}], 
      "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "Nsp", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Msg", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoSim", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoSim", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"method", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Method", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoSim", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"ndsolveopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"NDSolveOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoSim", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"logged", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Logged", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoSim", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"interpolationpoints", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"InterpolationPoints", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoSim", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"interpolationorder", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"InterpolationOrder", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoSim", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"whenevents", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"WhenEvents", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoSim", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"timescale", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"TimeScale", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoSim", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"outputtmin", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"OutputTMin", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoSim", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"output", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Output", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoSim", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"output", "\[Equal]", "\"\<FinalSlice\>\""}], ",", 
          RowBox[{"outputtmin", "=", "tmax"}]}], "]"}], ";", "\n", 
        RowBox[{"tmin", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"TMin", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoSim", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"fixed", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Fixed", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoSim", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"fixedvars", "=", 
         RowBox[{"fixed", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: fixedvars=\>\"", ",", "fixedvars"}], 
           "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"SetNsp", "[", 
         RowBox[{"traits", ",", 
          RowBox[{"Join", "[", 
           RowBox[{"pops", ",", "fixed"}], "]"}]}], "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Nsp=\>\"", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Nsp", "[", "gu", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "]"}], ";"}], 
         "*)"}], "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "nonfixedvars", " ", "are", " ", "those", " ", "given", " ", "ICs"}],
          " ", "*)"}], "\n", 
        RowBox[{"nonfixedvars", "=", 
         RowBox[{"pops", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{
           "func", ",", "\"\<: nonfixedvars=\>\"", ",", "nonfixedvars"}], 
           "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "look", " ", "for", " ", "aux", " ", "and", " ", "pcomps", " ", 
           "not", " ", "in", " ", "the", " ", "ICs"}], ",", " ", 
          RowBox[{"treat", " ", "as", " ", "fixed", " ", "at", " ", "0"}]}], 
         " ", "*)"}], "\n", 
        RowBox[{"Do", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{"nonfixedvars", ",", "fixedvars"}], "]"}], ",", 
               "var"}], "]"}]}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"fixed", ",", 
              RowBox[{"var", "\[Rule]", "0"}]}], "]"}]}], "]"}], "\n", ",", 
          RowBox[{"{", 
           RowBox[{"var", ",", "AllVariables"}], "}"}]}], "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<fixed=\>\"", ",", "fixed"}], "]"}], ";"}], "*)"}], 
        "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"find", " ", "time", " ", "for", " ", "ICs"}], " ", "*)"}], 
        "\n", 
        RowBox[{"tic", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"modelwhenevents", "\[Equal]", 
            RowBox[{"{", "}"}]}], ",", "tmin", ",", 
           RowBox[{"tmin", "-", 
            RowBox[{"10", "^", 
             RowBox[{"-", "15"}]}]}]}], "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "hack", " ", "to", " ", "ensure", " ", "that", " ", "events", " ", 
           "are", " ", "triggered", " ", "at", " ", "t"}], "=", "tmin"}], " ",
          "*)"}], "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"set", " ", "eqns"}], ",", " ", 
          RowBox[{"unks", " ", "and", " ", "ics"}]}], " ", "*)"}], "\n", 
        RowBox[{"eqns", "=", 
         RowBox[{"EcoEqns", "[", 
          RowBox[{"traits", ",", 
           RowBox[{"Fixed", "\[Rule]", "fixed"}], ",", "opts"}], "]"}]}], ";",
         "\n", 
        RowBox[{"unks", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"logged", "===", "True"}], "&&", 
              RowBox[{
               RowBox[{"type", "[", "var", "]"}], "===", 
               "\"\<Extensive\>\""}]}], ",", 
             RowBox[{"log", "[", "var", "]"}], ",", "var"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"var", ",", "nonfixedvars"}], "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"ics", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"logged", "===", "True"}], "&&", 
              RowBox[{
               RowBox[{"type", "[", "var", "]"}], "===", 
               "\"\<Extensive\>\""}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"log", "[", "var", "]"}], "[", "tic", "]"}], 
              "\[Equal]", 
              RowBox[{"Log", "[", 
               RowBox[{"var", "/.", "pops"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"var", "[", "tic", "]"}], "\[Equal]", 
              RowBox[{"(", 
               RowBox[{"var", "/.", "pops"}], ")"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"var", ",", "nonfixedvars"}], "}"}]}], "]"}]}], ";", "\n",
         "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: eqns=\>\"", ",", "eqns"}], "]"}]}], 
         "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: unks=\>\"", ",", "unks"}], "]"}]}], 
         "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: ics=\>\"", ",", "ics"}], "]"}]}], 
         "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"solve", " ", "it"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], ",", 
          "\n", "\t", 
          RowBox[{
           RowBox[{"Off", "[", 
            RowBox[{"NDSolve", "::", "wenset"}], "]"}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "in", " ", "case", " ", "a", " ", "modelwhenevent", " ", 
             "involves", " ", "a", " ", "fixed", " ", "variable"}], " ", 
            "*)"}], "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"ndsolveeqns", "=", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                   "eqns", ",", "ics", ",", "modelwhenevents", ",", 
                    "whenevents"}], "]"}]}], ",", 
                 RowBox[{"unks", "=", "unks"}], ",", 
                 RowBox[{"outputtmin", "=", "outputtmin"}], ",", 
                 RowBox[{"options", "=", 
                  RowBox[{"Sequence", "@@", "ndsolveopts"}]}]}], "}"}], ",", 
               "\n", "\t\t\t", 
               RowBox[{"PrintCall", "[", 
                RowBox[{"Global`sol", "=", 
                 RowBox[{
                  RowBox[{"NDSolve", "[", 
                   RowBox[{"ndsolveeqns", ",", "unks", ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "outputtmin", ",", "tmax"}], "}"}], ",",
                     "options"}], "]"}], "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}], "]"}]}], "\n", "\t", "]"}]}], 
            "]"}], ";", "\n", "\t", 
           RowBox[{"sol", "=", 
            RowBox[{
             RowBox[{"NDSolve", "[", 
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{
                "eqns", ",", "ics", ",", "modelwhenevents", ",", 
                 "whenevents"}], "]"}], ",", "unks", ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "outputtmin", ",", "tmax"}], "}"}], ",", 
               RowBox[{"Evaluate", "[", 
                RowBox[{"Sequence", "@@", "ndsolveopts"}], "]"}]}], "]"}], 
             "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";", 
           "\n", "\t", 
           RowBox[{"On", "[", 
            RowBox[{"NDSolve", "::", "wenset"}], "]"}], ";"}], "\n", "\t", 
          ",", "\n", "\t", 
          RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], ",", 
          RowBox[{"(*", " ", 
           RowBox[{"Method", "\[Rule]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Compiled", "\[Rule]", "False"}], "}"}], " ", 
             "workaround", " ", "for", " ", "bug", " ", "in", " ", 
             "RecurrenceTable", " ", "11.0", ".1"}]}], " ", "*)"}], "\n", 
          "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"rteqns", "=", 
                  RowBox[{"Join", "[", 
                   RowBox[{"eqns", ",", "ics"}], "]"}]}], ",", 
                 RowBox[{"unks", "=", "unks"}]}], "}"}], ",", "\n", "\t\t\t", 
               
               RowBox[{"PrintCall", "[", 
                RowBox[{"Global`res", "=", 
                 RowBox[{"RecurrenceTable", "[", 
                  RowBox[{"rteqns", ",", "unks", ",", 
                   RowBox[{"{", 
                    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
                   RowBox[{"Method", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Compiled", "\[Rule]", "False"}], "}"}]}]}], 
                  "]"}]}], "]"}]}], "\n", "\t", "]"}]}], "]"}], ";", "\n", 
           "\t", 
           RowBox[{"res", "=", 
            RowBox[{"Transpose", "[", 
             RowBox[{"RecurrenceTable", "[", 
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{"eqns", ",", "ics"}], "]"}], ",", "unks", ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
               RowBox[{"Method", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"Compiled", "\[Rule]", "False"}], "}"}]}]}], "]"}], 
             "]"}]}], ";", "\n", "\t", 
           RowBox[{"sol", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
               "unks", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
                "\[Rule]", 
               RowBox[{"TD", "[", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{"t", ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "tmin", ",", "tmax"}], "}"}]}], "]"}], 
                   ",", 
                   RowBox[{
                   "res", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], "}"}], "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"Length", "[", "unks", "]"}]}], "}"}]}], "]"}]}], 
           ";"}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: sol=\>\"", ",", "sol"}], "]"}]}], 
         "]"}], ";", "\n", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "transform", " ", "logged", " ", "output", " ", "back", " ", "to", 
          " ", "natural", " ", "scale"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"logged", "===", "True"}], ",", " ", 
          RowBox[{"(*", " ", 
           RowBox[{
           "need", " ", "to", " ", "write", " ", "for", " ", "DiscreteTime"}],
            " ", "*)"}], "\t", "\n", "\t", 
          RowBox[{"res", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"type", "[", "var", "]"}], "===", 
                "\"\<Extensive\>\""}], ",", "\n", "\t\t", 
               RowBox[{"var", "\[Rule]", 
                RowBox[{"Interpolation", "[", 
                 RowBox[{
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"t", ",", 
                    RowBox[{
                    RowBox[{"E", "^", 
                    RowBox[{
                    RowBox[{"log", "[", "var", "]"}], "[", "t", "]"}]}], "/.",
                     "sol"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "tmin", ",", "tmax", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"tmax", "-", "tmin"}], ")"}], "/", 
                    "interpolationpoints"}]}], "}"}]}], "]"}], ",", 
                  RowBox[{
                  "InterpolationOrder", "\[Rule]", "interpolationorder"}]}], 
                 "]"}]}], ",", "\n", "\t\t", 
               RowBox[{"var", "\[Rule]", 
                RowBox[{"(", 
                 RowBox[{"var", "/.", "sol"}], ")"}]}]}], "]"}], "\n", "\t", 
             ",", 
             RowBox[{"{", 
              RowBox[{"var", ",", "nonfixedvars"}], "}"}]}], "]"}]}], "\n", 
          ",", "\n", "\t", 
          RowBox[{"res", "=", "sol"}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"output", "==", "\"\<FinalSlice\>\""}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{"VarSort", "[", 
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"FinalSlice", "[", "res", "]"}], ",", "fixed"}], "]"}],
              ",", "AllVariables"}], "]"}], "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "add", " ", "Fixed", " ", "values", " ", "back", " ", "to", " ", 
           "results"}], " ", "-", " ", 
          RowBox[{"Interpolate", " ", "constants"}]}], " ", "*)"}], "\n", 
        "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"fixed", "\[NotEqual]", 
           RowBox[{"{", "}"}]}], ",", "\n", "\t", 
          RowBox[{"fixedres", "=", 
           RowBox[{"ReplaceAll", "[", 
            RowBox[{"fixed", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"var", ":", 
                 RowBox[{"(", 
                  RowBox[{"_Subscript", "|", "_Symbol"}], ")"}]}], "\[Rule]", 
                
                RowBox[{"val_", "?", "NumericQ"}]}], ")"}], "\[Rule]", 
              RowBox[{"(", 
               RowBox[{"var", "\[Rule]", 
                RowBox[{"Interpolation", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"outputtmin", ",", "val"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"tmax", ",", "val"}], "}"}]}], "}"}], ",", 
                  RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}]}], 
               ")"}]}]}], "]"}]}], ",", "\n", "\t", 
          RowBox[{"fixedres", "=", 
           RowBox[{"{", "}"}]}]}], "\n", "]"}], ";", "\n", 
        RowBox[{"Return", "[", 
         RowBox[{"VarSort", "[", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{"res", ",", "fixedres"}], "]"}], ",", "AllVariables"}], 
          "]"}], "]"}], ";"}]}], "\n", "\n", "]"}]}], "]"}]}], ";"}]], "Code",\

 CellChangeTimes->{{3.6837197916972446`*^9, 3.683719814614541*^9}, {
   3.685099830612578*^9, 3.68509983828614*^9}, {3.685104253459167*^9, 
   3.685104254046667*^9}, {3.685104787061838*^9, 3.685104805451277*^9}, {
   3.685747685072537*^9, 3.685747876861381*^9}, {3.6875994587277517`*^9, 
   3.687599465108343*^9}, {3.6875998110049057`*^9, 3.687599812849204*^9}, 
   3.687601269697361*^9, {3.687803702298744*^9, 3.68780370349183*^9}, {
   3.687881448408225*^9, 3.687881449965784*^9}, {3.688409482424697*^9, 
   3.6884094828866997`*^9}, {3.68847619085579*^9, 3.6884763153855543`*^9}, {
   3.688476552921623*^9, 3.6884765906759157`*^9}, {3.688476640454545*^9, 
   3.6884766624616823`*^9}, {3.688478057858975*^9, 3.688478073819086*^9}, 
   3.688478106553846*^9, {3.688481832019665*^9, 3.6884818637270517`*^9}, {
   3.68848198601797*^9, 3.688481986289852*^9}, {3.68848203648921*^9, 
   3.688482036771994*^9}, {3.688571683922414*^9, 3.688571684564405*^9}, {
   3.688571754787105*^9, 3.688571756162634*^9}, {3.688571805207375*^9, 
   3.688571805400833*^9}, {3.688576534952465*^9, 3.6885765589018593`*^9}, {
   3.6885765973180237`*^9, 3.6885766099200773`*^9}, {3.688576677184456*^9, 
   3.68857670651512*^9}, {3.688576750047225*^9, 3.688576828468412*^9}, {
   3.688576861374028*^9, 3.688576865516281*^9}, {3.688576912302185*^9, 
   3.6885769776473627`*^9}, 3.688577121642941*^9, {3.688577592173789*^9, 
   3.688577596642589*^9}, {3.688579212731928*^9, 3.6885792419927883`*^9}, {
   3.6885802733306007`*^9, 3.688580278653151*^9}, {3.688586414777338*^9, 
   3.6885864462855883`*^9}, {3.6885895249386806`*^9, 3.688589525831869*^9}, {
   3.688589674208198*^9, 3.688589686164362*^9}, {3.6885964627827377`*^9, 
   3.688596463926784*^9}, {3.688597685474613*^9, 3.688597687244441*^9}, {
   3.688597777536826*^9, 3.6885978428089952`*^9}, 3.688637384935658*^9, {
   3.688637467402487*^9, 3.688637495119039*^9}, {3.6886382839697237`*^9, 
   3.6886382968259068`*^9}, {3.6935695128062057`*^9, 3.693569513642687*^9}, {
   3.697549216341201*^9, 3.697549251003508*^9}, {3.697585192455277*^9, 
   3.697585194236335*^9}, {3.6975880743788033`*^9, 3.69758808296707*^9}, {
   3.697634697600371*^9, 3.6976347015374517`*^9}, {3.6976347907966547`*^9, 
   3.697634815012352*^9}, {3.697634846070552*^9, 3.697634846469798*^9}, {
   3.697635021221985*^9, 3.697635027582736*^9}, {3.69772377453892*^9, 
   3.697723794507187*^9}, {3.697731824382801*^9, 3.697731855958313*^9}, {
   3.6977325212727823`*^9, 3.697732525024273*^9}, {3.70865818567872*^9, 
   3.708658187702449*^9}, {3.708658883922175*^9, 3.708658932380825*^9}, {
   3.708658978967927*^9, 3.708658988785028*^9}, {3.708659314987214*^9, 
   3.708659318220418*^9}, {3.708659414049062*^9, 3.7086594369538517`*^9}, {
   3.7086606357678967`*^9, 3.708660641303603*^9}, {3.708860242741111*^9, 
   3.708860256320875*^9}, {3.708863517115827*^9, 3.708863522732519*^9}, {
   3.7088640413773117`*^9, 3.708864043205145*^9}, {3.709336382683031*^9, 
   3.709336395942152*^9}, {3.7093364320313377`*^9, 3.709336434698505*^9}, {
   3.7093365406626472`*^9, 3.709336551061442*^9}, 3.710105950418229*^9, {
   3.710254090139742*^9, 3.710254135927783*^9}, {3.7102542924218893`*^9, 
   3.710254324487406*^9}, {3.710267124446744*^9, 3.710267144662348*^9}, {
   3.7103244341379538`*^9, 3.71032443720581*^9}, {3.711020940367322*^9, 
   3.711020940810072*^9}, {3.711020975480033*^9, 3.711021065813737*^9}, {
   3.711022029319018*^9, 3.7110220799490623`*^9}, {3.711054174444749*^9, 
   3.7110542104450006`*^9}, {3.711054290341386*^9, 3.711054309582295*^9}, {
   3.711054353579789*^9, 3.711054417990508*^9}, {3.711391853068926*^9, 
   3.7113918541986313`*^9}, {3.711396302259658*^9, 3.7113963222792788`*^9}, {
   3.711410431026333*^9, 3.7114104672429047`*^9}, {3.711410576810849*^9, 
   3.711410582779395*^9}, {3.711410638454603*^9, 3.711410640632468*^9}, 
   3.7127385346390533`*^9, {3.7165097127090883`*^9, 3.716509716707183*^9}, {
   3.7165097554390287`*^9, 3.7165099097910433`*^9}, {3.716509964181159*^9, 
   3.716510150447673*^9}, {3.716510221475322*^9, 3.716510222696692*^9}, {
   3.716510321273671*^9, 3.716510399037038*^9}, {3.716510549104228*^9, 
   3.716510701740183*^9}, {3.716510739280116*^9, 3.716510793683608*^9}, {
   3.716510847314308*^9, 3.716511177316183*^9}, {3.716511211881484*^9, 
   3.716511251927143*^9}, {3.716511497572378*^9, 3.7165115662915907`*^9}, {
   3.716548551710128*^9, 3.71654855526655*^9}, {3.716548615615774*^9, 
   3.716548615936906*^9}, {3.716549009807028*^9, 3.716549115590782*^9}, {
   3.716549162036189*^9, 3.7165491630300207`*^9}, {3.716549199117897*^9, 
   3.716549229136222*^9}, {3.716549271360865*^9, 3.7165492742940083`*^9}, {
   3.716549338308134*^9, 3.7165493787273197`*^9}, 3.7168525403146677`*^9, {
   3.7218491650092487`*^9, 3.7218491798236237`*^9}, {3.721849436036684*^9, 
   3.721849444642714*^9}, 3.721849623374535*^9, {3.722040187233363*^9, 
   3.722040312832337*^9}, 3.722041210508938*^9, {3.722041289001911*^9, 
   3.722041331207506*^9}, 3.7220419485067997`*^9, {3.722042038837043*^9, 
   3.722042052756021*^9}, {3.7220420979994993`*^9, 3.722042110652996*^9}, {
   3.722042415992391*^9, 3.722042529278997*^9}, {3.7220426780612717`*^9, 
   3.722042681575458*^9}, {3.722083154310812*^9, 3.7220831756527987`*^9}, {
   3.7220836780018663`*^9, 3.722083739137475*^9}, {3.7246347325389757`*^9, 
   3.7246347534392967`*^9}, {3.724634791495159*^9, 3.7246348110330153`*^9}, {
   3.732397720147819*^9, 3.732397792724414*^9}, {3.7327195399581633`*^9, 
   3.7327196031278954`*^9}, {3.73271963757236*^9, 3.7327197205518293`*^9}, {
   3.7327482240655193`*^9, 3.732748240507607*^9}, {3.732751024072899*^9, 
   3.732751025593628*^9}, {3.732751225986065*^9, 3.732751232584776*^9}, {
   3.732751408830764*^9, 3.732751441377883*^9}, {3.7327934666316853`*^9, 
   3.732793468303685*^9}, {3.732793518143791*^9, 3.732793532858294*^9}, {
   3.73279358957764*^9, 3.7327935900489798`*^9}, {3.732793657445579*^9, 
   3.732793665478195*^9}, {3.732793808529172*^9, 3.732793811049835*^9}, {
   3.732795159408784*^9, 3.732795165677896*^9}, {3.732799015996179*^9, 
   3.732799017105356*^9}, {3.733562962432672*^9, 3.733562968889001*^9}, {
   3.7335630110069513`*^9, 3.7335630213197823`*^9}, {3.734133255870408*^9, 
   3.734133256443324*^9}, 3.7551776828195868`*^9, 3.755177967562162*^9, 
   3.755180801033985*^9, {3.755698417105859*^9, 3.7556984206116323`*^9}, {
   3.755698582512156*^9, 3.755698583440915*^9}, {3.7556987244672956`*^9, 
   3.7556987550875473`*^9}, {3.755698806843412*^9, 3.755698835933962*^9}, {
   3.755698880502845*^9, 3.755698895321845*^9}, {3.755699303333419*^9, 
   3.7556993054258738`*^9}, {3.755716030678047*^9, 3.755716030964797*^9}, {
   3.755795563258087*^9, 3.75579556695955*^9}, {3.755796537533663*^9, 
   3.7557965422907124`*^9}, {3.7557969639625*^9, 3.755796980994426*^9}, {
   3.755797020002678*^9, 3.7557970311604958`*^9}, {3.755811336818635*^9, 
   3.7558113409514427`*^9}, 3.7558219421825037`*^9, 3.755821982249864*^9, {
   3.755876898693664*^9, 3.75587690868122*^9}, {3.755877411305174*^9, 
   3.755877440918792*^9}, {3.7558774825052*^9, 3.755877484798025*^9}, {
   3.755878279044626*^9, 3.7558783324152117`*^9}, {3.755878365271226*^9, 
   3.755878372973558*^9}, {3.7558787640544853`*^9, 3.755878815881917*^9}, {
   3.7558789032637587`*^9, 3.7558789095022593`*^9}, {3.755879568877222*^9, 
   3.755879581918968*^9}, {3.75914192614564*^9, 
   3.759141926523275*^9}},ExpressionUUID->"dd55a33c-ecac-4a63-91d9-\
c102e305c363"],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",ExpressionUUID->"3296d68e-4dbb-4e7b-a6f6-2f4b9cd7c55b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "EcoSim", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}], ",", "\n", 
     RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"NDSolveOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Logged", "\[Rule]", "False"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "7"}], ",", 
     RowBox[{"InterpolationPoints", "\[Rule]", "1000"}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"WhenEvents", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", 
     RowBox[{"EqStop", "\[Rule]", "False"}], ",", 
     RowBox[{"EqThreshold", "\[Rule]", 
      RowBox[{"10", "^", 
       RowBox[{"-", "8"}]}]}], ",", 
     RowBox[{"TimeScale", "\[Rule]", "1"}], ",", 
     RowBox[{"OutputTMin", "\[Rule]", "0"}], ",", 
     RowBox[{"Output", "\[Rule]", "\"\<Dynamics\>\""}], ",", 
     RowBox[{"TMin", "\[Rule]", "0"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.6857478833894367`*^9, 3.6857478859298077`*^9}, {
   3.6885716845809298`*^9, 3.688571684696095*^9}, {3.711021081057744*^9, 
   3.711021082726972*^9}, {3.71102206121577*^9, 3.711022066182521*^9}, {
   3.711054119325077*^9, 3.711054130787101*^9}, {3.7114105574184513`*^9, 
   3.711410562285851*^9}, 3.725140957969185*^9},
 CellLabel->
  "In[513]:=",ExpressionUUID->"155f75be-858d-4e05-a554-2765629bf664"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",
 CellChangeTimes->{{3.711391826371338*^9, 
  3.7113918281050377`*^9}},ExpressionUUID->"79c3108b-6fbc-4a8c-9b3b-\
ac31a0e3227c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoSim", "[", 
    RowBox[{
     RowBox[{"eesol_", "?", "TraitsAndVariablesQ"}], ",", 
     RowBox[{"tmax_", "?", "NumericQ"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
   RowBox[{"EcoSim", "[", 
    RowBox[{
     RowBox[{"ExtractTraits", "[", "eesol", "]"}], ",", 
     RowBox[{"ExtractVariables", "[", "eesol", "]"}], ",", "tmax", ",", 
     "opts"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7113918351562*^9, 3.7113918740712967`*^9}, 
   3.7114982161331043`*^9, {3.712738534647805*^9, 3.7127385346513844`*^9}},
 CellLabel->
  "In[514]:=",ExpressionUUID->"b2ddfb3e-9a4c-4975-bbac-1257a23d49bf"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["*EcoEq: SolveEcoEq / NSolveEcoEq / FindEcoEq", "Subsection",
 CellDingbat->"\[ClubSuit]",
 CellChangeTimes->{{3.6954006453555927`*^9, 3.6954006557460127`*^9}, {
   3.6962556239228687`*^9, 3.696255625343861*^9}, 
   3.699565737020871*^9},ExpressionUUID->"c235197c-17c2-4619-a74f-\
43a96c883153"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoEq", "[", 
    RowBox[{
     RowBox[{"traitsin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "TraitsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"pops", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"vars", ":", 
      RowBox[{"(", "_List", ")"}], ":", "All"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<EcoEq\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "method", ",", 
       "solveopts", ",", "nsolveopts", ",", "findrootopts", ",", 
       "boundarydetection", ",", "time", ",", "fixed", ",", "chop", ",", 
       "qss", ",", "verbose", ",", "verboseall", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "nonvars", 
       ",", "nonfixedvars", ",", "traits", ",", "fixedvars", ",", "removets", 
       ",", "eqns", ",", "unks", ",", "newunk", ",", "sol", ",", "res"}], 
      "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "Nsp", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Msg", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"method", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Method", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"method", "===", "Automatic"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"pops", "!=", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"method", "=", "\"\<FindRoot\>\""}], ",", 
            RowBox[{"method", "=", "\"\<Solve\>\""}]}], "]"}]}], "]"}], ";", 
        "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: method=\>\"", ",", "method"}], "]"}]}],
          "]"}], ";", "\n", "\n", 
        RowBox[{"solveopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"SolveOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"nsolveopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"NSolveOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"findrootopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"FindRootOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"boundarydetection", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"BoundaryDetection", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"time", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Time", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"chop", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Chop", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"qss", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"QSS", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"fixed", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Fixed", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: fixedvars=\>\"", ",", "fixedvars"}], 
           "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"EcoEq", " ", 
          RowBox[{"doesn", "'"}], "t", " ", "work", " ", "on", " ", 
          "Periodic", " ", "models"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"modelperiod", "=!=", "0"}], "&&", 
           RowBox[{"time", "===", "t"}], "&&", 
           RowBox[{"method", "\[Equal]", "\"\<FindRoot\>\""}]}], ",", 
          RowBox[{
           RowBox[{"Msg", "[", 
            RowBox[{"EcoEq", "::", "noneq"}], "]"}], ";", 
           RowBox[{"Return", "[", "]"}]}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"handle", " ", "blanks"}], " ", "&"}], " ", "figure", " ", 
          "out", " ", "number", " ", "of", " ", "species", " ", "in", " ", 
          "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"traits", "=", 
         RowBox[{"ExpandNspInTraits", "[", "traitsin", "]"}]}], ";", "\n", 
        RowBox[{"SetNsp", "[", "traits", "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"vars", "===", "All"}], ",", "\n", "\t", 
          RowBox[{"nonvars", "=", 
           RowBox[{"{", "}"}]}], ",", "\n", "\t", 
          RowBox[{"nonvars", "=", 
           RowBox[{"orderedComplement", "[", 
            RowBox[{"AllVariables", ",", "vars"}], "]"}]}]}], "\n", "]"}], 
        ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<nonvars=\>\"", ",", "nonvars"}], "]"}], ";"}], "*)"}],
         "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"qss", "\[Equal]", "False"}], ",", "\n", "\t", 
          RowBox[{"fixed", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"fixed", ",", 
             RowBox[{"Replace", "[", 
              RowBox[{"nonvars", ",", 
               RowBox[{"x_", "\[Rule]", 
                RowBox[{"(", 
                 RowBox[{"x", "\[Rule]", "0"}], ")"}]}], ",", "1"}], "]"}]}], 
            "]"}]}], ",", "\n", "\t", 
          RowBox[{"fixed", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"fixed", ",", 
             RowBox[{"Replace", "[", 
              RowBox[{"nonvars", ",", 
               RowBox[{"x_", "\[Rule]", 
                RowBox[{"(", 
                 RowBox[{"x", "\[Rule]", "x"}], ")"}]}], ",", "1"}], "]"}]}], 
            "]"}]}]}], "\n", "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<fixed=\>\"", ",", "fixed"}], "]"}], ";"}], "*)"}], 
        "\n", "\n", 
        RowBox[{"fixedvars", "=", 
         RowBox[{"fixed", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        RowBox[{"nonfixedvars", "=", 
         RowBox[{"orderedComplement", "[", 
          RowBox[{"AllVariables", ",", "fixedvars"}], "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<nonfixedvars=\>\"", ",", "nonfixedvars"}], "]"}], 
          ";"}], "*)"}], "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"set", " ", "eqns"}], ",", " ", 
          RowBox[{"unks", " ", "and", " ", "ics"}]}], " ", "*)"}], "\n", 
        RowBox[{"eqns", "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"EcoEqns", "[", 
               RowBox[{"traits", ",", 
                RowBox[{"Fixed", "\[Rule]", "fixed"}]}], "]"}], "/.", "Eq"}], 
             "/.", "RemovePopts"}], "/.", 
            RowBox[{"t", "\[Rule]", "time"}]}], "/.", "fixed"}], "/.", 
          "traits"}]}], ";", "\n", "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<Solve\>\"", ",", "\"\<NSolve\>\""}], "}"}], ",", 
            "method"}], "]"}], ",", "\n", "\t", 
          RowBox[{"unks", "=", "nonfixedvars"}], "\n", ",", "\n", "\t", 
          RowBox[{"method", "\[Equal]", "\"\<FindRoot\>\""}], ",", "\n", "\t", 
          RowBox[{"unks", "=", 
           RowBox[{"Table", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"newunk", "=", 
               RowBox[{"{", 
                RowBox[{"var", ",", 
                 RowBox[{"(", 
                  RowBox[{"var", "/.", 
                   RowBox[{"Append", "[", 
                    RowBox[{"pops", ",", 
                    RowBox[{"var", "\[Rule]", "0"}]}], "]"}]}], ")"}]}], 
                "}"}]}], ";", "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{"boundarydetection", ",", 
                RowBox[{"newunk", "=", 
                 RowBox[{"Join", "[", 
                  RowBox[{"newunk", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"range", "[", "var", "]"}], "]"}], ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{"range", "[", "var", "]"}], "]"}]}], "}"}]}], 
                  "]"}]}]}], "]"}], ";", "\n", "\t\t", "newunk"}], ",", 
             RowBox[{"{", 
              RowBox[{"var", ",", "nonfixedvars"}], "}"}]}], "]"}]}]}], "\n", 
         "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: eqns=\>\"", ",", "eqns"}], "]"}]}], 
         "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: unks=\>\"", ",", "unks"}], "]"}]}], 
         "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"solve", " ", "it"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"method", "\[Equal]", "\"\<Solve\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"eqns", "=", "eqns"}], ",", 
                 RowBox[{"unks", "=", "unks"}], ",", 
                 RowBox[{"options", "=", 
                  RowBox[{"Sequence", "@@", "solveopts"}]}]}], "}"}], ",", 
               RowBox[{"PrintCall", "[", 
                RowBox[{"Global`sol", "=", 
                 RowBox[{"Solve", "[", 
                  RowBox[{"eqns", ",", "unks", ",", "options"}], "]"}]}], 
                "]"}]}], "]"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{"sol", "=", 
            RowBox[{"Solve", "[", 
             RowBox[{"eqns", ",", "unks", ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "solveopts"}], "]"}]}], "]"}]}]}], 
          ",", "\n", "\t", 
          RowBox[{"method", "\[Equal]", "\"\<NSolve\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"eqns", "=", "eqns"}], ",", 
                 RowBox[{"unks", "=", "unks"}], ",", 
                 RowBox[{"options", "=", 
                  RowBox[{"Sequence", "@@", "nsolveopts"}]}]}], "}"}], ",", 
               RowBox[{"PrintCall", "[", 
                RowBox[{"Global`sol", "=", 
                 RowBox[{"NSolve", "[", 
                  RowBox[{"eqns", ",", "unks", ",", "options"}], "]"}]}], 
                "]"}]}], "]"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{"sol", "=", 
            RowBox[{"NSolve", "[", 
             RowBox[{"eqns", ",", "unks", ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "nsolveopts"}], "]"}]}], "]"}]}]}], 
          ",", "\n", "\t", 
          RowBox[{"method", "\[Equal]", "\"\<FindRoot\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"eqns", "=", "eqns"}], ",", 
                 RowBox[{"unks", "=", "unks"}], ",", 
                 RowBox[{"options", "=", 
                  RowBox[{"Sequence", "@@", "findrootopts"}]}]}], "}"}], ",", 
               
               RowBox[{"PrintCall", "[", 
                RowBox[{"Global`sol", "=", 
                 RowBox[{"FindRoot", "[", 
                  RowBox[{"eqns", ",", "unks", ",", "options"}], "]"}]}], 
                "]"}]}], "]"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{"sol", "=", 
            RowBox[{"FindRoot", "[", 
             RowBox[{"eqns", ",", "unks", ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "findrootopts"}], "]"}]}], "]"}]}]}],
           ",", "\n", "\t", "Else", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Msg", "[", 
            RowBox[{"EcoEq", "::", "badmtd"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}], ";"}]}], "\n", "]"}], ";",
         "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: sol=\>\"", ",", "sol"}], "]"}]}], 
         "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"add", " ", "in", " ", "Fixed", " ", "variables"}], " ", 
         "*)"}], "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<Solve\>\"", ",", "\"\<NSolve\>\""}], "}"}], ",", 
            "method"}], "]"}], ",", "\n", "\t", 
          RowBox[{"res", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{"fixed", ",", "#"}], "]"}], "&"}], " ", "/@", " ", 
            "sol"}]}], ",", "\n", "\t", 
          RowBox[{"method", "\[Equal]", "\"\<FindRoot\>\""}], ",", "\n", "\t", 
          RowBox[{"res", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"fixed", ",", "sol"}], "]"}]}]}], "\n", "]"}], ";", "\n", 
        "\n", 
        RowBox[{"If", "[", 
         RowBox[{"chop", ",", "\n", "\t", 
          RowBox[{"Return", "[", 
           RowBox[{"VarSort", "[", 
            RowBox[{
             RowBox[{"EqSort", "[", 
              RowBox[{"Chop", "[", "res", "]"}], "]"}], ",", "AllVariables"}],
             "]"}], "]"}], ",", "\n", "\t", 
          RowBox[{"Return", "[", 
           RowBox[{"VarSort", "[", 
            RowBox[{
             RowBox[{"EqSort", "[", "res", "]"}], ",", "AllVariables"}], 
            "]"}], "]"}]}], "\n", "]"}], ";"}]}], "\n", "\n", "]"}]}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.687881450105945*^9, 3.6878814505620613`*^9}, {
   3.68857168476537*^9, 3.688571684934305*^9}, {3.6885717562075033`*^9, 
   3.688571756902958*^9}, {3.688571805445076*^9, 3.6885718054840527`*^9}, {
   3.6885777801299953`*^9, 3.688577821198338*^9}, {3.688578111707645*^9, 
   3.688578263696265*^9}, {3.688583189141659*^9, 3.688583201104134*^9}, {
   3.6885837935779333`*^9, 3.688583810589251*^9}, {3.688583857663521*^9, 
   3.688583866440373*^9}, 3.688584023610524*^9, {3.688584454327429*^9, 
   3.688584464134824*^9}, {3.6885851260336657`*^9, 3.6885852077551622`*^9}, 
   3.688685223038662*^9, {3.693593326673889*^9, 3.693593328006213*^9}, {
   3.693651209563744*^9, 3.693651212696253*^9}, {3.693651330751341*^9, 
   3.693651337237907*^9}, {3.693700342037077*^9, 3.6937003445534773`*^9}, {
   3.69961046687166*^9, 3.699610497623667*^9}, 3.709124896659213*^9, {
   3.709336699110145*^9, 3.709336699577385*^9}, {3.7101059510781393`*^9, 
   3.710105954644555*^9}, {3.710254347130986*^9, 3.710254357145165*^9}, {
   3.710254389172209*^9, 3.7102544454183407`*^9}, {3.710286418340989*^9, 
   3.710286419629771*^9}, 3.710286914350444*^9, 3.7127385346721067`*^9, {
   3.714088449593779*^9, 3.714088465042605*^9}, {3.714088783139654*^9, 
   3.714088791448407*^9}, {3.714088844203219*^9, 3.71408885600861*^9}, 
   3.714089170503827*^9, {3.7140892855105886`*^9, 3.7140893056027193`*^9}, {
   3.7146455898601007`*^9, 3.714645607554661*^9}, {3.714645833218658*^9, 
   3.714645878205338*^9}, {3.7146594716484127`*^9, 3.714659498519136*^9}, {
   3.714659560420806*^9, 3.714659597546504*^9}, {3.714661306250412*^9, 
   3.7146613128544407`*^9}, {3.7146613520466423`*^9, 3.714661374692927*^9}, {
   3.714661426985828*^9, 3.714661471021627*^9}, {3.714670952581798*^9, 
   3.7146709761045732`*^9}, {3.714673053941062*^9, 3.71467307388553*^9}, {
   3.714673325535184*^9, 3.7146733431977777`*^9}, {3.714673385822101*^9, 
   3.714673408156714*^9}, {3.7146763296033154`*^9, 3.714676349908175*^9}, {
   3.714676870217898*^9, 3.7146768813446712`*^9}, {3.714677005871266*^9, 
   3.7146770388481817`*^9}, {3.714677885477186*^9, 3.714677895396152*^9}, {
   3.7146815798359137`*^9, 3.71468158317702*^9}, {3.714686709068077*^9, 
   3.714686720449131*^9}, {3.714686780357995*^9, 3.714686847805605*^9}, {
   3.714686886251251*^9, 3.7146869069408197`*^9}, {3.7146904343318*^9, 
   3.714690435561199*^9}, {3.7146905887398357`*^9, 3.714690601923481*^9}, {
   3.714690631972337*^9, 3.714690933211876*^9}, {3.714691441205781*^9, 
   3.7146914443765163`*^9}, 3.714771558293874*^9, {3.71477345759927*^9, 
   3.714773544216226*^9}, {3.714773631881823*^9, 3.714773638759398*^9}, {
   3.7147737076976557`*^9, 3.714773768872843*^9}, {3.714773810344654*^9, 
   3.714773862655966*^9}, {3.714774175646474*^9, 3.714774238321686*^9}, {
   3.714774276778345*^9, 3.714774313756324*^9}, {3.714774363666697*^9, 
   3.714774431577939*^9}, {3.71477474128935*^9, 3.714774765274622*^9}, {
   3.714774824264062*^9, 3.7147748384112673`*^9}, {3.7147748942865953`*^9, 
   3.7147749226594543`*^9}, {3.7147749728240833`*^9, 
   3.7147749743011627`*^9}, {3.714777387544536*^9, 3.714777422944803*^9}, {
   3.715423204967746*^9, 3.715423247100832*^9}, {3.716851794553669*^9, 
   3.716851838573512*^9}, {3.716851923962669*^9, 3.71685195096766*^9}, {
   3.716852009532653*^9, 3.716852055393906*^9}, {3.716852216771632*^9, 
   3.71685231192962*^9}, {3.7168523670615377`*^9, 3.71685238929698*^9}, {
   3.7168524239048243`*^9, 3.716852506519627*^9}, {3.7168526119630947`*^9, 
   3.716852660342918*^9}, {3.720561423750366*^9, 3.720561426334433*^9}, {
   3.720561478834214*^9, 3.720561481166069*^9}, {3.721849189319437*^9, 
   3.72184920349916*^9}, {3.721849430040469*^9, 3.7218494327297087`*^9}, 
   3.7218496199026947`*^9, {3.722043437583398*^9, 3.722043661426222*^9}, {
   3.722083757551734*^9, 3.72208381655929*^9}, {3.725055711251069*^9, 
   3.725055715332081*^9}, 3.7251409579843616`*^9, 3.725141965221623*^9, {
   3.728485760884264*^9, 3.728485790162279*^9}, {3.728492488068541*^9, 
   3.728492510850383*^9}, {3.728493399302709*^9, 3.728493401619061*^9}, {
   3.7284934402687283`*^9, 3.728493443062832*^9}, {3.728495197386813*^9, 
   3.7284952624184313`*^9}, {3.728495727453259*^9, 3.7284957368624372`*^9}, {
   3.728495928466558*^9, 3.72849592873841*^9}, {3.731976096240344*^9, 
   3.7319762267049303`*^9}, {3.731976277432869*^9, 3.7319762780290833`*^9}, {
   3.7319768020188913`*^9, 3.731976803777299*^9}, {3.731976892921598*^9, 
   3.731976916165578*^9}, {3.731976959563902*^9, 3.731976962085402*^9}, {
   3.731977155942281*^9, 3.73197716443357*^9}, {3.731977195279862*^9, 
   3.7319772065728207`*^9}, {3.731977279507853*^9, 3.731977284166617*^9}, {
   3.731977461555399*^9, 3.731977465980788*^9}, {3.731978006012163*^9, 
   3.731978013040636*^9}, {3.731978082421216*^9, 3.731978094010425*^9}, {
   3.731979039353709*^9, 3.731979039363929*^9}, {3.731979598523592*^9, 
   3.73197961490341*^9}, {3.73197972820308*^9, 3.7319797289924088`*^9}, {
   3.731980249144205*^9, 3.73198026694471*^9}, 3.731980373788886*^9, {
   3.7319804050810537`*^9, 3.731980445644969*^9}, {3.731980548309566*^9, 
   3.731980566185113*^9}, {3.731980610588462*^9, 3.7319806369962673`*^9}, {
   3.731980738391506*^9, 3.731980763895586*^9}, {3.731980818773868*^9, 
   3.731980857708199*^9}, {3.731980943731715*^9, 3.731981000719969*^9}, 
   3.731981067123608*^9, {3.732221099817436*^9, 3.7322211073866863`*^9}, {
   3.732237132742322*^9, 3.73223714782172*^9}, {3.732237266376129*^9, 
   3.732237271289744*^9}, {3.732273382440886*^9, 3.73227340932165*^9}, {
   3.732273491519849*^9, 3.732273491669429*^9}, {3.732394286439495*^9, 
   3.732394371996009*^9}, 3.755182267229639*^9, 3.755184973022751*^9, {
   3.75582209648076*^9, 3.7558220982190313`*^9}, {3.7558225635660257`*^9, 
   3.7558225772644787`*^9}, {3.7585221898099403`*^9, 3.7585221899906693`*^9}, 
   3.759140406004279*^9, {3.75914072046175*^9, 3.759140778591229*^9}, {
   3.759141110454555*^9, 3.7591411170112877`*^9}, 
   3.759142070148613*^9},ExpressionUUID->"ab6d0b03-bad3-46c3-add3-\
d5cdbff44c2b"],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",
 CellChangeTimes->{{3.7085811611223593`*^9, 
  3.708581162674871*^9}},ExpressionUUID->"0c1f3422-425f-49bd-aca9-\
1f0bc036f495"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SolveEcoEq", "[", "args___", "]"}], ":=", 
   RowBox[{"EcoEq", "[", 
    RowBox[{"args", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Solve\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NSolveEcoEq", "[", "args___", "]"}], ":=", 
   RowBox[{"EcoEq", "[", 
    RowBox[{"args", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NSolve\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindEcoEq", "[", "args___", "]"}], ":=", 
   RowBox[{"EcoEq", "[", 
    RowBox[{"args", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<FindRoot\>\""}]}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.6954002528825893`*^9, 3.6954002987471733`*^9}},
 CellLabel->
  "In[516]:=",ExpressionUUID->"4ee9e2c7-268d-4bae-81b1-a2b86136b327"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",ExpressionUUID->"2e95b365-01aa-4bf4-a109-16d6c8ed0c34"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "EcoEq", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"SolveOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"NSolveOpts", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"(*", 
        RowBox[{"Reals", ","}], "*)"}], 
       RowBox[{"Method", "\[Rule]", "\"\<EndomorphismMatrix\>\""}], "}"}]}], 
     ",", 
     RowBox[{"FindRootOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Chop", "\[Rule]", "True"}], ",", 
     RowBox[{"QSS", "\[Rule]", "False"}], ",", 
     RowBox[{"Time", "\[Rule]", "t"}], ",", 
     RowBox[{"Verbose", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.68788145061252*^9, {3.6885716849598207`*^9, 3.688571685061096*^9}, 
   3.6998307192614937`*^9, {3.699830756047996*^9, 3.699830757855876*^9}, {
   3.7146768525874043`*^9, 3.714676860849709*^9}, {3.714771544699765*^9, 
   3.714771544916628*^9}, 3.725140957991322*^9, {3.755266321588594*^9, 
   3.755266324656404*^9}, 3.7553697389508457`*^9, 
   3.755370573729661*^9},ExpressionUUID->"ab1183a6-f852-41fc-a3b0-\
bfb44dd79f94"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "SolveEcoEq", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"SolveOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Chop", "\[Rule]", "True"}], ",", 
     RowBox[{"QSS", "\[Rule]", "False"}], ",", 
     RowBox[{"Time", "\[Rule]", "t"}], ",", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "True"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.68788145061252*^9, {3.6885716849598207`*^9, 3.688571685061096*^9}, 
   3.6998307192614937`*^9, {3.699830756047996*^9, 3.699830757855876*^9}, {
   3.7146768525874043`*^9, 3.714676860849709*^9}, {3.714771454875986*^9, 
   3.714771469901429*^9}, 3.7147715483211813`*^9, {3.728485805176304*^9, 
   3.728485809196212*^9}},
 CellLabel->
  "In[520]:=",ExpressionUUID->"90a530fa-34b1-42e9-9cc7-ee64bac5fb8a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["FindEcoCycle", "Subsection",
 CellDingbat->"\[ClubSuit]",
 CellChangeTimes->{
  3.696151024358018*^9},ExpressionUUID->"eaf83884-ac96-485d-ac81-\
8f22fd8b802a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindEcoCycle", "[", 
    RowBox[{
     RowBox[{"traits", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "TraitsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"pops", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<FindEcoCycle\>\"", "]"}]}], ",", "\n", 
       
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "period", ",", "method", ",", "monitor", ",", 
       "printtrace", ",", "\n", "findrootopts", ",", "ecosimopts", ",", 
       "maxiterations", ",", "accuracygoal", ",", "precisiongoal", ",", 
       "logged", ",", "fixed", ",", "\n", "triggervar", ",", "warmup1", ",", 
       "warmup2", ",", "warmup3", ",", "wheneventopts", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", 
       "nonfixedvars", ",", "fixedvars", ",", "extrema", ",", "triggerpos", 
       ",", "triggerval", ",", "max", ",", "ics2", ",", "ics3", ",", "ics4", 
       ",", "diff", ",", "tmax", ",", "eq", ",", "\n", "ic", ",", "nb", ",", 
       "thing", ",", "eqns", ",", "unks", ",", "logd", ",", "vars", ",", 
       "unksics", ",", "ics", ",", "res", ",", "sol", ",", "per"}], "}"}], 
     ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "Nsp", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Msg", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"$findecocyclesteps", "=", "0"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoCycle", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoCycle", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"monitor", "=", 
         RowBox[{"OptionValue", "[", "Monitor", "]"}]}], ";", "\n", 
        RowBox[{"printtrace", "=", 
         RowBox[{"OptionValue", "[", "PrintTrace", "]"}]}], ";", "\n", 
        RowBox[{"period", "=", 
         RowBox[{"OptionValue", "[", "Period", "]"}]}], ";", "\n", 
        RowBox[{"method", "=", 
         RowBox[{"OptionValue", "[", "Method", "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"method", "===", "Automatic"}], ",", "\n", "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], "&&", 
             RowBox[{"modelperiod", "\[Equal]", "0"}]}], ",", 
            RowBox[{"method", "=", "\"\<EcoSim\>\""}], ",", 
            RowBox[{"method", "=", "\"\<FixedPoint\>\""}]}], "]"}]}], "]"}], 
        ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: method=\>\"", ",", "method"}], "]"}]}],
          "]"}], ";", "\n", 
        RowBox[{"findrootopts", "=", 
         RowBox[{"OptionValue", "[", "FindRootOpts", "]"}]}], ";", "\n", 
        RowBox[{"ecosimopts", "=", 
         RowBox[{"OptionValue", "[", "EcoSimOpts", "]"}]}], ";", "\n", 
        RowBox[{"maxiterations", "=", 
         RowBox[{"OptionValue", "[", "MaxIterations", "]"}]}], ";", "\n", 
        RowBox[{"accuracygoal", "=", 
         RowBox[{"OptionValue", "[", "AccuracyGoal", "]"}]}], ";", "\n", 
        RowBox[{"triggervar", "=", 
         RowBox[{"OptionValue", "[", "TriggerVariable", "]"}]}], ";", "\n", 
        RowBox[{"warmup1", "=", 
         RowBox[{"OptionValue", "[", "WarmUp", "]"}]}], ";", "\n", 
        RowBox[{"warmup2", "=", 
         RowBox[{"OptionValue", "[", "WarmUp2", "]"}]}], ";", "\n", 
        RowBox[{"warmup3", "=", 
         RowBox[{"OptionValue", "[", "WarmUp3", "]"}]}], ";", "\n", 
        RowBox[{"tmax", "=", 
         RowBox[{"OptionValue", "[", "TMax", "]"}]}], ";", "\n", 
        RowBox[{"wheneventopts", "=", 
         RowBox[{"OptionValue", "[", "WhenEventOpts", "]"}]}], ";", "\n", 
        RowBox[{"logged", "=", 
         RowBox[{"OptionValue", "[", "Logged", "]"}]}], ";", "\n", 
        RowBox[{"fixed", "=", 
         RowBox[{"OptionValue", "[", "Fixed", "]"}]}], ";", "\n", 
        RowBox[{"fixedvars", "=", 
         RowBox[{"fixed", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: fixedvars=\>\"", ",", "fixedvars"}], 
           "]"}]}], "]"}], ";", "\n", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"SetNsp", "[", "traits", "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"set", " ", "up", " ", "thing"}], " ", "&"}], " ", 
          "unks"}], " ", "*)"}], "\n", 
        RowBox[{"nonfixedvars", "=", 
         RowBox[{"pops", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "build", " ", "various", " ", "lists", " ", "of", " ", "vars"}], " ",
          "*)"}], "\n", 
        RowBox[{"unks", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"eq", "[", "var", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"var", ",", "nonfixedvars"}], "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"vars", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"logged", "&&", 
              RowBox[{
               RowBox[{"type", "[", "var", "]"}], "===", 
               "\"\<Extensive\>\""}]}], ",", 
             RowBox[{"Log", "[", "var", "]"}], ",", "var"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"var", ",", "nonfixedvars"}], "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"ics", "=", 
         RowBox[{"vars", "/.", "pops"}]}], ";", "\n", 
        RowBox[{"unksics", "=", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"unks", ",", "ics"}], "}"}], "]"}]}], ";", "\n", 
        RowBox[{"logd", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"logged", "&&", 
              RowBox[{
               RowBox[{"type", "[", "var", "]"}], "===", 
               "\"\<Extensive\>\""}]}], ",", "True", ",", "False"}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"var", ",", "nonfixedvars"}], "}"}]}], "]"}]}], ";", "\n",
         "\n", 
        RowBox[{"(*", "\n", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<unks=\>\"", ",", "unks"}], "]"}], ";", "\n", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<unksics=\>\"", ",", "unksics"}], "]"}], ";", "\n", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<ics=\>\"", ",", "ics"}], "]"}], ";", "\n", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<logd=\>\"", ",", "logd"}], "]"}], ";", "\n", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<vars=\>\"", ",", "vars"}], "]"}], ";"}], "\n", "*)"}],
         "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "\"\<EcoSim\>\"", " ", "method", " ", "for", " ", "unforced", " ", 
          "ContinuousTime", " ", "models"}], " ", "*)"}], "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"method", "===", "\"\<EcoSim\>\""}], ",", "\n", "\n", "\t", 
          
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], "&&", 
                RowBox[{"modelperiod", "\[Equal]", "0"}]}], ")"}]}], ",", 
             RowBox[{
              RowBox[{"Msg", "[", 
               RowBox[{"FindEcoCycle", "::", "noecosim"}], "]"}], ";", 
              RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
           "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"triggervar", "===", "Automatic"}], ",", 
             RowBox[{"triggervar", "=", 
              RowBox[{
              "nonfixedvars", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}]}]}], "]"}], ";", "\n", "\t", 
           RowBox[{"triggerpos", "=", 
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{"nonfixedvars", ",", "triggervar"}], "]"}], 
             "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
           "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "warmup", " ", "#1", " ", "to", " ", "get", " ", "on", " ", 
             "limit", " ", "cycle"}], " ", "*)"}], "\n", "\t", 
           RowBox[{"ics2", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"warmup1", ">", "0"}], ",", "\n", "\t\t", 
              RowBox[{"FinalSlice", "[", 
               RowBox[{"EcoSim", "[", 
                RowBox[{"traits", ",", "pops", ",", "warmup1", ",", 
                 RowBox[{"Fixed", "\[Rule]", "fixed"}], ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"Sequence", "@@", "ecosimopts"}], "]"}]}], "]"}], 
               "]"}], ",", "\n", "\t\t", "pops"}], "]"}]}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: ics2=\>\"", ",", "ics2"}], "]"}]}], 
            "]"}], ";", "\n", "\t", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "warmup", " ", "#2", " ", "to", " ", "find", " ", "maxima"}], " ",
             "*)"}], "\n", "\t", 
           RowBox[{"extrema", "=", 
            RowBox[{"{", "}"}]}], ";", "\n", "\t", 
           RowBox[{"EcoSim", "[", 
            RowBox[{"traits", ",", "ics2", ",", "warmup2", ",", 
             RowBox[{"WhenEvents", "\[Rule]", 
              RowBox[{"{", "\n", "\t\t\t", 
               RowBox[{
                RowBox[{"WhenEvent", "[", 
                 RowBox[{"event", ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"extrema", ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"var", "[", "t", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"var", ",", "nonfixedvars"}], "}"}]}], "]"}]}], 
                   "]"}], ",", 
                  RowBox[{"Evaluate", "[", 
                   RowBox[{"Sequence", "@@", "wheneventopts"}], "]"}]}], 
                 "]"}], "\n", "\t\t\t", "/.", 
                RowBox[{"event", "\[Rule]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"triggervar", "'"}], "[", "t", "]"}], "\[Equal]", 
                   "0"}], ")"}]}]}], "}"}]}], ",", 
             RowBox[{"Fixed", "\[Rule]", "fixed"}], ",", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"Sequence", "@@", "ecosimopts"}], "]"}]}], "]"}], ";", 
           "\n", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"extrema", "\[Equal]", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{
              RowBox[{"Msg", "[", 
               RowBox[{"FindEcoCycle", "::", "nomaxima"}], "]"}], ";", 
              RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
           "\n", "\t", 
           RowBox[{"max", "=", 
            RowBox[{"Last", "@", 
             RowBox[{"Sort", "[", 
              RowBox[{"extrema", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{
                 "#1", "\[LeftDoubleBracket]", "triggerpos", 
                  "\[RightDoubleBracket]"}], "<", 
                 RowBox[{
                 "#2", "\[LeftDoubleBracket]", "triggerpos", 
                  "\[RightDoubleBracket]"}]}], "&"}]}], "]"}]}]}], ";", "\n", 
           "\t", 
           RowBox[{"ics3", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
               "nonfixedvars", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}], "\[Rule]", 
               RowBox[{
               "max", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"Length", "[", "nonfixedvars", "]"}]}], "}"}]}], 
             "]"}]}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: ics3=\>\"", ",", "ics3"}], "]"}]}], 
            "]"}], ";", "\n", "\t", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "warmup", " ", "#3", " ", "to", " ", "move", " ", "a", " ", "wee",
              " ", "bit", " ", "beyond", " ", "the", " ", "maximum"}], " ", 
            "*)"}], "\n", "\t", 
           RowBox[{"ics4", "=", 
            RowBox[{"FinalSlice", "[", 
             RowBox[{"EcoSim", "[", 
              RowBox[{"traits", ",", "ics3", ",", "warmup3", ",", 
               RowBox[{"Fixed", "\[Rule]", "fixed"}], ",", 
               RowBox[{"Evaluate", "[", 
                RowBox[{"Sequence", "@@", "ecosimopts"}], "]"}]}], "]"}], 
             "]"}]}], ";", "\n", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: ics4=\>\"", ",", "ics4"}], "]"}]}], 
            "]"}], ";", "\n", "\n", "\t", 
           RowBox[{"Do", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"triggerval", "=", 
               RowBox[{"triggervar", "/.", "ics4"}]}], ";", "\n", "\t\t", 
              "\n", "\t\t", 
              RowBox[{"sol", "=", 
               RowBox[{"EcoSim", "[", 
                RowBox[{"traits", ",", "ics4", ",", "tmax", ",", 
                 RowBox[{"WhenEvents", "\[Rule]", 
                  RowBox[{"{", "\n", "\t\t\t", 
                   RowBox[{
                    RowBox[{"WhenEvent", "[", 
                    RowBox[{"event", ",", "\"\<StopIntegration\>\"", ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "wheneventopts"}], "]"}]}], 
                    "]"}], "\n", "\t\t\t", "/.", 
                    RowBox[{"event", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"triggervar", "[", "t", "]"}], "<", 
                    "triggerval"}], ")"}]}]}], "}"}]}], ",", 
                 RowBox[{"Fixed", "\[Rule]", "fixed"}], ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"Sequence", "@@", "ecosimopts"}], "]"}]}], "]"}]}], 
              ";", "\n", "\n", "\t\t", 
              RowBox[{"diff", "=", 
               RowBox[{"Sum", "[", 
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"var", "/.", 
                    RowBox[{"FinalSlice", "[", "sol", "]"}]}], ")"}], "-", 
                   RowBox[{"(", 
                    RowBox[{"var", "/.", "ics4"}], ")"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"var", ",", "nonfixedvars"}], "}"}]}], "]"}]}], ";",
               "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"diff", "<", 
                 RowBox[{"10", "^", 
                  RowBox[{"-", "accuracygoal"}]}]}], ",", 
                RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\n", "\n", "\t\t", 
              RowBox[{"ics4", "=", 
               RowBox[{"FinalSlice", "[", "sol", "]"}]}], ";"}], "\n", "\t", 
             ",", 
             RowBox[{"{", "maxiterations", "}"}]}], "]"}], ";", "\n", "\n", 
           "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"diff", ">", 
              RowBox[{"10", "^", 
               RowBox[{"-", "accuracygoal"}]}]}], ",", 
             RowBox[{"Msg", "[", 
              RowBox[{
               RowBox[{"FindEcoCycle", "::", "cvmit"}], ",", 
               "maxiterations"}], "]"}]}], "]"}], ";", "\n", "\t\t", "\n", 
           "\t", 
           RowBox[{"Return", "[", "sol", "]"}], ";"}]}], "\n", "]"}], ";", 
        "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "\"\<FixedPoint\>\"", " ", "or", " ", "\"\<FindRoot\>\"", " ", 
          "method"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], "&&", 
            RowBox[{"modelperiod", "\[Equal]", "0"}]}], ")"}], ",", "\n", 
          "\t", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"unks", ",", "per"}], "]"}], ";", "\n", "\t", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"unksics", ",", 
             RowBox[{"{", 
              RowBox[{"per", ",", "period"}], "}"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"ics", ",", "period"}], "]"}], ";"}], "\n", ",", "\n", 
          "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"period", "===", "Automatic"}], ",", 
             RowBox[{"per", "=", "modelperiod"}], ",", 
             RowBox[{"per", "=", "period"}]}], "]"}], ";"}]}], "\n", "]"}], 
        ";", "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<unks=\>\"", ",", "unks"}], "]"}], ";", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<unksics=\>\"", ",", "unksics"}], "]"}], ";", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<ics=\>\"", ",", "ics"}], "]"}], ";"}], "*)"}], "\n", 
        "\n", 
        RowBox[{"If", "[", 
         RowBox[{"monitor", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"nb", "=", 
            RowBox[{"CreateWindow", "[", 
             RowBox[{"DialogNotebook", "[", 
              RowBox[{
               RowBox[{"{", "\n", "\t", 
                RowBox[{
                 RowBox[{"TextCell", "[", "\"\<evaluation: \>\"", "]"}], ",", 
                 "\n", "\t", 
                 RowBox[{"Dynamic", "[", "$findecocyclesteps", "]"}], ",", 
                 "\n", "\t", 
                 RowBox[{"TextCell", "[", "\"\<vars:\>\"", "]"}], ",", "\n", 
                 "\t", 
                 RowBox[{"Dynamic", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"eq", "[", "var", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"var", ",", "nonfixedvars"}], "}"}]}], "]"}], 
                  "]"}]}], "\n", "\t", "}"}], ",", "\n", "\t", 
               RowBox[{
               "WindowTitle", "\[Rule]", 
                "\"\<FindEcoCycle Progress...\>\""}]}], "]"}], "]"}]}], 
           ";"}]}], "\n", "]"}], ";", "\n", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"function", " ", "to", " ", "advance", " ", "model"}], " ", 
         "*)"}], "\n", "\n", 
        RowBox[{
         RowBox[{"thing", "[", 
          RowBox[{"ps_", "?", "NumericListQ"}], "]"}], ":=", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"popz", ",", "rez"}], "}"}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{"$findecocyclesteps", "++"}], ";", "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], "&&", 
                RowBox[{"modelperiod", "\[Equal]", "0"}]}], ")"}], ",", 
              RowBox[{"tmax", "=", 
               RowBox[{"ps", "\[LeftDoubleBracket]", 
                RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
              RowBox[{"tmax", "=", "per"}]}], "]"}], ";", "\n", "\t", 
            RowBox[{"popz", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                 "logd", "\[LeftDoubleBracket]", "i", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                  RowBox[{
                  "nonfixedvars", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}], "\[Rule]", 
                  RowBox[{"E", "^", 
                   RowBox[{
                   "ps", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}]}], ",", 
                 RowBox[{
                  RowBox[{
                  "nonfixedvars", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}], "\[Rule]", 
                  RowBox[{
                  "ps", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}]}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"Length", "[", "nonfixedvars", "]"}]}], "}"}]}], 
              "]"}]}], ";", "\n", "\t", 
            RowBox[{"sol", "=", 
             RowBox[{"EcoSim", "[", 
              RowBox[{"traits", ",", "popz", ",", "tmax", ",", 
               RowBox[{"Fixed", "\[Rule]", "fixed"}], ",", 
               RowBox[{"Evaluate", "[", 
                RowBox[{"Sequence", "@@", "ecosimopts"}], "]"}], ",", 
               RowBox[{"Logged", "\[Rule]", "logged"}]}], "]"}]}], ";", "\n", 
            "\t", 
            RowBox[{"rez", "=", 
             RowBox[{"vars", "/.", 
              RowBox[{"FinalSlice", "[", "sol", "]"}]}]}], ";", "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], "&&", 
                RowBox[{"modelperiod", "\[Equal]", "0"}]}], ")"}], ",", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"rez", ",", 
                RowBox[{"ps", "\[LeftDoubleBracket]", 
                 RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
             "]"}], ";", "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{"printtrace", ",", 
              RowBox[{"Print", "[", 
               RowBox[{"$findecocyclesteps", ",", "\"\<: \>\"", ",", 
                RowBox[{"FinalSlice", "[", "sol", "]"}]}], "]"}]}], "]"}], 
            ";", "\n", "\t", 
            RowBox[{"Return", "[", "rez", "]"}], ";"}]}], "\n", "]"}]}], ";", 
        "\n", "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"method", "\[Equal]", "\"\<FindRoot\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"Global`debug", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: Method FindRoot\>\""}], "]"}]}], 
            "]"}], ";", "\n", "\t", 
           RowBox[{"res", "=", 
            RowBox[{"FindRoot", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"thing", "[", "unks", "]"}], "\[Equal]", "unks"}], ",",
               "unksics", ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "findrootopts"}], "]"}]}], "]"}]}]}],
           "\n", ",", "\n", "\t", 
          RowBox[{"method", "\[Equal]", "\"\<FixedPoint\>\""}], ",", "\n", 
          "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"Global`debug", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: Method FixedPoint\>\""}], "]"}]}], 
            "]"}], ";", "\n", "\t", 
           RowBox[{"res", "=", 
            RowBox[{"FixedPoint", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"thing", "[", "#", "]"}], "&"}], ",", "ics", ",", 
              "maxiterations", ",", 
              RowBox[{"SameTest", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Max", "[", 
                   RowBox[{"Abs", "[", 
                    RowBox[{"#1", "-", "#2"}], "]"}], "]"}], "<", 
                  RowBox[{"10", "^", 
                   RowBox[{"-", "accuracygoal"}]}]}], "&"}], ")"}]}]}], 
             "]"}]}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"$findecocyclesteps", "\[Equal]", "maxiterations"}], ",", 
             RowBox[{
              RowBox[{"Msg", "[", 
               RowBox[{
                RowBox[{"FindEcoCycle", "::", "cvmit"}], ",", 
                "maxiterations"}], "]"}], ";", 
              RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}]}], "\n", ",",
           "\n", "\t", "Else", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Msg", "[", 
            RowBox[{"FindEcoCycle", "::", "badmtd"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "\n", "]"}], ";", 
        "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], ",", 
          RowBox[{"(*", " ", 
           RowBox[{"drop", " ", "last", " ", "point"}], " ", "*)"}], "\n", 
          "\t", 
          RowBox[{"sol", "=", 
           RowBox[{"ReplaceAll", "[", 
            RowBox[{"sol", ",", "\n", "\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"var_", "\[Rule]", "td_List"}], ")"}], 
                "\[RuleDelayed]", 
                RowBox[{"(", 
                 RowBox[{"var", "\[Rule]", 
                  RowBox[{"Drop", "[", 
                   RowBox[{"td", ",", 
                    RowBox[{"-", "1"}]}], "]"}]}], ")"}]}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"var_", "\[Rule]", "td_TemporalData"}], ")"}], 
                "\[Rule]", 
                RowBox[{"(", 
                 RowBox[{"var", "\[Rule]", 
                  RowBox[{"TimeSeriesWindow", "[", 
                   RowBox[{"td", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"per", "-", "1"}]}], "}"}]}], "]"}]}], ")"}]}]}], 
              "}"}]}], "]"}]}]}], "\n", "]"}], ";", "\n", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"return", " ", "answer"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"monitor", ",", 
          RowBox[{"NotebookClose", "[", "nb", "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"Return", "[", 
         RowBox[{"Sort", "[", "sol", "]"}], "]"}], ";"}]}], "\n", "\n", 
      "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.688409483427692*^9, 3.688409483490201*^9}, {
   3.688571685544544*^9, 3.688571686031192*^9}, {3.688571757730043*^9, 
   3.688571758684969*^9}, {3.688571805656735*^9, 3.6885718057457237`*^9}, {
   3.688573243511567*^9, 3.688573312726746*^9}, {3.68857334951993*^9, 
   3.68857337143581*^9}, {3.688573418402585*^9, 3.688573424323292*^9}, {
   3.6885735992431517`*^9, 3.6885736033795643`*^9}, {3.688585460061479*^9, 
   3.688585629881029*^9}, {3.688597927452478*^9, 3.688597943713161*^9}, {
   3.68863731764954*^9, 3.6886373193347473`*^9}, 3.6938697174565372`*^9, {
   3.696151024461401*^9, 3.6961510245436087`*^9}, {3.6962556610345163`*^9, 
   3.696255701056315*^9}, {3.696256002043228*^9, 3.6962560026903563`*^9}, {
   3.6965516619211607`*^9, 3.696551674716996*^9}, {3.696586957365073*^9, 
   3.696586963772579*^9}, 3.6965894825591593`*^9, {3.70050015501549*^9, 
   3.700500202416216*^9}, {3.700500338449073*^9, 3.700500344743586*^9}, 
   3.70050065600744*^9, {3.708837355657104*^9, 3.708837356866313*^9}, 
   3.7088374153957148`*^9, {3.708838248905143*^9, 3.7088382503096943`*^9}, {
   3.709336736257268*^9, 3.709336736605093*^9}, {3.710105958092224*^9, 
   3.7101059596767607`*^9}, 3.710240067919877*^9, 3.710240498114812*^9, {
   3.710254525253208*^9, 3.7102545299975367`*^9}, {3.710254561219561*^9, 
   3.710254577259325*^9}, {3.710264970573503*^9, 3.710264981942604*^9}, {
   3.710324441544318*^9, 3.710324444184022*^9}, 3.712738534709543*^9, 
   3.716472208152829*^9, 3.7164722624616127`*^9, {3.7164724298837852`*^9, 
   3.716472571120632*^9}, {3.716472614943459*^9, 3.716472688644197*^9}, {
   3.716472761738646*^9, 3.716472763571691*^9}, 3.7164744204127893`*^9, {
   3.716474603689702*^9, 3.716474654489892*^9}, {3.716474707125437*^9, 
   3.716474707234383*^9}, {3.7164747583618937`*^9, 3.7164747730060253`*^9}, {
   3.7164748155567713`*^9, 3.716474828179364*^9}, {3.716474859867209*^9, 
   3.716474889995832*^9}, {3.716476287763636*^9, 3.716476298528805*^9}, {
   3.716476425366591*^9, 3.716476426275856*^9}, {3.7164768230822372`*^9, 
   3.7164768256755333`*^9}, {3.716477654758424*^9, 3.7164776586398907`*^9}, {
   3.71647770527969*^9, 3.7164777084613457`*^9}, {3.7164779878770247`*^9, 
   3.7164779989952393`*^9}, {3.716478031682006*^9, 3.716478035703961*^9}, {
   3.716478091708843*^9, 3.716478126262333*^9}, {3.716478355503602*^9, 
   3.716478360686537*^9}, {3.716478822133511*^9, 3.7164788330819674`*^9}, {
   3.7164788762715816`*^9, 3.7164788821884623`*^9}, {3.716478941340193*^9, 
   3.7164789483120728`*^9}, 3.716479009464747*^9, {3.716479062699312*^9, 
   3.716479065386785*^9}, 3.716479196905719*^9, {3.716479340621706*^9, 
   3.716479348952406*^9}, {3.716479558153141*^9, 3.716479575617988*^9}, {
   3.716479789326672*^9, 3.7164798074204073`*^9}, {3.7164798675011797`*^9, 
   3.7164798923879623`*^9}, {3.716479999782887*^9, 3.716480026858794*^9}, {
   3.7164800612162447`*^9, 3.7164802246480913`*^9}, {3.71648026038514*^9, 
   3.716480260529643*^9}, {3.7164803384350243`*^9, 3.716480355366371*^9}, {
   3.7164807448049717`*^9, 3.716480783011972*^9}, {3.716480889919169*^9, 
   3.7164809079139233`*^9}, {3.716485301687406*^9, 3.716485359710446*^9}, {
   3.716485422246792*^9, 3.7164854536373377`*^9}, {3.716485510520035*^9, 
   3.716485528757742*^9}, 3.716485570554076*^9, {3.71648565390683*^9, 
   3.7164856642171164`*^9}, {3.7164857701308002`*^9, 3.7164857778086*^9}, {
   3.7164858479209547`*^9, 3.7164858490503283`*^9}, {3.71648596397782*^9, 
   3.716486060481572*^9}, {3.716486097329486*^9, 3.716486185829164*^9}, {
   3.716486252501725*^9, 3.7164862793123217`*^9}, {3.716486394673814*^9, 
   3.716486405871784*^9}, {3.716486509398635*^9, 3.7164865211678267`*^9}, {
   3.716486557912966*^9, 3.716486572854937*^9}, {3.716486646500461*^9, 
   3.716486673891675*^9}, {3.716495052408255*^9, 3.716495068695197*^9}, {
   3.71649520600565*^9, 3.7164952109426003`*^9}, {3.716499623610242*^9, 
   3.7164996626348953`*^9}, {3.716500194677726*^9, 3.716500218487688*^9}, {
   3.716500248816063*^9, 3.71650026181703*^9}, {3.716500359672822*^9, 
   3.716500417829282*^9}, {3.71650045880527*^9, 3.716500504453225*^9}, {
   3.716500855206152*^9, 3.716500915667695*^9}, {3.716501057774756*^9, 
   3.7165011005487823`*^9}, {3.7165011317607737`*^9, 3.716501370504352*^9}, {
   3.7165014111926727`*^9, 3.716501422853217*^9}, 3.716501544008366*^9, 
   3.716501574576253*^9, {3.7165016054427834`*^9, 3.716501626140924*^9}, {
   3.716501665261179*^9, 3.716501728016232*^9}, 3.716501925461729*^9, {
   3.716501960898007*^9, 3.716502055820415*^9}, {3.716502271547961*^9, 
   3.716502285082958*^9}, {3.716502429648761*^9, 3.7165024362029552`*^9}, {
   3.7165026805243597`*^9, 3.716502686120676*^9}, {3.716502798398934*^9, 
   3.716502861761696*^9}, {3.716502932166183*^9, 3.71650305229525*^9}, {
   3.716503187226605*^9, 3.716503216730995*^9}, {3.7165033124247017`*^9, 
   3.716503378259006*^9}, {3.7165035245858603`*^9, 3.716503560673163*^9}, {
   3.716504326875655*^9, 3.716504329651046*^9}, {3.716504377851956*^9, 
   3.7165043780904493`*^9}, {3.716508606145426*^9, 3.7165086104766197`*^9}, {
   3.716508702516472*^9, 3.716508704311409*^9}, {3.716508847932372*^9, 
   3.7165088816720877`*^9}, {3.716508916676153*^9, 3.716508919757874*^9}, {
   3.7165090562682734`*^9, 3.716509059413908*^9}, {3.716509098846401*^9, 
   3.7165091014293327`*^9}, 3.71650933878131*^9, {3.7165474936071873`*^9, 
   3.716547498965281*^9}, {3.716547637761294*^9, 3.716547641862523*^9}, {
   3.716547674231841*^9, 3.716547710047244*^9}, {3.716547877739072*^9, 
   3.716547890057181*^9}, {3.716548016299821*^9, 3.716548090626136*^9}, 
   3.716548137981988*^9, 3.716548438116997*^9, {3.716548587440889*^9, 
   3.7165485911896963`*^9}, {3.7165688197787447`*^9, 3.716568874942706*^9}, {
   3.716593677544931*^9, 3.7165936901442013`*^9}, {3.716593898717751*^9, 
   3.716593934245953*^9}, {3.716653785742721*^9, 3.716653801073248*^9}, 
   3.716932434458931*^9, 3.7170735728694553`*^9, 3.717073603132843*^9, {
   3.7182972022570333`*^9, 3.718297227881751*^9}, {3.718297356680283*^9, 
   3.718297357869113*^9}, {3.721849222862669*^9, 3.721849243403112*^9}, {
   3.7218494180722847`*^9, 3.721849422944262*^9}, 3.721849615598837*^9, {
   3.722083847427064*^9, 3.722083857989962*^9}, {3.7220838971718493`*^9, 
   3.722083934145179*^9}, {3.7251409580049458`*^9, 3.7251409580287323`*^9}, {
   3.725141105186304*^9, 3.725141107196693*^9}, {3.7251411525703707`*^9, 
   3.725141156097621*^9}, {3.725141287782205*^9, 3.7251413003525248`*^9}, 
   3.72514136689001*^9, {3.725141965241803*^9, 3.725141965252255*^9}, {
   3.7284814555135508`*^9, 3.72848146402463*^9}, 3.728481719584621*^9, {
   3.732569328557575*^9, 3.732569329748412*^9}, 3.732570110087345*^9, {
   3.75581757865484*^9, 3.755817600257896*^9}, {3.759250865216872*^9, 
   3.759250868624638*^9}},ExpressionUUID->"7445cea4-3b31-43e0-a523-\
f854f7f9d6dd"],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",ExpressionUUID->"c11267d6-928a-43dc-a02b-2949ca4de677"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "FindEcoCycle", "]"}], "=", 
   RowBox[{"{", "\n", 
    RowBox[{
     RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"FindRootOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"EcoSimOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"MaxIterations", "\[Rule]", "100"}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "6"}], ",", 
     RowBox[{"Logged", "\[Rule]", "False"}], ",", "\n", 
     RowBox[{"WarmUp", "\[Rule]", "1000"}], ",", 
     RowBox[{"WarmUp2", "\[Rule]", "100"}], ",", 
     RowBox[{"WarmUp3", "\[Rule]", "0.1"}], ",", 
     RowBox[{"TMax", "\[Rule]", "1000"}], ",", 
     RowBox[{"TriggerVariable", "\[Rule]", "Automatic"}], ",", "\n", 
     RowBox[{"WhenEventOpts", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "\"\<DetectionMethod\>\"", "\[Rule]", "\"\<Interpolation\>\""}], ",", 
         RowBox[{"\"\<LocationMethod\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Brent\>\"", ",", 
            RowBox[{"MaxIterations", "\[Rule]", "1000"}]}], "}"}]}]}], "*)"}],
        "}"}]}], ",", "\n", 
     RowBox[{"Period", "\[Rule]", "Automatic"}], ",", "\n", 
     RowBox[{"Monitor", "\[Rule]", "False"}], ",", 
     RowBox[{"PrintTrace", "\[Rule]", "False"}], ",", "\n", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "\n", "}"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.688409483544231*^9, 3.688409483568293*^9}, {
   3.688571686048111*^9, 3.688571686270155*^9}, 3.6961510245513983`*^9, 
   3.696152188485263*^9, {3.71650305862817*^9, 3.716503061135914*^9}, {
   3.716566082755247*^9, 3.716566095505053*^9}, 3.716567447863162*^9, 
   3.716932434467297*^9, {3.7251409580326767`*^9, 3.725140958040324*^9}},
 CellLabel->
  "In[522]:=",ExpressionUUID->"ddbe9aad-cd4f-4eaf-9337-c1fefe14838a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",
 CellChangeTimes->{{3.711393393182457*^9, 
  3.711393394780916*^9}},ExpressionUUID->"a254fa1e-8ba2-4534-baaf-\
c338d31398f8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindEcoCycle", "[", 
    RowBox[{
     RowBox[{"traitsandvariables_", "?", "TraitsAndVariablesQ"}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", 
   RowBox[{"FindEcoCycle", "[", 
    RowBox[{
     RowBox[{"ExtractTraits", "[", "traitsandvariables", "]"}], ",", 
     RowBox[{"ExtractVariables", "[", "traitsandvariables", "]"}], ",", 
     "opts"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.711393447780406*^9, 3.711393472787424*^9}, {
   3.711393628680678*^9, 3.711393657770349*^9}, 3.711393706399166*^9, {
   3.712738534718267*^9, 3.712738534721871*^9}, {3.712740223692176*^9, 
   3.712740223700193*^9}},
 CellLabel->
  "In[523]:=",ExpressionUUID->"c96b4aae-b707-46ba-bfbc-b81b8a83a229"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["SelectValid", "Subsection",
 CellDingbat->
  "\[ClubSuit]",ExpressionUUID->"e548414e-b65a-4e0c-86e9-d42291e285f8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SelectValid", "[", 
    RowBox[{"sol", ":", 
     RowBox[{"(", 
      RowBox[{"_", "?", "RuleListListQ"}], ")"}], ":", 
     RowBox[{"{", "}"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "res", "}"}], ",", "\n", "\n", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
        RowBox[{
         RowBox[{"Msg", "[", 
          RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
         RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", "\n", 
      
      RowBox[{"res", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"Do", "[", "\n", "\t", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"CompoundAnd", "[", 
           RowBox[{"Flatten", "@", 
            RowBox[{"Table", "[", "\n", "\t\t", 
             RowBox[{
              RowBox[{"Which", "[", "\n", "\t\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{"Head", "[", 
                  RowBox[{
                  "el", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}], "]"}], "===", "TemporalData"}], 
                ",", "\n", "\t\t\t", 
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"IntervalMemberQ", "[", 
                    RowBox[{
                    RowBox[{"range", "[", 
                    RowBox[{
                    "el", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}], ",", "#"}], "]"}], 
                   "&"}], ",", 
                  RowBox[{
                   RowBox[{"Normal", "[", 
                    RowBox[{
                    "el", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "]"}], "\[LeftDoubleBracket]", 
                   
                   RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], 
                 "]"}], ",", "\n", "\t\t\t", "Else", ",", "\n", "\t\t\t", 
                RowBox[{"IntervalMemberQ", "[", 
                 RowBox[{
                  RowBox[{"range", "[", 
                   RowBox[{
                   "el", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}], ",", 
                  RowBox[{
                  "el", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}]}], "]"}]}], "\n", "\t\t", "]"}], 
              "\n", "\t", ",", 
              RowBox[{"{", 
               RowBox[{"el", ",", "eq"}], "}"}]}], "]"}]}], "]"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"res", ",", "eq"}], "]"}]}], "]"}], "\n", ",", 
        RowBox[{"{", 
         RowBox[{"eq", ",", "sol"}], "}"}]}], "]"}], ";", "\n", "\n", 
      RowBox[{"Return", "[", "res", "]"}]}]}], "\n", "\n", "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.688571758711397*^9, 3.688571758779146*^9}, {
   3.688571805769764*^9, 3.688571805808754*^9}, {3.688596296305945*^9, 
   3.688596343803912*^9}, {3.688596388163796*^9, 3.688596391457307*^9}, {
   3.688597080025927*^9, 3.688597118394058*^9}, {3.688597156493305*^9, 
   3.688597170073834*^9}, {3.688597238786375*^9, 3.688597248193912*^9}, {
   3.688597279227922*^9, 3.688597283595931*^9}, {3.6885973417880793`*^9, 
   3.688597538588483*^9}, {3.68859761503491*^9, 3.688597700634725*^9}, {
   3.709336743303987*^9, 3.709336744416458*^9}, 3.71010596051061*^9, 
   3.712738534731523*^9, {3.7151242794038773`*^9, 3.7151242803430853`*^9}, {
   3.715124614918346*^9, 3.715124615444268*^9}, {3.71512473562722*^9, 
   3.715124833268942*^9}, {3.715125959879683*^9, 3.7151259993498287`*^9}, {
   3.7151260953360443`*^9, 3.7151261036884527`*^9}, {3.715162545499557*^9, 
   3.715162545637548*^9}, {3.715255472125362*^9, 3.715255512523314*^9}, {
   3.71525559188104*^9, 3.715255596839315*^9}, {3.715256213190209*^9, 
   3.715256267065208*^9}, {3.715256510607285*^9, 3.715256613136565*^9}, {
   3.715256648824877*^9, 3.715256708610546*^9}, {3.715256848267054*^9, 
   3.7152568731900063`*^9}, {3.715256963561351*^9, 3.715256996800877*^9}, {
   3.715257778715033*^9, 3.715257784803192*^9}, {3.7152578339186077`*^9, 
   3.715257867523587*^9}, {3.715556865281728*^9, 3.715556877066525*^9}, {
   3.715556922488647*^9, 3.715556934795897*^9}, {3.715557054045401*^9, 
   3.715557058557568*^9}, {3.7155571165792522`*^9, 3.715557165087747*^9}},
 CellLabel->
  "In[524]:=",ExpressionUUID->"fd33ce88-c5ed-42a4-862c-886b334532b0"]
}, Closed]],

Cell[CellGroupData[{

Cell["EcoJacobian", "Subsection",
 CellDingbat->
  "\[ClubSuit]",ExpressionUUID->"61f27e60-5470-4d35-9d95-187aa2ff31c5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"make", " ", "listable", " ", "across", " ", "pops"}], " ", "*)"}],
   "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"EcoJacobian", "[", 
     RowBox[{
      RowBox[{"traits", ":", 
       RowBox[{"(", 
        RowBox[{"_", "?", "TraitsQ"}], ")"}], ":", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"pops_", "?", "ListOfVariablesQ"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"EcoJacobian", "[", 
        RowBox[{"traits", ",", "#", ",", "opts"}], "]"}], "&"}], "/@", 
      "pops"}], ")"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.715424827153945*^9, 3.715424831022787*^9}, {
  3.715425215204941*^9, 3.715425235563982*^9}},
 CellLabel->
  "In[525]:=",ExpressionUUID->"bc8d17b8-2ecf-49bd-85fc-4e3c9b636f3e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoJacobian", "[", 
    RowBox[{
     RowBox[{"traitsin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "TraitsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"pops", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<EcoJacobian\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "time", ",", "fixed", 
       ",", "verbose", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "traits", ",",
        "fixedvars", ",", "nonfixedvars", ",", "eqns", ",", "unks", ",", 
       "jmat"}], "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "Nsp", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Msg", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"fixed", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Fixed", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoJacobian", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"time", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Time", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoJacobian", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoJacobian", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"traits", "=", 
         RowBox[{"ExpandNspInTraits", "[", "traitsin", "]"}]}], ";", "\n", 
        RowBox[{"SetNsp", "[", "traits", "]"}], ";", "\n", "\n", 
        RowBox[{"fixedvars", "=", 
         RowBox[{"fixed", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        RowBox[{"nonfixedvars", "=", 
         RowBox[{"orderedComplement", "[", 
          RowBox[{"AllVariables", ",", "fixedvars"}], "]"}]}], ";", "\n", 
        "\n", 
        RowBox[{"eqns", "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"EcoEqns", "[", 
             RowBox[{"BlankTraits", ",", "opts"}], "]"}], "/.", "RHS"}], "/.",
            "RemovePopts"}], "/.", 
          RowBox[{"t", "\[Rule]", "time"}]}]}], ";", "\n", 
        RowBox[{"unks", "=", "nonfixedvars"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: eqns=\>\""}], "]"}], ";", "\n", "\t", 
           
           RowBox[{"Print", "[", "eqns", "]"}], ";", "\n", "\t", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: unks=\>\""}], "]"}], ";", "\n", "\t", 
           
           RowBox[{"Print", "[", "unks", "]"}], ";"}]}], "\n", "]"}], ";", 
        "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"set", " ", "up", " ", "jacobian"}], " ", "*)"}], "\n", 
        RowBox[{"jmat", "=", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"eqns", "/.", "traits"}], ",", 
           RowBox[{"{", "unks", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: jmat=\>\"", ",", "jmat"}], "]"}]}], 
         "]"}], ";", "\n", "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{"(*", " ", 
          RowBox[{"DiscreteTime", " ", "cycle"}], " ", "*)"}], "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"pops", "\[NotEqual]", 
            RowBox[{"{", "}"}]}], "&&", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"pops", "\[LeftDoubleBracket]", 
               RowBox[{"1", ",", "2", ",", "0"}], "\[RightDoubleBracket]"}], "===",
               "TemporalData"}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], "&&", 
               RowBox[{"modelperiod", "=!=", "0"}]}], ")"}]}], ")"}], "&&", 
           RowBox[{"time", "===", "t"}]}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Return", "[", 
            RowBox[{"TD", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"t\[Prime]", ",", 
                  RowBox[{
                   RowBox[{"jmat", "/.", "AddPopts"}], "/.", 
                   RowBox[{"t", "\[Rule]", "t\[Prime]"}]}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"t\[Prime]", ",", 
                  RowBox[{
                   RowBox[{"pops", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "[", 
                   "\"\<Times\>\"", "]"}]}], "}"}]}], "]"}], "/.", "pops"}], 
             "]"}], "]"}], ";"}], "\n", ",", "\n", "\t", 
          RowBox[{"(*", " ", 
           RowBox[{"ContinuousTime", " ", "cycle"}], " ", "*)"}], "\n", "\t", 
          
          RowBox[{
           RowBox[{"pops", "\[NotEqual]", 
            RowBox[{"{", "}"}]}], "&&", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"pops", "\[LeftDoubleBracket]", 
               RowBox[{"1", ",", "2", ",", "0"}], "\[RightDoubleBracket]"}], "===",
               "InterpolatingFunction"}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], "&&", 
               RowBox[{"modelperiod", "=!=", "0"}]}], ")"}]}], ")"}], "&&", 
           RowBox[{"time", "===", "t"}]}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Return", "[", 
            RowBox[{
             RowBox[{"jmat", "/.", "AddPopts"}], "/.", "pops"}], "]"}], ";"}],
           "\n", ",", "\n", "\t", 
          RowBox[{"(*", " ", 
           RowBox[{
           "ContinuousTime", " ", "or", " ", "DiscreteTime", " ", 
            "equilibrium"}], " ", "*)"}], "\n", "\t", "Else", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"time", "===", "t"}], ",", "\n", "\t\t", 
             RowBox[{"Return", "[", 
              RowBox[{"jmat", "/.", "pops"}], "]"}], ",", "\n", "\t\t", 
             RowBox[{"Return", "[", 
              RowBox[{"jmat", "/.", 
               RowBox[{"Slice", "[", 
                RowBox[{"pops", ",", "time"}], "]"}]}], "]"}]}], "\n", "\t", 
            "]"}], ";"}]}], "\n", "]"}], ";"}]}], "\n", "\n", "]"}]}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.685713471667655*^9, 3.685713471953993*^9}, {
   3.685715172269215*^9, 3.685715180225237*^9}, {3.685715275436626*^9, 
   3.685715288042203*^9}, {3.685720043110549*^9, 3.685720043699584*^9}, 
   3.685727814948381*^9, {3.685919068540296*^9, 3.685919071074188*^9}, {
   3.685919495275399*^9, 3.685919510214314*^9}, {3.6878814511239223`*^9, 
   3.6878814514840813`*^9}, {3.68857168631444*^9, 3.688571686418085*^9}, {
   3.688571758808372*^9, 3.688571758977655*^9}, {3.688571805836503*^9, 
   3.688571805906938*^9}, {3.688597747830966*^9, 3.688597751716827*^9}, {
   3.6885979680467863`*^9, 3.688597986884429*^9}, {3.688598027110915*^9, 
   3.688598048728488*^9}, {3.6961148154182053`*^9, 3.6961148447702312`*^9}, {
   3.709336751999728*^9, 3.709336752901269*^9}, 3.710105961178062*^9, {
   3.712779673043494*^9, 3.7127796738548117`*^9}, {3.712779816576673*^9, 
   3.712779842015938*^9}, 3.712785819940733*^9, {3.715365128204183*^9, 
   3.715365137231598*^9}, {3.715367051751781*^9, 3.7153670695142727`*^9}, {
   3.715367135448979*^9, 3.715367136695031*^9}, {3.715385827773836*^9, 
   3.715385838262583*^9}, {3.715385904406534*^9, 3.715385912427199*^9}, {
   3.715385952628813*^9, 3.7153859710160847`*^9}, {3.715386110544334*^9, 
   3.715386147858574*^9}, {3.71542288958562*^9, 3.7154228931085863`*^9}, {
   3.7154231475090857`*^9, 3.715423171912822*^9}, {3.71673856635833*^9, 
   3.716738581883312*^9}, {3.716853578431396*^9, 3.7168535890239077`*^9}, {
   3.7168537616233263`*^9, 3.716853785719054*^9}, {3.721849261808951*^9, 
   3.721849273017808*^9}, {3.7218494065763073`*^9, 3.7218494108899603`*^9}, 
   3.721849597115556*^9, {3.722083967658794*^9, 3.722083969435639*^9}, {
   3.7220841017746887`*^9, 3.72208410322605*^9}, 3.731979949446031*^9, {
   3.731981097236431*^9, 3.7319811129938383`*^9}, {3.7319811450091333`*^9, 
   3.73198117999973*^9}, {3.7319812559727592`*^9, 3.731981314927001*^9}, {
   3.732015116553176*^9, 3.73201512718889*^9}, 3.732016302108934*^9, {
   3.732016383605422*^9, 3.732016389979628*^9}, {3.732048239407701*^9, 
   3.73204823996686*^9}, 3.7320486771074123`*^9, {3.732049294363253*^9, 
   3.732049296593276*^9}, {3.7320493464220037`*^9, 3.732049359178586*^9}, {
   3.7320494024047422`*^9, 3.732049403766077*^9}, 3.732273413515592*^9, 
   3.732568565652829*^9, 3.7325687346541033`*^9, {3.7325689429536753`*^9, 
   3.732568948290044*^9}},
 CellLabel->
  "In[526]:=",ExpressionUUID->"d1306c71-01de-4685-adb5-ab976ac23085"],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",ExpressionUUID->"b8267323-31b7-4ad3-a956-9c90c0fd6ce8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoJacobian", "[", 
    RowBox[{"traitsandpops_List", ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
   RowBox[{"EcoJacobian", "[", 
    RowBox[{
     RowBox[{"ExtractTraits", "[", "traitsandpops", "]"}], ",", 
     RowBox[{"ExtractVariables", "[", "traitsandpops", "]"}], ",", "opts"}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7127802306821003`*^9, 3.71278023163732*^9}},
 CellLabel->
  "In[527]:=",ExpressionUUID->"7ecda5a8-9a28-4295-b2ac-83b4920777f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",ExpressionUUID->"4ba194f8-672a-4c9b-93ec-ef7df33652c7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "EcoJacobian", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}], ",", 
     RowBox[{"Time", "\[Rule]", "t"}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.687881451527573*^9, {3.688571686440872*^9, 3.688571686460191*^9}, {
   3.731981321233385*^9, 3.731981331551909*^9}},
 CellLabel->
  "In[528]:=",ExpressionUUID->"49bfa0f1-9a9b-4b78-9f14-f69fcf19399f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["EcoEigenvalues", "Subsection",
 CellDingbat->
  "\[ClubSuit]",ExpressionUUID->"c79e308e-9678-4528-a0cf-1de5b0c05510"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"make", " ", "listable", " ", "across", " ", "pops"}], " ", "*)"}],
   "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"EcoEigenvalues", "[", 
     RowBox[{
      RowBox[{"traits", ":", 
       RowBox[{"(", 
        RowBox[{"_", "?", "TraitsQ"}], ")"}], ":", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"pops_", "?", "ListOfVariablesQ"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"EcoEigenvalues", "[", 
        RowBox[{"traits", ",", "#", ",", "opts"}], "]"}], "&"}], "/@", 
      "pops"}], ")"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.712783575459276*^9, 3.712783578387623*^9}, {
  3.712784863746928*^9, 3.712784884390826*^9}, {3.7127851579743443`*^9, 
  3.7127851624968*^9}, {3.7127851955597887`*^9, 3.71278523736482*^9}, {
  3.712785705862076*^9, 3.712785711703575*^9}, {3.712833606594955*^9, 
  3.712833614050643*^9}},
 CellLabel->
  "In[529]:=",ExpressionUUID->"4f28d588-44e1-4df0-97c9-d4459181c2d6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoEigenvalues", "[", 
    RowBox[{
     RowBox[{"traits", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "TraitsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"pops", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<EcoEigenvalues\>\"", "]"}]}], ",", 
       "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "chop", ",", "time", ",", "ndsolveopts", ",", "multipliers", ",", "j", 
       ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "dim", ",", 
       "per", ",", "xsol", ",", "res"}], "}"}], ",", "\n", "\n", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
        RowBox[{
         RowBox[{"Msg", "[", 
          RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
         RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
      RowBox[{"If", "[", 
       RowBox[{"Global`debug", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
      "\n", 
      RowBox[{"verbose", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Verbose", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoEigenvalues", "]"}]}], "}"}], "]"}]}],
         "]"}]}], ";", "\n", 
      RowBox[{"chop", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Chop", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoEigenvalues", "]"}]}], "}"}], "]"}]}],
         "]"}]}], ";", "\n", 
      RowBox[{"time", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Time", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoEigenvalues", "]"}]}], "}"}], "]"}]}],
         "]"}]}], ";", "\n", 
      RowBox[{"ndsolveopts", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"NDSolveOpts", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoEigenvalues", "]"}]}], "}"}], "]"}]}],
         "]"}]}], ";", "\n", 
      RowBox[{"multipliers", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Multipliers", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoEigenvalues", "]"}]}], "}"}], "]"}]}],
         "]"}]}], ";", "\n", "\n", 
      RowBox[{"j", "=", 
       RowBox[{"EcoJacobian", "[", 
        RowBox[{"traits", ",", "pops", ",", 
         RowBox[{"Time", "\[Rule]", "time"}]}], "]"}]}], ";", "\n", 
      RowBox[{"If", "[", 
       RowBox[{"verbose", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"func", ",", "\"\<: Jacobian=\>\"", ",", "j"}], "]"}]}], 
       "]"}], ";", "\n", "\n", 
      RowBox[{"Which", "[", "\n", "\t", 
       RowBox[{"(*", " ", 
        RowBox[{"DiscreteTime", " ", "cycle"}], " ", "*)"}], "\n", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"pops", "\[NotEqual]", 
          RowBox[{"{", "}"}]}], "&&", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"pops", "\[LeftDoubleBracket]", 
               RowBox[{"1", ",", "2", ",", "0"}], "\[RightDoubleBracket]"}], "===",
               "TemporalData"}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], "&&", 
               RowBox[{"modelperiod", "=!=", "0"}]}], ")"}]}], ")"}], "&&", 
           RowBox[{"time", "===", "t"}]}], ")"}]}], ",", "\n", "\t", 
        RowBox[{"res", "=", 
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"listMultiplier", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"j", "[", "t\[Prime]", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"t\[Prime]", ",", 
               RowBox[{"j", "[", "\"\<Times\>\"", "]"}]}], "}"}]}], "]"}], 
           "]"}], "]"}]}], "\n", ",", "\n", "\t", 
        RowBox[{"(*", " ", 
         RowBox[{"ContinousTime", " ", "cycle"}], " ", "*)"}], "\n", "\t", 
        RowBox[{
         RowBox[{"pops", "\[NotEqual]", 
          RowBox[{"{", "}"}]}], "&&", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"pops", "\[LeftDoubleBracket]", 
               RowBox[{"1", ",", "2", ",", "0"}], "\[RightDoubleBracket]"}], "===",
               "InterpolatingFunction"}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"modeltype", "\[Equal]", "\"\<ContinousTime\>\""}], "&&", 
               RowBox[{"modelperiod", "=!=", "0"}]}], ")"}]}], ")"}], "&&", 
           RowBox[{"time", "===", "t"}]}], ")"}]}], ",", "\n", "\t", 
        RowBox[{
         RowBox[{"dim", "=", 
          RowBox[{"Length", "[", "j", "]"}]}], ";", "\n", "\t", 
         RowBox[{"per", "=", 
          RowBox[{"FinalTime", "[", "pops", "]"}]}], ";", "\n", "\t", 
         RowBox[{"xsol", "=", 
          RowBox[{
           RowBox[{"NDSolve", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"x", "'"}], "[", "t", "]"}], "\[Equal]", 
                RowBox[{"j", ".", 
                 RowBox[{"x", "[", "t", "]"}]}]}], ",", 
               RowBox[{
                RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
                RowBox[{"IdentityMatrix", "[", "dim", "]"}]}]}], "}"}], ",", 
             "x", ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "per"}], "}"}], ",", 
             RowBox[{"Sequence", "@@", "ndsolveopts"}]}], "]"}], 
           "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";", 
         "\n", "\t", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: x[per]/.xsol=\>\"", ",", 
             RowBox[{
              RowBox[{"x", "[", "per", "]"}], "/.", "xsol"}]}], "]"}]}], 
          "]"}], ";", "\n", "\t", 
         RowBox[{"If", "[", 
          RowBox[{"multipliers", ",", "\n", "\t\t", 
           RowBox[{"res", "=", 
            RowBox[{"Eigenvalues", "[", 
             RowBox[{
              RowBox[{"x", "[", "per", "]"}], "/.", "xsol"}], "]"}]}], ",", 
           "\n", "\t\t", 
           RowBox[{"res", "=", 
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"Chop", "[", 
               RowBox[{"Eigenvalues", "[", 
                RowBox[{
                 RowBox[{"x", "[", "per", "]"}], "/.", "xsol"}], "]"}], "]"}],
               "]"}], "/", "per"}]}]}], "\n", "\t", "]"}]}], "\n", ",", "\n", 
        "\t", 
        RowBox[{"(*", " ", 
         RowBox[{
         "ContinuousTime", " ", "or", " ", "DiscreteTime", " ", 
          "equilibrium"}], " ", "*)"}], "\n", "\t", "Else", ",", "\n", "\t", 
        RowBox[{"res", "=", 
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"j", "/.", 
           RowBox[{"t", "\[Rule]", "time"}]}], "]"}]}]}], "\n", "]"}], ";", 
      "\n", "\n", 
      RowBox[{"If", "[", 
       RowBox[{"chop", ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Chop", "[", "res", "]"}], "]"}], ",", 
        RowBox[{"Return", "[", "res", "]"}]}], "]"}], ";"}]}], "\n", "\n", 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.687881451590589*^9, 3.687881451717087*^9}, {
   3.688571686492445*^9, 3.688571686517911*^9}, {3.688571758999564*^9, 
   3.688571759124362*^9}, {3.688571805927868*^9, 3.688571805977295*^9}, {
   3.688598259792244*^9, 3.688598330430194*^9}, 3.693870062484871*^9, {
   3.7093369596230583`*^9, 3.709336960038612*^9}, 3.710105961860166*^9, 
   3.7127802178763657`*^9, {3.712784391975954*^9, 3.7127844137034473`*^9}, 
   3.712785086146867*^9, {3.712785716407987*^9, 3.7127857221772747`*^9}, 
   3.712833620413968*^9, {3.7154416133061943`*^9, 3.715441641490888*^9}, {
   3.7154417472355747`*^9, 3.7154417634409246`*^9}, {3.7154529080318623`*^9, 
   3.715452969298389*^9}, {3.715453001962796*^9, 3.715453029240954*^9}, {
   3.7218494806472263`*^9, 3.721849506188443*^9}, 3.7218495917367067`*^9, {
   3.722084128316791*^9, 3.722084129825014*^9}, {3.724105522816702*^9, 
   3.724105537013926*^9}, {3.724105573748129*^9, 3.724105578665144*^9}, {
   3.7325695129217253`*^9, 3.732569514190278*^9}, {3.732570081243393*^9, 
   3.732570099427299*^9}},
 CellLabel->
  "In[530]:=",ExpressionUUID->"9fb828fd-93f9-4378-8808-4c1b0c210836"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoEigenvalues", "[", 
    RowBox[{
     RowBox[{"traitsandpops_", "?", "TraitsAndVariablesQ"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"EcoEigenvalues", "[", 
    RowBox[{
     RowBox[{"ExtractTraits", "[", "traitsandpops", "]"}], ",", 
     RowBox[{"ExtractVariables", "[", "traitsandpops", "]"}], ",", "opts"}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.712779059611342*^9, 3.7127790632484837`*^9}, {
   3.7127802510293913`*^9, 3.7127802541117783`*^9}, {3.7127835820418167`*^9, 
   3.712783593708169*^9}, 3.7127857275024157`*^9, {3.712833990808877*^9, 
   3.71283399247824*^9}},
 CellLabel->
  "In[531]:=",ExpressionUUID->"e1be42fb-a461-45b9-b1b5-3ba78c45abd6"],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",ExpressionUUID->"853e26e7-627e-4aba-94fc-fe7c121c6114"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "EcoEigenvalues", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"Chop", "\[Rule]", "True"}], ",", 
     RowBox[{"Time", "\[Rule]", "t"}], ",", 
     RowBox[{"NDSolveOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Multipliers", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.687881451756421*^9, {3.688571686542431*^9, 3.688571686592046*^9}, 
   3.7154417382400417`*^9, {3.717197474499758*^9, 3.717197475076635*^9}, {
   3.7171975324573107`*^9, 3.7171975424972878`*^9}},
 CellLabel->
  "In[532]:=",ExpressionUUID->"90bbe12e-9d68-419f-b4f0-cc5ea4cb6e70"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["EcoStableQ", "Subsection",
 CellDingbat->"\[ClubSuit]",
 CellChangeTimes->{
  3.7155131143484*^9},ExpressionUUID->"d6e07f9a-d802-4a56-8b55-1e956857f345"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"make", " ", "listable", " ", "across", " ", "pops"}], " ", "*)"}],
   "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"EcoStableQ", "[", 
     RowBox[{
      RowBox[{"traits", ":", 
       RowBox[{"(", 
        RowBox[{"_", "?", "TraitsQ"}], ")"}], ":", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"pops_", "?", "ListOfVariablesQ"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"EcoStableQ", "[", 
        RowBox[{"traits", ",", "#", ",", "opts"}], "]"}], "&"}], "/@", 
      "pops"}], ")"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.6850220907977247`*^9, 3.685022099547845*^9}, 
   3.685022306589357*^9, {3.685022353984963*^9, 3.685022356898353*^9}, 
   3.685022543151054*^9, {3.685023419016622*^9, 3.6850234210912313`*^9}, 
   3.6850246339185057`*^9, {3.6850246920596313`*^9, 3.685024702609147*^9}, {
   3.6850298956804657`*^9, 3.685029902203434*^9}, {3.6850309468876457`*^9, 
   3.685030993780816*^9}, {3.685093269867608*^9, 3.685093277383587*^9}, 
   3.685093415086285*^9, 3.712738534786777*^9, {3.7128329764233437`*^9, 
   3.7128329881657753`*^9}, {3.712834389065583*^9, 3.712834392409886*^9}, {
   3.71283453344189*^9, 3.7128345388749123`*^9}, {3.715513114362115*^9, 
   3.71551311436996*^9}},
 CellLabel->
  "In[533]:=",ExpressionUUID->"0f3b83dd-7429-40e9-8b11-f22487c357e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoStableQ", "[", 
    RowBox[{
     RowBox[{"traits", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "TraitsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"pops", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<EcoStableQ\>\"", "]"}]}], ",", "\n", 
       "method", ",", "verbose", ",", "verboseall", ",", "simplify", ",", 
       "time", ",", "ecoeigenvaluesopts", ",", "assumptions", ",", 
       "tolerance", ",", "\n", "j", ",", "evs", ",", "res"}], "}"}], ",", 
     "\n", "\n", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
        RowBox[{
         RowBox[{"Msg", "[", 
          RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
         RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
      RowBox[{"If", "[", 
       RowBox[{"Global`debug", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\n", 
      RowBox[{"verbose", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Verbose", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoStableQ", "]"}]}], "}"}], "]"}]}], 
        "]"}]}], ";", "\n", 
      RowBox[{"If", "[", 
       RowBox[{"Global`debug", ",", 
        RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
      RowBox[{"verboseall", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"VerboseAll", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoStableQ", "]"}]}], "}"}], "]"}]}], 
        "]"}]}], ";", "\n", 
      RowBox[{"If", "[", 
       RowBox[{"verboseall", ",", 
        RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
      RowBox[{"method", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Method", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoStableQ", "]"}]}], "}"}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"simplify", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Simplify", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoStableQ", "]"}]}], "}"}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"time", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Time", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoStableQ", "]"}]}], "}"}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ecoeigenvaluesopts", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"EcoEigenvaluesOpts", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoStableQ", "]"}]}], "}"}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"assumptions", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Assumptions", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoStableQ", "]"}]}], "}"}], "]"}]}], 
        "]"}]}], ";", "\n", 
      RowBox[{"tolerance", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Tolerance", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoStableQ", "]"}]}], "}"}], "]"}]}], 
        "]"}]}], ";", "\n", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"method", "===", "Automatic"}], ",", "\[IndentingNewLine]", 
        "\t", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], "&&", 
            RowBox[{"modelperiod", "\[Equal]", "0"}], "&&", 
            RowBox[{
             RowBox[{"IFFQ", "[", "pops", "]"}], "\[Equal]", "False"}], "&&", 
            
            RowBox[{
             RowBox[{"Length", "[", "pops", "]"}], "<", "4"}]}], ",", 
           "\[IndentingNewLine]", "\t\t", 
           RowBox[{"method", "=", "\"\<RouthHurwitz\>\""}], ",", 
           "\[IndentingNewLine]", "\t\t", 
           RowBox[{"method", "=", "\"\<Eigenvalues\>\""}]}], "\n", "\t", 
          "]"}], ";", "\[IndentingNewLine]", "\t", 
         RowBox[{"If", "[", 
          RowBox[{"verbose", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: method=\>\"", ",", "method"}], 
            "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\n", 
      RowBox[{"Which", "[", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"method", "\[Equal]", "\"\<RouthHurwitz\>\""}], ",", "\n", 
        "\t", 
        RowBox[{
         RowBox[{"j", "=", 
          RowBox[{"EcoJacobian", "[", 
           RowBox[{"traits", ",", "pops", ",", 
            RowBox[{"Time", "\[Rule]", "time"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t", 
         RowBox[{"res", "=", 
          RowBox[{"RouthHurwitzCriteria", "[", "j", "]"}]}]}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "\t", 
        RowBox[{"method", "\[Equal]", "\"\<Eigenvalues\>\""}], ",", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{"evs", "=", 
          RowBox[{"EcoEigenvalues", "[", 
           RowBox[{"traits", ",", "pops", ",", 
            RowBox[{"Time", "\[Rule]", "time"}], ",", 
            RowBox[{"Multipliers", "\[Rule]", "True"}], ",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"Sequence", "@@", "ecoeigenvaluesopts"}], "]"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", "\t", 
         RowBox[{"If", "[", 
          RowBox[{"verbose", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: evs=\>\"", ",", "evs"}], "]"}]}], 
          "]"}], ";", "\n", "\t", 
         RowBox[{"Which", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"modeltype", "==", "\"\<DiscreteTime\>\""}], "||", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"modeltype", "==", "\"\<ContinuousTime\>\""}], "&&", 
              RowBox[{
               RowBox[{"IFFQ", "[", "pops", "]"}], "\[Equal]", "True"}]}], 
             ")"}]}], ",", "\n", "\t\t", 
           RowBox[{"res", "=", 
            RowBox[{"Which", "[", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{"Max", "[", 
                 RowBox[{"Re", "[", "evs", "]"}], "]"}], "===", 
                "Indeterminate"}], "]"}], ",", "Indeterminate", ",", "\n", 
              "\t\t\t", 
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{"Max", "[", 
                 RowBox[{"Abs", "[", "evs", "]"}], "]"}], "<", 
                RowBox[{"1", "+", "tolerance"}]}], "]"}], ",", "True", ",", 
              "\n", "\t\t\t", 
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{"Max", "[", 
                 RowBox[{"Abs", "[", "evs", "]"}], "]"}], ">", 
                RowBox[{"1", "+", "tolerance"}]}], "]"}], ",", "False", ",", 
              "\n", "\t\t\t", "Else", ",", "Indeterminate"}], "\n", "\t\t", 
             "]"}]}], ",", "\n", "\t\t", 
           RowBox[{
            RowBox[{"modeltype", "==", "\"\<ContinuousTime\>\""}], "&&", 
            RowBox[{
             RowBox[{"IFFQ", "[", "pops", "]"}], "\[Equal]", "False"}]}], ",",
            "\n", "\t\t", 
           RowBox[{"res", "=", 
            RowBox[{"Which", "[", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{"Max", "[", 
                 RowBox[{"Re", "[", "evs", "]"}], "]"}], "===", 
                "Indeterminate"}], "]"}], ",", "Indeterminate", ",", "\n", 
              "\t\t\t", 
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{"Max", "[", 
                 RowBox[{"Re", "[", "evs", "]"}], "]"}], ">", "tolerance"}], 
               "]"}], ",", "False", ",", "\n", "\t\t\t", 
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{"Max", "[", 
                 RowBox[{"Re", "[", "evs", "]"}], "]"}], "<", "tolerance"}], 
               "]"}], ",", "True", ",", " ", "\n", "\t\t\t", "Else", ",", 
              "Indeterminate"}], "\t\t", "\n", "\t\t", "]"}]}]}], "\n", 
          "\t\t", 
          RowBox[{"(*", 
           RowBox[{",", "\n", "\t\t", 
            RowBox[{
             RowBox[{"modeltype", "==", "\"\<ContinuousTime\>\""}], "&&", 
             RowBox[{
              RowBox[{"IFFQ", "[", "pops", "]"}], "\[Equal]", "True"}]}], ",",
             "\n", "\t\t", 
            RowBox[{"res", "=", 
             RowBox[{"Which", "[", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{"Max", "[", 
                  RowBox[{"Re", "[", "evs", "]"}], "]"}], "===", 
                 "Indeterminate"}], "]"}], ",", "Indeterminate", ",", "\n", 
               "\t\t\t", 
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{
                  "evs", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}], "]"}], "<", 
                 RowBox[{"1", "+", "tolerance"}]}], "]"}], ",", "True", ",", 
               "\n", "\t\t\t", 
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{
                  "evs", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}], "]"}], ">", 
                 RowBox[{"1", "+", "tolerance"}]}], "]"}], ",", "False", ",", 
               "\n", "\t\t\t", "Else", ",", "Indeterminate"}], "\n", "\t\t", 
              "]"}]}]}], "*)"}], "\n", "\t", "]"}]}]}], "\n", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Which", "[", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"simplify", "===", "True"}], ",", "\[IndentingNewLine]", "\t", 
        RowBox[{"Return", "[", 
         RowBox[{"Simplify", "[", 
          RowBox[{"res", ",", 
           RowBox[{"Assumptions", "\[Rule]", "assumptions"}]}], "]"}], "]"}], 
        ",", "\[IndentingNewLine]", "\t", 
        RowBox[{"simplify", "===", "Real"}], ",", "\[IndentingNewLine]", "\t", 
        RowBox[{"Return", "[", 
         RowBox[{"RealSimplify", "[", 
          RowBox[{"res", ",", "assumptions"}], "]"}], "]"}], ",", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"simplify", "===", "Full"}], ",", "\[IndentingNewLine]", "\t", 
        RowBox[{"Return", "[", 
         RowBox[{"FullSimplify", "[", 
          RowBox[{"res", ",", "assumptions"}], "]"}], "]"}], ",", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"simplify", "===", "False"}], ",", "\[IndentingNewLine]", 
        "\t", 
        RowBox[{"Return", "[", "res", "]"}]}], "\[IndentingNewLine]", "]"}], 
      ";"}]}], "\n", "\[IndentingNewLine]", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.6849533936633043`*^9, 3.684953414112164*^9}, {
   3.685014001327359*^9, 3.685014005842956*^9}, {3.685014132188057*^9, 
   3.685014136661201*^9}, {3.685014535298616*^9, 3.6850145470194674`*^9}, {
   3.6850145985316677`*^9, 3.6850146507103567`*^9}, {3.6850147011612797`*^9, 
   3.685014702148767*^9}, {3.685014755407686*^9, 3.685014764748753*^9}, {
   3.685014823176313*^9, 3.6850148724904327`*^9}, {3.685014947418171*^9, 
   3.6850151499287*^9}, {3.685017046207349*^9, 3.685017059021749*^9}, {
   3.685017178822913*^9, 3.685017192507099*^9}, {3.685017409192099*^9, 
   3.6850174230801153`*^9}, {3.685017973288769*^9, 3.685018003051404*^9}, {
   3.685018098461862*^9, 3.685018129122548*^9}, {3.685018444212072*^9, 
   3.685018448249733*^9}, {3.685018528980851*^9, 3.6850185293698874`*^9}, {
   3.685018588986899*^9, 3.6850186697307158`*^9}, {3.685019075288752*^9, 
   3.6850192973688793`*^9}, {3.6850193604609632`*^9, 
   3.6850193972851686`*^9}, {3.685019590179847*^9, 3.6850195905436172`*^9}, {
   3.685019965938696*^9, 3.685019987646915*^9}, {3.6850200915253983`*^9, 
   3.685020170379386*^9}, {3.685021392792079*^9, 3.685021428484852*^9}, {
   3.6850216769463797`*^9, 3.685021691439438*^9}, {3.685022433698675*^9, 
   3.685022444671999*^9}, {3.685022479702354*^9, 3.685022482958386*^9}, 
   3.685022532076754*^9, {3.685023558508892*^9, 3.685023575274457*^9}, {
   3.685023612353402*^9, 3.685023620817189*^9}, {3.685024077454136*^9, 
   3.6850240871653852`*^9}, {3.6850245476165247`*^9, 
   3.6850245541846952`*^9}, {3.685024603026663*^9, 3.6850246096979647`*^9}, {
   3.685055712665042*^9, 3.685055717608275*^9}, {3.68509344018568*^9, 
   3.685093443262388*^9}, 3.685094542977899*^9, {3.6850957506893873`*^9, 
   3.685095758927759*^9}, {3.685095820275567*^9, 3.685095822429641*^9}, 
   3.685105730436112*^9, {3.685105988811041*^9, 3.685105998983307*^9}, {
   3.6851062828705997`*^9, 3.685106311557674*^9}, {3.685106390194951*^9, 
   3.685106397379138*^9}, {3.685106778641333*^9, 3.685106808335217*^9}, {
   3.685312929589141*^9, 3.68531295453417*^9}, {3.685313580691843*^9, 
   3.6853136048091393`*^9}, {3.685316158424636*^9, 3.685316164320519*^9}, 
   3.685316250357275*^9, {3.6859202729777517`*^9, 3.6859202870513277`*^9}, {
   3.688571759147441*^9, 3.6885717592136106`*^9}, {3.688571805998796*^9, 
   3.688571806056652*^9}, {3.6885983990920362`*^9, 3.6885985105514917`*^9}, {
   3.688598802482101*^9, 3.688598808086894*^9}, {3.699739140482938*^9, 
   3.699739205555922*^9}, {3.6997394246557503`*^9, 3.699739491220311*^9}, {
   3.709336970884677*^9, 3.709336971350547*^9}, 3.7101059625647793`*^9, {
   3.71025508617848*^9, 3.710255094877571*^9}, {3.710265061502372*^9, 
   3.710265076308937*^9}, 3.712738534777782*^9, {3.712765372242229*^9, 
   3.7127653779531193`*^9}, {3.712765431871583*^9, 3.712765444283675*^9}, 
   3.712765915191996*^9, {3.712766349430441*^9, 3.712766380136112*^9}, {
   3.712767190942603*^9, 3.712767224761994*^9}, {3.712767908279552*^9, 
   3.7127679367031727`*^9}, {3.712767968145958*^9, 3.7127679691639*^9}, 
   3.71276844384515*^9, {3.712768492676896*^9, 3.712768502734335*^9}, {
   3.7127685701189623`*^9, 3.712768570275599*^9}, {3.7127686497341537`*^9, 
   3.71276865531277*^9}, {3.712830305370514*^9, 3.7128303222095003`*^9}, {
   3.712830493820031*^9, 3.71283051487503*^9}, {3.715513114108346*^9, 
   3.7155131141619167`*^9}, {3.7171968916749563`*^9, 3.717196906359455*^9}, {
   3.721849525127672*^9, 3.72184954988319*^9}, {3.7220841513512173`*^9, 
   3.72208415449754*^9}, {3.722084198438725*^9, 3.7220842010013437`*^9}, {
   3.724079234963525*^9, 3.724079235676611*^9}, {3.7240884542611217`*^9, 
   3.7240884647364893`*^9}, {3.72409700837796*^9, 3.724097127686545*^9}, {
   3.7240974169352427`*^9, 3.7240974603079042`*^9}, {3.724098131659422*^9, 
   3.724098168147067*^9}, {3.7240984038345137`*^9, 3.724098408484956*^9}, {
   3.724099683920906*^9, 3.7240997616730013`*^9}, {3.724100448599148*^9, 
   3.724100455672859*^9}, {3.724100535097134*^9, 3.724100537374981*^9}, {
   3.724100585516767*^9, 3.72410058970721*^9}, {3.7241014013961277`*^9, 
   3.7241014411553802`*^9}, {3.7241015824287558`*^9, 3.724101700492031*^9}, {
   3.7241018197365427`*^9, 3.7241018271116657`*^9}, {3.724101903342354*^9, 
   3.724101963136846*^9}, {3.7241020045094023`*^9, 3.724102015541431*^9}, {
   3.724102471478634*^9, 3.724102485566518*^9}, {3.7241027453015537`*^9, 
   3.7241028081708593`*^9}, {3.7241028418809834`*^9, 3.724102892459547*^9}, 
   3.724103040844589*^9, {3.724103123301693*^9, 3.724103127495133*^9}, 
   3.725140958050362*^9, 3.725141965262782*^9, {3.725745851714113*^9, 
   3.725745864449317*^9}, {3.755194070254854*^9, 
   3.7551941112368517`*^9}},ExpressionUUID->"e8a0d079-56bf-41bf-9476-\
05e75e833886"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoStableQ", "[", 
    RowBox[{
     RowBox[{"traitsandpops_", "?", "TraitsAndVariablesQ"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"EcoStableQ", "[", 
    RowBox[{
     RowBox[{"ExtractTraits", "[", "traitsandpops", "]"}], ",", 
     RowBox[{"ExtractVariables", "[", "traitsandpops", "]"}], ",", "opts"}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.712779059611342*^9, 3.7127790632484837`*^9}, {
   3.7127802510293913`*^9, 3.7127802541117783`*^9}, {3.7127835820418167`*^9, 
   3.712783593708169*^9}, 3.7127857275024157`*^9, {3.712833990808877*^9, 
   3.71283399247824*^9}, {3.712835769983123*^9, 3.712835775171624*^9}, {
   3.715513114166628*^9, 3.715513114174303*^9}},
 CellLabel->
  "In[535]:=",ExpressionUUID->"d7feed21-57a9-4df8-a8b0-4e2cb9de3ddc"],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.7128342128410997`*^9, 
  3.712834216447763*^9}},ExpressionUUID->"421c4dda-795f-4356-8430-\
c30e9915bd9f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "EcoStableQ", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}], ",", 
     RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Simplify", "\[Rule]", "True"}], ",", 
     RowBox[{"Time", "\[Rule]", "t"}], ",", 
     RowBox[{"EcoEigenvaluesOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", 
     RowBox[{"Tolerance", "\[Rule]", "0"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.6850170174835978`*^9, 3.685017043222972*^9}, {
   3.6850193031380787`*^9, 3.685019310680826*^9}, {3.685019537705372*^9, 
   3.685019538351634*^9}, {3.685020181269248*^9, 3.685020182385057*^9}, {
   3.685095767076605*^9, 3.685095773944599*^9}, {3.6851063770885143`*^9, 
   3.6851063813056097`*^9}, {3.685312960097151*^9, 3.68531296618836*^9}, 
   3.6878814518050947`*^9, 3.712766385096274*^9, {3.712767972481163*^9, 
   3.712767973477947*^9}, {3.712768507451104*^9, 3.712768509756341*^9}, {
   3.7128303014012623`*^9, 3.712830302351494*^9}, 3.715513114178171*^9, {
   3.724098452789632*^9, 3.724098457895226*^9}, {3.724099662746971*^9, 
   3.724099675148926*^9}, {3.724102370020849*^9, 3.724102370105598*^9}, 
   3.72410240141647*^9, {3.724102545091942*^9, 3.724102545472825*^9}, {
   3.724102872849594*^9, 3.724102874637203*^9}, 3.724103132954032*^9, 
   3.725140958057073*^9, {3.725745871148444*^9, 3.725745873977618*^9}},
 CellLabel->
  "In[536]:=",ExpressionUUID->"48845c87-f17e-421a-9b81-88f4e8ff5c22"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["SelectEcoStable", "Subsection",
 CellDingbat->"\[ClubSuit]",
 CellChangeTimes->{
  3.7155131369958687`*^9},ExpressionUUID->"8a0c511d-2eaf-4d83-a082-\
f7011a64b435"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SelectEcoStable", "[", 
    RowBox[{
     RowBox[{"traits", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "TraitsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"sol_", "?", "ListOfVariablesQ"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"stableqopts", ",", "stable"}], "}"}], ",", "\n", "\n", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
        RowBox[{
         RowBox[{"Msg", "[", 
          RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
         RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", "\n", 
      
      RowBox[{"stableqopts", "=", 
       RowBox[{"FilterRules", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "SelectEcoStable", "]"}]}], "}"}], "]"}], 
         ",", 
         RowBox[{"Options", "[", "EcoStableQ", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\n", 
      RowBox[{"stable", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"EcoStableQ", "[", 
          RowBox[{"traits", ",", "#", ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"Sequence", "@@", "stableqopts"}], "]"}]}], "]"}], "&"}], 
        "/@", "sol"}]}], ";", "\n", "\n", 
      RowBox[{"Return", "[", 
       RowBox[{"Part", "[", 
        RowBox[{"sol", ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Position", "[", 
           RowBox[{"stable", ",", "True"}], "]"}], "]"}]}], "]"}], "]"}]}]}], 
    "\n", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.68381096712052*^9, 3.683810986592037*^9}, {
   3.685022669197405*^9, 3.685022741004915*^9}, {3.6850227752177277`*^9, 
   3.685022775795672*^9}, {3.685023044903633*^9, 3.68502304812811*^9}, {
   3.685023096184185*^9, 3.685023105327344*^9}, {3.68502317407924*^9, 
   3.685023177377631*^9}, {3.6850544302906237`*^9, 3.685054440285697*^9}, {
   3.6850923094936934`*^9, 3.685092325453136*^9}, {3.685106259201229*^9, 
   3.685106265961214*^9}, {3.688598836023559*^9, 3.688598849013864*^9}, {
   3.6965890216959953`*^9, 3.6965890309519377`*^9}, {3.696589097592353*^9, 
   3.6965891108405037`*^9}, {3.699738964540736*^9, 3.6997389723018713`*^9}, {
   3.699739657468684*^9, 3.699739657671579*^9}, {3.709336986503264*^9, 
   3.709336986906014*^9}, 3.7101059637995567`*^9, {3.7127809925679693`*^9, 
   3.712781000628695*^9}, {3.71278115551274*^9, 3.7127811822809477`*^9}, {
   3.7127815935140047`*^9, 3.7127815941399603`*^9}, {3.7127833387788973`*^9, 
   3.712783338967395*^9}, {3.715513114189929*^9, 3.715513137008945*^9}, {
   3.715552697916291*^9, 3.715552717079227*^9}, {3.7170816924686317`*^9, 
   3.7170817082668667`*^9}, {3.717082139596806*^9, 3.717082141846559*^9}, {
   3.717197292478732*^9, 3.717197301816625*^9}, 3.717197349531268*^9, {
   3.717197591103633*^9, 3.717197598862875*^9}, {3.7240789516909018`*^9, 
   3.724078958547553*^9}, {3.7240796195101967`*^9, 3.7240796202581987`*^9}, {
   3.724088074578102*^9, 3.724088080677637*^9}, 3.724088512346057*^9},
 CellLabel->
  "In[537]:=",ExpressionUUID->"59489b6b-977a-44cd-8b75-e492ae5d22b9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SelectEcoStable", "[", 
    RowBox[{
     RowBox[{"traits", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "TraitsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"{", "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.717081590956794*^9, 3.7170816075140963`*^9}},
 CellLabel->
  "In[538]:=",ExpressionUUID->"475cdf26-25f9-4c09-94cf-851b1f0d6318"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "SelectEcoStable", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}]], "Code",
 CellChangeTimes->{3.715513137018721*^9},
 CellLabel->
  "In[539]:=",ExpressionUUID->"b4baa49b-dde2-46f4-9a3b-b0dd1b3c96e5"]
}, Closed]],

Cell[CellGroupData[{

Cell["FindEcoAttractor", "Subsection",
 CellDingbat->"\[ClubSuit]",
 CellChangeTimes->{
  3.696162141589788*^9, {3.717027858230689*^9, 3.717027859466208*^9}, 
   3.717238754488544*^9},ExpressionUUID->"42d92744-0dbe-4633-a485-\
bbc2b146651e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindEcoAttractor", "[", 
    RowBox[{
     RowBox[{"traits", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "TraitsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"pops", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<FindEcoAttactor\>\"", "]"}]}], ",", 
       "\n", 
       RowBox[{"(*", "options", "*)"}], "\n", "verbose", ",", "verboseall", 
       ",", "method", ",", "chop", ",", "numtries", ",", "\n", 
       "solveecoeqopts", ",", "nsolveecoeqopts", ",", "findecoeqopts", ",", 
       "ecosimopts", ",", "findecocycleopts", ",", "\n", "warmup", ",", 
       "tmax", ",", "finaltmax", ",", "eqthreshold", ",", "time", ",", 
       "period", ",", "maxperiod", ",", "maxperiodmultiplier", ",", "\n", 
       "testvalidity", ",", "teststability", ",", "\n", 
       RowBox[{"(*", 
        RowBox[{"other", " ", "variables"}], "*)"}], "\n", "eq", ",", 
       "valideq", ",", "tmp", ",", "evs", ",", "ics", ",", "stableeq", ",", 
       "res", ",", "essol", ",", "ddt", ",", "eqflag", ",", "per", ",", 
       "ecosimflag"}], "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "Nsp", "}"}], ",", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Msg", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", 
         RowBox[{"handle", " ", "options"}], "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"method", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Method", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "Automatic", ",", "\"\<SolveEcoEq\>\"", ",", 
               "\"\<NSolveEcoEq\>\"", ",", "\"\<FindEcoEq\>\"", ",", 
               "\"\<EcoSim\>\"", ",", "\"\<FindEcoCycle\>\""}], "}"}], ",", 
             "method"}], "]"}]}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Msg", "[", 
            RowBox[{"FindEcoAttractor", "::", "badmtd"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"chop", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Chop", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"numtries", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"NumTries", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"solveecoeqopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"SolveEcoEqOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"nsolveecoeqopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"NSolveEcoEqOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"findecoeqopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"FindEcoEqOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"ecosimopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"EcoSimOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"findecocycleopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"FindEcoCycleOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"warmup", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"WarmUp", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"tmax", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"TMax", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"tmax", "===", "Automatic"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"modelperiod", "\[Equal]", "0"}], ",", 
            RowBox[{"tmax", "=", "1000"}], ",", 
            RowBox[{"tmax", "=", 
             RowBox[{"100", "*", "modelperiod"}]}]}], "]"}]}], "]"}], ";", 
        "\n", 
        RowBox[{"finaltmax", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"FinalTMax", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"finaltmax", "===", "Automatic"}], ",", 
          RowBox[{"finaltmax", "=", "tmax"}]}], "]"}], ";", "\n", 
        RowBox[{"numtries", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"NumTries", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"eqthreshold", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"EqThreshold", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"time", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Time", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"period", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Period", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"maxperiod", "=", 
         RowBox[{"Min", "[", 
          RowBox[{
           RowBox[{"tmax", "-", "1"}], ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"MaxPeriod", "/.", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"opts", ",", 
                RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
              "]"}]}], "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"maxperiodmultiplier", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"MaxPeriodMultiplier", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"testvalidity", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"TestValidity", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"teststability", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"TestStability", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoAttractor", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"ecosimflag", "=", "False"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"SetNsp", "[", "traits", "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"method", "===", "Automatic"}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Which", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"modelperiod", "=!=", "0"}], "&&", 
              RowBox[{"time", "===", "t"}]}], ",", "\n", "\t\t", 
             RowBox[{"method", "=", "\"\<FindEcoCycle\>\""}], ",", "\n", 
             "\t\t", 
             RowBox[{"pops", "\[Equal]", 
              RowBox[{"{", "}"}]}], ",", "\n", "\t\t", 
             RowBox[{"method", "=", "\"\<NSolveEcoEq\>\""}], ",", "\n", 
             "\t\t", "Else", ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"naux", "+", "npops", "+", 
                  RowBox[{"Sum", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Nsp", "[", "gu", "]"}], "*", 
                    RowBox[{"ngcomps", "[", "gu", "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], 
                 "\[LessEqual]", "4"}], ",", "\n", "\t\t\t", 
                RowBox[{"method", "=", "\"\<NSolveEcoEq\>\""}], ",", "\n", 
                "\t\t\t", 
                RowBox[{"method", "=", "\"\<FindEcoEq\>\""}]}], "\n", "\t\t", 
               "]"}], ";"}]}], "\n", "\t", "]"}], ";"}]}], "\n", "]"}], ";", 
        "\n", "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"method", "\[Equal]", "\"\<EcoSim\>\""}], ",", 
          RowBox[{"Goto", "[", "ecosim", "]"}], ",", "\n", "\t", 
          RowBox[{"method", "\[Equal]", "\"\<FindEcoCycle\>\""}], ",", 
          RowBox[{"Goto", "[", "findecocycle", "]"}]}], "\n", "]"}], ";", 
        "\n", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"method", " ", "FindEcoEq"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"method", "\[Equal]", "\"\<FindEcoEq\>\""}], ",", "\n", 
          "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: FindEcoEq Mode\>\""}], "]"}]}], 
            "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"pops", "\[Equal]", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{
              RowBox[{"Msg", "[", 
               RowBox[{
                RowBox[{"FindEcoAttractor", "::", "nopops"}], ",", 
                "\"\<FindEcoEq\>\""}], "]"}], ";", 
              RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
           "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"warmup", ">", "0"}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"Print", "[", 
                  RowBox[{"func", ",", "\"\<: Warming Up...\>\""}], "]"}], 
                 ";", "\n", "\t\t\t", 
                 RowBox[{"With", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"warmup", "=", "warmup"}], ",", 
                    RowBox[{"time", "=", "time"}], ",", 
                    RowBox[{"options", "=", 
                    RowBox[{"Sequence", "@@", "ecosimopts"}]}]}], "}"}], ",", 
                   "\n", "\t\t\t\t", 
                   RowBox[{"PrintCall", "[", 
                    RowBox[{
                    RowBox[{"FinalSlice", "[", 
                    RowBox[{"EcoSim", "[", 
                    RowBox[{"traits", ",", "pops", ",", "warmup", ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", "options"}], 
                    "]"}], "]"}], ",", "\"\<ics:\>\""}], "]"}]}], "]"}]}]}], 
               "\n", "\t\t", "]"}], ";", "\n", "\t\t", 
              RowBox[{"ics", "=", 
               RowBox[{"FinalSlice", "[", 
                RowBox[{"EcoSim", "[", 
                 RowBox[{"traits", ",", "pops", ",", "warmup", ",", 
                  RowBox[{"Time", "\[Rule]", "time"}], ",", 
                  RowBox[{"Evaluate", "[", 
                   RowBox[{"Sequence", "@@", "ecosimopts"}], "]"}]}], "]"}], 
                "]"}]}], ";"}], "\n", "\t", ",", " ", 
             RowBox[{"(*", " ", "else", " ", "*)"}], "\n", "\t\t", 
             RowBox[{
              RowBox[{"ics", "=", "pops"}], ";"}]}], "\n", "\t", "]"}], ";", 
           "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"ics", "=", "ics"}], ",", 
                 RowBox[{"time", "=", "time"}], ",", 
                 RowBox[{"options", "=", 
                  RowBox[{"Sequence", "@@", "findecoeqopts"}]}]}], "}"}], ",",
                "\n", "\t\t\t", 
               RowBox[{"PrintCall", "[", 
                RowBox[{
                 RowBox[{"FindEcoEq", "[", 
                  RowBox[{"traits", ",", "ics", ",", 
                   RowBox[{"Time", "\[Rule]", "time"}], ",", "options"}], 
                  "]"}], ",", "\"\<eq:\>\""}], "]"}]}], "]"}]}], "\n", "\t", 
            "]"}], ";", "\n", "\t", 
           RowBox[{"eq", "=", 
            RowBox[{"{", 
             RowBox[{"FindEcoEq", "[", 
              RowBox[{"traits", ",", "ics", ",", 
               RowBox[{"Time", "\[Rule]", "time"}], ",", 
               RowBox[{"Evaluate", "[", 
                RowBox[{"Sequence", "@@", "findecoeqopts"}], "]"}], ",", 
               RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}], 
             "}"}]}], ";", "\n", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "try", " ", "more", " ", "initial", " ", "conditions", " ", "if", 
             " ", "required"}], " ", "*)"}], "\n", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"numtries", "\[GreaterEqual]", "2"}], ",", "\n", "\t\t", 
             
             RowBox[{
              RowBox[{"Do", "[", "\n", "\t\t\t", 
               RowBox[{"(*", " ", 
                RowBox[{"perturb", " ", "ICs"}], " ", "*)"}], "\n", "\t\t\t", 
               
               RowBox[{
                RowBox[{
                 RowBox[{"ics", "=", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"ReplacePart", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"2", "\[Rule]", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "*", 
                    RowBox[{"10", "^", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}]}]}]}], 
                    "]"}], "&"}], " ", "/@", " ", "pops"}]}], ";", "\n", 
                 "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"verbose", ",", "\n", "\t\t\t\t", 
                   RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ics", "=", "ics"}], ",", 
                    RowBox[{"time", "=", "time"}], ",", 
                    RowBox[{"options", "=", 
                    RowBox[{"Sequence", "@@", "findecoeqopts"}]}]}], "}"}], 
                    ",", "\n", "\t\t\t\t\t", 
                    RowBox[{"PrintCall", "[", 
                    RowBox[{
                    RowBox[{"FindEcoEq", "[", 
                    RowBox[{"traits", ",", "ics", ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", "options"}], 
                    "]"}], ",", "\"\<tmp:\>\""}], "]"}]}], "]"}]}], "\n", 
                  "\t\t\t", "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"tmp", "=", 
                  RowBox[{"FindEcoEq", "[", 
                   RowBox[{"traits", ",", "ics", ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "findecoeqopts"}], "]"}], ",", 
                    RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], 
                   "]"}]}], ";", "\n", "\t\t\t", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                   RowBox[{"if", " ", "distinct", " ", "eq"}], ",", " ", 
                   RowBox[{"add", " ", "to", " ", "tmp"}]}], " ", "*)"}], 
                 "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"tmp", "\[NotEqual]", 
                    RowBox[{"{", "}"}]}], ",", "\n", "\t\t\t\t", 
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"CompoundAnd", "[", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"RuleListDistance", "[", 
                    RowBox[{"tmp", ",", "bar"}], "]"}], ">", 
                    "$roundofftolerance"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"bar", ",", "eq"}], "}"}]}], "]"}], "]"}], ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"eq", ",", "tmp"}], "]"}]}], "]"}], ";"}]}], "\n",
                   "\t\t\t", "]"}], ";"}], "\n", "\t\t", ",", 
                RowBox[{"{", 
                 RowBox[{"numtries", "-", "1"}], "}"}]}], "]"}], ";"}]}], 
            "\n", "\t", "]"}], ";"}]}], "\t", "\n", "]"}], ";", "\n", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"method", " ", "SolveEcoEq"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"method", "\[Equal]", "\"\<SolveEcoEq\>\""}], ",", "\n", 
          "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{"func", ",", "\"\<: SolveEcoEq Mode\>\""}], "]"}], ";",
               "\n", "\t\t", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"time", "=", "time"}], ",", 
                  RowBox[{"options", "=", 
                   RowBox[{"Sequence", "@@", "solveecoeqopts"}]}]}], "}"}], 
                ",", "\n", "\t\t\t", 
                RowBox[{"PrintCall", "[", 
                 RowBox[{
                  RowBox[{"SolveEcoEq", "[", 
                   RowBox[{"traits", ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", "options"}], 
                   "]"}], ",", "\"\<eq:\>\""}], "]"}]}], "]"}]}]}], "\n", 
            "\t", "]"}], ";", "\n", "\t", 
           RowBox[{"eq", "=", 
            RowBox[{"SolveEcoEq", "[", 
             RowBox[{"traits", ",", 
              RowBox[{"Time", "\[Rule]", "time"}], ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "solveecoeqopts"}], "]"}], ",", 
              RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}], 
           ";"}]}], "\n", "]"}], ";", "\n", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"method", " ", "NSolveEcoEq"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"method", "\[Equal]", "\"\<NSolveEcoEq\>\""}], ",", "\n", 
          "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{"func", ",", "\"\<: NSolveEcoEq Mode\>\""}], "]"}], 
              ";", "\n", "\t\t", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"time", "=", "time"}], ",", 
                  RowBox[{"options", "=", 
                   RowBox[{"Sequence", "@@", "nsolveecoeqopts"}]}]}], "}"}], 
                ",", "\n", "\t\t\t", 
                RowBox[{"PrintCall", "[", 
                 RowBox[{"Global`eq", "=", 
                  RowBox[{"Union", "[", 
                   RowBox[{"NSolveEcoEq", "[", 
                    RowBox[{"traits", ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", "options"}], 
                    "]"}], "]"}]}], "]"}]}], "]"}]}]}], "\n", "\t", "]"}], 
           ";", "\n", "\t", 
           RowBox[{"eq", "=", 
            RowBox[{"Union", "[", 
             RowBox[{"NSolveEcoEq", "[", 
              RowBox[{"traits", ",", 
               RowBox[{"Time", "\[Rule]", "time"}], ",", 
               RowBox[{"Evaluate", "[", 
                RowBox[{"Sequence", "@@", "nsolveecoeqopts"}], "]"}], ",", 
               RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}], 
             "]"}]}], ";"}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"method", " ", "FindEcoCycle"}], " ", "*)"}], "\n", 
        RowBox[{"Label", "[", "findecocycle", "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"method", "\[Equal]", "\"\<FindEcoCycle\>\""}], ",", "\n", 
          "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: FindEcoCycle Mode\>\""}], "]"}]}], 
            "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"pops", "\[Equal]", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{
              RowBox[{"Msg", "[", 
               RowBox[{
                RowBox[{"FindEcoAttractor", "::", "nopops"}], ",", 
                "\"\<FindEcoCycle\>\""}], "]"}], ";", 
              RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\n", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "figure", " ", "out", " ", "period", " ", "to", " ", "try"}], " ",
             "*)"}], "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"period", "===", "Automatic"}], ",", "\n", "\t\t", 
             RowBox[{"Which", "[", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"modelperiod", "=!=", "0"}], ",", "\n", "\t\t\t", 
               RowBox[{"per", "=", "modelperiod"}], ",", "\n", "\t\t\t", 
               RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], ",",
                "\n", "\t\t\t", 
               RowBox[{"per", "=", "1"}]}], "\n", "\t\t", "]"}], "\n", "\t", 
             ",", "\n", "\t\t", 
             RowBox[{"per", "=", "period"}]}], "\n", "\t", "]"}], ";", "\n", 
           "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"ecosimflag", "\[Equal]", "False"}], ",", " ", 
             RowBox[{"(*", " ", 
              RowBox[{"if", " ", "we", " ", 
               RowBox[{"haven", "'"}], "t", " ", "already", " ", "been", " ", 
               "through", " ", "ecosim"}], " ", "*)"}], "\n", "\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"warmup", ">", "0"}], ",", "\n", "\t\t\t", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{"verbose", ",", "\n", "\t\t\t\t", 
                  RowBox[{
                   RowBox[{"Print", "[", 
                    RowBox[{"func", ",", "\"\<: Warming up...\>\""}], "]"}], 
                   ";", "\n", "\t\t\t\t", 
                   RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"warmup", "=", "warmup"}], ",", 
                    RowBox[{"per", "=", "per"}], ",", 
                    RowBox[{"time", "=", "time"}], ",", 
                    RowBox[{"options", "=", 
                    RowBox[{"Sequence", "@@", "ecosimopts"}]}]}], "}"}], ",", 
                    "\n", "\t\t\t\t\t", 
                    RowBox[{"PrintCall", "[", 
                    RowBox[{
                    RowBox[{"FinalSlice", "[", 
                    RowBox[{"EcoSim", "[", 
                    RowBox[{"traits", ",", "pops", ",", 
                    RowBox[{"Floor", "[", 
                    RowBox[{"warmup", ",", "per"}], "]"}], ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", "options"}], 
                    "]"}], "]"}], ",", "\"\<ics:\>\""}], "]"}]}], "]"}]}]}], 
                 "\n", "\t\t\t", "]"}], ";", "\n", "\t\t\t", 
                RowBox[{"ics", "=", 
                 RowBox[{"FinalSlice", "[", 
                  RowBox[{"EcoSim", "[", 
                   RowBox[{"traits", ",", "pops", ",", 
                    RowBox[{"Floor", "[", 
                    RowBox[{"warmup", ",", "per"}], "]"}], ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "ecosimopts"}], "]"}]}], "]"}], 
                  "]"}]}], ";"}], "\n", "\t\t", ",", " ", 
               RowBox[{"(*", " ", "else", " ", "*)"}], "\n", "\t\t\t", 
               RowBox[{
                RowBox[{"ics", "=", "pops"}], ";"}]}], "\n", "\t\t", "]"}], 
             ",", "\n", "\t\t", 
             RowBox[{"ics", "=", 
              RowBox[{"FinalSlice", "[", "essol", "]"}]}]}], " ", 
            RowBox[{"(*", " ", 
             RowBox[{
             "if", " ", "we", " ", "have", " ", "been", " ", "through", " ", 
              "ecosim"}], " ", "*)"}], "\n", "\t", "]"}], ";", "\n", "\t", 
           "\n", "\t", 
           RowBox[{"Which", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], ",", 
             "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", "\n", "\t\t\t", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"ics", "=", "ics"}], ",", 
                    RowBox[{"per", "=", "per"}], ",", 
                    RowBox[{
                    "maxperiodmultiplier", "=", "maxperiodmultiplier"}], ",", 
                    
                    RowBox[{"options", "=", 
                    RowBox[{"Sequence", "@@", "findecocycleopts"}]}]}], "}"}],
                   ",", "\n", "\t\t\t\t", 
                  RowBox[{"PrintCall", "[", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"FindEcoCycle", "[", 
                    RowBox[{"traits", ",", "ics", ",", "options", ",", 
                    RowBox[{"Period", "\[Rule]", 
                    RowBox[{"Global`permult", "*", "per"}]}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Global`permult", ",", "maxperiodmultiplier"}], 
                    "}"}]}], "]"}], ",", "\"\<eq:\>\""}], "]"}]}], "]"}]}], 
               "\n", "\t\t", "]"}], ";", "\n", "\t\t", 
              RowBox[{"eq", "=", 
               RowBox[{"Table", "[", "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"FindEcoCycle", "[", 
                  RowBox[{"traits", ",", "ics", ",", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "findecocycleopts"}], "]"}], 
                   ",", 
                   RowBox[{"Period", "\[Rule]", 
                    RowBox[{"permult", "*", "per"}]}]}], "]"}], "\n", "\t\t", 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"permult", ",", "maxperiodmultiplier"}], "}"}]}], 
                "]"}]}], ";", "\n", "\t\t", 
              RowBox[{"(*", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"remove", " ", "$Failed"}], " ", "&"}], " ", 
                "multiple", " ", "period", " ", "solutions"}], " ", "*)"}], 
              "\n", "\t\t", 
              RowBox[{"eq", "=", 
               RowBox[{"Select", "[", 
                RowBox[{"eq", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "=!=", "$Failed"}], "&&", 
                   RowBox[{
                    RowBox[{"FindPeriod", "[", "#", "]"}], "\[Equal]", 
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "[", 
                    "\"\<PathLength\>\"", "]"}]}]}], "&"}]}], "]"}]}], ";"}], 
             "\n", "\t", ",", "\n", "\t\t", 
             RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], ",",
              "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", "\n", "\t\t\t", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"ics", "=", "ics"}], ",", 
                    RowBox[{"options", "=", 
                    RowBox[{"Sequence", "@@", "findecocycleopts"}]}]}], "}"}],
                   ",", "\n", "\t\t\t\t", 
                  RowBox[{"PrintCall", "[", 
                   RowBox[{
                    RowBox[{"FindEcoCycle", "[", 
                    RowBox[{"traits", ",", "ics", ",", "options"}], "]"}], 
                    ",", "\"\<eq:\>\""}], "]"}]}], "]"}]}], "\n", "\t\t", 
               "]"}], ";", "\n", "\t\t", 
              RowBox[{"eq", "=", 
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"FindEcoCycle", "[", 
                   RowBox[{"traits", ",", "ics", ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "findecocycleopts"}], "]"}]}], 
                   "]"}], "}"}], ",", 
                 RowBox[{
                  RowBox[{"#", "=!=", "$Failed"}], "&"}]}], "]"}]}]}]}], "\n",
             "\t", "]"}], ";"}]}], "\t", "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: eq=\>\"", ",", "eq"}], "]"}]}], "]"}], 
        ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "assess", " ", "validity", " ", "and", " ", "stability", " ", "of", 
          " ", "eq"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"testvalidity", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"!", 
               RowBox[{"ListQ", "[", "eq", "]"}]}], "||", 
              RowBox[{"eq", "\[Equal]", 
               RowBox[{"{", "}"}]}]}], ",", " ", 
             RowBox[{"(*", " ", 
              RowBox[{"in", " ", "case", " ", "of", " ", 
               RowBox[{"Solve", "/", "NSolve"}], " ", "or", " ", 
               "FindEcoCycle", " ", "failure"}], " ", "*)"}], "\n", "\t\t", 
             RowBox[{"valideq", "=", 
              RowBox[{"{", "}"}]}], "\n", "\t", ",", " ", "\n", "\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Head", "[", 
                 RowBox[{"eq", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", "1", ",", "2"}], 
                  "\[RightDoubleBracket]"}], "]"}], "=!=", 
                "InterpolatingFunction"}], ",", "\n", "\t\t\t", 
               RowBox[{
                RowBox[{"valideq", "=", 
                 RowBox[{"SelectValid", "[", "eq", "]"}]}], ";", "\n", 
                "\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{"verbose", ",", 
                  RowBox[{"Print", "[", 
                   RowBox[{
                   "func", ",", "\"\<: valid eq=\>\"", ",", "valideq"}], 
                   "]"}]}], "]"}], ";"}], "\n", "\t\t", ",", "\n", "\t\t\t", 
               RowBox[{"valideq", "=", "eq"}]}], " ", 
              RowBox[{"(*", " ", 
               RowBox[{"SelectValid", " ", 
                RowBox[{"doesn", "'"}], "t", " ", "work", " ", "on", " ", 
                RowBox[{"IF", "'"}], "s", " ", "yet"}], " ", "*)"}], "\n", 
              "\t\t", "]"}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"valideq", "\[Equal]", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{"Msg", "[", 
              RowBox[{"FindEcoAttractor", "::", "novalideq"}], "]"}]}], "]"}],
            ";"}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"teststability", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"stableeq", "=", 
            RowBox[{"SelectEcoStable", "[", 
             RowBox[{"traits", ",", "valideq", ",", 
              RowBox[{"Time", "\[Rule]", "time"}]}], "]"}]}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: stable eq=\>\"", ",", "stableeq"}], 
              "]"}]}], "]"}], ";"}], "\n", ",", "\n", "\t", 
          RowBox[{"stableeq", "=", "valideq"}]}], "\n", "]"}], ";", "\n", 
        "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "stableeq", "]"}], "\[Equal]", "0"}], ",", 
          " ", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"no", " ", "stable", " ", "eq"}], ",", " ", 
            RowBox[{"try", " ", "EcoSim", " ", "once"}]}], " ", "*)"}], "\n", 
          "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ecosimflag", "\[Equal]", "False"}], ",", "\n", "\t\t", 
            RowBox[{
             RowBox[{"Msg", "[", 
              RowBox[{
               RowBox[{"FindEcoAttractor", "::", "nosteq"}], ",", "traits"}], 
              "]"}], ";", "\n", "\t\t", 
             RowBox[{"method", "=", "\"\<EcoSim\>\""}]}], "\n", "\t", ",", 
            "\n", "\t\t", 
            RowBox[{
             RowBox[{"Msg", "[", 
              RowBox[{"FindEcoAttractor", "::", "giveup"}], "]"}], ";", "\n", 
             "\t\t", 
             RowBox[{"Return", "[", 
              RowBox[{"EcoSim", "[", 
               RowBox[{"traits", ",", 
                RowBox[{"FinalSlice", "[", "essol", "]"}], ",", "finaltmax", 
                ",", 
                RowBox[{"Time", "\[Rule]", "time"}], ",", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"Sequence", "@@", "ecosimopts"}], "]"}], ",", 
                RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}], 
              "]"}]}]}], "\n", "\t", "]"}]}], "\n", "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "stableeq", "]"}], "\[Equal]", "1"}], ",", 
          RowBox[{
           RowBox[{"res", "=", 
            RowBox[{
            "stableeq", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}]}], ";", 
           RowBox[{"Goto", "[", "done", "]"}]}]}], "]"}], ";", " ", 
        RowBox[{"(*", " ", "successful", " ", "*)"}], "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "stableeq", "]"}], "\[GreaterEqual]", "2"}],
           ",", 
          RowBox[{
           RowBox[{"Msg", "[", 
            RowBox[{
             RowBox[{"FindEcoAttractor", "::", "musteq"}], ",", 
             RowBox[{"Length", "[", "stableeq", "]"}], ",", "traits"}], "]"}],
            ";", 
           RowBox[{"Goto", "[", "done", "]"}]}]}], "]"}], ";", "\n", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"if", " ", 
           RowBox[{"we", "'"}], "re", " ", "still", " ", "here"}], ",", " ", 
          RowBox[{"no", " ", "stable", " ", "equilibrium"}], ",", " ", 
          RowBox[{"so", " ", "switch", " ", "to", " ", "EcoSim"}]}], " ", 
         "*)"}], "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"method", " ", "EcoSim"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"Label", "[", "ecosim", "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"method", "\[Equal]", "\"\<EcoSim\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: EcoSim Mode\>\""}], "]"}]}], "]"}], 
           ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"pops", "\[Equal]", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{
              RowBox[{"Msg", "[", 
               RowBox[{
                RowBox[{"FindEcoAttractor", "::", "nopops"}], ",", 
                "\"\<EcoSim\>\""}], "]"}], ";", 
              RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\n", "\t", "\n", 
           "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "ics", "]"}], "\[Equal]", "0"}], ",", 
             RowBox[{"ics", "=", "pops"}]}], "]"}], ";", "\n", "\t", "\n", 
           "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"ics", "=", "ics"}], ",", 
                 RowBox[{"tmax", "=", "tmax"}], ",", 
                 RowBox[{"time", "=", "time"}], ",", 
                 RowBox[{"options", "=", 
                  RowBox[{"Sequence", "@@", "ecosimopts"}]}]}], "}"}], ",", 
               "\n", "\t\t\t", 
               RowBox[{"PrintCall", "[", 
                RowBox[{
                 RowBox[{"EcoSim", "[", 
                  RowBox[{"traits", ",", "ics", ",", "tmax", ",", 
                   RowBox[{"Time", "\[Rule]", "time"}], ",", "options"}], 
                  "]"}], ",", "\"\<essol:\>\""}], "]"}]}], "]"}]}], "\n", 
            "\t", "]"}], ";", "\n", "\t", "\n", "\t", 
           RowBox[{"essol", "=", 
            RowBox[{"EcoSim", "[", 
             RowBox[{"traits", ",", "ics", ",", "tmax", ",", 
              RowBox[{"Time", "\[Rule]", "time"}], ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "ecosimopts"}], "]"}], ",", 
              RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}], ";",
            "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"PlotDynamics", "[", "essol", "]"}], "]"}]}], "]"}], 
           ";", "\n", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{"check", " ", "for", " ", "equilibrium"}], " ", "*)"}], 
           "\n", "\t", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"modelperiod", "=!=", "0"}], ",", "\n", "\t\t", 
             RowBox[{"ddt", "=", 
              RowBox[{
               RowBox[{"FinalDerivatives", "[", 
                RowBox[{"essol", ",", "modelperiod"}], "]"}], 
               "\[LeftDoubleBracket]", 
               RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], ",", 
             "\n", "\t\t", 
             RowBox[{"ddt", "=", 
              RowBox[{
               RowBox[{"FinalDerivatives", "[", "essol", "]"}], 
               "\[LeftDoubleBracket]", 
               RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}]}], "\n",
             "\t", "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: d/dt=\>\"", ",", "ddt"}], "]"}]}], 
            "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{"Abs", "[", "ddt", "]"}], "]"}], "<", "eqthreshold"}], 
             ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{"func", ",", "\"\<: Equilibrium found\>\""}], 
                 "]"}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{"(*", " ", 
               RowBox[{"construct", " ", "stableeq"}], " ", "*)"}], "\n", 
              "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"modelperiod", "=!=", "0"}], ",", "\n", "\t\t\t", 
                RowBox[{"res", "=", 
                 RowBox[{"FinalSlice", "[", 
                  RowBox[{"essol", ",", "modelperiod"}], "]"}]}], ",", "\n", 
                "\t\t\t", 
                RowBox[{"res", "=", 
                 RowBox[{"FinalSlice", "[", "essol", "]"}]}]}], "\n", "\t\t", 
               "]"}], ";", "\n", "\t\t", 
              RowBox[{"Goto", "[", "done", "]"}], ";"}], "\n", "\t", ",", 
             "\n", "\t\t", 
             RowBox[{"(*", " ", 
              RowBox[{"steady", " ", "state", " ", "eq", " ", "failed"}], " ",
               "*)"}], "\n", "\t\t", 
             RowBox[{
              RowBox[{"Msg", "[", 
               RowBox[{
                RowBox[{"FindEcoAttractor", "::", "nostst"}], ",", "ddt", ",",
                 "tmax"}], "]"}], ";", "\n", "\t\t", 
              RowBox[{"(*", " ", 
               RowBox[{
               "attempt", " ", "to", " ", "find", " ", "Period", " ", "using",
                 " ", "FindEcoCycle", " ", "approach"}], " ", "*)"}], "\n", 
              "\t\t", 
              RowBox[{"ecosimflag", "=", "True"}], ";", " ", 
              RowBox[{"(*", " ", 
               RowBox[{
               "already", " ", "been", " ", "through", " ", "ecosim"}], " ", 
               "*)"}], "\n", "\t\t", 
              RowBox[{"method", "=", "\"\<FindEcoCycle\>\""}], ";", "\n", 
              "\t\t", 
              RowBox[{"period", "=", 
               RowBox[{"FindPeriod", "[", 
                RowBox[{"essol", ",", 
                 RowBox[{"MaxPeriod", "\[Rule]", "maxperiod"}], ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"Sequence", "@@", "findecocycleopts"}], "]"}]}], 
                "]"}]}], ";", "\n", "\t\t", 
              RowBox[{"Goto", "[", "findecocycle", "]"}], ";"}]}], "\n", "\t",
             "]"}], ";"}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"Label", "[", "done", "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"chop", ",", "\n", "\t", 
          RowBox[{"Return", "[", 
           RowBox[{"Chop", "[", "res", "]"}], "]"}], ",", "\n", "\t", 
          RowBox[{"Return", "[", "res", "]"}]}], "\n", "]"}], ";"}]}], "\n", 
      "\n", "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.685097582350366*^9, 3.68509767955573*^9}, {
   3.685097865517953*^9, 3.6850979218171053`*^9}, {3.685105488608816*^9, 
   3.685105491086103*^9}, 3.687881451974711*^9, {3.688571686676597*^9, 
   3.6885716878055353`*^9}, {3.68857175926897*^9, 3.688571760170783*^9}, {
   3.68857180611154*^9, 3.6885718061593657`*^9}, {3.688598871701103*^9, 
   3.688598872316009*^9}, {3.688598902895031*^9, 3.688598906024179*^9}, {
   3.688599032012104*^9, 3.6885991151305943`*^9}, {3.688599149831212*^9, 
   3.688599160187595*^9}, {3.688599196390895*^9, 3.688599210465152*^9}, {
   3.6885992477423983`*^9, 3.688599250741025*^9}, {3.688599298248004*^9, 
   3.688599370607283*^9}, {3.69359333578337*^9, 3.693593338737508*^9}, {
   3.693869717495245*^9, 3.693869717547611*^9}, {3.696151024578425*^9, 
   3.696151024697864*^9}, {3.696162141618515*^9, 3.696162142097598*^9}, {
   3.696163757901952*^9, 3.696163761146559*^9}, {3.6961795088195267`*^9, 
   3.696179509298678*^9}, {3.6961801519637423`*^9, 3.696180154840375*^9}, {
   3.69618047682104*^9, 3.696180499559513*^9}, {3.696180535396537*^9, 
   3.696180551975226*^9}, {3.69618078638026*^9, 3.696180846388883*^9}, {
   3.696202673143579*^9, 3.696202692185684*^9}, {3.696202862108498*^9, 
   3.696202907770053*^9}, {3.6962029615041323`*^9, 3.696202973859426*^9}, {
   3.696541576040053*^9, 3.6965416628688383`*^9}, {3.696541704857338*^9, 
   3.696541753354097*^9}, {3.696543241441813*^9, 3.6965432699049797`*^9}, {
   3.696543345066312*^9, 3.696543379902446*^9}, {3.696543857947782*^9, 
   3.696543877659896*^9}, 3.696546952170947*^9, {3.696551431690721*^9, 
   3.696551476812701*^9}, {3.696588133908807*^9, 3.696588135612742*^9}, {
   3.696588264404606*^9, 3.6965882848447943`*^9}, {3.696589224819448*^9, 
   3.696589232562924*^9}, {3.696589370220071*^9, 3.696589438475299*^9}, 
   3.696589489666494*^9, {3.696606739746984*^9, 3.696606862465952*^9}, {
   3.696607219900128*^9, 3.6966072406906147`*^9}, {3.6966756271589317`*^9, 
   3.696675628206026*^9}, {3.696676033267845*^9, 3.696676033757658*^9}, {
   3.696676072959565*^9, 3.6966760774495163`*^9}, {3.696676152837698*^9, 
   3.696676160126951*^9}, {3.6966800976564837`*^9, 3.696680118839117*^9}, {
   3.696680225735392*^9, 3.696680232758025*^9}, {3.6966806151623907`*^9, 
   3.696680632989931*^9}, {3.696681488348325*^9, 3.696681497201639*^9}, {
   3.6966815463678093`*^9, 3.696681546517047*^9}, {3.699565807730485*^9, 
   3.699565855672001*^9}, {3.6996208575931673`*^9, 3.6996208776649227`*^9}, {
   3.699621223494404*^9, 3.69962124607917*^9}, {3.699621752918661*^9, 
   3.69962177480336*^9}, {3.6996260258944073`*^9, 3.699626039441313*^9}, {
   3.699626087599758*^9, 3.699626090389203*^9}, {3.699654280209773*^9, 
   3.699654298123789*^9}, {3.699654345783394*^9, 3.699654350105208*^9}, {
   3.69965728392162*^9, 3.699657315902357*^9}, 3.699694770206373*^9, {
   3.708668286800243*^9, 3.708668322325473*^9}, {3.708668388442877*^9, 
   3.708668406753677*^9}, {3.708834643174157*^9, 3.708834660517186*^9}, {
   3.7093367551882057`*^9, 3.709336756579803*^9}, {3.7101059644406557`*^9, 
   3.710105966186714*^9}, 3.7102026196155767`*^9, {3.7102503426346827`*^9, 
   3.710250359571354*^9}, {3.710255102377726*^9, 3.710255116442388*^9}, {
   3.710255305593939*^9, 3.710255352488514*^9}, {3.710255396724723*^9, 
   3.7102553983687887`*^9}, {3.710255486635791*^9, 3.710255506530343*^9}, 
   3.712738534828776*^9, 3.715513137045794*^9, 3.715555899201139*^9, {
   3.7155560215357323`*^9, 3.715556026935817*^9}, {3.715556103718534*^9, 
   3.715556104197234*^9}, {3.716932459271303*^9, 3.7169324700750313`*^9}, {
   3.7169327623216267`*^9, 3.716932762480215*^9}, 3.7169333695967007`*^9, {
   3.716934446585146*^9, 3.716934458227775*^9}, {3.71699701179326*^9, 
   3.716997046396206*^9}, {3.716997177359577*^9, 3.716997178889123*^9}, {
   3.716997505595084*^9, 3.716997541149931*^9}, {3.717001650758082*^9, 
   3.717001679524218*^9}, {3.717001737995591*^9, 3.717001752744206*^9}, {
   3.717002110622446*^9, 3.7170021439901447`*^9}, {3.717002185669815*^9, 
   3.7170022282711554`*^9}, {3.717002605871031*^9, 3.717002639023438*^9}, {
   3.7170028780881767`*^9, 3.7170028941186323`*^9}, {3.717003178129177*^9, 
   3.7170032128908978`*^9}, {3.7170057714294567`*^9, 3.717005881553329*^9}, 
   3.717005927536137*^9, {3.717006005477717*^9, 3.717006013554742*^9}, {
   3.717006337197969*^9, 3.7170063618635693`*^9}, {3.71700656215558*^9, 
   3.717006582858769*^9}, {3.71700684430569*^9, 3.717006893713359*^9}, {
   3.717007302528954*^9, 3.717007330732265*^9}, {3.717016613840226*^9, 
   3.717016637518997*^9}, {3.717016926428451*^9, 3.717017032767908*^9}, {
   3.717017860562674*^9, 3.71701789025036*^9}, 3.7170813043491983`*^9, {
   3.717081365188531*^9, 3.717081479021072*^9}, 3.717081522778768*^9, {
   3.717082006766004*^9, 3.717082012531375*^9}, {3.717251659721352*^9, 
   3.7172516598532133`*^9}, {3.7172516935839567`*^9, 3.717251804699563*^9}, {
   3.7172527704081*^9, 3.717252827573163*^9}, {3.717261923424346*^9, 
   3.717261957574039*^9}, {3.7172821890577106`*^9, 3.717282225208077*^9}, {
   3.7182265620669193`*^9, 3.718226640917939*^9}, {3.718226690846854*^9, 
   3.718226817496024*^9}, {3.718227150312459*^9, 3.718227201959282*^9}, {
   3.7182276608052*^9, 3.7182277153800087`*^9}, {3.718227809271353*^9, 
   3.718227838722146*^9}, {3.718228249086643*^9, 3.718228249741837*^9}, {
   3.71822835698909*^9, 3.718228391501648*^9}, {3.7182285110280113`*^9, 
   3.7182285334456778`*^9}, {3.718228632304298*^9, 3.718228636171076*^9}, {
   3.718229211502521*^9, 3.7182292118108673`*^9}, {3.718284631570945*^9, 
   3.7182846327757587`*^9}, {3.718289014104642*^9, 3.7182890197638283`*^9}, {
   3.718290181289939*^9, 3.718290193009221*^9}, {3.7182962980795383`*^9, 
   3.718296298686838*^9}, {3.7182965809445887`*^9, 3.71829663832939*^9}, {
   3.718296726353437*^9, 3.718296730753749*^9}, {3.718297458282959*^9, 
   3.7182974584802923`*^9}, {3.718297524298752*^9, 3.7182975403140793`*^9}, {
   3.718316291018499*^9, 3.718316312846714*^9}, {3.7183165292853947`*^9, 
   3.71831660119451*^9}, {3.7183166381164618`*^9, 3.718316681154224*^9}, {
   3.7183167873275223`*^9, 3.7183168229797277`*^9}, {3.718316925455974*^9, 
   3.718316936340747*^9}, {3.7183169898627977`*^9, 3.7183170335938272`*^9}, {
   3.7183171666138144`*^9, 3.718317195763543*^9}, {3.718317249137035*^9, 
   3.7183172807639008`*^9}, {3.71831731609317*^9, 3.718317316215317*^9}, {
   3.71831737871758*^9, 3.718317500611595*^9}, {3.718317531481064*^9, 
   3.718317573888517*^9}, {3.718317642077389*^9, 3.718317666213656*^9}, {
   3.718317723913127*^9, 3.7183178817048693`*^9}, {3.718318222469594*^9, 
   3.718318251089768*^9}, {3.718318367322722*^9, 3.718318373927114*^9}, {
   3.718319209993951*^9, 3.718319216752802*^9}, {3.718319247432889*^9, 
   3.718319336625187*^9}, {3.7183193852132387`*^9, 3.718319475953883*^9}, {
   3.718319520139863*^9, 3.718319554943993*^9}, 3.718319627644312*^9, 
   3.71831969235464*^9, {3.718319743606235*^9, 3.718319747046225*^9}, {
   3.718319829776731*^9, 3.7183198659157743`*^9}, {3.71832013013828*^9, 
   3.7183201890957537`*^9}, {3.718320249283497*^9, 3.718320281913069*^9}, {
   3.718320365543085*^9, 3.7183203908720913`*^9}, {3.718320439892302*^9, 
   3.7183205931464663`*^9}, {3.718320628503869*^9, 3.718320656950363*^9}, 
   3.718320693702249*^9, {3.718320726753755*^9, 3.718320746548176*^9}, {
   3.71832602457957*^9, 3.718326064750548*^9}, {3.7183261357195797`*^9, 
   3.718326159853806*^9}, {3.718327233849889*^9, 3.718327236947706*^9}, {
   3.718327767834896*^9, 3.718327927655364*^9}, {3.718383070910755*^9, 
   3.718383077534099*^9}, {3.718383206337517*^9, 3.718383256619418*^9}, {
   3.71838330007782*^9, 3.718383301267393*^9}, {3.718383425021072*^9, 
   3.718383433993946*^9}, {3.718383473322798*^9, 3.7183834775060177`*^9}, {
   3.7183836883644238`*^9, 3.718383745123351*^9}, 3.718383799719839*^9, {
   3.718384159572197*^9, 3.71838418760246*^9}, {3.718384227362249*^9, 
   3.718384260713689*^9}, {3.718385383525494*^9, 3.71838553548213*^9}, {
   3.718385590854721*^9, 3.718385615274622*^9}, {3.718648551202372*^9, 
   3.718648611576049*^9}, {3.718648664994172*^9, 3.7186486852509623`*^9}, {
   3.7186487496423693`*^9, 3.7186488107263603`*^9}, {3.718665867003276*^9, 
   3.718665885791152*^9}, {3.719418396898252*^9, 3.7194183974019413`*^9}, {
   3.719418433371653*^9, 3.719418435557128*^9}, 3.719418527361957*^9, {
   3.721407662700186*^9, 3.7214076942820597`*^9}, {3.721407730627033*^9, 
   3.721407748524686*^9}, {3.721408557548759*^9, 3.7214085588581123`*^9}, {
   3.721408634205803*^9, 3.721408664828658*^9}, {3.72141016240629*^9, 
   3.721410236203334*^9}, {3.7214106873189993`*^9, 3.7214106919792747`*^9}, {
   3.7214107282047033`*^9, 3.721410836463975*^9}, {3.721411672914105*^9, 
   3.7214117859093933`*^9}, {3.721435401210384*^9, 3.7214354711359253`*^9}, {
   3.7218320627000313`*^9, 3.721832064451207*^9}, 3.7218320999147053`*^9, {
   3.721832136838429*^9, 3.721832142449778*^9}, {3.721832704569846*^9, 
   3.721832729819006*^9}, {3.7218328780897493`*^9, 3.721832883786108*^9}, {
   3.721833855064575*^9, 3.7218338946550283`*^9}, {3.7218339515577707`*^9, 
   3.721833952238029*^9}, {3.721835425614896*^9, 3.721835450934267*^9}, {
   3.721849028731291*^9, 3.7218490421376753`*^9}, {3.721849672398842*^9, 
   3.721849677915805*^9}, {3.722038824003662*^9, 3.722038831315483*^9}, {
   3.722038865168611*^9, 3.722038879065322*^9}, {3.72203893554574*^9, 
   3.722038996264892*^9}, {3.722039165969327*^9, 3.72203920672797*^9}, {
   3.7220392658676167`*^9, 3.722039272173864*^9}, {3.722039346581292*^9, 
   3.722039346982747*^9}, {3.72208046937712*^9, 3.722080510450226*^9}, 
   3.722080548904665*^9, {3.722081176968526*^9, 3.7220811793752213`*^9}, {
   3.724099026140006*^9, 3.72409902652148*^9}, {3.724099058955208*^9, 
   3.724099080611885*^9}, {3.724103383849791*^9, 3.724103438062283*^9}, {
   3.724103491612401*^9, 3.72410349716695*^9}, {3.724104327534528*^9, 
   3.724104331714718*^9}, {3.7241043883417873`*^9, 3.7241044016857862`*^9}, {
   3.724104521629808*^9, 3.7241045515531473`*^9}, {3.724104657333025*^9, 
   3.724104679717538*^9}, {3.72410471726541*^9, 3.7241047353751297`*^9}, {
   3.725140958079259*^9, 3.7251409581311197`*^9}, {3.725141965286428*^9, 
   3.725141965325645*^9}, 3.728480781041885*^9, {3.7284812285570393`*^9, 
   3.728481254975675*^9}, {3.728484797775874*^9, 3.728484801909699*^9}, {
   3.72848484782327*^9, 3.728484848295081*^9}, {3.728484935333714*^9, 
   3.7284849504643393`*^9}, {3.728485064176244*^9, 3.728485086230406*^9}, {
   3.728485499989306*^9, 3.728485511446004*^9}, {3.728492935175768*^9, 
   3.728492982832242*^9}, {3.728504415265253*^9, 3.7285044193479548`*^9}, {
   3.72851153030238*^9, 3.7285115372556562`*^9}, {3.728511573476514*^9, 
   3.728511600907847*^9}, 
   3.755189571608323*^9},ExpressionUUID->"71c0366b-2ebb-4a26-8758-\
9f1eddc3e18e"],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",ExpressionUUID->"24fd674f-a1b3-4f94-8506-596244820b69"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "FindEcoAttractor", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}], ",", "\n", 
     RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Chop", "\[Rule]", "True"}], ",", 
     RowBox[{"NumTries", "\[Rule]", "1"}], ",", "\n", 
     RowBox[{"SolveEcoEqOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"NSolveEcoEqOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"FindEcoEqOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"EcoSimOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"FindEcoCycleOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", 
     RowBox[{"WarmUp", "\[Rule]", "0"}], ",", 
     RowBox[{"TMax", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"EqThreshold", "\[Rule]", 
      RowBox[{"10", "^", 
       RowBox[{"-", "5"}]}]}], ",", 
     RowBox[{"Time", "\[Rule]", "t"}], ",", 
     RowBox[{"Period", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"MaxPeriod", "\[Rule]", "16"}], ",", 
     RowBox[{"MaxPeriodMultiplier", "\[Rule]", "2"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"TestValidity", "\[Rule]", "True"}], ",", 
     RowBox[{"TestStability", "\[Rule]", "True"}], ",", 
     RowBox[{"FinalTMax", "\[Rule]", "Automatic"}]}], "}"}]}], ";"}]], "Code",\

 CellChangeTimes->{{3.6850975589482117`*^9, 3.6850975591676893`*^9}, 
   3.687881452051705*^9, {3.688571687831821*^9, 3.688571687973935*^9}, 
   3.6961510247089767`*^9, 3.696162142104967*^9, {3.69620299572367*^9, 
   3.6962030111551857`*^9}, {3.696544482073678*^9, 3.6965445252338963`*^9}, {
   3.696589629742776*^9, 3.696589631019755*^9}, {3.724104432420837*^9, 
   3.724104506599208*^9}, {3.725140958138217*^9, 3.725140958148961*^9}},
 CellLabel->
  "In[541]:=",ExpressionUUID->"0b416dbc-7230-433a-8360-92019ddd4d0d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["PlotEcoIsoclines", "Subsection",
 CellDingbat->
  "\[ClubSuit]",ExpressionUUID->"7c7feded-abaa-4bc3-909d-57b58777660f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotEcoIsoclines", "[", 
     RowBox[{
      RowBox[{"traits", ":", 
       RowBox[{"(", 
        RowBox[{"_", "?", "TraitsQ"}], ")"}], ":", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"var1_", ",", 
        RowBox[{"var1min_", "?", "NumericQ"}], ",", 
        RowBox[{"var1max_", "?", "NumericQ"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"var2_", ",", 
        RowBox[{"var2min_", "?", "NumericQ"}], ",", 
        RowBox[{"var2max_", "?", "NumericQ"}]}], "}"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"func", "=", 
         RowBox[{"FuncStyle", "[", "\"\<PlotEcoIsoclines\>\"", "]"}]}], ",", 
        "\n", 
        RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
        "verboseall", ",", "fixed", ",", "time", ",", "monitor", ",", 
        "percapita", ",", "isoclinestyle", ",", "framelabel", ",", 
        "contourplotopts", ",", "isoclinelabels", ",", "isoclinelabel1", ",", 
        "isoclinelabel2", ",", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "fixedvars", 
        ",", "nonfixedvars", ",", "lookup1", ",", "lookup2", ",", "unk1", ",",
         "eqn1", ",", "style1", ",", "unk2", ",", "eqn2", ",", "style2", ",", 
        "g1", ",", "g2", ",", "removets", ",", "res"}], "}"}], ",", "\n", 
      "\n", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "Nsp", "}"}], ",", "\n", "\n", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
           RowBox[{
            RowBox[{"Msg", "[", 
             RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
            RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
         "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
         RowBox[{"verbose", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Verbose", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEcoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
         RowBox[{"verboseall", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"VerboseAll", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEcoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"verboseall", ",", 
           RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
         RowBox[{"monitor", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Monitor", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEcoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"fixed", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Fixed", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEcoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"fixedvars", "=", 
          RowBox[{"fixed", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
         
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<PlotEcoIsoclines: fixedvars=\>\"", ",", "fixedvars"}], 
            "]"}]}], "]"}], ";", "\n", 
         RowBox[{"time", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Time", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEcoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"percapita", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"PerCapita", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEcoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"isoclinestyle", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"IsoclineStyle", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEcoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"framelabel", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"FrameLabel", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEcoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"framelabel", "===", "Automatic"}], ",", 
           RowBox[{"framelabel", "=", 
            RowBox[{"{", 
             RowBox[{"var1", ",", "var2"}], "}"}]}]}], "]"}], ";", "\n", 
         RowBox[{"isoclinelabels", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"IsoclineLabels", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEcoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"isoclinelabel1", ",", "isoclinelabel2"}], "}"}], "=", 
          RowBox[{"Which", "[", "\n", "\t", 
           RowBox[{
            RowBox[{"isoclinelabels", "===", "Automatic"}], ",", "\n", "\t", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"None", ",", 
                RowBox[{
                 RowBox[{"Tooltip", "[", 
                  RowBox[{"Null", ",", "var1"}], "]"}], "&"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"None", ",", 
                RowBox[{
                 RowBox[{"Tooltip", "[", 
                  RowBox[{"Null", ",", "var2"}], "]"}], "&"}]}], "}"}]}], 
             "}"}], ",", "\n", "\t", 
            RowBox[{"isoclinelabels", "===", "True"}], ",", "\n", "\t", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Text", "[", 
                RowBox[{"var1", ",", 
                 RowBox[{"{", 
                  RowBox[{"#1", ",", "#2"}], "}"}], ",", 
                 RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], "&"}], 
              ",", 
              RowBox[{
               RowBox[{"Text", "[", 
                RowBox[{"var2", ",", 
                 RowBox[{"{", 
                  RowBox[{"#1", ",", "#2"}], "}"}], ",", 
                 RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], "&"}]}],
              "}"}], ",", "\n", "\t", 
            RowBox[{
             RowBox[{"Length", "[", "isoclinelabels", "]"}], "\[Equal]", 
             "2"}], ",", "\n", "\t", "isoclinelabels", ",", "\n", "\t", 
            "Else", ",", "\n", "\t", 
            RowBox[{"{", 
             RowBox[{"None", ",", "None"}], "}"}]}], "\n", "]"}]}], ";", "\n",
          "\n", 
         RowBox[{"(*", " ", 
          RowBox[{
          "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ",
            "in", " ", "guilds"}], " ", "*)"}], "\n", 
         RowBox[{"SetNsp", "[", "traits", "]"}], ";", "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "figure", " ", "out", " ", "what", " ", "are", " ", "the", " ", 
            "components", " ", "on", " ", "the", " ", "x"}], "-", " ", 
           RowBox[{"and", " ", "y"}], "-", "axes"}], " ", "*)"}], "\n", "\n", 
         
         RowBox[{"lookup1", "=", 
          RowBox[{"LookUp", "[", "var1", "]"}]}], ";", "\n", 
         RowBox[{"lookup2", "=", 
          RowBox[{"LookUp", "[", "var2", "]"}]}], ";", "\n", "\n", 
         RowBox[{"eqn1", "=", 
          RowBox[{"eqn", "[", "var1", "]"}]}], ";", "\n", 
         RowBox[{"eqn2", "=", 
          RowBox[{"eqn", "[", "var2", "]"}]}], ";", "\n", "\n", 
         RowBox[{"Which", "[", "\[IndentingNewLine]", "\t", 
          RowBox[{
           RowBox[{
            RowBox[{
            "lookup1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
             "\[Equal]", "\"\<gcomp\>\""}], ",", "\[IndentingNewLine]", "\t", 
           
           RowBox[{"style1", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"isoclinestyle", "===", "Automatic"}], ",", 
              RowBox[{"Prepend", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
                  RowBox[{
                   RowBox[{"color", "[", "var1", "]"}], "[", "0", "]"}]}], 
                 "}"}], ",", 
                RowBox[{"linestyle", "[", "var1", "]"}]}], "]"}], ",", 
              RowBox[{
              "isoclinestyle", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{
            RowBox[{
             RowBox[{
             "lookup1", "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}], "\[Equal]", "\"\<pcomp\>\""}], "||", 
            
            RowBox[{
             RowBox[{
             "lookup1", "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}], "\[Equal]", "\"\<aux\>\""}]}], ",", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{"style1", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"isoclinestyle", "===", "Automatic"}], ",", 
              RowBox[{"Prepend", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
                  RowBox[{"color", "[", "var1", "]"}]}], "}"}], ",", 
                RowBox[{"linestyle", "[", "var1", "]"}]}], "]"}], ",", 
              RowBox[{
              "isoclinestyle", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\n", "\n", 
         RowBox[{"Which", "[", "\[IndentingNewLine]", "\t", 
          RowBox[{
           RowBox[{
            RowBox[{
            "lookup2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
             "\[Equal]", "\"\<gcomp\>\""}], ",", "\[IndentingNewLine]", "\t", 
           
           RowBox[{"style2", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"isoclinestyle", "===", "Automatic"}], ",", 
              RowBox[{"Prepend", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
                  RowBox[{
                   RowBox[{"color", "[", "var2", "]"}], "[", "1", "]"}]}], 
                 "}"}], ",", 
                RowBox[{"linestyle", "[", "var2", "]"}]}], "]"}], ",", 
              RowBox[{
              "isoclinestyle", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{
            RowBox[{
             RowBox[{
             "lookup2", "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}], "\[Equal]", "\"\<pcomp\>\""}], "||", 
            
            RowBox[{
             RowBox[{
             "lookup2", "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}], "\[Equal]", "\"\<aux\>\""}]}], ",", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{"style2", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"isoclinestyle", "===", "Automatic"}], ",", 
              RowBox[{"Prepend", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
                  RowBox[{"color", "[", "var2", "]"}]}], "}"}], ",", 
                RowBox[{"linestyle", "[", "var2", "]"}]}], "]"}], ",", 
              RowBox[{
              "isoclinestyle", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<{style1,style2}=\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"style1", ",", "style2"}], "}"}]}], "]"}], ";"}], 
          "*)"}], "\n", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"subrule", " ", "to", " ", 
           RowBox[{
            RowBox[{"remove", " ", "[", "t", "]"}], "'"}], "s"}], " ", "*)"}],
          "\[IndentingNewLine]", 
         RowBox[{"removets", "=", 
          RowBox[{"Join", "[", 
           RowBox[{"RemovePopts", ",", 
            RowBox[{"{", 
             RowBox[{"t", "\[Rule]", "time"}], "}"}]}], "]"}]}], ";", "\n", 
         "\[IndentingNewLine]", 
         RowBox[{"nonfixedvars", "=", 
          RowBox[{"{", 
           RowBox[{"var1", ",", "var2"}], "}"}]}], ";", "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "look", " ", "for", " ", "aux", " ", "and", " ", "pcomps", " ", 
            "not", " ", "in", " ", "the", " ", "ICs"}], ",", " ", 
           RowBox[{"treat", " ", "as", " ", "fixed", " ", "at", " ", "0"}]}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"Join", "[", 
                 RowBox[{"nonfixedvars", ",", "fixedvars"}], "]"}], ",", 
                "var"}], "]"}]}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"fixed", ",", 
               RowBox[{"var", "\[Rule]", "0"}]}], "]"}]}], "]"}], "\n", ",", 
           RowBox[{"{", 
            RowBox[{"var", ",", "AllVariables"}], "}"}]}], "]"}], ";", "\n", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"g1", "[", 
           RowBox[{"x1_", ",", "x2_"}], "]"}], ":=", 
          RowBox[{"Module", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"popsub", ",", "gres"}], "}"}], ",", "\n", "\t", 
            RowBox[{
             RowBox[{"popsub", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"var1", "\[Rule]", "x1"}], ",", 
                RowBox[{"var2", "\[Rule]", "x2"}]}], "}"}]}], ";", "\n", "\t", 
             RowBox[{"Which", "[", "\n", "\t\t", 
              RowBox[{
               RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], 
               ",", "\n", "\t\t", 
               RowBox[{"If", "[", 
                RowBox[{"percapita", ",", "\n", "\t\t\t", 
                 RowBox[{"gres", "=", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"eqn1", "/", "var1"}], ")"}], "/.", "removets"}], 
                    "/.", "popsub"}], "/.", "fixed"}], "/.", "traits"}]}], 
                 ",", "\n", "\t\t\t", 
                 RowBox[{"gres", "=", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"eqn1", "/.", "removets"}], "/.", "popsub"}], "/.",
                     "fixed"}], "/.", "traits"}]}]}], "\n", "\t\t", "]"}], 
               ",", "\n", "\t\t", 
               RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], ",",
                "\n", "\t\t", 
               RowBox[{"If", "[", 
                RowBox[{"percapita", ",", "\n", "\t\t\t", 
                 RowBox[{"gres", "=", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"eqn1", "/", "var1"}], "-", "1"}], ")"}], "/.", 
                    "removets"}], "/.", "popsub"}], "/.", "fixed"}], "/.", 
                   "traits"}]}], ",", "\n", "\t\t\t", 
                 RowBox[{"gres", "=", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"eqn1", "-", "var1"}], ")"}], "/.", "removets"}], 
                    "/.", "popsub"}], "/.", "fixed"}], "/.", "traits"}]}]}], 
                "\n", "\t\t", "]"}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
             RowBox[{"Return", "[", "gres", "]"}], ";"}]}], "\n", "]"}]}], 
         ";", "\n", "\n", 
         RowBox[{
          RowBox[{"g2", "[", 
           RowBox[{"x1_", ",", "x2_"}], "]"}], ":=", 
          RowBox[{"Module", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"popsub", ",", "gres"}], "}"}], ",", "\n", "\t", 
            RowBox[{
             RowBox[{"popsub", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"var1", "\[Rule]", "x1"}], ",", 
                RowBox[{"var2", "\[Rule]", "x2"}]}], "}"}]}], ";", "\n", "\t", 
             RowBox[{"Which", "[", "\n", "\t\t", 
              RowBox[{
               RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], 
               ",", "\n", "\t\t", 
               RowBox[{"If", "[", 
                RowBox[{"percapita", ",", "\n", "\t\t\t", 
                 RowBox[{"gres", "=", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"eqn2", "/", "var2"}], ")"}], "/.", "removets"}], 
                    "/.", "popsub"}], "/.", "fixed"}], "/.", "traits"}]}], 
                 ",", "\n", "\t\t\t", 
                 RowBox[{"gres", "=", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"eqn2", "/.", "removets"}], "/.", "popsub"}], "/.",
                     "fixed"}], "/.", "traits"}]}]}], "\n", "\t\t", "]"}], 
               ",", "\n", "\t\t", 
               RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], ",",
                "\n", "\t\t", 
               RowBox[{"If", "[", 
                RowBox[{"percapita", ",", "\n", "\t\t\t", 
                 RowBox[{"gres", "=", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"eqn2", "/", "var2"}], "-", "1"}], ")"}], "/.", 
                    "removets"}], "/.", "popsub"}], "/.", "fixed"}], "/.", 
                   "traits"}]}], ",", "\n", "\t\t\t", 
                 RowBox[{"gres", "=", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"eqn2", "-", "var2"}], ")"}], "/.", "removets"}], 
                    "/.", "popsub"}], "/.", "fixed"}], "/.", "traits"}]}]}], 
                "\n", "\t\t", "]"}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
             RowBox[{"Return", "[", "gres", "]"}], ";"}]}], "\n", "]"}]}], 
         ";", "\n", "\n", 
         RowBox[{"contourplotopts", "=", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"ContourShading", "\[Rule]", "None"}], ",", 
               RowBox[{"Options", "[", "PlotEcoIsoclines", "]"}]}], "}"}], 
             "]"}], ",", 
            RowBox[{"Options", "[", "ContourPlot", "]"}]}], "]"}]}], ";", 
         "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", "contourplotopts", "]"}], ";"}], "*)"}], 
         "\n", "\n", 
         RowBox[{"res", "=", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", "\t", 
           RowBox[{
            RowBox[{"ContourPlot", "[", 
             RowBox[{
              RowBox[{"Evaluate", "[", 
               RowBox[{"g1", "[", 
                RowBox[{"x1", ",", "x2"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"x1", ",", 
                RowBox[{"var1min", "-", 
                 RowBox[{"10", "^", 
                  RowBox[{"-", "10"}]}]}], ",", "var1max"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x2", ",", 
                RowBox[{"var2min", "-", 
                 RowBox[{"10", "^", 
                  RowBox[{"-", "10"}]}]}], ",", "var2max"}], "}"}], ",", 
              RowBox[{"ContourStyle", "\[Rule]", "style1"}], ",", 
              RowBox[{"ContourLabels", "\[Rule]", "isoclinelabel1"}], ",", 
              RowBox[{"Contours", "\[Rule]", 
               RowBox[{"{", "0", "}"}]}], ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "contourplotopts"}], "]"}]}], "]"}], 
            ",", "\[IndentingNewLine]", "\t", 
            RowBox[{"ContourPlot", "[", 
             RowBox[{
              RowBox[{"Evaluate", "[", 
               RowBox[{"g2", "[", 
                RowBox[{"x1", ",", "x2"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"x1", ",", 
                RowBox[{"var1min", "-", 
                 RowBox[{"10", "^", 
                  RowBox[{"-", "10"}]}]}], ",", "var1max"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x2", ",", 
                RowBox[{"var2min", "-", 
                 RowBox[{"10", "^", 
                  RowBox[{"-", "10"}]}]}], ",", "var2max"}], "}"}], ",", 
              RowBox[{"ContourStyle", "\[Rule]", "style2"}], ",", 
              RowBox[{"ContourLabels", "\[Rule]", "isoclinelabel2"}], ",", 
              RowBox[{"Contours", "\[Rule]", 
               RowBox[{"{", "0", "}"}]}], ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "contourplotopts"}], "]"}]}], "]"}], 
            ",", "\n", "\t", 
            RowBox[{"FrameLabel", "\[Rule]", "framelabel"}]}], 
           "\[IndentingNewLine]", "]"}]}], ";", "\n", "\[IndentingNewLine]", 
         "\n", 
         RowBox[{"If", "[", 
          RowBox[{"monitor", ",", 
           RowBox[{"NotebookClose", "[", "nb", "]"}]}], "]"}], ";", "\n", 
         "\n", 
         RowBox[{"Return", "[", "res", "]"}]}]}], "\n", "\n", "]"}]}], 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PlotEcoIsoclines", "]"}], "=", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"Monitor", "\[Rule]", "False"}], ",", "\n", "\t", 
     RowBox[{"Time", "\[Rule]", "t"}], ",", 
     RowBox[{"PerCapita", "\[Rule]", "False"}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", "\t", 
     RowBox[{"IsoclineStyle", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"IsoclineLabels", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"ContourShading", "\[Rule]", "False"}], ",", "\n", "\t", 
     RowBox[{"MaxRecursion", "\[Rule]", "3"}], ",", "\n", "\t", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.685643809995679*^9, 3.685643825574583*^9}, {
   3.6856438766622133`*^9, 3.685643914160603*^9}, {3.685644097974908*^9, 
   3.685644101982147*^9}, {3.685644253940529*^9, 3.685644278367207*^9}, {
   3.685644515890668*^9, 3.68564451872266*^9}, 3.68564465090674*^9, {
   3.68564480029346*^9, 3.685644800533059*^9}, {3.685742718338999*^9, 
   3.6857427214497757`*^9}, {3.6857427550054493`*^9, 3.685742786551338*^9}, {
   3.6857430021563272`*^9, 3.685743015311767*^9}, {3.685743466178776*^9, 
   3.685743481267235*^9}, {3.6857442638285303`*^9, 3.685744355393325*^9}, {
   3.6857445099761763`*^9, 3.685744532760133*^9}, {3.685744686089514*^9, 
   3.685744701864175*^9}, {3.6858277894290857`*^9, 3.685827886816392*^9}, {
   3.6858282492149878`*^9, 3.685828280183531*^9}, {3.6874770930388927`*^9, 
   3.687477095689097*^9}, {3.687477802994232*^9, 3.687478037574527*^9}, {
   3.6874780801082907`*^9, 3.68747820687291*^9}, {3.687518334851323*^9, 
   3.687518338887932*^9}, {3.6875183914176283`*^9, 3.687518424230063*^9}, {
   3.687518467518486*^9, 3.687518480622787*^9}, {3.6875185334437323`*^9, 
   3.687518598679419*^9}, {3.687532742928185*^9, 3.6875327567787447`*^9}, {
   3.68753282541737*^9, 3.6875328318536673`*^9}, {3.687533118426897*^9, 
   3.687533166414791*^9}, {3.687542393436866*^9, 3.687542455091648*^9}, {
   3.6875429913568*^9, 3.687542991651691*^9}, {3.687543070644745*^9, 
   3.687543106310964*^9}, {3.687543385673149*^9, 3.6875434142858973`*^9}, {
   3.6875434851045723`*^9, 3.687543588360772*^9}, {3.687543868720428*^9, 
   3.68754392829393*^9}, {3.687553998159532*^9, 3.6875540385987997`*^9}, {
   3.6875973181804123`*^9, 3.6875973198556967`*^9}, {3.68773503250313*^9, 
   3.687735063764392*^9}, {3.687735267286583*^9, 3.6877353352787952`*^9}, {
   3.687735476474908*^9, 3.687735659137683*^9}, {3.687736788178155*^9, 
   3.6877367900493393`*^9}, {3.6877369133372803`*^9, 3.687736961820108*^9}, {
   3.687737020293227*^9, 3.6877370620803328`*^9}, {3.687778760247375*^9, 
   3.6877787968414307`*^9}, {3.687778872195718*^9, 3.687778897092502*^9}, {
   3.687779198733378*^9, 3.6877792054727297`*^9}, {3.6877803280835247`*^9, 
   3.687780420762648*^9}, {3.687780799274612*^9, 3.687780827795121*^9}, {
   3.6877836972144117`*^9, 3.6877837283874702`*^9}, {3.687791140835041*^9, 
   3.687791142985135*^9}, 3.6877916597474213`*^9, {3.6877930385131617`*^9, 
   3.687793048538172*^9}, 3.6877962348460913`*^9, 3.687796497929029*^9, {
   3.6878814521749973`*^9, 3.687881452421238*^9}, {3.6885716880399113`*^9, 
   3.688571688528954*^9}, {3.688571760214572*^9, 3.6885717609171553`*^9}, {
   3.6885718062011766`*^9, 3.688571806383422*^9}, {3.688599547879942*^9, 
   3.688599785336787*^9}, {3.709336758422798*^9, 3.709336761580636*^9}, 
   3.710105966879751*^9, {3.7102555192803507`*^9, 3.710255526836112*^9}, {
   3.71026510272393*^9, 3.710265117987976*^9}, {3.716682607441513*^9, 
   3.716682610476919*^9}, {3.716682777047488*^9, 3.7166828104616747`*^9}, {
   3.7218643066207533`*^9, 3.7218643129983873`*^9}, {3.722026045846417*^9, 
   3.722026046812571*^9}, {3.724635356826954*^9, 3.7246353738527*^9}, {
   3.724635413685772*^9, 3.724635428021679*^9}, {3.724635519728372*^9, 
   3.724635591423319*^9}, {3.7246359249984283`*^9, 3.7246359360344467`*^9}, {
   3.724679285178523*^9, 3.724679290856097*^9}, {3.724679342841666*^9, 
   3.724679343527853*^9}, {3.7246794497936983`*^9, 3.724679452864519*^9}, {
   3.7246795360485163`*^9, 3.7246795721262608`*^9}, {3.724679641692603*^9, 
   3.724679765445298*^9}, {3.724679934070525*^9, 3.724679947811489*^9}, {
   3.724679981369348*^9, 3.724679981765407*^9}, {3.724680127137328*^9, 
   3.7246801326577063`*^9}, {3.7246802122597237`*^9, 3.724680214166258*^9}, {
   3.724680277114874*^9, 3.724680307190291*^9}, {3.7246818913835087`*^9, 
   3.7246819270789757`*^9}, {3.7246823082355347`*^9, 
   3.7246823318010273`*^9}, {3.724682386322551*^9, 3.7246824392099*^9}, {
   3.7246824993943033`*^9, 3.7246825180008297`*^9}, {3.72468255955811*^9, 
   3.724682574546842*^9}, {3.7246826155505257`*^9, 3.724682623187353*^9}, {
   3.724682694160398*^9, 3.724682695349412*^9}, {3.724682735488652*^9, 
   3.72468274333252*^9}, {3.724682788834848*^9, 3.7246827891024323`*^9}, {
   3.724685939196151*^9, 3.724685943937086*^9}, {3.724686023986723*^9, 
   3.7246863647322407`*^9}, {3.724689120535128*^9, 3.7246891918743143`*^9}, {
   3.7246892447735777`*^9, 3.724689285235344*^9}, {3.724689315390934*^9, 
   3.724689395023801*^9}, {3.724691123172984*^9, 3.7246911280035887`*^9}, {
   3.724691188334993*^9, 3.724691209392912*^9}, {3.724691260278693*^9, 
   3.72469127516751*^9}, {3.724691333390449*^9, 3.724691360874257*^9}, {
   3.724691447854918*^9, 3.72469145379948*^9}, {3.7246914845606213`*^9, 
   3.724691488921631*^9}, {3.724691532354995*^9, 3.724691534830917*^9}, {
   3.724691604012216*^9, 3.724691638466146*^9}, {3.7246917001214943`*^9, 
   3.724691705337378*^9}, {3.7246917822108603`*^9, 3.724691794948707*^9}, {
   3.724692165194871*^9, 3.724692177583362*^9}, {3.724692211505939*^9, 
   3.724692227894594*^9}, {3.724692296648322*^9, 3.724692355487042*^9}, {
   3.724692671694655*^9, 3.724692778949725*^9}, {3.724692847231366*^9, 
   3.724692874417882*^9}, {3.724694892089944*^9, 3.724694943302497*^9}, {
   3.724695751991034*^9, 3.724695764145258*^9}, {3.724695810566923*^9, 
   3.724695837271044*^9}, {3.724695890759987*^9, 3.724695905678154*^9}, {
   3.724696007083948*^9, 3.7246960130396347`*^9}, {3.724696054755488*^9, 
   3.724696075854707*^9}, 3.724696565483498*^9, {3.724699352663423*^9, 
   3.724699390443715*^9}, {3.724699420996346*^9, 3.7246994970680237`*^9}, {
   3.72469963887111*^9, 3.7246998500633574`*^9}, {3.7246999821627483`*^9, 
   3.724699990788837*^9}, {3.724700181268652*^9, 3.724700201779248*^9}, {
   3.724700882785591*^9, 3.724700890120352*^9}, {3.7247010290011177`*^9, 
   3.724701030187804*^9}, {3.724701063187467*^9, 3.724701065793262*^9}, 
   3.72470115496354*^9, {3.7247013111492853`*^9, 3.7247013537359877`*^9}, 
   3.72471633405116*^9, {3.7247169295060987`*^9, 3.7247170452853603`*^9}, 
   3.724717214944397*^9, {3.7247182676621647`*^9, 3.7247182757611227`*^9}, 
   3.7247192075415277`*^9, {3.725140958165389*^9, 3.7251409582298803`*^9}, 
   3.725141965342578*^9, {3.728065170460266*^9, 3.728065213238863*^9}, {
   3.728065497708784*^9, 3.728065503225362*^9}, {3.72843393153545*^9, 
   3.728433931720613*^9}, {3.73211087076926*^9, 3.732110875288793*^9}, {
   3.732111006774735*^9, 3.732111023580596*^9}, {3.7321116331403837`*^9, 
   3.732111641791074*^9}, {3.732111748957048*^9, 3.732111753628793*^9}, {
   3.755269538925879*^9, 3.7552696043078947`*^9}, {3.755269656680203*^9, 
   3.755269706986663*^9}, {3.755272941590753*^9, 3.755272941907085*^9}, 
   3.755273111007948*^9, {3.755274140373847*^9, 3.755274149961566*^9}, 
   3.7552741835697937`*^9, {3.755859490243484*^9, 3.755859522045434*^9}, {
   3.7558748712905912`*^9, 3.755874889198101*^9}, {3.755876800468007*^9, 
   3.7558768034885798`*^9}, 3.7558768407065153`*^9, {3.7558825586406937`*^9, 
   3.7558825849378853`*^9}, {3.755979876315333*^9, 3.755979882681978*^9}, {
   3.7559805369649067`*^9, 3.755980542320383*^9}, {3.755980899272872*^9, 
   3.755980907691818*^9}, {3.755981416020363*^9, 
   3.755981423586463*^9}},ExpressionUUID->"ed20a51f-32d7-4df3-b912-\
5c4424333731"]
}, Closed]],

Cell[CellGroupData[{

Cell["PlotEcoStreams", "Subsection",
 CellDingbat->
  "\[ClubSuit]",ExpressionUUID->"b1973ec0-a3b2-4de7-8fe4-47afde6dcc05"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotEcoStreams", "[", 
     RowBox[{
      RowBox[{"traits", ":", 
       RowBox[{"(", 
        RowBox[{"_", "?", "TraitsQ"}], ")"}], ":", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"var1_", ",", 
        RowBox[{"var1min_", "?", "NumericQ"}], ",", 
        RowBox[{"var1max_", "?", "NumericQ"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"var2_", ",", 
        RowBox[{"var2min_", "?", "NumericQ"}], ",", 
        RowBox[{"var2max_", "?", "NumericQ"}]}], "}"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"func", "=", 
         RowBox[{"FuncStyle", "[", "\"\<PlotEcoStreams\>\"", "]"}]}], ",", 
        "\n", 
        RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
        "verboseall", ",", "fixed", ",", "time", ",", "monitor", ",", 
        "framelabel", ",", "streamplotopts", ",", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "fixedvars", 
        ",", "nonfixedvars", ",", "lookup1", ",", "lookup2", ",", "eqn1", ",",
         "eqn2", ",", "g1", ",", "g2", ",", "removets", ",", "res"}], "}"}], 
      ",", "\n", "\n", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "Nsp", "}"}], ",", "\n", "\n", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
           RowBox[{
            RowBox[{"Msg", "[", 
             RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
            RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
         "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
         RowBox[{"verbose", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Verbose", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEcoStreams", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
         RowBox[{"verboseall", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"VerboseAll", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEcoStreams", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"verboseall", ",", 
           RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
         RowBox[{"monitor", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Monitor", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEcoStreams", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"fixed", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Fixed", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEcoStreams", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"fixedvars", "=", 
          RowBox[{"fixed", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
         
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: fixedvars=\>\"", ",", "fixedvars"}], 
            "]"}]}], "]"}], ";", "\n", 
         RowBox[{"time", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Time", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEcoStreams", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"framelabel", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"FrameLabel", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEcoStreams", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"framelabel", "===", "Automatic"}], ",", 
           RowBox[{"framelabel", "=", 
            RowBox[{"{", 
             RowBox[{"var1", ",", "var2"}], "}"}]}]}], "]"}], ";", "\n", 
         RowBox[{"streamplotopts", "=", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"FrameLabel", "\[Rule]", "framelabel"}], ",", "opts", 
               ",", 
               RowBox[{"Options", "[", "PlotEcoStreams", "]"}]}], "}"}], 
             "]"}], ",", 
            RowBox[{"Options", "[", "StreamPlot", "]"}]}], "]"}]}], ";", "\n",
          "\n", 
         RowBox[{"(*", " ", 
          RowBox[{
          "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ",
            "in", " ", "guilds"}], " ", "*)"}], "\n", 
         RowBox[{"SetNsp", "[", "traits", "]"}], ";", "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "figure", " ", "out", " ", "what", " ", "are", " ", "the", " ", 
            "components", " ", "on", " ", "the", " ", "x"}], "-", " ", 
           RowBox[{"and", " ", "y"}], "-", "axes"}], " ", "*)"}], "\n", "\n", 
         
         RowBox[{"lookup1", "=", 
          RowBox[{"LookUp", "[", "var1", "]"}]}], ";", "\n", 
         RowBox[{"lookup2", "=", 
          RowBox[{"LookUp", "[", "var2", "]"}]}], ";", "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", "lookup1", "]"}], ";", 
           RowBox[{"Print", "[", "lookup2", "]"}], ";"}], "*)"}], "\n", "\n", 
         
         RowBox[{"Which", "[", "\n", "\t", 
          RowBox[{
           RowBox[{
            RowBox[{
            "lookup1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
             "\[Equal]", "\"\<gcomp\>\""}], ",", "\n", "\t", 
           RowBox[{"eqn1", "=", 
            RowBox[{
             RowBox[{"gcompeqn", "[", 
              RowBox[{
               RowBox[{
               "lookup1", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}], ",", 
               RowBox[{
               "lookup1", "\[LeftDoubleBracket]", "3", 
                "\[RightDoubleBracket]"}]}], "]"}], "[", 
             RowBox[{
             "lookup1", "\[LeftDoubleBracket]", "4", 
              "\[RightDoubleBracket]"}], "]"}]}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{
            "lookup1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
             "\[Equal]", "\"\<pcomp\>\""}], ",", "\n", "\t", 
           RowBox[{"eqn1", "=", 
            RowBox[{"pcompeqn", "[", 
             RowBox[{
              RowBox[{
              "lookup1", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
              "lookup1", "\[LeftDoubleBracket]", "3", 
               "\[RightDoubleBracket]"}]}], "]"}]}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{
            "lookup1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
             "\[Equal]", "\"\<aux\>\""}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{"eqn1", "=", 
             RowBox[{"auxeqn", "[", 
              RowBox[{
              "lookup1", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}], "]"}]}], ";"}]}], "\n", "]"}], ";", 
         "\n", "\n", 
         RowBox[{"Which", "[", "\n", "\t", 
          RowBox[{
           RowBox[{
            RowBox[{
            "lookup2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
             "\[Equal]", "\"\<gcomp\>\""}], ",", "\n", "\t", 
           RowBox[{"eqn2", "=", 
            RowBox[{
             RowBox[{"gcompeqn", "[", 
              RowBox[{
               RowBox[{
               "lookup2", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}], ",", 
               RowBox[{
               "lookup2", "\[LeftDoubleBracket]", "3", 
                "\[RightDoubleBracket]"}]}], "]"}], "[", 
             RowBox[{
             "lookup2", "\[LeftDoubleBracket]", "4", 
              "\[RightDoubleBracket]"}], "]"}]}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{
            "lookup2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
             "\[Equal]", "\"\<pcomp\>\""}], ",", "\n", "\t", 
           RowBox[{"eqn2", "=", 
            RowBox[{"pcompeqn", "[", 
             RowBox[{
              RowBox[{
              "lookup2", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
              "lookup2", "\[LeftDoubleBracket]", "3", 
               "\[RightDoubleBracket]"}]}], "]"}]}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{
            "lookup2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
             "\[Equal]", "\"\<aux\>\""}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{"eqn2", "=", 
             RowBox[{"auxeqn", "[", 
              RowBox[{
              "lookup2", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}], "]"}]}], ";"}]}], "\n", "]"}], ";", 
         "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"subrule", " ", "to", " ", 
           RowBox[{
            RowBox[{"remove", " ", "[", "t", "]"}], "'"}], "s"}], " ", "*)"}],
          "\n", 
         RowBox[{"removets", "=", 
          RowBox[{"Join", "[", 
           RowBox[{"RemovePopts", ",", 
            RowBox[{"{", 
             RowBox[{"t", "\[Rule]", "time"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "look", " ", "for", " ", "aux", " ", "and", " ", "pcomps", " ", 
            "not", " ", "on", " ", "the", " ", "axes"}], ",", " ", 
           RowBox[{"treat", " ", "as", " ", "fixed", " ", "at", " ", "0"}]}], 
          " ", "*)"}], "\[IndentingNewLine]", "\n", 
         RowBox[{"nonfixedvars", "=", 
          RowBox[{"{", 
           RowBox[{"var1", ",", "var2"}], "}"}]}], ";", "\[IndentingNewLine]",
          "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"Join", "[", 
                 RowBox[{"nonfixedvars", ",", "fixedvars"}], "]"}], ",", 
                RowBox[{"pcomp", "[", 
                 RowBox[{"pop", ",", "pco"}], "]"}]}], "]"}]}], ",", 
             "\[IndentingNewLine]", "\t\t", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"fixed", ",", 
                RowBox[{
                 RowBox[{"pcomp", "[", 
                  RowBox[{"pop", ",", "pco"}], "]"}], "\[Rule]", "0"}]}], 
               "]"}], ";", "\[IndentingNewLine]", "\t\t", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"fixedvars", ",", 
                RowBox[{"pcomp", "[", 
                 RowBox[{"pop", ",", "pco"}], "]"}]}], "]"}]}]}], 
            "\[IndentingNewLine]", "\t", "]"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"pop", ",", "npops"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"pco", ",", 
             RowBox[{"npcomps", "[", "pop", "]"}]}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\n", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"Join", "[", 
                 RowBox[{"nonfixedvars", ",", "fixedvars"}], "]"}], ",", 
                RowBox[{"aux", "[", "au", "]"}]}], "]"}]}], ",", 
             "\[IndentingNewLine]", "\t\t", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"fixed", ",", 
                RowBox[{
                 RowBox[{"aux", "[", "au", "]"}], "\[Rule]", "0"}]}], "]"}], 
              ";", "\[IndentingNewLine]", "\t\t", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"fixedvars", ",", 
                RowBox[{"aux", "[", "au", "]"}]}], "]"}]}]}], 
            "\[IndentingNewLine]", "\t", "]"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"au", ",", "naux"}], "}"}]}], "]"}], ";", "\n", "\n", 
         RowBox[{
          RowBox[{"g1", "[", 
           RowBox[{"x1_", ",", "x2_"}], "]"}], ":=", 
          RowBox[{"Module", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"popsub", ",", "gres"}], "}"}], ",", "\n", "\t", 
            RowBox[{
             RowBox[{"popsub", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"var1", "\[Rule]", "x1"}], ",", 
                RowBox[{"var2", "\[Rule]", "x2"}]}], "}"}]}], ";", "\n", "\t", 
             RowBox[{"Which", "[", "\n", "\t\t", 
              RowBox[{
               RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], 
               ",", "\n", "\t\t", 
               RowBox[{"gres", "=", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"eqn1", "/.", "removets"}], "/.", "popsub"}], "/.",
                   "fixed"}], "/.", "traits"}]}], ",", "\n", "\t\t", 
               RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], ",",
                "\n", "\t\t", 
               RowBox[{"gres", "=", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"eqn1", "-", "var1"}], ")"}], "/.", "removets"}], 
                   "/.", "popsub"}], "/.", "fixed"}], "/.", "traits"}]}]}], 
              "\n", "\t", "]"}], ";", "\n", "\t", 
             RowBox[{"Return", "[", "gres", "]"}], ";"}]}], "\n", "]"}]}], 
         ";", "\n", "\n", 
         RowBox[{
          RowBox[{"g2", "[", 
           RowBox[{"x1_", ",", "x2_"}], "]"}], ":=", 
          RowBox[{"Module", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"popsub", ",", "gres"}], "}"}], ",", "\n", "\t", 
            RowBox[{
             RowBox[{"popsub", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"var1", "\[Rule]", "x1"}], ",", 
                RowBox[{"var2", "\[Rule]", "x2"}]}], "}"}]}], ";", "\n", "\t", 
             RowBox[{"Which", "[", "\n", "\t\t", 
              RowBox[{
               RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], 
               ",", "\n", "\t\t", 
               RowBox[{"gres", "=", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"eqn2", "/.", "removets"}], "/.", "popsub"}], "/.",
                   "fixed"}], "/.", "traits"}]}], ",", "\n", "\t\t", 
               RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], ",",
                "\n", "\t\t", 
               RowBox[{"gres", "=", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"eqn2", "-", "var2"}], ")"}], "/.", "removets"}], 
                   "/.", "popsub"}], "/.", "fixed"}], "/.", "traits"}]}]}], 
              "\n", "\t", "]"}], ";", "\n", "\t", 
             RowBox[{"Return", "[", "gres", "]"}], ";"}]}], "\n", "]"}]}], 
         ";", "\n", "\n", 
         RowBox[{"res", "=", 
          RowBox[{"myStreamPlot", "[", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"g1", "[", 
                RowBox[{"x1", ",", "x2"}], "]"}], ",", 
               RowBox[{"g2", "[", 
                RowBox[{"x1", ",", "x2"}], "]"}]}], "}"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x1", ",", "var1min", ",", "var1max"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x2", ",", "var2min", ",", "var2max"}], "}"}], ",", "\n",
             "\t", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"Sequence", "@@", "streamplotopts"}], "]"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"var1min", ",", "var1max"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"var2min", ",", "var2max"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"FrameLabel", "\[Rule]", "framelabel"}]}], "]"}]}], ";", 
         "\n", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"monitor", ",", 
           RowBox[{"NotebookClose", "[", "nb", "]"}]}], "]"}], ";", "\n", 
         "\n", 
         RowBox[{"Return", "[", "res", "]"}]}]}], "\n", "\n", "]"}]}], 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PlotEcoStreams", "]"}], "=", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"Monitor", "\[Rule]", "False"}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Time", "\[Rule]", "t"}], ",", "\n", "\t", 
     RowBox[{"FrameLabel", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRangePadding", "\[Rule]", 
      RowBox[{"Scaled", "[", "0.02", "]"}]}], ",", 
     RowBox[{"StreamStyle", "\[Rule]", "Gray"}], ",", "\n", "\t", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.685642034763954*^9, 3.685642048029395*^9}, {
   3.685642269148128*^9, 3.6856422763475733`*^9}, {3.6856425003374367`*^9, 
   3.685642505168405*^9}, {3.685642768247654*^9, 3.685642791328006*^9}, {
   3.685642840282954*^9, 3.685642876537305*^9}, {3.685642907650084*^9, 
   3.6856429308454847`*^9}, {3.68564304688663*^9, 3.68564308419993*^9}, {
   3.685643134228608*^9, 3.6856431614026546`*^9}, {3.685643678400509*^9, 
   3.6856436943161783`*^9}, {3.685643763014851*^9, 3.685643765546268*^9}, {
   3.685643866321458*^9, 3.685643867061646*^9}, {3.685659088161305*^9, 
   3.685659088369512*^9}, 3.685659527889512*^9, {3.685659664883092*^9, 
   3.685659665098504*^9}, {3.685802332124545*^9, 3.685802336358173*^9}, {
   3.6858024273090343`*^9, 3.685802432675264*^9}, 3.685802503874124*^9, {
   3.687881452524098*^9, 3.6878814527319613`*^9}, {3.688571688585168*^9, 
   3.688571689029497*^9}, {3.688571760953908*^9, 3.6885717613587112`*^9}, {
   3.6885998421485786`*^9, 3.688599845914815*^9}, {3.688599880681466*^9, 
   3.688600051783716*^9}, {3.688600229126854*^9, 3.688600252198386*^9}, {
   3.688600299150708*^9, 3.688600305881043*^9}, {3.7093367643987103`*^9, 
   3.709336772717918*^9}, 3.710105979596599*^9, {3.710255535668631*^9, 
   3.710255556653246*^9}, 3.71025563044636*^9, {3.710265124075219*^9, 
   3.7102651404568*^9}, {3.722026059038085*^9, 3.722026072936489*^9}, {
   3.722086380354815*^9, 3.722086383233655*^9}, {3.724635945579557*^9, 
   3.7246360175412283`*^9}, {3.724696348602027*^9, 3.724696362745537*^9}, {
   3.7246964199291573`*^9, 3.724696474723278*^9}, {3.724696520761579*^9, 
   3.7246965468016253`*^9}, {3.7246965905778522`*^9, 3.724696597771743*^9}, {
   3.724696633939487*^9, 3.72469666240195*^9}, {3.72469677251581*^9, 
   3.7246967992496223`*^9}, {3.7247009123670263`*^9, 
   3.7247009178135233`*^9}, {3.724701017730152*^9, 3.724701019285043*^9}, {
   3.7247010723739033`*^9, 3.7247010754220867`*^9}, {3.724701132410152*^9, 
   3.724701139934779*^9}, {3.724701229540249*^9, 3.724701235048484*^9}, {
   3.7247012681319027`*^9, 3.724701280496171*^9}, {3.724701366617728*^9, 
   3.7247013667766743`*^9}, {3.724719218806691*^9, 3.7247192215201893`*^9}, {
   3.72514095824282*^9, 3.725140958247514*^9}, 3.725141965356345*^9, 
   3.755273298031662*^9},ExpressionUUID->"ac13ae67-3407-476e-a9cb-\
92a3018c0b8e"]
}, Closed]],

Cell[CellGroupData[{

Cell["PlotEcoPhasePlane", "Subsection",
 CellDingbat->"\[ClubSuit]",
 CellChangeTimes->{{3.724697009975795*^9, 
  3.724697014294662*^9}},ExpressionUUID->"4713f981-ad4b-4882-b792-\
ecc7724d032d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotEcoPhasePlane", "[", 
    RowBox[{
     RowBox[{"traits", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "TraitsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"var1_", ",", 
       RowBox[{"var1min_", "?", "NumericQ"}], ",", 
       RowBox[{"var1max_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"var2_", ",", 
       RowBox[{"var2min_", "?", "NumericQ"}], ",", 
       RowBox[{"var2max_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{"(*", " ", "options", " ", "*)"}], "\n", 
      RowBox[{"plotecoisoclinesopts", ",", "plotecostreamsopts"}], "}"}], ",",
      "\n", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
     RowBox[{
      RowBox[{"plotecoisoclinesopts", "=", 
       RowBox[{"FilterRules", "[", "\n", "\t", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{"PlotEcoIsoclinesOpts", "/.", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"opts", ",", 
                 RowBox[{"Options", "[", "PlotEcoPhasePlane", "]"}]}], "}"}], 
               "]"}]}], "]"}], ",", "opts", ",", 
            RowBox[{"Options", "[", "PlotEcoPhasePlane", "]"}]}], "}"}], 
          "]"}], ",", "\n", "\t", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Options", "[", "PlotEcoIsoclines", "]"}], ",", 
           RowBox[{"Options", "[", "ContourPlot", "]"}]}], "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"plotecostreamsopts", "=", 
       RowBox[{"FilterRules", "[", "\n", "\t", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{"PlotEcoStreamsOpts", "/.", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"opts", ",", 
                 RowBox[{"Options", "[", "PlotEcoPhasePlane", "]"}]}], "}"}], 
               "]"}]}], "]"}], ",", "opts", ",", 
            RowBox[{"Options", "[", "PlotEcoPhasePlane", "]"}]}], "}"}], 
          "]"}], ",", "\n", "\t", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Options", "[", "PlotEcoStreams", "]"}], ",", 
           RowBox[{"Options", "[", "StreamPlot", "]"}]}], "]"}]}], "]"}]}], 
      ";", "\n", "\n", 
      RowBox[{"Return", "[", 
       RowBox[{"Show", "[", "\n", "\t", 
        RowBox[{
         RowBox[{"PlotEcoStreams", "[", 
          RowBox[{"traits", ",", 
           RowBox[{"{", 
            RowBox[{"var1", ",", "var1min", ",", "var1max"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"var2", ",", "var2min", ",", "var2max"}], "}"}], ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"Sequence", "@@", "plotecostreamsopts"}], "]"}]}], 
          RowBox[{"(*", 
           RowBox[{",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"Sequence", "@@", "commonopts"}], "]"}]}], "*)"}], "]"}],
          ",", "\n", "\t", 
         RowBox[{"PlotEcoIsoclines", "[", 
          RowBox[{"traits", ",", 
           RowBox[{"{", 
            RowBox[{"var1", ",", "var1min", ",", "var1max"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"var2", ",", "var2min", ",", "var2max"}], "}"}], ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"Sequence", "@@", "plotecoisoclinesopts"}], "]"}]}], 
          RowBox[{"(*", 
           RowBox[{",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"Sequence", "@@", "commonopts"}], "]"}]}], "*)"}], 
          "]"}]}], "\n", "]"}], "]"}]}]}], "\n", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.724697019447146*^9, 3.7246970213031073`*^9}, {
   3.72469706642633*^9, 3.724697169129353*^9}, {3.724697214664596*^9, 
   3.724697285641739*^9}, {3.7246981011806183`*^9, 3.7246981736502657`*^9}, {
   3.724698239213654*^9, 3.72469856298286*^9}, {3.724698642137356*^9, 
   3.724698644407136*^9}, {3.72470046389673*^9, 3.724700464286851*^9}, {
   3.724700506231979*^9, 3.724700519840026*^9}, {3.724700566433387*^9, 
   3.724700646902779*^9}, {3.724700774292193*^9, 3.724700778871992*^9}, {
   3.724700826917376*^9, 3.724700830923256*^9}, {3.7247009950713873`*^9, 
   3.724700999429072*^9}, {3.724701287371686*^9, 3.724701300580534*^9}, {
   3.724720978370154*^9, 3.724720983308675*^9}, 3.7251409582546988`*^9, {
   3.7321107131733723`*^9, 3.732110713821703*^9}, {3.732111157301447*^9, 
   3.7321111859814863`*^9}, {3.732111364738246*^9, 3.732111382233817*^9}, {
   3.732111462046926*^9, 3.7321114653797913`*^9}, {3.732111532335043*^9, 
   3.7321115523695498`*^9}, {3.732111601249777*^9, 3.732111621041198*^9}},
 CellLabel->
  "In[546]:=",ExpressionUUID->"7faef566-c591-4261-90cc-973189697d42"],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.7321107169700813`*^9, 
  3.732110718791319*^9}},ExpressionUUID->"eb3dc447-3d50-455a-bb21-\
b35edc5108c4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PlotEcoPhasePlane", "]"}], "=", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"Monitor", "\[Rule]", "False"}], ",", "\n", "\t", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Time", "\[Rule]", "t"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", "Automatic"}], ",", "\n", "\t", 
     RowBox[{"PlotEcoIsoclinesOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"PlotEcoStreamsOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", "\t", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellLabel->
  "In[547]:=",ExpressionUUID->"643864bf-f2e3-4316-bccf-fe4449610a62"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["InvSPS: Inv, StablePopulationStructure, ReproductiveValues", \
"Subsection",
 CellDingbat->"\[ClubSuit]",
 CellChangeTimes->{{3.696255630111758*^9, 3.6962556305999393`*^9}, {
  3.758385742350339*^9, 
  3.758385744546867*^9}},ExpressionUUID->"971be81d-214e-436d-8c24-\
fc4fbcfb8815"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"InvSPS", "[", 
    RowBox[{
     RowBox[{"traitsandpops_", "?", "TraitsAndVariablesQ"}], ",", 
     RowBox[{"invaderin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "InvaderQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", 
   RowBox[{"(", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Print", "[", "\"\<** traitsandpops\>\"", "]"}], ";"}], "*)"}], 
    
    RowBox[{"InvSPS", "[", 
     RowBox[{
      RowBox[{"ExtractTraits", "[", "traitsandpops", "]"}], ",", 
      RowBox[{"ExtractVariables", "[", "traitsandpops", "]"}], ",", 
      "invaderin", ",", "opts"}], "]"}], ")"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.72961053794757*^9, {3.729615060055964*^9, 3.729615073016445*^9}, 
   3.7296163819204807`*^9},
 CellLabel->
  "In[548]:=",ExpressionUUID->"81951699-db0d-452a-b292-b21b29d982c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"InvSPS", "[", 
    RowBox[{
     RowBox[{"traitsin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "NotInvaderTraitsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"solin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"invaderin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "InvaderQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<InvSPS\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "method", ",", "\n", "guild", ",", "time", ",", 
       "simplifyresult", ",", "frominv", ",", "rv", ",", "qssics", ",", "\n", 
       "ndsolveopts", ",", "qssmethod", ",", "nintegrateopts", ",", 
       "integrateopts", ",", "solveopts", ",", "nsolveopts", ",", 
       "findrootopts", ",", "findecocycleopts", ",", "eigensystemopts", ",", 
       "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "invader", 
       ",", "traits", ",", "invtraits", ",", "pcomps", ",", "pops", ",", "\n",
        "invtype", ",", "invnum", ",", "zeropcomps", ",", "sol", ",", "\n", 
       "inveqns", ",", "invunks", ",", "qsseqns", ",", "qssunks", ",", 
       "qsssubs", ",", "mode", ",", "\n", "tstart", ",", "tend", ",", 
       "removets", ",", "qsssol", ",", "eval", ",", "evec", ",", "invsol", 
       ",", "j", ",", "tempIF"}], "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "Nsp", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Msg", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"$invcount", "++"}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"increment", " ", "$invcount"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", "invaderin", "]"}], ";"}], "*)"}], "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"OptionValue", "[", "Verbose", "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"OptionValue", "[", "VerboseAll", "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"method", "=", 
         RowBox[{"OptionValue", "[", "Method", "]"}]}], ";", "\n", 
        RowBox[{"time", "=", 
         RowBox[{"OptionValue", "[", "Time", "]"}]}], ";", "\n", 
        RowBox[{"qssmethod", "=", 
         RowBox[{"OptionValue", "[", "QSSMethod", "]"}]}], ";", " ", "\n", 
        RowBox[{"ndsolveopts", "=", 
         RowBox[{"OptionValue", "[", "NDSolveOpts", "]"}]}], ";", "\n", 
        RowBox[{"nintegrateopts", "=", 
         RowBox[{"OptionValue", "[", "NIntegrateOpts", "]"}]}], ";", "\n", 
        RowBox[{"integrateopts", "=", 
         RowBox[{"OptionValue", "[", "IntegrateOpts", "]"}]}], ";", "\n", 
        RowBox[{"solveopts", "=", 
         RowBox[{"OptionValue", "[", "SolveOpts", "]"}]}], ";", "\n", 
        RowBox[{"nsolveopts", "=", 
         RowBox[{"OptionValue", "[", "NSolveOpts", "]"}]}], ";", "\n", 
        RowBox[{"findrootopts", "=", 
         RowBox[{"OptionValue", "[", "FindRootOpts", "]"}]}], ";", "\n", 
        RowBox[{"findecocycleopts", "=", 
         RowBox[{"OptionValue", "[", "FindEcoCycleOpts", "]"}]}], ";", "\n", 
        RowBox[{"eigensystemopts", "=", 
         RowBox[{"OptionValue", "[", "EigensystemOpts", "]"}]}], ";", "\n", 
        RowBox[{"simplifyresult", "=", 
         RowBox[{"OptionValue", "[", "SimplifyResult", "]"}]}], ";", "\n", 
        RowBox[{"guild", "=", 
         RowBox[{"OptionValue", "[", "Guild", "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"guild", "===", "Automatic"}], ",", 
          RowBox[{"guild", "=", 
           RowBox[{
            RowBox[{"Append", "[", 
             RowBox[{"guilds", ",", "1"}], "]"}], "\[LeftDoubleBracket]", "1",
             "\[RightDoubleBracket]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"frominv", "=", 
         RowBox[{"OptionValue", "[", "FromInv", "]"}]}], ";", "\n", 
        RowBox[{"rv", "=", 
         RowBox[{"OptionValue", "[", "RV", "]"}]}], ";", "\n", 
        RowBox[{"qssics", "=", 
         RowBox[{"OptionValue", "[", "QSSICs", "]"}]}], ";", "\n", "\n", 
        RowBox[{"pcomps", "=", 
         RowBox[{"ExtractPops", "[", "solin", "]"}]}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"traits", "=", 
         RowBox[{"ExpandNspInTraits", "[", "traitsin", "]"}]}], ";", "\n", 
        RowBox[{"pops", "=", 
         RowBox[{"ExpandNspInPops", "[", "solin", "]"}]}], ";", "\n", 
        RowBox[{"SetNsp", "[", 
         RowBox[{"traits", ",", "pops"}], "]"}], ";", "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<traits=\>\"", ",", "traits"}], "]"}], ";"}], "*)"}], 
        "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"assemble", " ", 
          RowBox[{"sol", " ", "[", 
           RowBox[{"resident", " ", "state"}], "]"}]}], " ", "*)"}], "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"in", " ", "case", " ", "any", " ", "pops", " ", 
           RowBox[{"weren", "'"}], "t", " ", "given"}], ",", " ", 
          RowBox[{"assume", " ", 
           RowBox[{"they", "'"}], "re", " ", "0"}]}], " ", "*)"}], "\n", 
        RowBox[{"zeropcomps", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"pcomptype", "[", 
                  RowBox[{"pop", ",", "pco"}], "]"}], "\[Equal]", 
                 "\"\<Extensive\>\""}], ",", 
                RowBox[{
                 RowBox[{"pcomp", "[", 
                  RowBox[{"pop", ",", "pco"}], "]"}], "\[Rule]", "0"}], ",", 
                RowBox[{
                 RowBox[{"pcomp", "[", 
                  RowBox[{"pop", ",", "pco"}], "]"}], "\[Rule]", 
                 RowBox[{"pcomp", "[", 
                  RowBox[{"pop", ",", "pco"}], "]"}]}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"pco", ",", 
                RowBox[{"npcomps", "[", "pop", "]"}]}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"pop", ",", "npops"}], "}"}]}], "]"}], "]"}]}], ";", 
        "\n", 
        RowBox[{"sol", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"pops", ",", "zeropcomps"}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"if", " ", "a", " ", "time", " ", "given"}], ",", " ", 
          RowBox[{"evaluate", " ", "sol", " ", "there"}]}], " ", "*)"}], "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"time", "=!=", "t"}], "&&", 
           RowBox[{"!", 
            RowBox[{"NumericRuleListQ", "[", "sol", "]"}]}]}], ",", 
          RowBox[{"sol", "=", 
           RowBox[{"Slice", "[", 
            RowBox[{"sol", ",", "time"}], "]"}]}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: sol=\>\"", ",", "sol"}], "]"}]}], 
         "]"}], ";", "\n", "\n", 
        RowBox[{"invader", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "invaderin", "}"}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{"(*", " ", 
          RowBox[{"no", " ", "invader", " ", "given"}], " ", "*)"}], "\n", 
         "\t", 
         RowBox[{
          RowBox[{"invader", "===", 
           RowBox[{"{", "}"}]}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"Global`debug", ",", 
             RowBox[{"Print", "[", "\"\<no invader given\>\"", "]"}]}], "]"}],
            ";", "\n", "\t", 
           RowBox[{"Which", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{"nguilds", "\[NotEqual]", "0"}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"invtype", ",", "invnum"}], "}"}], "=", 
              RowBox[{"{", 
               RowBox[{"\"\<guild\>\"", ",", "guild"}], "}"}]}], ",", "\n", 
             "\t\t", 
             RowBox[{"npops", "\[NotEqual]", "0"}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"invtype", ",", "invnum"}], "}"}], "=", 
              RowBox[{"{", 
               RowBox[{"\"\<pop\>\"", ",", "1"}], "}"}]}]}], "\n", "\t", 
            "]"}]}], "\n", ",", "\n", "\t", 
          RowBox[{"(*", " ", 
           RowBox[{"guild", " ", "invader"}], " ", "*)"}], "\n", "\t", 
          RowBox[{"RuleListQ", "[", "invader", "]"}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"Global`debug", ",", 
             RowBox[{"Print", "[", "\"\<guild invader\>\"", "]"}]}], "]"}], 
           ";", "\n", "\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"invtype", ",", "invnum"}], "}"}], "=", 
            RowBox[{"{", 
             RowBox[{"\"\<guild\>\"", ",", 
              RowBox[{
               RowBox[{"LookUp", "[", 
                RowBox[{"invader", "\[LeftDoubleBracket]", 
                 RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], 
               "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
             "}"}]}]}], "\n", ",", "\n", "\t", 
          RowBox[{"(*", " ", 
           RowBox[{"pop", " ", "invader"}], " ", "*)"}], "\n", "\t", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"LookUp", "[", 
              RowBox[{
              "invader", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}], "]"}], "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}], "\[Equal]", "\"\<pop\>\""}], "||", 
           RowBox[{
            RowBox[{
             RowBox[{"LookUp", "[", 
              RowBox[{
              "invader", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}], "]"}], "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}], "\[Equal]", "\"\<pcomp\>\""}]}], ",", 
          "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"Global`debug", ",", 
             RowBox[{"Print", "[", "\"\<pop invader\>\"", "]"}]}], "]"}], ";",
            "\n", "\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"invtype", ",", "invnum"}], "}"}], "=", 
            RowBox[{"{", 
             RowBox[{"\"\<pop\>\"", ",", 
              RowBox[{
               RowBox[{"LookUp", "[", 
                RowBox[{
                "invader", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "]"}], "\[LeftDoubleBracket]", 
               "2", "\[RightDoubleBracket]"}]}], "}"}]}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"pcomptype", "[", 
                    RowBox[{"invnum", ",", "pco"}], "]"}], "\[Equal]", 
                    "\"\<Extensive\>\""}], ",", 
                    RowBox[{"pcomp", "[", 
                    RowBox[{"invnum", ",", "pco"}], "]"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"pco", ",", 
                    RowBox[{"npcomps", "[", "invnum", "]"}]}], "}"}]}], "]"}],
                 "/.", "pcomps"}], "]"}], ">", "0"}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"Msg", "[", 
               RowBox[{"InvSPS", "::", "nonzero"}], "]"}], ";", 
              RowBox[{"Abort", "[", "]"}]}]}], "]"}]}], "\n", ",", "\n", "\t",
           "Else", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Msg", "[", 
            RowBox[{"InvSPS", "::", "unkinv"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "\n", "]"}], ";", 
        "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: {invtype,invnum}=\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"invtype", ",", "invnum"}], "}"}]}], "]"}]}], "]"}], ";",
         "\n", "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"invtype", "\[Equal]", "\"\<pop\>\""}], ",", 
          RowBox[{"invtraits", "=", 
           RowBox[{"{", "}"}]}], ",", "\n", "\t", 
          RowBox[{"invtype", "\[Equal]", "\"\<guild\>\""}], ",", 
          RowBox[{"invtraits", "=", 
           RowBox[{"ExtractTraits", "[", "invader", "]"}]}]}], "\n", "]"}], 
        ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<invtraits=\>\"", ",", "invtraits"}], "]"}]}], "]"}], 
        ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"set", " ", "up", " ", "inveqns"}], ",", " ", "invunks", 
          ",", " ", 
          RowBox[{"qss", " ", "stuff"}]}], " ", "*)"}], "\n", "\n", 
        RowBox[{"inveqns", "=", 
         RowBox[{"{", "}"}]}], ";", "\n", 
        RowBox[{"invunks", "=", 
         RowBox[{"{", "}"}]}], ";", "\n", 
        RowBox[{"qsssubs", "=", 
         RowBox[{"{", "}"}]}], ";", "\n", 
        RowBox[{"qsseqns", "=", 
         RowBox[{"{", "}"}]}], ";", "\n", 
        RowBox[{"qssunks", "=", 
         RowBox[{"{", "}"}]}], ";", "\n", "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{"(*", " ", 
          RowBox[{"guild", " ", "invader"}], " ", "*)"}], "\n", "\t", 
         RowBox[{
          RowBox[{"invtype", "\[Equal]", "\"\<guild\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Do", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"gcomptype", "[", 
                  RowBox[{"invnum", ",", "co"}], "]"}], "\[Equal]", 
                 "\"\<Extensive\>\""}], ",", "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"inveqns", ",", 
                   RowBox[{
                    RowBox[{"gcompeqn", "[", 
                    RowBox[{"invnum", ",", "co"}], "]"}], "[", "0", "]"}]}], 
                  "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"invunks", ",", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"gcomp", "[", 
                    RowBox[{"invnum", ",", "co"}], "]"}], ",", "0"}], "]"}]}],
                   "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"qsssubs", ",", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"gcomp", "[", 
                    RowBox[{"invnum", ",", "co"}], "]"}], ",", "0"}], "]"}], 
                    "\[Rule]", "0"}]}], "]"}], ";"}]}], "\n", "\t\t", "]"}], 
              ";", "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"gcomptype", "[", 
                  RowBox[{"invnum", ",", "co"}], "]"}], "\[Equal]", 
                 "\"\<Intensive\>\""}], ",", "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"qsseqns", ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"gcompeqn", "[", 
                    RowBox[{"invnum", ",", "co"}], "]"}], "[", "0", "]"}], 
                    "\[Equal]", "0"}]}], "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"qssmethod", "\[Equal]", "\"\<FindRoot\>\""}], ",",
                    "\n", "\t\t\t\t", 
                   RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"qssunks", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"gcomp", "[", 
                    RowBox[{"invnum", ",", "co"}], "]"}], ",", "0"}], "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"gcomprange", "[", 
                    RowBox[{"invnum", ",", "co"}], "]"}], "]"}], "+", 
                    "0.01"}]}], "}"}]}], "]"}], ";"}], ",", "\n", "\t\t\t\t", 
                   
                   RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"qssunks", ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"gcomp", "[", 
                    RowBox[{"invnum", ",", "co"}], "]"}], ",", "0"}], "]"}]}],
                     "]"}], ";"}]}], "\n", "\t\t\t", "]"}], ";"}]}], "\n", 
               "\t\t", "]"}], ";"}], "\n", "\t", ",", 
             RowBox[{"{", 
              RowBox[{"co", ",", 
               RowBox[{"ngcomps", "[", "invnum", "]"}]}], "}"}]}], "]"}], 
           ";"}], "\n", ",", "\n", "\t", 
          RowBox[{"(*", " ", 
           RowBox[{"pop", " ", "invader"}], " ", "*)"}], "\n", "\t", 
          RowBox[{"invtype", "\[Equal]", "\"\<pop\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Do", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"pcomptype", "[", 
                  RowBox[{"invnum", ",", "pco"}], "]"}], "\[Equal]", 
                 "\"\<Extensive\>\""}], ",", "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"inveqns", ",", 
                   RowBox[{"pcompeqn", "[", 
                    RowBox[{"invnum", ",", "pco"}], "]"}]}], "]"}], ";", "\n",
                  "\t\t\t", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"invunks", ",", 
                   RowBox[{"pcomp", "[", 
                    RowBox[{"invnum", ",", "pco"}], "]"}]}], "]"}], ";", "\n",
                  "\t\t\t", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"qsssubs", ",", 
                   RowBox[{
                    RowBox[{"pcomp", "[", 
                    RowBox[{"invnum", ",", "pco"}], "]"}], "\[Rule]", "0"}]}],
                   "]"}], ";"}]}], "\n", "\t\t", "]"}], ";", "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"pcomptype", "[", 
                  RowBox[{"invnum", ",", "pco"}], "]"}], "\[Equal]", 
                 "\"\<Intensive\>\""}], ",", "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"qsseqns", ",", 
                   RowBox[{
                    RowBox[{"pcompeqn", "[", 
                    RowBox[{"invnum", ",", "pco"}], "]"}], "\[Equal]", 
                    "0"}]}], "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"qssmethod", "\[Equal]", "\"\<FindRoot\>\""}], ",",
                    "\n", "\t\t\t\t", 
                   RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"qssunks", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"pcomp", "[", 
                    RowBox[{"invnum", ",", "pco"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"pcomprange", "[", 
                    RowBox[{"invnum", ",", "pco"}], "]"}], "]"}], "+", 
                    "0.01"}]}], "}"}]}], "]"}], ";"}], ",", "\n", "\t\t\t\t", 
                   
                   RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"qssunks", ",", 
                    RowBox[{"pcomp", "[", 
                    RowBox[{"invnum", ",", "pco"}], "]"}]}], "]"}], ";"}]}], 
                  "\n", "\t\t\t", "]"}], ";"}]}], "\n", "\t\t", "]"}], ";"}], 
             "\n", "\t", ",", 
             RowBox[{"{", 
              RowBox[{"pco", ",", 
               RowBox[{"npcomps", "[", "invnum", "]"}]}], "}"}]}], "]"}], 
           ";"}]}], "\t", "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: inveqns=\>\"", ",", "inveqns"}], 
            "]"}], ";", "\n", "\t", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: invunks=\>\"", ",", "invunks"}], 
            "]"}], ";", "\n", "\t", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: qsseqns=\>\"", ",", "qsseqns"}], 
            "]"}], ";", "\n", "\t", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: qsssubs=\>\"", ",", "qsssubs"}], 
            "]"}], ";", "\n", "\t", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: qssunks=\>\"", ",", "qssunks"}], 
            "]"}]}]}], "\n", "]"}], ";", "\n", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"decide", " ", "on", " ", "mode"}], " ", "*)"}], "\n", "\n", 
        
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"modelperiod", "\[Equal]", "0"}], "&&", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "sol", "]"}], "\[Equal]", "0"}], "||", 
               
               RowBox[{"!", 
                RowBox[{"MemberQ", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"InterpolatingFunction", ",", "TemporalData"}], 
                   "}"}], ",", 
                  RowBox[{"Head", "[", 
                   RowBox[{"sol", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], 
                   "]"}]}], "]"}]}]}], ")"}]}], ")"}], "\n", "\t", "||", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"modelperiod", "=!=", "0"}], "&&", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"method", "===", "\"\<Instantaneous\>\""}], "||", 
               RowBox[{"time", "=!=", "t"}]}], ")"}]}], ")"}]}], ",", "\n", 
          "\t", 
          RowBox[{"mode", "=", "\"\<eigenvalue\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], "&&", 
           "\n", "\t", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"modelperiod", "=!=", "0"}], "&&", 
               RowBox[{"method", "=!=", "\"\<Instantaneous\>\""}], "&&", 
               RowBox[{"time", "===", "t"}]}], ")"}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "sol", "]"}], ">", "0"}], "&&", 
               RowBox[{
                RowBox[{"Head", "[", 
                 RowBox[{"sol", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], "===",
                 "InterpolatingFunction"}]}], ")"}]}], ")"}]}], ",", "\n", 
          "\t", 
          RowBox[{"mode", "=", "\"\<continuoustime floquet\>\""}], ",", "\n", 
          "\t", 
          RowBox[{
           RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], "&&", 
           "\n", "\t", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"modelperiod", "=!=", "0"}], "&&", 
               RowBox[{"method", "=!=", "\"\<Instantaneous\>\""}], "&&", 
               RowBox[{"time", "===", "t"}]}], ")"}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "sol", "]"}], ">", "0"}], "&&", 
               RowBox[{
                RowBox[{"Head", "[", 
                 RowBox[{"sol", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], "===",
                 "TemporalData"}]}], ")"}]}], ")"}]}], ",", "\n", "\t", 
          RowBox[{"mode", "=", "\"\<discretetime floquet\>\""}]}], "\n", 
         "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: mode=\>\"", ",", "mode"}], "]"}], 
          ";"}], "*)"}], "\n", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"calculate", " ", "invasion", " ", "fitness"}], " ", "*)"}], 
        "\n", "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{"(*", " ", 
          RowBox[{"ContinuousTime", " ", "Floquet", " ", "mode"}], " ", 
          "*)"}], "\n", "\t", 
         RowBox[{
          RowBox[{"mode", "\[Equal]", "\"\<continuoustime floquet\>\""}], ",",
           "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: ContinuousTime Floquet mode\>\""}], 
              "]"}]}], "]"}], ";", "\n", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{"figure", " ", "out", " ", "period"}], " ", "*)"}], "\n", 
           "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"sol", "\[NotEqual]", 
               RowBox[{"{", "}"}]}], "&&", 
              RowBox[{
               RowBox[{"Head", "[", 
                RowBox[{"sol", "\[LeftDoubleBracket]", 
                 RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], "===",
                "InterpolatingFunction"}]}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"tstart", ",", "tend"}], "}"}], "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"InitialTime", "[", "sol", "]"}], ",", 
                RowBox[{"FinalTime", "[", "sol", "]"}]}], "}"}]}], ",", "\n", 
             "\t\t", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"tstart", ",", "tend"}], "}"}], "=", 
              RowBox[{"{", 
               RowBox[{"0", ",", "modelperiod"}], "}"}]}]}], "\n", "\t", 
            "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"Global`debug", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: {tstart,tend}=\>\"", ",", 
               RowBox[{"{", 
                RowBox[{"tstart", ",", "tend"}], "}"}]}], "]"}]}], "]"}], ";",
            "\n", "\t", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "are", " ", "there", " ", "any", " ", "Intensive", " ", 
             "components", " ", "to", " ", "be", " ", "solved", " ", 
             RowBox[{"for", "?"}]}], " ", "*)"}], "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "qssunks", "]"}], ">", "0"}], ",", "\n", 
             "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"qssics", "===", "Automatic"}], ",", " ", 
                RowBox[{"(*", " ", 
                 RowBox[{
                 "then", " ", "average", " ", "corresponding", " ", 
                  "components", " ", "from", " ", "residents"}], " ", "*)"}], 
                "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"qssics", "=", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"qssunk", "\[Rule]", "\n", "\t\t\t\t", 
                    RowBox[{"Mean", "[", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"FinalSlice", "[", "sol", "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "0"}], "\[RightDoubleBracket]"}], 
                    "\[Equal]", "Subscript"}], ")"}], "&"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "\[Equal]", 
                    RowBox[{
                    "qssunk", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ")"}], "&"}]}], "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], 
                    "]"}]}], "\n", "\t\t\t", ",", 
                    RowBox[{"{", 
                    RowBox[{"qssunk", ",", "qssunks"}], "}"}]}], "]"}]}], 
                 ";"}]}], "\n", "\t\t", "]"}], ";", "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", "\n", "\t\t\t", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"tr", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"traits", ",", "invtraits"}], "]"}]}], ",", 
                    RowBox[{"ic", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"FinalSlice", "[", "sol", "]"}], ",", "qssics"}], 
                    "]"}]}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "findecocycleopts"}]}]}], "}"}],
                   ",", "\n", "\t\t\t", 
                  RowBox[{"PrintCall", "[", 
                   RowBox[{"Global`qsssol", "=", 
                    RowBox[{"FindEcoCycle", "[", 
                    RowBox[{"tr", ",", "ic", ",", "op"}], "]"}]}], "]"}]}], 
                 "\n", "\t\t", "]"}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{"qsssol", "=", 
               RowBox[{"FindEcoCycle", "[", 
                RowBox[{
                 RowBox[{"Join", "[", 
                  RowBox[{"traits", ",", "invtraits"}], "]"}], ",", 
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{"FinalSlice", "[", "sol", "]"}], ",", "qssics"}], 
                  "]"}], ",", 
                 RowBox[{"Sequence", "@@", "findecocycleopts"}]}], "]"}]}], 
              ";", "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"qsssol", "\[Equal]", "$Failed"}], ",", 
                RowBox[{
                 RowBox[{"Msg", "[", 
                  RowBox[{"InvSPS", "::", "noqsssol"}], "]"}], ";", 
                 RowBox[{"Return", "[", 
                  RowBox[{"{", "$Failed", "}"}], "]"}]}]}], "]"}], ";"}], 
             "\n", "\t", ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", 
                RowBox[{"PrintCall", "[", 
                 RowBox[{"Global`qsssol", "=", 
                  RowBox[{"{", "}"}]}], "]"}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{"qsssol", "=", 
               RowBox[{"{", "}"}]}]}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"Global`debug", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: qsssol=\>\"", ",", "qsssol"}], 
              "]"}]}], "]"}], ";", "\n", "\n", "\t", 
           RowBox[{"removets", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{
                  RowBox[{"x_", "/;", 
                   RowBox[{
                    RowBox[{"type", "[", "x", "]"}], "\[Equal]", 
                    "\"\<Extensive\>\""}]}], ",", "0"}], "]"}], "[", "t", 
                "]"}], "\[Rule]", 
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", "0"}], "]"}]}], ",", 
              RowBox[{"t", "\[Rule]", "time"}]}], "}"}]}], ";", "\n", "\n", 
           "\t", 
           RowBox[{"Which", "[", "\n", "\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{"one", " ", "extensive", " ", 
              RowBox[{"component", ":", " ", 
               RowBox[{"use", " ", "log", " ", "pop", " ", "eqn"}]}]}], " ", 
             "*)"}], "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "invunks", "]"}], "\[Equal]", "1"}], ",",
              "\n", "\t\t", 
             RowBox[{
              RowBox[{"Which", "[", "\n", "\t\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{"method", "===", "Automatic"}], "||", 
                 RowBox[{"method", "\[Equal]", "\"\<NIntegrate\>\""}]}], ",", 
                "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{"Global`debug", ",", 
                   RowBox[{"Print", "[", 
                    RowBox[{
                    "func", ",", 
                    "\"\<: ContinuousTime Floquet mode (1 comp): NIntegrate\>\
\""}], "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"Print", "[", "invtraits", "]"}], ";", "\n", 
                   "\t\t\t", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"invtraits", "===", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{
                    RowBox[{"Msg", "[", 
                    RowBox[{"InvSPS", "::", "notraits"}], "]"}], ";", 
                    RowBox[{"Return", "[", 
                    RowBox[{"{", 
                    RowBox[{"$Failed", ",", "$Failed"}], "}"}], "]"}]}]}], 
                    "]"}], ";"}], "*)"}], "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"verbose", ",", "\n", "\t\t\t\t", 
                   RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"eq", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cancel", "[", 
                    RowBox[{
                    RowBox[{
                    "inveqns", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    RowBox[{
                    "invunks", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "[", "t", "]"}]}], "]"}], "/.",
                     "removets"}], "/.", "traits"}], "/.", "invtraits"}]}], 
                    ",", "\n", "\t\t\t\t", 
                    RowBox[{"tstart", "=", "tstart"}], ",", 
                    RowBox[{"tend", "=", "tend"}], ",", 
                    RowBox[{"dt", "=", 
                    RowBox[{"tend", "-", "tstart"}]}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "nintegrateopts"}]}]}], "}"}], 
                    ",", "\n", "\t\t\t\t", 
                    RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`eval", "=", 
                    RowBox[{
                    RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"eq", "/.", "Global`sol"}], "/.", 
                    "Global`qsssol"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "tstart", ",", "tend"}], "}"}], ",", 
                    "op"}], "]"}], "/", "dt"}]}], "]"}]}], "\n", "\t\t\t", 
                    "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"eval", "=", 
                  RowBox[{
                   RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cancel", "[", 
                    RowBox[{
                    RowBox[{
                    "inveqns", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    RowBox[{
                    "invunks", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "[", "t", "]"}]}], "]"}], "/.",
                     "removets"}], "/.", "traits"}], "/.", "invtraits"}], "/.",
                     "sol"}], "/.", "qsssol"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "tstart", ",", "tend"}], "}"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "nintegrateopts"}], "]"}]}], 
                    "]"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"tend", "-", "tstart"}], ")"}]}]}], ";", "\n", 
                 "\t\t\t", 
                 RowBox[{"Return", "[", 
                  RowBox[{"{", 
                   RowBox[{"eval", ",", "\"\<?\>\""}], "}"}], "]"}]}], "\n", 
                "\t\t\t", ",", "\n", "\t\t\t", 
                RowBox[{"method", "\[Equal]", "\"\<NDSolve\>\""}], ",", "\n", 
                "\t\t\t", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{"Global`debug", ",", 
                   RowBox[{"Print", "[", 
                    RowBox[{
                    "func", ",", 
                    "\"\<: ContinuousTime Floquet mode (1 comp): \
NDSolve\>\""}], "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"verbose", ",", "\n", "\t\t\t\t", 
                   RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"eq", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cancel", "[", 
                    RowBox[{
                    RowBox[{
                    "inveqns", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    RowBox[{
                    "invunks", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "[", "t", "]"}]}], "]"}], "/.",
                     "removets"}], "/.", "traits"}], "/.", "invtraits"}], "/.",
                     "sol"}]}], ",", "\n", "\t\t\t\t", 
                    RowBox[{"tstart", "=", "tstart"}], ",", 
                    RowBox[{"tend", "=", "tend"}], ",", 
                    RowBox[{"dt", "=", 
                    RowBox[{"tend", "-", "tstart"}]}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "ndsolveopts"}]}]}], "}"}], ",",
                     "\n", "\t\t\t\t", 
                    RowBox[{
                    RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`invsol", "=", 
                    RowBox[{"NDSolve", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Global`x", "'"}], "[", "t", "]"}], "\[Equal]", 
                    "eq"}], "/.", "Global`qsssol"}], ",", 
                    RowBox[{
                    RowBox[{"Global`x", "[", "tstart", "]"}], "\[Equal]", 
                    "0"}]}], "}"}], ",", "Global`x", ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "tstart", ",", "tend"}], "}"}], ",", 
                    "op"}], "]"}]}], "]"}], ";", "\n", "\t\t\t\t", 
                    RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`eval", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Global`x", "[", "tend", "]"}], "/", "dt"}], "/.",
                     "Global`invsol"}]}], "]"}]}]}], "\n", "\t\t\t", "]"}]}], 
                  "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"invsol", "=", 
                  RowBox[{
                   RowBox[{"NDSolve", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "'"}], "[", "t", "]"}], "\[Equal]", 
                    RowBox[{"Cancel", "[", 
                    RowBox[{
                    RowBox[{
                    "inveqns", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    RowBox[{
                    "invunks", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "[", "t", "]"}]}], "]"}]}], "/.",
                     "removets"}], "/.", "traits"}], "/.", "invtraits"}], "/.",
                     "sol"}], "/.", "qsssol"}], ",", 
                    RowBox[{
                    RowBox[{"x", "[", "tstart", "]"}], "\[Equal]", "0"}]}], 
                    "}"}], ",", "x", ",", "\n", "\t\t\t\t", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "tstart", ",", "tend"}], "}"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "ndsolveopts"}], "]"}]}], "]"}],
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                 ";", "\n", "\t\t\t", 
                 RowBox[{"eval", "=", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"x", "[", "tend", "]"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"tend", "-", "tstart"}], ")"}]}], "/.", 
                   "invsol"}]}], ";", "\n", "\t\t\t", 
                 RowBox[{"Return", "[", 
                  RowBox[{"{", 
                   RowBox[{"eval", ",", "\"\<?\>\""}], "}"}], "]"}], ";"}], 
                "\n", "\t\t\t", ",", "\n", "\t\t\t", 
                RowBox[{"method", "\[Equal]", "\"\<Integrate\>\""}], ",", 
                "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{"Global`debug", ",", 
                   RowBox[{"Print", "[", 
                    RowBox[{
                    "func", ",", 
                    "\"\<: ContinuousTime Floquet mode (1 comp): \
Integrate\>\""}], "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"verbose", ",", "\n", "\t\t\t\t", 
                   RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"eq", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cancel", "[", 
                    RowBox[{
                    RowBox[{
                    "inveqns", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    RowBox[{
                    "invunks", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "[", "t", "]"}]}], "]"}], "/.",
                     "removets"}], "/.", "traits"}], "/.", "invtraits"}], "/.",
                     "sol"}]}], ",", "\n", "\t\t\t\t", 
                    RowBox[{"tstart", "=", "tstart"}], ",", 
                    RowBox[{"tend", "=", "tend"}], ",", 
                    RowBox[{"dt", "=", 
                    RowBox[{"tend", "-", "tstart"}]}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "integrateopts"}]}]}], "}"}], 
                    ",", "\n", "\t\t\t\t", 
                    RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`eval", "=", 
                    RowBox[{
                    RowBox[{"Integrate", "[", 
                    RowBox[{
                    RowBox[{"eq", "/.", "Global`qsssol"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "tstart", ",", "tend"}], "}"}], ",", 
                    "op"}], "]"}], "/", "dt"}]}], "]"}]}], "\n", "\t\t\t", 
                    "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"eval", "=", 
                  RowBox[{
                   RowBox[{"Integrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cancel", "[", 
                    RowBox[{
                    RowBox[{
                    "inveqns", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    RowBox[{
                    "invunks", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "[", "t", "]"}]}], "]"}], "/.",
                     "removets"}], "/.", "traits"}], "/.", "invtraits"}], "/.",
                     "sol"}], "/.", "qsssol"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "tstart", ",", "tend"}], "}"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "integrateopts"}], "]"}]}], 
                    "]"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"tend", "-", "tstart"}], ")"}]}]}], ";", "\n", 
                 "\t\t\t", 
                 RowBox[{"Return", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Chop", "[", "eval", "]"}], ",", "\"\<?\>\""}], 
                   "}"}], "]"}], ";"}], "\n", "\t\t\t", ",", "\n", "\t\t\t", 
                "True", ",", " ", 
                RowBox[{"(*", " ", "else", " ", "*)"}], "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"Msg", "[", 
                  RowBox[{"InvSPS", "::", "bdmtd"}], "]"}], ";", "\n", 
                 "\t\t\t", 
                 RowBox[{"Return", "[", "]"}]}]}], "\n", "\t\t", "]"}], ";"}],
              "\n", "\t", ",", "\n", "\t\t", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{
               "more", " ", "than", " ", "one", " ", "extensive", " ", 
                "component"}], ",", " ", 
               RowBox[{"calculate", " ", "Floquet", " ", "exponent"}]}], " ", 
              "*)"}], "\n", "\t\t", 
             RowBox[{
              RowBox[{"Length", "[", "invunks", "]"}], ">", "1"}], ",", "\n", 
             "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"Global`debug", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{
                 "func", ",", 
                  "\"\<: ContinuousTime Floquet mode (2+ comps)\>\""}], 
                 "]"}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{"j", "=", 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"inveqns", "/.", "traits"}], "/.", "removets"}], 
                 ",", 
                 RowBox[{"{", "invunks", "}"}]}], "]"}]}], ";", "\n", "\t\t", 
              
              RowBox[{"If", "[", 
               RowBox[{"Global`debug", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{"func", ",", "\"\<: j=\>\"", ",", "j"}], "]"}]}], 
               "]"}], ";", "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", "\n", "\t\t\t", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"j", "=", 
                    RowBox[{"j", "/.", "invtraits"}]}], ",", 
                    RowBox[{"liu", "=", 
                    RowBox[{"Length", "[", "invunks", "]"}]}], ",", 
                    RowBox[{"tstart", "=", "tstart"}], ",", 
                    RowBox[{"tend", "=", "tend"}], ",", 
                    RowBox[{"dt", "=", 
                    RowBox[{"tend", "-", "tstart"}]}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "ndsolveopts"}]}]}], "}"}], ",",
                   "\n", "\t\t\t", 
                  RowBox[{
                   RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`invsol", "=", 
                    RowBox[{"NDSolve", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Global`x", "'"}], "[", "t", "]"}], "\[Equal]", 
                    RowBox[{"j", ".", 
                    RowBox[{"Global`x", "[", "t", "]"}]}]}], "/.", 
                    "Global`sol"}], "/.", "Global`qsssol"}], ",", 
                    RowBox[{
                    RowBox[{"Global`x", "[", "tstart", "]"}], "\[Equal]", 
                    RowBox[{"IdentityMatrix", "[", "liu", "]"}]}]}], "}"}], 
                    ",", "Global`x", ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "tstart", ",", "tend"}], "}"}], ",", 
                    "op"}], "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                   RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`eval", "=", 
                    RowBox[{
                    RowBox[{"Max", "@", 
                    RowBox[{"Re", "@", 
                    RowBox[{"Log", "@", 
                    RowBox[{"Chop", "@", 
                    RowBox[{"Sort", "@", 
                    RowBox[{"Eigenvalues", "@", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{"Global`x", "[", "tend", "]"}], "/.", 
                    "Global`invsol"}], "]"}]}]}]}]}]}]}], "/", "dt"}]}], 
                    "]"}]}]}], "\n", "\t\t", "]"}]}], "]"}], ";", "\n", 
              "\t\t", 
              RowBox[{"invsol", "=", 
               RowBox[{"NDSolve", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "'"}], "[", "t", "]"}], "\[Equal]", 
                    RowBox[{"j", ".", 
                    RowBox[{"x", "[", "t", "]"}]}]}], "/.", "invtraits"}], "/.",
                     "sol"}], "/.", "qsssol"}], ",", 
                   RowBox[{
                    RowBox[{"x", "[", "tstart", "]"}], "\[Equal]", 
                    RowBox[{"IdentityMatrix", "[", 
                    RowBox[{"Length", "[", "invunks", "]"}], "]"}]}]}], "}"}],
                  ",", "x", ",", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "tstart", ",", "tend"}], "}"}], ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"Sequence", "@@", "ndsolveopts"}], "]"}]}], "]"}]}],
               ";", "\n", "\t\t", 
              RowBox[{"eval", "=", 
               RowBox[{
                RowBox[{"Max", "@", 
                 RowBox[{"Re", "@", 
                  RowBox[{"Log", "@", 
                   RowBox[{"Chop", "@", 
                    RowBox[{"Sort", "@", 
                    RowBox[{"Eigenvalues", "@", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{"x", "[", "tend", "]"}], "/.", "invsol"}], 
                    "]"}]}]}]}]}]}]}], "/", 
                RowBox[{"(", 
                 RowBox[{"tend", "-", "tstart"}], ")"}]}]}], ";", "\n", 
              "\t\t", 
              RowBox[{"Return", "[", 
               RowBox[{"{", 
                RowBox[{"eval", ",", "\"\<?\>\""}], "}"}], "]"}], ";"}]}], 
            "\n", "\t", "]"}]}], "\n", ",", "\n", "\t", 
          RowBox[{"(*", " ", 
           RowBox[{"DiscreteTime", " ", "Floquet", " ", 
            RowBox[{"mode", " ", "--"}], " ", "add", " ", "initial", " ", 
            RowBox[{"time", "?"}]}], " ", "*)"}], "\n", "\t", 
          RowBox[{"mode", "\[Equal]", "\"\<discretetime floquet\>\""}], ",", 
          "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: DiscreteTime Floquet mode\>\""}], 
              "]"}]}], "]"}], ";", "\n", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{"figure", " ", "out", " ", "period"}], " ", "*)"}], "\n", 
           "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", 
               RowBox[{"sol", "\[LeftDoubleBracket]", 
                RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], "===",
               "TemporalData"}], ",", 
             RowBox[{"tend", "=", 
              RowBox[{"FinalTime", "[", "sol", "]"}]}], ",", 
             RowBox[{"tend", "=", "modelperiod"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"Global`debug", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"\"\<tend=\>\"", ",", "tend"}], "]"}]}], "]"}], ";", 
           "\n", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "are", " ", "there", " ", "any", " ", "Intensive", " ", 
             "components", " ", "to", " ", "be", " ", "solved", " ", 
             RowBox[{"for", "?"}]}], " ", "*)"}], "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "qssunks", "]"}], ">", "0"}], ",", "\n", 
             "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", "\n", "\t\t\t", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"tr", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"traits", ",", "invtraits"}], "]"}]}], ",", 
                    RowBox[{"ic", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"FinalSlice", "[", "sol", "]"}], ",", "qssics"}], 
                    "]"}]}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "findecocycleopts"}]}]}], "}"}],
                   ",", "\n", "\t\t\t", 
                  RowBox[{"PrintCall", "[", 
                   RowBox[{"Global`qsssol", "=", 
                    RowBox[{"FindEcoCycle", "[", 
                    RowBox[{"tr", ",", "ic", ",", "op"}], "]"}]}], "]"}]}], 
                 "\n", "\t\t", "]"}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{"qsssol", "=", 
               RowBox[{"FindEcoCycle", "[", 
                RowBox[{
                 RowBox[{"Join", "[", 
                  RowBox[{"traits", ",", "invtraits"}], "]"}], ",", 
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{"FinalSlice", "[", "sol", "]"}], ",", "qssics"}], 
                  "]"}], ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"Sequence", "@@", "findecocycleopts"}], "]"}]}], 
                "]"}]}]}], "\n", "\t", ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", 
                RowBox[{"PrintCall", "[", 
                 RowBox[{"Global`qsssol", "=", 
                  RowBox[{"{", "}"}]}], "]"}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{"qsssol", "=", 
               RowBox[{"{", "}"}]}]}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"Global`debug", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: qsssol=\>\"", ",", "qsssol"}], 
              "]"}]}], "]"}], ";", "\n", "\n", "\t", 
           RowBox[{"removets", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{
                  RowBox[{"x_", "/;", 
                   RowBox[{
                    RowBox[{"type", "[", "x", "]"}], "\[Equal]", 
                    "\"\<Extensive\>\""}]}], ",", "0"}], "]"}], "[", "t", 
                "]"}], "\[Rule]", 
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", "0"}], "]"}]}], ",", 
              RowBox[{"t", "\[Rule]", "time"}]}], "}"}]}], ";", "\n", "\n", 
           "\t", 
           RowBox[{"Which", "[", "\n", "\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{"one", " ", "extensive", " ", 
              RowBox[{"component", ":", " ", 
               RowBox[{"use", " ", "log", " ", "pop", " ", "eqn"}]}]}], " ", 
             "*)"}], "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "invunks", "]"}], "\[Equal]", "1"}], ",",
              "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"Global`debug", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{
                 "func", ",", 
                  "\"\<:  DiscreteTime Floquet mode (1 comp)\>\""}], "]"}]}], 
               "]"}], ";", "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", "\n", "\t\t\t", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"eq", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "inveqns", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    RowBox[{
                    "invunks", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "[", "t", "]"}]}], "/.", 
                    "invtraits"}]}], ",", 
                    RowBox[{"tend", "=", "tend"}]}], "}"}], ",", "\n", 
                  "\t\t\t", 
                  RowBox[{"PrintCall", "[", 
                   RowBox[{"Global`eval", "=", 
                    RowBox[{
                    RowBox[{"Product", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"eq", "/.", "Global`sol"}], "/.", 
                    "Global`qsssol"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "0", ",", "tend"}], "}"}]}], "]"}], "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{"tend", "+", "1"}], ")"}]}], ")"}]}]}], "]"}]}], 
                 "\n", "\t\t", "]"}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{"eval", "=", 
               RowBox[{
                RowBox[{"Product", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "inveqns", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    RowBox[{
                    "invunks", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "[", "t", "]"}]}], "/.", 
                    "invtraits"}], "/.", "sol"}], "/.", "qsssol"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"t", ",", "0", ",", "tend"}], "}"}]}], "]"}], "^", 
                
                RowBox[{"(", 
                 RowBox[{"1", "/", 
                  RowBox[{"(", 
                   RowBox[{"tend", "+", "1"}], ")"}]}], ")"}]}]}], ";", "\n", 
              "\t\t", 
              RowBox[{"Return", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Chop", "[", "eval", "]"}], ",", "\"\<?\>\""}], 
                "}"}], "]"}]}], "\n", "\t", ",", "\n", "\t\t", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{
               "more", " ", "than", " ", "one", " ", "extensive", " ", 
                "component"}], ",", " ", 
               RowBox[{"calculate", " ", "Floquet", " ", "exponent"}]}], " ", 
              "*)"}], "\n", "\t\t", 
             RowBox[{
              RowBox[{"Length", "[", "invunks", "]"}], ">", "1"}], ",", "\n", 
             "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"Global`debug", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{
                 "func", ",", 
                  "\"\<:  DiscreteTime Floquet mode (2+ comps)\>\""}], 
                 "]"}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{"j", "=", 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"inveqns", "/.", "traits"}], "/.", "removets"}], 
                 ",", 
                 RowBox[{"{", "invunks", "}"}]}], "]"}]}], ";", "\n", "\t\t", 
              
              RowBox[{"If", "[", 
               RowBox[{"Global`debug", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{"func", ",", "\"\<: j=\>\"", ",", "j"}], "]"}]}], 
               "]"}], ";", "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", "\n", "\t\t\t", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"j", "=", 
                    RowBox[{"j", "/.", "invtraits"}]}], ",", 
                    RowBox[{"tend", "=", "tend"}], ",", 
                    RowBox[{"te", "=", 
                    RowBox[{"tend", "+", "1"}]}]}], "}"}], ",", "\n", 
                  "\t\t\t", 
                  RowBox[{
                   RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`invsol", "=", 
                    RowBox[{"ListMultiplier", "[", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"j", "/.", "Global`sol"}], "/.", 
                    "Global`qsssol"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "0", ",", "tend"}], "}"}]}], "]"}], 
                    "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                   RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`eval", "=", 
                    RowBox[{
                    RowBox[{"Max", "@", 
                    RowBox[{"Re", "@", 
                    RowBox[{"Chop", "@", 
                    RowBox[{"Sort", "@", 
                    RowBox[{
                    "Eigenvalues", "[", "Global`invsol", "]"}]}]}]}]}], "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "te"}], ")"}]}]}], "]"}]}]}], "\n", 
                 "\t\t", "]"}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{"invsol", "=", 
               RowBox[{"listMultiplier", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"j", "/.", "invtraits"}], "/.", "sol"}], "/.", 
                   "qsssol"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"t", ",", "0", ",", "tend"}], "}"}]}], "]"}], 
                "]"}]}], ";", "\t\t", "\n", "\t\t", 
              RowBox[{"Return", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Max", "@", 
                   RowBox[{"Re", "@", 
                    RowBox[{"Chop", "@", 
                    RowBox[{"Sort", "@", 
                    RowBox[{"Eigenvalues", "[", "invsol", "]"}]}]}]}]}], "^", 
                  
                  RowBox[{"(", 
                   RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{"tend", "+", "1"}], ")"}]}], ")"}]}], ",", 
                 "\"\<?\>\""}], "}"}], "]"}], ";"}]}], "\n", "\t", "]"}]}], 
          "\n", ",", "\n", "\t", 
          RowBox[{"(*", " ", 
           RowBox[{"Eigenvalue", " ", "mode"}], " ", "*)"}], "\n", "\t", 
          RowBox[{"mode", "\[Equal]", "\"\<eigenvalue\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: eigenvalue mode\>\""}], "]"}]}], 
            "]"}], ";", "\n", "\t", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{"subrule", " ", "to", " ", 
             RowBox[{
              RowBox[{"remove", " ", "[", "t", "]"}], "'"}], "s"}], " ", 
            "*)"}], "\n", "\t", 
           RowBox[{"removets", "=", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"t", "\[Rule]", "time"}], "}"}], ",", "RemovePopts"}], 
             "]"}]}], ";", "\n", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "are", " ", "there", " ", "any", " ", "Intensive", " ", 
             "components", " ", "to", " ", "be", " ", "solved", " ", 
             RowBox[{"for", "?"}]}], " ", "*)"}], "\n", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "qssunks", "]"}], ">", "0"}], ",", "\n", 
             "\t\t", 
             RowBox[{
              RowBox[{"Which", "[", "\n", "\t\t\t", 
               RowBox[{
                RowBox[{"qssmethod", "\[Equal]", "\"\<Solve\>\""}], ",", "\n",
                 "\t\t\t", 
                RowBox[{"qsssol", "=", 
                 RowBox[{"Solve", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"qsseqns", "/.", "removets"}], "/.", "qsssubs"}], 
                    "/.", "traits"}], "/.", "sol"}], "/.", "invtraits"}], ",",
                    "qssunks", ",", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "solveopts"}], "]"}]}], "]"}]}],
                 ",", "\n", "\t\t\t", 
                RowBox[{"qssmethod", "\[Equal]", "\"\<NSolve\>\""}], ",", 
                "\n", "\t\t\t", 
                RowBox[{"qsssol", "=", 
                 RowBox[{"NSolve", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"qsseqns", "/.", "removets"}], "/.", "qsssubs"}], 
                    "/.", "traits"}], "/.", "sol"}], "/.", "invtraits"}], ",",
                    "qssunks", ",", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "nsolveopts"}], "]"}]}], 
                  "]"}]}], ",", "\n", "\t\t\t", 
                RowBox[{"qssmethod", "\[Equal]", "\"\<FindRoot\>\""}], ",", 
                "\n", "\t\t\t", 
                RowBox[{"qsssol", "=", 
                 RowBox[{"{", 
                  RowBox[{"FindRoot", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"qsseqns", "/.", "removets"}], "/.", "qsssubs"}], 
                    "/.", "traits"}], "/.", "sol"}], "/.", "invtraits"}], ",",
                     "qssunks", ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "findrootopts"}], "]"}]}], 
                   "]"}], "}"}]}]}], "\n", "\t\t", "]"}], ";"}], "\n", "\t", 
             ",", "\n", "\t\t", 
             RowBox[{"qsssol", "=", 
              RowBox[{"{", 
               RowBox[{"{", "}"}], "}"}]}]}], "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: qsssol=\>\"", ",", "qsssol"}], 
              "]"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{"should", " ", "add", " ", "SelectValid", " ", 
             RowBox[{"here", "?"}]}], " ", "*)"}], "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "invunks", "]"}], "\[Equal]", "1"}], ",",
              "\n", "\t\t", 
             RowBox[{"j", "=", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"Simplify", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cancel", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "inveqns", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    "invunks", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ")"}], "/.", "removets"}], 
                    "]"}], "/.", 
                    RowBox[{
                    "qsssol", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "/.", "qsssubs"}], "/.", 
                    "sol"}], "/.", "invtraits"}], "/.", "traits"}], "]"}], 
                "}"}], "}"}]}], "\n", "\t", ",", "\n", "\t\t", 
             RowBox[{"(*", " ", 
              RowBox[{
              "make", " ", "Jacobian", " ", "matrix", " ", "of", " ", 
               "Extensive", " ", "components"}], " ", "*)"}], "\n", "\t\t", 
             RowBox[{"(*", " ", 
              RowBox[{"what", " ", "about", " ", "0", "th", " ", "order", " ", 
               RowBox[{"terms", "?", "!"}]}], " ", "*)"}], "\n", "\t\t", 
             RowBox[{
              RowBox[{"j", "=", 
               RowBox[{
                RowBox[{"D", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"inveqns", "/.", "removets"}], "/.", "traits"}], "/.", 
                    RowBox[{
                    "qsssol", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "/.", "invtraits"}], ",", 
                  RowBox[{"{", "invunks", "}"}]}], "]"}], "/.", "sol"}]}], 
              ";"}]}], "\n", "\t", "]"}], ";", "\n", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"Global`debug", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: j=\>\"", ",", "j"}], "]"}]}], "]"}],
            ";", "\n", "\n", "\t", 
           RowBox[{"Which", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "j", "]"}], "\[Equal]", "1"}], ",", " ", 
             
             RowBox[{"(*", " ", 
              RowBox[{"1", " ", "extensive", " ", "component"}], " ", "*)"}], 
             "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"Global`debug", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{"func", ",", "\"\<: 1 extensive component\>\""}], 
                 "]"}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{"eval", "=", 
               RowBox[{"j", "\[LeftDoubleBracket]", 
                RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
              "\n", "\t\t", 
              RowBox[{"evec", "=", 
               RowBox[{"{", "1", "}"}]}], ";"}], "\n", "\t", ",", "\n", 
             "\t\t", 
             RowBox[{
              RowBox[{"Length", "[", "j", "]"}], ">", "1"}], ",", " ", 
             RowBox[{"(*", " ", 
              RowBox[{">", 
               RowBox[{"1", " ", "extensive", " ", "component"}]}], " ", 
              "*)"}], "\n", "\t", "\n", "\t\t", 
             RowBox[{"(*", " ", 
              RowBox[{"calculate", " ", "eigenvalues"}], " ", "*)"}], "\n", 
             "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MatrixQ", "[", 
                    RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}], "[", 
                 
                 RowBox[{"j", "/.", "qsssubs"}], "]"}], ",", "\n", "\t\t\t", 
                RowBox[{"(*", " ", 
                 RowBox[{"numerical", " ", "jacobian"}], " ", "*)"}], "\n", 
                "\t\t\t", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{"verbose", ",", 
                   RowBox[{"Print", "[", 
                    RowBox[{"func", ",", "\"\<: numerical Jacobian\>\""}], 
                    "]"}]}], "]"}], ";", "\n", "\t\t\t", "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"rv", ",", "\n", "\t\t\t\t", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "eval", "}"}], ",", 
                    RowBox[{"{", "evec", "}"}]}], "}"}], "=", 
                    RowBox[{"SortedEigensystem", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"j", "/.", "qsssubs"}], "]"}], ",", "1", ",", 
                    RowBox[{"Sequence", "@@", "eigensystemopts"}]}], "]"}]}], 
                   ",", "\n", "\t\t\t\t", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "eval", "}"}], ",", 
                    RowBox[{"{", "evec", "}"}]}], "}"}], "=", 
                    RowBox[{"SortedEigensystem", "[", 
                    RowBox[{
                    RowBox[{"j", "/.", "qsssubs"}], ",", "1", ",", 
                    RowBox[{"Sequence", "@@", "eigensystemopts"}]}], 
                    "]"}]}]}], "\n", "\t\t\t", "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"evec", "=", 
                  RowBox[{"evec", "/", 
                   RowBox[{"Sign", "[", 
                    RowBox[{
                    "evec", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}]}]}]}], "\n", "\t\t", ",",
                 "\n", "\t\t\t", 
                RowBox[{"(*", " ", 
                 RowBox[{"symbolic", " ", "jacobian"}], " ", "*)"}], "\n", 
                "\t\t\t", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{"verbose", ",", 
                   RowBox[{"Print", "[", 
                    RowBox[{"func", ",", "\"\<: symbolic Jacobian\>\""}], 
                    "]"}]}], "]"}], ";", "\n", "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"j", "/.", "qsssubs"}], "]"}], "\[Equal]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], ",", "\n", "\t\t\t\t", 
                   RowBox[{
                    RowBox[{"eval", "=", 
                    RowBox[{"Simplify", "[", 
                    RowBox[{"Re", "[", 
                    RowBox[{
                    RowBox[{"1", "/", "2"}], "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "+", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "^", 
                    "2"}], "+", 
                    RowBox[{"4", 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], "-", 
                    RowBox[{"2", 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], "+", 
                    RowBox[{
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "^", 
                    "2"}]}], "]"}]}], ")"}]}], "]"}], "]"}]}], ";", "\n", 
                    "\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{"rv", ",", "\n", "\t\t\t\t\t", 
                    RowBox[{"evec", "=", 
                    RowBox[{"Simplify", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "+", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "^", 
                    "2"}], "+", 
                    RowBox[{"4", 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], "-", 
                    RowBox[{"2", 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], "+", 
                    RowBox[{
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "^", 
                    "2"}]}], "]"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
                    ")"}]}], ",", "1"}], "}"}], "]"}]}], ",", "\n", 
                    "\t\t\t\t\t", 
                    RowBox[{"evec", "=", 
                    RowBox[{"Simplify", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "-", 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "+", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "^", 
                    "2"}], "+", 
                    RowBox[{"4", 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], "-", 
                    RowBox[{"2", 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], "+", 
                    RowBox[{
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "^", 
                    "2"}]}], "]"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", 
                    RowBox[{"j", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                    ")"}]}], ",", "1"}], "}"}], "]"}]}]}], "\n", "\t\t\t\t", 
                    "]"}]}], "\n", "\t\t\t", ",", "\n", "\t\t\t\t", 
                   RowBox[{
                    RowBox[{"eval", "=", 
                    RowBox[{"Max", "[", 
                    RowBox[{"Re", "[", 
                    RowBox[{"Eigenvalues", "[", 
                    RowBox[{
                    RowBox[{"j", "/.", "qsssubs"}], ",", 
                    RowBox[{"Sequence", "@@", "eigensystemopts"}]}], "]"}], 
                    "]"}], "]"}]}], ";", "\n", "\t\t\t\t", 
                    RowBox[{"evec", "=", "\"\<?\>\""}], ";", "\n", "\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", "frominv"}], ",", 
                    RowBox[{"Msg", "[", 
                    RowBox[{"InvSPS", "::", "nosymev"}], "]"}]}], "]"}], 
                    ";"}]}], "\n", "\t\t\t", "]"}], ";"}]}], "\n", "\t\t", 
               "]"}], ";"}]}], "\n", "\t", "]"}], ";", "\n", "\t", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"add", " ", "[", "t", "]"}], " ", "to", " ", 
             "InterpolatingFunctions", " ", 
             RowBox[{"(", 
              RowBox[{"but", " ", "not", " ", "ones", " ", 
               RowBox[{"with", " ", "[", "var", "]"}]}], ")"}]}], " ", "*)"}],
            "\n", "\t", 
           RowBox[{"eval", "=", 
            RowBox[{
             RowBox[{"eval", "/.", 
              RowBox[{"x_InterpolatingFunction", "\[Rule]", 
               RowBox[{"x", "[", "t", "]"}]}]}], "/.", 
             RowBox[{
              RowBox[{
               RowBox[{"x_InterpolatingFunction", "[", "t", "]"}], "[", 
               "var_", "]"}], "\[Rule]", 
              RowBox[{"x", "[", "var", "]"}]}]}]}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: eigenvalue=\>\"", ",", "eval"}], 
              "]"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: eigenvector=\>\"", ",", "evec"}], 
              "]"}]}], "]"}], ";", "\n", "\t", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{"return", " ", "answer"}], " ", "*)"}], "\n", "\n", "\t", 
           
           RowBox[{"Which", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], ",",
              "\n", "\t\t", 
             RowBox[{"Which", "[", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"simplifyresult", "===", "True"}], ",", "\n", "\t\t\t", 
               RowBox[{"Return", "[", 
                RowBox[{"Simplify", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"eval", ",", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{"Rule", "[", 
                    RowBox[{"invunks", ",", "evec"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "qsssol", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], "]"}]}], "}"}], ",", 
                  RowBox[{"Assumptions", "\[RuleDelayed]", 
                   RowBox[{"{", 
                    RowBox[{"_", "\[Element]", "Reals"}], "}"}]}]}], "]"}], 
                "]"}], "\n", "\t\t", ",", "\n", "\t\t\t", 
               RowBox[{"simplifyresult", "===", "Full"}], ",", "\n", "\t\t\t", 
               RowBox[{"Return", "[", 
                RowBox[{"FullSimplify", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"eval", ",", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{"Rule", "[", 
                    RowBox[{"invunks", ",", "evec"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "qsssol", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], "]"}]}], "}"}], ",", 
                  RowBox[{"Assumptions", "\[RuleDelayed]", 
                   RowBox[{"{", 
                    RowBox[{"_", "\[Element]", "Reals"}], "}"}]}]}], "]"}], 
                "]"}], "\n", "\t\t", ",", "\n", "\t\t\t", "Else", ",", " ", 
               RowBox[{"(*", " ", "else", " ", "*)"}], "\n", "\t\t\t", 
               RowBox[{"Return", "[", 
                RowBox[{"{", 
                 RowBox[{"eval", ",", 
                  RowBox[{"Sort", "[", 
                   RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{"Rule", "[", 
                    RowBox[{"invunks", ",", "evec"}], "]"}], "]"}], ",", 
                    RowBox[{
                    "qsssol", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], "]"}]}], "}"}], 
                "]"}]}], "\n", "\t\t", "]"}], "\n", "\t", ",", "\n", "\t\t", 
             RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], ",", 
             "\n", "\t\t", 
             RowBox[{
              RowBox[{"Return", "[", 
               RowBox[{"{", 
                RowBox[{"(*", 
                 RowBox[{"Log", "@"}], "*)"}], 
                RowBox[{
                 RowBox[{"Max", "@", 
                  RowBox[{"Chop", "@", 
                   RowBox[{"ComplexExpand", "[", "eval", "]"}]}]}], ",", 
                 "evec"}], "}"}], "]"}], ";"}]}], "\n", "\t", "]"}], ";"}]}], 
         "\n", "\n", "]"}], ";"}]}], "\n", "\n", "]"}]}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.6878814530612164`*^9, 3.687881459029211*^9}, 
   3.688409484640422*^9, {3.688571689397046*^9, 3.688571690825296*^9}, {
   3.688571761454454*^9, 3.688571766894099*^9}, {3.688571806477584*^9, 
   3.688571807093449*^9}, {3.68858564717404*^9, 3.688585647465419*^9}, {
   3.6886005937624617`*^9, 3.688600599344365*^9}, {3.6886006312291927`*^9, 
   3.688600698163389*^9}, {3.688600839424646*^9, 3.688600882537201*^9}, {
   3.688600946822866*^9, 3.6886012151088057`*^9}, {3.6886012788170137`*^9, 
   3.688601621387375*^9}, {3.688602281920051*^9, 3.688602326207733*^9}, {
   3.688634513176991*^9, 3.688634527452525*^9}, {3.688634700078339*^9, 
   3.688634757532742*^9}, {3.688634788041438*^9, 3.6886348053715677`*^9}, {
   3.6886352292635736`*^9, 3.688635255814289*^9}, {3.688635594065608*^9, 
   3.688635600320648*^9}, {3.688635814538501*^9, 3.688635824778554*^9}, {
   3.6886359118999434`*^9, 3.688635976865841*^9}, {3.690415248173037*^9, 
   3.6904152533250093`*^9}, {3.690415287158764*^9, 3.690415287600669*^9}, {
   3.691279566060156*^9, 3.691279568776309*^9}, {3.691279609549879*^9, 
   3.6912796099585867`*^9}, {3.693869696903449*^9, 3.693869717645493*^9}, {
   3.6938700625433064`*^9, 3.6938700625784483`*^9}, {3.695323027581709*^9, 
   3.695323030153614*^9}, {3.695323115907778*^9, 3.6953231308707933`*^9}, {
   3.695323170665751*^9, 3.695323298041304*^9}, {3.6954010129148617`*^9, 
   3.69540101576901*^9}, {3.696151024755258*^9, 3.696151024783676*^9}, {
   3.6962438600404997`*^9, 3.696243864427133*^9}, {3.696243930371049*^9, 
   3.696243983881353*^9}, {3.696245031328796*^9, 3.6962451380575943`*^9}, {
   3.6962451898919907`*^9, 3.69624526370936*^9}, {3.69635084994144*^9, 
   3.6963508923755207`*^9}, {3.696589491140443*^9, 3.696589492017684*^9}, {
   3.696635304583791*^9, 3.696635310277787*^9}, {3.696635741203932*^9, 
   3.69663576901819*^9}, {3.696635884051202*^9, 3.6966358928200483`*^9}, {
   3.696636035632012*^9, 3.6966360365972548`*^9}, {3.696636274982386*^9, 
   3.6966362864734697`*^9}, 3.6966704708232193`*^9, {3.69667390793519*^9, 
   3.696673927503748*^9}, {3.7068781651924562`*^9, 3.706878235494446*^9}, {
   3.7068792489855013`*^9, 3.706879266204844*^9}, {3.7068877444832077`*^9, 
   3.7068877760764093`*^9}, {3.7068878882776814`*^9, 3.706887905974201*^9}, 
   3.7085836823668222`*^9, 3.708583763646399*^9, {3.7085841841719646`*^9, 
   3.708584206316938*^9}, 3.708588860333473*^9, {3.70858916671024*^9, 
   3.708589202519938*^9}, {3.7085893021802273`*^9, 3.708589315612636*^9}, {
   3.708591063845155*^9, 3.7085910658322077`*^9}, {3.708591245794922*^9, 
   3.7085912460760937`*^9}, {3.708591380670972*^9, 3.708591380949483*^9}, {
   3.708598820535036*^9, 3.70859882781212*^9}, {3.708600763621395*^9, 
   3.708600764165084*^9}, {3.708601784000189*^9, 3.708601786032292*^9}, {
   3.708790867457788*^9, 3.708790898291366*^9}, {3.708791827546488*^9, 
   3.708791829516082*^9}, {3.7087919336126623`*^9, 3.708791968187175*^9}, {
   3.708792274684011*^9, 3.708792291321559*^9}, {3.708792447708539*^9, 
   3.708792453852357*^9}, {3.708792577997967*^9, 3.708792618835338*^9}, {
   3.70883468035146*^9, 3.708834684079401*^9}, {3.708836320277334*^9, 
   3.70883633586495*^9}, {3.708836381978725*^9, 3.70883638515117*^9}, {
   3.708836470351975*^9, 3.708836475167385*^9}, {3.708838279169799*^9, 
   3.708838281099362*^9}, {3.708858421899661*^9, 3.7088584235402718`*^9}, {
   3.708860963598968*^9, 3.70886097156917*^9}, {3.7088611569112597`*^9, 
   3.7088611597246313`*^9}, {3.708862262844946*^9, 3.708862269481358*^9}, {
   3.7093367750780563`*^9, 3.7093367758452272`*^9}, {3.710105980388741*^9, 
   3.710105984051982*^9}, 3.710240068675582*^9, 3.7102556506092176`*^9, {
   3.710256150476164*^9, 3.71025620391125*^9}, {3.710324401425747*^9, 
   3.710324447588081*^9}, {3.71155589116364*^9, 3.711555985176107*^9}, {
   3.7115566238606167`*^9, 3.711556627043132*^9}, {3.711557602598812*^9, 
   3.711557604357217*^9}, {3.711557661500011*^9, 3.7115577194107943`*^9}, {
   3.711557767697157*^9, 3.7115577975513906`*^9}, {3.711557831927297*^9, 
   3.7115578471361513`*^9}, {3.711558045636963*^9, 3.711558061668116*^9}, {
   3.711558092582246*^9, 3.7115581341517763`*^9}, {3.7115824112754993`*^9, 
   3.711582411311132*^9}, 3.711583999822175*^9, {3.712225024865241*^9, 
   3.712225032988276*^9}, {3.7122250878307753`*^9, 3.712225089625269*^9}, {
   3.712225482060203*^9, 3.712225512966757*^9}, {3.712225637901976*^9, 
   3.712225643670443*^9}, {3.712225714257094*^9, 3.71222572595395*^9}, {
   3.7122257751921577`*^9, 3.7122257936310463`*^9}, {3.712225826818993*^9, 
   3.712225831324786*^9}, {3.712251089878093*^9, 3.712251093018529*^9}, {
   3.7122511823979187`*^9, 3.712251253211563*^9}, {3.712251283652198*^9, 
   3.712251287635208*^9}, {3.712251345100946*^9, 3.712251350663987*^9}, {
   3.712251384967402*^9, 3.712251395339054*^9}, {3.712251447380417*^9, 
   3.712251465415732*^9}, 3.712251631877491*^9, 3.712252398248869*^9, 
   3.7122533887729588`*^9, 3.712253516517356*^9, {3.712285782098206*^9, 
   3.7122857906480494`*^9}, {3.712290017246231*^9, 3.71229002073954*^9}, {
   3.721846732714082*^9, 3.7218467348480883`*^9}, {3.721847228486465*^9, 
   3.7218472765864983`*^9}, {3.7218473449002028`*^9, 3.721847360878599*^9}, {
   3.721847418022916*^9, 3.7218474810188217`*^9}, {3.721847684614305*^9, 
   3.721847724073641*^9}, {3.721847790182469*^9, 3.721847796078249*^9}, {
   3.7218478731983852`*^9, 3.72184789282588*^9}, {3.721848008025207*^9, 
   3.721848014792354*^9}, {3.721848048457597*^9, 3.72184806136756*^9}, {
   3.721848667381414*^9, 3.7218487283495626`*^9}, {3.721849068042777*^9, 
   3.721849095834796*^9}, {3.721849684095488*^9, 3.7218496891611357`*^9}, {
   3.722086407112711*^9, 3.7220866378403797`*^9}, {3.724894963404118*^9, 
   3.7248949706802073`*^9}, {3.72489624507312*^9, 3.724896346910398*^9}, {
   3.724896382898333*^9, 3.724896399430287*^9}, {3.72489679149034*^9, 
   3.724896799771542*^9}, 3.7248968556917887`*^9, {3.724897285403802*^9, 
   3.724897290669362*^9}, {3.72489737560257*^9, 3.724897380439896*^9}, {
   3.724897721114491*^9, 3.7248977514027567`*^9}, {3.724897801026354*^9, 
   3.724897802772031*^9}, {3.7248981463668003`*^9, 3.724898172234021*^9}, 
   3.724898218333362*^9, {3.7249309588717337`*^9, 3.724930973653968*^9}, {
   3.724931004026593*^9, 3.7249310057293997`*^9}, 3.724931385983552*^9, {
   3.724936849861724*^9, 3.7249368583562307`*^9}, {3.724937104169401*^9, 
   3.724937106438231*^9}, {3.7249371850031643`*^9, 3.7249372269152927`*^9}, 
   3.724937906783259*^9, {3.724944230069344*^9, 3.724944237623825*^9}, {
   3.7249453731137543`*^9, 3.724945378497714*^9}, 3.7249468982419577`*^9, {
   3.724947302963138*^9, 3.724947304548771*^9}, 3.7249481139682713`*^9, {
   3.724948459574916*^9, 3.72494846827076*^9}, {3.724948558950974*^9, 
   3.72494856111795*^9}, {3.724948619260332*^9, 3.7249486232929068`*^9}, {
   3.7249491115112143`*^9, 3.724949122344922*^9}, 3.724949541476694*^9, 
   3.724949588651401*^9, {3.724949682076208*^9, 3.724949691599144*^9}, {
   3.724949822029698*^9, 3.724949825188439*^9}, 3.724950015597292*^9, {
   3.72495006123518*^9, 3.724950088150565*^9}, {3.724950211509633*^9, 
   3.724950219501894*^9}, {3.72495251957504*^9, 3.7249525427007103`*^9}, {
   3.7249534297647753`*^9, 3.724953444505563*^9}, {3.7249534955810843`*^9, 
   3.724953509200018*^9}, {3.724953627838616*^9, 3.724953628260701*^9}, {
   3.724953679208778*^9, 3.72495373020297*^9}, {3.7249538230130444`*^9, 
   3.7249538233245087`*^9}, {3.724954115662263*^9, 3.724954116056861*^9}, {
   3.7249550162875233`*^9, 3.724955025887974*^9}, {3.724955161923788*^9, 
   3.7249551835136127`*^9}, {3.724958432546207*^9, 3.724958465175715*^9}, {
   3.725054397422452*^9, 3.7250544438083143`*^9}, {3.7250548357655993`*^9, 
   3.725054920716441*^9}, {3.72505519599482*^9, 3.725055198806883*^9}, {
   3.725055680078176*^9, 3.725055683991456*^9}, {3.725055753424243*^9, 
   3.725055864061583*^9}, {3.725056363612012*^9, 3.7250563642489567`*^9}, {
   3.725056400028223*^9, 3.7250564220133553`*^9}, {3.725057253053226*^9, 
   3.7250572947110233`*^9}, {3.725057333989949*^9, 3.725057400668687*^9}, {
   3.725057439563181*^9, 3.725057464610834*^9}, {3.725057607276643*^9, 
   3.725057611281467*^9}, {3.7250576725050364`*^9, 3.7250578180301228`*^9}, {
   3.725057864315455*^9, 3.7250578661412086`*^9}, {3.725057961173781*^9, 
   3.7250580280236387`*^9}, {3.7250581843063107`*^9, 3.725058221651031*^9}, {
   3.7250584426322927`*^9, 3.725058503635702*^9}, {3.725058581601273*^9, 
   3.72505860112291*^9}, {3.7250586529923477`*^9, 3.725058659605423*^9}, {
   3.72505908627034*^9, 3.7250590982204323`*^9}, {3.725059191500366*^9, 
   3.725059227097763*^9}, {3.7250592810539427`*^9, 3.7250593038300037`*^9}, {
   3.72505970189467*^9, 3.725059818484416*^9}, {3.7250599466164417`*^9, 
   3.725060154352461*^9}, {3.7250602122693996`*^9, 3.725060365421627*^9}, {
   3.7250614896373463`*^9, 3.725061537028419*^9}, {3.725061690110983*^9, 
   3.725061697915103*^9}, {3.725061916295128*^9, 3.7250619179885473`*^9}, {
   3.7250619957859583`*^9, 3.72506206757582*^9}, {3.7250621430961027`*^9, 
   3.725062158210848*^9}, {3.725063754952601*^9, 3.725063764958571*^9}, 
   3.7251176379021597`*^9, {3.7251397332641897`*^9, 3.7251397347564087`*^9}, {
   3.725140958287973*^9, 3.725140958309791*^9}, {3.725141747095838*^9, 
   3.725141755601676*^9}, {3.7251419240702353`*^9, 3.725141932921267*^9}, 
   3.7251419653788*^9, {3.725142717513155*^9, 3.7251427475087843`*^9}, {
   3.725142933649238*^9, 3.725142976148868*^9}, 3.725143060180385*^9, {
   3.725143146648068*^9, 3.7251431581723547`*^9}, {3.7251432256578627`*^9, 
   3.725143292402075*^9}, {3.725143333528575*^9, 3.725143339556197*^9}, {
   3.7251433768045273`*^9, 3.725143377155958*^9}, {3.725143987168393*^9, 
   3.725144001491878*^9}, {3.725144059285512*^9, 3.725144080257326*^9}, 
   3.725144294528994*^9, {3.725144573252809*^9, 3.7251446116229353`*^9}, {
   3.7251456923873997`*^9, 3.72514573685854*^9}, {3.725145778762312*^9, 
   3.725145778968948*^9}, {3.725145811799171*^9, 3.725145814434285*^9}, {
   3.725145856743083*^9, 3.7251458920083714`*^9}, {3.7251459405941133`*^9, 
   3.725145955810549*^9}, {3.725146043230147*^9, 3.72514604854138*^9}, {
   3.7251461861798077`*^9, 3.7251461879116898`*^9}, {3.727097589052609*^9, 
   3.727097595806684*^9}, {3.7270976783929358`*^9, 3.727097706775076*^9}, {
   3.727912196824891*^9, 3.727912237436054*^9}, {3.7279124085346107`*^9, 
   3.727912473508869*^9}, {3.728656719834984*^9, 3.728656727107768*^9}, {
   3.728657171319549*^9, 3.728657213564637*^9}, {3.72869231480317*^9, 
   3.7286923183962297`*^9}, {3.728692378871649*^9, 3.728692384732163*^9}, {
   3.729513770378294*^9, 3.72951378731459*^9}, {3.729514042054036*^9, 
   3.729514080955069*^9}, {3.72955940410349*^9, 3.729559458094069*^9}, {
   3.729594289109133*^9, 3.729594332252729*^9}, {3.7295944019619226`*^9, 
   3.7295944067213163`*^9}, {3.729594465505767*^9, 3.7295945717385807`*^9}, {
   3.729594645576379*^9, 3.729594677340584*^9}, {3.729594732109869*^9, 
   3.7295947375741997`*^9}, {3.729594807046207*^9, 3.729594807853174*^9}, {
   3.7295949324211283`*^9, 3.729594954569027*^9}, {3.7295951493727217`*^9, 
   3.7295951875645847`*^9}, {3.729595325550365*^9, 3.729595339487381*^9}, {
   3.7295954246468973`*^9, 3.729595499582233*^9}, {3.729595586990611*^9, 
   3.729595632278235*^9}, {3.729595728072545*^9, 3.729595779020027*^9}, {
   3.7295960509375772`*^9, 3.7295961863563833`*^9}, 3.729596268258312*^9, {
   3.7295965653140593`*^9, 3.72959657083177*^9}, {3.7295966219164762`*^9, 
   3.729596635444439*^9}, {3.729596756019528*^9, 3.729596810069412*^9}, {
   3.729596874223288*^9, 3.7295969042845163`*^9}, {3.7295969537427807`*^9, 
   3.729597018105411*^9}, {3.729597048280079*^9, 3.7295970581244097`*^9}, {
   3.729597148305924*^9, 3.729597240725258*^9}, {3.729597275549621*^9, 
   3.7295972757106524`*^9}, {3.7295973562556953`*^9, 
   3.7295973721189013`*^9}, {3.729597440676573*^9, 3.729597574715151*^9}, {
   3.7295976199118843`*^9, 3.729597654378607*^9}, {3.7295983620659122`*^9, 
   3.729598392993102*^9}, {3.7295985386309032`*^9, 3.7295985738859453`*^9}, {
   3.7295988956260233`*^9, 3.7295990637674303`*^9}, {3.729599155104938*^9, 
   3.729599176032815*^9}, 3.729599243331648*^9, {3.7296033897691793`*^9, 
   3.729603389923201*^9}, {3.729603501206024*^9, 3.72960353149771*^9}, {
   3.729604305183064*^9, 3.729604317140976*^9}, {3.7296103354353724`*^9, 
   3.729610339525629*^9}, {3.729610517134734*^9, 3.729610530690641*^9}, 
   3.7296150838880863`*^9, {3.729615988517774*^9, 3.729615999717455*^9}, 
   3.72961603853511*^9, {3.7296162256493893`*^9, 3.7296163243849697`*^9}, {
   3.7296163719556913`*^9, 3.729616376504467*^9}, {3.729616415918496*^9, 
   3.72961647944969*^9}, {3.729617023346212*^9, 3.729617023485174*^9}, 
   3.7296175219239063`*^9, {3.729617653887641*^9, 3.729617658893503*^9}, {
   3.729618581753636*^9, 3.7296186152379*^9}, {3.7340101284760523`*^9, 
   3.7340101305858297`*^9}, {3.734010165337365*^9, 3.734010251587131*^9}, {
   3.734010291926464*^9, 3.7340102952374897`*^9}, {3.734010386548648*^9, 
   3.73401041215889*^9}, {3.734011232924431*^9, 3.734011240150141*^9}, {
   3.734012879135439*^9, 3.734012913688026*^9}, {3.734012982044553*^9, 
   3.7340129943068247`*^9}, 3.734013096524029*^9, {3.7340131690664186`*^9, 
   3.7340131981712093`*^9}, {3.734013511022821*^9, 3.734013521749942*^9}, {
   3.734013605907933*^9, 3.7340136100740633`*^9}, {3.7340141759332323`*^9, 
   3.734014188225356*^9}, {3.7340143577709627`*^9, 3.734014360086828*^9}, {
   3.734014448097741*^9, 3.7340145092732677`*^9}, {3.7340148322278147`*^9, 
   3.734014836714177*^9}, {3.73402596958304*^9, 3.7340259786918783`*^9}, {
   3.7340261751278553`*^9, 3.73402618017303*^9}, 3.734132068178685*^9, {
   3.7341322388730307`*^9, 3.7341322890996304`*^9}, {3.734134546067463*^9, 
   3.734134549774335*^9}, {3.7341346067358713`*^9, 3.734134641598106*^9}, {
   3.734134776316028*^9, 3.7341347783796587`*^9}, {3.734135718232538*^9, 
   3.7341357231154423`*^9}, {3.734135838037902*^9, 3.734135843646873*^9}, 
   3.734135950687872*^9, {3.736158498696125*^9, 3.736158506912806*^9}, {
   3.736158542171611*^9, 3.736158542445427*^9}, {3.736158628378615*^9, 
   3.736158653850081*^9}, {3.747144029372908*^9, 3.747144034680372*^9}, {
   3.747145223982256*^9, 3.747145252270488*^9}, {3.7471455333311977`*^9, 
   3.747145535535638*^9}, 3.7471461627053537`*^9, 3.7471467767012043`*^9, {
   3.747146816988888*^9, 3.747146831993836*^9}, {3.747146894074462*^9, 
   3.747146909025271*^9}, {3.747147275757674*^9, 3.747147278802659*^9}, 
   3.747147863091024*^9, 3.7471539588876877`*^9, 3.7471574006739273`*^9, {
   3.7471686871316357`*^9, 3.747168736983862*^9}, {3.7471688657626143`*^9, 
   3.747168885863797*^9}, {3.747170672073535*^9, 3.747170690062704*^9}, {
   3.747171363124967*^9, 3.7471713819445257`*^9}, {3.7471715338120728`*^9, 
   3.747171613428433*^9}, {3.7471716872529593`*^9, 3.747171690138596*^9}, {
   3.747171736504562*^9, 3.7471717384401703`*^9}, {3.747172158732071*^9, 
   3.747172165598105*^9}, {3.7471722107553577`*^9, 3.7471722109223957`*^9}, {
   3.7471765463906384`*^9, 3.7471765653881474`*^9}, {3.747176685011712*^9, 
   3.7471767331186047`*^9}, {3.747177019389319*^9, 3.747177031701782*^9}, {
   3.755278896187661*^9, 3.7552789269892*^9}, {3.755279350552494*^9, 
   3.755279370882978*^9}, {3.7552795546763353`*^9, 3.7552795608292503`*^9}, 
   3.7552796072557364`*^9, {3.75529114856117*^9, 3.7552911581460657`*^9}, 
   3.755306034643724*^9, {3.7553463013554907`*^9, 3.755346311973337*^9}, {
   3.755349666590042*^9, 3.755349717100543*^9}, {3.755353899999289*^9, 
   3.755353902967667*^9}, {3.755820397233012*^9, 3.755820403825347*^9}, 
   3.7558758511945868`*^9, {3.758387029826146*^9, 3.75838702996*^9}, {
   3.758389525229128*^9, 3.75838954919296*^9}, {3.758518235145632*^9, 
   3.75851823803001*^9}, {3.7585183808010263`*^9, 3.758518421145329*^9}, {
   3.7585185528192587`*^9, 3.758518575180735*^9}, {3.758522810199552*^9, 
   3.758522810843104*^9}, 
   3.7585230757509527`*^9},ExpressionUUID->"de26666d-6328-4a2c-b147-\
7078c1ad31d5"],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.729617010578032*^9, 
  3.7296170112968817`*^9}},ExpressionUUID->"27c89c36-d277-4528-b3ee-\
fab95ab85014"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "InvSPS", "]"}], "=", 
   RowBox[{"{", "\n", 
    RowBox[{
     RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Time", "\[Rule]", "t"}], ",", "\n", 
     RowBox[{"NIntegrateOpts", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Method", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", 
          RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}], 
       "}"}]}], ",", 
     RowBox[{"IntegrateOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"NDSolveOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"SolveOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"NSolveOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"FindRootOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"EigensystemOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"FindEcoCycleOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", 
     RowBox[{"QSSMethod", "\[Rule]", "\"\<NSolve\>\""}], ",", 
     RowBox[{"QSSICs", "\[Rule]", "Automatic"}], ",", "\n", 
     RowBox[{"SimplifyResult", "\[Rule]", "False"}], ",", 
     RowBox[{"Guild", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"FromInv", "\[Rule]", "False"}], ",", 
     RowBox[{"RV", "\[Rule]", "False"}], ",", "\n", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.687881452780883*^9, {3.6885716890563374`*^9, 3.688571689248247*^9}, 
   3.688585647002344*^9, {3.708792626390346*^9, 3.708792630685244*^9}, {
   3.725059863729673*^9, 3.72505987050301*^9}, {3.725105611681752*^9, 
   3.725105615906698*^9}, {3.725140958258945*^9, 3.725140958266478*^9}, 
   3.7296043469539337`*^9, {3.729616997837974*^9, 3.729616998250029*^9}, {
   3.755278873571705*^9, 
   3.755278876020795*^9}},ExpressionUUID->"e8f4aa96-dc0a-4de2-ab1a-\
8ec2e3ca415d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",
 CellChangeTimes->{{3.729617017514411*^9, 
  3.7296170191690207`*^9}},ExpressionUUID->"380a1635-530e-475d-b4c5-\
cc1f2f7c7c40"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Inv", "[", "args___", "]"}], ":=", 
   RowBox[{
    RowBox[{"InvSPS", "[", 
     RowBox[{"args", ",", 
      RowBox[{"FromInv", "\[Rule]", "True"}]}], "]"}], "\[LeftDoubleBracket]",
     "1", "\[RightDoubleBracket]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"StablePopulationStructure", "[", "args___", "]"}], ":=", 
   RowBox[{
    RowBox[{"InvSPS", "[", "args", "]"}], "\[LeftDoubleBracket]", "2", 
    "\[RightDoubleBracket]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ReproductiveValues", "[", "args___", "]"}], ":=", 
   RowBox[{
    RowBox[{"InvSPS", "[", 
     RowBox[{"args", ",", 
      RowBox[{"RV", "\[Rule]", "True"}]}], "]"}], "\[LeftDoubleBracket]", "2",
     "\[RightDoubleBracket]"}]}], ";"}]}], "Code",
 CellChangeTimes->{3.7296170276678247`*^9},
 CellLabel->
  "In[551]:=",ExpressionUUID->"333fbf6b-fea7-45f6-bc7f-4a1b339047c6"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["DInv / NDInv", "Subsection",
 CellDingbat->
  "\[ClubSuit]",ExpressionUUID->"5de9877c-dc88-445d-8645-23b4fe7d7ec4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "DInv", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"InvOpts", "\[Rule]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"Method", "\[Rule]", "\"\<D\>\""}], ",", 
      RowBox[{"Guild", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"Species", "\[Rule]", "All"}], ",", 
      RowBox[{"FindEcoAttractorOpts", "\[Rule]", 
       RowBox[{"{", "}"}]}], ",", "\n", 
      RowBox[{"Chop", "\[Rule]", "True"}], ",", 
      RowBox[{"Simplify", "\[Rule]", "False"}], ",", 
      RowBox[{"RelativeStepSize", "\[Rule]", "0.001"}], ",", 
      RowBox[{"AbsoluteStepSize", "\[Rule]", "0.001"}], ",", 
      RowBox[{"Time", "\[Rule]", "t"}], ",", 
      RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
      RowBox[{"VerboseAll", "\[Rule]", "All"}]}], "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"notDInvOpts", "=", 
   RowBox[{"Except", "[", 
    RowBox[{"Alternatives", "@@", 
     RowBox[{"Replace", "[", 
      RowBox[{
       RowBox[{"Options", "[", "DInv", "]"}], ",", 
       RowBox[{
        RowBox[{"h_", "[", 
         RowBox[{"a_", ",", "_"}], "]"}], "\[RuleDelayed]", 
        RowBox[{"h", "[", 
         RowBox[{"a", ",", "_"}], "]"}]}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{
  3.687881459089369*^9, {3.688571690852398*^9, 3.6885716909662933`*^9}, 
   3.688585647493445*^9, {3.7255581858821*^9, 3.725558189447764*^9}, 
   3.7255604572355824`*^9, {3.7257520865568027`*^9, 3.725752089701908*^9}, 
   3.725752168794105*^9, {3.726056719863913*^9, 3.726056724967762*^9}, {
   3.755378746004305*^9, 
   3.7553787473617907`*^9}},ExpressionUUID->"f71239be-97e8-406b-b853-\
f413dc7e412d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NumDInv", "[", 
    RowBox[{
     RowBox[{"traitsin_", "?", "NumericRuleListQ"}], ",", "rest___"}], "]"}], 
   ":=", 
   RowBox[{"DInv", "[", 
    RowBox[{"traitsin", ",", "rest"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7312732009532747`*^9, 3.731273240645245*^9}, {
  3.731273854846739*^9, 3.731273865742675*^9}, {3.73127390603121*^9, 
  3.731273935076447*^9}, {3.73127401377391*^9, 3.731274014901495*^9}, {
  3.73128531122279*^9, 3.731285317211211*^9}, {3.731285457184133*^9, 
  3.731285458299242*^9}},
 CellLabel->
  "In[556]:=",ExpressionUUID->"a4f46646-cfc2-4630-89c5-4451c0dd903d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DInv", "[", 
    RowBox[{
     RowBox[{"traitsin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "TraitsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"solin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"var_:", "All"}], ",", 
       RowBox[{"ord_", "?", "NumberQ"}]}], "}"}], ",", 
     RowBox[{"pointin", ":", "notDInvOpts", ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<DInv\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "method", ",", "\[Epsilon]r", ",", "\[Epsilon]a", 
       ",", "invopts", ",", "guild", ",", "species", ",", "time", ",", 
       "simplify", ",", "chop", ",", "findecoattractoropts", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "sol", ",", 
       "res", ",", "res2", ",", "traits", ",", "traits2", ",", "point", ",", 
       "targetgu", ",", "targettr", ",", "inv", ",", "sp", ",", "vars", ",", 
       "h", ",", "h1", ",", "h2", ",", "invl", ",", "invr", ",", "invc"}], 
      "}"}], ",", "\n", "\n", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"solin", "\[Equal]", "$Failed"}], ",", 
        RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<traitsin=\>\"", ",", "traitsin"}], "]"}], ";", "\n", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<solin=\>\"", ",", "solin"}], "]"}], ";", "\n", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<{var,ord}=\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"var", ",", "ord"}], "}"}]}], "]"}], ";", "\n", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<pointin=\>\"", ",", "pointin"}], "]"}], ";"}], "*)"}], 
      "\n", "\n", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "Nsp", "}"}], ",", "\n", "\n", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
           RowBox[{
            RowBox[{"Msg", "[", 
             RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
            RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
         "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
         RowBox[{"verbose", "=", 
          RowBox[{"OptionValue", "[", "Verbose", "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
         RowBox[{"verboseall", "=", 
          RowBox[{"OptionValue", "[", "VerboseAll", "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"verboseall", ",", 
           RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
         RowBox[{"invopts", "=", 
          RowBox[{"OptionValue", "[", "InvOpts", "]"}]}], ";", "\n", 
         RowBox[{"method", "=", 
          RowBox[{"OptionValue", "[", "Method", "]"}]}], ";", "\n", 
         RowBox[{"\[Epsilon]a", "=", 
          RowBox[{"OptionValue", "[", "AbsoluteStepSize", "]"}]}], ";", "\n", 
         
         RowBox[{"\[Epsilon]r", "=", 
          RowBox[{"OptionValue", "[", "RelativeStepSize", "]"}]}], ";", "\n", 
         
         RowBox[{"guild", "=", 
          RowBox[{"OptionValue", "[", "Guild", "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"guild", "===", "Automatic"}], ",", 
           RowBox[{"guild", "=", 
            RowBox[{
            "guilds", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}]}]}], "]"}], ";", "\n", 
         RowBox[{"species", "=", 
          RowBox[{"OptionValue", "[", "Species", "]"}]}], ";", "\n", 
         RowBox[{"time", "=", 
          RowBox[{"OptionValue", "[", "Time", "]"}]}], ";", "\n", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"invopts", ",", 
           RowBox[{"Time", "\[Rule]", "time"}]}], "]"}], ";", "\n", 
         RowBox[{"simplify", "=", 
          RowBox[{"OptionValue", "[", "Simplify", "]"}]}], ";", "\n", 
         RowBox[{"chop", "=", 
          RowBox[{"OptionValue", "[", "Chop", "]"}]}], ";", "\n", 
         RowBox[{"findecoattractoropts", "=", 
          RowBox[{"OptionValue", "[", "FindEcoAttractorOpts", "]"}]}], ";", 
         "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"handle", " ", "blanks"}], " ", "&"}], " ", "figure", " ",
            "out", " ", "number", " ", "of", " ", "species", " ", "in", " ", 
           "guilds"}], " ", "*)"}], "\n", 
         RowBox[{"traits", "=", 
          RowBox[{"DeleteInvaders", "[", 
           RowBox[{"ExpandNspInTraits", "[", "traitsin", "]"}], "]"}]}], ";", 
         "\n", 
         RowBox[{"sol", "=", 
          RowBox[{"ExpandNspInPops", "[", "solin", "]"}]}], ";", "\n", 
         RowBox[{"SetNsp", "[", "traits", "]"}], ";", "\n", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"solin", "===", "\"\<FindEcoAttractor\>\""}], ",", "\n", 
           "\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", "\n", "\t\t", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"tr", "=", "traits"}], ",", 
                  RowBox[{"op", "=", 
                   RowBox[{"Sequence", "@@", "findecoattractoropts"}]}]}], 
                 "}"}], ",", "\n", "\t\t", 
                RowBox[{"PrintCall", "[", 
                 RowBox[{"Global`sol", "=", 
                  RowBox[{"FindEcoAttractor", "[", 
                   RowBox[{"tr", ",", "op"}], "]"}]}], "]"}]}], "\n", "\t", 
               "]"}]}], "]"}], ";", "\n", "\t", 
            RowBox[{"sol", "=", 
             RowBox[{"FindEcoAttractor", "[", 
              RowBox[{"traits", ",", 
               RowBox[{"Evaluate", "[", 
                RowBox[{"Sequence", "@@", "findecoattractoropts"}], "]"}]}], 
              "]"}]}]}]}], "\n", "]"}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"verbose", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: sol=\>\"", ",", "sol"}], "]"}]}], 
          "]"}], ";", "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"thread", " ", "a", " ", "list", " ", "of", " ", "points"}],
           " ", "*)"}], "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"Dimensions", "[", "pointin", "]"}], "]"}], "\[Equal]", 
            "2"}], ",", 
           RowBox[{"Return", "[", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"DInv", "[", 
                RowBox[{"traits", ",", "sol", ",", 
                 RowBox[{"{", 
                  RowBox[{"var", ",", "ord"}], "}"}], ",", "#", ",", "opts"}],
                 "]"}], "&"}], ",", "pointin"}], "]"}], "]"}]}], "]"}], ";", 
         "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<pointin=\>\"", ",", "pointin"}], "]"}], ";", "\n", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<species=\>\"", ",", "species"}], "]"}], ";"}], 
          "*)"}], "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{
          "figure", " ", "out", " ", "point", " ", "where", " ", "to", " ", 
           "evaluate", " ", "derivative"}], " ", "*)"}], "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"pointin", "\[Equal]", 
            RowBox[{"{", "}"}]}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"var", "===", "All"}], ",", "\n", "\t\t", 
              RowBox[{"targetgu", "=", "guild"}], ",", "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"ListQ", "[", "var", "]"}], ",", 
                RowBox[{"targetgu", "=", 
                 RowBox[{
                  RowBox[{"LookUp", "[", 
                   RowBox[{
                   "var", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}], "\[LeftDoubleBracket]", 
                  "2", "\[RightDoubleBracket]"}]}], ",", 
                RowBox[{"targetgu", "=", 
                 RowBox[{
                  RowBox[{"LookUp", "[", "var", "]"}], "\[LeftDoubleBracket]",
                   "2", "\[RightDoubleBracket]"}]}]}], "]"}]}], "\n", "\t", 
             "]"}], ";", "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"species", "===", "All"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Nsp", "[", "targetgu", "]"}], "\[Equal]", "0"}], 
                ",", 
                RowBox[{"species", "=", "0"}], ",", 
                RowBox[{"species", "=", 
                 RowBox[{"Table", "[", 
                  RowBox[{"sp", ",", 
                   RowBox[{"{", 
                    RowBox[{"sp", ",", 
                    RowBox[{"Nsp", "[", "targetgu", "]"}]}], "}"}]}], 
                  "]"}]}]}], "]"}]}], "]"}], ";", "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"ListQ", "[", "species", "]"}], ",", "\n", "\t\t", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"method", "\[Equal]", "\"\<NDInv\>\""}], ",", 
                 RowBox[{"Return", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"DInv", "[", 
                    RowBox[{"traits", ",", "sol", ",", 
                    RowBox[{"{", 
                    RowBox[{"var", ",", "ord"}], "}"}], ",", 
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"Species", "\[Rule]", "sp"}], ",", "opts"}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"sp", ",", "species"}], "}"}]}], "]"}], "]"}]}], 
                "]"}], ";", "\n", "\t\t", 
               RowBox[{"point", "=", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"targetgu", ",", "tr"}], "]"}], ",", "0"}], "]"}],
                     "\[Rule]", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"targetgu", ",", "tr"}], "]"}], ",", "sp"}], 
                    "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"tr", ",", 
                    RowBox[{"ntraits", "[", "targetgu", "]"}]}], "}"}]}], 
                    "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"sp", ",", "species"}], "}"}]}], "]"}], "/.", 
                 "traits"}]}]}], "\n", "\t", ",", "\n", "\t\t", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"species", "\[NotEqual]", "0"}], ",", "\n", "\t\t\t", 
                 RowBox[{"point", "=", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"targetgu", ",", "tr"}], "]"}], ",", "0"}], "]"}],
                     "\[Rule]", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"targetgu", ",", "tr"}], "]"}], ",", "species"}], 
                    "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"tr", ",", 
                    RowBox[{"ntraits", "[", "targetgu", "]"}]}], "}"}]}], 
                    "]"}], "/.", "traits"}]}], "\n", "\t\t", ",", "\n", 
                 "\t\t\t", 
                 RowBox[{"point", "=", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"targetgu", ",", "tr"}], "]"}], ",", "0"}], "]"}],
                     "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"targetgu", ",", "tr"}], "]"}], ",", "species"}], 
                    "]"}], "/.", "traitsin"}], ")"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"tr", ",", 
                    RowBox[{"ntraits", "[", "targetgu", "]"}]}], "}"}]}], 
                   "]"}]}]}], "\n", "\t\t", "]"}], ";"}]}], "\n", "\t", "]"}],
             ";"}], "\n", ",", "\n", "\t", 
           RowBox[{
            RowBox[{"targetgu", "=", 
             RowBox[{
              RowBox[{"LookUp", "[", 
               RowBox[{"pointin", "\[LeftDoubleBracket]", 
                RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], 
              "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ";", 
            "\n", "\t", 
            RowBox[{"point", "=", "pointin"}]}]}], "\n", "]"}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: targetgu=\>\"", ",", "targetgu"}], 
            "]"}]}], "]"}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: point=\>\"", ",", "point"}], "]"}]}], 
          "]"}], ";", "\n", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"var", "===", "All"}], ",", "\n", "\t", 
           RowBox[{"vars", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Subscript", "[", 
               RowBox[{
                RowBox[{"trait", "[", 
                 RowBox[{"targetgu", ",", "tr"}], "]"}], ",", "0"}], "]"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"tr", ",", 
                RowBox[{"ntraits", "[", "targetgu", "]"}]}], "}"}]}], "]"}]}],
            "\n", ",", "\n", "\t", 
           RowBox[{"vars", "=", "var"}]}], "\n", "]"}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: vars=\>\"", ",", "vars"}], "]"}]}], 
          "]"}], ";", "\n", "\n", 
         RowBox[{"Which", "[", "\n", "\t", 
          RowBox[{
           RowBox[{"method", "\[Equal]", "\"\<D\>\""}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", "\n", "\t\t", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"tr", "=", "traits"}], ",", 
                  RowBox[{"so", "=", "sol"}], ",", 
                  RowBox[{"tg", "=", "targetgu"}], ",", 
                  RowBox[{"op", "=", 
                   RowBox[{"Sequence", "@@", "invopts"}]}]}], "}"}], ",", 
                "\n", "\t\t", 
                RowBox[{"PrintCall", "[", 
                 RowBox[{"Global`inv", "=", 
                  RowBox[{"Simplify", "[", 
                   RowBox[{
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "so", ",", 
                    RowBox[{"Guild", "\[Rule]", "tg"}], ",", "op"}], "]"}], 
                    ",", 
                    RowBox[{"Assumptions", "\[Rule]", 
                    RowBox[{"_", "\[Element]", "Reals"}]}]}], "]"}]}], 
                 "]"}]}], "\n", "\t", "]"}]}], "]"}], ";", "\n", "\t", 
            RowBox[{"inv", "=", 
             RowBox[{"Simplify", "[", 
              RowBox[{
               RowBox[{"Inv", "[", 
                RowBox[{"traits", ",", "sol", ",", 
                 RowBox[{"Guild", "\[Rule]", "targetgu"}], ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"Sequence", "@@", "invopts"}], "]"}]}], "]"}], ",", 
               
               RowBox[{"Assumptions", "\[Rule]", 
                RowBox[{"_", "\[Element]", "Reals"}]}]}], "]"}]}], ";", "\n", 
            "\t", 
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", 
              RowBox[{"Print", "[", 
               RowBox[{"func", ",", "\"\<: inv=\>\"", ",", "inv"}], "]"}]}], 
             "]"}], ";", "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", "\n", "\t\t", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"vars", "=", "vars"}], ",", 
                  RowBox[{"inv", "=", "inv"}], ",", 
                  RowBox[{"point", "=", "point"}], ",", 
                  RowBox[{"traits", "=", "traits"}]}], "}"}], ",", "\n", 
                "\t\t", 
                RowBox[{"PrintCall", "[", 
                 RowBox[{"Global`res", "=", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"D", "[", 
                    RowBox[{"inv", ",", 
                    RowBox[{"{", 
                    RowBox[{"vars", ",", "ord"}], "}"}]}], "]"}], "/.", 
                    "point"}], "/.", "traits"}]}], "]"}]}], "\n", "\t", 
               "]"}]}], "]"}], ";", "\n", "\t", 
            RowBox[{"res", "=", 
             RowBox[{
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{"inv", ",", 
                 RowBox[{"{", 
                  RowBox[{"vars", ",", "ord"}], "}"}]}], "]"}], "/.", 
               "point"}], "/.", "traits"}]}], ";", " ", 
            RowBox[{"(*", " ", 
             RowBox[{"is", " ", "/.", 
              RowBox[{"traits", " ", "necessary", "??"}]}], " ", "*)"}], "\n",
             "\t", 
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", 
              RowBox[{"Print", "[", 
               RowBox[{"func", ",", "\"\<: res=\>\"", ",", "res"}], "]"}]}], 
             "]"}], ";"}], "\n", "\n", ",", "\n", "\t", 
           RowBox[{"method", "\[Equal]", "\"\<NDInv\>\""}], ",", "\n", "\t", 
           RowBox[{"Which", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{"ord", "\[Equal]", "1"}], ",", "\n", "\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"ListQ", "[", "vars", "]"}], ",", "\n", "\t\t\t", 
               RowBox[{"(*", " ", "gradient", " ", "*)"}], "\n", "\t\t\t", 
               RowBox[{
                RowBox[{"Return", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"DInv", "[", 
                    RowBox[{"traits", ",", "sol", ",", 
                    RowBox[{"{", 
                    RowBox[{"#", ",", "ord"}], "}"}], ",", "point", ",", 
                    "opts"}], "]"}], "&"}], " ", "/@", " ", "vars"}], "]"}], 
                ";"}], "\n", "\t\t", ",", " ", 
               RowBox[{"(*", " ", 
                RowBox[{"first", " ", "derivative"}], " ", "*)"}], "\n", 
               "\t\t\t", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{"Global`debug", ",", 
                  RowBox[{"Print", "[", 
                   RowBox[{
                   "func", ",", 
                    "\"\<: 1st derivative (finite difference)\>\""}], "]"}]}],
                  "]"}], ";", "\n", "\t\t\t", 
                RowBox[{"h", "=", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Epsilon]r", "*", "var"}], "/.", "point"}], 
                   ")"}], "+", "\[Epsilon]a"}]}], ";", "\n", "\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{"verbose", ",", "\n", "\t\t\t\t", 
                  RowBox[{"With", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"tr", "=", "traits"}], ",", 
                    RowBox[{"so", "=", "sol"}], ",", 
                    RowBox[{"pt", "=", 
                    RowBox[{"RuleListTweak", "[", 
                    RowBox[{"point", ",", "vars", ",", 
                    RowBox[{"-", "h"}]}], "]"}]}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "invopts"}]}]}], "}"}], ",", 
                    "\n", "\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"IFFQ", "[", "so", "]"}], ",", "\n", "\t\t\t\t\t", 
                    RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`invl", "=", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "Global`sol", ",", "pt", ",", "op"}], 
                    "]"}]}], "]"}], ",", "\n", "\t\t\t\t\t", 
                    RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`invl", "=", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "so", ",", "pt", ",", "op"}], "]"}]}], 
                    "]"}]}], "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", 
                   "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                RowBox[{"invl", "=", 
                 RowBox[{"Inv", "[", 
                  RowBox[{"traits", ",", "sol", ",", 
                   RowBox[{"RuleListTweak", "[", 
                    RowBox[{"point", ",", "vars", ",", 
                    RowBox[{"-", "h"}]}], "]"}], ",", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}]}], "]"}]}], 
                ";", "\n", "\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{"verbose", ",", 
                  RowBox[{"Print", "[", 
                   RowBox[{"func", ",", "\"\< invl=\>\"", ",", "invl"}], 
                   "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{"verbose", ",", "\n", "\t\t\t\t", 
                  RowBox[{"With", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"tr", "=", "traits"}], ",", 
                    RowBox[{"so", "=", "sol"}], ",", 
                    RowBox[{"pt", "=", 
                    RowBox[{"RuleListTweak", "[", 
                    RowBox[{"point", ",", "vars", ",", "h"}], "]"}]}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "invopts"}]}]}], "}"}], ",", 
                    "\n", "\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"IFFQ", "[", "so", "]"}], ",", "\n", "\t\t\t\t\t", 
                    RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`invr", "=", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "Global`sol", ",", "pt", ",", "op"}], 
                    "]"}]}], "]"}], ",", "\n", "\t\t\t\t\t", 
                    RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`invr", "=", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "so", ",", "pt", ",", "op"}], "]"}]}], 
                    "]"}]}], "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", 
                   "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                RowBox[{"invr", "=", 
                 RowBox[{"Inv", "[", 
                  RowBox[{"traits", ",", "sol", ",", 
                   RowBox[{"RuleListTweak", "[", 
                    RowBox[{"point", ",", "vars", ",", "h"}], "]"}], ",", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}]}], "]"}]}], 
                ";", "\n", "\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{"verbose", ",", 
                  RowBox[{"Print", "[", 
                   RowBox[{"func", ",", "\"\< invr=\>\"", ",", "invr"}], 
                   "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"invl", "\[Equal]", "$Failed"}], "||", 
                   RowBox[{"invr", "\[Equal]", "$Failed"}]}], ",", 
                  RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", "\n",
                 "\t\t\t", 
                RowBox[{"res", "=", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"invr", "-", "invl"}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"2", "h"}], ")"}]}]}], ";"}]}], "\n", "\t\t", 
              "]"}], "\n", "\t", ",", "\n", "\t\t", 
             RowBox[{"ord", "\[Equal]", "2"}], ",", " ", "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"ListQ", "[", "vars", "]"}], ",", "\n", "\t\t\t", 
                RowBox[{"(*", " ", 
                 RowBox[{"Hessian", " ", "matrix"}], " ", "*)"}], "\n", 
                "\t\t\t", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{"Global`debug", ",", 
                   RowBox[{"Print", "[", 
                    RowBox[{
                    "func", ",", 
                    "\"\<: Hessian matrix (finite difference)\>\""}], "]"}]}],
                   "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"res", "=", 
                  RowBox[{"ConstantArray", "[", 
                   RowBox[{"0", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Length", "[", "vars", "]"}], ",", 
                    RowBox[{"Length", "[", "vars", "]"}]}], "}"}]}], "]"}]}], 
                 ";", "\n", "\t\t\t", 
                 RowBox[{"Do", "[", "\n", "\t\t\t\t", 
                  RowBox[{"(*", " ", 
                   RowBox[{"diagonal", " ", "entries"}], " ", "*)"}], "\t\t", 
                  "\n", "\t\t\t\t", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"h", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Epsilon]r", "*", 
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "v1", 
                    "\[RightDoubleBracket]"}]}], "/.", "point"}], ")"}], "+", 
                    "\[Epsilon]a"}]}], ";", "\n", "\t\t\t\t", 
                    RowBox[{"res", "=", 
                    RowBox[{"ReplacePart", "[", 
                    RowBox[{"res", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"v1", ",", "v1"}], "}"}], "\[Rule]", "\n", 
                    "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Inv", "[", 
                    RowBox[{"traits", ",", "sol", ",", 
                    RowBox[{"RuleListTweak", "[", 
                    RowBox[{"point", ",", 
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "v1", 
                    "\[RightDoubleBracket]"}], ",", "h"}], "]"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}]}], "]"}], 
                    "\n", "\t\t\t\t\t", "-", 
                    RowBox[{"2", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"traits", ",", "sol", ",", "point", ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}]}], "]"}]}], 
                    "\n", "\t\t\t\t\t", "+", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"traits", ",", "sol", ",", 
                    RowBox[{"RuleListTweak", "[", 
                    RowBox[{"point", ",", 
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "v1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"-", "h"}]}], "]"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}]}], "]"}]}], 
                    ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"h", "^", "2"}], ")"}]}]}]}], "\n", "\t\t\t\t", 
                    "]"}]}], ";", "\n", "\t\t\t\t", 
                    RowBox[{"(*", " ", 
                    RowBox[{"offdiagonal", " ", "entries"}], " ", "*)"}], 
                    "\n", "\t\t\t\t", 
                    RowBox[{"Do", "[", "\n", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"h1", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Epsilon]r", "*", 
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "v1", 
                    "\[RightDoubleBracket]"}]}], "/.", "point"}], ")"}], "+", 
                    "\[Epsilon]a"}]}], ";", "\n", "\t\t\t\t\t", 
                    RowBox[{"h2", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Epsilon]r", "*", 
                    RowBox[{
                    "vars", "\[LeftDoubleBracket]", "v2", 
                    "\[RightDoubleBracket]"}]}], "/.", "point"}], ")"}], "+", 
                    "\[Epsilon]a"}]}], ";", "\n", "\t\t\t\t\t", 
                    RowBox[{"res", "=", 
                    RowBox[{"ReplacePart", "[", 
                    RowBox[{"res", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"v1", ",", "v2"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"v2", ",", "v1"}], "}"}]}], "}"}], "\[Rule]", 
                    "\n", "\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Inv", "[", 
                    RowBox[{"traits", ",", "sol", ",", 
                    RowBox[{"RuleListTweak", "[", 
                    RowBox[{"point", ",", 
                    RowBox[{"vars", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"v1", ",", "v2"}], "}"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"h1", ",", "h2"}], "}"}]}], "]"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}]}], "]"}], 
                    "\n", "\t\t\t\t\t\t", "-", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"traits", ",", "sol", ",", 
                    RowBox[{"RuleListTweak", "[", 
                    RowBox[{"point", ",", 
                    RowBox[{"vars", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"v1", ",", "v2"}], "}"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"h1", ",", 
                    RowBox[{"-", "h2"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}]}], "]"}], 
                    "\n", "\t\t\t\t\t\t", "-", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"traits", ",", "sol", ",", 
                    RowBox[{"RuleListTweak", "[", 
                    RowBox[{"point", ",", 
                    RowBox[{"vars", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"v1", ",", "v2"}], "}"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "h1"}], ",", "h2"}], "}"}]}], "]"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}]}], "]"}], 
                    "\n", "\t\t\t\t\t\t", "+", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"traits", ",", "sol", ",", 
                    RowBox[{"RuleListTweak", "[", 
                    RowBox[{"point", ",", 
                    RowBox[{"vars", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"v1", ",", "v2"}], "}"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "h1"}], ",", 
                    RowBox[{"-", "h2"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}]}], "]"}]}], 
                    ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"4", "*", "h1", "*", "h2"}], ")"}]}]}]}], "\n", 
                    "\t\t\t\t\t", "]"}]}], ";"}], "\t\t\t\t\t", "\n", 
                    "\t\t\t\t", ",", 
                    RowBox[{"{", 
                    RowBox[{"v2", ",", 
                    RowBox[{"v1", "+", "1"}], ",", 
                    RowBox[{"Length", "[", "vars", "]"}]}], "}"}]}], "]"}]}], 
                   "\n", "\t\t\t", ",", 
                   RowBox[{"{", 
                    RowBox[{"v1", ",", "1", ",", 
                    RowBox[{"Length", "[", "vars", "]"}]}], "}"}]}], "]"}], 
                 ";"}], "\n", "\t\t", ",", " ", 
                RowBox[{"(*", " ", 
                 RowBox[{"second", " ", "derivative"}], " ", "*)"}], "\n", 
                "\t\t\t", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{"Global`debug", ",", 
                   RowBox[{"Print", "[", 
                    RowBox[{
                    "func", ",", 
                    "\"\<: 2nd derivative (finite difference)\>\""}], "]"}]}],
                   "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"h", "=", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Epsilon]r", "*", "var"}], "/.", "point"}], 
                    ")"}], "+", "\[Epsilon]a"}]}], ";", "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"verbose", ",", "\n", "\t\t\t\t", 
                   RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"tr", "=", "traits"}], ",", 
                    RowBox[{"so", "=", "sol"}], ",", 
                    RowBox[{"pt", "=", 
                    RowBox[{"RuleListTweak", "[", 
                    RowBox[{"point", ",", "vars", ",", 
                    RowBox[{"-", "h"}]}], "]"}]}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "invopts"}]}]}], "}"}], ",", 
                    "\n", "\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"IFFQ", "[", "so", "]"}], ",", "\n", "\t\t\t\t\t", 
                    RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`invl", "=", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "Global`sol", ",", "pt", ",", "op"}], 
                    "]"}]}], "]"}], ",", "\n", "\t\t\t\t\t", 
                    RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`invl", "=", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "so", ",", "pt", ",", "op"}], "]"}]}], 
                    "]"}]}], "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", 
                    "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"invl", "=", 
                  RowBox[{"Inv", "[", 
                   RowBox[{"traits", ",", "sol", ",", 
                    RowBox[{"RuleListTweak", "[", 
                    RowBox[{"point", ",", "vars", ",", 
                    RowBox[{"-", "h"}]}], "]"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}]}], "]"}]}], 
                 ";", "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"verbose", ",", 
                   RowBox[{"Print", "[", 
                    RowBox[{"func", ",", "\"\< invl=\>\"", ",", "invl"}], 
                    "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"verbose", ",", "\n", "\t\t\t\t", 
                   RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"tr", "=", "traits"}], ",", 
                    RowBox[{"so", "=", "sol"}], ",", 
                    RowBox[{"pt", "=", 
                    RowBox[{"RuleListTweak", "[", 
                    RowBox[{"point", ",", "vars", ",", "h"}], "]"}]}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "invopts"}]}]}], "}"}], ",", 
                    "\n", "\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"IFFQ", "[", "so", "]"}], ",", "\n", "\t\t\t\t\t", 
                    RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`invr", "=", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "Global`sol", ",", "pt", ",", "op"}], 
                    "]"}]}], "]"}], ",", "\n", "\t\t\t\t\t", 
                    RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`invr", "=", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "so", ",", "pt", ",", "op"}], "]"}]}], 
                    "]"}]}], "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", 
                    "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"invr", "=", 
                  RowBox[{"Inv", "[", 
                   RowBox[{"traits", ",", "sol", ",", 
                    RowBox[{"RuleListTweak", "[", 
                    RowBox[{"point", ",", "vars", ",", "h"}], "]"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}]}], "]"}]}], 
                 ";", "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"verbose", ",", 
                   RowBox[{"Print", "[", 
                    RowBox[{"func", ",", "\"\< invr=\>\"", ",", "invr"}], 
                    "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"verbose", ",", "\n", "\t\t\t\t", 
                   RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"tr", "=", "traits"}], ",", 
                    RowBox[{"so", "=", "sol"}], ",", 
                    RowBox[{"pt", "=", "point"}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "invopts"}]}]}], "}"}], ",", 
                    "\n", "\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"IFFQ", "[", "so", "]"}], ",", "\n", "\t\t\t\t\t", 
                    RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`invc", "=", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "Global`sol", ",", "pt", ",", "op"}], 
                    "]"}]}], "]"}], ",", "\n", "\t\t\t\t\t", 
                    RowBox[{"PrintCall", "[", 
                    RowBox[{"Global`invc", "=", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "so", ",", "pt", ",", "op"}], "]"}]}], 
                    "]"}]}], "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", 
                    "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"invc", "=", 
                  RowBox[{"Inv", "[", 
                   RowBox[{"traits", ",", "sol", ",", "point", ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}]}], "]"}]}], 
                 ";", "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"verbose", ",", 
                   RowBox[{"Print", "[", 
                    RowBox[{"func", ",", "\"\< invc=\>\"", ",", "invc"}], 
                    "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"invl", "\[Equal]", "$Failed"}], "||", 
                    RowBox[{"invr", "\[Equal]", "$Failed"}], "||", 
                    RowBox[{"invc", "\[Equal]", "$Failed"}]}], ",", 
                   RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                 "\n", "\t\t\t", 
                 RowBox[{"res", "=", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"invr", "-", 
                    RowBox[{"2", "invc"}], "+", "invl"}], ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"h", "^", "2"}], ")"}]}]}], ";"}]}], "\n", 
               "\t\t\t", "]"}], ";"}]}], "\n", "\t\t", "]"}], "\n", "\t", ",",
            "\n", "\t\t", "Else", ",", "\n", "\t\t", 
           RowBox[{
            RowBox[{"Msg", "[", 
             RowBox[{"DInv", "::", "badmtd"}], "]"}], ";", "\n", "\t\t", 
            RowBox[{"Return", "[", "$Failed", "]"}], ";"}]}], "\n", "\t", 
          "]"}], ";", "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"postprocess", " ", "&"}], " ", "return", " ", "answer"}], 
          " ", "*)"}], "\n", "\n", 
         RowBox[{"Which", "[", "\n", "\t", 
          RowBox[{
           RowBox[{"simplify", "===", "True"}], ",", "\n", "\t", 
           RowBox[{"res2", "=", 
            RowBox[{"Simplify", "[", 
             RowBox[{
              RowBox[{"res", "/.", "traits"}], ",", 
              RowBox[{"Assumptions", "\[RuleDelayed]", 
               RowBox[{"{", 
                RowBox[{"_", "\[Element]", "Reals"}], "}"}]}]}], "]"}]}], ",",
            "\n", "\t", 
           RowBox[{"simplify", "===", "Full"}], ",", "\n", "\t", 
           RowBox[{"res2", "=", 
            RowBox[{"FullSimplify", "[", 
             RowBox[{
              RowBox[{"res", "/.", "traits"}], ",", 
              RowBox[{"Assumptions", "\[RuleDelayed]", 
               RowBox[{"{", 
                RowBox[{"_", "\[Element]", "Reals"}], "}"}]}]}], "]"}]}], ",",
            "\n", "\t", "Else", ",", "\n", "\t", 
           RowBox[{"res2", "=", 
            RowBox[{"res", "/.", "traits"}]}]}], "\n", "]"}], ";", "\n", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"chop", "\[Equal]", "True"}], ",", 
           RowBox[{"Return", "[", 
            RowBox[{"Chop", "[", "res2", "]"}], "]"}], ",", 
           RowBox[{"Return", "[", "res2", "]"}]}], "]"}], ";"}]}], "\n", "\n",
        "]"}]}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.688409484860559*^9, 3.6884094850430193`*^9}, {
   3.688571691014352*^9, 3.688571691363763*^9}, {3.688571766944192*^9, 
   3.688571767662545*^9}, {3.6885718071425858`*^9, 3.688571807347781*^9}, {
   3.68858564757653*^9, 3.6885856476304073`*^9}, {3.6886848351191*^9, 
   3.688684836110936*^9}, {3.688685239575528*^9, 3.6886852684243*^9}, {
   3.688685371216267*^9, 3.688685457071373*^9}, {3.688685491805615*^9, 
   3.6886855944321012`*^9}, {3.688685666081101*^9, 3.688685709071876*^9}, {
   3.688686532393525*^9, 3.688686570531084*^9}, {3.688686967619643*^9, 
   3.6886869718511744`*^9}, {3.688687501595601*^9, 3.688687509051474*^9}, {
   3.688690191864471*^9, 3.688690216811286*^9}, {3.6886904359314833`*^9, 
   3.688690436779223*^9}, {3.693593344753676*^9, 3.693593346087776*^9}, {
   3.696162142128591*^9, 3.6961621421421747`*^9}, {3.699656814130727*^9, 
   3.699656827772263*^9}, {3.699656922989606*^9, 3.69965692643228*^9}, {
   3.6996574841035137`*^9, 3.699657485146899*^9}, {3.6997224759081907`*^9, 
   3.699722510955907*^9}, {3.699722890602481*^9, 3.699722911516399*^9}, {
   3.708585314577449*^9, 3.708585320578861*^9}, {3.708585403464273*^9, 
   3.708585410058454*^9}, {3.70858748687399*^9, 3.708587492861423*^9}, {
   3.708588849708815*^9, 3.7085888503253107`*^9}, {3.7087891958429937`*^9, 
   3.7087892006910477`*^9}, {3.708789264908865*^9, 3.7087893328205547`*^9}, 
   3.7087899884770823`*^9, 3.708790770609296*^9, {3.7088346989343987`*^9, 
   3.7088347037724257`*^9}, {3.708856414950561*^9, 3.708856610207053*^9}, {
   3.708856666248259*^9, 3.708856698258183*^9}, {3.7088567711223707`*^9, 
   3.708856782794072*^9}, 3.708856814155902*^9, {3.7088568780609093`*^9, 
   3.708856928919075*^9}, {3.7088573673450336`*^9, 3.708857411015568*^9}, 
   3.7091248982923813`*^9, {3.7093367783792267`*^9, 3.709336781483921*^9}, {
   3.710105984843395*^9, 3.710105985569549*^9}, {3.710265160739797*^9, 
   3.710265165947465*^9}, {3.710496908302792*^9, 3.710496908456031*^9}, 
   3.7105881035658197`*^9, {3.711544885196096*^9, 3.711544892165225*^9}, {
   3.722026185946472*^9, 3.722026187040079*^9}, {3.7220340826764708`*^9, 
   3.722034086411149*^9}, {3.722086689487018*^9, 3.722086775803793*^9}, {
   3.725558609643663*^9, 3.7255586135269547`*^9}, {3.7255587410876617`*^9, 
   3.725558756822927*^9}, {3.725560004204715*^9, 3.725560006101136*^9}, {
   3.725560101343862*^9, 3.725560207009861*^9}, {3.725560257860138*^9, 
   3.72556026839965*^9}, {3.725560537907435*^9, 3.725560539363446*^9}, {
   3.725560608962031*^9, 3.72556071678693*^9}, {3.7255607596245193`*^9, 
   3.725560769822461*^9}, {3.725560852112874*^9, 3.725560860379747*^9}, {
   3.725560897881933*^9, 3.7255609105596733`*^9}, {3.725561232427062*^9, 
   3.7255612426003036`*^9}, {3.7255615927932663`*^9, 3.725561684615382*^9}, {
   3.725561722990157*^9, 3.725561744402972*^9}, {3.725561776214594*^9, 
   3.725561778363262*^9}, {3.7255618393099327`*^9, 3.7255619440220346`*^9}, {
   3.725562022409676*^9, 3.725562033240193*^9}, {3.725562070921035*^9, 
   3.725562132048007*^9}, {3.7257521464767847`*^9, 3.725752164357243*^9}, {
   3.72575837902586*^9, 3.725758419195056*^9}, {3.725758460341859*^9, 
   3.725758507753395*^9}, {3.7257585615051394`*^9, 3.725758568887459*^9}, {
   3.725758608591385*^9, 3.725758706182255*^9}, {3.726056506793614*^9, 
   3.726056512890716*^9}, {3.726056601749178*^9, 3.726056668282688*^9}, {
   3.726058724215993*^9, 3.7260587330185947`*^9}, {3.7260590982638273`*^9, 
   3.726059125588871*^9}, {3.7260592790346127`*^9, 3.726059284387944*^9}, {
   3.7260594848063726`*^9, 3.726059628393922*^9}, {3.726059668971458*^9, 
   3.72605967805964*^9}, {3.727140212475288*^9, 3.727140266258151*^9}, {
   3.727140344345508*^9, 3.727140347539303*^9}, {3.7271434497477694`*^9, 
   3.727143451156063*^9}, {3.727192130266629*^9, 3.727192133431782*^9}, {
   3.727193306852077*^9, 3.727193354905002*^9}, {3.727193934117882*^9, 
   3.727193937684354*^9}, {3.727195117242364*^9, 3.727195120514324*^9}, {
   3.727195209419877*^9, 3.727195236565754*^9}, 3.727226453261628*^9, {
   3.727226593262945*^9, 3.7272265955154657`*^9}, {3.727260862899851*^9, 
   3.727260865797398*^9}, {3.727261233240588*^9, 3.727261250202814*^9}, {
   3.727261505456867*^9, 3.727261515781476*^9}, {3.729285282916044*^9, 
   3.7292853008036423`*^9}, {3.7292857400058947`*^9, 
   3.7292857442232027`*^9}, {3.7312739091858683`*^9, 3.731273910710496*^9}, {
   3.731273970041256*^9, 3.731273991609583*^9}, {3.732665330477049*^9, 
   3.73266534084612*^9}, 3.7326654826316967`*^9, {3.732665594349462*^9, 
   3.732665609806953*^9}, {3.732665740448535*^9, 3.732665756709363*^9}, {
   3.732665794667954*^9, 3.7326658214886503`*^9}, 3.732666338672516*^9, {
   3.732666376522126*^9, 3.732666377020028*^9}, {3.732666469062303*^9, 
   3.732666469235889*^9}, {3.7326677173828278`*^9, 3.732667721325086*^9}, 
   3.732668611942316*^9, {3.735228216624214*^9, 3.735228286106765*^9}, {
   3.735228337600596*^9, 3.7352283420153723`*^9}, {3.755378794262679*^9, 
   3.755378813549526*^9}, {3.758827118984214*^9, 3.75882713912175*^9}, {
   3.7588272807643023`*^9, 
   3.758827281661419*^9}},ExpressionUUID->"f53e35b2-92ff-4e04-a502-\
367f97f3470c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"first", " ", "derivative", " ", "abbreviated", " ", "syntax"}], 
   " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"DInv", "[", 
     RowBox[{
      RowBox[{"traits_", "?", "TraitsQ"}], ",", 
      RowBox[{"solin_", "?", "VariablesQ"}], ",", 
      RowBox[{"var", ":", 
       RowBox[{"(", 
        RowBox[{"_Subscript", "|", "_List", "|", "_Symbol"}], ")"}], ":", 
       "All"}], ",", 
      RowBox[{"pointin", ":", "notDInvOpts", ":", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
    RowBox[{"(", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "6", "]"}], ";"}], "*)"}], 
     RowBox[{"DInv", "[", 
      RowBox[{"traits", ",", "solin", ",", 
       RowBox[{"{", 
        RowBox[{"var", ",", "1"}], "}"}], ",", "pointin", ",", "opts"}], 
      "]"}], ")"}]}], ";"}]}]], "Code",
 CellChangeTimes->{
  3.69972280744681*^9, {3.699722881704784*^9, 3.699722881892372*^9}, 
   3.725756793483491*^9, {3.725757515967395*^9, 3.7257575162805967`*^9}, 
   3.7260594643223543`*^9, 3.726059604293744*^9, {3.727140415556292*^9, 
   3.727140419156055*^9}, 3.72714148606056*^9, 3.727143438161161*^9, 
   3.727192155695634*^9, 3.727192503860918*^9, 3.727193291259635*^9, 
   3.727193472814435*^9, 3.727193925450945*^9, 3.7271962703842897`*^9, 
   3.727196392932638*^9, 3.727196512423168*^9, 3.727260894419335*^9, {
   3.7272611784481983`*^9, 3.727261201465591*^9}, {3.727261369485969*^9, 
   3.727261391324809*^9}, 3.727261484507711*^9, 3.72731333805532*^9, 
   3.7273136176291656`*^9, 3.7273141576347847`*^9, {3.727314205809149*^9, 
   3.727314210582155*^9}, 3.727615364737482*^9, 3.73266528411712*^9, 
   3.7326664831727877`*^9},
 CellLabel->
  "In[558]:=",ExpressionUUID->"39b1e3e8-f170-40ac-ba0d-4ed782f2e976"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"no", " ", "point", " ", "syntax"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"DInv", "[", 
     RowBox[{
      RowBox[{"traits_", "?", "TraitsQ"}], ",", 
      RowBox[{"solin_", "?", "VariablesQ"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"var", ":", 
         RowBox[{"(", 
          RowBox[{"_Subscript", "|", "_List", "|", "_Symbol"}], ")"}], ":", 
         "All"}], ",", 
        RowBox[{"ord_", "?", "NumberQ"}]}], "}"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
    RowBox[{"(", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "5", "]"}], ";"}], "*)"}], 
     RowBox[{"DInv", "[", 
      RowBox[{"traits", ",", "solin", ",", 
       RowBox[{"{", 
        RowBox[{"var", ",", "ord"}], "}"}], ",", 
       RowBox[{"Guild", "\[Rule]", "1"}], ",", "opts"}], "]"}], ")"}]}], 
   ";"}]}]], "Code",
 CellChangeTimes->{
  3.68857169138844*^9, 3.699722810793474*^9, 3.6997228791649437`*^9, 
   3.725756790585678*^9, {3.725757518532866*^9, 3.7257575186986027`*^9}, 
   3.7260594661617727`*^9, 3.726059605375781*^9, {3.727140397915341*^9, 
   3.7271404132153*^9}, {3.727141336476815*^9, 3.727141341484304*^9}, 
   3.727141487643011*^9, 3.727143434843361*^9, 3.727192153260571*^9, 
   3.7271925054610863`*^9, 3.727193293300386*^9, 3.7271934708510923`*^9, 
   3.727193923385489*^9, 3.72719606000701*^9, {3.727196273528886*^9, 
   3.727196282277506*^9}, 3.7271963950856867`*^9, 3.727196510439114*^9, 
   3.7272608978730507`*^9, {3.727261176222126*^9, 3.727261194197514*^9}, {
   3.7272613729628563`*^9, 3.727261393368786*^9}, 3.727261482638817*^9, 
   3.727313344534107*^9, 3.7273136206004057`*^9, 3.7273141550773087`*^9, {
   3.727314198716218*^9, 3.727314203426941*^9}, 3.727615368035083*^9, 
   3.732665280303267*^9, 3.7326664862501087`*^9},
 CellLabel->
  "In[559]:=",ExpressionUUID->"c8ee39f3-ab6f-47b1-8963-4a70131b647b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"no", " ", "order"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"DInv", "[", 
     RowBox[{
      RowBox[{"traits_", "?", "TraitsQ"}], ",", 
      RowBox[{"solin_", "?", "VariablesQ"}], ",", 
      RowBox[{"{", 
       RowBox[{"var", ":", 
        RowBox[{"(", 
         RowBox[{"_Subscript", "|", "_List", "|", "_Symbol"}], ")"}], ":", 
        "All"}], "}"}], ",", 
      RowBox[{"pointin", ":", "notDInvOpts", ":", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
    RowBox[{"(", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "4", "]"}], ";"}], "*)"}], 
     RowBox[{"DInv", "[", 
      RowBox[{"traits", ",", "solin", ",", 
       RowBox[{"{", 
        RowBox[{"var", ",", "1"}], "}"}], ",", "pointin", ",", "opts"}], 
      "]"}], ")"}]}], ";"}]}]], "Code",
 CellChangeTimes->{
  3.699722812506421*^9, 3.699722871969008*^9, 3.7257567872167473`*^9, {
   3.7257575335794697`*^9, 3.7257575337258987`*^9}, 3.7260594679794283`*^9, 
   3.726059606582761*^9, {3.7271403877988567`*^9, 3.727140402679377*^9}, 
   3.727140549538684*^9, 3.727140877526353*^9, {3.727141243496011*^9, 
   3.727141269191238*^9}, {3.727141332430135*^9, 3.7271413334167767`*^9}, 
   3.727141488811454*^9, 3.72714343136979*^9, 3.72719215111056*^9, 
   3.727192507190113*^9, 3.727193295068707*^9, 3.727193468122966*^9, 
   3.727193919813382*^9, 3.7271960620993958`*^9, 3.727196288488158*^9, 
   3.727196397259202*^9, 3.727196509206993*^9, 3.7272608888699207`*^9, {
   3.7272611747139797`*^9, 3.727261191727265*^9}, {3.72726139523263*^9, 
   3.727261399796979*^9}, 3.72726148157311*^9, 3.7273133475655403`*^9, 
   3.7273136238364067`*^9, 3.7273141522426367`*^9, {3.727314190980406*^9, 
   3.727314195820622*^9}, 3.727615371907753*^9, 3.7326652754035683`*^9, 
   3.732666489651609*^9},
 CellLabel->
  "In[560]:=",ExpressionUUID->"ca56b5fa-80fe-4193-864c-1361b086a679"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"no", " ", "order"}], ",", " ", 
    RowBox[{"no", " ", "point"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"DInv", "[", 
     RowBox[{
      RowBox[{"traits_", "?", "TraitsQ"}], ",", 
      RowBox[{"solin_", "?", "VariablesQ"}], ",", 
      RowBox[{"{", 
       RowBox[{"var", ":", 
        RowBox[{"(", 
         RowBox[{"_Subscript", "|", "_List", "|", "_Symbol"}], ")"}], ":", 
        "All"}], "}"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
    RowBox[{"(", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "3", "]"}], ";"}], "*)"}], 
     RowBox[{"DInv", "[", 
      RowBox[{"traits", ",", "solin", ",", 
       RowBox[{"{", 
        RowBox[{"var", ",", "1"}], "}"}], ",", 
       RowBox[{"Guild", "\[Rule]", "1"}], ",", "opts"}], "]"}], ")"}]}], 
   ";"}]}]], "Code",
 CellChangeTimes->{
  3.688571691421088*^9, 3.699722814754191*^9, {3.699722869064487*^9, 
   3.699722869193791*^9}, 3.72575678415497*^9, {3.7257575362044*^9, 
   3.7257575363417673`*^9}, 3.72605947068779*^9, 3.7260596091148233`*^9, 
   3.7260596845837193`*^9, {3.727140375994042*^9, 3.727140404574559*^9}, 
   3.727140509484771*^9, 3.727140879269641*^9, 3.72714108162078*^9, {
   3.7271411209400883`*^9, 3.727141122411648*^9}, {3.727141224804719*^9, 
   3.7271412639061003`*^9}, {3.727141312385696*^9, 3.7271413135234423`*^9}, 
   3.7271414899359617`*^9, 3.72714342765114*^9, 3.7271921483948708`*^9, {
   3.727192508797303*^9, 3.727192508998425*^9}, 3.7271932964122467`*^9, 
   3.72719346545336*^9, {3.727193911312727*^9, 3.7271939162174187`*^9}, 
   3.7271960652034607`*^9, 3.727196290839582*^9, 3.7271964004359703`*^9, 
   3.727196507243387*^9, 3.727260883041197*^9, {3.7272611734706507`*^9, 
   3.7272611894810658`*^9}, {3.7272613974525223`*^9, 3.7272614026271753`*^9}, 
   3.727261480216404*^9, 3.72731335245364*^9, 3.727313625931975*^9, {
   3.727314142598454*^9, 3.727314144999652*^9}, {3.7273141828756437`*^9, 
   3.727314188837471*^9}, 3.727615438272572*^9, 3.73266527070652*^9, 
   3.732666492553896*^9},
 CellLabel->
  "In[561]:=",ExpressionUUID->"ae4e6461-e55e-4a2a-85b4-2eb0d9b1cbbc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"no", " ", "var"}], ",", " ", 
    RowBox[{"no", " ", "order"}], ",", " ", 
    RowBox[{"no", " ", "point"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"DInv", "[", 
     RowBox[{
      RowBox[{"traits_", "?", "TraitsQ"}], ",", 
      RowBox[{"solin_", "?", "VariablesQ"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
    RowBox[{"(", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "2", "]"}], ";"}], "*)"}], 
     RowBox[{"DInv", "[", 
      RowBox[{"traits", ",", "solin", ",", 
       RowBox[{"{", 
        RowBox[{"All", ",", "1"}], "}"}], ",", "opts"}], "]"}], ")"}]}], 
   ";"}]}]], "Code",
 CellChangeTimes->{
  3.688571691421088*^9, 3.699722814754191*^9, {3.699722869064487*^9, 
   3.699722869193791*^9}, {3.7257556571757307`*^9, 3.725755692474262*^9}, 
   3.725756780409185*^9, {3.725757538297617*^9, 3.725757538429843*^9}, 
   3.726059473113021*^9, 3.726059608127398*^9, {3.7271403623985558`*^9, 
   3.727140373303388*^9}, {3.727140406095446*^9, 3.727140406469976*^9}, 
   3.727141084416483*^9, 3.727141116483667*^9, 3.7271416654563704`*^9, 
   3.7271425674183683`*^9, {3.727142646536396*^9, 3.727142647194604*^9}, {
   3.7271434106166153`*^9, 3.7271434239915333`*^9}, 3.7271921456128817`*^9, 
   3.7271934640551767`*^9, 3.727193907777062*^9, 3.727196402498579*^9, 
   3.727260879700729*^9, {3.7272612087659492`*^9, 3.7272612094299507`*^9}, {
   3.727261405026552*^9, 3.727261405848823*^9}, 3.727313356701837*^9, 
   3.7273136282371483`*^9, {3.727314013872478*^9, 3.727314018110485*^9}, {
   3.727314076667635*^9, 3.727314088225954*^9}, {3.727314175896228*^9, 
   3.727314181312373*^9}, 3.727615442219235*^9, 3.7326652669503603`*^9, 
   3.732666495060677*^9},
 CellLabel->
  "In[562]:=",ExpressionUUID->"1952eeae-5f7d-4bc9-9f16-29cb9d5e98c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"first", " ", "derivative", " ", "abbreviated", " ", "syntax"}], 
   " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"DInv", "[", 
     RowBox[{
      RowBox[{"eesol_", "?", "TraitsAndVariablesQ"}], ",", 
      RowBox[{"var", ":", 
       RowBox[{"(", 
        RowBox[{"_Subscript", "|", "_List", "|", "_Symbol"}], ")"}], ":", 
       "All"}], ",", 
      RowBox[{"pointin", ":", "notDInvOpts", ":", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
    RowBox[{"(", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "7", "]"}], ";"}], "*)"}], 
     RowBox[{"DInv", "[", 
      RowBox[{
       RowBox[{"ExtractTraits", "[", "eesol", "]"}], ",", 
       RowBox[{"ExtractVariables", "[", "eesol", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"var", ",", "1"}], "}"}], ",", "pointin", ",", "opts"}], 
      "]"}], ")"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.727313527183497*^9, 3.72731360870995*^9}, 
   3.727313947246873*^9, {3.727314297304297*^9, 3.727314298726269*^9}, 
   3.7276154454599447`*^9, 3.732665262210698*^9, {3.732666137799644*^9, 
   3.73266614920185*^9}, 3.7326664992609453`*^9},
 CellLabel->
  "In[563]:=",ExpressionUUID->"af07fdf9-7e7c-4790-8368-90bd04963e99"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"general", " ", "derivative", " ", "abbreviated", " ", "syntax"}], 
   " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"DInv", "[", 
     RowBox[{
      RowBox[{"eesol_", "?", "TraitsAndVariablesQ"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"var", ":", 
         RowBox[{"(", 
          RowBox[{"_Subscript", "|", "_List", "|", "_Symbol"}], ")"}], ":", 
         "All"}], ",", "ord_Integer"}], "}"}], ",", 
      RowBox[{"pointin", ":", "notDInvOpts", ":", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
    RowBox[{"(", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "8", "]"}], ";"}], "*)"}], 
     RowBox[{"DInv", "[", 
      RowBox[{
       RowBox[{"ExtractTraits", "[", "eesol", "]"}], ",", 
       RowBox[{"ExtractVariables", "[", "eesol", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"var", ",", "ord"}], "}"}], ",", "pointin", ",", "opts"}], 
      "]"}], ")"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.727313527183497*^9, 3.72731360870995*^9}, 
   3.727313947246873*^9, {3.727314297304297*^9, 3.727314298726269*^9}, 
   3.7276154454599447`*^9, {3.73266510929391*^9, 3.7326651519084053`*^9}, 
   3.7326652585429277`*^9, {3.7326661521016693`*^9, 3.732666157341695*^9}, 
   3.732666502690999*^9},
 CellLabel->
  "In[564]:=",ExpressionUUID->"9877f782-58a9-4841-9d00-46d00b40b116"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"break", " ", "up", " ", "traitsandpops"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"DInv", "[", 
     RowBox[{
      RowBox[{"eesol_", "?", "TraitsAndVariablesQ"}], ",", "rest___"}], "]"}],
     ":=", "\n", 
    RowBox[{"(", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "1", "]"}], ";"}], "*)"}], 
     RowBox[{"DInv", "[", 
      RowBox[{
       RowBox[{"ExtractTraits", "[", "eesol", "]"}], ",", 
       RowBox[{"ExtractVariables", "[", "eesol", "]"}], ",", "rest"}], "]"}], 
     ")"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.7257568968378477`*^9, 3.725756937640854*^9}, {
   3.725757301786862*^9, 3.7257573166885*^9}, 3.725757443538025*^9, {
   3.725757616077248*^9, 3.725757621663168*^9}, {3.727140352408634*^9, 
   3.727140359640779*^9}, 3.7271404089351673`*^9, {3.727142379422409*^9, 
   3.727142396727791*^9}, {3.727143385363762*^9, 3.7271434206858063`*^9}, 
   3.727192143123353*^9, 3.7271934616640997`*^9, 3.727193905601742*^9, {
   3.727194911077075*^9, 3.727194911938991*^9}, 3.72719641023064*^9, 
   3.727260876585277*^9, {3.727313361057337*^9, 3.727313369830591*^9}, 
   3.727313630561811*^9, 3.727615449611479*^9, 3.732665250514339*^9, {
   3.732666158798717*^9, 3.7326661627475452`*^9}, 3.732666505627792*^9},
 CellLabel->
  "In[565]:=",ExpressionUUID->"257415e2-c166-43bd-b51a-6b84c21188d3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"first", " ", "derivative", " ", "abbreviated", " ", "syntax"}], 
   " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"DInv", "[", 
     RowBox[{
      RowBox[{"var", ":", 
       RowBox[{"(", 
        RowBox[{"_Subscript", "|", "_List", "|", "_Symbol"}], ")"}], ":", 
       "All"}], ",", 
      RowBox[{"pointin", ":", "notDInvOpts", ":", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "0", "]"}], ";"}], "*)"}], 
     RowBox[{"DInv", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"var", ",", "1"}], "}"}], ",", "pointin", ",", "opts"}], 
      "]"}], ")"}]}], ";"}]}]], "Code",
 CellChangeTimes->{
  3.6997228046391897`*^9, 3.699722885482452*^9, 3.725756796260682*^9, {
   3.725757514268159*^9, 3.725757514517384*^9}, 3.726059462228167*^9, 
   3.7260596030699587`*^9, {3.727140422193962*^9, 3.727140426565843*^9}, 
   3.727143441825259*^9, 3.727192158353827*^9, {3.727192501740758*^9, 
   3.7271925020476637`*^9}, {3.727193288478046*^9, 3.727193289491982*^9}, 
   3.727193474510859*^9, 3.727193927858632*^9, {3.727194709802841*^9, 
   3.7271947806251183`*^9}, 3.7271963877983913`*^9, 3.7271965353701973`*^9, 
   3.727226346185458*^9, 3.7272608724835463`*^9, 3.7272611038055964`*^9, {
   3.727261154543169*^9, 3.7272611677122803`*^9}, {3.727261219078762*^9, 
   3.7272612200800657`*^9}, {3.727261409911409*^9, 3.7272614150111732`*^9}, {
   3.727261473845125*^9, 3.727261475217743*^9}, {3.727313375732978*^9, 
   3.727313376520534*^9}, {3.727314714784667*^9, 3.7273147184813128`*^9}, 
   3.7276154543390913`*^9},
 CellLabel->
  "In[566]:=",ExpressionUUID->"eca88c5a-d75d-4ca3-8644-d766182220c2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NDInv", "[", "args___", "]"}], ":=", 
   RowBox[{"DInv", "[", 
    RowBox[{"args", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NDInv\>\""}]}], "]"}]}], ";"}]], "Code",\

 CellChangeTimes->{3.688571691445539*^9},
 CellLabel->
  "In[567]:=",ExpressionUUID->"a667433d-0d72-4502-817d-d3c7367bb3c9"]
}, Closed]],

Cell[CellGroupData[{

Cell["PrestonPlot", "Subsection",
 CellDingbat->"\[ClubSuit]",
 CellChangeTimes->{{3.7157802007752542`*^9, 3.715780206043818*^9}, 
   3.723380976073349*^9, {3.7233811112250633`*^9, 3.723381111356948*^9}, 
   3.725838357684547*^9},ExpressionUUID->"626cfece-1c56-411b-a6ef-\
98459ab65103"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PrestonPlot", "[", 
     RowBox[{
      RowBox[{"sol_", "?", "VariablesQ"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"func", "=", 
         RowBox[{"FuncStyle", "[", "\"\<PrestonPlot\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", "options", " ", "*)"}], "\[IndentingNewLine]", 
        "gu", ",", "gco", ",", "base", ",", "minpop", ",", "bandwidth", ",", 
        "showspecies", ",", "markerstyle", ",", "plotopts", ",", 
        "listplotopts", ",", "plotrange", ",", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"other", " ", "variables"}], " ", "*)"}], 
        "\[IndentingNewLine]", "pops", ",", "pos", ",", "data", ",", 
        "\[ScriptCapitalD]", ",", "hist", ",", "stix"}], 
       "\[IndentingNewLine]", "}"}], ",", "\n", "\n", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "Nsp", "}"}], ",", "\n", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
           RowBox[{
            RowBox[{"Msg", "[", 
             RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
            RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"handle", " ", "options"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"gu", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Guild", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PrestonPlot", "]"}]}], "}"}], "]"}]}],
            "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"gu", "===", "Automatic"}], ",", 
           RowBox[{"gu", "=", 
            RowBox[{
            "guilds", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"gco", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Component", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PrestonPlot", "]"}]}], "}"}], "]"}]}],
            "]"}]}], ";", "\n", 
         RowBox[{"base", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Base", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PrestonPlot", "]"}]}], "}"}], "]"}]}],
            "]"}]}], ";", "\n", 
         RowBox[{"minpop", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"MinPop", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PrestonPlot", "]"}]}], "}"}], "]"}]}],
            "]"}]}], ";", "\n", 
         RowBox[{"bandwidth", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Bandwidth", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PrestonPlot", "]"}]}], "}"}], "]"}]}],
            "]"}]}], ";", "\n", 
         RowBox[{"showspecies", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"ShowSpecies", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PrestonPlot", "]"}]}], "}"}], "]"}]}],
            "]"}]}], ";", "\n", 
         RowBox[{"markerstyle", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"MarkerStyle", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PrestonPlot", "]"}]}], "}"}], "]"}]}],
            "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"plotopts", "=", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PrestonPlot", "]"}]}], "}"}], "]"}], 
            ",", 
            RowBox[{"Options", "[", "Plot", "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"listplotopts", "=", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PrestonPlot", "]"}]}], "}"}], "]"}], 
            ",", 
            RowBox[{"Options", "[", "ListPlot", "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"plotrange", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"PlotRange", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PrestonPlot", "]"}]}], "}"}], "]"}]}],
            "]"}]}], ";", "\n", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ",
            "in", " ", "guilds"}], " ", "*)"}], "\n", 
         RowBox[{"SetNsp", "[", "sol", "]"}], ";", "\n", 
         RowBox[{"pops", "=", 
          RowBox[{"Select", "[", 
           RowBox[{"sol", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "\[LeftDoubleBracket]", 
                RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "===", 
               RowBox[{"gcomp", "[", 
                RowBox[{"gu", ",", "gco"}], "]"}]}], "&&", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               ">", "minpop"}]}], "&"}]}], "]"}]}], ";", "\n", 
         RowBox[{"pos", "=", 
          RowBox[{"pops", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
         ";", "\n", 
         RowBox[{"data", "=", 
          RowBox[{"Log", "[", 
           RowBox[{"base", ",", 
            RowBox[{"pops", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
         ";", "\n", 
         RowBox[{"\[ScriptCapitalD]", "=", 
          RowBox[{"SmoothKernelDistribution", "[", 
           RowBox[{"data", ",", "bandwidth", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Bounded\>\"", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Min", "[", "data", "]"}], ",", 
                RowBox[{"Max", "[", "data", "]"}]}], "}"}], ",", 
              "\"\<Gaussian\>\""}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"hist", "=", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"PDF", "[", 
             RowBox[{"\[ScriptCapitalD]", ",", "x"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"Min", "[", "data", "]"}], ",", 
              RowBox[{"Max", "[", "data", "]"}]}], "}"}], ",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"Sequence", "@@", "plotopts"}], "]"}]}], "]"}]}], ";", 
         "\n", 
         RowBox[{"If", "[", 
          RowBox[{"showspecies", ",", "\n", "\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"markerstyle", "===", "Automatic"}], ",", "\n", "\t\t", 
              
              RowBox[{"markerstyle", "=", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"color", "[", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"gcomp", "[", 
                    RowBox[{"gu", ",", "gco"}], "]"}], ",", "i"}], "]"}], 
                   "]"}], "[", 
                  RowBox[{"SpFrac", "[", 
                   RowBox[{"i", ",", 
                    RowBox[{"Nsp", "[", "gu", "]"}]}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "pos"}], "}"}]}], "]"}]}]}], "]"}], ";", 
            "\[IndentingNewLine]", "\t", 
            RowBox[{"stix", "=", 
             RowBox[{"ListPlot", "[", "\n", "\t\t", 
              RowBox[{
               RowBox[{"Map", "[", 
                RowBox[{"List", ",", 
                 RowBox[{"Transpose", "[", 
                  RowBox[{"{", 
                   RowBox[{"data", ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"Length", "[", "pos", "]"}]}], "]"}]}], "}"}], 
                  "]"}]}], "]"}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", "markerstyle"}], ",", "\n", 
               "\t\t", 
               RowBox[{"Evaluate", "[", 
                RowBox[{"Sequence", "@@", "listplotopts"}], "]"}], ",", 
               RowBox[{"PlotMarkers", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<|\>\"", ",", "8"}], "}"}]}]}], "]"}]}]}], ",", 
           "\n", "\t", 
           RowBox[{"stix", "=", 
            RowBox[{"{", "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", 
          RowBox[{"Show", "[", 
           RowBox[{"stix", ",", "hist", ",", 
            RowBox[{"AxesOrigin", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Max", "[", "data", "]"}], ",", "0"}], "}"}]}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "plotrange"}]}], "]"}], "]"}], 
         ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
     "]"}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PrestonPlot", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Guild", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Component", "\[Rule]", "1"}], ",", 
     RowBox[{"Base", "\[Rule]", "10"}], ",", 
     RowBox[{"MinPop", "\[Rule]", "0"}], ",", 
     RowBox[{"Bandwidth", "\[Rule]", "\"\<Scott\>\""}], ",", 
     RowBox[{"ShowSpecies", "\[Rule]", "True"}], ",", 
     RowBox[{"MarkerStyle", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "All"}], "}"}]}]}], "}"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.715769426958699*^9, 3.715769427541718*^9}, {
   3.715770080609786*^9, 3.7157701274252462`*^9}, {3.715770182223977*^9, 
   3.715770206939686*^9}, {3.715770251665348*^9, 3.7157703240930643`*^9}, {
   3.715775270821048*^9, 3.715775290004567*^9}, 3.715775341838038*^9, {
   3.715777805781301*^9, 3.715777841780686*^9}, {3.715777977653454*^9, 
   3.715778011056696*^9}, {3.715778070083912*^9, 3.7157780743767033`*^9}, {
   3.715778127595952*^9, 3.715778162795555*^9}, {3.7157783827489147`*^9, 
   3.7157784396759243`*^9}, {3.7157794695034857`*^9, 3.715779536184903*^9}, {
   3.7157795727624273`*^9, 3.71577961854753*^9}, {3.715779977701977*^9, 
   3.7157800098795347`*^9}, {3.715780054987348*^9, 3.715780180009596*^9}, {
   3.715780246872175*^9, 3.715780248053912*^9}, {3.715780462690599*^9, 
   3.715780498137936*^9}, {3.715780815568123*^9, 3.7157809282734756`*^9}, {
   3.715780984521051*^9, 3.715781009001033*^9}, {3.7157810757736464`*^9, 
   3.715781105836532*^9}, 3.7220261936335173`*^9, {3.722034092230411*^9, 
   3.722034102187653*^9}, {3.723380976086491*^9, 3.7233809761332693`*^9}, {
   3.7233811145970287`*^9, 3.7233811707601023`*^9}, {3.7233812155331287`*^9, 
   3.7233813151180267`*^9}, {3.723381353967957*^9, 3.723381433783847*^9}, 
   3.72338149056318*^9, {3.7233816949831543`*^9, 3.7233817177771397`*^9}, {
   3.7233821313109207`*^9, 3.723382132076769*^9}, 3.723382208638012*^9, {
   3.7233823953067636`*^9, 3.7233824131693163`*^9}, {3.723382578096826*^9, 
   3.7233825864069777`*^9}, {3.723397198684486*^9, 3.723397216632679*^9}, {
   3.7233972639395027`*^9, 3.7233972815540743`*^9}, {3.723397462172179*^9, 
   3.7233974652632008`*^9}, {3.723397617020337*^9, 3.723397621421433*^9}, {
   3.723397675093034*^9, 3.723397682588902*^9}, {3.723397777056635*^9, 
   3.723397813149156*^9}, {3.72340375191016*^9, 3.723403768595744*^9}, {
   3.725831203835395*^9, 3.7258312084296827`*^9}, {3.725831257322579*^9, 
   3.725831262935713*^9}, {3.7258312934661827`*^9, 3.72583129909431*^9}, {
   3.725831345389896*^9, 3.725831348003084*^9}, {3.7258363206502657`*^9, 
   3.725836381364141*^9}, {3.72583650834517*^9, 3.725836598363964*^9}, {
   3.725836729876663*^9, 3.725836772925323*^9}, {3.72583705784724*^9, 
   3.725837125185616*^9}, {3.725837158534384*^9, 3.7258371586505337`*^9}, {
   3.725837207265864*^9, 3.725837344749372*^9}, {3.725837407186122*^9, 
   3.7258374130525827`*^9}, {3.7258374590666857`*^9, 
   3.7258376032168703`*^9}, {3.725837635471816*^9, 3.7258376463564873`*^9}, {
   3.725837751515706*^9, 3.725837789698951*^9}, {3.725837870187104*^9, 
   3.725837872895339*^9}, {3.7258379076056843`*^9, 3.725837914946828*^9}, {
   3.7258381848965187`*^9, 3.7258382316533203`*^9}, {3.7258383124033117`*^9, 
   3.72583831989331*^9}, {3.72583835769519*^9, 3.7258383577410316`*^9}, {
   3.7258406645408993`*^9, 3.725840667826569*^9}, 3.725840954888434*^9, {
   3.72584194581675*^9, 3.7258419486617203`*^9}, {3.725842249381733*^9, 
   3.725842303568061*^9}, {3.725842355845216*^9, 3.725842394909976*^9}, {
   3.725842471428344*^9, 3.7258425250851192`*^9}, {3.725843185389254*^9, 
   3.72584318566927*^9}, {3.7258432629374*^9, 3.725843264283102*^9}, {
   3.725843400039682*^9, 3.72584340711718*^9}, {3.7258434918435183`*^9, 
   3.7258434992278633`*^9}, {3.7258828815160627`*^9, 3.725883006726489*^9}, {
   3.7258830864032784`*^9, 3.725883086655963*^9}, {3.725909019293723*^9, 
   3.72590902212987*^9}, 3.725909117418908*^9, {3.725909170353407*^9, 
   3.7259092238995657`*^9}, {3.725909345525135*^9, 3.725909386064473*^9}, {
   3.725909429585046*^9, 3.725909462263809*^9}, {3.725911358259245*^9, 
   3.725911362932658*^9}, {3.725964687640972*^9, 3.725964688023782*^9}, {
   3.755275169281728*^9, 
   3.755275192127932*^9}},ExpressionUUID->"e40b7473-5726-48ca-af4c-\
fb800b7e7521"]
}, Closed]],

Cell[CellGroupData[{

Cell["WhittakerPlot", "Subsection",
 CellDingbat->"\[ClubSuit]",
 CellChangeTimes->{{3.7157802007752542`*^9, 3.715780206043818*^9}, 
   3.723380976073349*^9, {3.7233811112250633`*^9, 3.723381111356948*^9}, 
   3.725838357684547*^9, {3.725843196856442*^9, 
   3.7258431980425177`*^9}},ExpressionUUID->"b3cbc43d-ad10-4b2b-8416-\
ed6e7c84a82b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"WhittakerPlot", "[", 
     RowBox[{
      RowBox[{"sol_", "?", "VariablesQ"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"func", "=", 
         RowBox[{"FuncStyle", "[", "\"\<WhittakerPlot\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", "options", " ", "*)"}], "\[IndentingNewLine]", 
        "gu", ",", "gco", ",", "base", ",", "minpop", ",", "listplotopts", 
        ",", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"other", " ", "variables"}], " ", "*)"}], 
        "\[IndentingNewLine]", "pops", ",", "data"}], "\[IndentingNewLine]", 
       "}"}], ",", "\n", "\n", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "Nsp", "}"}], ",", "\n", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
           RowBox[{
            RowBox[{"Msg", "[", 
             RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
            RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"handle", " ", "options"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"gu", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Guild", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "WhittakerPlot", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"gu", "===", "Automatic"}], ",", 
           RowBox[{"gu", "=", 
            RowBox[{
            "guilds", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"gco", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Component", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "WhittakerPlot", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"base", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Base", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "WhittakerPlot", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"minpop", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"MinPop", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "WhittakerPlot", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"listplotopts", "=", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "WhittakerPlot", "]"}]}], "}"}], "]"}],
             ",", 
            RowBox[{"Options", "[", "ListPlot", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ",
            "in", " ", "guilds"}], " ", "*)"}], "\n", 
         RowBox[{"SetNsp", "[", "sol", "]"}], ";", "\n", 
         RowBox[{"pops", "=", 
          RowBox[{"Select", "[", 
           RowBox[{"sol", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "\[LeftDoubleBracket]", 
                RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "===", 
               RowBox[{"gcomp", "[", 
                RowBox[{"gu", ",", "gco"}], "]"}]}], "&&", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               ">", "minpop"}]}], "&"}]}], "]"}]}], ";", "\n", 
         RowBox[{"data", "=", 
          RowBox[{"Log", "[", 
           RowBox[{"base", ",", 
            RowBox[{"pops", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
         ";", "\n", 
         RowBox[{"Return", "[", 
          RowBox[{"ListPlot", "[", 
           RowBox[{
            RowBox[{"Sort", "[", 
             RowBox[{"data", ",", "Greater"}], "]"}], ",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"Sequence", "@@", "listplotopts"}], "]"}]}], "]"}], 
          "]"}], ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "]"}]}], "]"}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "WhittakerPlot", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Guild", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Component", "\[Rule]", "1"}], ",", 
     RowBox[{"Base", "\[Rule]", "10"}], ",", 
     RowBox[{"MinPop", "\[Rule]", "0"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "}"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.715769426958699*^9, 3.715769427541718*^9}, {
   3.715770080609786*^9, 3.7157701274252462`*^9}, {3.715770182223977*^9, 
   3.715770206939686*^9}, {3.715770251665348*^9, 3.7157703240930643`*^9}, {
   3.715775270821048*^9, 3.715775290004567*^9}, 3.715775341838038*^9, {
   3.715777805781301*^9, 3.715777841780686*^9}, {3.715777977653454*^9, 
   3.715778011056696*^9}, {3.715778070083912*^9, 3.7157780743767033`*^9}, {
   3.715778127595952*^9, 3.715778162795555*^9}, {3.7157783827489147`*^9, 
   3.7157784396759243`*^9}, {3.7157794695034857`*^9, 3.715779536184903*^9}, {
   3.7157795727624273`*^9, 3.71577961854753*^9}, {3.715779977701977*^9, 
   3.7157800098795347`*^9}, {3.715780054987348*^9, 3.715780180009596*^9}, {
   3.715780246872175*^9, 3.715780248053912*^9}, {3.715780462690599*^9, 
   3.715780498137936*^9}, {3.715780815568123*^9, 3.7157809282734756`*^9}, {
   3.715780984521051*^9, 3.715781009001033*^9}, {3.7157810757736464`*^9, 
   3.715781105836532*^9}, 3.7220261936335173`*^9, {3.722034092230411*^9, 
   3.722034102187653*^9}, {3.723380976086491*^9, 3.7233809761332693`*^9}, {
   3.7233811145970287`*^9, 3.7233811707601023`*^9}, {3.7233812155331287`*^9, 
   3.7233813151180267`*^9}, {3.723381353967957*^9, 3.723381433783847*^9}, 
   3.72338149056318*^9, {3.7233816949831543`*^9, 3.7233817177771397`*^9}, {
   3.7233821313109207`*^9, 3.723382132076769*^9}, 3.723382208638012*^9, {
   3.7233823953067636`*^9, 3.7233824131693163`*^9}, {3.723382578096826*^9, 
   3.7233825864069777`*^9}, {3.723397198684486*^9, 3.723397216632679*^9}, {
   3.7233972639395027`*^9, 3.7233972815540743`*^9}, {3.723397462172179*^9, 
   3.7233974652632008`*^9}, {3.723397617020337*^9, 3.723397621421433*^9}, {
   3.723397675093034*^9, 3.723397682588902*^9}, {3.723397777056635*^9, 
   3.723397813149156*^9}, {3.72340375191016*^9, 3.723403768595744*^9}, {
   3.725831203835395*^9, 3.7258312084296827`*^9}, {3.725831257322579*^9, 
   3.725831262935713*^9}, {3.7258312934661827`*^9, 3.72583129909431*^9}, {
   3.725831345389896*^9, 3.725831348003084*^9}, {3.7258363206502657`*^9, 
   3.725836381364141*^9}, {3.72583650834517*^9, 3.725836598363964*^9}, {
   3.725836729876663*^9, 3.725836772925323*^9}, {3.72583705784724*^9, 
   3.725837125185616*^9}, {3.725837158534384*^9, 3.7258371586505337`*^9}, {
   3.725837207265864*^9, 3.725837344749372*^9}, {3.725837407186122*^9, 
   3.7258374130525827`*^9}, {3.7258374590666857`*^9, 
   3.7258376032168703`*^9}, {3.725837635471816*^9, 3.7258376463564873`*^9}, {
   3.725837751515706*^9, 3.725837789698951*^9}, {3.725837870187104*^9, 
   3.725837872895339*^9}, {3.7258379076056843`*^9, 3.725837914946828*^9}, {
   3.7258381848965187`*^9, 3.7258382316533203`*^9}, {3.7258383124033117`*^9, 
   3.72583831989331*^9}, {3.72583835769519*^9, 3.7258383577410316`*^9}, {
   3.7258406645408993`*^9, 3.725840667826569*^9}, 3.725840954888434*^9, {
   3.72584194581675*^9, 3.7258419486617203`*^9}, {3.725842249381733*^9, 
   3.725842303568061*^9}, {3.725842355845216*^9, 3.725842394909976*^9}, {
   3.725842471428344*^9, 3.7258425250851192`*^9}, {3.725843185389254*^9, 
   3.72584318566927*^9}, {3.725843222637555*^9, 3.725843256811016*^9}, {
   3.72584350666693*^9, 3.725843571630842*^9}, 3.725909286278324*^9, {
   3.725911812487897*^9, 3.725911830108882*^9}, {3.725912422567441*^9, 
   3.7259124387010603`*^9}, {3.725962769378989*^9, 3.725962806169854*^9}, {
   3.725962875547228*^9, 3.725962876045032*^9}, {3.7552763684222393`*^9, 
   3.7552763780647097`*^9}},ExpressionUUID->"3d6cf12d-9a6b-4be1-8bb4-\
922c503f8e1e"]
}, Closed]],

Cell[CellGroupData[{

Cell["PlotTAD", "Subsection",
 CellDingbat->"\[ClubSuit]",
 CellChangeTimes->{{3.7157802007752542`*^9, 3.715780206043818*^9}, 
   3.723380976073349*^9},ExpressionUUID->"cb763cf9-35ef-4209-8ee1-\
3b3a30621968"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotTAD", "[", 
     RowBox[{
      RowBox[{"traits_", "?", "TraitsQ"}], ",", 
      RowBox[{"sol_", "?", "VariablesQ"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"func", "=", 
         RowBox[{"FuncStyle", "[", "\"\<PlotTAD\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", "options", " ", "*)"}], "\[IndentingNewLine]", 
        "logged", ",", "gu", ",", "tr", ",", "gco", ",", "minpop", ",", 
        "plotstyle", ",", "markerstyle", ",", "plotopts", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"other", " ", "variables"}], " ", "*)"}], 
        "\[IndentingNewLine]", "pops", ",", "pos", ",", "plotmin"}], 
       "\[IndentingNewLine]", "}"}], ",", "\n", "\n", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "Nsp", "}"}], ",", "\n", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
           RowBox[{
            RowBox[{"Msg", "[", 
             RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
            RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"handle", " ", "options"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"logged", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Logged", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotTAD", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"gu", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Guild", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotTAD", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"gu", "===", "Automatic"}], ",", 
           RowBox[{"gu", "=", 
            RowBox[{
            "guilds", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"tr", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Trait", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotTAD", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"gco", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Component", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotTAD", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"minpop", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"MinPop", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotTAD", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"plotstyle", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"PlotStyle", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotTAD", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"markerstyle", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"MarkerStyle", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotTAD", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"plotopts", "=", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotTAD", "]"}]}], "}"}], "]"}], ",", 
            
            RowBox[{"Options", "[", "ListPlot", "]"}]}], "]"}]}], ";", "\n", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ",
            "in", " ", "guilds"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"SetNsp", "[", 
          RowBox[{"traits", ",", "sol"}], "]"}], ";", "\n", "\n", 
         RowBox[{"pops", "=", 
          RowBox[{"Select", "[", 
           RowBox[{"sol", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "\[LeftDoubleBracket]", 
                RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "===", 
               RowBox[{"gcomp", "[", 
                RowBox[{"gu", ",", "gco"}], "]"}]}], "&&", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               ">", "minpop"}]}], "&"}]}], "]"}]}], ";", "\n", 
         RowBox[{"pos", "=", 
          RowBox[{"pops", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
         ";", "\n", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"markerstyle", "===", "Automatic"}], ",", "\n", "\t", 
           RowBox[{"markerstyle", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"color", "[", 
                RowBox[{"Subscript", "[", 
                 RowBox[{
                  RowBox[{"trait", "[", 
                   RowBox[{"gu", ",", "tr"}], "]"}], ",", "i"}], "]"}], "]"}],
                "[", 
               RowBox[{"SpFrac", "[", 
                RowBox[{"i", ",", 
                 RowBox[{"Nsp", "[", "gu", "]"}]}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "pos"}], "}"}]}], "]"}]}]}], "]"}], ";", 
         "\n", "\t", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"logged", "\[Equal]", "False"}], ",", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{"Return", "[", 
            RowBox[{"ListPlot", "[", "\n", "\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu", ",", "tr"}], "]"}], ",", "i"}], "]"}], ",", 
                    "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu", ",", "tr"}], "]"}], ",", "i"}], "]"}], ",", 
                    
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"gcomp", "[", 
                    RowBox[{"gu", ",", "gco"}], "]"}], ",", "i"}], "]"}]}], 
                    "}"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "pos"}], "}"}]}], "]"}], "/.", "sol"}], "/.",
                "traits"}], ",", "\n", "\t\t", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"Join", "[", 
                RowBox[{"plotstyle", ",", "markerstyle"}], "]"}]}], ",", "\n",
               "\t\t", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", "\n", 
              "\t\t", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"Joined", "\[Rule]", "True"}]}], "\n", "\t", "]"}], 
            "]"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "\t", 
           RowBox[{
            RowBox[{"plotmin", "=", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{
                   RowBox[{"gcomp", "[", 
                    RowBox[{"gu", ",", "gco"}], "]"}], ",", "i"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "pos"}], "}"}]}], "]"}], "/.", "sol"}], 
              "]"}]}], ";", "\[IndentingNewLine]", "\t", 
            RowBox[{"Return", "[", 
             RowBox[{"ListLogPlot", "[", "\n", "\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu", ",", "tr"}], "]"}], ",", "i"}], "]"}], ",", 
                    "plotmin"}], "}"}], ",", "\n", "\t\t", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu", ",", "tr"}], "]"}], ",", "i"}], "]"}], ",", 
                    
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"gcomp", "[", 
                    RowBox[{"gu", ",", "gco"}], "]"}], ",", "i"}], "]"}]}], 
                    "}"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", "pos"}], "}"}]}], "]"}], "/.", "sol"}], 
                "/.", "traits"}], ",", "\n", "\t\t", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"Join", "[", 
                 RowBox[{"plotstyle", ",", "markerstyle"}], "]"}]}], ",", 
               "\n", "\t\t", 
               RowBox[{"Evaluate", "[", 
                RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", "\n", 
               "\t\t", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"plotmin", ",", "All"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", "True"}]}], "\n", "\t", "]"}], 
             "]"}]}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "\n", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PlotTAD", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Logged", "\[Rule]", "False"}], ",", 
     RowBox[{"Guild", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Trait", "\[Rule]", "1"}], ",", 
     RowBox[{"Component", "\[Rule]", "1"}], ",", 
     RowBox[{"MinPop", "\[Rule]", "0"}], ",", 
     RowBox[{"MarkerStyle", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "}"}]}]}], "}"}]}], ";"}]}], "Code",
 CellDingbat->"\[ClubSuit]",
 CellChangeTimes->{{3.715769426958699*^9, 3.715769427541718*^9}, {
   3.715770080609786*^9, 3.7157701274252462`*^9}, {3.715770182223977*^9, 
   3.715770206939686*^9}, {3.715770251665348*^9, 3.7157703240930643`*^9}, {
   3.715775270821048*^9, 3.715775290004567*^9}, 3.715775341838038*^9, {
   3.715777805781301*^9, 3.715777841780686*^9}, {3.715777977653454*^9, 
   3.715778011056696*^9}, {3.715778070083912*^9, 3.7157780743767033`*^9}, {
   3.715778127595952*^9, 3.715778162795555*^9}, {3.7157783827489147`*^9, 
   3.7157784396759243`*^9}, {3.7157794695034857`*^9, 3.715779536184903*^9}, {
   3.7157795727624273`*^9, 3.71577961854753*^9}, {3.715779977701977*^9, 
   3.7157800098795347`*^9}, {3.715780054987348*^9, 3.715780180009596*^9}, {
   3.715780246872175*^9, 3.715780248053912*^9}, {3.715780462690599*^9, 
   3.715780498137936*^9}, {3.715780815568123*^9, 3.7157809282734756`*^9}, {
   3.715780984521051*^9, 3.715781009001033*^9}, {3.7157810757736464`*^9, 
   3.715781105836532*^9}, 3.7220261936335173`*^9, {3.722034092230411*^9, 
   3.722034102187653*^9}, {3.723380976086491*^9, 3.7233809761332693`*^9}, {
   3.72596465642509*^9, 3.725964675167366*^9}, {3.725964706040327*^9, 
   3.725964763699407*^9}, {3.7259647983446693`*^9, 3.725964873106234*^9}, {
   3.725964965714869*^9, 3.7259649832895*^9}, {3.7259650224950533`*^9, 
   3.725965073910859*^9}, 3.7259651123579206`*^9, {3.725965207082921*^9, 
   3.725965208962843*^9}, {3.7259652509109364`*^9, 3.7259652793190813`*^9}, {
   3.7259653686527863`*^9, 3.7259654805032682`*^9}, {3.725965514011941*^9, 
   3.725965518479402*^9}, {3.725965568421995*^9, 3.725965584646551*^9}, {
   3.7259665613168383`*^9, 3.725966619790523*^9}, {3.725966791521052*^9, 
   3.725966853799143*^9}, {3.725967126489387*^9, 3.7259671281832647`*^9}, {
   3.725970978465217*^9, 3.725970979440015*^9}, {3.725977927793509*^9, 
   3.72597802138655*^9}, {3.725978084189623*^9, 3.72597809125881*^9}, 
   3.729710408857444*^9, {3.755276381629537*^9, 
   3.755276394078066*^9}},ExpressionUUID->"7a9cf91d-f903-4b96-9945-\
2a4b475c7f36"]
}, Closed]],

Cell[CellGroupData[{

Cell["PlotInv", "Subsection",
 CellDingbat->
  "\[ClubSuit]",ExpressionUUID->"ccf8610d-5377-4e92-9781-2bfddc133343"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotInv", "[", 
    RowBox[{
     RowBox[{"traits", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "TraitsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"sol", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"trait1_", ",", 
       RowBox[{"trait1min_", "?", "NumericQ"}], ",", 
       RowBox[{"trait1max_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<PlotInv\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "monitor", ",", "\n", "delayinv", ",", "invopts", 
       ",", "time", ",", "plotopts", ",", "plotspecies", ",", "markerstyle", 
       ",", "axeslabel", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "nb", ",", 
       "x", ",", "\n", "gu1", ",", "tr1", ",", "per", ",", "res", ",", "inv", 
       ",", "epi", ",", "zeroval"}], "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "Nsp", "}"}], ",", "\n", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<traits=\>\"", ",", "traits"}], "]"}], ";", "\n", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<sol=\>\"", ",", "sol"}], "]"}], ";", "\n", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<{trait1,trait1min,trait1max}=\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}]}], 
          "]"}], ";"}], "*)"}], "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Msg", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotInv", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotInv", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"monitor", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Monitor", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotInv", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"delayinv", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"DelayInv", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotInv", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"delayinv", "===", "Automatic"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"modelperiod", "=!=", "0"}], ",", 
            RowBox[{"delayinv", "=", "True"}], ",", 
            RowBox[{"delayinv", "=", "False"}]}], "]"}]}], "]"}], ";", "\n", 
        RowBox[{"invopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"InvOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotInv", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"time", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Time", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotInv", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"plotspecies", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PlotSpecies", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotInv", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"markerstyle", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"MarkerStyle", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotInv", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"plotopts", "=", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotInv", "]"}]}], "}"}], "]"}], ",", 
           RowBox[{"Options", "[", "Plot", "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"axeslabel", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"AxesLabel", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotInv", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"axeslabel", "===", "Automatic"}], ",", 
          RowBox[{"axeslabel", "=", 
           RowBox[{"{", "trait1", "}"}]}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "figure", " ", "out", " ", "what", " ", "trait", " ", "is", " ", 
           "on", " ", "the", " ", "x"}], "-", "axis"}], " ", "*)"}], "\n", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"gu1", ",", "tr1"}], "}"}], "=", 
         RowBox[{
          RowBox[{"LookUp", "[", "trait1", "]"}], "\[LeftDoubleBracket]", 
          RowBox[{"2", ";;", "3"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"SetNsp", "[", 
         RowBox[{"traits", ",", "sol"}], "]"}], ";", "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", "markerstyle", "]"}], ";"}], "*)"}], "\n", 
        "\n", 
        RowBox[{"If", "[", 
         RowBox[{"plotspecies", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"zeroval", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], ",", 
              "1", ",", "0"}], "]"}]}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"markerstyle", "===", "Automatic"}], ",", 
             "\[IndentingNewLine]", "\t\t", 
             RowBox[{"epi", "=", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"PointSize", "[", "0.015", "]"}], ",", 
                  RowBox[{
                   RowBox[{"color", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "sp"}], "]"}], 
                    "]"}], "[", 
                   RowBox[{"SpFrac", "[", 
                    RowBox[{"sp", ",", 
                    RowBox[{"Nsp", "[", "gu1", "]"}]}], "]"}], "]"}], ",", 
                  RowBox[{"Point", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "sp"}], "]"}], "/.",
                     "traits"}], ",", "zeroval"}], "}"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"sp", ",", 
                  RowBox[{"Nsp", "[", "gu1", "]"}]}], "}"}]}], "]"}]}], 
             "\[IndentingNewLine]", "\t", ",", "\[IndentingNewLine]", "\t\t", 
             
             RowBox[{"epi", "=", 
              RowBox[{"MapThread", "[", 
               RowBox[{"Append", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"PadRight", "[", 
                   RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"Nsp", "[", "gu1", "]"}], ",", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", "#", "}"}], "]"}], "&"}], ",", 
                    "markerstyle"}], "]"}]}], "]"}], ",", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"Point", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "sp"}], "]"}], "/.",
                     "traits"}], ",", "zeroval"}], "}"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"sp", ",", 
                    RowBox[{"Nsp", "[", "gu1", "]"}]}], "}"}]}], "]"}]}], 
                 "}"}]}], "]"}]}]}], "\n", "\t", "]"}]}], "\n", ",", "\n", 
          "\t", 
          RowBox[{"epi", "=", 
           RowBox[{"{", "}"}]}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", "epi", "]"}], ";"}], "*)"}], "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"monitor", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"nb", "=", 
            RowBox[{"CreateDialog", "[", 
             RowBox[{"DialogNotebook", "[", 
              RowBox[{
               RowBox[{"Grid", "[", 
                RowBox[{"{", 
                 RowBox[{"{", 
                  RowBox[{"\"\<\[FormalX]=\>\"", ",", 
                   RowBox[{"Dynamic", "[", "x", "]"}]}], "}"}], "}"}], "]"}], 
               ",", 
               RowBox[{
               "WindowTitle", "\[Rule]", "\"\<PlotInv Progress...\>\""}]}], 
              "]"}], "]"}]}], ";"}]}], "\n", "]"}], ";", 
        "\[IndentingNewLine]", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"delayinv", ",", "\n", "\t", 
          RowBox[{"(*", " ", 
           RowBox[{"delay", " ", "inv"}], " ", "*)"}], "\n", "\t", 
          RowBox[{
           RowBox[{
            RowBox[{"inv", "[", 
             RowBox[{"\[FormalX]_", "?", "NumberQ"}], "]"}], ":=", 
            RowBox[{"Inv", "[", 
             RowBox[{"traits", ",", "sol", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{
                  RowBox[{"trait", "[", 
                   RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "0"}], "]"}], 
                "\[Rule]", "\[FormalX]"}], "}"}], ",", 
              RowBox[{"Guild", "\[Rule]", "gu1"}], ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "invopts"}], "]"}], ",", 
              RowBox[{"Time", "\[Rule]", "time"}], ",", 
              RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}], ";",
            "\n", "\t", 
           RowBox[{"res", "=", 
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"x", "=", "\[FormalX]"}], ";", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"inv", "[", "\[FormalX]", "]"}], "]"}]}], ")"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[FormalX]", ",", "trait1min", ",", "trait1max"}], 
               "}"}], ",", 
              RowBox[{"AxesLabel", "\[Rule]", "axeslabel"}], ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
              RowBox[{"Epilog", "\[Rule]", "epi"}]}], "]"}]}]}], "\n", ",", 
          "\n", "\t", 
          RowBox[{"(*", " ", 
           RowBox[{"nondelay", " ", "inv"}], " ", "*)"}], "\n", "\t", 
          RowBox[{
           RowBox[{"Off", "[", 
            RowBox[{"NIntegrate", "::", "inumr"}], "]"}], ";", "\n", "\t", 
           RowBox[{"inv", "=", 
            RowBox[{"Inv", "[", 
             RowBox[{"traits", ",", "sol", ",", 
              RowBox[{"Guild", "\[Rule]", "gu1"}], ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "invopts"}], "]"}], ",", 
              RowBox[{"Time", "\[Rule]", "time"}], ",", 
              RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}], ";",
            "\n", "\t", 
           RowBox[{"res", "=", 
            RowBox[{"Plot", "[", 
             RowBox[{"inv", ",", 
              RowBox[{"{", 
               RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], 
              ",", 
              RowBox[{"AxesLabel", "\[Rule]", "axeslabel"}], ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
              RowBox[{"Epilog", "\[Rule]", "epi"}]}], "]"}]}], ";", "\n", 
           "\t", 
           RowBox[{"On", "[", 
            RowBox[{"NIntegrate", "::", "inumr"}], "]"}]}]}], "\n", "]"}], 
        ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"monitor", ",", 
          RowBox[{"NotebookClose", "[", "nb", "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"Return", "[", "res", "]"}]}]}], "\n", "]"}]}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.687822515057189*^9, 3.687822530773478*^9}, {
   3.687822625324526*^9, 3.687822698958035*^9}, {3.6878236899075813`*^9, 
   3.687823777026969*^9}, {3.687858288554859*^9, 3.687858379316575*^9}, 
   3.687859034131632*^9, {3.687859081281536*^9, 3.687859085028665*^9}, {
   3.6878592216893463`*^9, 3.687859227539363*^9}, {3.687859260960005*^9, 
   3.6878592676681757`*^9}, 3.687881459180863*^9, {3.687972052514495*^9, 
   3.687972079063807*^9}, {3.687972196418675*^9, 3.6879722087865877`*^9}, {
   3.6879722540377913`*^9, 3.687972258321142*^9}, {3.687972345209043*^9, 
   3.687972350459255*^9}, {3.687972402572905*^9, 3.687972407607215*^9}, {
   3.687972472313492*^9, 3.687972474706842*^9}, {3.688065178156893*^9, 
   3.6880651786355457`*^9}, {3.6880655342479753`*^9, 3.688065544159995*^9}, 
   3.688078874572472*^9, {3.6885716915065823`*^9, 3.688571691947671*^9}, {
   3.688571767697315*^9, 3.6885717678709517`*^9}, 3.688571807380752*^9, {
   3.689078898055829*^9, 3.689078898347412*^9}, {3.689079052886949*^9, 
   3.6890790620368347`*^9}, {3.689079283066757*^9, 3.689079369029817*^9}, {
   3.68907982857856*^9, 3.689079842628839*^9}, {3.689080906961464*^9, 
   3.68908091853683*^9}, {3.689081027869495*^9, 3.689081040196702*^9}, {
   3.689085649134398*^9, 3.689085659181603*^9}, {3.689250618177328*^9, 
   3.689250624127245*^9}, {3.689250654786996*^9, 3.6892506922458267`*^9}, {
   3.693750523154491*^9, 3.693750536879137*^9}, 3.696162142155159*^9, {
   3.70933678368288*^9, 3.709336785075458*^9}, 3.710105986287383*^9, {
   3.7102562236106052`*^9, 3.710256245763166*^9}, {3.7102620179583797`*^9, 
   3.710262025221158*^9}, {3.71026517976542*^9, 3.710265183399001*^9}, {
   3.711221366000457*^9, 3.711221407610972*^9}, {3.7127385348473587`*^9, 
   3.712738534856024*^9}, 3.722029501119842*^9, {3.7220341275926533`*^9, 
   3.722034131610355*^9}, {3.7251409583231916`*^9, 3.725140958338376*^9}, 
   3.725141965387879*^9, {3.726014195927367*^9, 3.726014197180872*^9}, {
   3.726016667043661*^9, 3.726016710633573*^9}, {3.7260183058312263`*^9, 
   3.726018316028738*^9}, {3.7280015915478487`*^9, 3.7280016081604033`*^9}, {
   3.728001998267466*^9, 3.7280020111772213`*^9}, {3.728002980789393*^9, 
   3.7280030587312393`*^9}, {3.728003100706468*^9, 3.728003137954404*^9}, {
   3.728003238050528*^9, 3.728003244288938*^9}, {3.7280032798515577`*^9, 
   3.72800328026143*^9}, {3.729205960608561*^9, 3.729206000014824*^9}, {
   3.729253188925953*^9, 3.7292532162997437`*^9}, {3.7297102940324783`*^9, 
   3.729710299129622*^9}, 3.729710368438281*^9, {3.729710425885874*^9, 
   3.729710432792466*^9}, {3.7340134237861423`*^9, 3.734013435317161*^9}, {
   3.734014523342512*^9, 3.7340145235148563`*^9}, {3.734176664236327*^9, 
   3.7341766880011806`*^9}, {3.734176719961142*^9, 3.734176777770238*^9}, {
   3.7341768179016657`*^9, 3.734176820363332*^9}, {3.734177106189267*^9, 
   3.7341771298672657`*^9}, {3.734177836604755*^9, 3.734177866258082*^9}, {
   3.734177976093787*^9, 3.734177980561645*^9}, {3.734178023125246*^9, 
   3.734178089466783*^9}, {3.734178137296987*^9, 3.734178208076991*^9}, 
   3.734178624045022*^9, {3.734178749007515*^9, 3.73417881313762*^9}, {
   3.734178849453348*^9, 3.734178861872795*^9}, {3.734179280127408*^9, 
   3.734179288469619*^9}, 3.734179335413727*^9, {3.734182832951275*^9, 
   3.734182853692371*^9}, {3.734183923689186*^9, 3.7341839279183187`*^9}, {
   3.734184034952119*^9, 3.734184049062687*^9}, {3.734184187018696*^9, 
   3.734184262697177*^9}, {3.734184312551462*^9, 3.734184316960545*^9}, {
   3.7427538252731533`*^9, 3.742753826195713*^9}, {3.742769274111416*^9, 
   3.742769276909334*^9}, {3.742770184650483*^9, 3.7427701868838167`*^9}, {
   3.74277144874271*^9, 3.742771487111938*^9}, {3.742771976719841*^9, 
   3.742771978691617*^9}, {3.742772275702368*^9, 3.74277229116921*^9}, {
   3.7427723268293123`*^9, 3.7427723303579807`*^9}, {3.742772484186269*^9, 
   3.7427725148708057`*^9}, {3.742772548591604*^9, 3.742772585532236*^9}, {
   3.742772636301237*^9, 3.742772643048668*^9}, {3.742811207726762*^9, 
   3.742811210204801*^9}, {3.742811769513678*^9, 3.742811781348051*^9}, {
   3.742812228960372*^9, 3.7428122311487503`*^9}, {3.742812355161635*^9, 
   3.742812358811573*^9}, {3.742813176083551*^9, 3.7428131772276783`*^9}, {
   3.742813281143999*^9, 3.7428132882665*^9}, {3.755039062835951*^9, 
   3.7550390858923597`*^9}, {3.7587200270174828`*^9, 
   3.7587200491680937`*^9}},ExpressionUUID->"372e60e0-9cf7-4681-9b44-\
76cc0d300941"],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",
 CellChangeTimes->{{3.75872004405049*^9, 
  3.7587200454520693`*^9}},ExpressionUUID->"deb5085a-78f1-4d57-81c2-\
9dee7e0083ad"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotInv", "[", 
    RowBox[{
     RowBox[{"eesol_", "?", "TraitsAndVariablesQ"}], ",", 
     RowBox[{"{", 
      RowBox[{"trait1_", ",", "trait1min_", ",", "trait1max_"}], "}"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
   RowBox[{"PlotInv", "[", 
    RowBox[{
     RowBox[{"ExtractTraits", "[", "eesol", "]"}], ",", 
     RowBox[{"ExtractVariables", "[", "eesol", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
     "opts"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.758720053096051*^9, 
  3.7587200615898848`*^9}},ExpressionUUID->"780a9da2-2cb2-471d-9275-\
5e0cc51d6ab0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.758720032476091*^9, 
  3.758720033461117*^9}},ExpressionUUID->"1f014808-33f3-46cf-beab-\
01d799cbd6dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PlotInv", "]"}], "=", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"InvOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", "\t", 
     RowBox[{"DelayInv", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Time", "\[Rule]", "t"}], ",", "\n", "\t", 
     RowBox[{"MarkerStyle", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotSpecies", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", "\n", "\t", 
     RowBox[{"PlotStyle", "\[Rule]", "Gray"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "5"}], ",", "\n", "\t", 
     RowBox[{"Monitor", "\[Rule]", "False"}], ",", "\n", "\t", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "\n", "}"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{
  3.7587200413365297`*^9},ExpressionUUID->"ba35b3f6-262a-431f-af36-\
3a894f9f8687"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["PlotZIP", "Subsection",
 CellDingbat->"\[ClubSuit]",
 CellChangeTimes->{{3.7286048505701714`*^9, 
  3.7286048617994328`*^9}},ExpressionUUID->"0b68945e-8a4d-432f-baef-\
03706e1edae9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotZIP", "[", 
     RowBox[{
      RowBox[{"solin_:", "\"\<FindEcoAttractor\>\""}], ",", 
      RowBox[{"{", 
       RowBox[{"var1_", ",", 
        RowBox[{"var1min_", "?", "NumericQ"}], ",", 
        RowBox[{"var1max_", "?", "NumericQ"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"var2_", ",", 
        RowBox[{"var2min_", "?", "NumericQ"}], ",", 
        RowBox[{"var2max_", "?", "NumericQ"}]}], "}"}], ",", "\n", 
      RowBox[{"invaderin_Symbol:", "Automatic"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"func", "=", 
         RowBox[{"FuncStyle", "[", "\"\<PlotZIP\>\"", "]"}]}], ",", "\n", 
        RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
        "verboseall", ",", "printtrace", ",", "monitor", ",", "\n", "fixed", 
        ",", "delayinv", ",", "findecoattractoropts", ",", "invopts", ",", 
        "plotopts", ",", "plottype", ",", "ics", ",", "invthreshold", ",", 
        "guild", ",", "\n", "boundarystyle", ",", "invstyle", ",", 
        "noninvstyle", ",", "framelabel", ",", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "nb", ",", 
        "x", ",", "y", ",", "\n", "fixedvars", ",", "traitinv", ",", 
        "subrule", ",", "luv1", ",", "luv2", ",", "gu", ",", "tr1", ",", 
        "tr2", ",", "invader", ",", "sol", ",", "inv", ",", "res"}], "}"}], 
      ",", "\n", "\n", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "Nsp", "}"}], ",", "\n", "\n", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
           RowBox[{
            RowBox[{"Msg", "[", 
             RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
            RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
         "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
         RowBox[{"verbose", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Verbose", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotZIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
         RowBox[{"verboseall", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"VerboseAll", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotZIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"verboseall", ",", 
           RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
         RowBox[{"printtrace", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"PrintTrace", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotZIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"monitor", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Monitor", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotZIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", "\n", 
         RowBox[{"fixed", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Fixed", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotZIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"delayinv", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"DelayInv", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotZIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"findecoattractoropts", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"FindEcoAttractorOpts", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotZIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"invopts", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"InvOpts", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotZIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"plotopts", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"PlotOpts", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotZIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"plottype", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"PlotType", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotZIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"ics", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"ICs", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotZIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"invthreshold", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"InvThreshold", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotZIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"invthreshold", "===", "Automatic"}], ",", 
           RowBox[{"invthreshold", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], ",", 
              "1", ",", "0"}], "]"}]}]}], "]"}], ";", "\n", 
         RowBox[{"boundarystyle", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"BoundaryStyle", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotZIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"invstyle", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"InvStyle", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotZIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"noninvstyle", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"NonInvStyle", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotZIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"framelabel", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"FrameLabel", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", "\n", 
         RowBox[{"fixedvars", "=", 
          RowBox[{"fixed", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
         "\n", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "figure", " ", "out", " ", "what", " ", "are", " ", "the", " ", 
            "traits", " ", "on", " ", "the", " ", "x"}], "-", " ", 
           RowBox[{"and", " ", "y"}], "-", "axes"}], " ", "*)"}], "\n", "\n", 
         
         RowBox[{"luv1", "=", 
          RowBox[{"LookUp", "[", "var1", "]"}]}], ";", "\n", 
         RowBox[{"luv2", "=", 
          RowBox[{"LookUp", "[", "var2", "]"}]}], ";", "\n", "\n", 
         RowBox[{"traitinv", "=", 
          RowBox[{"{", "}"}]}], ";", 
         RowBox[{"subrule", "=", 
          RowBox[{"{", "}"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "luv1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "===", "\"\<trait\>\""}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"gu", ",", "tr1"}], "}"}], "=", 
             RowBox[{"luv1", "\[LeftDoubleBracket]", 
              RowBox[{"2", ";;", "3"}], "\[RightDoubleBracket]"}]}], ";", 
            "\n", "\t", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"traitinv", ",", 
              RowBox[{"var1", "\[Rule]", "\[FormalX]"}]}], "]"}]}], ",", "\n",
            "\t", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"subrule", ",", 
             RowBox[{"var1", "\[Rule]", "\[FormalX]"}]}], "]"}]}], "\n", 
          "]"}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "luv2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "===", "\"\<trait\>\""}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                "luv1", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "===", "\"\<trait\>\""}], "&&", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                 "luv2", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], "\[NotEqual]", "gu"}], ")"}]}], 
              ",", 
              RowBox[{
               RowBox[{"Msg", "[", 
                RowBox[{"PlotZIP", "::", "diffsp"}], "]"}], ";", 
               RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
            "\t", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"gu", ",", "tr2"}], "}"}], "=", 
             RowBox[{"luv2", "\[LeftDoubleBracket]", 
              RowBox[{"2", ";;", "3"}], "\[RightDoubleBracket]"}]}], ";", 
            "\n", "\t", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"traitinv", ",", 
              RowBox[{"var2", "\[Rule]", "\[FormalY]"}]}], "]"}]}], ",", "\n",
            "\t", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"subrule", ",", 
             RowBox[{"var2", "\[Rule]", "\[FormalY]"}]}], "]"}]}], "\n", 
          "]"}], ";", "\n", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<traitinv=\>\"", ",", "traitinv"}], "]"}], ";", "\n", 
           
           RowBox[{"Print", "[", 
            RowBox[{"\"\<subrule=\>\"", ",", "subrule"}], "]"}], ";"}], 
          "*)"}], "\n", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"invaderin", "===", "Automatic"}], ",", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"IntegerQ", "[", "gu", "]"}], ",", "\n", "\t\t", 
             RowBox[{"invader", "=", "traitinv"}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"Message", "[", 
               RowBox[{"PlotZIP", "::", "unkinv"}], "]"}], ";", 
              RowBox[{"Return", "[", "$Failed", "]"}]}]}], "\n", "\t", "]"}], 
           "\n", ",", "\n", "\t", 
           RowBox[{"invader", "=", "invaderin"}]}], "\n", "]"}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<invader=\>\"", ",", "invader"}], "]"}], ";"}], 
          "*)"}], "\n", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"framelabel", "===", "Automatic"}], ",", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"plottype", "\[Equal]", "\"\<Plot3D\>\""}], ",", "\n", 
             "\t\t", 
             RowBox[{"framelabel", "=", 
              RowBox[{"{", 
               RowBox[{"var1", ",", "var2", ",", "\"\<inv\>\""}], "}"}]}], 
             ",", "\n", "\t\t", 
             RowBox[{"framelabel", "=", 
              RowBox[{"{", 
               RowBox[{"var1", ",", "var2"}], "}"}]}]}], "\n", "\t", "]"}]}], 
          "\n", "]"}], ";", "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"define", " ", "resident", " ", "sol"}], " ", "*)"}], "\n", 
         "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"solin", "===", "\"\<FindEcoAttractor\>\""}], ",", "\n", 
           "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"fixed", "\[Equal]", 
              RowBox[{"{", "}"}]}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"sol", "[", 
               RowBox[{"\[FormalX]_", ",", "\[FormalY]_"}], "]"}], "=", 
              RowBox[{"{", "}"}]}], "\n", "\t", ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"ics", "\[Equal]", 
                 RowBox[{"{", "}"}]}], ",", "\n", "\t\t\t", 
                RowBox[{"(*", " ", 
                 RowBox[{
                 "figure", " ", "out", " ", "number", " ", "of", " ", 
                  "species", " ", "in", " ", "guilds"}], " ", "*)"}], "\n", 
                "\t\t\t", 
                RowBox[{
                 RowBox[{"SetNsp", "[", "fixed", "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"Global`debug", ",", 
                   RowBox[{"Print", "[", 
                    RowBox[{"func", ",", "\"\<: Nsp=\>\"", ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Nsp", "[", "gu", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "]"}]}], 
                  "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"ics", "=", "DefaultICs"}], ";", "\n", "\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"verbose", ",", 
                   RowBox[{"Print", "[", 
                    RowBox[{"func", ",", "\"\<: ics=\>\"", ",", "ics"}], 
                    "]"}]}], "]"}], ";"}]}], "\n", "\t\t", "]"}], ";", "\n", 
              "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", "\n", "\t\t\t", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"tr", "=", "fixed"}], ",", 
                    RowBox[{"ics", "=", "ics"}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "findecoattractoropts"}]}]}], 
                   "}"}], ",", "\n", "\t\t\t\t", 
                  RowBox[{"PrintCall", "[", 
                   RowBox[{
                    RowBox[{"Global`sol", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}]}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"Global`sol", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "=", 
                    RowBox[{"FindEcoAttractor", "[", 
                    RowBox[{"tr", ",", "ics", ",", "op"}], "]"}]}]}], "]"}]}],
                  "\n", "\t\t", "]"}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{
               RowBox[{"sol", "[", 
                RowBox[{
                 RowBox[{"\[FormalX]_", "?", "NumberQ"}], ",", 
                 RowBox[{"\[FormalY]_", "?", "NumberQ"}]}], "]"}], ":=", 
               RowBox[{
                RowBox[{"sol", "[", 
                 RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "=", 
                RowBox[{"Module", "[", 
                 RowBox[{
                  RowBox[{"{", "result", "}"}], ",", "\n", "\t\t\t", 
                  RowBox[{
                   RowBox[{"result", "=", 
                    RowBox[{"FindEcoAttractor", "[", 
                    RowBox[{"fixed", ",", "ics", ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "findecoattractoropts"}], "]"}],
                     ",", 
                    RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], 
                    "]"}]}], ";", "\n", "\t\t\t", 
                   RowBox[{"If", "[", 
                    RowBox[{"printtrace", ",", 
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<EcoAttractor (\>\"", ",", "var1", ",", "\"\<=\>\"", 
                    ",", "\[FormalX]", ",", "\"\<, \>\"", ",", "var2", ",", 
                    "\"\<=\>\"", ",", "\[FormalY]", ",", "\"\<): \>\"", ",", 
                    "result"}], "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"result", "\[Equal]", 
                    RowBox[{"{", "$Failed", "}"}]}], ",", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    RowBox[{"PlotZIP", "::", "feafail"}], ",", "\[FormalX]", 
                    ",", "\[FormalY]"}], "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                   
                   RowBox[{"Return", "[", "result", "]"}]}]}], "\n", "\t\t", 
                 "]"}]}]}], ";", "\n", "\t\t", 
              RowBox[{"delayinv", "=", "True"}]}]}], "]"}], "\n", ",", "\n", 
           "\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", 
              RowBox[{"PrintCall", "[", 
               RowBox[{
                RowBox[{"Global`sol", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", "System`\[FormalX]", ")"}], "_"}], ",", 
                  RowBox[{
                   RowBox[{"(", "System`\[FormalY]", ")"}], "_"}]}], "]"}], 
                "=", 
                RowBox[{"solin", "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"var1", "\[Rule]", "\[FormalX]"}], ",", 
                   RowBox[{"var2", "\[Rule]", "\[FormalY]"}]}], "}"}]}]}], 
               "]"}]}], "]"}], ";", "\n", "\t", 
            RowBox[{
             RowBox[{"sol", "[", 
              RowBox[{"\[FormalX]_", ",", "\[FormalY]_"}], "]"}], "=", 
             RowBox[{"solin", "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"var1", "\[Rule]", "\[FormalX]"}], ",", 
                RowBox[{"var2", "\[Rule]", "\[FormalY]"}]}], "}"}]}]}], ";", 
            "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", 
              RowBox[{"Print", "[", 
               RowBox[{
               "func", ",", "\"\<: sol[\[FormalX],\[FormalY]]=\>\"", ",", 
                RowBox[{"sol", "[", 
                 RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], "]"}]}], 
             "]"}], ";"}]}], "\n", "]"}], ";", "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"define", " ", "inv"}], " ", "*)"}], "\n", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"delayinv", ",", "\n", "\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", "\n", "\t\t", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"tr", "=", "fixed"}], ",", 
                  RowBox[{"so", "=", 
                   RowBox[{"sol", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], ",", 
                  RowBox[{"in", "=", "invader"}], ",", 
                  RowBox[{"op", "=", 
                   RowBox[{"Sequence", "@@", "invopts"}]}]}], "}"}], ",", 
                "\n", "\t\t\t", 
                RowBox[{"PrintCall", "[", 
                 RowBox[{
                  RowBox[{"Global`inv", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}]}], "]"}], ":=", 
                  RowBox[{
                   RowBox[{"Global`inv", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "=", 
                   RowBox[{
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "so", ",", "in", ",", "op"}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"var1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"var2", "\[Rule]", "\[FormalY]"}]}], "}"}]}]}]}], 
                 "]"}]}], "\n", "\t", "]"}]}], "]"}], ";", "\n", "\t", 
            RowBox[{
             RowBox[{"inv", "[", 
              RowBox[{
               RowBox[{"\[FormalX]_", "?", "NumberQ"}], ",", 
               RowBox[{"\[FormalY]_", "?", "NumberQ"}]}], "]"}], ":=", 
             RowBox[{
              RowBox[{"inv", "[", 
               RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "=", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", "result", "}"}], ",", "\n", "\t\t", 
                RowBox[{
                 RowBox[{"result", "=", 
                  RowBox[{
                   RowBox[{"Inv", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"sol", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], ",", 
                    "invader", ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}], ",", 
                    RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}], 
                   "/.", "subrule"}]}], ";", "\n", "\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"printtrace", ",", 
                   RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<Inv (\>\"", ",", "var1", ",", "\"\<=\>\"", ",", 
                    "\[FormalX]", ",", "\"\<, \>\"", ",", "var2", ",", 
                    "\"\<=\>\"", ",", "\[FormalY]", ",", "\"\<): \>\"", ",", 
                    "result"}], "]"}]}], "]"}], ";", "\n", "\t\t", 
                 RowBox[{"Return", "[", "result", "]"}], ";"}]}], "\n", "\t", 
               "]"}]}]}], ";"}], "\n", ",", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{"nondelay", " ", "inv"}], " ", "*)"}], "\n", "\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", "\n", "\t\t", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"tr", "=", "fixed"}], ",", 
                  RowBox[{"so", "=", 
                   RowBox[{"sol", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], ",", 
                  RowBox[{"in", "=", "invader"}], ",", 
                  RowBox[{"op", "=", 
                   RowBox[{"Sequence", "@@", "invopts"}]}], ",", 
                  RowBox[{"sr", "=", "subrule"}], ",", 
                  RowBox[{"trinv", "=", "traitinv"}]}], "}"}], ",", "\n", 
                "\t\t\t", 
                RowBox[{"PrintCall", "[", 
                 RowBox[{
                  RowBox[{"Global`inv", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], "_"}], ",", 
                    RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], "_"}]}], "]"}], 
                  "=", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "so", ",", "in", ",", "op"}], "]"}], "/.",
                     "sr"}], "/.", "trinv"}]}], "]"}]}], "\n", "\t", "]"}]}], 
             "]"}], ";", "\n", "\t", 
            RowBox[{
             RowBox[{"inv", "[", 
              RowBox[{"\[FormalX]_", ",", "\[FormalY]_"}], "]"}], "=", 
             RowBox[{
              RowBox[{
               RowBox[{"Inv", "[", 
                RowBox[{"fixed", ",", 
                 RowBox[{"sol", "[", 
                  RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], ",", 
                 "invader", ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"Sequence", "@@", "invopts"}], "]"}], ",", 
                 RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}], "/.",
                "subrule"}], "/.", "traitinv"}]}], ";", "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", 
              RowBox[{"Print", "[", 
               RowBox[{
               "func", ",", "\"\<: inv[\[FormalX],\[FormalY]]=\>\"", ",", 
                RowBox[{"inv", "[", 
                 RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], "]"}]}], 
             "]"}]}]}], "\n", "]"}], ";", "\n", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"monitor", ",", "\n", "\t", 
           RowBox[{
            RowBox[{"nb", "=", 
             RowBox[{"CreateDialog", "[", 
              RowBox[{"DialogNotebook", "[", 
               RowBox[{
                RowBox[{"Grid", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\<\[FormalX]=\>\"", ",", 
                    RowBox[{"Dynamic", "[", "x", "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\<\[FormalY]=\>\"", ",", 
                    RowBox[{"Dynamic", "[", "y", "]"}]}], "}"}]}], "}"}], 
                 "]"}], ",", 
                RowBox[{
                "WindowTitle", "\[Rule]", "\"\<PlotZIP Progress...\>\""}]}], 
               "]"}], "]"}]}], ";"}]}], "\n", "]"}], ";", "\n", "\n", 
         RowBox[{"Which", "[", "\n", "\t", 
          RowBox[{
           RowBox[{"plottype", "\[Equal]", "\"\<Plot3D\>\""}], ",", "\n", 
           "\t", 
           RowBox[{"res", "=", 
            RowBox[{"Plot3D", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}], "=", 
                 RowBox[{"{", 
                  RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "}"}]}], ";", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"inv", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], ",", 
                   "invthreshold"}], "}"}], "]"}]}], ")"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[FormalX]", ",", "var1min", ",", "var1max"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"\[FormalY]", ",", "var2min", ",", "var2max"}], "}"}], 
              ",", "\n", "\t\t", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
              RowBox[{"AxesLabel", "\[Rule]", 
               RowBox[{"Append", "[", 
                RowBox[{"framelabel", ",", "\"\<inv\>\""}], "]"}]}]}], 
             "]"}]}], ",", "\n", "\t", 
           RowBox[{"plottype", "\[Equal]", "\"\<ContourPlot\>\""}], ",", "\n",
            "\t", 
           RowBox[{"res", "=", 
            RowBox[{"ContourPlot", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}], "=", 
                 RowBox[{"{", 
                  RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "}"}]}], ";", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"inv", "[", 
                  RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "]"}]}], 
               ")"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[FormalX]", ",", "var1min", ",", "var1max"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"\[FormalY]", ",", "var2min", ",", "var2max"}], "}"}], 
              ",", "\n", "\t\t", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
              RowBox[{"FrameLabel", "\[Rule]", "framelabel"}]}], "]"}]}], ",",
            "\n", "\t", 
           RowBox[{"plottype", "\[Equal]", "\"\<RegionZIP\>\""}], ",", " ", 
           "\n", "\t", 
           RowBox[{"res", "=", 
            RowBox[{"RegionPlot", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}], "=", 
                 RowBox[{"{", 
                  RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "}"}]}], ";", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{
                  RowBox[{"inv", "[", 
                   RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], ">", 
                  "invthreshold"}], "]"}]}], ")"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[FormalX]", ",", "var1min", ",", "var1max"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"\[FormalY]", ",", "var2min", ",", "var2max"}], "}"}], 
              ",", "\n", "\t\t", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "invstyle"}], ",", 
              RowBox[{"BoundaryStyle", "\[Rule]", "boundarystyle"}], ",", 
              RowBox[{"FrameLabel", "\[Rule]", "framelabel"}]}], "]"}]}], ",",
            "\n", "\t", 
           RowBox[{"plottype", "\[Equal]", "\"\<ZIP\>\""}], ",", "\n", "\t", 
           RowBox[{"res", "=", 
            RowBox[{"ContourPlot", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}], "=", 
                 RowBox[{"{", 
                  RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "}"}]}], ";", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"inv", "[", 
                  RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "]"}]}], 
               ")"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[FormalX]", ",", "var1min", ",", "var1max"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"\[FormalY]", ",", "var2min", ",", "var2max"}], "}"}], 
              ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", "\n", 
              "\t\t", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"Contours", "\[Rule]", 
               RowBox[{"{", "invthreshold", "}"}]}], ",", 
              RowBox[{"ContourStyle", "\[Rule]", 
               RowBox[{"{", "boundarystyle", "}"}]}], ",", 
              RowBox[{"ContourShading", "\[Rule]", "True"}], ",", "\n", 
              "\t\t", 
              RowBox[{"ColorFunction", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"#", ">", "invthreshold"}], ",", "invstyle", ",", 
                   "noninvstyle"}], "]"}], "&"}], ")"}]}], ",", "\n", "\t\t", 
              
              RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
              RowBox[{"Method", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"\"\<TransparentPolygonMesh\>\"", "\[Rule]", "True"}],
                 "}"}]}], ",", 
              RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
              RowBox[{"FrameLabel", "\[Rule]", "framelabel"}]}], "]"}]}], ",",
            "\n", "\t", "Else", ",", "\n", "\t", 
           RowBox[{
            RowBox[{"Message", "[", 
             RowBox[{"PlotZIP", "::", "badmtd"}], "]"}], ";", 
            RowBox[{"Return", "[", "$Failed", "]"}]}]}], "\n", "]"}], ";", 
         "\n", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"monitor", ",", 
           RowBox[{"NotebookClose", "[", "nb", "]"}]}], "]"}], ";", "\n", 
         "\n", 
         RowBox[{"Return", "[", "res", "]"}]}]}], "\n", "\n", "]"}]}], 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PlotZIP", "]"}], "=", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"FindEcoAttractorOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"InvOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", "\t", 
     RowBox[{"DelayInv", "\[Rule]", "False"}], ",", 
     RowBox[{"PlotType", "\[Rule]", "\"\<ZIP\>\""}], ",", 
     RowBox[{"ICs", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"InvThreshold", "\[Rule]", "Automatic"}], ",", "\n", "\t", 
     RowBox[{"PlotOpts", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"MaxRecursion", "\[Rule]", "3"}], "}"}]}], ",", "\n", "\t", 
     RowBox[{"BoundaryStyle", "\[Rule]", "Black"}], ",", 
     RowBox[{"InvStyle", "\[Rule]", "Gray"}], ",", 
     RowBox[{"NonInvStyle", "\[Rule]", "White"}], ",", "\n", "\t", 
     RowBox[{"Monitor", "\[Rule]", "False"}], ",", "\n", "\t", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "\n", "}"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.6882878053898993`*^9, 3.688287808743078*^9}, 
   3.688288135806472*^9, {3.688571691991478*^9, 3.688571693332206*^9}, {
   3.688571767918311*^9, 3.6885717681985188`*^9}, 3.688571807424464*^9, {
   3.689089001313301*^9, 3.6890890043689737`*^9}, {3.689089064072935*^9, 
   3.689089086138599*^9}, {3.689089143143515*^9, 3.6890891774214573`*^9}, 
   3.689089319114167*^9, {3.6890893978441753`*^9, 3.68908946417699*^9}, {
   3.6890894988659487`*^9, 3.689089502950509*^9}, {3.68908962606043*^9, 
   3.689089707985218*^9}, {3.6890897508996687`*^9, 3.689089752853948*^9}, {
   3.689089795971916*^9, 3.689089811275532*^9}, {3.689094833621719*^9, 
   3.6890948514587193`*^9}, {3.689094910467456*^9, 3.6890949221569777`*^9}, {
   3.6890954370202703`*^9, 3.6890954584809504`*^9}, {3.689095633452139*^9, 
   3.689095634779669*^9}, {3.689096392029808*^9, 3.689096392409925*^9}, 
   3.689109040730095*^9, {3.689111758566491*^9, 3.689111784518702*^9}, {
   3.689111904429968*^9, 3.689111915953508*^9}, {3.689111976407898*^9, 
   3.689111979453858*^9}, {3.689112031839395*^9, 3.689112034130287*^9}, {
   3.689112234797407*^9, 3.689112238688863*^9}, {3.689112335834444*^9, 
   3.689112341527008*^9}, {3.689112410877317*^9, 3.689112416319282*^9}, {
   3.6891124757905483`*^9, 3.6891124785613213`*^9}, {3.689174823424921*^9, 
   3.689174829366109*^9}, {3.6891783281588087`*^9, 3.689178328497805*^9}, {
   3.689178370594777*^9, 3.689178450825324*^9}, {3.6891790813283653`*^9, 
   3.689179127857786*^9}, {3.6891791818152533`*^9, 3.689179231214836*^9}, {
   3.68917973835533*^9, 3.689179779593503*^9}, {3.68918002554659*^9, 
   3.689180030068746*^9}, {3.689180135050324*^9, 3.6891801580467854`*^9}, {
   3.6891802340613937`*^9, 3.689180239945746*^9}, {3.689180294960429*^9, 
   3.6891803050153313`*^9}, {3.689180392448309*^9, 3.689180485273971*^9}, {
   3.6891816382118883`*^9, 3.689181644221792*^9}, {3.689191913231555*^9, 
   3.6891919983976393`*^9}, {3.689197811186739*^9, 3.6891978143392344`*^9}, {
   3.689198544412386*^9, 3.689198568239478*^9}, {3.689198714685821*^9, 
   3.689198716361845*^9}, {3.689198780784491*^9, 3.689198784734527*^9}, 
   3.689198861191393*^9, {3.689198913114086*^9, 3.689198949159569*^9}, {
   3.68919905265482*^9, 3.6891990809619617`*^9}, {3.689199117939396*^9, 
   3.689199152204212*^9}, {3.6891994321929617`*^9, 3.689199474812408*^9}, {
   3.689199517252146*^9, 3.6891995176044188`*^9}, {3.689199587743112*^9, 
   3.6891996617293787`*^9}, {3.689199717876816*^9, 3.6891997680542192`*^9}, {
   3.689200137207405*^9, 3.689200243050371*^9}, {3.689200298027767*^9, 
   3.689200301455925*^9}, {3.689201238814459*^9, 3.689201256720944*^9}, {
   3.689202801977714*^9, 3.6892028035579557`*^9}, {3.689202852554137*^9, 
   3.689202894752262*^9}, {3.689202952746408*^9, 3.6892029611328793`*^9}, {
   3.689203013609786*^9, 3.6892030191456137`*^9}, {3.689203077905377*^9, 
   3.6892031213953457`*^9}, {3.689203172443755*^9, 3.689203175337235*^9}, {
   3.6892034959812326`*^9, 3.68920350669643*^9}, {3.689203577291835*^9, 
   3.68920358644083*^9}, {3.6892036343190327`*^9, 3.689203654362729*^9}, {
   3.6892037096036043`*^9, 3.6892037138753023`*^9}, {3.689203758755131*^9, 
   3.689203779386141*^9}, {3.689203813064961*^9, 3.689203823828795*^9}, {
   3.689203885257016*^9, 3.6892038975928717`*^9}, 3.689204020852828*^9, {
   3.6892040760499287`*^9, 3.689204091491871*^9}, {3.689204247224155*^9, 
   3.6892043556569023`*^9}, 3.689204392097805*^9, {3.689204573658605*^9, 
   3.689204588825337*^9}, {3.6892047072010183`*^9, 3.689204782361391*^9}, {
   3.689204855748041*^9, 3.68920488349269*^9}, {3.689205187275572*^9, 
   3.6892052180399647`*^9}, {3.689205416312755*^9, 3.6892054198705587`*^9}, {
   3.689205502162085*^9, 3.689205546551907*^9}, {3.689205619607603*^9, 
   3.689205629815021*^9}, {3.689205730510394*^9, 3.689205731948648*^9}, {
   3.689205931427723*^9, 3.689205975525549*^9}, {3.6892071341554403`*^9, 
   3.6892071359756813`*^9}, {3.689250431833008*^9, 3.689250470270946*^9}, {
   3.689250715419957*^9, 3.6892507249180403`*^9}, {3.689250784897676*^9, 
   3.689250794159843*^9}, {3.6892508245846043`*^9, 3.689250831778019*^9}, 
   3.689289425324069*^9, {3.6961621421770067`*^9, 3.6961621422215967`*^9}, {
   3.6962787073963833`*^9, 3.6962787150874767`*^9}, {3.696278763823457*^9, 
   3.696278787052191*^9}, 3.696278848675012*^9, {3.696336384425806*^9, 
   3.696336384799808*^9}, {3.696631878688575*^9, 3.69663189812319*^9}, 
   3.696632208448448*^9, 3.6966328706169167`*^9, {3.696807891665193*^9, 
   3.696807893138623*^9}, {3.708834707532692*^9, 3.7088347170895977`*^9}, {
   3.709336791185824*^9, 3.709336792639715*^9}, 3.710105986907427*^9, {
   3.710256264542733*^9, 3.710256270382635*^9}, 3.714059650264831*^9, 
   3.722029506592965*^9, {3.722034137288947*^9, 3.722034141048389*^9}, {
   3.722087635746091*^9, 3.722087644147887*^9}, {3.726056451490245*^9, 
   3.726056465179557*^9}, {3.726071090970359*^9, 3.726071092789983*^9}, {
   3.7260712433557997`*^9, 3.726071245133451*^9}, {3.7260713324157677`*^9, 
   3.726071390476644*^9}, {3.726071497216798*^9, 3.7260715337222557`*^9}, {
   3.726072888227065*^9, 3.726072928006425*^9}, {3.7260730380680227`*^9, 
   3.726073113792355*^9}, {3.726073165290617*^9, 3.726073229326071*^9}, {
   3.726073501884719*^9, 3.726073511653207*^9}, {3.726073576767537*^9, 
   3.72607357691678*^9}, 3.726073697706916*^9, {3.726074316210824*^9, 
   3.726074316927059*^9}, {3.7260743919497013`*^9, 3.726074414547894*^9}, {
   3.726074460259066*^9, 3.726074484902568*^9}, {3.726075238073091*^9, 
   3.726075275152114*^9}, {3.72618828208501*^9, 3.7261882945543127`*^9}, {
   3.7261883720903*^9, 3.726188381323353*^9}, {3.726188420266077*^9, 
   3.726188426293673*^9}, {3.726188776691154*^9, 3.726188789728528*^9}, {
   3.726188842312276*^9, 3.726188860794813*^9}, {3.726188988739767*^9, 
   3.726189108311336*^9}, {3.726230212861211*^9, 3.726230217747037*^9}, {
   3.726230645967428*^9, 3.7262307667987223`*^9}, {3.726230818395987*^9, 
   3.726230884489443*^9}, {3.726231277402527*^9, 3.72623131285391*^9}, {
   3.726231393522318*^9, 3.726231454285048*^9}, {3.726231686756743*^9, 
   3.726231700836083*^9}, {3.726231767053443*^9, 3.726231789154139*^9}, {
   3.7262326686860533`*^9, 3.7262326974127617`*^9}, {3.7262327836341753`*^9, 
   3.726232874572188*^9}, {3.7262329925979958`*^9, 3.7262330788257647`*^9}, {
   3.726233305075042*^9, 3.7262333172963867`*^9}, {3.726233351492125*^9, 
   3.7262333591029997`*^9}, {3.726233758487073*^9, 3.72623380707312*^9}, {
   3.726233870688229*^9, 3.726233908829048*^9}, {3.726237375602306*^9, 
   3.7262373859536543`*^9}, {3.726237423617084*^9, 3.726237464937804*^9}, {
   3.72623772549475*^9, 3.726237738212401*^9}, {3.726237780345769*^9, 
   3.7262378354836693`*^9}, {3.726854018042366*^9, 3.7268540335791807`*^9}, {
   3.726854072833074*^9, 3.726854093841251*^9}, {3.726855239217329*^9, 
   3.726855264118061*^9}, {3.7268557230178823`*^9, 3.726855742664983*^9}, {
   3.726856572217778*^9, 3.726856672024487*^9}, {3.726856779541354*^9, 
   3.7268569744166613`*^9}, {3.726857012712079*^9, 3.726857017083234*^9}, {
   3.726857069306169*^9, 3.726857103092688*^9}, {3.726858001597035*^9, 
   3.726858038086812*^9}, {3.726858074457255*^9, 3.72685807564783*^9}, {
   3.7268581805910053`*^9, 3.7268581835488577`*^9}, {3.7268583043467283`*^9, 
   3.7268583179085207`*^9}, {3.726858361303534*^9, 3.726858362573333*^9}, {
   3.727915959261964*^9, 3.7279159983124447`*^9}, {3.727916030994895*^9, 
   3.727916064560351*^9}, {3.727916099780263*^9, 3.727916106652927*^9}, {
   3.72791618509103*^9, 3.7279162133993177`*^9}, {3.727916248195435*^9, 
   3.7279162894337387`*^9}, 3.727917338867939*^9, {3.727917411241886*^9, 
   3.7279174222276297`*^9}, {3.727963438355867*^9, 3.727963468286482*^9}, {
   3.727963781137619*^9, 3.72796379461798*^9}, {3.727963830105013*^9, 
   3.727963895766238*^9}, {3.7279647005991077`*^9, 3.7279647480513287`*^9}, {
   3.727971244636801*^9, 3.7279712951495256`*^9}, {3.728605169500029*^9, 
   3.728605214326742*^9}, {3.728605307670104*^9, 3.728605414593707*^9}, {
   3.728605467574654*^9, 3.728605489690896*^9}, {3.728605537400648*^9, 
   3.728605557930254*^9}, {3.7286055893721113`*^9, 3.7286056519826603`*^9}, {
   3.728605723939801*^9, 3.728605753847571*^9}, {3.7286059430745077`*^9, 
   3.7286059568515797`*^9}, {3.72860601237809*^9, 3.728606033547171*^9}, {
   3.728606149793392*^9, 3.728606240483056*^9}, {3.728606280320565*^9, 
   3.7286064332338037`*^9}, {3.728606466574071*^9, 3.728606546310338*^9}, {
   3.728607085690312*^9, 3.728607088259447*^9}, {3.728607138483213*^9, 
   3.7286071959601307`*^9}, {3.7286072543987837`*^9, 3.728607257858227*^9}, {
   3.7286074192327547`*^9, 3.728607567589686*^9}, {3.7286492338713093`*^9, 
   3.728649321893742*^9}, {3.7286502581293383`*^9, 3.728650294396624*^9}, {
   3.728650347201866*^9, 3.72865050493302*^9}, 3.728650657917309*^9, {
   3.7286538880413322`*^9, 3.728653928519313*^9}, {3.7286547909526577`*^9, 
   3.728655018986498*^9}, 3.728655064077095*^9, {3.728655696315104*^9, 
   3.7286557442322807`*^9}, {3.728655808717896*^9, 3.728655834617457*^9}, {
   3.728655872325082*^9, 3.7286558780650883`*^9}, {3.728692596126771*^9, 
   3.728692596866881*^9}, {3.72869384098144*^9, 3.728693864339113*^9}, {
   3.728693941232977*^9, 3.728693963331799*^9}, {3.728694053039432*^9, 
   3.728694056184115*^9}, {3.7286942867341633`*^9, 3.728694319956339*^9}, {
   3.728694572753024*^9, 3.728694618440172*^9}, {3.728729804833993*^9, 
   3.728729808929584*^9}, {3.728730045130831*^9, 3.728730062383286*^9}, {
   3.7287739027064543`*^9, 3.728773902798251*^9}, {3.7287762431015663`*^9, 
   3.728776254609486*^9}, {3.7287764184167843`*^9, 3.728776418695619*^9}, {
   3.7287768414673367`*^9, 3.728776851236084*^9}, {3.7287768832969837`*^9, 
   3.728776972866115*^9}, {3.728777082026828*^9, 3.728777084242258*^9}, {
   3.728777200180345*^9, 3.728777204989697*^9}, {3.728777247580841*^9, 
   3.7287772580652113`*^9}, {3.7287773193173923`*^9, 3.728777332262239*^9}, {
   3.728779000939063*^9, 3.72877902727565*^9}, {3.728779088175921*^9, 
   3.7287790909662237`*^9}, {3.728779122576272*^9, 3.7287791964799147`*^9}, {
   3.728779294043252*^9, 3.7287793212406073`*^9}, {3.7287799768828497`*^9, 
   3.728780038633226*^9}, {3.728780120723627*^9, 3.728780215769228*^9}, {
   3.7287802467744417`*^9, 3.7287802818891697`*^9}, {3.728780325335804*^9, 
   3.728780344415779*^9}, {3.728780382850552*^9, 3.728780457786607*^9}, {
   3.728780637185288*^9, 3.7287806590419817`*^9}, {3.728780692122216*^9, 
   3.728780723503291*^9}, {3.728780764977284*^9, 3.728780767246175*^9}, {
   3.728780808008676*^9, 3.728780814672937*^9}, {3.728780868717774*^9, 
   3.72878089680054*^9}, {3.728780928442555*^9, 3.728780934035219*^9}, {
   3.728781007005095*^9, 3.728781011000844*^9}, {3.728781173148427*^9, 
   3.72878118162499*^9}, {3.728781248841446*^9, 3.728781253209199*^9}, {
   3.7287812893027*^9, 3.728781296611773*^9}, {3.7287813529401007`*^9, 
   3.728781412705737*^9}, {3.7287814814917173`*^9, 3.72878152223108*^9}, {
   3.728781993880982*^9, 3.728782016457123*^9}, {3.728782054822442*^9, 
   3.728782103301621*^9}, {3.7288670758558187`*^9, 3.728867080276925*^9}, {
   3.728867485942029*^9, 3.728867486349082*^9}, {3.728905918964655*^9, 
   3.728905948236827*^9}, {3.7289059913370647`*^9, 3.728906038465617*^9}, {
   3.72890609988325*^9, 3.7289062193777657`*^9}, {3.728906370341421*^9, 
   3.7289063816999693`*^9}, {3.72890642671918*^9, 3.7289064623724403`*^9}, {
   3.728906495535782*^9, 3.728906513852117*^9}, {3.7289273602470913`*^9, 
   3.728927408513198*^9}, {3.728927589996715*^9, 3.728927593776806*^9}, {
   3.728928071755272*^9, 3.728928096506275*^9}, {3.728928703125135*^9, 
   3.728928745367878*^9}, {3.728930460138896*^9, 3.72893046435462*^9}, {
   3.728930685416157*^9, 3.728930687046997*^9}, {3.728931698088546*^9, 
   3.7289316999019747`*^9}, {3.72893174026934*^9, 3.728931741860857*^9}, {
   3.729038118349498*^9, 3.729038119640707*^9}, {3.729080125115123*^9, 
   3.7290801950461817`*^9}, {3.729080235529471*^9, 3.729080245322053*^9}, {
   3.729088042562607*^9, 3.729088043691903*^9}, {3.7290881043074503`*^9, 
   3.729088125678714*^9}, {3.729172732617111*^9, 3.729172733430347*^9}, {
   3.729172764511321*^9, 3.72917282332653*^9}, {3.729172880242804*^9, 
   3.729172917299717*^9}, {3.7291729855782137`*^9, 3.7291729912537203`*^9}, {
   3.729174629952552*^9, 3.729174661234581*^9}, 3.72917496766984*^9, {
   3.729175032454976*^9, 3.72917505322029*^9}, {3.729175207278216*^9, 
   3.7291752128214006`*^9}, {3.729175254250379*^9, 3.7291752676389017`*^9}, {
   3.729175916960004*^9, 3.7291759251202793`*^9}, {3.729175994024824*^9, 
   3.7291760232920856`*^9}, {3.729176216565551*^9, 3.729176261918564*^9}, {
   3.729177836098866*^9, 3.72917786051225*^9}, {3.729177905191584*^9, 
   3.729177920938136*^9}, {3.7291790923403187`*^9, 3.729179185305132*^9}, {
   3.7291792187497253`*^9, 3.729179293846814*^9}, {3.729182363391878*^9, 
   3.729182372080737*^9}, {3.7291826363486147`*^9, 3.729182644884465*^9}, {
   3.72918269878863*^9, 3.729182900366316*^9}, {3.729182986093163*^9, 
   3.729183034249835*^9}, {3.729183825943611*^9, 3.729184018711212*^9}, {
   3.729184058715535*^9, 3.729184102494759*^9}, {3.729184171224242*^9, 
   3.729184188955584*^9}, {3.729184402747108*^9, 3.729184454355122*^9}, {
   3.729184579476141*^9, 3.7291846324283447`*^9}, 3.72918468726637*^9, {
   3.7291848676780663`*^9, 3.72918493414647*^9}, {3.7291850918753023`*^9, 
   3.7291851113777742`*^9}, 3.72918522511869*^9, {3.72918526388321*^9, 
   3.729185294173473*^9}, {3.729185378681137*^9, 3.729185378984324*^9}, {
   3.7291854290469513`*^9, 3.7291854349899282`*^9}, {3.729201512124353*^9, 
   3.729201529953884*^9}, {3.729205350346755*^9, 3.729205386742219*^9}, {
   3.729205562888523*^9, 3.729205690480619*^9}, 3.7292104586201344`*^9, {
   3.729210537315258*^9, 3.729210537977582*^9}, {3.729210795916542*^9, 
   3.729210801814872*^9}, {3.729246475491687*^9, 3.729246488342635*^9}, {
   3.7292530055498323`*^9, 3.729253034517782*^9}, 3.729253121774091*^9, {
   3.729253154990172*^9, 3.729253176596513*^9}, {3.729299176243597*^9, 
   3.7292992095652523`*^9}, {3.729299444181102*^9, 3.729299444345047*^9}, 
   3.755373505069551*^9},ExpressionUUID->"dbd6a2ae-05ac-4fca-b4cb-\
7851cdb91c8e"]
}, Closed]],

Cell[CellGroupData[{

Cell["PlotPIP", "Subsection",
 CellDingbat->
  "\[ClubSuit]",ExpressionUUID->"250940ff-72a0-443a-8400-719da27fb0c0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotPIP", "[", 
     RowBox[{
      RowBox[{"solin_:", "\"\<FindEcoAttractor\>\""}], ",", 
      RowBox[{"{", 
       RowBox[{"trait1_", ",", 
        RowBox[{"trait1min_", "?", "NumericQ"}], ",", 
        RowBox[{"trait1max_", "?", "NumericQ"}]}], "}"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"func", "=", 
         RowBox[{"FuncStyle", "[", "\"\<PlotPIP\>\"", "]"}]}], ",", "\n", 
        RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
        "verboseall", ",", "printtrace", ",", "monitor", ",", "\n", "fixed", 
        ",", "delayinv", ",", "findecoattractoropts", ",", "invopts", ",", 
        "plotopts", ",", "plottype", ",", "ics", ",", "zerodiagonal", ",", 
        "subtractdiagonal", ",", "invthreshold", ",", "\n", "boundarystyle", 
        ",", "invstyle", ",", "noninvstyle", ",", "framelabel", ",", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "nb", ",", 
        "x", ",", "y", ",", "\n", "fixedvars", ",", "invfixed", ",", "gu1", 
        ",", "tr1", ",", "sp1", ",", "res", ",", "sol", ",", "resinv", ",", 
        "inv"}], "}"}], ",", "\n", "\n", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "Nsp", "}"}], ",", "\n", "\n", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
           RowBox[{
            RowBox[{"Msg", "[", 
             RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
            RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
         "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
         RowBox[{"verbose", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Verbose", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
         RowBox[{"verboseall", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"VerboseAll", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"verboseall", ",", 
           RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
         RowBox[{"printtrace", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"PrintTrace", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"monitor", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Monitor", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", "\n", 
         RowBox[{"fixed", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Fixed", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"delayinv", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"DelayInv", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"findecoattractoropts", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"FindEcoAttractorOpts", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"invopts", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"InvOpts", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"plotopts", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"PlotOpts", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"plottype", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"PlotType", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"ics", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"ICs", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"zerodiagonal", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"ZeroDiagonal", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"subtractdiagonal", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"SubtractDiagonal", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"invthreshold", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"InvThreshold", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"invthreshold", "===", "Automatic"}], ",", 
           RowBox[{"invthreshold", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], ",", 
              "1", ",", "0"}], "]"}]}]}], "]"}], ";", "\n", 
         RowBox[{"boundarystyle", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"BoundaryStyle", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"invstyle", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"InvStyle", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"noninvstyle", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"NonInvStyle", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotPIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"framelabel", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"FrameLabel", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
           "]"}]}], ";", "\n", "\n", "\n", 
         RowBox[{"fixedvars", "=", 
          RowBox[{"fixed", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
         "\n", 
         RowBox[{"If", "[", 
          RowBox[{"zerodiagonal", ",", 
           RowBox[{
            RowBox[{"inv", "[", 
             RowBox[{"\[FormalX]_", ",", "\[FormalX]_"}], "]"}], "=", "0"}]}],
           "]"}], ";", "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "figure", " ", "out", " ", "what", " ", "are", " ", "the", " ", 
            "traits", " ", "on", " ", "the", " ", "x"}], "-", " ", 
           RowBox[{"and", " ", "y"}], "-", "axes"}], " ", "*)"}], "\n", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"gu1", ",", "tr1", ",", "sp1"}], "}"}], "=", 
          RowBox[{
           RowBox[{"LookUp", "[", "trait1", "]"}], "\[LeftDoubleBracket]", 
           RowBox[{"2", ";;", "4"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
         "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"framelabel", "===", "Automatic"}], ",", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"plottype", "\[Equal]", "\"\<Plot3D\>\""}], ",", "\n", 
             "\t\t", 
             RowBox[{"framelabel", "=", 
              RowBox[{"{", 
               RowBox[{"trait1", ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{
                  RowBox[{"trait", "[", 
                   RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "0"}], "]"}], 
                ",", "\"\<inv\>\""}], "}"}]}], ",", "\n", "\t\t", 
             RowBox[{"framelabel", "=", 
              RowBox[{"{", 
               RowBox[{"trait1", ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{
                  RowBox[{"trait", "[", 
                   RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "0"}], "]"}]}], 
               "}"}]}]}], "\n", "\t", "]"}]}], "\n", "]"}], ";", "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"fixed", " ", "traits", " ", "for", " ", "invader"}], " ", 
          "*)"}], "\n", 
         RowBox[{"invfixed", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{"trt", ",", "0"}], "]"}], "\[Rule]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"trt", ",", "sp1"}], "]"}], "/.", "fixed"}], ")"}]}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"trt", ",", 
              RowBox[{"Complement", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"trait", "[", 
                   RowBox[{"gu1", ",", "tr"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"tr", ",", 
                    RowBox[{"ntraits", "[", "gu1", "]"}]}], "}"}]}], "]"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"trait", "[", 
                  RowBox[{"gu1", ",", "tr1"}], "]"}], "}"}]}], "]"}]}], 
             "}"}]}], "]"}]}], ";", "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"define", " ", "resident", " ", "sol"}], " ", "*)"}], "\n", 
         "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"solin", "===", "\"\<FindEcoAttractor\>\""}], ",", "\n", 
           "\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"ics", "\[Equal]", 
               RowBox[{"{", "}"}]}], ",", "\n", "\t\t", 
              RowBox[{"(*", " ", 
               RowBox[{
               "figure", " ", "out", " ", "number", " ", "of", " ", "species",
                 " ", "in", " ", "guilds"}], " ", "*)"}], "\n", "\t\t", 
              RowBox[{
               RowBox[{"SetNsp", "[", 
                RowBox[{"Append", "[", 
                 RowBox[{"fixed", ",", 
                  RowBox[{"trait1", "\[Rule]", "trait1"}]}], "]"}], "]"}], 
               ";", "\n", "\t\t", 
               RowBox[{"If", "[", 
                RowBox[{"Global`debug", ",", 
                 RowBox[{"Print", "[", 
                  RowBox[{"func", ",", "\"\<: Nsp=\>\"", ",", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Nsp", "[", "gu", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "]"}]}], 
                "]"}], ";", "\n", "\t\t", 
               RowBox[{"ics", "=", "DefaultICs"}], ";", "\n", "\t\t", 
               RowBox[{"If", "[", 
                RowBox[{"verbose", ",", 
                 RowBox[{"Print", "[", 
                  RowBox[{"func", ",", "\"\<: ics=\>\"", ",", "ics"}], 
                  "]"}]}], "]"}], ";"}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", "\n", "\t\t", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"tr", "=", 
                   RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"fixed", "/.", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], "}"}]}], 
                    "]"}]}], ",", 
                  RowBox[{"ics", "=", "ics"}], ",", 
                  RowBox[{"op", "=", 
                   RowBox[{"Sequence", "@@", "findecoattractoropts"}]}]}], 
                 "}"}], ",", "\n", "\t\t\t", 
                RowBox[{"PrintCall", "[", 
                 RowBox[{
                  RowBox[{"Global`sol", "[", 
                   RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}], "]"}], ":=", 
                  RowBox[{
                   RowBox[{"Global`sol", "[", "System`\[FormalX]", "]"}], "=", 
                   RowBox[{"FindEcoAttractor", "[", 
                    RowBox[{"tr", ",", "ics", ",", "op"}], "]"}]}]}], "]"}]}],
                "\n", "\t", "]"}]}], "]"}], ";", "\n", "\t", 
            RowBox[{
             RowBox[{"sol", "[", 
              RowBox[{"\[FormalX]_", "?", "NumberQ"}], "]"}], ":=", 
             RowBox[{
              RowBox[{"sol", "[", "\[FormalX]", "]"}], "=", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", "result", "}"}], ",", "\n", "\t\t", 
                RowBox[{
                 RowBox[{"result", "=", 
                  RowBox[{"FindEcoAttractor", "[", 
                   RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"fixed", "/.", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], "}"}]}], 
                    "]"}], ",", "ics", ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "findecoattractoropts"}], "]"}],
                     ",", 
                    RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], 
                   "]"}]}], ";", "\n", "\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"printtrace", ",", 
                   RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<EcoAttractor (\>\"", ",", "trait1", ",", "\"\<=\>\"",
                     ",", "\[FormalX]", ",", "\"\<): \>\"", ",", "result"}], 
                    "]"}]}], "]"}], ";", "\n", "\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"result", "\[Equal]", 
                    RowBox[{"{", "$Failed", "}"}]}], ",", 
                   RowBox[{"Message", "[", 
                    RowBox[{
                    RowBox[{"PlotPIP", "::", "feafail"}], ",", "trait1", ",", 
                    "\[FormalX]"}], "]"}]}], "]"}], ";", "\n", "\t\t", 
                 RowBox[{"Return", "[", "result", "]"}]}]}], "\n", "\t", 
               "]"}]}]}], ";", "\n", "\t", 
            RowBox[{"delayinv", "=", "True"}], ";"}], "\n", ",", "\n", "\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", 
              RowBox[{"PrintCall", "[", 
               RowBox[{
                RowBox[{"Global`sol", "[", 
                 RowBox[{
                  RowBox[{"(", "System`\[FormalX]", ")"}], "_"}], "]"}], "=", 
                
                RowBox[{"solin", "/.", 
                 RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}]}], "]"}]}], 
             "]"}], ";", "\n", "\t", 
            RowBox[{
             RowBox[{"sol", "[", "\[FormalX]_", "]"}], "=", 
             RowBox[{"solin", "/.", 
              RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}]}], ";", "\n", 
            "\t", 
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", 
              RowBox[{"Print", "[", 
               RowBox[{"func", ",", "\"\<: sol[\[FormalX]]=\>\"", ",", 
                RowBox[{"sol", "[", "\[FormalX]", "]"}]}], "]"}]}], "]"}], 
            ";"}]}], "\n", "]"}], ";", "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"define", " ", "inv"}], " ", "*)"}], "\n", 
         RowBox[{"If", "[", 
          RowBox[{"delayinv", ",", "\n", "\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"subtractdiagonal", "\[Equal]", "True"}], ",", "\n", 
              "\t\t", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{"verbose", ",", "\n", "\t\t\t", 
                 RowBox[{"With", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"tr", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"so", "=", 
                    RowBox[{"sol", "[", "\[FormalX]", "]"}]}], ",", 
                    RowBox[{"ti", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"invfixed", ",", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "0"}], "]"}], 
                    "\[Rule]", "\[FormalX]"}]}], "]"}]}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "invopts"}]}]}], "}"}], ",", 
                   "\n", "\t\t\t\t", 
                   RowBox[{"PrintCall", "[", 
                    RowBox[{
                    RowBox[{"Global`resinv", "[", 
                    RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"Global`resinv", "[", "System`\[FormalX]", "]"}], 
                    "=", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "so", ",", "ti", ",", "op"}], 
                    "]"}]}]}], "]"}]}], "\n", "\t\t", "]"}]}], "]"}], ";", 
               "\n", "\t\t", 
               RowBox[{
                RowBox[{"resinv", "[", 
                 RowBox[{"\[FormalX]_", "?", "NumberQ"}], "]"}], ":=", 
                RowBox[{
                 RowBox[{"resinv", "[", "\[FormalX]", "]"}], "=", "\n", 
                 "\t\t", 
                 RowBox[{"Inv", "[", 
                  RowBox[{
                   RowBox[{"Append", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}], "]"}], ",", 
                   RowBox[{"sol", "[", "\[FormalX]", "]"}], ",", 
                   RowBox[{"Append", "[", 
                    RowBox[{"invfixed", ",", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "0"}], "]"}], 
                    "\[Rule]", "\[FormalX]"}]}], "]"}], ",", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}], ",", 
                   RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], 
                  "]"}]}]}], ";"}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", "\n", "\t\t", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"tr", "=", 
                   RowBox[{"Append", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}], "]"}]}], 
                  ",", 
                  RowBox[{"so", "=", 
                   RowBox[{"sol", "[", "\[FormalX]", "]"}]}], ",", 
                  RowBox[{"ti", "=", 
                   RowBox[{"Append", "[", 
                    RowBox[{"invfixed", ",", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "0"}], "]"}], 
                    "\[Rule]", "\[FormalY]"}]}], "]"}]}], ",", 
                  RowBox[{"op", "=", 
                   RowBox[{"Sequence", "@@", "invopts"}]}], ",", "\n", 
                  "\t\t\t", 
                  RowBox[{"sub", "=", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"subtractdiagonal", "\[Equal]", "True"}], ",", 
                    RowBox[{"Global`resinv", "[", "\[FormalX]", "]"}], ",", 
                    "0"}], "]"}]}]}], "}"}], ",", "\n", "\t\t\t", 
                RowBox[{"PrintCall", "[", 
                 RowBox[{
                  RowBox[{"Global`inv", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}]}], "]"}], ":=", 
                  RowBox[{
                   RowBox[{"Global`inv", "[", 
                    RowBox[{"System`\[FormalX]", ",", "System`\[FormalY]"}], 
                    "]"}], "=", 
                   RowBox[{
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "so", ",", "ti", ",", "op"}], "]"}], 
                    "-", "sub"}]}]}], "]"}]}], "\n", "\t", "]"}]}], "]"}], 
            ";", "\n", "\t", 
            RowBox[{
             RowBox[{"inv", "[", 
              RowBox[{
               RowBox[{"\[FormalX]_", "?", "NumberQ"}], ",", 
               RowBox[{"\[FormalY]_", "?", "NumberQ"}]}], "]"}], ":=", 
             RowBox[{
              RowBox[{"inv", "[", 
               RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "=", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", "result", "}"}], ",", "\n", "\t\t", 
                RowBox[{
                 RowBox[{"result", "=", 
                  RowBox[{"Inv", "[", 
                   RowBox[{
                    RowBox[{"Append", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}], "]"}], ",", 
                    RowBox[{"sol", "[", "\[FormalX]", "]"}], ",", 
                    RowBox[{"Append", "[", 
                    RowBox[{"invfixed", ",", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "0"}], "]"}], 
                    "\[Rule]", "\[FormalY]"}]}], "]"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}], ",", 
                    RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], 
                   "]"}]}], ";", "\n", "\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"printtrace", ",", 
                   RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<Inv (\>\"", ",", "trait1", ",", "\"\<=\>\"", ",", 
                    "\[FormalX]", ",", "\"\< \>\"", ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "0"}], "]"}], 
                    ",", "\"\<=\>\"", ",", "\[FormalY]", ",", "\"\<): \>\"", 
                    ",", "result"}], "]"}]}], "]"}], ";", "\n", "\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"subtractdiagonal", ",", 
                   RowBox[{"result", "=", 
                    RowBox[{"result", "-", 
                    RowBox[{"resinv", "[", "\[FormalX]", "]"}]}]}]}], "]"}], 
                 ";", "\n", "\t\t", 
                 RowBox[{"Return", "[", "result", "]"}], ";"}]}], "\n", "\t", 
               "]"}]}]}], ";"}], "\n", ",", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{"nondelay", " ", "inv"}], " ", "*)"}], "\n", "\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"subtractdiagonal", "\[Equal]", "True"}], ",", "\n", 
              "\t\t", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{"verbose", ",", "\n", "\t\t\t", 
                 RowBox[{"With", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"tr", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"so", "=", 
                    RowBox[{"sol", "[", "\[FormalX]", "]"}]}], ",", 
                    RowBox[{"ti", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"invfixed", ",", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "0"}], "]"}], 
                    "\[Rule]", "\[FormalX]"}]}], "]"}]}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "invopts"}]}]}], "}"}], ",", 
                   "\n", "\t\t\t", 
                   RowBox[{"PrintCall", "[", 
                    RowBox[{
                    RowBox[{"Global`resinv", "[", 
                    RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], "_"}], "]"}], 
                    "=", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "so", ",", "ti", ",", "op"}], "]"}]}], 
                    "]"}]}], "\n", "\t\t", "]"}]}], "]"}], ";", "\n", "\t\t", 
               
               RowBox[{
                RowBox[{"resinv", "[", "\[FormalX]_", "]"}], "=", 
                RowBox[{"Inv", "[", 
                 RowBox[{
                  RowBox[{"Append", "[", 
                   RowBox[{"fixed", ",", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}], "]"}], ",", 
                  RowBox[{"sol", "[", "\[FormalX]", "]"}], ",", 
                  RowBox[{"Append", "[", 
                   RowBox[{"invfixed", ",", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "0"}], "]"}], 
                    "\[Rule]", "\[FormalX]"}]}], "]"}], ",", 
                  RowBox[{"Evaluate", "[", 
                   RowBox[{"Sequence", "@@", "invopts"}], "]"}], ",", 
                  RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}], 
               ";", "\n", "\t\t", 
               RowBox[{"If", "[", 
                RowBox[{"verbose", ",", 
                 RowBox[{"Print", "[", 
                  RowBox[{"func", ",", "\"\<: resinv[\[FormalX]]=\>\"", ",", 
                   RowBox[{"resinv", "[", "\[FormalX]", "]"}]}], "]"}]}], 
                "]"}], ";"}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", "\n", "\t\t", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"tr", "=", 
                   RowBox[{"Append", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}], "]"}]}], 
                  ",", 
                  RowBox[{"so", "=", 
                   RowBox[{"sol", "[", "\[FormalX]", "]"}]}], ",", 
                  RowBox[{"ti", "=", 
                   RowBox[{"Append", "[", 
                    RowBox[{"invfixed", ",", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "0"}], "]"}], 
                    "\[Rule]", "\[FormalY]"}]}], "]"}]}], ",", 
                  RowBox[{"op", "=", 
                   RowBox[{"Sequence", "@@", "invopts"}]}], ",", "\n", 
                  "\t\t\t", 
                  RowBox[{"sub", "=", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"subtractdiagonal", "\[Equal]", "True"}], ",", 
                    RowBox[{"Global`resinv", "[", "\[FormalX]", "]"}], ",", 
                    "0"}], "]"}]}]}], "}"}], ",", "\n", "\t\t\t", 
                RowBox[{"PrintCall", "[", 
                 RowBox[{
                  RowBox[{"Global`inv", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], "_"}], ",", 
                    RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], "_"}]}], "]"}], 
                  "=", 
                  RowBox[{
                   RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "so", ",", "ti", ",", "op"}], "]"}], 
                   "-", "sub"}]}], "]"}]}], "\n", "\t", "]"}]}], "]"}], ";", 
            "\n", "\t", 
            RowBox[{
             RowBox[{"inv", "[", 
              RowBox[{"\[FormalX]_", ",", "\[FormalY]_"}], "]"}], "=", "\n", 
             "\t\t", 
             RowBox[{
              RowBox[{"Inv", "[", 
               RowBox[{
                RowBox[{"Append", "[", 
                 RowBox[{"fixed", ",", 
                  RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}], "]"}], ",", 
                RowBox[{"sol", "[", "\[FormalX]", "]"}], ",", 
                RowBox[{"Append", "[", 
                 RowBox[{"invfixed", ",", 
                  RowBox[{
                   RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "0"}], "]"}], 
                   "\[Rule]", "\[FormalY]"}]}], "]"}], ",", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"Sequence", "@@", "invopts"}], "]"}], ",", 
                RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}], 
              "\n", "\t\t", "-", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"subtractdiagonal", "\[Equal]", "True"}], ",", 
                RowBox[{"resinv", "[", "\[FormalX]", "]"}], ",", "0"}], 
               "]"}]}]}], ";", "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", 
              RowBox[{"Print", "[", 
               RowBox[{
               "func", ",", "\"\<: inv[\[FormalX],\[FormalY]]=\>\"", ",", 
                RowBox[{"inv", "[", 
                 RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], "]"}]}], 
             "]"}], ";"}]}], "\n", "]"}], ";", "\n", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"monitor", ",", "\n", "\t", 
           RowBox[{
            RowBox[{"nb", "=", 
             RowBox[{"CreateDialog", "[", 
              RowBox[{"DialogNotebook", "[", 
               RowBox[{
                RowBox[{"Grid", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\<\[FormalX]=\>\"", ",", 
                    RowBox[{"Dynamic", "[", "x", "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\<\[FormalY]=\>\"", ",", 
                    RowBox[{"Dynamic", "[", "y", "]"}]}], "}"}]}], "}"}], 
                 "]"}], ",", 
                RowBox[{
                "WindowTitle", "\[Rule]", "\"\<PlotPIP Progress...\>\""}]}], 
               "]"}], "]"}]}], ";"}]}], "\n", "]"}], ";", "\n", "\n", 
         RowBox[{"Which", "[", "\n", "\t", 
          RowBox[{
           RowBox[{"plottype", "\[Equal]", "\"\<Plot3D\>\""}], ",", "\n", 
           "\t", 
           RowBox[{"res", "=", 
            RowBox[{"Plot3D", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Evaluate", "[", 
                 RowBox[{"inv", "[", 
                  RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "]"}], 
                ",", "invthreshold"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[FormalX]", ",", "trait1min", ",", "trait1max"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[FormalY]", ",", "trait1min", ",", "trait1max"}], 
               "}"}], ",", "\n", "\t\t", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
              RowBox[{"AxesLabel", "\[Rule]", 
               RowBox[{"Append", "[", 
                RowBox[{"framelabel", ",", "\"\<inv\>\""}], "]"}]}], ",", 
              RowBox[{"EvaluationMonitor", "\[RuleDelayed]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}], "=", 
                 RowBox[{"{", 
                  RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "}"}]}], 
                "}"}]}]}], "]"}]}], ",", "\n", "\t", 
           RowBox[{"plottype", "\[Equal]", "\"\<ContourPlot\>\""}], ",", "\n",
            "\t", 
           RowBox[{"res", "=", 
            RowBox[{"ContourPlot", "[", 
             RowBox[{
              RowBox[{"Evaluate", "[", 
               RowBox[{"inv", "[", 
                RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "]"}], ",", 
              
              RowBox[{"{", 
               RowBox[{"\[FormalX]", ",", "trait1min", ",", "trait1max"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[FormalY]", ",", "trait1min", ",", "trait1max"}], 
               "}"}], ",", "\n", "\t\t", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
              RowBox[{"FrameLabel", "\[Rule]", "framelabel"}], ",", 
              RowBox[{"EvaluationMonitor", "\[RuleDelayed]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}], "=", 
                 RowBox[{"{", 
                  RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "}"}]}], 
                "}"}]}]}], "]"}]}], ",", "\n", "\t", 
           RowBox[{"plottype", "\[Equal]", "\"\<RegionPlot\>\""}], ",", " ", 
           "\n", "\t", 
           RowBox[{"res", "=", 
            RowBox[{"RegionPlot", "[", 
             RowBox[{
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{"inv", "[", 
                 RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], ">", 
                "invthreshold"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[FormalX]", ",", "trait1min", ",", "trait1max"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[FormalY]", ",", "trait1min", ",", "trait1max"}], 
               "}"}], ",", "\n", "\t\t", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "invstyle"}], ",", 
              RowBox[{"BoundaryStyle", "\[Rule]", "boundarystyle"}], ",", 
              RowBox[{"FrameLabel", "\[Rule]", "framelabel"}], ",", 
              RowBox[{"EvaluationMonitor", "\[RuleDelayed]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}], "=", 
                 RowBox[{"{", 
                  RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "}"}]}], 
                "}"}]}]}], "]"}]}], ",", "\n", "\t", 
           RowBox[{"plottype", "\[Equal]", "\"\<PIP\>\""}], ",", "\n", "\t", 
           RowBox[{"res", "=", 
            RowBox[{"ContourPlot", "[", 
             RowBox[{
              RowBox[{"Evaluate", "[", 
               RowBox[{"inv", "[", 
                RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "]"}], ",", 
              
              RowBox[{"{", 
               RowBox[{"\[FormalX]", ",", "trait1min", ",", "trait1max"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[FormalY]", ",", "trait1min", ",", "trait1max"}], 
               "}"}], ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", "\n", 
              "\t\t", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"Contours", "\[Rule]", 
               RowBox[{"{", "invthreshold", "}"}]}], ",", 
              RowBox[{"ContourStyle", "\[Rule]", 
               RowBox[{"{", "boundarystyle", "}"}]}], ",", 
              RowBox[{"ContourShading", "\[Rule]", "True"}], ",", 
              RowBox[{"ColorFunction", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"#", ">", "invthreshold"}], ",", "invstyle", ",", 
                   "noninvstyle"}], "]"}], "&"}], ")"}]}], ",", "\n", "\t\t", 
              
              RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
              RowBox[{"Method", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"\"\<TransparentPolygonMesh\>\"", "\[Rule]", "True"}],
                 "}"}]}], ",", 
              RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
              RowBox[{"FrameLabel", "\[Rule]", "framelabel"}], ",", 
              RowBox[{"EvaluationMonitor", "\[RuleDelayed]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}], "=", 
                 RowBox[{"{", 
                  RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "}"}]}], 
                "}"}]}]}], "]"}]}], ",", "\n", "\t", "Else", ",", "\n", "\t", 
           
           RowBox[{
            RowBox[{"Message", "[", 
             RowBox[{"PlotPIP", "::", "badmtd"}], "]"}], ";", 
            RowBox[{"Return", "[", "$Failed", "]"}]}]}], "\n", "]"}], ";", 
         "\n", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"monitor", ",", 
           RowBox[{"NotebookClose", "[", "nb", "]"}]}], "]"}], ";", "\n", 
         "\n", 
         RowBox[{"Return", "[", "res", "]"}]}]}], "\n", "\n", "]"}]}], 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PlotPIP", "]"}], "=", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"FindEcoAttractorOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"InvOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", "\t", 
     RowBox[{"DelayInv", "\[Rule]", "False"}], ",", 
     RowBox[{"PlotType", "\[Rule]", "\"\<PIP\>\""}], ",", 
     RowBox[{"ICs", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"ZeroDiagonal", "\[Rule]", "False"}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"SubtractDiagonal", "\[Rule]", "False"}], ",", 
     RowBox[{"InvThreshold", "\[Rule]", "Automatic"}], ",", "\n", "\t", 
     RowBox[{"PlotOpts", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"MaxRecursion", "\[Rule]", "3"}], "}"}]}], ",", "\n", "\t", 
     RowBox[{"BoundaryStyle", "\[Rule]", "Black"}], ",", 
     RowBox[{"InvStyle", "\[Rule]", "Gray"}], ",", 
     RowBox[{"NonInvStyle", "\[Rule]", "White"}], ",", "\n", "\t", 
     RowBox[{"Monitor", "\[Rule]", "False"}], ",", "\n", "\t", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "\n", "}"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.6882878053898993`*^9, 3.688287808743078*^9}, 
   3.688288135806472*^9, {3.688571691991478*^9, 3.688571693332206*^9}, {
   3.688571767918311*^9, 3.6885717681985188`*^9}, 3.688571807424464*^9, {
   3.689089001313301*^9, 3.6890890043689737`*^9}, {3.689089064072935*^9, 
   3.689089086138599*^9}, {3.689089143143515*^9, 3.6890891774214573`*^9}, 
   3.689089319114167*^9, {3.6890893978441753`*^9, 3.68908946417699*^9}, {
   3.6890894988659487`*^9, 3.689089502950509*^9}, {3.68908962606043*^9, 
   3.689089707985218*^9}, {3.6890897508996687`*^9, 3.689089752853948*^9}, {
   3.689089795971916*^9, 3.689089811275532*^9}, {3.689094833621719*^9, 
   3.6890948514587193`*^9}, {3.689094910467456*^9, 3.6890949221569777`*^9}, {
   3.6890954370202703`*^9, 3.6890954584809504`*^9}, {3.689095633452139*^9, 
   3.689095634779669*^9}, {3.689096392029808*^9, 3.689096392409925*^9}, 
   3.689109040730095*^9, {3.689111758566491*^9, 3.689111784518702*^9}, {
   3.689111904429968*^9, 3.689111915953508*^9}, {3.689111976407898*^9, 
   3.689111979453858*^9}, {3.689112031839395*^9, 3.689112034130287*^9}, {
   3.689112234797407*^9, 3.689112238688863*^9}, {3.689112335834444*^9, 
   3.689112341527008*^9}, {3.689112410877317*^9, 3.689112416319282*^9}, {
   3.6891124757905483`*^9, 3.6891124785613213`*^9}, {3.689174823424921*^9, 
   3.689174829366109*^9}, {3.6891783281588087`*^9, 3.689178328497805*^9}, {
   3.689178370594777*^9, 3.689178450825324*^9}, {3.6891790813283653`*^9, 
   3.689179127857786*^9}, {3.6891791818152533`*^9, 3.689179231214836*^9}, {
   3.68917973835533*^9, 3.689179779593503*^9}, {3.68918002554659*^9, 
   3.689180030068746*^9}, {3.689180135050324*^9, 3.6891801580467854`*^9}, {
   3.6891802340613937`*^9, 3.689180239945746*^9}, {3.689180294960429*^9, 
   3.6891803050153313`*^9}, {3.689180392448309*^9, 3.689180485273971*^9}, {
   3.6891816382118883`*^9, 3.689181644221792*^9}, {3.689191913231555*^9, 
   3.6891919983976393`*^9}, {3.689197811186739*^9, 3.6891978143392344`*^9}, {
   3.689198544412386*^9, 3.689198568239478*^9}, {3.689198714685821*^9, 
   3.689198716361845*^9}, {3.689198780784491*^9, 3.689198784734527*^9}, 
   3.689198861191393*^9, {3.689198913114086*^9, 3.689198949159569*^9}, {
   3.68919905265482*^9, 3.6891990809619617`*^9}, {3.689199117939396*^9, 
   3.689199152204212*^9}, {3.6891994321929617`*^9, 3.689199474812408*^9}, {
   3.689199517252146*^9, 3.6891995176044188`*^9}, {3.689199587743112*^9, 
   3.6891996617293787`*^9}, {3.689199717876816*^9, 3.6891997680542192`*^9}, {
   3.689200137207405*^9, 3.689200243050371*^9}, {3.689200298027767*^9, 
   3.689200301455925*^9}, {3.689201238814459*^9, 3.689201256720944*^9}, {
   3.689202801977714*^9, 3.6892028035579557`*^9}, {3.689202852554137*^9, 
   3.689202894752262*^9}, {3.689202952746408*^9, 3.6892029611328793`*^9}, {
   3.689203013609786*^9, 3.6892030191456137`*^9}, {3.689203077905377*^9, 
   3.6892031213953457`*^9}, {3.689203172443755*^9, 3.689203175337235*^9}, {
   3.6892034959812326`*^9, 3.68920350669643*^9}, {3.689203577291835*^9, 
   3.68920358644083*^9}, {3.6892036343190327`*^9, 3.689203654362729*^9}, {
   3.6892037096036043`*^9, 3.6892037138753023`*^9}, {3.689203758755131*^9, 
   3.689203779386141*^9}, {3.689203813064961*^9, 3.689203823828795*^9}, {
   3.689203885257016*^9, 3.6892038975928717`*^9}, 3.689204020852828*^9, {
   3.6892040760499287`*^9, 3.689204091491871*^9}, {3.689204247224155*^9, 
   3.6892043556569023`*^9}, 3.689204392097805*^9, {3.689204573658605*^9, 
   3.689204588825337*^9}, {3.6892047072010183`*^9, 3.689204782361391*^9}, {
   3.689204855748041*^9, 3.68920488349269*^9}, {3.689205187275572*^9, 
   3.6892052180399647`*^9}, {3.689205416312755*^9, 3.6892054198705587`*^9}, {
   3.689205502162085*^9, 3.689205546551907*^9}, {3.689205619607603*^9, 
   3.689205629815021*^9}, {3.689205730510394*^9, 3.689205731948648*^9}, {
   3.689205931427723*^9, 3.689205975525549*^9}, {3.6892071341554403`*^9, 
   3.6892071359756813`*^9}, {3.689250431833008*^9, 3.689250470270946*^9}, {
   3.689250715419957*^9, 3.6892507249180403`*^9}, {3.689250784897676*^9, 
   3.689250794159843*^9}, {3.6892508245846043`*^9, 3.689250831778019*^9}, 
   3.689289425324069*^9, {3.6961621421770067`*^9, 3.6961621422215967`*^9}, {
   3.6962787073963833`*^9, 3.6962787150874767`*^9}, {3.696278763823457*^9, 
   3.696278787052191*^9}, 3.696278848675012*^9, {3.696336384425806*^9, 
   3.696336384799808*^9}, {3.696631878688575*^9, 3.69663189812319*^9}, 
   3.696632208448448*^9, 3.6966328706169167`*^9, {3.696807891665193*^9, 
   3.696807893138623*^9}, {3.708834707532692*^9, 3.7088347170895977`*^9}, {
   3.709336791185824*^9, 3.709336792639715*^9}, 3.710105986907427*^9, {
   3.710256264542733*^9, 3.710256270382635*^9}, 3.714059650264831*^9, 
   3.722029506592965*^9, {3.722034137288947*^9, 3.722034141048389*^9}, {
   3.722087635746091*^9, 3.722087644147887*^9}, {3.726056451490245*^9, 
   3.726056465179557*^9}, {3.726071090970359*^9, 3.726071092789983*^9}, {
   3.7260712433557997`*^9, 3.726071245133451*^9}, {3.7260713324157677`*^9, 
   3.726071390476644*^9}, {3.726071497216798*^9, 3.7260715337222557`*^9}, {
   3.726072888227065*^9, 3.726072928006425*^9}, {3.7260730380680227`*^9, 
   3.726073113792355*^9}, {3.726073165290617*^9, 3.726073229326071*^9}, {
   3.726073501884719*^9, 3.726073511653207*^9}, {3.726073576767537*^9, 
   3.72607357691678*^9}, 3.726073697706916*^9, {3.726074316210824*^9, 
   3.726074316927059*^9}, {3.7260743919497013`*^9, 3.726074414547894*^9}, {
   3.726074460259066*^9, 3.726074484902568*^9}, {3.726075238073091*^9, 
   3.726075275152114*^9}, {3.72618828208501*^9, 3.7261882945543127`*^9}, {
   3.7261883720903*^9, 3.726188381323353*^9}, {3.726188420266077*^9, 
   3.726188426293673*^9}, {3.726188776691154*^9, 3.726188789728528*^9}, {
   3.726188842312276*^9, 3.726188860794813*^9}, {3.726188988739767*^9, 
   3.726189108311336*^9}, {3.726230212861211*^9, 3.726230217747037*^9}, {
   3.726230645967428*^9, 3.7262307667987223`*^9}, {3.726230818395987*^9, 
   3.726230884489443*^9}, {3.726231277402527*^9, 3.72623131285391*^9}, {
   3.726231393522318*^9, 3.726231454285048*^9}, {3.726231686756743*^9, 
   3.726231700836083*^9}, {3.726231767053443*^9, 3.726231789154139*^9}, {
   3.7262326686860533`*^9, 3.7262326974127617`*^9}, {3.7262327836341753`*^9, 
   3.726232874572188*^9}, {3.7262329925979958`*^9, 3.7262330788257647`*^9}, {
   3.726233305075042*^9, 3.7262333172963867`*^9}, {3.726233351492125*^9, 
   3.7262333591029997`*^9}, {3.726233758487073*^9, 3.72623380707312*^9}, {
   3.726233870688229*^9, 3.726233908829048*^9}, {3.726237375602306*^9, 
   3.7262373859536543`*^9}, {3.726237423617084*^9, 3.726237464937804*^9}, {
   3.72623772549475*^9, 3.726237738212401*^9}, {3.726237780345769*^9, 
   3.7262378354836693`*^9}, {3.726854018042366*^9, 3.7268540335791807`*^9}, {
   3.726854072833074*^9, 3.726854093841251*^9}, {3.726855239217329*^9, 
   3.726855264118061*^9}, {3.7268557230178823`*^9, 3.726855742664983*^9}, {
   3.726856572217778*^9, 3.726856672024487*^9}, {3.726856779541354*^9, 
   3.7268569744166613`*^9}, {3.726857012712079*^9, 3.726857017083234*^9}, {
   3.726857069306169*^9, 3.726857103092688*^9}, {3.726858001597035*^9, 
   3.726858038086812*^9}, {3.726858074457255*^9, 3.72685807564783*^9}, {
   3.7268581805910053`*^9, 3.7268581835488577`*^9}, {3.7268583043467283`*^9, 
   3.7268583179085207`*^9}, {3.726858361303534*^9, 3.726858362573333*^9}, {
   3.727915959261964*^9, 3.7279159983124447`*^9}, {3.727916030994895*^9, 
   3.727916064560351*^9}, {3.727916099780263*^9, 3.727916106652927*^9}, {
   3.72791618509103*^9, 3.7279162133993177`*^9}, {3.727916248195435*^9, 
   3.7279162894337387`*^9}, 3.727917338867939*^9, {3.727917411241886*^9, 
   3.7279174222276297`*^9}, {3.727963438355867*^9, 3.727963468286482*^9}, {
   3.727963781137619*^9, 3.72796379461798*^9}, {3.727963830105013*^9, 
   3.727963895766238*^9}, {3.7279647005991077`*^9, 3.7279647480513287`*^9}, {
   3.727971244636801*^9, 3.7279712951495256`*^9}, {3.729206049982527*^9, 
   3.729206391094458*^9}, {3.729206430652381*^9, 3.729206442855134*^9}, {
   3.729206473687046*^9, 3.7292065798051653`*^9}, {3.7292097373420963`*^9, 
   3.729209818654113*^9}, {3.72921038555436*^9, 3.729210411446641*^9}, {
   3.729210480345175*^9, 3.7292105212657948`*^9}, {3.729210687937376*^9, 
   3.729210726202386*^9}, {3.729210811355405*^9, 3.72921090763039*^9}, {
   3.729210993322847*^9, 3.729211011628931*^9}, {3.7292110686862717`*^9, 
   3.729211082480344*^9}, 3.7292111344799223`*^9, {3.729246579945427*^9, 
   3.729246582755569*^9}, {3.7292466129223537`*^9, 3.729246665746838*^9}, {
   3.729252843237739*^9, 3.729252869768497*^9}, {3.729252965562705*^9, 
   3.729252982686331*^9}, {3.7292530492225723`*^9, 3.729253052280053*^9}, {
   3.729253106802218*^9, 3.729253109466371*^9}, {3.729516840069571*^9, 
   3.729516866309836*^9}, {3.729516897526276*^9, 3.729516935333987*^9}, {
   3.7295174274676933`*^9, 3.729517434159416*^9}, {3.729517589295079*^9, 
   3.729517589468935*^9}, {3.729521737563169*^9, 3.729521737716382*^9}, {
   3.7295224992948637`*^9, 3.7295225037970133`*^9}, 3.729522573306675*^9, {
   3.729522632857226*^9, 3.729522706721671*^9}, {3.7295227665134687`*^9, 
   3.729522769103799*^9}, {3.729522819596964*^9, 3.7295228302243147`*^9}, {
   3.729522882962694*^9, 3.7295228872019453`*^9}, {3.737047827262353*^9, 
   3.737047860663974*^9}, 3.737049077440442*^9, {3.737049146393955*^9, 
   3.737049172765809*^9}, {3.737049320409162*^9, 3.737049326450137*^9}, {
   3.737049467070519*^9, 3.737049468883052*^9}, {3.737049551402895*^9, 
   3.737049578968912*^9}, {3.737049628102042*^9, 3.737049649104781*^9}, {
   3.7370496994241247`*^9, 3.7370497779819927`*^9}, {3.7471573233244667`*^9, 
   3.7471573294894133`*^9}, {3.747157440439859*^9, 3.7471574407736273`*^9}, {
   3.747170300156291*^9, 3.7471703060836287`*^9}, {3.7471707882957487`*^9, 
   3.747170797665812*^9}, {3.74717091093372*^9, 3.7471709144339123`*^9}, {
   3.7471770568392553`*^9, 3.74717705780588*^9}, 3.7553735087918*^9, {
   3.755438082343615*^9, 3.7554380879410048`*^9}, {3.755438344874769*^9, 
   3.7554383728594112`*^9}, {3.755438413505609*^9, 3.755438447977132*^9}, {
   3.755438493133107*^9, 3.755438516570827*^9}, {3.755438745660039*^9, 
   3.755438783985099*^9}, {3.7554389156762877`*^9, 3.7554389410371933`*^9}, {
   3.7554395103394957`*^9, 3.7554395912531223`*^9}, {3.755439747901032*^9, 
   3.755439772670339*^9}, {3.755439804140441*^9, 3.7554398042919703`*^9}, {
   3.755439834965951*^9, 3.75543987228279*^9}, {3.755439909862715*^9, 
   3.755439914590097*^9}, {3.7554399500723753`*^9, 3.7554399520758867`*^9}, {
   3.7554404669293957`*^9, 3.7554404958744583`*^9}, 
   3.755440863778035*^9},ExpressionUUID->"6b3b5376-6301-40f3-a430-\
f16919723f6a"]
}, Closed]],

Cell[CellGroupData[{

Cell["PlotMIP", "Subsection",
 CellDingbat->
  "\[ClubSuit]",ExpressionUUID->"725f0102-bbe0-4d21-9d25-fde00f9c1526"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotMIP", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"solin1", ":", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"_", "?", "RuleListQ"}], "|", 
          RowBox[{"_", "?", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "\[Equal]", "\"\<FindEcoAttractor\>\""}], "&"}], 
            ")"}]}]}], ")"}], ":", "\"\<FindEcoAttractor\>\""}], ",", 
       RowBox[{"solin2", ":", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"_", "?", "RuleListQ"}], "|", 
          RowBox[{"_", "?", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "\[Equal]", "\"\<FindEcoAttractor\>\""}], "&"}], 
            ")"}]}]}], ")"}], ":", "\"\<FindEcoAttractor\>\""}]}], "}"}], ",",
      "\n", 
     RowBox[{"{", 
      RowBox[{"trait1_", ",", 
       RowBox[{"trait1min_", "?", "NumericQ"}], ",", 
       RowBox[{"trait1max_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"trait2_", ",", 
       RowBox[{"trait2min_", "?", "NumericQ"}], ",", 
       RowBox[{"trait2max_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<PlotMIP\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "printtrace", ",", "monitor", ",", "\n", "fixed", 
       ",", "delayinv", ",", "findecoattractoropts", ",", "invopts", ",", 
       "plotopts", ",", "plottype", ",", "icsin", ",", "zerodiagonal", ",", 
       "subtractdiagonal", ",", "invthreshold", ",", "\n", "boundarystyle", 
       ",", "spcolors", ",", "invstyle", ",", "noninvstyle", ",", 
       "framelabel", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "nb", ",", 
       "x", ",", "y", ",", "\n", "invfixed", ",", "gu1", ",", "tr1", ",", 
       "sp1", ",", "gu2", ",", "tr2", ",", "sp2", ",", "ics", ",", "sol1", 
       ",", "sol2", ",", "inv12", ",", "inv21", ",", "pip1", ",", "pip2", ",",
        "res"}], "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "Nsp", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Msg", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"printtrace", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PrintTrace", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"monitor", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Monitor", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"fixed", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Fixed", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"delayinv", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"DelayInv", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"findecoattractoropts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"FindEcoAttractorOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"invopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"InvOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"plotopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PlotOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"plottype", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PlotType", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"icsin", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"ICs", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"zerodiagonal", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"ZeroDiagonal", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"subtractdiagonal", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"SubtractDiagonal", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"invthreshold", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"InvThreshold", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"invthreshold", "===", "Automatic"}], ",", 
          RowBox[{"invthreshold", "=", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], ",", 
              "1", ",", "0"}], "]"}], "+", "$MachineEpsilon"}]}]}], "]"}], 
        ";", "\n", 
        RowBox[{"boundarystyle", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"BoundaryStyle", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"spcolors", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"SpeciesColors", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"invstyle", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"InvStyle", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"noninvstyle", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"NonInvStyle", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"framelabel", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"FrameLabel", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotMIP", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"zerodiagonal", ",", 
          RowBox[{
           RowBox[{"inv12", "[", 
            RowBox[{"traitres_", ",", "traitres_"}], "]"}], "=", 
           RowBox[{
            RowBox[{"inv21", "[", 
             RowBox[{"traitres_", ",", "traitres_"}], "]"}], "=", "0"}]}]}], 
         "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "figure", " ", "out", " ", "what", " ", "are", " ", "the", " ", 
           "traits", " ", "on", " ", "the", " ", "x"}], "-", " ", 
          RowBox[{"and", " ", "y"}], "-", "axes"}], " ", "*)"}], "\n", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"gu1", ",", "tr1", ",", "sp1"}], "}"}], "=", 
         RowBox[{
          RowBox[{"LookUp", "[", "trait1", "]"}], "\[LeftDoubleBracket]", 
          RowBox[{"2", ";;", "4"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"gu2", ",", "tr2", ",", "sp2"}], "}"}], "=", 
         RowBox[{
          RowBox[{"LookUp", "[", "trait2", "]"}], "\[LeftDoubleBracket]", 
          RowBox[{"2", ";;", "4"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"framelabel", "===", "Automatic"}], ",", "\n", "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"trait2", "===", "trait1"}], ",", "\n", "\t\t", 
            RowBox[{"framelabel", "=", 
             RowBox[{"{", 
              RowBox[{"trait1", ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{
                 RowBox[{"trait", "[", 
                  RowBox[{"gu1", ",", "tr1"}], "]"}], ",", 
                 RowBox[{"sp1", "+", "1"}]}], "]"}]}], "}"}]}], ",", "\n", 
            "\t\t", 
            RowBox[{"framelabel", "=", 
             RowBox[{"{", 
              RowBox[{"trait1", ",", "trait2"}], "}"}]}]}], "\n", "\t", 
           "]"}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"fixed", " ", "traits", " ", "for", " ", 
          RowBox[{"invader", " ", "[", 
           RowBox[{
           "why", " ", "are", " ", "there", " ", "2", " ", "of", " ", 
            RowBox[{"these", "?"}]}], "]"}]}], " ", "*)"}], "\n", 
        RowBox[{"invfixed", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Join", "[", "\n", "\t", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"trt", ",", "0"}], "]"}], "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"trt", ",", "sp1"}], "]"}], "/.", "fixed"}], 
                ")"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"trt", ",", 
                RowBox[{"Complement", "[", 
                 RowBox[{
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu1", ",", "tr"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"tr", ",", 
                    RowBox[{"ntraits", "[", "gu1", "]"}]}], "}"}]}], "]"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"trait", "[", 
                    RowBox[{"gu1", ",", "tr1"}], "]"}], "}"}]}], "]"}]}], 
               "}"}]}], "]"}], ",", "\n", "\t", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"trt", ",", "0"}], "]"}], "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{"trt", ",", "sp1"}], "]"}], "/.", "fixed"}], 
                ")"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"trt", ",", 
                RowBox[{"Complement", "[", 
                 RowBox[{
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu2", ",", "tr"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"tr", ",", 
                    RowBox[{"ntraits", "[", "gu2", "]"}]}], "}"}]}], "]"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"trait", "[", 
                    RowBox[{"gu2", ",", "tr2"}], "]"}], "}"}]}], "]"}]}], 
               "}"}]}], "]"}]}], "\n", "]"}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"solin1", "===", "\"\<FindEcoAttractor\>\""}], ",", "\n", 
          "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"icsin", "\[Equal]", 
              RowBox[{"{", "}"}]}], ",", "\n", "\t\t", 
             RowBox[{"(*", " ", 
              RowBox[{
              "figure", " ", "out", " ", "number", " ", "of", " ", "species", 
               " ", "in", " ", "guilds"}], " ", "*)"}], "\n", "\t\t", 
             RowBox[{
              RowBox[{"SetNsp", "[", 
               RowBox[{"Append", "[", 
                RowBox[{"fixed", ",", 
                 RowBox[{"trait1", "\[Rule]", "trait1"}]}], "]"}], "]"}], ";",
               "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{"Global`debug", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{"func", ",", "\"\<: Nsp=\>\"", ",", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"Nsp", "[", "gu", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "]"}]}], 
               "]"}], ";", "\n", "\t\t", 
              RowBox[{"ics", "=", "DefaultICs"}], ";", "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{"func", ",", "\"\<: ics=\>\"", ",", "ics"}], "]"}]}],
                "]"}], ";"}], "\n", "\t", ",", "\n", "\t\t", 
             RowBox[{"ics", "=", "icsin"}]}], "\n", "\t", "]"}], ";", "\n", 
           "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"tr", "=", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{"fixed", "/.", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], "}"}]}], 
                   "]"}]}], ",", 
                 RowBox[{"ics", "=", "ics"}], ",", 
                 RowBox[{"op", "=", 
                  RowBox[{"Sequence", "@@", "findecoattractoropts"}]}]}], 
                "}"}], ",", "\n", "\t\t\t", 
               RowBox[{"PrintCall", "[", 
                RowBox[{
                 RowBox[{"Global`sol1", "[", 
                  RowBox[{
                   RowBox[{"(", "System`\[FormalX]", ")"}], 
                   RowBox[{"_", "?", "NumberQ"}]}], "]"}], ":=", 
                 RowBox[{
                  RowBox[{"Global`sol1", "[", "System`\[FormalX]", "]"}], "=", 
                  RowBox[{"FindEcoAttractor", "[", 
                   RowBox[{"tr", ",", "ics", ",", "op"}], "]"}]}]}], "]"}]}], 
              "\n", "\t", "]"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{
            RowBox[{"sol1", "[", 
             RowBox[{"\[FormalX]_", "?", "NumberQ"}], "]"}], ":=", 
            RowBox[{
             RowBox[{"sol1", "[", "\[FormalX]", "]"}], "=", 
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", "result", "}"}], ",", "\n", "\t\t", 
               RowBox[{
                RowBox[{"result", "=", 
                 RowBox[{"FindEcoAttractor", "[", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"fixed", "/.", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], "}"}]}], 
                    "]"}], ",", "ics", ",", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "findecoattractoropts"}], "]"}],
                    ",", 
                   RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}],
                 ";", "\n", "\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{"printtrace", ",", 
                  RowBox[{"Print", "[", 
                   RowBox[{
                   "\"\<EcoAttractor (\>\"", ",", "trait1", ",", "\"\<=\>\"", 
                    ",", "\[FormalX]", ",", "\"\<): \>\"", ",", "result"}], 
                   "]"}]}], "]"}], ";", "\n", "\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"result", "\[Equal]", 
                   RowBox[{"{", "$Failed", "}"}]}], ",", 
                  RowBox[{"Message", "[", 
                   RowBox[{
                    RowBox[{"PlotMIP", "::", "feafail"}], ",", "trait1", ",", 
                    "\[FormalX]"}], "]"}]}], "]"}], ";", "\n", "\t\t", 
                RowBox[{"Return", "[", "result", "]"}], ";"}]}], "\n", "\t", 
              "]"}]}]}], ";", "\n", "\t", 
           RowBox[{"delayinv", "=", "True"}], ";"}], "\n", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"PrintCall", "[", 
              RowBox[{
               RowBox[{"Global`sol1", "[", 
                RowBox[{
                 RowBox[{"(", "System`\[FormalX]", ")"}], "_"}], "]"}], "=", 
               RowBox[{"solin1", "/.", 
                RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}]}], "]"}]}], 
            "]"}], ";", "\n", "\t", 
           RowBox[{
            RowBox[{"sol1", "[", "\[FormalX]_", "]"}], "=", 
            RowBox[{"solin1", "/.", 
             RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}]}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: sol1[\[FormalX]]=\>\"", ",", 
               RowBox[{"sol1", "[", "\[FormalX]", "]"}]}], "]"}]}], "]"}]}]}],
          "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"trait1", "=!=", "trait2"}], ",", "\n", "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"solin2", "===", "\"\<FindEcoAttractor\>\""}], ",", "\n", 
            "\t\t", 
            RowBox[{
             RowBox[{"delayinv", "=", "True"}], ";", "\n", "\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"icsin", "\[Equal]", 
                RowBox[{"{", "}"}]}], ",", "\n", "\t\t\t", 
               RowBox[{"(*", " ", 
                RowBox[{
                "figure", " ", "out", " ", "number", " ", "of", " ", 
                 "species", " ", "in", " ", "guilds"}], " ", "*)"}], "\n", 
               "\t\t\t", 
               RowBox[{
                RowBox[{"SetNsp", "[", 
                 RowBox[{"Append", "[", 
                  RowBox[{"fixed", ",", 
                   RowBox[{"trait2", "\[Rule]", "trait2"}]}], "]"}], "]"}], 
                ";", "\n", "\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{"Global`debug", ",", 
                  RowBox[{"Print", "[", 
                   RowBox[{"func", ",", "\"\<: Nsp2=\>\"", ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Nsp", "[", "gu", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "]"}]}], 
                 "]"}], ";", "\n", "\t\t\t", 
                RowBox[{"ics", "=", "DefaultICs"}], ";", "\n", "\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{"verbose", ",", 
                  RowBox[{"Print", "[", 
                   RowBox[{"func", ",", "\"\<: ics=\>\"", ",", "ics"}], 
                   "]"}]}], "]"}], ";"}], "\n", "\t\t", ",", "\n", "\t\t\t", 
               RowBox[{"ics", "=", "icsin"}]}], "\n", "\t\t", "]"}], ";", 
             "\n", "\t\t", 
             RowBox[{"If", "[", 
              RowBox[{"verbose", ",", "\n", "\t\t\t", 
               RowBox[{"With", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"tr", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"fixed", "/.", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalX]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalX]"}], "}"}]}], 
                    "]"}]}], ",", 
                   RowBox[{"ics", "=", "ics"}], ",", 
                   RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "findecoattractoropts"}]}]}], 
                  "}"}], ",", "\n", "\t\t\t\t", 
                 RowBox[{"PrintCall", "[", 
                  RowBox[{
                   RowBox[{"Global`sol2", "[", 
                    RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}], "]"}], ":=", 
                   RowBox[{
                    RowBox[{"Global`sol2", "[", "System`\[FormalX]", "]"}], 
                    "=", 
                    RowBox[{"FindEcoAttractor", "[", 
                    RowBox[{"tr", ",", "ics", ",", "op"}], "]"}]}]}], "]"}]}],
                 "\n", "\t\t", "]"}]}], "]"}], ";", "\n", "\t\t", 
             RowBox[{
              RowBox[{"sol2", "[", 
               RowBox[{"\[FormalX]_", "?", "NumberQ"}], "]"}], ":=", 
              RowBox[{
               RowBox[{"sol2", "[", "\[FormalX]", "]"}], "=", 
               RowBox[{"Module", "[", 
                RowBox[{
                 RowBox[{"{", "result", "}"}], ",", "\n", "\t\t\t", 
                 RowBox[{
                  RowBox[{"result", "=", 
                   RowBox[{"FindEcoAttractor", "[", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"fixed", "/.", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalX]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalX]"}], "}"}]}], 
                    "]"}], ",", "ics", ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "findecoattractoropts"}], "]"}],
                     ",", 
                    RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], 
                    "]"}]}], ";", "\n", "\t\t\t", 
                  RowBox[{"If", "[", 
                   RowBox[{"printtrace", ",", 
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<EcoAttractor (\>\"", ",", "trait2", ",", "\"\<=\>\"",
                     ",", "\[FormalX]", ",", "\"\<): \>\"", ",", "result"}], 
                    "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"result", "\[Equal]", 
                    RowBox[{"{", "$Failed", "}"}]}], ",", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    RowBox[{"PlotMIP", "::", "feafail"}], ",", "trait2", ",", 
                    "\[FormalX]"}], "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                  RowBox[{"Return", "[", "result", "]"}], ";"}]}], "\n", 
                "\t\t", "]"}]}]}], ";"}], "\n", "\t", ",", "\n", "\t\t", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{"verbose", ",", 
               RowBox[{"PrintCall", "[", 
                RowBox[{
                 RowBox[{"Global`sol2", "[", 
                  RowBox[{
                   RowBox[{"(", "System`\[FormalX]", ")"}], "_"}], "]"}], "=", 
                 RowBox[{"solin2", "/.", 
                  RowBox[{"trait2", "\[Rule]", "\[FormalX]"}]}]}], "]"}]}], 
              "]"}], ";", "\n", "\t\t", 
             RowBox[{
              RowBox[{"sol2", "[", "\[FormalX]_", "]"}], "=", 
              RowBox[{"solin2", "/.", 
               RowBox[{"trait2", "\[Rule]", "\[FormalX]"}]}]}], ";", "\n", 
             "\t\t", 
             RowBox[{"If", "[", 
              RowBox[{"verbose", ",", 
               RowBox[{"Print", "[", 
                RowBox[{"func", ",", "\"\<: sol2[\[FormalX]]=\>\"", ",", 
                 RowBox[{"sol2", "[", "\[FormalX]", "]"}]}], "]"}]}], 
              "]"}]}]}], "\n", "\t", "]"}], "\n", ",", "\n", "\t", 
          RowBox[{
           RowBox[{
            RowBox[{"sol2", "[", "\[FormalX]_", "]"}], ":=", 
            RowBox[{"sol1", "[", "\[FormalX]", "]"}]}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{
              "func", ",", "\"\<: sol2[\[FormalX]]=sol1[\[FormalX]]\>\""}], 
              "]"}]}], "]"}]}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"define", " ", "inv21"}], " ", "&"}], " ", "inv12"}], " ", 
         "*)"}], "\n", 
        RowBox[{"If", "[", 
         RowBox[{"delayinv", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"tr", "=", 
                  RowBox[{"Append", "[", 
                   RowBox[{"fixed", ",", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}], "]"}]}], 
                 ",", 
                 RowBox[{"so", "=", 
                  RowBox[{"Global`sol1", "[", "\[FormalX]", "]"}]}], ",", 
                 RowBox[{"ti", "=", 
                  RowBox[{"Append", "[", 
                   RowBox[{"invfixed", ",", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu2", ",", "tr2"}], "]"}], ",", "0"}], "]"}], 
                    "\[Rule]", "\[FormalY]"}]}], "]"}]}], ",", 
                 RowBox[{"op", "=", 
                  RowBox[{"Sequence", "@@", "invopts"}]}], ",", 
                 RowBox[{"trinv", "=", 
                  RowBox[{"Subscript", "[", 
                   RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu2", ",", "tr2"}], "]"}], ",", "0"}], "]"}]}]}],
                 "}"}], ",", "\n", "\t\t\t", 
               RowBox[{"PrintCall", "[", 
                RowBox[{
                 RowBox[{"Global`inv21", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}], ",", 
                   RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}]}], "]"}], ":=", 
                 RowBox[{
                  RowBox[{"Global`inv21", "[", 
                   RowBox[{"System`\[FormalX]", ",", "System`\[FormalY]"}], 
                   "]"}], "=", 
                  RowBox[{"Inv", "[", 
                   RowBox[{"tr", ",", "so", ",", "ti", ",", "op"}], "]"}]}]}],
                 "]"}]}], "\n", "\t", "]"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{
            RowBox[{"inv21", "[", 
             RowBox[{
              RowBox[{"\[FormalX]_", "?", "NumberQ"}], ",", 
              RowBox[{"\[FormalY]_", "?", "NumberQ"}]}], "]"}], ":=", 
            RowBox[{
             RowBox[{"inv21", "[", 
              RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "=", 
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", "result", "}"}], ",", "\n", "\t\t", 
               RowBox[{
                RowBox[{"result", "=", 
                 RowBox[{"Inv", "[", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"{", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], "}"}]}], 
                    "]"}], ",", 
                   RowBox[{"sol1", "[", "\[FormalX]", "]"}], ",", 
                   RowBox[{"Append", "[", 
                    RowBox[{"invfixed", ",", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu2", ",", "tr2"}], "]"}], ",", "0"}], "]"}], 
                    "\[Rule]", "\[FormalY]"}]}], "]"}], ",", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}], ",", 
                   RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}],
                 ";", "\n", "\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{"printtrace", ",", 
                  RowBox[{"Print", "[", 
                   RowBox[{
                   "\"\<Inv (\>\"", ",", "trait2", ",", "\"\<=\>\"", ",", 
                    "\[FormalX]", ",", "\"\< \>\"", ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "0"}], "]"}], 
                    ",", "\"\<=\>\"", ",", "\[FormalY]", ",", "\"\<): \>\"", 
                    ",", "result"}], "]"}]}], "]"}], ";", "\n", "\t\t", 
                RowBox[{"Return", "[", "result", "]"}]}]}], "\n", "\t", 
              "]"}]}]}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"trait1", "=!=", "trait2"}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", "\n", "\t\t\t", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"tr", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalX]"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"so", "=", 
                    RowBox[{"Global`sol2", "[", "\[FormalX]", "]"}]}], ",", 
                    RowBox[{"ti", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"invfixed", ",", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "0"}], "]"}], 
                    "\[Rule]", "\[FormalY]"}]}], "]"}]}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "invopts"}]}]}], "}"}], ",", 
                  "\n", "\t\t\t\t", 
                  RowBox[{"PrintCall", "[", 
                   RowBox[{
                    RowBox[{"Global`inv21", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}]}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"Global`inv21", "[", 
                    RowBox[{"System`\[FormalX]", ",", "System`\[FormalY]"}], 
                    "]"}], "=", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "so", ",", "ti", ",", "op"}], 
                    "]"}]}]}], "]"}]}], "\n", "\t\t", "]"}]}], "]"}], ";", 
              "\n", "\t\t", 
              RowBox[{
               RowBox[{"inv12", "[", 
                RowBox[{
                 RowBox[{"\[FormalX]_", "?", "NumberQ"}], ",", 
                 RowBox[{"\[FormalY]_", "?", "NumberQ"}]}], "]"}], ":=", 
               RowBox[{
                RowBox[{"inv12", "[", 
                 RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "=", 
                RowBox[{"Module", "[", 
                 RowBox[{
                  RowBox[{"{", "result", "}"}], ",", "\n", "\t\t\t", 
                  RowBox[{
                   RowBox[{"result", "=", 
                    RowBox[{"Inv", "[", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"{", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalX]"}], "}"}]}], 
                    "]"}], ",", 
                    RowBox[{"sol2", "[", "\[FormalX]", "]"}], ",", 
                    RowBox[{"Append", "[", 
                    RowBox[{"invfixed", ",", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "0"}], "]"}], 
                    "\[Rule]", "\[FormalY]"}]}], "]"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "invopts"}], "]"}], ",", 
                    RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], 
                    "]"}]}], ";", "\n", "\t\t\t", 
                   RowBox[{"If", "[", 
                    RowBox[{"printtrace", ",", 
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<Inv (\>\"", ",", "trait1", ",", "\"\<=\>\"", ",", 
                    "\[FormalX]", ",", "\"\< \>\"", ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu2", ",", "tr2"}], "]"}], ",", "0"}], "]"}], 
                    ",", "\"\<=\>\"", ",", "\[FormalY]", ",", "\"\<): \>\"", 
                    ",", "result"}], "]"}]}], "]"}], ";", "\n", "\t\t\t", 
                   RowBox[{"Return", "[", "result", "]"}]}]}], "\n", "\t\t", 
                 "]"}]}]}], ";"}], "\n", "\t", ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", 
                RowBox[{"PrintCall", "[", 
                 RowBox[{
                  RowBox[{"Global`inv12", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], "_"}], ",", 
                    RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], "_"}]}], "]"}], ":=", 
                  RowBox[{"Global`inv21", "[", 
                   RowBox[{"System`\[FormalX]", ",", "System`\[FormalY]"}], 
                   "]"}]}], "]"}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{
               RowBox[{"inv12", "[", 
                RowBox[{"\[FormalX]_", ",", "\[FormalY]_"}], "]"}], ":=", 
               RowBox[{"inv21", "[", 
                RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}]}]}], "\n", 
            "\t", "]"}]}], "\n", ",", "\n", "\t", 
          RowBox[{"(*", " ", 
           RowBox[{"nondelay", " ", "inv"}], " ", "*)"}], "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"tr", "=", 
                  RowBox[{"Append", "[", 
                   RowBox[{"fixed", ",", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}]}], "]"}]}], 
                 ",", 
                 RowBox[{"so", "=", 
                  RowBox[{"Global`sol1", "[", "\[FormalX]", "]"}]}], ",", 
                 RowBox[{"ti", "=", 
                  RowBox[{"Append", "[", 
                   RowBox[{"invfixed", ",", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu2", ",", "tr2"}], "]"}], ",", "0"}], "]"}], 
                    "\[Rule]", "\[FormalY]"}]}], "]"}]}], ",", 
                 RowBox[{"op", "=", 
                  RowBox[{"Sequence", "@@", "invopts"}]}]}], "}"}], ",", "\n",
                "\t\t\t", 
               RowBox[{"PrintCall", "[", 
                RowBox[{
                 RowBox[{"Global`inv21", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], "_"}], ",", 
                   RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], "_"}]}], "]"}], 
                 "=", 
                 RowBox[{"Inv", "[", 
                  RowBox[{"tr", ",", "so", ",", "ti", ",", "op"}], "]"}]}], 
                "]"}]}], "\n", "\t", "]"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{
            RowBox[{"inv21", "[", 
             RowBox[{"\[FormalX]_", ",", "\[FormalY]_"}], "]"}], "=", "\n", 
            "\t\t", 
            RowBox[{"Inv", "[", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{"fixed", ",", 
                RowBox[{"{", 
                 RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], "}"}]}], "]"}], 
              ",", 
              RowBox[{"sol1", "[", "\[FormalX]", "]"}], ",", 
              RowBox[{"Append", "[", 
               RowBox[{"invfixed", ",", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{
                   RowBox[{"trait", "[", 
                    RowBox[{"gu2", ",", "tr2"}], "]"}], ",", "0"}], "]"}], 
                 "\[Rule]", "\[FormalY]"}]}], "]"}], ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "invopts"}], "]"}], ",", 
              RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}], ";",
            "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"trait1", "=!=", "trait2"}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", "\n", "\t\t\t", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"tr", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalX]"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"so", "=", 
                    RowBox[{"Global`sol2", "[", "\[FormalX]", "]"}]}], ",", 
                    RowBox[{"ti", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"invfixed", ",", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "0"}], "]"}], 
                    "\[Rule]", "\[FormalY]"}]}], "]"}]}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "invopts"}]}]}], "}"}], ",", 
                  "\n", "\t\t\t\t", 
                  RowBox[{"PrintCall", "[", 
                   RowBox[{
                    RowBox[{"Global`inv12", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], "_"}], ",", 
                    RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], "_"}]}], "]"}], 
                    "=", 
                    RowBox[{"Inv", "[", 
                    RowBox[{"tr", ",", "so", ",", "ti", ",", "op"}], "]"}]}], 
                   "]"}]}], "\n", "\t\t", "]"}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{
               RowBox[{"inv12", "[", 
                RowBox[{"\[FormalX]_", ",", "\[FormalY]_"}], "]"}], "=", "\n",
                "\t\t\t", 
               RowBox[{"Inv", "[", 
                RowBox[{
                 RowBox[{"Join", "[", 
                  RowBox[{"fixed", ",", 
                   RowBox[{"{", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalX]"}], "}"}]}], 
                  "]"}], ",", 
                 RowBox[{"sol2", "[", "\[FormalX]", "]"}], ",", 
                 RowBox[{"Append", "[", 
                  RowBox[{"invfixed", ",", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "0"}], "]"}], 
                    "\[Rule]", "\[FormalY]"}]}], "]"}], ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"Sequence", "@@", "invopts"}], "]"}], ",", 
                 RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}]}],
              "\n", "\t", ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", 
                RowBox[{"PrintCall", "[", 
                 RowBox[{
                  RowBox[{"Global`inv12", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], "_"}], ",", 
                    RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], "_"}]}], "]"}], ":=", 
                  RowBox[{"Global`inv21", "[", 
                   RowBox[{"System`\[FormalX]", ",", "System`\[FormalY]"}], 
                   "]"}]}], "]"}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{
               RowBox[{"inv12", "[", 
                RowBox[{"\[FormalX]_", ",", "\[FormalY]_"}], "]"}], ":=", 
               RowBox[{"inv21", "[", 
                RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], ";", "\n",
               "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{
                 "func", ",", 
                  "\"\<: inv12[\[FormalX],\[FormalY]]=inv21[\[FormalX],\
\[FormalY]]\>\""}], "]"}]}], "]"}]}]}], "\n", "\t", "]"}]}]}], "\n", "]"}], 
        ";", "\n", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"monitor", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"nb", "=", 
            RowBox[{"CreateDialog", "[", 
             RowBox[{"DialogNotebook", "[", 
              RowBox[{
               RowBox[{"Grid", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"trait1", ",", "\"\<=\>\"", ",", 
                    RowBox[{"Dynamic", "[", "x", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"SubscriptAdd", "[", 
                    RowBox[{"trait2", ",", "1"}], "]"}], ",", "\"\<=\>\"", 
                    ",", 
                    RowBox[{"Dynamic", "[", "y", "]"}]}], "}"}]}], "}"}], 
                "]"}], ",", 
               RowBox[{
               "WindowTitle", "\[Rule]", "\"\<PlotMIP Progress...\>\""}]}], 
              "]"}], "]"}]}], ";"}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"plottype", "\[Equal]", "\"\<MIP\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"pip1", "=", 
            RowBox[{"ContourPlot", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"monx", ",", "mony"}], "}"}], "=", 
                 RowBox[{"{", 
                  RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "}"}]}], ";", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"inv21", "[", 
                  RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "]"}]}], 
               ")"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[FormalX]", ",", "trait1min", ",", "trait1max"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[FormalY]", ",", "trait2min", ",", "trait2max"}], 
               "}"}], ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", "\n", 
              "\t\t", 
              RowBox[{"Contours", "\[Rule]", 
               RowBox[{"{", "invthreshold", "}"}]}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"ColorFunction", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"#", ">", "invthreshold"}], ",", 
                   RowBox[{"Opacity", "[", "0", "]"}], ",", "noninvstyle"}], 
                  "]"}], "&"}], ")"}]}], ",", 
              RowBox[{"ContourShading", "\[Rule]", "True"}], ",", 
              RowBox[{"ContourStyle", "\[Rule]", "boundarystyle"}], ",", 
              RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]}],
            ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"trait1", "=!=", "trait2"}], ",", "\n", "\t\t", 
             RowBox[{"pip2", "=", 
              RowBox[{"ContourPlot", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"monx", ",", "mony"}], "}"}], "=", 
                   RowBox[{"{", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "}"}]}], ";", 
                  RowBox[{"Evaluate", "[", 
                   RowBox[{"inv12", "[", 
                    RowBox[{"\[FormalY]", ",", "\[FormalX]"}], "]"}], "]"}]}],
                  ")"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\[FormalX]", ",", "trait1min", ",", "trait1max"}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\[FormalY]", ",", "trait2min", ",", "trait2max"}], 
                 "}"}], ",", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", "\n", 
                "\t\t\t", 
                RowBox[{"Contours", "\[Rule]", 
                 RowBox[{"{", "invthreshold", "}"}]}], ",", 
                RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
                RowBox[{"ColorFunction", "\[Rule]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"#", ">", "invthreshold"}], ",", 
                    RowBox[{"Opacity", "[", "0", "]"}], ",", "noninvstyle"}], 
                    "]"}], "&"}], ")"}]}], ",", 
                RowBox[{"ContourShading", "\[Rule]", "True"}], ",", 
                RowBox[{"ContourStyle", "\[Rule]", "boundarystyle"}], ",", 
                RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], 
               "]"}]}], ",", "\n", "\t\t", 
             RowBox[{"pip2", "=", 
              RowBox[{"pip1", "//", "axisFlip"}]}]}], "\n", "\t", "]"}], ";", 
           "\n", "\t", 
           RowBox[{"res", "=", 
            RowBox[{"Show", "[", 
             RowBox[{
              RowBox[{"Graphics", "[", 
               RowBox[{"{", 
                RowBox[{"invstyle", ",", 
                 RowBox[{"Rectangle", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"trait1min", ",", "trait2min"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"trait1max", ",", "trait2max"}], "}"}]}], "]"}]}],
                 "}"}], "]"}], ",", "pip2", ",", "pip1", ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"FrameLabel", "\[Rule]", "framelabel"}], ",", "\n", 
              "\t\t", 
              RowBox[{"Method", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"\"\<TransparentPolygonMesh\>\"", "\[Rule]", "True"}],
                 "}"}]}], ",", 
              RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}]}], ",", "\n",
           "\t", 
          RowBox[{"plottype", "\[Equal]", "\"\<RegionMIP\>\""}], ",", "\n", 
          "\t", 
          RowBox[{"res", "=", 
           RowBox[{"RegionPlot", "[", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"inv12", "[", 
                  RowBox[{"\[FormalY]", ",", "\[FormalX]"}], "]"}], ">", 
                 "invthreshold"}], "&&", 
                RowBox[{
                 RowBox[{"inv21", "[", 
                  RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], ">", 
                 "invthreshold"}]}], ")"}], "]"}], ",", "\n", "\t\t", 
             RowBox[{"{", 
              RowBox[{"\[FormalX]", ",", "trait1min", ",", "trait1max"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[FormalY]", ",", "trait2min", ",", "trait2max"}], 
              "}"}], ",", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", "\n", 
             "\t\t", 
             RowBox[{"PlotStyle", "\[Rule]", "invstyle"}], ",", 
             RowBox[{"BoundaryStyle", "\[Rule]", "boundarystyle"}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", "framelabel"}]}], "]"}]}], ",", 
          "\n", "\t", 
          RowBox[{"plottype", "\[Equal]", "\"\<Outcome\>\""}], ",", "\n", 
          "\t", 
          RowBox[{
           RowBox[{"pip1", "=", 
            RowBox[{"ContourPlot", "[", 
             RowBox[{
              RowBox[{"Evaluate", "[", 
               RowBox[{"inv21", "[", 
                RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "]"}], ",", 
              
              RowBox[{"{", 
               RowBox[{"\[FormalX]", ",", "trait1min", ",", "trait1max"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[FormalY]", ",", "trait2min", ",", "trait2max"}], 
               "}"}], ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", "\n", 
              "\t\t", 
              RowBox[{"Contours", "\[Rule]", 
               RowBox[{"{", "invthreshold", "}"}]}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"ColorFunction", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Opacity", "[", 
                    RowBox[{"0.5", "#"}], "]"}], ",", 
                   RowBox[{
                   "spcolors", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "}"}], "&"}], ")"}]}], ",", 
              RowBox[{"ContourShading", "\[Rule]", "True"}], ",", 
              RowBox[{"ContourStyle", "\[Rule]", "boundarystyle"}], ",", 
              RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]}],
            ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"trait1", "=!=", "trait2"}], ",", "\n", "\t\t", 
             RowBox[{"pip2", "=", 
              RowBox[{"ContourPlot", "[", 
               RowBox[{
                RowBox[{"Evaluate", "[", 
                 RowBox[{"inv12", "[", 
                  RowBox[{"\[FormalY]", ",", "\[FormalX]"}], "]"}], "]"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"\[FormalX]", ",", "trait1min", ",", "trait1max"}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\[FormalY]", ",", "trait2min", ",", "trait2max"}], 
                 "}"}], ",", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", "\n", 
                "\t\t\t", 
                RowBox[{"Contours", "\[Rule]", 
                 RowBox[{"{", "invthreshold", "}"}]}], ",", 
                RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
                RowBox[{"ColorFunction", "\[Rule]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Opacity", "[", 
                    RowBox[{"0.5", "#"}], "]"}], ",", 
                    RowBox[{
                    "spcolors", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "}"}], "&"}], ")"}]}], ",", 
                RowBox[{"ContourShading", "\[Rule]", "True"}], ",", 
                RowBox[{"ContourStyle", "\[Rule]", "boundarystyle"}], ",", 
                RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], 
               "]"}]}], ",", "\n", "\t\t", 
             RowBox[{"pip2", "=", 
              RowBox[{
               RowBox[{"pip1", "/.", 
                RowBox[{
                 RowBox[{
                 "spcolors", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], "\[Rule]", 
                 RowBox[{
                 "spcolors", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}]}], "//", "axisFlip"}]}]}], "\n",
             "\t", "]"}], ";", "\n", "\t", 
           RowBox[{"res", "=", 
            RowBox[{"Show", "[", 
             RowBox[{
              RowBox[{"Graphics", "[", 
               RowBox[{"{", 
                RowBox[{"noninvstyle", ",", 
                 RowBox[{"Rectangle", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"trait1min", ",", "trait2min"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"trait1max", ",", "trait2max"}], "}"}]}], "]"}]}],
                 "}"}], "]"}], ",", "pip2", ",", "pip1", ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", "\n", 
              "\t\t", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"FrameLabel", "\[Rule]", "framelabel"}], ",", 
              RowBox[{"Method", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"\"\<TransparentPolygonMesh\>\"", "\[Rule]", "True"}],
                 "}"}]}], ",", 
              RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}]}], ",", "\n",
           "\t", 
          RowBox[{"plottype", "\[Equal]", "\"\<RegionOutcome\>\""}], ",", 
          "\n", "\t", 
          RowBox[{"res", "=", 
           RowBox[{"RegionPlot", "[", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"inv21", "[", 
                  RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], ">", 
                 "invthreshold"}], ",", 
                RowBox[{
                 RowBox[{"inv12", "[", 
                  RowBox[{"\[FormalY]", ",", "\[FormalX]"}], "]"}], ">", 
                 "invthreshold"}]}], "}"}], "]"}], "\n", "\t\t", ",", 
             RowBox[{"{", 
              RowBox[{"\[FormalX]", ",", "trait1min", ",", "trait1max"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[FormalY]", ",", "trait2min", ",", "trait2max"}], 
              "}"}], ",", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
             RowBox[{"BoundaryStyle", "\[Rule]", "boundarystyle"}], ",", "\n",
              "\t\t", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Directive", "[", 
                 RowBox[{
                  RowBox[{
                  "spcolors", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{"Opacity", "[", "0.4", "]"}]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                 RowBox[{
                  RowBox[{
                  "spcolors", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{"Opacity", "[", "0.4", "]"}]}], "]"}]}], "}"}]}], 
             ",", 
             RowBox[{"FrameLabel", "\[Rule]", "framelabel"}]}], "]"}]}], ",", 
          "\n", "\t", "Else", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"PlotMIP", "::", "badmtd"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "\n", "]"}], ";", 
        "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"monitor", ",", 
          RowBox[{"NotebookClose", "[", "nb", "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"Return", "[", "res", "]"}], ";"}]}], "\n", "\n", "]"}]}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.6885716933866453`*^9, 3.6885716954900103`*^9}, {
   3.688571768255013*^9, 3.688571768702099*^9}, {3.688571807478524*^9, 
   3.688571807527567*^9}, {3.689108864929371*^9, 3.6891088877553473`*^9}, {
   3.689109067165793*^9, 3.689109103846394*^9}, {3.689109225780719*^9, 
   3.6891092365762777`*^9}, {3.689109372777227*^9, 3.689109388280973*^9}, {
   3.6891098969356823`*^9, 3.689109904711069*^9}, {3.689110423535283*^9, 
   3.689110426688055*^9}, {3.689112728050819*^9, 3.689112820029348*^9}, {
   3.689115760819442*^9, 3.689115771852661*^9}, {3.68916407028465*^9, 
   3.6891640706684427`*^9}, {3.689174796096485*^9, 3.689174813285087*^9}, {
   3.6892505853280363`*^9, 3.689250596835215*^9}, {3.689250739454751*^9, 
   3.689250740415022*^9}, {3.6892510750231752`*^9, 3.6892510791011744`*^9}, {
   3.689251146280136*^9, 3.689251146617065*^9}, {3.689251187890675*^9, 
   3.689251189835361*^9}, {3.6892512796005917`*^9, 3.689251297036913*^9}, {
   3.689251557793955*^9, 3.689251595678959*^9}, {3.689254115830702*^9, 
   3.6892541304010677`*^9}, {3.6892543790821123`*^9, 3.689254395460404*^9}, {
   3.68925461279352*^9, 3.689254632571815*^9}, {3.6892548649600163`*^9, 
   3.68925486848878*^9}, 3.689255365170856*^9, {3.68925684173005*^9, 
   3.689256848305175*^9}, {3.6892596680652237`*^9, 3.689259669840993*^9}, {
   3.6892605876329107`*^9, 3.68926064190302*^9}, {3.689262351006629*^9, 
   3.6892623708529177`*^9}, {3.689262589730199*^9, 3.689262600070997*^9}, {
   3.68926282306246*^9, 3.689262863160821*^9}, {3.689262933109714*^9, 
   3.689262937460256*^9}, {3.689262968793339*^9, 3.6892629708609324`*^9}, {
   3.689263081059904*^9, 3.689263093487967*^9}, {3.689263231287607*^9, 
   3.689263239474536*^9}, {3.689263340002339*^9, 3.6892634925019712`*^9}, {
   3.689263567661331*^9, 3.6892636613351517`*^9}, {3.68926392367505*^9, 
   3.689263998296895*^9}, {3.689264082698454*^9, 3.689264101295733*^9}, {
   3.689264427879745*^9, 3.689264432478908*^9}, {3.689287584809477*^9, 
   3.689287598597302*^9}, {3.689289104256342*^9, 3.6892891466024933`*^9}, {
   3.689289279381825*^9, 3.689289284603778*^9}, {3.689289433604415*^9, 
   3.689289435905313*^9}, {3.6961621422447767`*^9, 3.696162142341611*^9}, {
   3.709336794995493*^9, 3.70933680008714*^9}, 3.7101059874771557`*^9, {
   3.7102563429606857`*^9, 3.710256356177361*^9}, 3.710256704275938*^9, {
   3.714059650310484*^9, 3.714059650324486*^9}, 3.722029512360681*^9, {
   3.7220341446661463`*^9, 3.722034147057419*^9}, {3.72208769094881*^9, 
   3.722087702104775*^9}, 3.725227953291498*^9, {3.725228049429574*^9, 
   3.725228050213643*^9}, {3.725228103282597*^9, 3.725228106403531*^9}, {
   3.725228285139535*^9, 3.7252282934837313`*^9}, {3.725228431597127*^9, 
   3.725228488140826*^9}, {3.725228537137508*^9, 3.725228648790201*^9}, {
   3.725228705239497*^9, 3.725228706184533*^9}, {3.725228752618957*^9, 
   3.725228756132215*^9}, {3.725228806249711*^9, 3.725228813207526*^9}, {
   3.72522884384645*^9, 3.7252288468122377`*^9}, {3.7252337164484987`*^9, 
   3.7252337221229677`*^9}, {3.726073703298306*^9, 3.7260737036099977`*^9}, {
   3.726263569093769*^9, 3.726263586867049*^9}, {3.726264163074222*^9, 
   3.7262641754998007`*^9}, {3.726264221061233*^9, 3.726264242669428*^9}, {
   3.726264291883553*^9, 3.726264373374934*^9}, {3.726264464947434*^9, 
   3.726264465538978*^9}, {3.7262645303737173`*^9, 3.72626456342595*^9}, 
   3.726264932181726*^9, 3.726264967863353*^9, {3.72626506182509*^9, 
   3.726265160544785*^9}, {3.726265200592173*^9, 3.72626520899517*^9}, {
   3.726265606711813*^9, 3.726265705260478*^9}, {3.726265762865673*^9, 
   3.7262658078065968`*^9}, {3.726265898644508*^9, 3.726265963313781*^9}, {
   3.726266000660214*^9, 3.726266013954027*^9}, {3.7262665269457417`*^9, 
   3.726266553723341*^9}, {3.726266601269389*^9, 3.7262666323167257`*^9}, 
   3.726767630180628*^9, {3.7267876805255404`*^9, 3.726787698809222*^9}, {
   3.726789151591621*^9, 3.726789156041108*^9}, {3.72678933179195*^9, 
   3.726789398971669*^9}, {3.726789491501684*^9, 3.726789578993129*^9}, {
   3.726789643983367*^9, 3.726789708190847*^9}, {3.726789765804487*^9, 
   3.726789777048833*^9}, {3.7267898603509283`*^9, 3.726789879894936*^9}, {
   3.726790845184514*^9, 3.7267908754720078`*^9}, {3.726790959292288*^9, 
   3.726790974289729*^9}, {3.726791343286654*^9, 3.7267913466046867`*^9}, {
   3.7267913871586533`*^9, 3.726791388024585*^9}, {3.7267914584349537`*^9, 
   3.7267915260061502`*^9}, {3.726792283902265*^9, 3.7267923558946047`*^9}, {
   3.72679519285644*^9, 3.7267952249249887`*^9}, {3.72682956302497*^9, 
   3.726829566733267*^9}, {3.726829968278304*^9, 3.726830009950225*^9}, {
   3.7268301038159323`*^9, 3.72683021406756*^9}, {3.72683111824752*^9, 
   3.726831122071056*^9}, {3.72683116900119*^9, 3.726831193000544*^9}, {
   3.7268359732236633`*^9, 3.726835979423461*^9}, {3.7268360095589657`*^9, 
   3.726836018126993*^9}, {3.726836497044421*^9, 3.726836562050408*^9}, {
   3.72683671822119*^9, 3.726836728897956*^9}, {3.726836949168681*^9, 
   3.7268369562227697`*^9}, {3.726836987223177*^9, 3.7268370686889267`*^9}, {
   3.726837892529642*^9, 3.7268379324567623`*^9}, {3.726838532439761*^9, 
   3.7268385555272913`*^9}, {3.726842987713771*^9, 3.7268430306547003`*^9}, {
   3.72684306096555*^9, 3.726843153975993*^9}, {3.726843217301482*^9, 
   3.726843239755755*^9}, {3.7268434148426533`*^9, 3.726843416350954*^9}, {
   3.726843447197056*^9, 3.726843462982477*^9}, {3.7268464814508457`*^9, 
   3.7268465515412483`*^9}, {3.72684659323842*^9, 3.726846596924529*^9}, {
   3.726846646148954*^9, 3.726846711114327*^9}, {3.726846754070498*^9, 
   3.726846766602809*^9}, {3.7268468299569273`*^9, 3.726846834161998*^9}, {
   3.726846911870566*^9, 3.726846913993132*^9}, {3.726847004546015*^9, 
   3.726847051046322*^9}, {3.726847083250733*^9, 3.726847112142735*^9}, {
   3.726847144737445*^9, 3.726847177101454*^9}, {3.7268473127555437`*^9, 
   3.7268473893203993`*^9}, {3.726847461478011*^9, 3.726847502516295*^9}, {
   3.726847571699216*^9, 3.7268475882250147`*^9}, 3.726847736661543*^9, {
   3.726849996981926*^9, 3.726850003605608*^9}, {3.726850094362369*^9, 
   3.726850130932761*^9}, 3.7268501613967047`*^9, {3.726850708427758*^9, 
   3.7268507372226887`*^9}, {3.726850805131547*^9, 3.726850809266405*^9}, {
   3.7279142262910633`*^9, 3.727914271311763*^9}, {3.72791438842607*^9, 
   3.7279144178855553`*^9}, {3.7279144526772623`*^9, 
   3.7279144765727463`*^9}, {3.727914521220087*^9, 3.72791452906993*^9}, {
   3.7279145704662*^9, 3.727914610753677*^9}, {3.727915018995318*^9, 
   3.7279150281911793`*^9}, {3.727915094284186*^9, 3.727915148190103*^9}, {
   3.727915820012789*^9, 3.727915821906177*^9}, {3.727960719337553*^9, 
   3.727960721962851*^9}, {3.727960754386673*^9, 3.7279607579590063`*^9}, {
   3.72796131820545*^9, 3.7279613373434153`*^9}, {3.727962049620715*^9, 
   3.7279620664617577`*^9}, {3.727962162427454*^9, 3.727962249684669*^9}, {
   3.727962519973853*^9, 3.727962526733266*^9}, {3.727962565613056*^9, 
   3.7279626497108803`*^9}, {3.727962723271372*^9, 3.727962730026843*^9}, {
   3.727962767134984*^9, 3.727962802949327*^9}, {3.727962837047858*^9, 
   3.727962852226585*^9}, {3.7279644671268044`*^9, 3.727964467666615*^9}, 
   3.7280042908357067`*^9, {3.728349077230582*^9, 3.728349088990423*^9}, {
   3.728349513031911*^9, 3.7283495411790113`*^9}, {3.728349614050013*^9, 
   3.7283496301908283`*^9}, {3.7283497564156322`*^9, 3.728349829685257*^9}, 
   3.728349891759902*^9, {3.728350100865735*^9, 3.728350103936035*^9}, 
   3.728350141052981*^9, 3.728398528467161*^9, {3.728400652795231*^9, 
   3.728400671885642*^9}, {3.728401635908023*^9, 3.728401650475312*^9}, {
   3.728401768481154*^9, 3.7284017708095903`*^9}, {3.728402497898736*^9, 
   3.728402505320373*^9}, {3.7284026235401278`*^9, 3.728402640756446*^9}, {
   3.7284031566569977`*^9, 3.7284031579672403`*^9}, {3.72840614012245*^9, 
   3.728406149783086*^9}, 3.728406218837463*^9, {3.728587969600932*^9, 
   3.728587997276472*^9}, {3.728588124100189*^9, 3.728588126135283*^9}, {
   3.728588181694511*^9, 3.728588255002432*^9}, {3.728588324771118*^9, 
   3.7285883273044357`*^9}, 3.728608813120144*^9, {3.729211210858699*^9, 
   3.729211212103812*^9}, {3.7292112801017437`*^9, 3.729211658104629*^9}, {
   3.729211771798024*^9, 3.729212011303164*^9}, {3.729212213040717*^9, 
   3.729212252717127*^9}, 3.729212336903223*^9, {3.7292124004540462`*^9, 
   3.729212411377716*^9}, {3.7292125975986977`*^9, 3.729212605187191*^9}, {
   3.7292126914073133`*^9, 3.72921271550357*^9}, {3.729212758088787*^9, 
   3.7292128387299213`*^9}, {3.729213229954556*^9, 3.729213233537624*^9}, {
   3.7292489476140833`*^9, 3.7292489772112722`*^9}, {3.7292490626888037`*^9, 
   3.729249071094327*^9}, {3.7292493895079803`*^9, 3.729249391131308*^9}, {
   3.729249424676077*^9, 3.729249441546273*^9}, {3.729250132495097*^9, 
   3.729250135277924*^9}, {3.729250216725103*^9, 3.729250219858034*^9}, {
   3.729250453299774*^9, 3.729250460426621*^9}, {3.729250491843782*^9, 
   3.729250507143826*^9}, {3.729251754722826*^9, 3.7292517556190367`*^9}, {
   3.729251821822692*^9, 3.729251854404668*^9}, {3.729251932729233*^9, 
   3.729251935979175*^9}, {3.729252009088285*^9, 3.729252024125621*^9}, {
   3.729252620334993*^9, 3.72925269427159*^9}, {3.729253133231224*^9, 
   3.729253135780006*^9}, {3.742816739608892*^9, 3.742816749379932*^9}, {
   3.7428168543770533`*^9, 3.7428168596393747`*^9}, {3.7428169213153152`*^9, 
   3.742816937705185*^9}, {3.742817233213128*^9, 3.74281726663688*^9}, {
   3.742817564135263*^9, 3.742817568318783*^9}, {3.755373510714422*^9, 
   3.755373512420537*^9}, 3.755395296233417*^9, 3.7553953368979597`*^9, {
   3.755395668623205*^9, 3.755395680217599*^9}, {3.7553957392914867`*^9, 
   3.755395746862495*^9}, {3.755395920750106*^9, 3.755395942176198*^9}, {
   3.755431303911272*^9, 3.755431334481452*^9}, {3.755431388228909*^9, 
   3.755431448507453*^9}, {3.755440585803598*^9, 3.7554406048397827`*^9}, {
   3.7554408133701973`*^9, 3.755440817129981*^9}, {3.755440881915003*^9, 
   3.755440883008457*^9}, {3.755440927612524*^9, 3.7554409504369993`*^9}, {
   3.755441013137809*^9, 3.7554410237735662`*^9}, {3.755442005619063*^9, 
   3.755442012045806*^9}, {3.755442200969708*^9, 3.755442244695324*^9}, {
   3.755442611650363*^9, 3.755442731251186*^9}, {3.755442943355843*^9, 
   3.7554429849716682`*^9}, {3.755443184409596*^9, 3.755443190920092*^9}, {
   3.755443242858095*^9, 3.755443253688854*^9}, {3.755443309940422*^9, 
   3.755443316082019*^9}, {3.755443453842243*^9, 
   3.755443453996133*^9}},ExpressionUUID->"de95846c-962c-4bdc-a4ce-\
20f6f61e3568"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotMIP", "[", 
    RowBox[{
     RowBox[{"solin1", ":", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"_", "?", "RuleListQ"}], "|", 
        RowBox[{"_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#", "\[Equal]", "\"\<FindEcoAttractor\>\""}], "&"}], 
          ")"}]}]}], ")"}], ":", "\"\<FindEcoAttractor\>\""}], ",", 
     RowBox[{"{", 
      RowBox[{"trait1_", ",", 
       RowBox[{"trait1min_", "?", "NumericQ"}], ",", 
       RowBox[{"trait1max_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"trait2_", ",", 
       RowBox[{"trait2min_", "?", "NumericQ"}], ",", 
       RowBox[{"trait2max_", "?", "NumericQ"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
   RowBox[{"(", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Print", "[", "1", "]"}], ";"}], "*)"}], 
    RowBox[{"PlotMIP", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"solin1", ",", "solin1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"trait2", ",", "trait2min", ",", "trait2max"}], "}"}], ",", 
      "opts"}], "]"}], ")"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7283488373608847`*^9, 3.728348856914741*^9}, {
   3.728349310813478*^9, 3.7283493191342287`*^9}, 3.728349640529908*^9, {
   3.7283498398315563`*^9, 3.7283498412749033`*^9}, 3.728401198530712*^9, {
   3.728402463933565*^9, 3.728402484737157*^9}, {3.728402547862425*^9, 
   3.7284025493296947`*^9}, {3.728402609434095*^9, 3.728402612590424*^9}, 
   3.728403174806364*^9},
 CellLabel->
  "In[582]:=",ExpressionUUID->"743c95d1-1551-4a5b-b52c-eed945de3bc7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotMIP", "[", 
    RowBox[{
     RowBox[{"solin1", ":", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"_", "?", "RuleListQ"}], "|", 
        RowBox[{"_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#", "\[Equal]", "\"\<FindEcoAttractor\>\""}], "&"}], 
          ")"}]}]}], ")"}], ":", "\"\<FindEcoAttractor\>\""}], ",", 
     RowBox[{"{", 
      RowBox[{"trait1_", ",", 
       RowBox[{"trait1min_", "?", "NumericQ"}], ",", 
       RowBox[{"trait1max_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
   RowBox[{"(", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Print", "[", "2", "]"}], ";"}], "*)"}], 
    RowBox[{"PlotMIP", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"solin1", ",", "solin1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
      "opts"}], "]"}], ")"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.696162142361945*^9, {3.728349322831129*^9, 3.728349327758924*^9}, {
   3.7283496430158863`*^9, 3.7283496453584747`*^9}, {3.7283498489313717`*^9, 
   3.7283498501271133`*^9}, 3.7284012028335857`*^9, {3.728402451616891*^9, 
   3.728402477905108*^9}, {3.728402604878128*^9, 3.7284026067699413`*^9}, 
   3.728403177982925*^9},
 CellLabel->
  "In[583]:=",ExpressionUUID->"b133be9d-1a23-4e59-9809-838bd001fe32"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotMIP", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"trait1_", ",", 
       RowBox[{"trait1min_", "?", "NumericQ"}], ",", 
       RowBox[{"trait1max_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"trait2_", ",", 
       RowBox[{"trait2min_", "?", "NumericQ"}], ",", 
       RowBox[{"trait2max_", "?", "NumericQ"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"(", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Print", "[", "3", "]"}], ";"}], "*)"}], 
    RowBox[{"PlotMIP", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<FindEcoAttractor\>\"", ",", "\"\<FindEcoAttractor\>\""}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"trait2", ",", "trait2min", ",", "trait2max"}], "}"}], ",", 
      "opts"}], "]"}], ")"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.696162142348516*^9, 3.696162142355567*^9}, {
   3.728349331359377*^9, 3.72834934210454*^9}, 3.728403181368765*^9},
 CellLabel->
  "In[584]:=",ExpressionUUID->"cc7e603e-8b37-43dc-9bec-96db8bb31df6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PlotMIP", "]"}], "=", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"PlotType", "\[Rule]", "\"\<MIP\>\""}], ",", 
     RowBox[{"DelayInv", "\[Rule]", "False"}], ",", 
     RowBox[{"FindEcoAttractorOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"InvOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"InvThreshold", "\[Rule]", "Automatic"}], ",", "\n", "\t", 
     RowBox[{"ICs", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"ZeroDiagonal", "\[Rule]", "False"}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", "\t", 
     RowBox[{"BoundaryStyle", "\[Rule]", "Black"}], ",", 
     RowBox[{"SpeciesColors", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
     RowBox[{"InvStyle", "\[Rule]", "Gray"}], ",", 
     RowBox[{"NonInvStyle", "\[Rule]", "White"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", "Automatic"}], ",", "\n", "\t", 
     RowBox[{"PlotOpts", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"MaxRecursion", "\[Rule]", "3"}], "}"}]}], ",", "\n", "\t", 
     RowBox[{"Monitor", "\[Rule]", "False"}], ",", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "\n", "}"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.688571695507079*^9, 3.688571695638255*^9}, 
   3.696162142371252*^9, {3.726789786538767*^9, 3.726789835979041*^9}, {
   3.7267910186945343`*^9, 3.726791034887575*^9}, {3.7267913992620792`*^9, 
   3.726791417319311*^9}, {3.726829435141608*^9, 3.7268294361262007`*^9}, {
   3.726829536793363*^9, 3.7268295519680033`*^9}, {3.726830224667082*^9, 
   3.72683027004139*^9}, {3.7268311018538094`*^9, 3.726831110545719*^9}, 
   3.7268311540766153`*^9, 3.726835906187023*^9, {3.72683602540897*^9, 
   3.726836029361315*^9}, {3.726843157848378*^9, 3.726843188538096*^9}, {
   3.726859850318842*^9, 3.726859854396954*^9}, {3.727915051203515*^9, 
   3.727915080583168*^9}, 3.727916087184874*^9, {3.727916327613612*^9, 
   3.727916328747652*^9}, {3.727918558973761*^9, 3.7279185635756607`*^9}, {
   3.7279622961462107`*^9, 3.727962300337476*^9}, {3.7292112433596497`*^9, 
   3.729211244486216*^9}, {3.729249447583323*^9, 3.729249452749723*^9}},
 CellLabel->
  "In[585]:=",ExpressionUUID->"3ff51124-5065-48c2-b8fc-7fc6eddc2c1d"]
}, Closed]],

Cell[CellGroupData[{

Cell["EvoEqns", "Subsection",
 CellDingbat->"\[LightBulb]",
 CellChangeTimes->{{3.73152621938536*^9, 3.731526222312989*^9}, {
   3.758817447780697*^9, 3.7588174534670773`*^9}, 
   3.758968398825428*^9},ExpressionUUID->"91164660-6832-410b-9a6e-\
7dc73876d9ef"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EvoEqns", "[", 
    RowBox[{
     RowBox[{"solin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Gs_List:", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", " ", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<EvoEqns\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "fixed", ",", "delaydinv", ",", "dinvopts", ",", 
       "evoeqn", ",", "traitshiftrate", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "fixedvars", 
       ",", "fixedtraits", ",", "fixedvariables", ",", "nonfixedtraits", ",", 
       "\n", "g", ",", "dtrait", ",", "pre", ",", "wt", ",", "sol", ",", 
       "eqns"}], "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "Nsp", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Msg", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", " ", 
              RowBox[{"Options", "[", "EvoEqns", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", " ", 
              RowBox[{"Options", "[", "EvoEqns", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"fixed", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Fixed", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEqns", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<fixed=\>\"", ",", "fixed"}], "]"}], ";"}], "*)"}], 
        "\n", 
        RowBox[{"fixedvars", "=", 
         RowBox[{"fixed", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: fixedvars=\>\"", ",", "fixedvars"}], 
           "]"}]}], "]"}], ";", "\n", 
        RowBox[{"fixedtraits", "=", 
         RowBox[{"ExtractTraits", "[", "fixed", "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<fixedtraits=\>\"", ",", "fixedtraits"}], "]"}], ";"}],
          "*)"}], "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{
           "func", ",", "\"\<: fixedtraits=\>\"", ",", "fixedtraits"}], 
           "]"}]}], "]"}], ";", "\n", 
        RowBox[{"fixedvariables", "=", 
         RowBox[{"ExtractVariables", "[", "fixed", "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{
           "func", ",", "\"\<: fixedvariables=\>\"", ",", "fixedvariables"}], 
           "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"delaydinv", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"DelayDInv", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEqns", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"dinvopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"DInvOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEqns", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelperiod", "=!=", "0"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"dinvopts", ",", 
            RowBox[{"InvOpts", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Method", "\[Rule]", "\"\<Instantaneous\>\""}], 
              "}"}]}]}], "]"}]}], "]"}], ";", "\n", 
        RowBox[{"evoeqn", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"EvoEquation", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEqns", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"traitshiftrate", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"TraitShiftRate", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEqns", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"sol", "=", 
         RowBox[{"ExpandNspInPops", "[", "solin", "]"}]}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"SetNsp", "[", 
         RowBox[{"Join", "[", 
          RowBox[{"sol", ",", "fixedvariables"}], "]"}], "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Nsp=\>\"", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Nsp", "[", "gu", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "]"}], ";"}], 
         "*)"}], "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"nonfixedtraits", "=", 
           RowBox[{"orderedComplement", "[", 
            RowBox[{"AllTraits", ",", "fixedvars"}], "]"}]}], ";", "\n", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<nonfixedtraits=\>\"", ",", "nonfixedtraits"}], "]"}], 
          ";"}], "*)"}], "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"shifting", " ", "traits"}], " ", "*)"}], "\n", 
        RowBox[{"Do", "[", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"dtrait", "[", 
            RowBox[{"gu", ",", "tr"}], "]"}], "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"traitshiftrate", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
               RowBox[{"trait", "[", 
                RowBox[{"gu", ",", "tr"}], "]"}]}], "]"}], ",", 
             RowBox[{
              RowBox[{"trait", "[", 
               RowBox[{"gu", ",", "tr"}], "]"}], "/.", "traitshiftrate"}], 
             ",", "0"}], "]"}]}], "\n", ",", 
          RowBox[{"{", 
           RowBox[{"gu", ",", "guilds"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"tr", ",", 
            RowBox[{"ntraits", "[", "gu", "]"}]}], "}"}]}], "]"}], ";", "\n", 
        
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: dtrait=\>\"", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"dtrait", "[", 
               RowBox[{"gu", ",", "tr"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"gu", ",", "guilds"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"tr", ",", 
                RowBox[{"ntraits", "[", "gu", "]"}]}], "}"}]}], "]"}]}], 
           "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"set", " ", "up", " ", "G", " ", "matrix"}], " ", "*)"}], 
        "\n", 
        RowBox[{"Do", "[", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"g", "[", "gu", "]"}], "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MatrixQ", "[", 
              RowBox[{
               RowBox[{"G", "[", "gu", "]"}], "/.", "Gs"}], "]"}], ",", "\n", 
             "\t\t", 
             RowBox[{
              RowBox[{"G", "[", "gu", "]"}], "/.", "Gs"}], ",", "\n", "\t\t", 
             
             RowBox[{"DiagonalMatrix", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"V", "[", 
                   RowBox[{"trait", "[", 
                    RowBox[{"gu", ",", "tr"}], "]"}], "]"}], "/.", "Gs"}], "/.", 
                 RowBox[{
                  RowBox[{"V", "[", 
                   RowBox[{"trait", "[", 
                    RowBox[{"gu", ",", "tr"}], "]"}], "]"}], "\[Rule]", 
                  "1"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"tr", ",", 
                  RowBox[{"ntraits", "[", "gu", "]"}]}], "}"}]}], "]"}], 
              "]"}]}], "\n", "\t", "]"}]}], "\n", ",", 
          RowBox[{"{", 
           RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ";", "\n", "\n", 
        "\n", 
        RowBox[{"(*", " ", "traiteqns", " ", "*)"}], "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"evoeqn", "\[Equal]", "\"\<QG\>\""}], ",", "\n", "\t", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"Do", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"pre", "[", 
                RowBox[{"gu", ",", "sp"}], "]"}], "=", "1"}], ",", 
              RowBox[{"{", 
               RowBox[{"sp", ",", "0", ",", 
                RowBox[{"Nsp", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", "\t", 
          RowBox[{"evoeqn", "\[Equal]", "\"\<CE\>\""}], ",", "\n", "\t", 
          RowBox[{"Do", "[", "\n", "\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"Do", "[", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"gcomptype", "[", 
                   RowBox[{"gu", ",", "gco"}], "]"}], "\[Equal]", 
                  "\"\<Extensive\>\""}], ",", 
                 RowBox[{
                  RowBox[{"wt", "[", 
                   RowBox[{"gu", ",", "gco"}], "]"}], "=", "1"}], ",", 
                 RowBox[{
                  RowBox[{"wt", "[", 
                   RowBox[{"gu", ",", "gco"}], "]"}], "=", "0"}]}], "]"}], 
               "\n", "\t\t", ",", 
               RowBox[{"{", 
                RowBox[{"gco", ",", 
                 RowBox[{"ngcomps", "[", "gu", "]"}]}], "}"}]}], "]"}], ";", 
             "\n", "\t\t", 
             RowBox[{"Do", "[", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"pre", "[", 
                 RowBox[{"gu", ",", "sp"}], "]"}], ":=", 
                RowBox[{"Sum", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"wt", "[", 
                    RowBox[{"gu", ",", "gco"}], "]"}], "*", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"gcomp", "[", 
                    RowBox[{"gu", ",", "gco"}], "]"}], ",", "sp"}], "]"}]}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"gco", ",", 
                    RowBox[{"ngcomps", "[", "gu", "]"}]}], "}"}]}], "]"}]}], 
               "\n", "\t\t", ",", 
               RowBox[{"{", 
                RowBox[{"sp", ",", "0", ",", 
                 RowBox[{"Nsp", "[", "gu", "]"}]}], "}"}]}], "]"}]}], "\n", 
            "\t", ",", 
            RowBox[{"{", 
             RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", "\t", 
          "Else", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Msg", "[", 
            RowBox[{"EvoEqns", "::", "badte"}], "]"}], ";", "\n", "\t", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "\n", "]"}], ";", 
        "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"delaydinv", "\[Equal]", "True"}], ",", "\n", "\t\t", 
          RowBox[{"eqns", "=", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Table", "[", "\n", "\t\t\t", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"DT", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu", ",", "tr"}], "]"}], ",", "sp"}], "]"}], 
                    "]"}], "\[Equal]", "\n", "\t\t\t", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"pre", "[", 
                    RowBox[{"gu", ",", "sp"}], "]"}], "*", 
                    RowBox[{"Sum", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"g", "[", "gu", "]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"tr", ",", "tr\[Prime]"}], 
                    "\[RightDoubleBracket]"}], 
                    RowBox[{"NumDInv", "[", 
                    RowBox[{"BlankTraits", ",", "sol", ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu", ",", "tr\[Prime]"}], "]"}], ",", "0"}], 
                    "]"}], ",", 
                    RowBox[{"Species", "\[Rule]", "sp"}], ",", 
                    RowBox[{"Method", "\[Rule]", "\"\<NDInv\>\""}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "dinvopts"}], "]"}], ",", 
                    RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], 
                    "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"tr\[Prime]", ",", 
                    RowBox[{"ntraits", "[", "gu", "]"}]}], "}"}]}], "]"}]}], 
                    "\n", "\t\t\t", "-", 
                    RowBox[{"dtrait", "[", 
                    RowBox[{"gu", ",", "tr"}], "]"}], "\n", "\t\t\t", "+", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}],
                     ",", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu", ",", "tr"}], "]"}], ",", "sp"}], "]"}], "[",
                     "t", "]"}], ",", "0"}], "]"}]}]}], "\n", "\t\t", ",", 
                   RowBox[{"{", 
                    RowBox[{"tr", ",", 
                    RowBox[{"ntraits", "[", "gu", "]"}]}], "}"}]}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"sp", ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Nsp", "[", "gu", "]"}], "\[Equal]", "0"}], ",", 
                    "0", ",", "1"}], "]"}], ",", 
                   RowBox[{"Nsp", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "]"}], "/.", 
            "fixed"}]}], "\n", "\t", ",", "\n", "\t\t", 
          RowBox[{"eqns", "=", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Table", "[", "\n", "\t\t\t", 
               RowBox[{
                RowBox[{"Thread", "[", 
                 RowBox[{
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"DT", "[", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu", ",", "tr"}], "]"}], ",", "sp"}], "]"}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"tr", ",", 
                    RowBox[{"ntraits", "[", "gu", "]"}]}], "}"}]}], "]"}], 
                  "\[Equal]", 
                  RowBox[{"(", "\n", "\t\t\t", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"pre", "[", 
                    RowBox[{"gu", ",", "sp"}], "]"}], "*", 
                    RowBox[{
                    RowBox[{"g", "[", "gu", "]"}], ".", 
                    RowBox[{"DInv", "[", 
                    RowBox[{"BlankTraits", ",", "sol", ",", 
                    RowBox[{"Guild", "\[Rule]", "gu"}], ",", 
                    RowBox[{"Species", "\[Rule]", "sp"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "dinvopts"}], "]"}], ",", 
                    RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], 
                    "]"}]}]}], "\n", "\t\t\t", "-", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"dtrait", "[", 
                    RowBox[{"gu", ",", "tr"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"tr", ",", 
                    RowBox[{"ntraits", "[", "gu", "]"}]}], "}"}]}], "]"}], 
                    "\n", "\t\t\t", "+", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}],
                     ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu", ",", "tr"}], "]"}], ",", "sp"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"tr", ",", 
                    RowBox[{"ntraits", "[", "gu", "]"}]}], "}"}]}], "]"}], 
                    ",", "0"}], "]"}]}], "\n", "\t\t\t", "/.", "fixed"}], "/.",
                     "AddPopts"}], "/.", "AddTraitts"}], ")"}]}], "]"}], "\n",
                 "\t\t\t", ",", 
                RowBox[{"{", 
                 RowBox[{"sp", ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Nsp", "[", "gu", "]"}], "\[Equal]", "0"}], ",", 
                    "0", ",", "1"}], "]"}], ",", 
                  RowBox[{"Nsp", "[", "gu", "]"}]}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "]"}]}]}], "\n",
          "]"}], ";", "\n", "\n", 
        RowBox[{"eqns", "=", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{"eqns", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"DT", "[", "var_", "]"}], "\[Equal]", "_"}], "/;", 
            RowBox[{"MemberQ", "[", 
             RowBox[{"fixedvars", ",", "var"}], "]"}]}]}], "]"}]}], ";", "\n",
         "\n", 
        RowBox[{"Return", "[", "eqns", "]"}], ";"}]}], "\n", "\n", "]"}]}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.688409487229787*^9, 3.688410346995085*^9, {3.6885717170330667`*^9, 
   3.688571717543687*^9}, {3.688571775992733*^9, 3.688571776526206*^9}, {
   3.708580358524328*^9, 3.708580367133918*^9}, {3.7085805480249043`*^9, 
   3.708580552957263*^9}, {3.7085806237121067`*^9, 3.708580626686872*^9}, {
   3.7085806780007763`*^9, 3.708580685238158*^9}, {3.7085807226718073`*^9, 
   3.708580746873554*^9}, {3.708580812359832*^9, 3.708580841174244*^9}, {
   3.708580891500785*^9, 3.7085809064428596`*^9}, {3.7085810138866577`*^9, 
   3.70858101422005*^9}, {3.708581073368642*^9, 3.7085811040418367`*^9}, 
   3.7085961658744917`*^9, {3.708597278922868*^9, 3.7085972893497257`*^9}, {
   3.7085974470844193`*^9, 3.7085974974750767`*^9}, {3.708597566711635*^9, 
   3.7085975691400623`*^9}, 3.70859847287843*^9, {3.7086008014413977`*^9, 
   3.70860080362284*^9}, {3.708600837011648*^9, 3.708600839412184*^9}, {
   3.708601266341401*^9, 3.708601269661209*^9}, 3.70860129992697*^9, {
   3.708601634890072*^9, 3.70860169233783*^9}, 3.708601823113695*^9, {
   3.709032277347278*^9, 3.709032330403159*^9}, {3.709032569839916*^9, 
   3.709032621848825*^9}, {3.709033236257003*^9, 3.709033236416822*^9}, {
   3.709111148485799*^9, 3.709111154948862*^9}, {3.70933682108967*^9, 
   3.7093368240934772`*^9}, {3.710105995940238*^9, 3.710105996866913*^9}, {
   3.7127385350462303`*^9, 3.712738535054513*^9}, {3.712740223862005*^9, 
   3.712740223881629*^9}, {3.722033875063723*^9, 3.722033876233472*^9}, {
   3.722034258139152*^9, 3.7220342674868317`*^9}, {3.7220880237571917`*^9, 
   3.722088034520193*^9}, {3.731104242637883*^9, 3.731104278635716*^9}, {
   3.731104997781638*^9, 3.7311050263398447`*^9}, {3.731105876328713*^9, 
   3.731105894099358*^9}, {3.731105938905416*^9, 3.7311059507337418`*^9}, {
   3.731108033278398*^9, 3.731108067757883*^9}, {3.73110814743054*^9, 
   3.7311081521616497`*^9}, {3.7311083849031143`*^9, 3.731108393536907*^9}, {
   3.7311085535965652`*^9, 3.731108606506817*^9}, {3.731108730301261*^9, 
   3.73110873176026*^9}, {3.731108836401286*^9, 3.731108836931473*^9}, 
   3.731108889598999*^9, {3.7311089328030252`*^9, 3.73110895392705*^9}, {
   3.731109330453732*^9, 3.7311093334391327`*^9}, {3.7311093876564302`*^9, 
   3.731109452845138*^9}, {3.731144600632256*^9, 3.731144603028613*^9}, {
   3.73114501783032*^9, 3.731145048660369*^9}, {3.731145080016384*^9, 
   3.7311450831048927`*^9}, {3.731145213309173*^9, 3.731145222493976*^9}, {
   3.731145276224111*^9, 3.73114528092452*^9}, {3.731231960738332*^9, 
   3.7312319650589457`*^9}, {3.731232409757909*^9, 3.731232414896275*^9}, {
   3.7312327649049053`*^9, 3.731232810799704*^9}, {3.7312332089023733`*^9, 
   3.731233223293242*^9}, {3.731233287350834*^9, 3.7312332926707697`*^9}, {
   3.731233329714402*^9, 3.731233340465416*^9}, {3.731233414893477*^9, 
   3.731233458364264*^9}, {3.731233514817432*^9, 3.731233514973345*^9}, {
   3.7312335639590197`*^9, 3.731233593700034*^9}, {3.731233891442408*^9, 
   3.731233900742066*^9}, {3.731234010457054*^9, 3.7312340124423933`*^9}, {
   3.731249212385839*^9, 3.731249237357728*^9}, {3.7312492800564404`*^9, 
   3.7312492941133204`*^9}, {3.731249339535811*^9, 3.731249365257427*^9}, {
   3.731251393536757*^9, 3.731251456459611*^9}, {3.731253719607267*^9, 
   3.731253721022493*^9}, {3.73125375298354*^9, 3.731253754446919*^9}, {
   3.7312538290833073`*^9, 3.731253858968158*^9}, {3.731254100893989*^9, 
   3.731254105593131*^9}, {3.731254275766021*^9, 3.731254316403315*^9}, 
   3.731254508019658*^9, {3.731254564464875*^9, 3.7312545655985937`*^9}, {
   3.7312549503901787`*^9, 3.731254995337842*^9}, {3.731255056378912*^9, 
   3.7312550890162373`*^9}, {3.73125606462327*^9, 3.731256078094046*^9}, {
   3.7312561377447968`*^9, 3.731256146461253*^9}, {3.731256445277829*^9, 
   3.731256453281808*^9}, {3.731257298224099*^9, 3.731257309872786*^9}, {
   3.731257381953423*^9, 3.7312574078388577`*^9}, {3.7312574385592833`*^9, 
   3.731257446831624*^9}, {3.731257653208837*^9, 3.731257671759345*^9}, 
   3.731257713869981*^9, {3.7312630604182034`*^9, 3.731263065150948*^9}, {
   3.731266600116169*^9, 3.7312666462739267`*^9}, {3.731266679355897*^9, 
   3.731266680348941*^9}, {3.731267651339802*^9, 3.731267657364622*^9}, {
   3.7312679781321507`*^9, 3.731268105278483*^9}, {3.731268288730389*^9, 
   3.731268461590226*^9}, {3.731272895231608*^9, 3.731272899930691*^9}, {
   3.73127296391442*^9, 3.731273007394515*^9}, {3.731273046390067*^9, 
   3.7312731187035503`*^9}, {3.73127317548923*^9, 3.731273187167938*^9}, {
   3.7312741636696253`*^9, 3.731274164109251*^9}, 3.7312744797645807`*^9, {
   3.7312794276717577`*^9, 3.731279538417981*^9}, {3.731279621426643*^9, 
   3.731279653438983*^9}, {3.731280286581835*^9, 3.731280291686035*^9}, {
   3.731280393880105*^9, 3.731280410573455*^9}, {3.7312805048047247`*^9, 
   3.7312805388927727`*^9}, {3.731280600180799*^9, 3.731280615960024*^9}, {
   3.731280714400795*^9, 3.731280732421489*^9}, {3.731280775846353*^9, 
   3.731280829597797*^9}, {3.731280885205934*^9, 3.731280907399735*^9}, 
   3.731280946540551*^9, {3.731281567826366*^9, 3.731281631156535*^9}, {
   3.731281766701133*^9, 3.73128176974076*^9}, {3.731281840776827*^9, 
   3.731281867616517*^9}, {3.731281924430279*^9, 3.731281981616087*^9}, {
   3.731282058372973*^9, 3.7312820731719227`*^9}, 3.731282127899729*^9, {
   3.7312821657357597`*^9, 3.731282199733157*^9}, {3.731282325140951*^9, 
   3.731282329520623*^9}, {3.731282531004629*^9, 3.73128253714888*^9}, {
   3.73128265219977*^9, 3.731282694634664*^9}, {3.731282757755281*^9, 
   3.73128286091042*^9}, {3.731283302413376*^9, 3.731283377599361*^9}, {
   3.731284106308639*^9, 3.73128413331852*^9}, {3.731284178545678*^9, 
   3.7312841891668463`*^9}, 3.731284345004175*^9, {3.731284876614265*^9, 
   3.7312849375262947`*^9}, {3.7314229872077713`*^9, 3.731422989210918*^9}, {
   3.731423022526702*^9, 3.7314230243049583`*^9}, {3.7314230727673197`*^9, 
   3.7314231396940203`*^9}, {3.7314231718643847`*^9, 
   3.7314231997101383`*^9}, {3.731423245448696*^9, 3.7314232596523867`*^9}, {
   3.73142458505212*^9, 3.7314245863224173`*^9}, {3.7314246915341682`*^9, 
   3.731424692922903*^9}, {3.731424762855925*^9, 3.731424897585847*^9}, {
   3.731425044363583*^9, 3.73142511736366*^9}, {3.7314252957475233`*^9, 
   3.731425308297345*^9}, {3.7314253901671057`*^9, 3.73142539474082*^9}, {
   3.7314254434704447`*^9, 3.731425445939843*^9}, 3.7314254798405733`*^9, {
   3.731425689136718*^9, 3.7314256982055273`*^9}, {3.7314257558883333`*^9, 
   3.73142576286087*^9}, {3.731426888927384*^9, 3.73142689723682*^9}, {
   3.731450833971335*^9, 3.7314508596380873`*^9}, {3.7314508970485907`*^9, 
   3.7314508974541407`*^9}, {3.731526238215742*^9, 3.731526391020026*^9}, {
   3.7315264280067453`*^9, 3.731526444549638*^9}, {3.7315264796032047`*^9, 
   3.7315264875601597`*^9}, {3.7315265773532352`*^9, 3.731526584842339*^9}, {
   3.7315269753569593`*^9, 3.731527112981538*^9}, {3.7315273280241528`*^9, 
   3.7315273288957787`*^9}, {3.731527421952361*^9, 3.731527423985589*^9}, {
   3.7315274546025047`*^9, 3.7315274691600447`*^9}, 3.731527795761732*^9, {
   3.731527837045167*^9, 3.73152785520822*^9}, {3.7315279067321377`*^9, 
   3.731527906934535*^9}, {3.731527955382228*^9, 3.7315279657321587`*^9}, {
   3.731528229260337*^9, 3.731528263567294*^9}, {3.731528336661065*^9, 
   3.7315283482782707`*^9}, {3.7315283855814447`*^9, 3.731528404854438*^9}, {
   3.731528635441764*^9, 3.731528676526634*^9}, {3.731528823745325*^9, 
   3.731528842515389*^9}, {3.73152900929154*^9, 3.731529038117703*^9}, {
   3.731529077393664*^9, 3.73152911714223*^9}, {3.731529150164506*^9, 
   3.731529204234757*^9}, {3.731539426412466*^9, 3.731539432160592*^9}, {
   3.731539613279729*^9, 3.7315396211117687`*^9}, {3.731539651269733*^9, 
   3.731539685459738*^9}, {3.731539852881021*^9, 3.731539861002081*^9}, {
   3.731588211549037*^9, 3.7315883001040497`*^9}, {3.7315883620692883`*^9, 
   3.73158836866451*^9}, {3.731588409442958*^9, 3.7315884637445793`*^9}, {
   3.731588614372117*^9, 3.7315886145385036`*^9}, {3.731588748544984*^9, 
   3.731588811828478*^9}, {3.731588862765547*^9, 3.7315888993158283`*^9}, {
   3.7316270619451103`*^9, 3.731627062295698*^9}, {3.7316283670345*^9, 
   3.731628406377172*^9}, {3.731629415454463*^9, 3.731629420463972*^9}, {
   3.73163164623908*^9, 3.731631649223393*^9}, {3.731631714006916*^9, 
   3.731631730110814*^9}, {3.731631778981337*^9, 3.731631808471527*^9}, {
   3.7316323319659777`*^9, 3.73163241623783*^9}, 3.73163247389112*^9, {
   3.731632706406403*^9, 3.731632712798625*^9}, {3.731632745228705*^9, 
   3.7316327455180597`*^9}, {3.732540750357403*^9, 3.732540753550756*^9}, {
   3.755373514956738*^9, 3.755373528055237*^9}, {3.758476922325924*^9, 
   3.7584769310481443`*^9}, 3.758480898539714*^9, {3.758480952122157*^9, 
   3.758480964414268*^9}, {3.758480999306613*^9, 3.758481003488456*^9}, {
   3.758481080137578*^9, 3.75848112082932*^9}, {3.7584811592338037`*^9, 
   3.758481168930447*^9}, {3.75853599399649*^9, 3.758535997516572*^9}, {
   3.7585378134246187`*^9, 3.7585378137859383`*^9}, {3.758538324231449*^9, 
   3.758538326481564*^9}, {3.758539114469524*^9, 3.75853911509159*^9}, {
   3.758539384369833*^9, 3.7585394240861187`*^9}, 3.758539810787362*^9, {
   3.7585400825053577`*^9, 3.75854008779704*^9}, {3.758540434681367*^9, 
   3.7585404580082273`*^9}, {3.75854182131308*^9, 3.7585418222765017`*^9}, {
   3.758543707723405*^9, 3.7585437078582563`*^9}, {3.758543902462965*^9, 
   3.758543905747511*^9}, {3.758544107351111*^9, 3.758544112516015*^9}, {
   3.758544215713832*^9, 3.758544219920192*^9}, {3.758556573922331*^9, 
   3.758556598034581*^9}, {3.7585567948158703`*^9, 3.758556820994747*^9}, {
   3.7585656945356073`*^9, 3.7585656953799143`*^9}, {3.7585662403983088`*^9, 
   3.758566291068665*^9}, {3.7585663228948383`*^9, 3.758566510718236*^9}, {
   3.758566679928555*^9, 3.758566684216365*^9}, {3.758566715147884*^9, 
   3.758566720776121*^9}, {3.758566757326034*^9, 3.7585667834913483`*^9}, {
   3.758566826911749*^9, 3.758566829341107*^9}, {3.7586049880876493`*^9, 
   3.758604994378345*^9}, {3.758605113384948*^9, 3.758605118160839*^9}, 
   3.7586051615273237`*^9, {3.7586052290309553`*^9, 3.7586052335751143`*^9}, {
   3.758653737004799*^9, 3.758653738672613*^9}, {3.75882296793782*^9, 
   3.7588229922899027`*^9}, 3.758823072625307*^9, {3.758823210236087*^9, 
   3.7588232530246687`*^9}, {3.7588235552118883`*^9, 
   3.7588235591418543`*^9}, {3.758960368732027*^9, 3.758960416449155*^9}, {
   3.758961412390896*^9, 3.758961429232112*^9}, {3.758961495363811*^9, 
   3.758961521787612*^9}, {3.758963740526894*^9, 3.75896378197176*^9}, {
   3.758964157836873*^9, 3.758964167698135*^9}, {3.758964427481781*^9, 
   3.758964462498947*^9}, {3.758964682364627*^9, 3.758964707461729*^9}, {
   3.7589651551662207`*^9, 3.7589652152805157`*^9}, 3.759060850192254*^9, {
   3.759061395150028*^9, 3.75906139566131*^9}, {3.759073721601737*^9, 
   3.759073810921527*^9}, {3.759122149327434*^9, 3.759122149529971*^9}, {
   3.7591297791050463`*^9, 3.759129788765335*^9}, {3.7591300408257513`*^9, 
   3.759130055184474*^9}, {3.759130107057115*^9, 
   3.759130107695546*^9}},ExpressionUUID->"8c7b7079-c31b-45b5-834d-\
e38d28dc3286"],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.70858110896756*^9, 
  3.708581109870212*^9}},ExpressionUUID->"a806768f-ff76-47a1-aba6-\
629149705eac"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "EvoEqns", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"DelayDInv", "\[Rule]", "False"}], ",", 
     RowBox[{"DInvOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"EvoEquation", "\[Rule]", "\"\<QG\>\""}], ",", 
     RowBox[{"TraitShiftRate", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.708581113938579*^9, 3.708581142353598*^9}, {
   3.70903292191361*^9, 3.709032932809966*^9}, {3.709033139894442*^9, 
   3.709033140962489*^9}, {3.731110719735405*^9, 3.731110726950795*^9}, {
   3.7312334667724953`*^9, 3.731233476102783*^9}, {3.731527271653007*^9, 
   3.731527292586875*^9}, {3.7315274335415583`*^9, 3.731527433988908*^9}, 
   3.731527655420206*^9},
 CellLabel->
  "In[587]:=",ExpressionUUID->"d6b56ab5-fedd-4366-a538-aa0acb6aa5e8"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["PlotEvoStreams", "Subsection",
 CellDingbat->
  "\[ClubSuit]",ExpressionUUID->"a5c013da-0877-4ef3-b375-184a577db55d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotEvoStreams", "[", 
    RowBox[{
     RowBox[{"solin", ":", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"_", "?", "RuleListQ"}], "|", 
        RowBox[{"_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#", "\[Equal]", "\"\<FindEcoAttractor\>\""}], "&"}], 
          ")"}]}]}], ")"}], ":", "\"\<FindEcoAttractor\>\""}], ",", 
     RowBox[{"Gs_List:", 
      RowBox[{"{", "}"}]}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"trait1_", ",", 
       RowBox[{"trait1min_", "?", "NumericQ"}], ",", 
       RowBox[{"trait1max_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"trait2_", ",", 
       RowBox[{"trait2min_", "?", "NumericQ"}], ",", 
       RowBox[{"trait2max_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<PlotEvoStreams\>\"", "]"}]}], ",", 
       "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "monitor", ",", "printtrace", ",", "fixed", ",", 
       "time", ",", "\n", "evoeqn", ",", "fitnessgradient", ",", "dinvopts", 
       ",", "ecoattractoropts", ",", "streamplotopts", ",", "framelabel", ",",
        "ics", ",", "ecoattnumber", ",", "usesymmetry", ",", "zerodiagonal", 
       ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "nb", ",", 
       "x", ",", "y", ",", "\n", "g", ",", "sol", ",", "fg1", ",", "fg2", ",",
        "gu1", ",", "tr1", ",", "sp1", ",", "gu2", ",", "tr2", ",", "sp2", 
       ",", "pre1", ",", "pre2", ",", "res"}], "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "Nsp", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Msg", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"monitor", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Monitor", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"printtrace", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PrintTrace", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"fixed", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Fixed", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"time", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Time", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"evoeqn", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"EvoEquation", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"fitnessgradient", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"FitnessGradient", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"ecoattractoropts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"FindEcoAttractorOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"dinvopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"DInvOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"streamplotopts", "=", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"FrameLabel", "\[Rule]", "framelabel"}], ",", "opts", 
              ",", 
              RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "}"}], "]"}],
            ",", 
           RowBox[{"Options", "[", "StreamPlot", "]"}]}], "]"}]}], ";", "\n", 
        
        RowBox[{"framelabel", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"FrameLabel", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"ics", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"ICs", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"ecoattnumber", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"EcoAttractorNumber", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"usesymmetry", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"UseSymmetry", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{"zerodiagonal", ",", 
            RowBox[{
             RowBox[{"fg1", "[", 
              RowBox[{"x1_", ",", "x1_"}], "]"}], "=", 
             RowBox[{
              RowBox[{"fg2", "[", 
               RowBox[{"x1_", ",", "x1_"}], "]"}], "=", "0"}]}]}], "]"}], 
          ";"}], "*)"}], "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "figure", " ", "out", " ", "what", " ", "are", " ", "the", " ", 
           "traits", " ", "on", " ", "the", " ", "x"}], "-", " ", 
          RowBox[{"and", " ", "y"}], "-", "axes"}], " ", "*)"}], "\n", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"gu1", ",", "tr1", ",", "sp1"}], "}"}], "=", 
         RowBox[{
          RowBox[{"LookUp", "[", "trait1", "]"}], "\[LeftDoubleBracket]", 
          RowBox[{"2", ";;", "4"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"gu2", ",", "tr2", ",", "sp2"}], "}"}], "=", 
         RowBox[{
          RowBox[{"LookUp", "[", "trait2", "]"}], "\[LeftDoubleBracket]", 
          RowBox[{"2", ";;", "4"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"framelabel", "===", "Automatic"}], ",", "\n", "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"trait2", "===", "trait1"}], ",", "\n", "\t\t", 
            RowBox[{"framelabel", "=", 
             RowBox[{"{", 
              RowBox[{"trait1", ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{
                 RowBox[{"trait", "[", 
                  RowBox[{"gu1", ",", "tr1"}], "]"}], ",", 
                 RowBox[{"sp1", "+", "1"}]}], "]"}]}], "}"}]}], ",", "\n", 
            "\t\t", 
            RowBox[{"framelabel", "=", 
             RowBox[{"{", 
              RowBox[{"trait1", ",", "trait2"}], "}"}]}]}], "\n", "\t", 
           "]"}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"set", " ", "up", " ", "G", " ", "matrices"}], " ", "*)"}], 
        "\n", "\n", 
        RowBox[{"Do", "[", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"g", "[", "gu", "]"}], "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MatrixQ", "[", 
              RowBox[{
               RowBox[{"G", "[", "gu", "]"}], "/.", "Gs"}], "]"}], ",", "\n", 
             "\t\t", 
             RowBox[{
              RowBox[{"G", "[", "gu", "]"}], "/.", "Gs"}], ",", "\n", "\t\t", 
             
             RowBox[{"DiagonalMatrix", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"NumberQ", "[", 
                   RowBox[{
                    RowBox[{"V", "[", 
                    RowBox[{"trait", "[", 
                    RowBox[{"gu", ",", "tr"}], "]"}], "]"}], "/.", "Gs"}], 
                   "]"}], ",", 
                  RowBox[{
                   RowBox[{"V", "[", 
                    RowBox[{"trait", "[", 
                    RowBox[{"gu", ",", "tr"}], "]"}], "]"}], "/.", "Gs"}], 
                  ",", "1"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"tr", ",", 
                  RowBox[{"ntraits", "[", "gu", "]"}]}], "}"}]}], "]"}], 
              "]"}]}], "\n", "\t", "]"}]}], "\n", ",", 
          RowBox[{"{", 
           RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"set", " ", "up", " ", "sol"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"solin", "===", "\"\<FindEcoAttractor\>\""}], ",", "\n", 
          "\t", 
          RowBox[{
           RowBox[{"fitnessgradient", "=", "\"\<NDInv\>\""}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"ics", "\[Equal]", 
              RowBox[{"{", "}"}]}], ",", "\n", "\t\t", 
             RowBox[{"(*", " ", 
              RowBox[{
              "figure", " ", "out", " ", "number", " ", "of", " ", "species", 
               " ", "in", " ", "guilds"}], " ", "*)"}], "\n", "\t\t", 
             RowBox[{
              RowBox[{"SetNsp", "[", 
               RowBox[{"Join", "[", 
                RowBox[{"fixed", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"trait1", "\[Rule]", "trait1"}], ",", 
                   RowBox[{"trait2", "\[Rule]", "trait2"}]}], "}"}]}], "]"}], 
               "]"}], ";", "\n", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{"Global`debug", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{"func", ",", "\"\<: Nsp=\>\"", ",", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"Nsp", "[", "gu", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "]"}]}], 
               "]"}], ";", "\n", "\t\t", 
              RowBox[{"ics", "=", "DefaultICs"}], ";"}]}], "\n", "\t", "]"}], 
           ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"tr", "=", 
                  RowBox[{"Join", "[", 
                   RowBox[{"fixed", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
                   "]"}]}], ",", 
                 RowBox[{"ics", "=", "ics"}], ",", 
                 RowBox[{"time", "=", "time"}], ",", 
                 RowBox[{"op", "=", 
                  RowBox[{"Sequence", "@@", "findecoattractoropts"}]}]}], 
                "}"}], ",", "\n", "\t\t\t", 
               RowBox[{"PrintCall", "[", 
                RowBox[{
                 RowBox[{"Global`sol", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}], ",", 
                   RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}]}], "]"}], ":=", 
                 RowBox[{
                  RowBox[{"Global`sol", "[", 
                   RowBox[{"System`\[FormalX]", ",", "System`\[FormalY]"}], 
                   "]"}], "=", "\n", "\t\t\t", 
                  RowBox[{"FindEcoAttractor", "[", 
                   RowBox[{"tr", ",", "ics", ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", "op"}], 
                   "]"}]}]}], "]"}]}], "]"}]}], "\n", "\t", "]"}], ";", "\n", 
           "\t", 
           RowBox[{
            RowBox[{"sol", "[", 
             RowBox[{
              RowBox[{"\[FormalX]_", "?", "NumberQ"}], ",", 
              RowBox[{"\[FormalY]_", "?", "NumberQ"}]}], "]"}], ":=", 
            RowBox[{
             RowBox[{"sol", "[", 
              RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "=", "\n", 
             "\t\t", 
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", "result", "}"}], ",", "\n", "\t\t\t", 
               RowBox[{
                RowBox[{"result", "=", 
                 RowBox[{"FindEcoAttractor", "[", 
                  RowBox[{
                   RowBox[{"Join", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
                    "]"}], ",", "ics", ",", 
                   RowBox[{"Time", "\[Rule]", "time"}], ",", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "ecoattractoropts"}], "]"}], 
                   ",", 
                   RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}],
                 ";", "\n", "\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{"printtrace", ",", 
                  RowBox[{"Print", "[", 
                   RowBox[{"\"\<FindEcoAttractor \>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}], 
                    ",", "\"\<=\>\"", ",", "result"}], "]"}]}], "]"}], ";", 
                "\n", "\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"ArrayDepth", "[", "result", "]"}], "<", "2"}], 
                  ",", 
                  RowBox[{"Return", "[", "result", "]"}], ",", 
                  RowBox[{"Return", "[", 
                   RowBox[{
                   "result", "\[LeftDoubleBracket]", "ecoattnumber", 
                    "\[RightDoubleBracket]"}], "]"}]}], "]"}]}]}], "\n", 
              "\t\t", "]"}]}]}], ";"}], "\n", ",", " ", 
          RowBox[{"(*", " ", 
           RowBox[{"sol", " ", "given"}], " ", "*)"}], "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"PrintCall", "[", 
              RowBox[{
               RowBox[{"Global`sol", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", "System`\[FormalX]", ")"}], "_"}], ",", 
                 RowBox[{
                  RowBox[{"(", "System`\[FormalY]", ")"}], "_"}]}], "]"}], 
               "=", 
               RowBox[{"solin", "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                  RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}]}], 
              "]"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{
            RowBox[{"sol", "[", 
             RowBox[{"\[FormalX]_", ",", "\[FormalY]_"}], "]"}], "=", 
            RowBox[{"solin", "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
               RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}]}], ";", 
           "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{
              "func", ",", "\"\<: sol[\[FormalX],\[FormalY]]=\>\"", ",", 
               RowBox[{"sol", "[", 
                RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], "]"}]}], 
            "]"}]}]}], "\n", "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"set", " ", "up", " ", "fitness", " ", "gradients"}], " ", 
         "*)"}], "\n", "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"fitnessgradient", "\[Equal]", "\"\<NDInv\>\""}], "\n", ",",
           "\n", "\t", 
          RowBox[{"(*", " ", 
           RowBox[{"memoization", " ", "seems", " ", "ineffective"}], " ", 
           "*)"}], "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"tr", "=", 
                  RowBox[{"Join", "[", 
                   RowBox[{"fixed", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
                   "]"}]}], ",", 
                 RowBox[{"so", "=", 
                  RowBox[{"sol", "[", 
                   RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], ",", 
                 RowBox[{"trinv", "=", 
                  RowBox[{"Subscript", "[", 
                   RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "0"}], "]"}]}], 
                 ",", 
                 RowBox[{"sp", "=", "sp1"}], ",", 
                 RowBox[{"time", "=", "time"}], ",", 
                 RowBox[{"op", "=", 
                  RowBox[{"Sequence", "@@", "dinvopts"}]}]}], "}"}], ",", 
               "\n", "\t\t\t", 
               RowBox[{"PrintCall", "[", 
                RowBox[{
                 RowBox[{"Global`fg1", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}], ",", 
                   RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}]}], "]"}], ":=", 
                 RowBox[{"DInv", "[", 
                  RowBox[{"tr", ",", "so", ",", "trinv", ",", 
                   RowBox[{"Species", "\[Rule]", "sp"}], ",", 
                   RowBox[{"Method", "\[Rule]", "\"\<NDInv\>\""}], ",", 
                   RowBox[{"Time", "\[Rule]", "time"}], ",", "op"}], "]"}]}], 
                "]"}]}], "]"}]}], "\n", "\t", "]"}], ";", "\t", "\n", "\t", 
           RowBox[{
            RowBox[{"fg1", "[", 
             RowBox[{
              RowBox[{"\[FormalX]_", "?", "NumberQ"}], ",", 
              RowBox[{"\[FormalY]_", "?", "NumberQ"}]}], "]"}], ":=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"fg1", "[", 
                 RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "="}], 
               "*)"}], 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", "dinv", "}"}], ",", "\n", "\t\t", 
                RowBox[{
                 RowBox[{"dinv", "=", 
                  RowBox[{"DInv", "[", 
                   RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
                    "]"}], ",", 
                    RowBox[{"sol", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "0"}], "]"}], 
                    ",", 
                    RowBox[{"Species", "\[Rule]", "sp1"}], ",", "\n", 
                    "\t\t\t", 
                    RowBox[{"Method", "\[Rule]", "\"\<NDInv\>\""}], ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "dinvopts"}], "]"}], ",", 
                    RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], 
                   "]"}]}], ";", "\n", "\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"printtrace", ",", 
                   RowBox[{"Print", "[", 
                    RowBox[{"\"\<fg1 \>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}], 
                    ",", "\"\<=\>\"", ",", "dinv"}], "]"}]}], "]"}], ";", 
                 "\n", "\t\t", 
                 RowBox[{"Return", "[", "dinv", "]"}]}]}], "\n", "\t", "]"}], 
              ")"}], "/;", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
               "trait1min", "\[LessEqual]", "\[FormalX]", "\[LessEqual]", 
                "trait1max"}], "&&", 
               RowBox[{
               "trait2min", "\[LessEqual]", "\[FormalY]", "\[LessEqual]", 
                "trait2max"}], "&&", 
               RowBox[{"\[FormalX]", "\[NotEqual]", "\[FormalY]"}]}], 
              ")"}]}]}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"usesymmetry", "&&", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"gu1", ",", "tr1"}], "}"}], "===", 
               RowBox[{"{", 
                RowBox[{"gu2", ",", "tr2"}], "}"}]}]}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"fg2", "[", 
                RowBox[{"\[FormalX]_", ",", "\[FormalY]_"}], "]"}], ":=", 
               RowBox[{"fg1", "[", 
                RowBox[{"\[FormalY]", ",", "\[FormalX]"}], "]"}]}], ";", "\n",
               "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{
                 "func", ",", 
                  "\"\<: fg2[\[FormalX]_,\[FormalY]_]:=fg1[\[FormalY],\
\[FormalX]]\>\""}], "]"}]}], "]"}], ";"}], "\n", "\t", ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", "\n", "\t\t\t", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"tr", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
                    "]"}]}], ",", 
                    RowBox[{"so", "=", 
                    RowBox[{"sol", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], ",", 
                    RowBox[{"trinv", "=", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu2", ",", "tr2"}], "]"}], ",", "0"}], "]"}]}], 
                    ",", 
                    RowBox[{"sp", "=", "sp2"}], ",", 
                    RowBox[{"time", "=", "time"}], ",", 
                    RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "dinvopts"}]}]}], "}"}], ",", 
                  "\n", "\t\t\t\t", 
                  RowBox[{"PrintCall", "[", 
                   RowBox[{
                    RowBox[{"Global`fg2", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}]}], "]"}], ":=", 
                    RowBox[{"DInv", "[", 
                    RowBox[{"tr", ",", "so", ",", "trinv", ",", 
                    RowBox[{"Species", "\[Rule]", "sp"}], ",", 
                    RowBox[{"Method", "\[Rule]", "\"\<NDInv\>\""}], ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", "op"}], "]"}]}],
                    "]"}]}], "]"}]}], "\n", "\t\t", "]"}], ";", "\t", "\n", 
              "\t\t", 
              RowBox[{
               RowBox[{"fg2", "[", 
                RowBox[{
                 RowBox[{"\[FormalX]_", "?", "NumberQ"}], ",", 
                 RowBox[{"\[FormalY]_", "?", "NumberQ"}]}], "]"}], ":=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"fg2", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "="}], 
                  "*)"}], 
                 RowBox[{"Module", "[", 
                  RowBox[{
                   RowBox[{"{", "dinv", "}"}], ",", "\n", "\t\t\t", 
                   RowBox[{
                    RowBox[{"dinv", "=", 
                    RowBox[{"DInv", "[", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
                    "]"}], ",", 
                    RowBox[{"sol", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu2", ",", "tr2"}], "]"}], ",", "0"}], "]"}], 
                    ",", 
                    RowBox[{"Species", "\[Rule]", "sp2"}], ",", "\n", 
                    "\t\t\t\t", 
                    RowBox[{"Method", "\[Rule]", "\"\<NDInv\>\""}], ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "dinvopts"}], "]"}], ",", 
                    RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], 
                    "]"}]}], ";", "\n", "\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{"printtrace", ",", 
                    RowBox[{"Print", "[", 
                    RowBox[{"\"\<fg2 \>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}], 
                    ",", "\"\<=\>\"", ",", "dinv"}], "]"}]}], "]"}], ";", 
                    "\t", "\n", "\t\t\t", 
                    RowBox[{"Return", "[", "dinv", "]"}]}]}], "\n", "\t\t", 
                  "]"}], ")"}], "/;", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                  "trait1min", "\[LessEqual]", "\[FormalX]", "\[LessEqual]", 
                   "trait1max"}], "&&", 
                  RowBox[{
                  "trait2min", "\[LessEqual]", "\[FormalY]", "\[LessEqual]", 
                   "trait2max"}], "&&", 
                  RowBox[{"\[FormalX]", "\[NotEqual]", "\[FormalY]"}]}], 
                 ")"}]}]}]}]}], "\n", "\t", "]"}]}], "\n", ",", "\n", "\t", 
          RowBox[{"fitnessgradient", "\[Equal]", "\"\<DInv\>\""}], "\n", ",", 
          "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"tr", "=", 
                  RowBox[{"Join", "[", 
                   RowBox[{"fixed", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
                   "]"}]}], ",", 
                 RowBox[{"so", "=", 
                  RowBox[{"sol", "[", 
                   RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], ",", 
                 RowBox[{"trinv", "=", 
                  RowBox[{"Subscript", "[", 
                   RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "0"}], "]"}]}], 
                 ",", 
                 RowBox[{"sp", "=", "sp1"}], ",", 
                 RowBox[{"time", "=", "time"}], ",", 
                 RowBox[{"op", "=", 
                  RowBox[{"Sequence", "@@", "dinvopts"}]}]}], "}"}], ",", 
               "\n", "\t\t\t", 
               RowBox[{"PrintCall", "[", 
                RowBox[{
                 RowBox[{"Global`fg1", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], "_"}], ",", 
                   RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], "_"}]}], "]"}], 
                 "=", 
                 RowBox[{"DInv", "[", 
                  RowBox[{"tr", ",", "so", ",", "trinv", ",", 
                   RowBox[{"Species", "\[Rule]", "sp"}], ",", 
                   RowBox[{"Time", "\[Rule]", "time"}], ",", "op"}], "]"}]}], 
                "]"}]}], "]"}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
           RowBox[{
            RowBox[{"fg1", "[", 
             RowBox[{"\[FormalX]_", ",", "\[FormalY]_"}], "]"}], "=", 
            RowBox[{"DInv", "[", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{"fixed", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                  RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
               "]"}], ",", 
              RowBox[{"sol", "[", 
               RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], ",", 
              RowBox[{"Subscript", "[", 
               RowBox[{
                RowBox[{"trait", "[", 
                 RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "0"}], "]"}], ",", 
              RowBox[{"Species", "\[Rule]", "sp1"}], ",", "\n", "\t\t", 
              RowBox[{"Time", "\[Rule]", "time"}], ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "dinvopts"}], "]"}], ",", 
              RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}], ";",
            "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{
              "func", ",", "\"\<: fg1[\[FormalX],\[FormalY]]=\>\"", ",", 
               RowBox[{"fg1", "[", 
                RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], "]"}]}], 
            "]"}], ";", "\n", "\t", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"tr", "=", 
                  RowBox[{"Join", "[", 
                   RowBox[{"fixed", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
                   "]"}]}], ",", 
                 RowBox[{"so", "=", 
                  RowBox[{"sol", "[", 
                   RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], ",", 
                 RowBox[{"trinv", "=", 
                  RowBox[{"Subscript", "[", 
                   RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu2", ",", "tr2"}], "]"}], ",", "0"}], "]"}]}], 
                 ",", 
                 RowBox[{"sp", "=", "sp2"}], ",", 
                 RowBox[{"time", "=", "time"}], ",", 
                 RowBox[{"op", "=", 
                  RowBox[{"Sequence", "@@", "dinvopts"}]}]}], "}"}], ",", 
               "\n", "\t\t\t", 
               RowBox[{"PrintCall", "[", 
                RowBox[{
                 RowBox[{"Global`fg2", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], "_"}], ",", 
                   RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], "_"}]}], "]"}], 
                 "=", 
                 RowBox[{"DInv", "[", 
                  RowBox[{"tr", ",", "so", ",", "trinv", ",", 
                   RowBox[{"Species", "\[Rule]", "sp"}], ",", 
                   RowBox[{"Time", "\[Rule]", "time"}], ",", "op"}], "]"}]}], 
                "]"}]}], "]"}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
           RowBox[{
            RowBox[{"fg2", "[", 
             RowBox[{"\[FormalX]_", ",", "\[FormalY]_"}], "]"}], "=", 
            RowBox[{"DInv", "[", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{"fixed", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                  RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
               "]"}], ",", 
              RowBox[{"sol", "[", 
               RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], ",", 
              RowBox[{"Subscript", "[", 
               RowBox[{
                RowBox[{"trait", "[", 
                 RowBox[{"gu2", ",", "tr2"}], "]"}], ",", "0"}], "]"}], ",", 
              RowBox[{"Species", "\[Rule]", "sp2"}], ",", "\n", "\t\t", 
              RowBox[{"Time", "\[Rule]", "time"}], ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "dinvopts"}], "]"}], ",", 
              RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}], ";",
            "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{
              "func", ",", "\"\<: fg2[\[FormalX],\[FormalY]]=\>\"", ",", 
               RowBox[{"fg2", "[", 
                RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], "]"}]}], 
            "]"}], ";"}], "\n", ",", "\n", "\t", "Else", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Msg", "[", 
            RowBox[{"PlotEvoStreams", "::", "badfg"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}], ";"}]}], "\n", "]"}], ";",
         "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<fg1[-0.99,-0.98]=\>\"", ",", 
            RowBox[{"fg1", "[", 
             RowBox[{
              RowBox[{"-", "0.99"}], ",", 
              RowBox[{"-", "0.98"}]}], "]"}]}], "]"}], ";"}], "*)"}], "\n", 
        "\n", 
        RowBox[{"If", "[", 
         RowBox[{"monitor", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"nb", "=", 
            RowBox[{"CreateDialog", "[", 
             RowBox[{"DialogNotebook", "[", 
              RowBox[{
               RowBox[{"Grid", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"trait1", ",", "\"\<=\>\"", ",", 
                    RowBox[{"Dynamic", "[", "x", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"trait2", ",", "\"\<=\>\"", ",", 
                    RowBox[{"Dynamic", "[", "y", "]"}]}], "}"}]}], "}"}], 
                "]"}], ",", 
               RowBox[{
               "WindowTitle", "\[Rule]", 
                "\"\<PlotEvoStreams Progress...\>\""}]}], "]"}], "]"}]}], 
           ";"}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"evoeqn", "\[Equal]", "\"\<QG\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"pre1", "[", 
            RowBox[{"_", ",", "_"}], "]"}], "=", 
           RowBox[{
            RowBox[{"pre2", "[", 
             RowBox[{"_", ",", "_"}], "]"}], "=", "1"}]}], ",", "\n", "\t", 
          RowBox[{"evoeqn", "\[Equal]", "\"\<CE\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{
            RowBox[{"pre1", "[", 
             RowBox[{
              RowBox[{"\[FormalX]_", "?", "NumericQ"}], ",", 
              RowBox[{"\[FormalY]_", "?", "NumericQ"}]}], "]"}], ":=", "\n", 
            "\t\t", 
            RowBox[{
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"gcomptype", "[", 
                   RowBox[{"gu1", ",", "gco"}], "]"}], "\[Equal]", 
                  "\"\<Extensive\>\""}], ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"gcomp", "[", 
                    RowBox[{"gu1", ",", "gco"}], "]"}], ",", "sp1"}], "]"}], "/.", 
                    RowBox[{"sol", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], ",", 
                   "0"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"gco", ",", 
                 RowBox[{"ngcomps", "[", "gu1", "]"}]}], "}"}]}], "]"}], "/;", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
               "trait1min", "\[LessEqual]", "\[FormalX]", "\[LessEqual]", 
                "trait1max"}], "&&", 
               RowBox[{
               "trait2min", "\[LessEqual]", "\[FormalY]", "\[LessEqual]", 
                "trait2max"}]}], ")"}]}]}], ";", "\n", "\t", 
           RowBox[{
            RowBox[{"pre2", "[", 
             RowBox[{
              RowBox[{"\[FormalX]_", "?", "NumericQ"}], ",", 
              RowBox[{"\[FormalY]_", "?", "NumericQ"}]}], "]"}], ":=", "\n", 
            "\t\t", 
            RowBox[{
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"gcomptype", "[", 
                   RowBox[{"gu2", ",", "gco"}], "]"}], "\[Equal]", 
                  "\"\<Extensive\>\""}], ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"gcomp", "[", 
                    RowBox[{"gu2", ",", "gco"}], "]"}], ",", "sp2"}], "]"}], "/.", 
                    RowBox[{"sol", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], ",", 
                   "0"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"gco", ",", 
                 RowBox[{"ngcomps", "[", "gu2", "]"}]}], "}"}]}], "]"}], "/;", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
               "trait1min", "\[LessEqual]", "\[FormalX]", "\[LessEqual]", 
                "trait1max"}], "&&", 
               RowBox[{
               "trait2min", "\[LessEqual]", "\[FormalY]", "\[LessEqual]", 
                "trait2max"}]}], ")"}]}]}], ";"}]}], "\n", "]"}], ";", "\n", 
        "\n", 
        RowBox[{"res", "=", 
         RowBox[{"StreamPlot", "[", 
          RowBox[{
           RowBox[{"{", "\n", "\t", 
            RowBox[{
             RowBox[{
              RowBox[{"pre1", "[", 
               RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"g", "[", "gu1", "]"}], "\[LeftDoubleBracket]", 
                  RowBox[{"tr1", ",", "tr1"}], "\[RightDoubleBracket]"}], "*", 
                 RowBox[{"fg1", "[", 
                  RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], "+", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"gu1", "===", "gu2"}], "&&", 
                   RowBox[{"sp1", "\[Equal]", "sp2"}]}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"g", "[", "gu1", "]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"tr1", ",", "tr2"}], "\[RightDoubleBracket]"}], 
                   "*", 
                   RowBox[{"fg2", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], ",", 
                  "0"}], "]"}]}], ")"}]}], ",", "\n", "\t", 
             RowBox[{
              RowBox[{"pre2", "[", 
               RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"g", "[", "gu2", "]"}], "\[LeftDoubleBracket]", 
                  RowBox[{"tr2", ",", "tr2"}], "\[RightDoubleBracket]"}], "*", 
                 RowBox[{"fg2", "[", 
                  RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], "+", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"gu1", "===", "gu2"}], "&&", 
                   RowBox[{"sp1", "\[Equal]", "sp2"}]}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"g", "[", "gu2", "]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"tr1", ",", "tr2"}], "\[RightDoubleBracket]"}], 
                   "*", 
                   RowBox[{"fg1", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], ",", 
                  "0"}], "]"}]}], ")"}]}]}], "\n", "\t", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[FormalX]", ",", "trait1min", ",", "trait1max"}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"\[FormalY]", ",", "trait2min", ",", "trait2max"}], "}"}],
            ",", "\n", "\t", 
           RowBox[{"FrameLabel", "\[Rule]", "framelabel"}], ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"Sequence", "@@", "streamplotopts"}], "]"}]}], "]"}]}], 
        ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"monitor", ",", 
          RowBox[{"NotebookClose", "[", "nb", "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"Return", "[", "res", "]"}]}]}], "\n", "\n", "]"}]}], "]"}]}],
   ";"}]], "Code",
 CellChangeTimes->{
  3.687881459317306*^9, {3.68857169573272*^9, 3.688571699832582*^9}, {
   3.6885717687641973`*^9, 3.688571769815319*^9}, 3.688571807586783*^9, 
   3.6885856477291527`*^9, 3.689163998947294*^9, {3.689164089444407*^9, 
   3.689164107480112*^9}, {3.689164150393654*^9, 3.6891641625016527`*^9}, {
   3.6891642618456287`*^9, 3.6891642657560577`*^9}, {3.689164295974613*^9, 
   3.6891643404157333`*^9}, {3.689165062345914*^9, 3.6891650676351223`*^9}, {
   3.689174860486127*^9, 3.6891749178296947`*^9}, {3.689175257388966*^9, 
   3.6891752612883*^9}, {3.6892508042449627`*^9, 3.689250805276569*^9}, 
   3.689289445215261*^9, {3.6893692244211807`*^9, 3.6893692257056293`*^9}, {
   3.689375022610702*^9, 3.6893750419442797`*^9}, {3.689375397179755*^9, 
   3.689375398883882*^9}, 3.689376025533429*^9, {3.689376128139348*^9, 
   3.689376132689744*^9}, {3.6894557279945917`*^9, 3.6894558121801167`*^9}, 
   3.689455994177116*^9, {3.689544626356333*^9, 3.6895446319276876`*^9}, {
   3.689545239772163*^9, 3.689545263327778*^9}, {3.689546235391755*^9, 
   3.6895463352347517`*^9}, {3.6895469903923492`*^9, 
   3.6895470092246313`*^9}, {3.689547798817854*^9, 3.68954780087283*^9}, 
   3.689548920146737*^9, {3.6895499344106073`*^9, 3.689549950128428*^9}, {
   3.689550005890862*^9, 3.689550040118186*^9}, {3.689593464288136*^9, 
   3.6895935337479877`*^9}, {3.6895937933595448`*^9, 
   3.6895937956725187`*^9}, {3.689594141556076*^9, 3.689594142024276*^9}, {
   3.689594293335135*^9, 3.689594293664414*^9}, {3.689594446213599*^9, 
   3.689594446559062*^9}, 3.68959521157778*^9, {3.689595714743671*^9, 
   3.6895957183002377`*^9}, {3.689596709066866*^9, 3.689596727278599*^9}, {
   3.68959686228653*^9, 3.6895968652359123`*^9}, 3.6895970476903143`*^9, {
   3.6895981248991957`*^9, 3.689598137481123*^9}, 3.693593252202392*^9, {
   3.696162142396586*^9, 3.696162142454583*^9}, {3.696807902858117*^9, 
   3.696807917254232*^9}, {3.6968458180709667`*^9, 3.6968458220878983`*^9}, {
   3.696845912496077*^9, 3.6968459125081997`*^9}, {3.696846136982375*^9, 
   3.696846147850618*^9}, {3.696846572472251*^9, 3.696846575661442*^9}, {
   3.6968494913338013`*^9, 3.6968495064847193`*^9}, {3.696849731116643*^9, 
   3.696849738476735*^9}, {3.696849771380685*^9, 3.696849844686883*^9}, {
   3.696851561694058*^9, 3.696851571532259*^9}, {3.696851634199065*^9, 
   3.69685166000632*^9}, {3.696851709856124*^9, 3.696851732854135*^9}, {
   3.696851811809413*^9, 3.696851817647911*^9}, {3.69685272836476*^9, 
   3.6968527508462143`*^9}, {3.696853104071148*^9, 3.6968531513939457`*^9}, {
   3.696853658802146*^9, 3.6968537712826977`*^9}, {3.696853858699686*^9, 
   3.696853859154291*^9}, {3.696854253205824*^9, 3.696854268136705*^9}, {
   3.696870969601756*^9, 3.696871078263034*^9}, {3.696871185578061*^9, 
   3.696871205861805*^9}, {3.696871765844288*^9, 3.6968717712332363`*^9}, {
   3.696872416727644*^9, 3.6968724254329367`*^9}, {3.6968725135523033`*^9, 
   3.696872605983871*^9}, {3.6968727009601917`*^9, 3.696872725738758*^9}, {
   3.696872779594302*^9, 3.6968727908815393`*^9}, {3.696872865571706*^9, 
   3.696872869434085*^9}, {3.696874802623783*^9, 3.696874803796487*^9}, {
   3.696874953547793*^9, 3.696874978971532*^9}, {3.696875009655814*^9, 
   3.6968750326565228`*^9}, {3.696875063689205*^9, 3.6968750930709248`*^9}, 
   3.696875604986285*^9, {3.696875939007553*^9, 3.696875941201187*^9}, {
   3.6968760327696323`*^9, 3.6968760344775877`*^9}, {3.696876064615561*^9, 
   3.696876264188733*^9}, {3.696876356639462*^9, 3.6968764223815737`*^9}, 
   3.6968765244760523`*^9, {3.696876601007773*^9, 3.696876653297557*^9}, 
   3.696877038185253*^9, {3.699568322895866*^9, 3.699568346240407*^9}, {
   3.699571079030094*^9, 3.699571164836667*^9}, {3.6995714612017517`*^9, 
   3.699571465282988*^9}, {3.699571584406988*^9, 3.699571587199932*^9}, {
   3.699656092842185*^9, 3.699656156213704*^9}, {3.699656309483521*^9, 
   3.699656328710538*^9}, {3.699656615974526*^9, 3.699656649834816*^9}, {
   3.699656738523004*^9, 3.699656746287939*^9}, 3.699657491028714*^9, {
   3.6996575210770884`*^9, 3.6996575953200617`*^9}, {3.699657668163952*^9, 
   3.6996577365357637`*^9}, {3.699698329584014*^9, 3.699698333266828*^9}, {
   3.699704648253603*^9, 3.699704660465187*^9}, {3.699704733752638*^9, 
   3.699704747504199*^9}, {3.699718987616672*^9, 3.699718995463883*^9}, {
   3.6997223655205717`*^9, 3.699722365839596*^9}, {3.699722565755423*^9, 
   3.699722566059581*^9}, {3.7093368018236103`*^9, 3.709336803927597*^9}, {
   3.7101059882053947`*^9, 3.7101059888757563`*^9}, {3.7103244209318438`*^9, 
   3.7103244214598494`*^9}, 3.714059650380908*^9, 3.722029518287676*^9, {
   3.7220341508376713`*^9, 3.722034157151712*^9}, {3.722087728678488*^9, 
   3.7220877308896914`*^9}, {3.724166206374755*^9, 3.7241662081853857`*^9}, {
   3.724166253192452*^9, 3.724166255110552*^9}, {3.7280038512996473`*^9, 
   3.728003892367958*^9}, {3.728004307267541*^9, 3.7280043843331614`*^9}, {
   3.72800442325176*^9, 3.72800445337316*^9}, {3.728005083322426*^9, 
   3.72800510478011*^9}, {3.728005365177932*^9, 3.728005370878291*^9}, 
   3.728005453343403*^9, 3.728005489643017*^9, 3.7280055383555717`*^9, {
   3.728005587948308*^9, 3.728005592450006*^9}, {3.7280056474420233`*^9, 
   3.728005653212592*^9}, {3.72800583433388*^9, 3.728005852450213*^9}, 
   3.728006018148295*^9, {3.7280060591539173`*^9, 3.7280060622801113`*^9}, {
   3.7280061988404703`*^9, 3.7280062091355553`*^9}, {3.7280063678893347`*^9, 
   3.728006386987178*^9}, 3.72800657435277*^9, {3.728043139034319*^9, 
   3.728043163883629*^9}, {3.7280433346091022`*^9, 3.728043439209814*^9}, {
   3.728044197245846*^9, 3.7280442115447206`*^9}, {3.728044366863206*^9, 
   3.728044395005888*^9}, {3.728044630746955*^9, 3.7280446321754417`*^9}, {
   3.7280447440339108`*^9, 3.7280447560414553`*^9}, {3.728046200453339*^9, 
   3.728046201335771*^9}, {3.7280462618338003`*^9, 3.7280462924171743`*^9}, {
   3.728046529125313*^9, 3.728046572740513*^9}, {3.728046622023882*^9, 
   3.728046670845047*^9}, {3.728046748929489*^9, 3.728046798792678*^9}, 
   3.728047172635357*^9, {3.728052307371161*^9, 3.72805233621113*^9}, {
   3.728053024167614*^9, 3.728053025394663*^9}, {3.728053164725761*^9, 
   3.728053247104084*^9}, {3.728053287424868*^9, 3.728053317287438*^9}, {
   3.728053363936467*^9, 3.7280533648438253`*^9}, {3.728053783600178*^9, 
   3.728053802302272*^9}, {3.728055347004487*^9, 3.7280553507058563`*^9}, 
   3.7280556106527243`*^9, 3.7280560117048893`*^9, {3.728056440668682*^9, 
   3.728056453216343*^9}, {3.728056622462805*^9, 3.728056679442842*^9}, {
   3.7280573942361403`*^9, 3.728057431037519*^9}, {3.7280597222304*^9, 
   3.728059756695836*^9}, {3.728061315426276*^9, 3.728061316279722*^9}, {
   3.728061348678566*^9, 3.728061615928583*^9}, {3.728061671630785*^9, 
   3.7280617108092947`*^9}, {3.728061750432296*^9, 3.728061752624672*^9}, {
   3.728061794649104*^9, 3.7280618128799543`*^9}, {3.728061859766144*^9, 
   3.728061876822887*^9}, {3.728061985699325*^9, 3.728062006794723*^9}, {
   3.728062040913762*^9, 3.728062171025558*^9}, {3.72806221823498*^9, 
   3.728062218846109*^9}, 3.728062253934822*^9, {3.728062318851809*^9, 
   3.7280623878928823`*^9}, {3.7280625565482273`*^9, 3.728062572651226*^9}, {
   3.728062655076017*^9, 3.7280626554112463`*^9}, {3.7280639778241577`*^9, 
   3.728064004599683*^9}, {3.728089467207551*^9, 3.728089533878951*^9}, {
   3.728089697539517*^9, 3.728089751462469*^9}, 3.728089781965806*^9, {
   3.728090053507224*^9, 3.7280900844582767`*^9}, 3.728090122734415*^9, {
   3.728090331978689*^9, 3.7280903556324787`*^9}, {3.728092246771682*^9, 
   3.7280922613167343`*^9}, {3.728092302221819*^9, 3.728092330314117*^9}, {
   3.728093028380219*^9, 3.728093062164055*^9}, {3.728093102708228*^9, 
   3.728093106916766*^9}, {3.728404848714548*^9, 3.728404855872374*^9}, {
   3.728477819373911*^9, 3.728477820920945*^9}, {3.72883255779204*^9, 
   3.72883255848701*^9}, {3.729253872578898*^9, 3.729253929034142*^9}, {
   3.729254313421723*^9, 3.729254319892911*^9}, {3.729254356923203*^9, 
   3.72925437827731*^9}, {3.72925462412607*^9, 3.729254673844474*^9}, {
   3.729254712343627*^9, 3.72925471645168*^9}, {3.729254919933516*^9, 
   3.729254936208942*^9}, {3.7292552791769123`*^9, 3.729255296645142*^9}, {
   3.729255462984294*^9, 3.7292555198134604`*^9}, {3.729255676050005*^9, 
   3.7292556891370173`*^9}, {3.729256068021099*^9, 3.729256107921653*^9}, {
   3.7292561781473827`*^9, 3.729256323887013*^9}, {3.729256706678145*^9, 
   3.7292567082243853`*^9}, {3.729256948467464*^9, 3.729256992798711*^9}, {
   3.729257063798205*^9, 3.729257073875396*^9}, {3.729257459464819*^9, 
   3.729257473965167*^9}, {3.729257504969715*^9, 3.7292575360482616`*^9}, {
   3.729257606088381*^9, 3.729257630961657*^9}, {3.729257874465569*^9, 
   3.729257930110083*^9}, {3.729257989259652*^9, 3.7292579904668627`*^9}, {
   3.729258332228009*^9, 3.729258382594795*^9}, {3.729258445059969*^9, 
   3.7292584914356117`*^9}, 3.729260937534729*^9, {3.7292820771716022`*^9, 
   3.7292821252018023`*^9}, {3.7292822695662317`*^9, 
   3.7292822756691513`*^9}, {3.729286229041431*^9, 3.729286282005651*^9}, {
   3.729286360552631*^9, 3.729286437805565*^9}, {3.729292070148237*^9, 
   3.729292157523655*^9}, {3.7292921875247393`*^9, 3.729292266851425*^9}, {
   3.729292322389534*^9, 3.7292923610446253`*^9}, {3.729299328198251*^9, 
   3.729299331572461*^9}, {3.7553735296489887`*^9, 3.755373531763218*^9}, {
   3.755449224412355*^9, 3.755449239273074*^9}, 3.755449289324705*^9, {
   3.755449327978368*^9, 3.755449330144649*^9}, {3.7554493725936728`*^9, 
   3.755449386770793*^9}, {3.75544944697408*^9, 3.755449475389791*^9}, {
   3.7554496601192513`*^9, 3.755449668015806*^9}, {3.75544978262493*^9, 
   3.755449788419014*^9}, {3.755449991554192*^9, 3.755449997637231*^9}, {
   3.75545010745433*^9, 
   3.7554501208422937`*^9}},ExpressionUUID->"7cd84c58-a414-4710-99b5-\
dfe1fc0751c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotEvoStreams", "[", 
   RowBox[{
    RowBox[{"solin1", ":", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"_", "?", "RuleListQ"}], "|", 
       RowBox[{"_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"#", "\[Equal]", "\"\<FindEcoAttractor\>\""}], "&"}], 
         ")"}]}]}], ")"}], ":", "\"\<FindEcoAttractor\>\""}], ",", 
    RowBox[{"Gs_List:", 
     RowBox[{"{", "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"trait1_", ",", 
      RowBox[{"trait1min_", "?", "NumericQ"}], ",", 
      RowBox[{"trait1max_", "?", "NumericQ"}]}], "}"}], ",", 
    RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
  RowBox[{"PlotEvoStreams", "[", 
   RowBox[{"solin1", ",", "Gs", ",", 
    RowBox[{"{", 
     RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"SubscriptAdd", "[", "trait1", "]"}], ",", "trait1min", ",", 
      "trait1max"}], "}"}], ",", "opts"}], "]"}]}]], "Code",
 CellChangeTimes->{{3.72840354707022*^9, 3.7284035571377773`*^9}, {
  3.728403598467949*^9, 3.728403638407946*^9}, {3.728404200503545*^9, 
  3.728404204503395*^9}, {3.728404478589267*^9, 3.7284045181220627`*^9}, {
  3.7284057161507187`*^9, 3.728405720828651*^9}},
 CellLabel->
  "In[589]:=",ExpressionUUID->"8871d97d-d043-407a-b6da-7c2058fab8fd"],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.728832562837758*^9, 
  3.728832563540484*^9}},ExpressionUUID->"335da43a-4799-4c31-9dad-\
521cd6cdc65e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PlotEvoStreams", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Time", "\[Rule]", "t"}], ",", 
     RowBox[{"FindEcoAttractorOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"DInvOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", 
     RowBox[{"FrameLabel", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"StreamStyle", "\[Rule]", "Gray"}], ",", "\n", 
     RowBox[{"UseSymmetry", "\[Rule]", "False"}], ",", 
     RowBox[{"FitnessGradient", "\[Rule]", "\"\<DInv\>\""}], ",", 
     RowBox[{"ICs", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"EvoEquation", "\[Rule]", "\"\<QG\>\""}], ",", 
     RowBox[{"EcoAttractorNumber", "\[Rule]", "1"}], ",", "\n", 
     RowBox[{"Monitor", "\[Rule]", "False"}], ",", 
     RowBox[{"PrintTrace", "\[Rule]", "False"}], ",", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellLabel->
  "In[590]:=",ExpressionUUID->"9756b069-91d1-42d1-8716-0aa2c3a7acb9"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["PlotEvoIsoclines", "Subsection",
 CellDingbat->
  "\[ClubSuit]",ExpressionUUID->"95908736-6e20-4608-8281-6142e72c8099"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotEvoIsoclines", "[", 
     RowBox[{
      RowBox[{"solin", ":", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"_", "?", "RuleListQ"}], "|", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "\[Equal]", "\"\<FindEcoAttractor\>\""}], "&"}], 
           ")"}]}]}], ")"}], ":", "\"\<FindEcoAttractor\>\""}], ",", 
      RowBox[{"Gs_List:", 
       RowBox[{"{", "}"}]}], ",", "\n", 
      RowBox[{"{", 
       RowBox[{"trait1_", ",", 
        RowBox[{"trait1min_", "?", "NumericQ"}], ",", 
        RowBox[{"trait1max_", "?", "NumericQ"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"trait2_", ",", 
        RowBox[{"trait2min_", "?", "NumericQ"}], ",", 
        RowBox[{"trait2max_", "?", "NumericQ"}]}], "}"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"func", "=", 
         RowBox[{"FuncStyle", "[", "\"\<PlotEvoIsoclines\>\"", "]"}]}], ",", 
        "\n", 
        RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
        "verboseall", ",", "fixed", ",", "time", ",", "\n", "evoeqn", ",", 
        "monitor", ",", "printtrace", ",", "fitnessgradient", ",", "dinvopts",
         ",", "findecoattractoropts", ",", "plotopts", ",", "framelabel", ",",
         "ics", ",", "ecoattnum", ",", "\n", "estest", ",", "isoclinestyle", 
        ",", "delaydinv2", ",", "dinv2opts", ",", "excludediagonal", ",", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "nb", ",", 
        "x", ",", "y", ",", "\n", "ics1", ",", "color1", ",", "color1es", ",",
         "color1nes", ",", "color2", ",", "color2es", ",", "color2nes", ",", 
        "style1", ",", "style1es", ",", "style1nes", ",", "style2", ",", 
        "style2es", ",", "style2nes", ",", "\n", "g", ",", "sol", ",", "fg1", 
        ",", "fg2", ",", "dinv21", ",", "dinv22", ",", "gu1", ",", "tr1", ",",
         "sp1", ",", "gu2", ",", "tr2", ",", "sp2", ",", "pre1", ",", "pre2", 
        ",", "iso1", ",", "iso2"}], "}"}], ",", "\n", "\n", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "Nsp", "}"}], ",", "\n", "\n", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
           RowBox[{
            RowBox[{"Msg", "[", 
             RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
            RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
         "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
         RowBox[{"verbose", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Verbose", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
         RowBox[{"verboseall", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"VerboseAll", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"verboseall", ",", 
           RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
         RowBox[{"monitor", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Monitor", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"printtrace", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"PrintTrace", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"fixed", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Fixed", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"time", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Time", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"evoeqn", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"EvoEquation", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"fitnessgradient", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"FitnessGradient", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"findecoattractoropts", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"FindEcoAttractorOpts", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"dinvopts", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"DInvOpts", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"plotopts", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"PlotOpts", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"framelabel", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"FrameLabel", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"ics", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"ICs", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"ecoattnum", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"EcoAttractorNumber", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"estest", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"ESTest", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"isoclinestyle", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"IsoclineStyle", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"delaydinv2", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"DelayDInv2", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"dinv2opts", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"DInv2Opts", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"excludediagonal", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"ExcludeDiagonal", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "figure", " ", "out", " ", "what", " ", "are", " ", "the", " ", 
            "traits", " ", "on", " ", "the", " ", "x"}], "-", " ", 
           RowBox[{"and", " ", "y"}], "-", "axes"}], " ", "*)"}], "\n", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"gu1", ",", "tr1", ",", "sp1"}], "}"}], "=", 
          RowBox[{
           RowBox[{"LookUp", "[", "trait1", "]"}], "\[LeftDoubleBracket]", 
           RowBox[{"2", ";;", "4"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"gu2", ",", "tr2", ",", "sp2"}], "}"}], "=", 
          RowBox[{
           RowBox[{"LookUp", "[", "trait2", "]"}], "\[LeftDoubleBracket]", 
           RowBox[{"2", ";;", "4"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
         "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"excludediagonal", "&&", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"gu1", ",", "tr1"}], "}"}], "\[Equal]", 
             RowBox[{"{", 
              RowBox[{"gu2", ",", "tr2"}], "}"}]}]}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"plotopts", ",", 
             RowBox[{"Exclusions", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"\[FormalX]", "\[Equal]", "\[FormalY]"}], "}"}]}]}], 
            "]"}]}], "]"}], ";", "\n", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"isoclinestyle", "===", "Automatic"}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{"color1es", "=", 
             RowBox[{"color1nes", "=", 
              RowBox[{"color1", "=", 
               RowBox[{
                RowBox[{"color", "[", "trait1", "]"}], "[", "0", "]"}]}]}]}], 
            ";", "\n", "\t", 
            RowBox[{"color2es", "=", 
             RowBox[{"color2nes", "=", 
              RowBox[{"color2", "=", 
               RowBox[{
                RowBox[{"color", "[", "trait2", "]"}], "[", "1", "]"}]}]}]}], 
            ";", "\n", "\t", 
            RowBox[{"style1es", "=", "Thick"}], ";", 
            RowBox[{"style1nes", "=", "Thin"}], ";", 
            RowBox[{"style1", "=", 
             RowBox[{"Thickness", "[", "Medium", "]"}]}], ";", "\n", "\t", 
            RowBox[{"style2es", "=", "Thick"}], ";", 
            RowBox[{"style2nes", "=", "Thin"}], ";", 
            RowBox[{"style2", "=", 
             RowBox[{"Thickness", "[", "Medium", "]"}]}], ";"}], "\n", ",", 
           "\n", "\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"ListQ", "[", 
               RowBox[{
               "isoclinestyle", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}], "]"}], ",", "\n", "\t\t", 
              RowBox[{
               RowBox[{"color1es", "=", 
                RowBox[{"ExtractColors", "[", 
                 RowBox[{"isoclinestyle", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}],
                ";", "\n", "\t\t", 
               RowBox[{"color1nes", "=", 
                RowBox[{"ExtractColors", "[", 
                 RowBox[{"isoclinestyle", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "]"}]}],
                ";", "\n", "\t\t", 
               RowBox[{"style1es", "=", 
                RowBox[{"Complement", "[", 
                 RowBox[{
                  RowBox[{"isoclinestyle", "\[LeftDoubleBracket]", 
                   RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                  "color1es"}], "]"}]}], ";", "\n", "\t\t", 
               RowBox[{"style1nes", "=", 
                RowBox[{"Complement", "[", 
                 RowBox[{
                  RowBox[{"isoclinestyle", "\[LeftDoubleBracket]", 
                   RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                  "color1nes"}], "]"}]}], ";"}], "\n", "\t", ",", "\n", 
              "\t\t", 
              RowBox[{
               RowBox[{"color1", "=", 
                RowBox[{"ExtractColors", "[", 
                 RowBox[{
                 "isoclinestyle", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], "]"}]}], ";", "\n", "\t\t", 
               RowBox[{"style1", "=", 
                RowBox[{"Complement", "[", 
                 RowBox[{
                  RowBox[{"isoclinestyle", "\[LeftDoubleBracket]", 
                   RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                  "color1"}], "]"}]}], ";"}]}], "\n", "\t", "]"}], ";", 
            "\[IndentingNewLine]", "\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"ListQ", "[", 
               RowBox[{
               "isoclinestyle", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}], "]"}], ",", "\n", "\t\t", 
              RowBox[{
               RowBox[{"color2es", "=", 
                RowBox[{"ExtractColors", "[", 
                 RowBox[{"isoclinestyle", "\[LeftDoubleBracket]", 
                  RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}],
                ";", "\n", "\t\t", 
               RowBox[{"color2nes", "=", 
                RowBox[{"ExtractColors", "[", 
                 RowBox[{"isoclinestyle", "\[LeftDoubleBracket]", 
                  RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "]"}]}],
                ";", "\n", "\t\t", 
               RowBox[{"style2es", "=", 
                RowBox[{"Complement", "[", 
                 RowBox[{
                  RowBox[{"isoclinestyle", "\[LeftDoubleBracket]", 
                   RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                  "color2es"}], "]"}]}], ";", "\n", "\t\t", 
               RowBox[{"style2nes", "=", 
                RowBox[{"Complement", "[", 
                 RowBox[{
                  RowBox[{"isoclinestyle", "\[LeftDoubleBracket]", 
                   RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                  "color2nes"}], "]"}]}], ";"}], "\n", "\t", ",", "\n", 
              "\t\t", 
              RowBox[{
               RowBox[{"color2", "=", 
                RowBox[{"ExtractColors", "[", 
                 RowBox[{
                 "isoclinestyle", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], "]"}]}], ";", "\n", "\t\t", 
               RowBox[{"style2", "=", 
                RowBox[{"Complement", "[", 
                 RowBox[{
                  RowBox[{"isoclinestyle", "\[LeftDoubleBracket]", 
                   RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                  "color2"}], "]"}]}], ";"}]}], "\n", "\t", "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\n", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"framelabel", "===", "Automatic"}], ",", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"trait2", "===", "trait1"}], ",", "\n", "\t\t", 
             RowBox[{"framelabel", "=", 
              RowBox[{"{", 
               RowBox[{"trait1", ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{
                  RowBox[{"trait", "[", 
                   RowBox[{"gu1", ",", "tr1"}], "]"}], ",", 
                  RowBox[{"sp1", "+", "1"}]}], "]"}]}], "}"}]}], ",", "\n", 
             "\t\t", 
             RowBox[{"framelabel", "=", 
              RowBox[{"{", 
               RowBox[{"trait1", ",", "trait2"}], "}"}]}]}], "\n", "\t", 
            "]"}]}], "\n", "]"}], ";", "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"set", " ", "up", " ", "G", " ", "matrices"}], " ", "*)"}], 
         "\n", "\n", 
         RowBox[{"Do", "[", "\n", "\t", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"g", "[", "gu", "]"}], "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"MatrixQ", "[", 
                RowBox[{
                 RowBox[{"G", "[", "gu", "]"}], "/.", "Gs"}], "]"}], ",", 
               "\n", "\t\t", 
               RowBox[{
                RowBox[{"G", "[", "gu", "]"}], "/.", "Gs"}], ",", "\n", 
               "\t\t", 
               RowBox[{"DiagonalMatrix", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"NumberQ", "[", 
                    RowBox[{
                    RowBox[{"V", "[", 
                    RowBox[{"trait", "[", 
                    RowBox[{"gu", ",", "tr"}], "]"}], "]"}], "/.", "Gs"}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"V", "[", 
                    RowBox[{"trait", "[", 
                    RowBox[{"gu", ",", "tr"}], "]"}], "]"}], "/.", "Gs"}], 
                    ",", "1"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"tr", ",", 
                    RowBox[{"ntraits", "[", "gu", "]"}]}], "}"}]}], "]"}], 
                "]"}]}], "\n", "\t", "]"}]}], ";"}], "\n", ",", 
           RowBox[{"{", 
            RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ";", "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"set", " ", "up", " ", "sol"}], " ", "*)"}], "\n", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"solin", "===", "\"\<FindEcoAttractor\>\""}], ",", "\n", 
           "\t", 
           RowBox[{
            RowBox[{"fitnessgradient", "=", "\"\<NDInv\>\""}], ";", "\n", 
            "\t", 
            RowBox[{"delaydinv2", "=", "True"}], ";", "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"ics", "\[Equal]", 
               RowBox[{"{", "}"}]}], ",", "\n", "\t\t", 
              RowBox[{"(*", " ", 
               RowBox[{
               "figure", " ", "out", " ", "number", " ", "of", " ", "species",
                 " ", "in", " ", "guilds"}], " ", "*)"}], "\n", "\t\t", 
              RowBox[{
               RowBox[{"SetNsp", "[", 
                RowBox[{"Join", "[", 
                 RowBox[{"fixed", ",", 
                  RowBox[{"{", 
                   RowBox[{"trait1", "\[Rule]", "trait1"}], "}"}]}], "]"}], 
                "]"}], ";", "\n", "\t\t", 
               RowBox[{"ics1", "=", "DefaultICs"}], ";", "\n", "\t\t", 
               RowBox[{"SetNsp", "[", 
                RowBox[{"Join", "[", 
                 RowBox[{"fixed", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"trait1", "\[Rule]", "trait1"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "trait2"}]}], "}"}]}], "]"}],
                 "]"}], ";", "\n", "\t\t", 
               RowBox[{"If", "[", 
                RowBox[{"Global`debug", ",", 
                 RowBox[{"Print", "[", 
                  RowBox[{"func", ",", "\"\<: Nsp=\>\"", ",", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Nsp", "[", "gu", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "]"}]}], 
                "]"}], ";", "\n", "\t\t", 
               RowBox[{"ics", "=", "DefaultICs"}], ";"}]}], "\n", "\t", "]"}],
             ";", "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"gu1", ",", "tr1"}], "}"}], "\[Equal]", 
               RowBox[{"{", 
                RowBox[{"gu2", ",", "tr2"}], "}"}]}], ",", "\n", "\t\t", 
              RowBox[{
               RowBox[{"sol", "[", 
                RowBox[{
                 RowBox[{"\[FormalX]_", "?", "NumberQ"}], ",", 
                 RowBox[{"\[FormalX]_", "?", "NumberQ"}]}], "]"}], ":=", 
               RowBox[{
                RowBox[{"sol", "[", 
                 RowBox[{"\[FormalX]", ",", "\[FormalX]"}], "]"}], "=", 
                RowBox[{"Module", "[", 
                 RowBox[{
                  RowBox[{"{", "result", "}"}], ",", "\n", "\t\t\t", 
                  RowBox[{
                   RowBox[{"result", "=", 
                    RowBox[{"FindEcoAttractor", "[", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"{", 
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], "}"}]}], 
                    "]"}], ",", "ics1", ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "findecoattractoropts"}], "]"}],
                     ",", 
                    RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], 
                    "]"}]}], ";", "\n", "\t\t\t", 
                   RowBox[{"Return", "[", 
                    RowBox[{"Join", "[", 
                    RowBox[{"result", ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"gcomp", "[", 
                    RowBox[{"gu1", ",", "gco"}], "]"}], ",", "sp2"}], "]"}], 
                    "\[Rule]", "0"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"gco", ",", 
                    RowBox[{"ngcomps", "[", "gu1", "]"}]}], "}"}]}], "]"}]}], 
                    "]"}], "]"}]}]}], "\n", "\t\t", "]"}]}]}]}], "\n", "\t", 
             "]"}], ";", "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", "\n", "\t\t", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"tr", "=", 
                   RowBox[{"Join", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
                    "]"}]}], ",", 
                  RowBox[{"ics", "=", "ics"}], ",", 
                  RowBox[{"time", "=", "time"}], ",", 
                  RowBox[{"op", "=", 
                   RowBox[{"Sequence", "@@", "findecoattractoropts"}]}]}], 
                 "}"}], ",", "\n", "\t\t\t", 
                RowBox[{"PrintCall", "[", 
                 RowBox[{
                  RowBox[{"Global`sol", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}]}], "]"}], ":=", 
                  RowBox[{
                   RowBox[{"Global`sol", "[", 
                    RowBox[{"System`\[FormalX]", ",", "System`\[FormalY]"}], 
                    "]"}], "=", "\n", "\t\t\t", 
                   RowBox[{"FindEcoAttractor", "[", 
                    RowBox[{"tr", ",", "ics", ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", "op"}], 
                    "]"}]}]}], "]"}]}], "]"}]}], "\n", "\t", "]"}], ";", "\n",
             "\t", 
            RowBox[{
             RowBox[{"sol", "[", 
              RowBox[{
               RowBox[{"\[FormalX]_", "?", "NumberQ"}], ",", 
               RowBox[{"\[FormalY]_", "?", "NumberQ"}]}], "]"}], ":=", 
             RowBox[{
              RowBox[{"sol", "[", 
               RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "=", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", "result", "}"}], ",", "\n", "\t\t", 
                RowBox[{
                 RowBox[{"result", "=", 
                  RowBox[{"FindEcoAttractor", "[", 
                   RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
                    "]"}], ",", "ics", ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "findecoattractoropts"}], "]"}],
                     ",", 
                    RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], 
                   "]"}]}], ";", "\n", "\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"printtrace", ",", 
                   RowBox[{"Print", "[", 
                    RowBox[{"\"\<FindEcoAttractor \>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}], 
                    ",", "\"\<=\>\"", ",", "result"}], "]"}]}], "]"}], ";", 
                 "\n", "\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"ArrayDepth", "[", "result", "]"}], "<", "2"}], 
                   ",", 
                   RowBox[{"Return", "[", "result", "]"}], ",", 
                   RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{"result", ",", "\"\< \>\"", ",", 
                    RowBox[{"ArrayDepth", "[", "result", "]"}]}], "]"}], ";", 
                    
                    RowBox[{"Return", "[", 
                    RowBox[{
                    "result", "\[LeftDoubleBracket]", "ecoattnum", 
                    "\[RightDoubleBracket]"}], "]"}]}]}], "]"}]}]}], "\n", 
               "\t", "]"}]}]}], ";"}], "\n", ",", " ", 
           RowBox[{"(*", " ", 
            RowBox[{"sol", " ", "given"}], " ", "*)"}], "\n", "\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", 
              RowBox[{"PrintCall", "[", 
               RowBox[{
                RowBox[{"Global`sol", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", "System`\[FormalX]", ")"}], "_"}], ",", 
                  RowBox[{
                   RowBox[{"(", "System`\[FormalY]", ")"}], "_"}]}], "]"}], 
                "=", 
                RowBox[{"solin", "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                   RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}]}], 
               "]"}]}], "]"}], ";", "\n", "\t", 
            RowBox[{
             RowBox[{"sol", "[", 
              RowBox[{"\[FormalX]_", ",", "\[FormalY]_"}], "]"}], "=", 
             RowBox[{"solin", "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}]}], ";",
             "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", 
              RowBox[{"Print", "[", 
               RowBox[{
               "func", ",", "\"\<: sol[\[FormalX],\[FormalY]]=\>\"", ",", 
                RowBox[{"sol", "[", 
                 RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], "]"}]}], 
             "]"}]}]}], "\n", "]"}], ";", "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"set", " ", "up", " ", "fitness", " ", "gradients"}], " ", 
          "*)"}], "\n", "\n", 
         RowBox[{"Which", "[", "\n", "\t", 
          RowBox[{
           RowBox[{"fitnessgradient", "\[Equal]", "\"\<NDInv\>\""}], "\n", 
           ",", "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{"memoization", " ", "seems", " ", "ineffective"}], " ", 
            "*)"}], "\n", "\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", "\n", "\t\t", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"tr", "=", 
                   RowBox[{"Join", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
                    "]"}]}], ",", 
                  RowBox[{"so", "=", 
                   RowBox[{"sol", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], ",", 
                  RowBox[{"trinv", "=", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "0"}], "]"}]}], 
                  ",", 
                  RowBox[{"sp", "=", "sp1"}], ",", 
                  RowBox[{"time", "=", "time"}], ",", 
                  RowBox[{"op", "=", 
                   RowBox[{"Sequence", "@@", "dinvopts"}]}]}], "}"}], ",", 
                "\n", "\t\t\t", 
                RowBox[{"PrintCall", "[", 
                 RowBox[{
                  RowBox[{"Global`fg1", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}]}], "]"}], ":=", 
                  RowBox[{"DInv", "[", 
                   RowBox[{"tr", ",", "so", ",", "trinv", ",", 
                    RowBox[{"Species", "\[Rule]", "sp"}], ",", 
                    RowBox[{"Method", "\[Rule]", "\"\<NDInv\>\""}], ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", "op"}], "]"}]}],
                  "]"}]}], "]"}]}], "\n", "\t", "]"}], ";", "\t", "\n", "\t", 
            
            RowBox[{
             RowBox[{"fg1", "[", 
              RowBox[{
               RowBox[{"\[FormalX]_", "?", "NumberQ"}], ",", 
               RowBox[{"\[FormalY]_", "?", "NumberQ"}]}], "]"}], ":=", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"fg1", "[", 
                RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "="}], 
              "*)"}], 
             RowBox[{
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", "dinv", "}"}], ",", "\n", "\t\t", 
                RowBox[{
                 RowBox[{"dinv", "=", 
                  RowBox[{"DInv", "[", 
                   RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
                    "]"}], ",", 
                    RowBox[{"sol", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "0"}], "]"}], 
                    ",", 
                    RowBox[{"Species", "\[Rule]", "sp1"}], ",", "\n", 
                    "\t\t\t", 
                    RowBox[{"Method", "\[Rule]", "\"\<NDInv\>\""}], ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "dinvopts"}], "]"}], ",", 
                    RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], 
                   "]"}]}], ";", "\n", "\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"printtrace", ",", 
                   RowBox[{"Print", "[", 
                    RowBox[{"\"\<fg1 \>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}], 
                    ",", "\"\<=\>\"", ",", "dinv"}], "]"}]}], "]"}], ";", 
                 "\n", "\t\t", 
                 RowBox[{"Return", "[", "dinv", "]"}]}]}], "\n", "\t", "]"}], 
              "/;", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "trait1min", "\[LessEqual]", "\[FormalX]", "\[LessEqual]", 
                 "trait1max"}], "&&", 
                RowBox[{
                "trait2min", "\[LessEqual]", "\[FormalY]", "\[LessEqual]", 
                 "trait2max"}]}], ")"}]}]}], ";", "\n", "\t", "\n", "\t", 
            RowBox[{"(*", " ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"True", "||", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"gu1", ",", "tr1"}], "}"}], "=!=", 
                 RowBox[{"{", 
                  RowBox[{"gu2", ",", "tr2"}], "}"}]}]}], ",", " ", 
               RowBox[{
               "symmetricizing", " ", "turned", " ", "off", " ", "for", " ", 
                "now"}]}], " "}], "*)"}], "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", "\n", "\t\t", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"tr", "=", 
                   RowBox[{"Join", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
                    "]"}]}], ",", 
                  RowBox[{"so", "=", 
                   RowBox[{"sol", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], ",", 
                  RowBox[{"trinv", "=", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu2", ",", "tr2"}], "]"}], ",", "0"}], "]"}]}], 
                  ",", 
                  RowBox[{"sp", "=", "sp2"}], ",", 
                  RowBox[{"time", "=", "time"}], ",", 
                  RowBox[{"op", "=", 
                   RowBox[{"Sequence", "@@", "dinvopts"}]}]}], "}"}], ",", 
                "\n", "\t\t\t", 
                RowBox[{"PrintCall", "[", 
                 RowBox[{
                  RowBox[{"Global`fg2", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}]}], "]"}], ":=", "\n", 
                  "\t\t\t\t", 
                  RowBox[{"DInv", "[", 
                   RowBox[{"tr", ",", "so", ",", "trinv", ",", 
                    RowBox[{"Species", "\[Rule]", "sp"}], ",", 
                    RowBox[{"Method", "\[Rule]", "\"\<NDInv\>\""}], ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", "op"}], "]"}]}],
                  "]"}]}], "]"}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
            RowBox[{
             RowBox[{"fg2", "[", 
              RowBox[{
               RowBox[{"\[FormalX]_", "?", "NumberQ"}], ",", 
               RowBox[{"\[FormalY]_", "?", "NumberQ"}]}], "]"}], ":=", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"fg2", "[", 
                RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "="}], 
              "*)"}], 
             RowBox[{
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", "dinv", "}"}], ",", "\n", "\t\t", 
                RowBox[{
                 RowBox[{"dinv", "=", 
                  RowBox[{"DInv", "[", 
                   RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
                    "]"}], ",", 
                    RowBox[{"sol", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu2", ",", "tr2"}], "]"}], ",", "0"}], "]"}], 
                    ",", 
                    RowBox[{"Species", "\[Rule]", "sp2"}], ",", "\n", 
                    "\t\t\t", 
                    RowBox[{"Method", "\[Rule]", "\"\<NDInv\>\""}], ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "dinvopts"}], "]"}], ",", 
                    RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], 
                   "]"}]}], ";", "\n", "\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{"printtrace", ",", 
                   RowBox[{"Print", "[", 
                    RowBox[{"\"\<fg2 \>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}], 
                    ",", "\"\<=\>\"", ",", "dinv"}], "]"}]}], "]"}], ";", 
                 "\t", "\n", "\t\t", 
                 RowBox[{"Return", "[", "dinv", "]"}]}]}], "\n", "\t", "]"}], 
              "/;", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "trait1min", "\[LessEqual]", "\[FormalX]", "\[LessEqual]", 
                 "trait1max"}], "&&", 
                RowBox[{
                "trait2min", "\[LessEqual]", "\[FormalY]", "\[LessEqual]", 
                 "trait2max"}]}], ")"}]}]}], ";"}], "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"leftover", " ", "symmetrizing", " ", "bit"}], " ", ",", 
             
             RowBox[{
              RowBox[{
               RowBox[{"fg2", "[", 
                RowBox[{"\[FormalX]_", ",", "\[FormalY]_"}], "]"}], ":=", 
               RowBox[{"fg1", "[", 
                RowBox[{"\[FormalY]", ",", "\[FormalX]"}], "]"}]}], ";", "\n",
               "\t", 
              RowBox[{"If", "[", 
               RowBox[{"verbose", ",", 
                RowBox[{"Print", "[", 
                 RowBox[{
                 "func", ",", 
                  "\"\<: fg2[\[FormalX]_,\[FormalY]_]:=fg1[\[FormalY],\
\[FormalX]]\>\""}], "]"}]}], "]"}]}]}], "*)"}], "\n", ",", "\n", "\t", 
           RowBox[{"fitnessgradient", "\[Equal]", "\"\<DInv\>\""}], "\n", ",",
            "\n", "\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", "\n", "\t\t", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"tr", "=", 
                   RowBox[{"Join", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
                    "]"}]}], ",", 
                  RowBox[{"so", "=", 
                   RowBox[{"sol", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], ",", 
                  RowBox[{"trinv", "=", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "0"}], "]"}]}], 
                  ",", 
                  RowBox[{"sp", "=", "sp1"}], ",", 
                  RowBox[{"time", "=", "time"}], ",", 
                  RowBox[{"op", "=", 
                   RowBox[{"Sequence", "@@", "dinvopts"}]}]}], "}"}], ",", 
                "\n", "\t\t\t", 
                RowBox[{"PrintCall", "[", 
                 RowBox[{
                  RowBox[{"Global`fg1", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], "_"}], ",", 
                    RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], "_"}]}], "]"}], 
                  "=", 
                  RowBox[{"DInv", "[", 
                   RowBox[{"tr", ",", "so", ",", "trinv", ",", 
                    RowBox[{"Species", "\[Rule]", "sp"}], ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", "op"}], "]"}]}],
                  "]"}]}], "]"}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
            RowBox[{
             RowBox[{"fg1", "[", 
              RowBox[{"\[FormalX]_", ",", "\[FormalY]_"}], "]"}], "=", 
             RowBox[{"DInv", "[", 
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{"fixed", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                   RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
                "]"}], ",", 
               RowBox[{"sol", "[", 
                RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{
                 RowBox[{"trait", "[", 
                  RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "0"}], "]"}], ",", 
               
               RowBox[{"Species", "\[Rule]", "sp1"}], ",", "\n", "\t\t", 
               RowBox[{"Time", "\[Rule]", "time"}], ",", 
               RowBox[{"Evaluate", "[", 
                RowBox[{"Sequence", "@@", "dinvopts"}], "]"}], ",", 
               RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}], 
            ";", "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", 
              RowBox[{"Print", "[", 
               RowBox[{
               "func", ",", "\"\<: fg1[\[FormalX],\[FormalY]]=\>\"", ",", 
                RowBox[{"fg1", "[", 
                 RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], "]"}]}], 
             "]"}], ";", "\n", "\t", "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", "\n", "\t\t", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"tr", "=", 
                   RowBox[{"Join", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
                    "]"}]}], ",", 
                  RowBox[{"so", "=", 
                   RowBox[{"sol", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], ",", 
                  RowBox[{"trinv", "=", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu2", ",", "tr2"}], "]"}], ",", "0"}], "]"}]}], 
                  ",", 
                  RowBox[{"sp", "=", "sp2"}], ",", 
                  RowBox[{"time", "=", "time"}], ",", 
                  RowBox[{"op", "=", 
                   RowBox[{"Sequence", "@@", "dinvopts"}]}]}], "}"}], ",", 
                "\n", "\t\t\t", 
                RowBox[{"PrintCall", "[", 
                 RowBox[{
                  RowBox[{"Global`fg2", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], "_"}], ",", 
                    RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], "_"}]}], "]"}], 
                  "=", 
                  RowBox[{"DInv", "[", 
                   RowBox[{"tr", ",", "so", ",", "trinv", ",", 
                    RowBox[{"Species", "\[Rule]", "sp"}], ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", "op"}], "]"}]}],
                  "]"}]}], "]"}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
            RowBox[{
             RowBox[{"fg2", "[", 
              RowBox[{"\[FormalX]_", ",", "\[FormalY]_"}], "]"}], "=", 
             RowBox[{"DInv", "[", 
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{"fixed", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                   RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
                "]"}], ",", 
               RowBox[{"sol", "[", 
                RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], ",", 
               RowBox[{"Subscript", "[", 
                RowBox[{
                 RowBox[{"trait", "[", 
                  RowBox[{"gu2", ",", "tr2"}], "]"}], ",", "0"}], "]"}], ",", 
               
               RowBox[{"Species", "\[Rule]", "sp2"}], ",", "\n", "\t\t", 
               RowBox[{"Time", "\[Rule]", "time"}], ",", 
               RowBox[{"Evaluate", "[", 
                RowBox[{"Sequence", "@@", "dinvopts"}], "]"}], ",", 
               RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "\n", "\t", 
              "]"}]}], ";", "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", 
              RowBox[{"Print", "[", 
               RowBox[{
               "func", ",", "\"\<: fg2[\[FormalX],\[FormalY]]=\>\"", ",", 
                RowBox[{"fg2", "[", 
                 RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], "]"}]}], 
             "]"}], ";"}], "\n", ",", "\n", "\t", "Else", ",", "\n", "\t", 
           RowBox[{
            RowBox[{"Msg", "[", 
             RowBox[{"PlotEvoStreams", "::", "badfg"}], "]"}], ";", 
            RowBox[{"Return", "[", "$Failed", "]"}], ";"}]}], "\n", "]"}], 
         ";", "\n", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"monitor", ",", "\n", "\t", 
           RowBox[{
            RowBox[{"nb", "=", 
             RowBox[{"CreateDialog", "[", 
              RowBox[{"DialogNotebook", "[", 
               RowBox[{
                RowBox[{"Grid", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"trait1", ",", "\"\<=\>\"", ",", 
                    RowBox[{"Dynamic", "[", "x", "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"trait2", ",", "\"\<=\>\"", ",", 
                    RowBox[{"Dynamic", "[", "y", "]"}]}], "}"}]}], "}"}], 
                 "]"}], ",", 
                RowBox[{"WindowTitle", "\[Rule]", "\"\<Progress...\>\""}]}], 
               "]"}], "]"}]}], ";"}]}], "\n", "]"}], ";", "\n", "\n", 
         RowBox[{"Which", "[", "\n", "\t", 
          RowBox[{
           RowBox[{"evoeqn", "\[Equal]", "\"\<QG\>\""}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{"pre1", "[", 
             RowBox[{"_", ",", "_"}], "]"}], "=", 
            RowBox[{
             RowBox[{"pre2", "[", 
              RowBox[{"_", ",", "_"}], "]"}], "=", "1"}]}], ",", "\n", "\t", 
           RowBox[{"evoeqn", "\[Equal]", "\"\<CE\>\""}], ",", "\n", "\t", 
           RowBox[{
            RowBox[{
             RowBox[{"pre1", "[", 
              RowBox[{
               RowBox[{"\[FormalX]_", "?", "NumericQ"}], ",", 
               RowBox[{"\[FormalY]_", "?", "NumericQ"}]}], "]"}], ":=", "\n", 
             "\t\t", 
             RowBox[{
              RowBox[{"Sum", "[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"gcomptype", "[", 
                    RowBox[{"gu1", ",", "gco"}], "]"}], "\[Equal]", 
                   "\"\<Extensive\>\""}], ",", 
                  RowBox[{"Evaluate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"gcomp", "[", 
                    RowBox[{"gu1", ",", "gco"}], "]"}], ",", "sp1"}], "]"}], "/.", 
                    RowBox[{"sol", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], ",", 
                    "0"}], "]"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"gco", ",", 
                  RowBox[{"ngcomps", "[", "gu1", "]"}]}], "}"}]}], "]"}], "/;", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "trait1min", "\[LessEqual]", "\[FormalX]", "\[LessEqual]", 
                 "trait1max"}], "&&", 
                RowBox[{
                "trait2min", "\[LessEqual]", "\[FormalY]", "\[LessEqual]", 
                 "trait2max"}]}], ")"}]}]}], ";", "\n", "\t", 
            RowBox[{
             RowBox[{"pre2", "[", 
              RowBox[{
               RowBox[{"\[FormalX]_", "?", "NumericQ"}], ",", 
               RowBox[{"\[FormalY]_", "?", "NumericQ"}]}], "]"}], ":=", "\n", 
             "\t\t", 
             RowBox[{
              RowBox[{"Sum", "[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"gcomptype", "[", 
                    RowBox[{"gu2", ",", "gco"}], "]"}], "\[Equal]", 
                   "\"\<Extensive\>\""}], ",", 
                  RowBox[{"Evaluate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"gcomp", "[", 
                    RowBox[{"gu2", ",", "gco"}], "]"}], ",", "sp2"}], "]"}], "/.", \

                    RowBox[{"sol", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], ",", 
                    "0"}], "]"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"gco", ",", 
                  RowBox[{"ngcomps", "[", "gu2", "]"}]}], "}"}]}], "]"}], "/;", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "trait1min", "\[LessEqual]", "\[FormalX]", "\[LessEqual]", 
                 "trait1max"}], "&&", 
                RowBox[{
                "trait2min", "\[LessEqual]", "\[FormalY]", "\[LessEqual]", 
                 "trait2max"}]}], ")"}]}]}], ";"}]}], "\n", "]"}], ";", "\n", 
         "\n", 
         RowBox[{"iso1", "=", 
          RowBox[{"ContourPlot", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}], "=", 
               RowBox[{"{", 
                RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "}"}]}], ";", "\n",
               "\t", 
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{"pre1", "[", 
                 RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"g", "[", "gu1", "]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"tr1", ",", "tr1"}], "\[RightDoubleBracket]"}], 
                   "*", 
                   RowBox[{"fg1", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], "+", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"gu1", "===", "gu2"}], "&&", 
                    RowBox[{"sp1", "\[Equal]", "sp2"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"g", "[", "gu1", "]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"tr1", ",", "tr2"}], "\[RightDoubleBracket]"}], 
                    "*", 
                    RowBox[{"fg2", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], ",", 
                    "0"}], "]"}]}], ")"}]}], "]"}]}], ")"}], ",", "\n", "\t", 
            
            RowBox[{"{", 
             RowBox[{"\[FormalX]", ",", "trait1min", ",", "trait1max"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[FormalY]", ",", "trait2min", ",", "trait2max"}], 
             "}"}], ",", 
            RowBox[{"Contours", "\[Rule]", 
             RowBox[{"{", "0", "}"}]}], ",", 
            RowBox[{"ContourShading", "\[Rule]", "False"}], ",", "\n", "\t", 
            RowBox[{"ContourStyle", "\[Rule]", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"color1", ",", "style1"}], "}"}], "]"}]}], ",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
            RowBox[{"ContourLabels", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"None", ",", 
               RowBox[{
                RowBox[{"Tooltip", "[", 
                 RowBox[{"Null", ",", "trait1"}], "]"}], "&"}]}], "}"}]}]}], 
           "\n", "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"Print", "[", "iso1", "]"}]}], "]"}], ";", "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{
          "add", " ", "flip", " ", "option", " ", "to", " ", "save", " ", 
           "50", "%", " ", "time"}], " ", "*)"}], "\n", "\n", 
         RowBox[{"iso2", "=", 
          RowBox[{"ContourPlot", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}], "=", 
               RowBox[{"{", 
                RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "}"}]}], ";", "\n",
               "\t", 
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{"pre2", "[", 
                 RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"g", "[", "gu2", "]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"tr2", ",", "tr2"}], "\[RightDoubleBracket]"}], 
                   "*", 
                   RowBox[{"fg2", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], "+", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"gu1", "===", "gu2"}], "&&", 
                    RowBox[{"sp1", "\[Equal]", "sp2"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"g", "[", "gu2", "]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"tr1", ",", "tr2"}], "\[RightDoubleBracket]"}], 
                    "*", 
                    RowBox[{"fg1", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], ",", 
                    "0"}], "]"}]}], ")"}]}], "]"}]}], ")"}], ",", "\n", "\t", 
            
            RowBox[{"{", 
             RowBox[{"\[FormalX]", ",", "trait1min", ",", "trait1max"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[FormalY]", ",", "trait2min", ",", "trait2max"}], 
             "}"}], ",", 
            RowBox[{"Contours", "\[Rule]", 
             RowBox[{"{", "0", "}"}]}], ",", 
            RowBox[{"ContourShading", "\[Rule]", "False"}], ",", "\n", "\t", 
            RowBox[{"ContourStyle", "\[Rule]", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"color2", ",", "style2"}], "}"}], "]"}]}], ",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"Sequence", "@@", "plotopts"}], "]"}], ",", 
            RowBox[{"ContourLabels", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"None", ",", 
               RowBox[{
                RowBox[{"Tooltip", "[", 
                 RowBox[{"Null", ",", "trait2"}], "]"}], "&"}]}], "}"}]}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"Print", "[", "iso2", "]"}]}], "]"}], ";", "\n", "\n", 
         RowBox[{"Clear", "[", 
          RowBox[{"x", ",", "y"}], "]"}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"monitor", ",", 
           RowBox[{"NotebookClose", "[", "nb", "]"}]}], "]"}], ";", "\n", 
         "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"estest", "\[Equal]", "False"}], ",", 
           RowBox[{"Return", "[", 
            RowBox[{"Show", "[", 
             RowBox[{"iso1", ",", "iso2", ",", 
              RowBox[{"FrameLabel", "\[Rule]", "framelabel"}]}], "]"}], 
            "]"}]}], "]"}], ";", "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"ESTest", "\[Equal]", "True"}], " ", "*)"}], "\n", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"delaydinv2", ",", "\n", "\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", "\n", "\t\t", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"tr", "=", 
                   RowBox[{"Join", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
                    "]"}]}], ",", 
                  RowBox[{"so", "=", 
                   RowBox[{"sol", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], ",", 
                  "\n", "\t\t\t", 
                  RowBox[{"trinv1", "=", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "0"}], "]"}], 
                    ",", "2"}], "}"}]}], ",", 
                  RowBox[{"trinv2", "=", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu2", ",", "tr2"}], "]"}], ",", "0"}], "]"}], 
                    ",", "2"}], "}"}]}], ",", 
                  RowBox[{"time", "=", "time"}], ",", 
                  RowBox[{"op", "=", 
                   RowBox[{"Sequence", "@@", "dinvopts"}]}]}], "}"}], ",", 
                "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"PrintCall", "[", 
                  RowBox[{
                   RowBox[{"Global`dinv21", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}]}], "]"}], ":=", 
                   RowBox[{
                    RowBox[{"Global`dinv21", "[", 
                    RowBox[{"System`\[FormalX]", ",", "System`\[FormalY]"}], 
                    "]"}], "=", "\n", "\t\t\t\t", 
                    RowBox[{"DInv", "[", 
                    RowBox[{"tr", ",", "so", ",", "trinv1", ",", "ts1", ",", 
                    RowBox[{"Method", "\[Rule]", "\"\<NDInv\>\""}], ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", "op"}], 
                    "]"}]}]}], "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"PrintCall", "[", 
                  RowBox[{
                   RowBox[{"Global`dinv22", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", "System`\[FormalX]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", "System`\[FormalY]", ")"}], 
                    RowBox[{"_", "?", "NumberQ"}]}]}], "]"}], ":=", 
                   RowBox[{
                    RowBox[{"Global`dinv22", "[", 
                    RowBox[{"System`\[FormalX]", ",", "System`\[FormalY]"}], 
                    "]"}], "=", "\n", "\t\t\t\t", 
                    RowBox[{"DInv", "[", 
                    RowBox[{"tr", ",", "so", ",", "trinv2", ",", "ts2", ",", 
                    RowBox[{"Method", "\[Rule]", "\"\<NDInv\>\""}], ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", "op"}], 
                    "]"}]}]}], "]"}]}]}], "\n", "\t", "]"}]}], "]"}], ";", 
            "\t\t", "\n", "\t", 
            RowBox[{
             RowBox[{"dinv21", "[", 
              RowBox[{
               RowBox[{"\[FormalX]_", "?", "NumberQ"}], ",", 
               RowBox[{"\[FormalY]_", "?", "NumberQ"}]}], "]"}], ":=", 
             RowBox[{
              RowBox[{"dinv21", "[", 
               RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "=", "\n", 
              "\t\t", 
              RowBox[{"DInv", "[", 
               RowBox[{
                RowBox[{"Join", "[", 
                 RowBox[{"fixed", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
                 "]"}], ",", 
                RowBox[{"sol", "[", 
                 RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "0"}], "]"}], 
                  ",", "2"}], "}"}], ",", 
                RowBox[{"Species", "\[Rule]", "sp1"}], ",", "\n", "\t\t\t", 
                RowBox[{"Method", "\[Rule]", "\"\<NDInv\>\""}], ",", 
                RowBox[{"Time", "\[Rule]", "time"}], ",", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"Sequence", "@@", "dinv2opts"}], "]"}], ",", 
                RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}]}], 
            ";", "\n", "\t", 
            RowBox[{
             RowBox[{"dinv22", "[", 
              RowBox[{
               RowBox[{"\[FormalX]_", "?", "NumberQ"}], ",", 
               RowBox[{"\[FormalY]_", "?", "NumberQ"}]}], "]"}], ":=", 
             RowBox[{
              RowBox[{"dinv22", "[", 
               RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], "=", "\n", 
              "\t\t", 
              RowBox[{"DInv", "[", 
               RowBox[{
                RowBox[{"Join", "[", 
                 RowBox[{"fixed", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
                 "]"}], ",", 
                RowBox[{"sol", "[", 
                 RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu2", ",", "tr2"}], "]"}], ",", "0"}], "]"}], 
                  ",", "2"}], "}"}], ",", 
                RowBox[{"Species", "\[Rule]", "sp2"}], ",", "\n", "\t\t\t", 
                RowBox[{"Method", "\[Rule]", "\"\<NDInv\>\""}], ",", 
                RowBox[{"Time", "\[Rule]", "time"}], ",", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"Sequence", "@@", "dinv2opts"}], "]"}], ",", 
                RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}]}], 
            ";"}], "\n", ",", "\n", "\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", "\n", "\t\t", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"tr", "=", 
                   RowBox[{"Join", "[", 
                    RowBox[{"fixed", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                    RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
                    "]"}]}], ",", 
                  RowBox[{"so", "=", 
                   RowBox[{"sol", "[", 
                    RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], ",", 
                  "\n", "\t\t\t", 
                  RowBox[{"trinv1", "=", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "0"}], "]"}], 
                    ",", "2"}], "}"}]}], ",", 
                  RowBox[{"trinv2", "=", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu2", ",", "tr2"}], "]"}], ",", "0"}], "]"}], 
                    ",", "2"}], "}"}]}], ",", 
                  RowBox[{"sp1", "=", "sp1"}], ",", 
                  RowBox[{"sp2", "=", "sp2"}], ",", "\n", "\t\t\t", 
                  RowBox[{"time", "=", "time"}], ",", 
                  RowBox[{"op", "=", 
                   RowBox[{"Sequence", "@@", "dinvopts"}]}]}], "}"}], ",", 
                "\n", "\t\t\t", 
                RowBox[{
                 RowBox[{"PrintCall", "[", 
                  RowBox[{
                   RowBox[{"Global`dinv21", "[", 
                    RowBox[{"System`\[FormalX]", ",", "System`\[FormalY]"}], 
                    "]"}], "=", 
                   RowBox[{"DInv", "[", 
                    RowBox[{"tr", ",", "so", ",", "trinv1", ",", 
                    RowBox[{"Species", "\[Rule]", "sp1"}], ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", "op"}], "]"}]}],
                   "]"}], ";", "\n", "\t\t\t", 
                 RowBox[{"PrintCall", "[", 
                  RowBox[{
                   RowBox[{"Global`dinv22", "[", 
                    RowBox[{"System`\[FormalX]", ",", "System`\[FormalY]"}], 
                    "]"}], "=", 
                   RowBox[{"DInv", "[", 
                    RowBox[{"tr", ",", "so", ",", "trinv2", ",", 
                    RowBox[{"Species", "\[Rule]", "sp2"}], ",", 
                    RowBox[{"Time", "\[Rule]", "time"}], ",", "op"}], "]"}]}],
                   "]"}]}]}], "\n", "\t", "]"}]}], "]"}], ";", "\n", "\t", 
            RowBox[{
             RowBox[{"dinv21", "[", 
              RowBox[{"\[FormalX]_", ",", "\[FormalY]_"}], "]"}], "=", "\n", 
             "\t\t", 
             RowBox[{"DInv", "[", 
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{"fixed", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                   RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
                "]"}], ",", 
               RowBox[{"sol", "[", 
                RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{
                   RowBox[{"trait", "[", 
                    RowBox[{"gu1", ",", "tr1"}], "]"}], ",", "0"}], "]"}], 
                 ",", "2"}], "}"}], ",", 
               RowBox[{"Species", "\[Rule]", "sp1"}], ",", "\n", "\t\t\t", 
               RowBox[{"Time", "\[Rule]", "time"}], ",", 
               RowBox[{"Evaluate", "[", 
                RowBox[{"Sequence", "@@", "dinv2opts"}], "]"}], ",", 
               RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}], 
            ";", "\n", "\t", 
            RowBox[{
             RowBox[{"dinv22", "[", 
              RowBox[{"\[FormalX]_", ",", "\[FormalY]_"}], "]"}], "=", "\n", 
             "\t\t", 
             RowBox[{"DInv", "[", 
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{"fixed", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"trait1", "\[Rule]", "\[FormalX]"}], ",", 
                   RowBox[{"trait2", "\[Rule]", "\[FormalY]"}]}], "}"}]}], 
                "]"}], ",", 
               RowBox[{"sol", "[", 
                RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Subscript", "[", 
                  RowBox[{
                   RowBox[{"trait", "[", 
                    RowBox[{"gu2", ",", "tr2"}], "]"}], ",", "0"}], "]"}], 
                 ",", "2"}], "}"}], ",", 
               RowBox[{"Species", "\[Rule]", "sp2"}], ",", "\n", "\t\t\t", 
               RowBox[{"Time", "\[Rule]", "time"}], ",", 
               RowBox[{"Evaluate", "[", 
                RowBox[{"Sequence", "@@", "dinv2opts"}], "]"}], ",", 
               RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}], 
            ";", "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", "\n", "\t\t", 
              RowBox[{
               RowBox[{"Print", "[", 
                RowBox[{
                "func", ",", "\"\<: dinv21[\[FormalX],\[FormalY]]=\>\"", ",", 
                 
                 RowBox[{"dinv21", "[", 
                  RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], "]"}], 
               ";", "\n", "\t\t", 
               RowBox[{"Print", "[", 
                RowBox[{
                "func", ",", "\"\<: dinv22[\[FormalX],\[FormalY]]=\>\"", ",", 
                 
                 RowBox[{"dinv22", "[", 
                  RowBox[{"\[FormalX]", ",", "\[FormalY]"}], "]"}]}], 
                "]"}]}]}], "\n", "\t", "]"}]}]}], "\n", "]"}], ";", "\n", 
         "\n", 
         RowBox[{"Return", "[", 
          RowBox[{"Show", "[", "\n", "\t", 
           RowBox[{
            RowBox[{"ListLinePlot", "[", 
             RowBox[{
              RowBox[{"Tooltip", "[", 
               RowBox[{
                RowBox[{"ExtractPlotPoints", "[", "iso1", "]"}], ",", 
                "trait1"}], "]"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "style1nes"}], ",", 
              RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
              RowBox[{"ColorFunction", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Unevaluated", "[", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"dinv21", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], ">", "0"}], ",", 
                    "color1nes", ",", 
                    RowBox[{"{", 
                    RowBox[{"Opacity", "[", "0", "]"}], "}"}]}], "]"}], "]"}],
                  "&"}], ")"}]}]}], "]"}], ",", "\n", "\t", 
            RowBox[{"ListLinePlot", "[", 
             RowBox[{
              RowBox[{"Tooltip", "[", 
               RowBox[{
                RowBox[{"ExtractPlotPoints", "[", "iso1", "]"}], ",", 
                "trait1"}], "]"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "style1es"}], ",", 
              RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
              RowBox[{"ColorFunction", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Unevaluated", "[", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"dinv21", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], "<", "0"}], ",", 
                    "color1es", ",", 
                    RowBox[{"{", 
                    RowBox[{"Opacity", "[", "0", "]"}], "}"}]}], "]"}], "]"}],
                  "&"}], ")"}]}]}], "]"}], ",", "\n", "\t", 
            RowBox[{"ListLinePlot", "[", 
             RowBox[{
              RowBox[{"Tooltip", "[", 
               RowBox[{
                RowBox[{"ExtractPlotPoints", "[", "iso2", "]"}], ",", 
                "trait2"}], "]"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "style2nes"}], ",", 
              RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
              RowBox[{"ColorFunction", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Unevaluated", "[", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"dinv22", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], ">", "0"}], ",", 
                    "color2nes", ",", 
                    RowBox[{"{", 
                    RowBox[{"Opacity", "[", "0", "]"}], "}"}]}], "]"}], "]"}],
                  "&"}], ")"}]}]}], "]"}], ",", "\n", "\t", 
            RowBox[{"ListLinePlot", "[", 
             RowBox[{
              RowBox[{"Tooltip", "[", 
               RowBox[{
                RowBox[{"ExtractPlotPoints", "[", "iso2", "]"}], ",", 
                "trait2"}], "]"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "style2es"}], ",", 
              RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
              RowBox[{"ColorFunction", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Unevaluated", "[", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"dinv22", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], "<", "0"}], ",", 
                    "color2es", ",", 
                    RowBox[{"{", 
                    RowBox[{"Opacity", "[", "0", "]"}], "}"}]}], "]"}], "]"}],
                  "&"}], ")"}]}]}], "]"}], ",", "\n", "\t", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"Axes", "\[Rule]", "False"}], ",", 
            RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
            RowBox[{"FrameLabel", "\[Rule]", "framelabel"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"trait1min", ",", "trait1max"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"trait2min", ",", "trait2max"}], "}"}]}], "}"}]}]}], 
           "\n", "]"}], "]"}]}]}], "\n", "\n", "]"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Time", "\[Rule]", "t"}], ",", "\n", "\t", 
     RowBox[{"FitnessGradient", "\[Rule]", "\"\<DInv\>\""}], ",", 
     RowBox[{"ICs", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"EvoEquation", "\[Rule]", "\"\<QG\>\""}], ",", 
     RowBox[{"EcoAttractorNumber", "\[Rule]", "1"}], ",", 
     RowBox[{"ExcludeDiagonal", "\[Rule]", "True"}], ",", "\n", "\t", 
     RowBox[{"FindEcoAttractorOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"DInvOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"PlotOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", "Automatic"}], ",", "\n", "\t", 
     RowBox[{"ESTest", "\[Rule]", "True"}], ",", 
     RowBox[{"DelayDInv2", "\[Rule]", "False"}], ",", 
     RowBox[{"DInv2Opts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"IsoclineStyle", "\[Rule]", "Automatic"}], ",", "\n", "\t", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}], ",", 
     RowBox[{"Monitor", "\[Rule]", "False"}], ",", 
     RowBox[{"PrintTrace", "\[Rule]", "False"}]}], "}"}]}], ";"}]}], "Code",
 CellChangeTimes->{
  3.6878814594890013`*^9, {3.688571699953883*^9, 3.688571707764998*^9}, {
   3.688571769891882*^9, 3.688571771639399*^9}, 3.6885718076602488`*^9, {
   3.689164459988995*^9, 3.689164470752893*^9}, 3.6891645115035887`*^9, {
   3.6891649643228416`*^9, 3.689165013430848*^9}, 3.689165079677661*^9, {
   3.689165133332065*^9, 3.689165314937187*^9}, {3.6891729491331177`*^9, 
   3.6891729828825417`*^9}, {3.689173017440921*^9, 3.689173018177606*^9}, {
   3.689174555123795*^9, 3.6891746000179443`*^9}, {3.6892508385585413`*^9, 
   3.6892508444313297`*^9}, 3.689289452062292*^9, {3.6895501076392097`*^9, 
   3.689550197362814*^9}, {3.6895982873996143`*^9, 3.689598288654265*^9}, 
   3.693593262674309*^9, {3.696162142481098*^9, 3.6961621425471478`*^9}, {
   3.6968458351236687`*^9, 3.6968458355332003`*^9}, {3.696845912524168*^9, 
   3.696845912536572*^9}, {3.696846579768405*^9, 3.696846580160021*^9}, {
   3.699715751817182*^9, 3.699715760598668*^9}, {3.699717856378386*^9, 
   3.6997178902739077`*^9}, {3.699718767492446*^9, 3.699718770130785*^9}, 
   3.699718809688347*^9, 3.6997188441432056`*^9, {3.699718893901142*^9, 
   3.699718899684712*^9}, {3.699719012235765*^9, 3.6997190237904253`*^9}, {
   3.699719068857439*^9, 3.699719080257536*^9}, {3.699719339763303*^9, 
   3.6997193462560053`*^9}, {3.699721875692974*^9, 3.699721892821068*^9}, {
   3.699722350179969*^9, 3.69972235049475*^9}, {3.699722538958785*^9, 
   3.699722552733675*^9}, {3.709336806899913*^9, 3.70933680750506*^9}, {
   3.7101059894928017`*^9, 3.7101059900990973`*^9}, {3.710324422142239*^9, 
   3.710324422561645*^9}, {3.711621355794632*^9, 3.71162135582537*^9}, 
   3.714059650439024*^9, 3.722029524160989*^9, {3.72203416100622*^9, 
   3.722034165439373*^9}, {3.7220877737927322`*^9, 3.722087775031274*^9}, {
   3.728003865515419*^9, 3.728003865521902*^9}, {3.728004830810459*^9, 
   3.728004898114555*^9}, {3.728004980211063*^9, 3.728004985066627*^9}, {
   3.728064429809013*^9, 3.728064445571084*^9}, 3.7280646217788267`*^9, {
   3.728064875521748*^9, 3.728064932545689*^9}, {3.728064968523754*^9, 
   3.728065014337246*^9}, {3.7280650478449183`*^9, 3.728065053674878*^9}, {
   3.728065618287614*^9, 3.728065707463326*^9}, {3.728065739255266*^9, 
   3.728065776495427*^9}, {3.728065918812108*^9, 3.728065920577475*^9}, {
   3.72806595198687*^9, 3.728066008870903*^9}, {3.728066056042964*^9, 
   3.7280660865460787`*^9}, {3.72806619369306*^9, 3.72806621019746*^9}, {
   3.7280662559645777`*^9, 3.728066256205336*^9}, {3.728066337826613*^9, 
   3.728066359881103*^9}, {3.728066849905733*^9, 3.728066863041307*^9}, {
   3.7280670744910803`*^9, 3.7280670961117897`*^9}, {3.7280671269544563`*^9, 
   3.728067150339978*^9}, {3.728067196101091*^9, 3.728067220856*^9}, {
   3.728067430364223*^9, 3.728067430924284*^9}, {3.728068288204021*^9, 
   3.728068288762804*^9}, {3.7280690098849783`*^9, 3.728069016561344*^9}, {
   3.728069069362385*^9, 3.728069113615983*^9}, {3.728069162700776*^9, 
   3.7280691838128347`*^9}, {3.728069213962969*^9, 3.728069258257434*^9}, {
   3.7280804276287737`*^9, 3.728080437898258*^9}, {3.728080638128067*^9, 
   3.728080717923985*^9}, {3.728080756346081*^9, 3.72808077853913*^9}, {
   3.728140189315607*^9, 3.7281402004676657`*^9}, {3.72814023312665*^9, 
   3.7281402398847322`*^9}, 3.7281403036792593`*^9, {3.728140391911646*^9, 
   3.7281404610450974`*^9}, {3.728140538636935*^9, 3.728140561469632*^9}, {
   3.7281435639263144`*^9, 3.728143649009647*^9}, {3.728143705646101*^9, 
   3.728143708171414*^9}, {3.728144393777358*^9, 3.728144395395755*^9}, {
   3.7281444312668533`*^9, 3.728144476984909*^9}, {3.728144518173176*^9, 
   3.728144561330633*^9}, {3.728144609869947*^9, 3.728144640595318*^9}, {
   3.7281446858814363`*^9, 3.72814474427623*^9}, {3.728156802598259*^9, 
   3.7281568179433403`*^9}, {3.728156852376233*^9, 3.72815686878769*^9}, {
   3.7281569176659718`*^9, 3.728156935807035*^9}, {3.7281569865465117`*^9, 
   3.728157116775816*^9}, {3.728157443345725*^9, 3.728157464799403*^9}, {
   3.728157621752425*^9, 3.728157696961872*^9}, {3.728158156123822*^9, 
   3.728158183702548*^9}, {3.728158236499277*^9, 3.728158240502043*^9}, {
   3.728158305500226*^9, 3.7281583077981977`*^9}, {3.728158351886965*^9, 
   3.7281583580886602`*^9}, {3.728158522084908*^9, 3.728158544343421*^9}, {
   3.728158579180567*^9, 3.728158595223648*^9}, {3.728159887086486*^9, 
   3.728159926055706*^9}, {3.728160350540004*^9, 3.728160377762652*^9}, {
   3.728174958945052*^9, 3.728174999402115*^9}, {3.728175275134789*^9, 
   3.728175278071971*^9}, {3.7281753343455467`*^9, 3.728175532955903*^9}, {
   3.728175673817855*^9, 3.728175681226684*^9}, {3.728224254636993*^9, 
   3.728224257855564*^9}, {3.728224412942518*^9, 3.728224458116488*^9}, {
   3.7282245048340282`*^9, 3.728224598853252*^9}, {3.72822466380914*^9, 
   3.728224771162291*^9}, {3.728224820210228*^9, 3.728224827375785*^9}, {
   3.728224868954187*^9, 3.7282248784277077`*^9}, {3.728224938044064*^9, 
   3.728224993062986*^9}, {3.728233896003972*^9, 3.7282339184966784`*^9}, {
   3.728234231588657*^9, 3.728234238944244*^9}, {3.7282572175110073`*^9, 
   3.728257282798112*^9}, {3.7282577394185123`*^9, 3.7282577588342867`*^9}, {
   3.728257810295516*^9, 3.7282578165297117`*^9}, {3.7282583614475737`*^9, 
   3.728258430024981*^9}, {3.7282597404773293`*^9, 3.728259756962343*^9}, {
   3.728259796259425*^9, 3.7282598192714987`*^9}, {3.7282600947054777`*^9, 
   3.728260174965962*^9}, {3.728260289087376*^9, 3.7282603425894747`*^9}, {
   3.728260420484344*^9, 3.728260498175748*^9}, {3.728260558564913*^9, 
   3.7282606455252657`*^9}, {3.7282608036711617`*^9, 
   3.7282608803484583`*^9}, {3.728261829514402*^9, 3.728261918579928*^9}, {
   3.7282619486484423`*^9, 3.728261971303804*^9}, {3.728262005908387*^9, 
   3.728262022308351*^9}, {3.728262072881287*^9, 3.728262116841648*^9}, {
   3.7282622460853443`*^9, 3.728262305899865*^9}, {3.7282623724545393`*^9, 
   3.728262374438142*^9}, {3.728262487014135*^9, 3.72826249361665*^9}, {
   3.7282625743952293`*^9, 3.728262585947839*^9}, {3.728262727833403*^9, 
   3.728262785566162*^9}, {3.728262891405097*^9, 3.728262902051161*^9}, {
   3.7282629427580853`*^9, 3.72826296831098*^9}, {3.7282978354035673`*^9, 
   3.728298031486878*^9}, {3.728321615558627*^9, 3.728321631729383*^9}, {
   3.7283217974507732`*^9, 3.728321829228526*^9}, {3.728321926827709*^9, 
   3.728322073242839*^9}, {3.728322103350535*^9, 3.728322134172978*^9}, {
   3.728322564078043*^9, 3.7283225654158297`*^9}, {3.728326083415308*^9, 
   3.728326113794383*^9}, {3.728326152613716*^9, 3.728326163938983*^9}, {
   3.728326353848483*^9, 3.72832637123834*^9}, {3.728326401585313*^9, 
   3.728326427190529*^9}, {3.728326485907069*^9, 3.728326613809135*^9}, {
   3.728326656246347*^9, 3.728326724904603*^9}, {3.728327027253436*^9, 
   3.7283270328426027`*^9}, {3.7283369029286737`*^9, 3.728336944578652*^9}, {
   3.7283369970114202`*^9, 3.728337266535069*^9}, {3.728339520206999*^9, 
   3.728339528821509*^9}, {3.728339965975909*^9, 3.728339966534225*^9}, {
   3.7284048165495367`*^9, 3.728404839100012*^9}, {3.728433618231145*^9, 
   3.728433620411632*^9}, {3.7284337062108717`*^9, 3.728433715008863*^9}, {
   3.7284337674070177`*^9, 3.728433798604463*^9}, {3.728433958006927*^9, 
   3.728434046583621*^9}, {3.728436838720706*^9, 3.728436847438705*^9}, {
   3.7284378472234173`*^9, 3.728437859299632*^9}, {3.7284771713688993`*^9, 
   3.7284772096247673`*^9}, {3.728477245340866*^9, 3.728477270426364*^9}, {
   3.728477767139233*^9, 3.728477781716845*^9}, {3.728477838615637*^9, 
   3.728477850309677*^9}, {3.72847811355781*^9, 3.72847815653059*^9}, {
   3.728478790561802*^9, 3.7284788228665657`*^9}, {3.728479488897694*^9, 
   3.728479513146933*^9}, {3.72848183658278*^9, 3.7284818739373703`*^9}, {
   3.72848261827427*^9, 3.7284826368404703`*^9}, {3.7284835686169024`*^9, 
   3.7284835815820007`*^9}, {3.7284838389135303`*^9, 
   3.7284838433098173`*^9}, {3.728484211871472*^9, 3.728484266539307*^9}, {
   3.728484299178767*^9, 3.728484311795273*^9}, {3.728484485013381*^9, 
   3.728484485976741*^9}, {3.728484521218224*^9, 3.72848452505655*^9}, {
   3.728484732686821*^9, 3.728484738487377*^9}, {3.7284932841195583`*^9, 
   3.728493350967661*^9}, 3.728493472445822*^9, {3.728493720292115*^9, 
   3.7284937208510447`*^9}, {3.728494307242235*^9, 3.728494312973021*^9}, {
   3.728494489669641*^9, 3.7284945467259827`*^9}, {3.728495774389407*^9, 
   3.728495797339725*^9}, {3.728495853063971*^9, 3.728495855437986*^9}, {
   3.7284960837862663`*^9, 3.728496102812055*^9}, {3.728496427177184*^9, 
   3.728496427570589*^9}, {3.728496592644368*^9, 3.728496599361496*^9}, {
   3.728497031974177*^9, 3.72849705960752*^9}, {3.728497347637471*^9, 
   3.728497380243092*^9}, {3.728497587037928*^9, 3.728497589868354*^9}, 
   3.728497799230768*^9, {3.7284983852219353`*^9, 3.728498385773315*^9}, {
   3.728498641947688*^9, 3.7284986472325783`*^9}, {3.728498861001738*^9, 
   3.728498885776182*^9}, {3.728510968880827*^9, 3.728511032083125*^9}, {
   3.728511203461444*^9, 3.728511219569695*^9}, {3.728511263364973*^9, 
   3.728511264621752*^9}, {3.728511517064052*^9, 3.728511517273555*^9}, {
   3.728519913633072*^9, 3.728519920235322*^9}, {3.728520625700643*^9, 
   3.728520626137554*^9}, {3.728520742039433*^9, 3.728520757999838*^9}, {
   3.728520964854494*^9, 3.7285210085953283`*^9}, {3.7285212278878937`*^9, 
   3.7285212977469273`*^9}, {3.728521383347781*^9, 3.728521398267646*^9}, {
   3.7285214459711723`*^9, 3.728521513584593*^9}, {3.7285215744696207`*^9, 
   3.728521585431163*^9}, {3.7285216705505877`*^9, 3.728521673715851*^9}, {
   3.728521721939542*^9, 3.728521727383099*^9}, {3.7285221091668787`*^9, 
   3.728522117465197*^9}, {3.728522304161846*^9, 3.7285223087413263`*^9}, {
   3.7285231423322973`*^9, 3.728523148553574*^9}, {3.728523538185095*^9, 
   3.728523539395101*^9}, {3.728523593744919*^9, 3.7285235945587473`*^9}, {
   3.72852365789041*^9, 3.7285237759731693`*^9}, {3.7285242824596043`*^9, 
   3.728524283065127*^9}, {3.728579463928833*^9, 3.728579512413872*^9}, {
   3.72857956442381*^9, 3.728579583476493*^9}, {3.728579708762484*^9, 
   3.728579737305962*^9}, {3.728579827777339*^9, 3.728579834712099*^9}, {
   3.728579949194097*^9, 3.728579962600582*^9}, {3.728580024183042*^9, 
   3.728580034490384*^9}, {3.728581090235758*^9, 3.728581117218026*^9}, {
   3.728581343048872*^9, 3.7285813844996443`*^9}, {3.728581438830196*^9, 
   3.7285814923088713`*^9}, {3.7285815569932003`*^9, 
   3.7285815920358057`*^9}, {3.728581670070799*^9, 3.7285816826163473`*^9}, {
   3.72858172976158*^9, 3.728581741985574*^9}, {3.728581777902054*^9, 
   3.728581885027145*^9}, {3.7285819334695377`*^9, 3.728581945348612*^9}, {
   3.728581980670126*^9, 3.728581991685026*^9}, {3.728582133888763*^9, 
   3.7285822359386463`*^9}, {3.72925877664933*^9, 3.7292588391894817`*^9}, {
   3.729259634887621*^9, 3.729259697188465*^9}, {3.729260163039318*^9, 
   3.729260172343327*^9}, {3.72926030872617*^9, 3.72926031638603*^9}, {
   3.729260467222185*^9, 3.7292604809615297`*^9}, 3.7292608082671547`*^9, {
   3.729260890909802*^9, 3.729260903778203*^9}, {3.729260958660063*^9, 
   3.729261004404241*^9}, 3.7292613156396646`*^9, {3.729262111512918*^9, 
   3.729262152308267*^9}, {3.7292622105452843`*^9, 3.7292623179372787`*^9}, {
   3.729262474984887*^9, 3.729262493502987*^9}, {3.729263118330203*^9, 
   3.729263176489319*^9}, {3.729263326160598*^9, 3.7292633502582483`*^9}, {
   3.7292635304800997`*^9, 3.729263533031094*^9}, {3.729264310103199*^9, 
   3.729264335973597*^9}, {3.729264553910914*^9, 3.729264570340673*^9}, {
   3.729264979077066*^9, 3.729264997385151*^9}, 3.7292650821419888`*^9, {
   3.729265654701692*^9, 3.729265703646429*^9}, {3.7292657472931232`*^9, 
   3.729265758777318*^9}, {3.729265907176218*^9, 3.72926602031435*^9}, {
   3.7292670907399883`*^9, 3.729267093778804*^9}, {3.7292680691224003`*^9, 
   3.729268074452829*^9}, {3.7292686635056*^9, 3.729268728252473*^9}, {
   3.7292693039805737`*^9, 3.729269325697414*^9}, {3.729271311838616*^9, 
   3.7292713336096373`*^9}, {3.729279698202639*^9, 3.72927974854849*^9}, {
   3.7292812163203382`*^9, 3.729281258963656*^9}, {3.729281962288897*^9, 
   3.729281963433771*^9}, {3.729285589581912*^9, 3.729285648379578*^9}, {
   3.729295266191888*^9, 3.729295299843636*^9}, {3.729295331093285*^9, 
   3.729295569675976*^9}, {3.7292956006563473`*^9, 3.729295674001246*^9}, 
   3.729296104494722*^9, {3.729528243805068*^9, 3.7295282635266943`*^9}, {
   3.729529345442833*^9, 3.7295293548164177`*^9}, {3.755373533476985*^9, 
   3.755373535195527*^9}, {3.755450421916359*^9, 
   3.755450424890173*^9}},ExpressionUUID->"863835c9-e3ee-4817-ab32-\
188bab86501d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotEvoIsoclines", "[", 
    RowBox[{
     RowBox[{"solin1", ":", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"_", "?", "RuleListQ"}], "|", 
        RowBox[{"_", "?", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#", "\[Equal]", "\"\<FindEcoAttractor\>\""}], "&"}], 
          ")"}]}]}], ")"}], ":", "\"\<FindEcoAttractor\>\""}], ",", 
     RowBox[{"Gs_List:", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"trait1_", ",", 
       RowBox[{"trait1min_", "?", "NumericQ"}], ",", 
       RowBox[{"trait1max_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
   RowBox[{"PlotEvoIsoclines", "[", 
    RowBox[{"solin1", ",", "Gs", ",", 
     RowBox[{"{", 
      RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SubscriptAdd", "[", "trait1", "]"}], ",", "trait1min", ",", 
       "trait1max"}], "}"}], ",", "opts"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.72840354707022*^9, 3.7284035571377773`*^9}, {
  3.728403598467949*^9, 3.728403638407946*^9}, {3.728404200503545*^9, 
  3.728404204503395*^9}, {3.728404478589267*^9, 3.7284045181220627`*^9}, {
  3.728404779998283*^9, 3.728404795877049*^9}, {3.728405695019418*^9, 
  3.728405700812039*^9}},
 CellLabel->
  "In[593]:=",ExpressionUUID->"aeeb44f6-0e44-4419-9b3b-38951b48ed21"]
}, Closed]],

Cell[CellGroupData[{

Cell["PlotEvoPhasePlane", "Subsection",
 CellDingbat->"\[ClubSuit]",
 CellChangeTimes->{{3.727659844495472*^9, 3.727659854638974*^9}, {
  3.727709833007156*^9, 
  3.727709834754821*^9}},ExpressionUUID->"31f8cf0a-32b4-4d00-be2f-\
2fd2072a2ade"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"two", " ", "guilds"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"PlotEvoPhasePlane", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"eq11", ":", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"_", "?", "RuleListQ"}], "|", 
           RowBox[{"_", "?", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#", "\[Equal]", "\"\<FindEcoAttractor\>\""}], "&"}], 
             ")"}]}]}], ")"}], ":", "\"\<FindEcoAttractor\>\""}], ",", 
        RowBox[{"eq12", ":", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"_", "?", "RuleListQ"}], "|", 
           RowBox[{"_", "?", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#", "\[Equal]", "\"\<FindEcoAttractor\>\""}], "&"}], 
             ")"}]}]}], ")"}], ":", "\"\<FindEcoAttractor\>\""}]}], "}"}], 
      ",", "\n", 
      RowBox[{"eq2", ":", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"_", "?", "RuleListQ"}], "|", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "\[Equal]", "\"\<FindEcoAttractor\>\""}], "&"}], 
           ")"}]}]}], ")"}], ":", "\"\<FindEcoAttractor\>\""}], ",", 
      RowBox[{"Gs", ":", 
       RowBox[{"(", 
        RowBox[{"_", "?", "RuleListQ"}], ")"}], ":", 
       RowBox[{"{", "}"}]}], ",", "\n", 
      RowBox[{"{", 
       RowBox[{"trait1_", ",", 
        RowBox[{"trait1min_", "?", "NumericQ"}], ",", 
        RowBox[{"trait1max_", "?", "NumericQ"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"trait2_", ",", 
        RowBox[{"trait2min_", "?", "NumericQ"}], ",", 
        RowBox[{"trait2max_", "?", "NumericQ"}]}], "}"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"func", "=", 
         RowBox[{"FuncStyle", "[", "\"\<PlotEvoIsoclines (2Gu)\>\"", "]"}]}], 
        ",", "\n", 
        RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "plotmipopts", ",", 
        "plotevoisoclinesopts", ",", "plotevostreamsopts", ",", "verbose", 
        ",", "verboseall", ",", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "pes", ",", 
        "pei", ",", "mip"}], "}"}], ",", "\n", "\n", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
         RowBox[{
          RowBox[{"Msg", "[", 
           RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
          RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
       RowBox[{"plotmipopts", "=", 
        RowBox[{"FilterRules", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{"PlotMIPOpts", "/.", 
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{"opts", ",", 
                  RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}],
                 "]"}]}], "]"}], ",", "opts", ",", 
             RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}], 
           "]"}], ",", 
          RowBox[{"Options", "[", "PlotMIP", "]"}]}], "]"}]}], ";", "\n", 
       RowBox[{"plotevoisoclinesopts", "=", 
        RowBox[{"FilterRules", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{"PlotEvoIsoclinesOpts", "/.", 
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{"opts", ",", 
                  RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}],
                 "]"}]}], "]"}], ",", "opts", ",", 
             RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}], 
           "]"}], ",", 
          RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"plotevostreamsopts", "=", 
        RowBox[{"FilterRules", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{"PlotEvoStreamsOpts", "/.", 
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{"opts", ",", 
                  RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}],
                 "]"}]}], "]"}], ",", "opts", ",", 
             RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}], 
           "]"}], ",", 
          RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "]"}]}], ";", 
       "\n", "\n", 
       RowBox[{"verbose", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Verbose", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}], 
           "]"}]}], "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
       RowBox[{"verboseall", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"VerboseAll", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}], 
           "]"}]}], "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"verboseall", ",", 
         RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"verbose", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
       "\n", 
       RowBox[{"pes", "=", 
        RowBox[{"PlotEvoStreams", "[", 
         RowBox[{"eq2", ",", "Gs", ",", 
          RowBox[{"{", 
           RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"trait2", ",", "trait2min", ",", "trait2max"}], "}"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Sequence", "@@", "plotevostreamsopts"}], "]"}]}], "]"}]}],
        ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"Print", "[", "pes", "]"}]}], "]"}], ";", "\n", 
       RowBox[{"pei", "=", 
        RowBox[{"PlotEvoIsoclines", "[", 
         RowBox[{"eq2", ",", "Gs", ",", 
          RowBox[{"{", 
           RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"trait2", ",", "trait2min", ",", "trait2max"}], "}"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Sequence", "@@", "plotevoisoclinesopts"}], "]"}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"Print", "[", "pei", "]"}]}], "]"}], ";", "\n", 
       RowBox[{"mip", "=", 
        RowBox[{"PlotMIP", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"eq11", ",", "eq12"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"trait2", ",", "trait2min", ",", "trait2max"}], "}"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Sequence", "@@", "plotmipopts"}], "]"}], ",", 
          RowBox[{"InvStyle", "\[Rule]", 
           RowBox[{"Opacity", "[", "0", "]"}]}]}], "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"Print", "[", "mip", "]"}]}], "]"}], ";", "\n", "\n", 
       RowBox[{"Return", "[", 
        RowBox[{"Show", "[", 
         RowBox[{"pes", ",", "pei", ",", "mip"}], "]"}], "]"}]}]}], "\n", 
     "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.724697019447146*^9, 3.7246970213031073`*^9}, {
   3.72469706642633*^9, 3.724697169129353*^9}, {3.724697214664596*^9, 
   3.724697285641739*^9}, {3.7246981011806183`*^9, 3.7246981736502657`*^9}, {
   3.724698239213654*^9, 3.72469856298286*^9}, {3.724698642137356*^9, 
   3.724698644407136*^9}, {3.72470046389673*^9, 3.724700464286851*^9}, {
   3.724700506231979*^9, 3.724700519840026*^9}, {3.724700566433387*^9, 
   3.724700646902779*^9}, {3.724700774292193*^9, 3.724700778871992*^9}, {
   3.724700826917376*^9, 3.724700830923256*^9}, {3.7247009950713873`*^9, 
   3.724700999429072*^9}, {3.724701287371686*^9, 3.724701300580534*^9}, {
   3.724720978370154*^9, 3.724720983308675*^9}, 3.7251409582546988`*^9, {
   3.728068475006645*^9, 3.728068592342936*^9}, {3.728068632884219*^9, 
   3.728068768467743*^9}, {3.7283432206724977`*^9, 3.728343364836041*^9}, {
   3.7283483012665043`*^9, 3.7283483217739477`*^9}, {3.728348374484375*^9, 
   3.728348396988353*^9}, {3.728348486878311*^9, 3.728348503742139*^9}, {
   3.72834862680094*^9, 3.728348633360413*^9}, {3.728348663588517*^9, 
   3.72834866399977*^9}, {3.728404888603395*^9, 3.728404898454838*^9}, {
   3.728405037260271*^9, 3.728405060744746*^9}, {3.728405119257813*^9, 
   3.72840513247054*^9}, {3.728405318909446*^9, 3.728405332906982*^9}, {
   3.7285861557564774`*^9, 3.728586157112397*^9}, {3.728586198123879*^9, 
   3.7285862004153*^9}, {3.728587415797456*^9, 3.728587435881077*^9}, {
   3.728588271458798*^9, 3.728588276303328*^9}, {3.728783962856596*^9, 
   3.7287839928313637`*^9}, {3.728819296611228*^9, 3.728819308981386*^9}, {
   3.72881937632827*^9, 3.728819445087624*^9}, {3.7288194833672237`*^9, 
   3.728819605143322*^9}, {3.728819745131226*^9, 3.728819770465191*^9}, {
   3.728820247801571*^9, 3.7288202635096493`*^9}, {3.728820831502689*^9, 
   3.7288208878989973`*^9}, {3.728820949063464*^9, 3.72882094945986*^9}, {
   3.728820989629331*^9, 3.728821019958041*^9}, {3.7288315864232407`*^9, 
   3.728831598759779*^9}, {3.728862777260141*^9, 3.7288627878439713`*^9}, {
   3.728862834945445*^9, 3.728862865193548*^9}, {3.729283934794714*^9, 
   3.729283942445722*^9}, 3.729283996525744*^9},
 CellLabel->
  "In[594]:=",ExpressionUUID->"652f12f1-ec5b-4ec5-a966-1d2f27a6f5df"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"two", " ", "species"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"PlotEvoPhasePlane", "[", 
     RowBox[{
      RowBox[{"eq1", ":", 
       RowBox[{"(", 
        RowBox[{"_", "?", "RuleListQ"}], ")"}], ":", 
       "\"\<FindEcoAttractor\>\""}], ",", 
      RowBox[{"eq2", ":", 
       RowBox[{"(", 
        RowBox[{"_", "?", "RuleListQ"}], ")"}], ":", 
       "\"\<FindEcoAttractor\>\""}], ",", 
      RowBox[{"Gs", ":", 
       RowBox[{"(", 
        RowBox[{"_", "?", "RuleListQ"}], ")"}], ":", 
       RowBox[{"{", "}"}]}], ",", "\n", 
      RowBox[{"{", 
       RowBox[{"trait1_", ",", 
        RowBox[{"trait1min_", "?", "NumericQ"}], ",", 
        RowBox[{"trait1max_", "?", "NumericQ"}]}], "}"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"func", "=", 
         RowBox[{"FuncStyle", "[", "\"\<PlotEvoIsoclines (2Sp)\>\"", "]"}]}], 
        ",", "\n", 
        RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "plotmipopts", ",", 
        "plotevoisoclinesopts", ",", "plotevostreamsopts", ",", "verbose", 
        ",", "verboseall", ",", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "pes", ",", 
        "pei", ",", "mip"}], "}"}], ",", "\n", "\n", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
         RowBox[{
          RowBox[{"Msg", "[", 
           RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
          RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
       RowBox[{"plotmipopts", "=", 
        RowBox[{"FilterRules", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{"PlotMIPOpts", "/.", 
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{"opts", ",", 
                  RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}],
                 "]"}]}], "]"}], ",", "opts", ",", 
             RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}], 
           "]"}], ",", 
          RowBox[{"Options", "[", "PlotMIP", "]"}]}], "]"}]}], ";", "\n", 
       RowBox[{"plotevoisoclinesopts", "=", 
        RowBox[{"FilterRules", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{"PlotEvoIsoclinesOpts", "/.", 
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{"opts", ",", 
                  RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}],
                 "]"}]}], "]"}], ",", "opts", ",", 
             RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}], 
           "]"}], ",", 
          RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"plotevostreamsopts", "=", 
        RowBox[{"FilterRules", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{"PlotEvoStreamsOpts", "/.", 
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{"opts", ",", 
                  RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}],
                 "]"}]}], "]"}], ",", "opts", ",", 
             RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}], 
           "]"}], ",", 
          RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "]"}]}], ";", 
       "\n", "\n", 
       RowBox[{"verbose", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Verbose", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}], 
           "]"}]}], "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
       RowBox[{"verboseall", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"VerboseAll", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}], 
           "]"}]}], "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"verboseall", ",", 
         RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"verbose", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
       "\n", 
       RowBox[{"pes", "=", 
        RowBox[{"PlotEvoStreams", "[", 
         RowBox[{"eq2", ",", "Gs", ",", 
          RowBox[{"{", 
           RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Sequence", "@@", "plotevostreamsopts"}], "]"}]}], "]"}]}],
        ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"Print", "[", "pes", "]"}]}], "]"}], ";", "\n", 
       RowBox[{"pei", "=", 
        RowBox[{"PlotEvoIsoclines", "[", 
         RowBox[{"eq2", ",", "Gs", ",", 
          RowBox[{"{", 
           RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Sequence", "@@", "plotevoisoclinesopts"}], "]"}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"Print", "[", "pei", "]"}]}], "]"}], ";", "\n", 
       RowBox[{"mip", "=", 
        RowBox[{"PlotMIP", "[", 
         RowBox[{"eq1", ",", 
          RowBox[{"{", 
           RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Sequence", "@@", "plotmipopts"}], "]"}], ",", 
          RowBox[{"InvStyle", "\[Rule]", 
           RowBox[{"Opacity", "[", "0", "]"}]}]}], "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"Print", "[", "mip", "]"}]}], "]"}], ";", "\n", "\n", 
       RowBox[{"Return", "[", 
        RowBox[{"Show", "[", 
         RowBox[{"pes", ",", "pei", ",", "mip"}], "]"}], "]"}]}]}], "\n", 
     "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.724697019447146*^9, 3.7246970213031073`*^9}, {
   3.72469706642633*^9, 3.724697169129353*^9}, {3.724697214664596*^9, 
   3.724697285641739*^9}, {3.7246981011806183`*^9, 3.7246981736502657`*^9}, {
   3.724698239213654*^9, 3.72469856298286*^9}, {3.724698642137356*^9, 
   3.724698644407136*^9}, {3.72470046389673*^9, 3.724700464286851*^9}, {
   3.724700506231979*^9, 3.724700519840026*^9}, {3.724700566433387*^9, 
   3.724700646902779*^9}, {3.724700774292193*^9, 3.724700778871992*^9}, {
   3.724700826917376*^9, 3.724700830923256*^9}, {3.7247009950713873`*^9, 
   3.724700999429072*^9}, {3.724701287371686*^9, 3.724701300580534*^9}, {
   3.724720978370154*^9, 3.724720983308675*^9}, 3.7251409582546988`*^9, {
   3.728068475006645*^9, 3.728068592342936*^9}, {3.728068632884219*^9, 
   3.728068768467743*^9}, {3.7283432206724977`*^9, 3.728343364836041*^9}, {
   3.7283483012665043`*^9, 3.7283483217739477`*^9}, {3.728348374484375*^9, 
   3.728348396988353*^9}, {3.728348486878311*^9, 3.728348503742139*^9}, {
   3.72834862680094*^9, 3.728348633360413*^9}, {3.728348663588517*^9, 
   3.72834866399977*^9}, {3.728404888603395*^9, 3.728404898454838*^9}, {
   3.728405037260271*^9, 3.728405060744746*^9}, {3.728405119257813*^9, 
   3.72840513247054*^9}, {3.7284051881871643`*^9, 3.7284052034968157`*^9}, {
   3.72840530370956*^9, 3.7284053366663094`*^9}, {3.728405562320778*^9, 
   3.728405573156622*^9}, {3.728405755321515*^9, 3.7284057558381863`*^9}, {
   3.7285859655432863`*^9, 3.728586011519703*^9}, {3.728586047723196*^9, 
   3.72858605137455*^9}, {3.7285861298359003`*^9, 3.728586132108142*^9}, {
   3.7285862096237*^9, 3.728586242317133*^9}, {3.728819782232469*^9, 
   3.728819815422716*^9}, 3.728819845617803*^9, {3.728820268413364*^9, 
   3.728820276597756*^9}, {3.72882086739633*^9, 3.728820885410128*^9}, {
   3.728820956365056*^9, 3.728820986973351*^9}, {3.728821027957884*^9, 
   3.728821039324916*^9}, {3.7288299835716887`*^9, 3.728829987187573*^9}, 
   3.728830357243328*^9, {3.72883157217584*^9, 3.728831604950646*^9}, {
   3.728862792855522*^9, 3.72886279603894*^9}, {3.728862872837451*^9, 
   3.7288628909994802`*^9}, 3.729283948614894*^9, {3.729283987685912*^9, 
   3.729283989670929*^9}},
 CellLabel->
  "In[595]:=",ExpressionUUID->"6f9bb147-4beb-4291-839c-51da4dceac41"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"two", " ", "traits"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"PlotEvoPhasePlane", "[", 
     RowBox[{
      RowBox[{"eq0", ":", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"_", "?", "RuleListQ"}], "|", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "\[Equal]", "\"\<FindEcoAttractor\>\""}], "&"}], 
           ")"}]}]}], ")"}], ":", "\"\<FindEcoAttractor\>\""}], ",", 
      RowBox[{"eq1", ":", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"_", "?", "RuleListQ"}], "|", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "\[Equal]", "\"\<FindEcoAttractor\>\""}], "&"}], 
           ")"}]}]}], ")"}], ":", "\"\<FindEcoAttractor\>\""}], ",", "\n", 
      RowBox[{"Gs", ":", 
       RowBox[{"(", 
        RowBox[{"_", "?", "RuleListQ"}], ")"}], ":", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"trait1_", ",", 
        RowBox[{"trait1min_", "?", "NumericQ"}], ",", 
        RowBox[{"trait1max_", "?", "NumericQ"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"trait2_", ",", 
        RowBox[{"trait2min_", "?", "NumericQ"}], ",", 
        RowBox[{"trait2max_", "?", "NumericQ"}]}], "}"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"func", "=", 
         RowBox[{"FuncStyle", "[", "\"\<PlotEvoIsoclines (2Tr)\>\"", "]"}]}], 
        ",", "\n", 
        RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "plotzipopts", ",", 
        "plotevoisoclinesopts", ",", "plotevostreamsopts", ",", "verbose", 
        ",", "verboseall", ",", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "invader", 
        ",", "pes", ",", "pei", ",", "zip"}], "}"}], ",", "\n", "\n", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
         RowBox[{
          RowBox[{"Msg", "[", 
           RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
          RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
       RowBox[{"plotzipopts", "=", 
        RowBox[{"FilterRules", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{"PlotZIPOpts", "/.", 
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{"opts", ",", 
                  RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}],
                 "]"}]}], "]"}], ",", "opts", ",", 
             RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}], 
           "]"}], ",", 
          RowBox[{"Options", "[", "PlotZIP", "]"}]}], "]"}]}], ";", "\n", 
       RowBox[{"plotevoisoclinesopts", "=", 
        RowBox[{"FilterRules", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{"PlotEvoIsoclinesOpts", "/.", 
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{"opts", ",", 
                  RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}],
                 "]"}]}], "]"}], ",", "opts", ",", 
             RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}], 
           "]"}], ",", 
          RowBox[{"Options", "[", "PlotEvoIsoclines", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"plotevostreamsopts", "=", 
        RowBox[{"FilterRules", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{"PlotEvoStreamsOpts", "/.", 
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{"opts", ",", 
                  RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}],
                 "]"}]}], "]"}], ",", "opts", ",", 
             RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}], 
           "]"}], ",", 
          RowBox[{"Options", "[", "PlotEvoStreams", "]"}]}], "]"}]}], ";", 
       "\n", "\n", 
       RowBox[{"verbose", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Verbose", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}], 
           "]"}]}], "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
       RowBox[{"verboseall", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"VerboseAll", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}]}], "}"}], 
           "]"}]}], "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"verboseall", ",", 
         RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"verbose", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
       "\n", 
       RowBox[{"invader", "=", 
        RowBox[{"(", 
         RowBox[{"Guild", "\[Rule]", 
          RowBox[{
           RowBox[{"LookUp", "[", "trait1", "]"}], "\[LeftDoubleBracket]", 
           "2", "\[RightDoubleBracket]"}]}], ")"}]}], ";", "\n", "\n", 
       RowBox[{"pes", "=", 
        RowBox[{"PlotEvoStreams", "[", 
         RowBox[{"eq1", ",", "Gs", ",", 
          RowBox[{"{", 
           RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"trait2", ",", "trait2min", ",", "trait2max"}], "}"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Sequence", "@@", "plotevostreamsopts"}], "]"}]}], "]"}]}],
        ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"Print", "[", "pes", "]"}]}], "]"}], ";", "\n", 
       RowBox[{"pei", "=", 
        RowBox[{"PlotEvoIsoclines", "[", 
         RowBox[{"eq1", ",", "Gs", ",", 
          RowBox[{"{", 
           RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"trait2", ",", "trait2min", ",", "trait2max"}], "}"}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Sequence", "@@", "plotevoisoclinesopts"}], "]"}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"Print", "[", "pei", "]"}]}], "]"}], ";", "\n", 
       RowBox[{"zip", "=", 
        RowBox[{"PlotZIP", "[", 
         RowBox[{"eq0", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"trait1", "/.", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x_", ",", "_"}], "]"}], "\[Rule]", 
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", "0"}], "]"}]}]}], ")"}], ",", "trait1min", 
            ",", "trait1max"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"trait2", "/.", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"x_", ",", "_"}], "]"}], "\[Rule]", 
               RowBox[{"Subscript", "[", 
                RowBox[{"x", ",", "0"}], "]"}]}]}], ")"}], ",", "trait2min", 
            ",", "trait2max"}], "}"}], ",", "\n", "invader", ",", 
          RowBox[{"InvStyle", "\[Rule]", 
           RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Sequence", "@@", "plotzipopts"}], "]"}]}], "]"}]}], ";", 
       "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"Print", "[", "zip", "]"}]}], "]"}], ";", "\n", "\n", 
       RowBox[{"Return", "[", 
        RowBox[{"Show", "[", 
         RowBox[{"pes", ",", "pei", ",", "zip"}], "]"}], "]"}]}]}], "\n", 
     "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.724697019447146*^9, 3.7246970213031073`*^9}, {
   3.72469706642633*^9, 3.724697169129353*^9}, {3.724697214664596*^9, 
   3.724697285641739*^9}, {3.7246981011806183`*^9, 3.7246981736502657`*^9}, {
   3.724698239213654*^9, 3.72469856298286*^9}, {3.724698642137356*^9, 
   3.724698644407136*^9}, {3.72470046389673*^9, 3.724700464286851*^9}, {
   3.724700506231979*^9, 3.724700519840026*^9}, {3.724700566433387*^9, 
   3.724700646902779*^9}, {3.724700774292193*^9, 3.724700778871992*^9}, {
   3.724700826917376*^9, 3.724700830923256*^9}, {3.7247009950713873`*^9, 
   3.724700999429072*^9}, {3.724701287371686*^9, 3.724701300580534*^9}, {
   3.724720978370154*^9, 3.724720983308675*^9}, 3.7251409582546988`*^9, {
   3.728068475006645*^9, 3.728068592342936*^9}, {3.728068632884219*^9, 
   3.728068768467743*^9}, {3.7283432206724977`*^9, 3.728343364836041*^9}, {
   3.7283483012665043`*^9, 3.7283483217739477`*^9}, {3.728348374484375*^9, 
   3.728348396988353*^9}, {3.728348486878311*^9, 3.728348503742139*^9}, {
   3.72834862680094*^9, 3.728348633360413*^9}, {3.728348663588517*^9, 
   3.72834866399977*^9}, {3.728404888603395*^9, 3.728404898454838*^9}, {
   3.728405037260271*^9, 3.728405060744746*^9}, {3.728405119257813*^9, 
   3.72840513247054*^9}, {3.728405318909446*^9, 3.728405332906982*^9}, {
   3.7285861557564774`*^9, 3.728586157112397*^9}, {3.728586198123879*^9, 
   3.7285862004153*^9}, {3.728587415797456*^9, 3.728587435881077*^9}, {
   3.728588271458798*^9, 3.728588276303328*^9}, {3.728783962856596*^9, 
   3.7287839928313637`*^9}, {3.728819296611228*^9, 3.728819308981386*^9}, {
   3.72881937632827*^9, 3.728819445087624*^9}, {3.7288194833672237`*^9, 
   3.728819605143322*^9}, {3.728819745131226*^9, 3.728819770465191*^9}, {
   3.728819893925602*^9, 3.728819921302905*^9}, {3.728820086054214*^9, 
   3.728820185718195*^9}, {3.7288202858775053`*^9, 3.728820288733839*^9}, {
   3.728820894964156*^9, 3.72882092400508*^9}, {3.728820960892632*^9, 
   3.728820978820166*^9}, {3.728821044180765*^9, 3.7288210572207336`*^9}, {
   3.7288296167784023`*^9, 3.728829673359247*^9}, {3.728829765869041*^9, 
   3.7288297910501013`*^9}, {3.728829860386531*^9, 3.728829865041299*^9}, {
   3.728829954917862*^9, 3.7288299596499662`*^9}, {3.72883036118251*^9, 
   3.728830368278039*^9}, {3.728831247633954*^9, 3.728831321998694*^9}, {
   3.7288315349697533`*^9, 3.7288315658102007`*^9}, 3.728831611039544*^9, {
   3.728831666971657*^9, 3.728831669534005*^9}, {3.728862799818315*^9, 
   3.728862808527206*^9}, {3.72886288038385*^9, 3.728862894175058*^9}, {
   3.728862999191414*^9, 3.728863001779942*^9}, {3.7292977122325573`*^9, 
   3.729297729835682*^9}, {3.729298282334483*^9, 3.729298314467617*^9}, {
   3.7292985097817917`*^9, 3.7292985756987057`*^9}, {3.729298740283801*^9, 
   3.72929876503258*^9}, {3.7292988212312927`*^9, 3.729298837862853*^9}, {
   3.729298880696652*^9, 3.729298885250896*^9}, {3.729299156276926*^9, 
   3.7292991587709103`*^9}, {3.7292994636549788`*^9, 3.729299464105835*^9}},
 CellLabel->
  "In[596]:=",ExpressionUUID->"0332d0e0-1cfb-4e93-a060-16cd76de0fef"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"two", " ", "traits"}], " ", "-", " ", 
    RowBox[{"no", " ", "eq0", " ", "alias"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"PlotEvoPhasePlane", "[", 
     RowBox[{
      RowBox[{"eq1", ":", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"_", "?", "RuleListQ"}], "|", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "\[Equal]", "\"\<FindEcoAttractor\>\""}], "&"}], 
           ")"}]}]}], ")"}], ":", "\"\<FindEcoAttractor\>\""}], ",", "\n", 
      RowBox[{"Gs", ":", 
       RowBox[{"(", 
        RowBox[{"_", "?", "RuleListQ"}], ")"}], ":", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"trait1_", ",", 
        RowBox[{"trait1min_", "?", "NumericQ"}], ",", 
        RowBox[{"trait1max_", "?", "NumericQ"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"trait2_", ",", 
        RowBox[{"trait2min_", "?", "NumericQ"}], ",", 
        RowBox[{"trait2max_", "?", "NumericQ"}]}], "}"}], ",", 
      RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
    RowBox[{"PlotEvoPhasePlane", "[", 
     RowBox[{"\"\<FindEcoAttractor\>\"", ",", "eq1", ",", "Gs", ",", 
      RowBox[{"{", 
       RowBox[{"trait1", ",", "trait1min", ",", "trait1max"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"trait2", ",", "trait2min", ",", "trait2max"}], "}"}], ",", 
      "opts"}], "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.728830435349831*^9, 3.728830442105711*^9}, {
  3.7288310809803057`*^9, 3.728831133682495*^9}, {3.728831191111587*^9, 
  3.728831194443572*^9}},
 CellLabel->
  "In[597]:=",ExpressionUUID->"b0e38398-155e-41ae-9925-43f1aaa63f30"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PlotEvoPhasePlane", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PlotMIPOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"PlotZIPOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"PlotEvoIsoclinesOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"PlotEvoStreamsOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.7284053399560347`*^9, {3.728585440908579*^9, 3.728585450823987*^9}, {
   3.728819711431972*^9, 3.7288197153434258`*^9}},
 CellLabel->
  "In[598]:=",ExpressionUUID->"5be71ed4-d6c8-4862-804c-ba5e024d4598"]
}, Closed]],

Cell[CellGroupData[{

Cell["EcoEvoSim", "Subsection",
 CellDingbat->
  "\[ClubSuit]",ExpressionUUID->"2dea51cd-2a09-4a30-8f6d-6d62976012e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EcoEvoSim", "[", 
   RowBox[{
    RowBox[{"traits_", "?", "TraitsQ"}], ",", 
    RowBox[{"pops_", "?", "VariablesQ"}], ",", 
    RowBox[{"Gs", ":", 
     RowBox[{"(", 
      RowBox[{"_", "?", "GsQ"}], ")"}], ":", 
     RowBox[{"{", "}"}]}], ",", 
    RowBox[{"tmax_", "?", "NumericQ"}], ",", 
    RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\n", 
     RowBox[{
      RowBox[{"func", "=", 
       RowBox[{"FuncStyle", "[", "\"\<EcoEvoSim\>\"", "]"}]}], ",", "\n", 
      RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
      "verboseall", ",", "\n", "boundarydetection", ",", "ndsolveopts", ",", 
      "wheneventopts", ",", "delaydinv", ",", "fixed", ",", "tmin", ",", 
      "outputtmin", ",", "output", ",", "freezetraits", ",", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "fixedvars", 
      ",", "fixedtraits", ",", "fixedvariables", ",", "tic", ",", "ecoeqns", 
      ",", "evoeqns", ",", "eqns", ",", "ics", ",", "unks", ",", 
      "discretevars", ",", "bdwhens", ",", "res", ",", "sol"}], "}"}], ",", 
    "\n", "\n", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "Nsp", "}"}], ",", "\n", "\n", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
         RowBox[{
          RowBox[{"Msg", "[", 
           RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
          RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
       "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
       RowBox[{"verbose", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Verbose", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "EcoEvoSim", "]"}]}], "}"}], "]"}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
       RowBox[{"verboseall", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"VerboseAll", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "EcoEvoSim", "]"}]}], "}"}], "]"}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"verboseall", ",", 
         RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
       RowBox[{"boundarydetection", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"BoundaryDetection", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "EcoEvoSim", "]"}]}], "}"}], "]"}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"ndsolveopts", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"NDSolveOpts", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "EcoEvoSim", "]"}]}], "}"}], "]"}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"wheneventopts", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"WhenEventOpts", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "EcoEvoSim", "]"}]}], "}"}], "]"}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"delaydinv", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"DelayDInv", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "EcoEvoSim", "]"}]}], "}"}], "]"}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"fixed", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Fixed", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "EcoEvoSim", "]"}]}], "}"}], "]"}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"tmin", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"TMin", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "EcoEvoSim", "]"}]}], "}"}], "]"}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"outputtmin", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"OutputTMin", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "EcoEvoSim", "]"}]}], "}"}], "]"}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"output", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Output", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "EcoEvoSim", "]"}]}], "}"}], "]"}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"freezetraits", "=", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"FreezeTraits", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"opts", ",", 
             RowBox[{"Options", "[", "EcoEvoSim", "]"}]}], "}"}], "]"}]}], 
         "]"}]}], ";", "\n", "\n", 
       RowBox[{"fixedvars", "=", 
        RowBox[{"fixed", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
       RowBox[{"fixedtraits", "=", 
        RowBox[{"ExtractTraits", "[", "fixed", "]"}]}], ";", "\n", 
       RowBox[{"fixedvariables", "=", 
        RowBox[{"ExtractVariables", "[", "fixed", "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"Global`debug", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"func", ",", "\"\<: fixedvars=\>\"", ",", "fixedvars"}], 
          "]"}]}], "]"}], ";", "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{
        "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
         "in", " ", "guilds"}], " ", "*)"}], "\n", 
       RowBox[{"SetNsp", "[", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{"traits", ",", "fixedtraits"}], "]"}], ",", 
         RowBox[{"Join", "[", 
          RowBox[{"pops", ",", "fixedvariables"}], "]"}]}], "]"}], ";", "\n", 
       
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Nsp=\>\"", ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Nsp", "[", "gu", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "]"}], ";"}], 
        "*)"}], "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"find", " ", "time", " ", "for", " ", "ICs"}], " ", "*)"}], 
       "\n", 
       RowBox[{"tic", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelwhenevents", "\[Equal]", 
           RowBox[{"{", "}"}]}], ",", "tmin", ",", 
          RowBox[{"tmin", "-", "$MachineEpsilon"}]}], "]"}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "hack", " ", "to", " ", "ensure", " ", "that", " ", "events", " ", 
          "are", " ", "triggered", " ", "at", " ", "t"}], "=", "tmin"}], " ", 
        "*)"}], "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"set", " ", "up", " ", "ecoeqns"}], " ", "&"}], " ", 
         "evoeqns"}], " ", "*)"}], "\n", 
       RowBox[{"ecoeqns", "=", 
        RowBox[{
         RowBox[{"EcoEqns", "[", 
          RowBox[{"BlankTraits", ",", "opts"}], "]"}], "/.", "AddTraitts"}]}],
        ";", "\n", 
       RowBox[{"evoeqns", "=", 
        RowBox[{"EvoEqns", "[", 
         RowBox[{"BlankVariables", ",", "Gs", ",", "opts"}], "]"}]}], ";", 
       "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<ecoeqns=\>\"", ",", "ecoeqns"}], "]"}], ";", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<evoeqns=\>\"", ",", "evoeqns"}], "]"}], ";"}], "*)"}], 
       "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "up", " ", "unks"}], " ", "*)"}], "\n", 
       RowBox[{"unks", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"ecoeqns", ",", "evoeqns"}], "]"}], "/.", "LHS"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"var_", "'"}], "[", "t", "]"}], "\[Rule]", "var"}], ",", 
           
           RowBox[{
            RowBox[{
             RowBox[{"var_", "[", 
              RowBox[{"t", "+", "1"}], "]"}], "/", 
             RowBox[{"var_", "[", "t", "]"}]}], "\[Rule]", "var"}], ",", 
           RowBox[{
            RowBox[{"var_", "[", 
             RowBox[{"t", "+", "1"}], "]"}], "\[Rule]", "var"}]}], "}"}]}]}], 
       ";", "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "up", " ", "ics"}], " ", "*)"}], "\n", 
       RowBox[{"ics", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"var", "[", "tic", "]"}], "\[Equal]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"var", "/.", "traits"}], "/.", "pops"}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"var", ",", "unks"}], "}"}]}], "]"}]}], ";", "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"insert", " ", 
         RowBox[{"unks", "[", "]"}], " ", "for", " ", "delaydinv"}], " ", 
        "*)"}], "\n", 
       RowBox[{"If", "[", 
        RowBox[{"delaydinv", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"ecoeqns", "=", 
           RowBox[{"ecoeqns", "/.", "ToUnks"}]}], ";", "\n", "\t", 
          RowBox[{"evoeqns", "=", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"evoeqns", "/.", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"var_", "\[Rule]", "var_"}], ")"}], "\[Rule]", 
                RowBox[{"(", 
                 RowBox[{"var", "\[Rule]", 
                  RowBox[{"var", "[", "t", "]"}]}], ")"}]}]}], "/.", 
              RowBox[{
               RowBox[{"var_", "[", "t", "]"}], "\[Rule]", 
               RowBox[{
                RowBox[{"unk", "[", "var", "]"}], "[", "t", "]"}]}]}], "/.", 
             RowBox[{
              RowBox[{"var_", "[", 
               RowBox[{"t", "+", "1"}], "]"}], "\[Rule]", 
              RowBox[{
               RowBox[{"unk", "[", "var", "]"}], "[", 
               RowBox[{"t", "+", "1"}], "]"}]}]}], "/.", 
            RowBox[{
             RowBox[{
              RowBox[{"unk", "[", 
               RowBox[{"var_", "'"}], "]"}], "[", "t", "]"}], "\[Rule]", 
             RowBox[{
              RowBox[{
               RowBox[{"unk", "[", "var", "]"}], "'"}], "[", "t", "]"}]}]}]}],
           ";", "\n", "\t", 
          RowBox[{"ics", "=", 
           RowBox[{"ics", "/.", "ToUnks"}]}], ";", "\n", "\t", 
          RowBox[{"unks", "=", 
           RowBox[{"unks", "/.", "ToUnks"}]}]}]}], "\n", "]"}], ";", "\n", 
       "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"boundary", " ", "detection"}], " ", "*)"}], "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"boundarydetection", "\[Equal]", "True"}], ",", "\n", "\t", 
         RowBox[{
          RowBox[{"Which", "[", "\n", "\t\t", 
           RowBox[{
            RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], ",", 
            "\n", "\t\t", 
            RowBox[{
             RowBox[{"bdwhens", "=", 
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"WhenEvent", "[", 
                  RowBox[{"event", ",", "action", ",", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "wheneventopts"}], "]"}]}], 
                  "]"}], "/.", 
                 RowBox[{"(", 
                  RowBox[{"evoeqns", "/.", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"var_", "'"}], "[", "t", "]"}], "\[Equal]", 
                    "rhs_"}], ")"}], "\[RuleDelayed]", 
                    RowBox[{"{", "\n", "\t\t\t", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"event", "\[Rule]", 
                    RowBox[{
                    RowBox[{"var", "[", "t", "]"}], ">", 
                    RowBox[{"Max", "[", 
                    RowBox[{"range", "[", 
                    RowBox[{"var", "/.", "FromUnks"}], "]"}], "]"}]}]}], ",", 
                    
                    RowBox[{"action", "\[Rule]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"in", "[", "var", "]"}], "[", "t", "]"}], 
                    "\[Rule]", "0"}]}]}], "}"}], ",", "\n", "\t\t\t", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"event", "\[Rule]", 
                    RowBox[{
                    RowBox[{"var", "[", "t", "]"}], "<", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"range", "[", "var", "]"}], "/.", "FromUnks"}], 
                    "]"}]}]}], ",", 
                    RowBox[{"action", "\[Rule]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"in", "[", "var", "]"}], "[", "t", "]"}], 
                    "\[Rule]", "0"}]}]}], "}"}], ",", "\n", "\t\t\t", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"event", "\[Rule]", 
                    RowBox[{
                    RowBox[{"rhs", ">", "0"}], "&&", 
                    RowBox[{
                    RowBox[{"var", "[", "t", "]"}], "\[Equal]", 
                    RowBox[{"Min", "[", 
                    RowBox[{"range", "[", 
                    RowBox[{"var", "/.", "FromUnks"}], "]"}], "]"}]}]}]}], 
                    ",", 
                    RowBox[{"action", "\[Rule]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"in", "[", "var", "]"}], "[", "t", "]"}], 
                    "\[Rule]", "1"}]}]}], "}"}], ",", "\n", "\t\t\t", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"event", "\[Rule]", 
                    RowBox[{
                    RowBox[{"rhs", "<", "0"}], "&&", 
                    RowBox[{
                    RowBox[{"var", "[", "t", "]"}], "\[Equal]", 
                    RowBox[{"Max", "[", 
                    RowBox[{"range", "[", 
                    RowBox[{"var", "/.", "FromUnks"}], "]"}], "]"}]}]}]}], 
                    ",", 
                    RowBox[{"action", "\[Rule]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"in", "[", "var", "]"}], "[", "t", "]"}], 
                    "\[Rule]", "1"}]}]}], "}"}]}], "\n", "\t\t", "}"}]}]}], 
                  ")"}]}], ",", "1"}], "]"}]}], ";", "\n", "\t\t", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"Print", "[", 
                RowBox[{"func", ",", "\"\<: bdwhens=\>\""}], "]"}], ";", 
               RowBox[{"Print", "[", "bdwhens", "]"}], ";"}], "*)"}], "\n", 
             "\t\t", 
             RowBox[{"discretevars", "=", 
              RowBox[{"evoeqns", "/.", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"var_", "'"}], "[", "t", "]"}], "\[Equal]", 
                  "rhs_"}], ")"}], "\[Rule]", 
                RowBox[{"in", "[", "var", "]"}]}]}]}], ";", "\n", "\t\t", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"Print", "[", 
                RowBox[{"\"\<discretevars=\>\"", ",", "discretevars"}], "]"}],
                ";"}], "*)"}], "\n", "\t\t", 
             RowBox[{"ics", "=", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Join", "[", 
                RowBox[{"ics", ",", 
                 RowBox[{"evoeqns", "/.", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"var_", "'"}], "[", "t", "]"}], "\[Equal]", 
                    "rhs_"}], ")"}], "\[Rule]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"in", "[", "var", "]"}], "[", "0", "]"}], 
                    "\[Equal]", "1"}]}]}]}], "]"}], "]"}]}], ";", "\n", 
             "\t\t", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"Print", "[", 
                RowBox[{"\"\<ics=\>\"", ",", "ics"}], "]"}], ";"}], "*)"}], 
             "\n", "\t\t", 
             RowBox[{"evoeqns", "=", 
              RowBox[{"evoeqns", "/.", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"var_", "'"}], "[", "t", "]"}], "\[Equal]", 
                  "rhs_"}], ")"}], "\[Rule]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"var", "'"}], "[", "t", "]"}], "\[Equal]", 
                 RowBox[{"rhs", "*", 
                  RowBox[{
                   RowBox[{"in", "[", "var", "]"}], "[", "t", 
                   "]"}]}]}]}]}]}]}], "\n", "\t", ",", "\n", "\t\t", 
            RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], ",", 
            "\n", "\t\t", 
            RowBox[{
             RowBox[{"evoeqns", "=", 
              RowBox[{"evoeqns", "/.", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"var_", "[", 
                   RowBox[{"t", "+", "1"}], "]"}], "\[Equal]", "rhs_"}], 
                 ")"}], "\[Rule]", 
                RowBox[{
                 RowBox[{"var", "[", 
                  RowBox[{"t", "+", "1"}], "]"}], "\[Equal]", 
                 RowBox[{"RestrictedTo", "[", 
                  RowBox[{"rhs", ",", 
                   RowBox[{"range", "[", "var", "]"}]}], "]"}]}]}]}]}], 
             ";"}]}], "\n", "\t", "]"}], ";"}], "\n", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"bdwhens", "=", 
           RowBox[{"{", "}"}]}], ";", "\n", "\t", 
          RowBox[{"discretevars", "=", 
           RowBox[{"{", "}"}]}], ";"}]}], "\n", "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<ecoeqns=\>\"", ",", "ecoeqns"}], "]"}], ";", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<evoeqns=\>\"", ",", "evoeqns"}], "]"}], ";"}], "*)"}], 
       "\n", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"freezetraits", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"ecoeqns", "=", 
           RowBox[{"ReplaceRHS", "[", 
            RowBox[{"ecoeqns", ",", 
             RowBox[{"{", 
              RowBox[{"RemoveTraitts", ",", "traits"}], "}"}]}], "]"}]}], ";",
           "\n", "\t", 
          RowBox[{"evoeqns", "=", 
           RowBox[{"ReplaceRHS", "[", 
            RowBox[{"evoeqns", ",", 
             RowBox[{"{", 
              RowBox[{"RemoveTraitts", ",", "traits"}], "}"}]}], "]"}]}], 
          ";"}]}], "\n", "]"}], ";", "\n", 
       RowBox[{"eqns", "=", 
        RowBox[{"Join", "[", 
         RowBox[{"ecoeqns", ",", "evoeqns"}], "]"}]}], ";", "\n", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"verbose", ",", "\n", "\t", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: eqns=\>\""}], "]"}], ";", 
          RowBox[{"Print", "[", "eqns", "]"}], ";", "\n", "\t", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: ics=\>\""}], "]"}], ";", 
          RowBox[{"Print", "[", "ics", "]"}], ";", "\n", "\t", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: unks=\>\""}], "]"}], ";", 
          RowBox[{"Print", "[", "unks", "]"}], ";", "\n", "\t", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: bdwhens=\>\""}], "]"}], ";", 
          RowBox[{"Print", "[", "bdwhens", "]"}], ";", "\n", "\t", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: discretevars=\>\""}], "]"}], ";", 
          RowBox[{"Print", "[", "discretevars", "]"}], ";"}]}], "\n", "]"}], 
       ";", "\n", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"solve", " ", "it"}], " ", "*)"}], "\n", "\n", 
       RowBox[{"Which", "[", "\n", "\t", 
        RowBox[{
         RowBox[{"modeltype", "\[Equal]", "\"\<ContinuousTime\>\""}], ",", 
         "\n", "\t", 
         RowBox[{
          RowBox[{"Off", "[", 
           RowBox[{"NDSolve", "::", "wenset"}], "]"}], ";", " ", 
          RowBox[{"(*", " ", 
           RowBox[{
           "in", " ", "case", " ", "a", " ", "modelwhenevent", " ", 
            "involves", " ", "a", " ", "fixed", " ", "variable"}], " ", 
           "*)"}], "\n", "\t", 
          RowBox[{"sol", "=", 
           RowBox[{
            RowBox[{"NDSolve", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"Join", "[", 
                RowBox[{
                "eqns", ",", "ics", ",", "bdwhens", ",", "modelwhenevents"}], 
                "]"}], "]"}], ",", "unks", ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "outputtmin", ",", "tmax"}], "}"}], ",", 
              RowBox[{"DiscreteVariables", "\[Rule]", "discretevars"}], ",", 
              "\n", "\t\t", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "ndsolveopts"}], "]"}]}], "]"}], 
            "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";", 
          "\n", "\t", 
          RowBox[{"On", "[", 
           RowBox[{"NDSolve", "::", "wenset"}], "]"}], ";"}], "\n", ",", "\n",
          "\t", 
         RowBox[{"modeltype", "\[Equal]", "\"\<DiscreteTime\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Compiled", "\[Rule]", "False"}], "}"}], " ", 
            "workaround", " ", "for", " ", "bug", " ", "in", " ", 
            "RecurrenceTable", " ", "11.0", ".1"}]}], " ", "*)"}], "\n", "\t", 
         RowBox[{
          RowBox[{"res", "=", 
           RowBox[{"Transpose", "[", 
            RowBox[{"RecurrenceTable", "[", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{"eqns", ",", "ics"}], "]"}], ",", "unks", ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "tmin", ",", "tmax"}], "}"}]}], 
             RowBox[{"(*", 
              RowBox[{",", 
               RowBox[{"Method", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"Compiled", "\[Rule]", "False"}], "}"}]}]}], "*)"}], 
             "]"}], "]"}]}], ";", "\n", "\t", 
          RowBox[{"sol", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
              "unks", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
              "\[Rule]", 
              RowBox[{"TD", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Table", "[", 
                   RowBox[{"t", ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "tmin", ",", "tmax"}], "}"}]}], "]"}], 
                  ",", 
                  RowBox[{
                  "res", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}]}], "}"}], "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "unks", "]"}]}], "}"}]}], "]"}]}], 
          ";"}]}], "\n", "]"}], ";", "\n", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"delaydinv", ",", 
         RowBox[{"sol", "=", 
          RowBox[{"sol", "/.", "FromUnks"}]}]}], "]"}], ";", "\n", "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"output", "==", "\"\<FinalSlice\>\""}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"VarSort", "[", 
           RowBox[{
            RowBox[{"Chop", "[", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"FinalSlice", "[", "sol", "]"}], ",", "fixed"}], "]"}],
              "]"}], ",", 
            RowBox[{"Join", "[", 
             RowBox[{"AllVariables", ",", "AllTraits"}], "]"}]}], "]"}], 
          "]"}]}], "]"}], ";", "\n", "\n", 
       RowBox[{"Return", "[", 
        RowBox[{"VarSort", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"sol", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"fixedvar", "\[Rule]", 
               RowBox[{"Interpolation", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"tmin", ",", 
                    RowBox[{"fixedvar", "/.", "fixed"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"tmax", ",", 
                    RowBox[{"fixedvar", "/.", "fixed"}]}], "}"}]}], "}"}], 
                 ",", 
                 RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}]}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"fixedvar", ",", "fixedvars"}], "}"}]}], "]"}]}], 
           "]"}], ",", "\n", "\t", 
          RowBox[{"Join", "[", 
           RowBox[{"AllVariables", ",", "AllTraits"}], "]"}]}], "]"}], "]"}], 
       ";"}]}], "\n", "\n", "]"}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.687881459708519*^9, 3.6878814620008802`*^9}, {
   3.6885717080399113`*^9, 3.688571710024156*^9}, {3.688571771709165*^9, 
   3.688571772816881*^9}, {3.6891997016816177`*^9, 3.689199704809791*^9}, {
   3.693569531004081*^9, 3.693569533518059*^9}, {3.69356957382106*^9, 
   3.6935695741698933`*^9}, {3.6935696738539143`*^9, 3.693569677819133*^9}, {
   3.6935698047228117`*^9, 3.693569844813993*^9}, {3.693570266714691*^9, 
   3.693570280777845*^9}, {3.6935704353174553`*^9, 3.693570458139625*^9}, {
   3.693570504139751*^9, 3.693570510031801*^9}, {3.693570546228794*^9, 
   3.6935705521105623`*^9}, {3.6935706074368258`*^9, 
   3.6935706090445147`*^9}, {3.6935707324409933`*^9, 3.693570760698144*^9}, {
   3.693574871978578*^9, 3.693574874191864*^9}, {3.693575063460265*^9, 
   3.693575095144539*^9}, {3.6935751282342987`*^9, 3.693575137417612*^9}, {
   3.693575194624599*^9, 3.6935751981367893`*^9}, 3.69359318844517*^9, {
   3.693594089123968*^9, 3.693594131750291*^9}, {3.693648414531608*^9, 
   3.693648418552388*^9}, {3.693649147307433*^9, 3.693649151306587*^9}, {
   3.6936495558963623`*^9, 3.693649567763896*^9}, {3.693649698665764*^9, 
   3.693649718209277*^9}, {3.693649983014291*^9, 3.693649997242382*^9}, {
   3.693650068907185*^9, 3.693650099792047*^9}, {3.693650207173668*^9, 
   3.6936502176510973`*^9}, {3.6936502716791687`*^9, 
   3.6936504039824543`*^9}, {3.693650447098177*^9, 3.693650447238262*^9}, {
   3.693650516407405*^9, 3.693650523667107*^9}, {3.6936506012289047`*^9, 
   3.6936506014161053`*^9}, {3.693650666404994*^9, 3.693650667364908*^9}, 
   3.6937003306398773`*^9, {3.6937006609718924`*^9, 3.693700661809492*^9}, {
   3.693700831095278*^9, 3.693700898853032*^9}, {3.69370119137938*^9, 
   3.69370120184767*^9}, 3.693701251627426*^9, 3.6940327250755777`*^9, {
   3.6940329515374403`*^9, 3.694032956430676*^9}, {3.694032995983953*^9, 
   3.6940330090266*^9}, {3.694033275081205*^9, 3.694033279487762*^9}, {
   3.694033403345838*^9, 3.694033417029489*^9}, {3.6940374471747704`*^9, 
   3.694037448278808*^9}, {3.694037487148347*^9, 3.694037509461347*^9}, {
   3.694043178020327*^9, 3.694043235469736*^9}, {3.6940438426321163`*^9, 
   3.6940438430244303`*^9}, 3.694045986119381*^9, {3.6940463640701723`*^9, 
   3.694046374281918*^9}, {3.694046526541377*^9, 3.694046526768881*^9}, {
   3.6940465778926373`*^9, 3.6940465889427557`*^9}, {3.69404679987775*^9, 
   3.694046880073175*^9}, {3.694089169545682*^9, 3.694089267811854*^9}, {
   3.694091150081328*^9, 3.6940911662282877`*^9}, 3.694091909032544*^9, {
   3.6940919419949903`*^9, 3.694091962161137*^9}, 3.694092114207649*^9, 
   3.696845912573071*^9, {3.700002557556921*^9, 3.700002557690922*^9}, 
   3.700002588925152*^9, {3.709336809919558*^9, 3.709336811451446*^9}, {
   3.710105990667719*^9, 3.71010599131419*^9}, {3.710240498942416*^9, 
   3.7102405058427973`*^9}, {3.7102408221290092`*^9, 
   3.7102408221779833`*^9}, {3.710256756559593*^9, 3.7102568029023542`*^9}, {
   3.710256848497699*^9, 3.710256892649102*^9}, 3.710324423187841*^9, {
   3.711496593406829*^9, 3.711496609176578*^9}, {3.711496720759534*^9, 
   3.711496721303083*^9}, {3.711496818958602*^9, 3.711496846903221*^9}, {
   3.7114980044707527`*^9, 3.711498010870504*^9}, 3.711498043873908*^9, {
   3.7114981398293447`*^9, 3.711498155619417*^9}, {3.7114982532555428`*^9, 
   3.711498280523506*^9}, {3.711498342068375*^9, 3.711498390621694*^9}, {
   3.711498550090169*^9, 3.711498550817781*^9}, {3.711499138450841*^9, 
   3.7114991499244213`*^9}, {3.712738534888835*^9, 3.712738534919189*^9}, {
   3.712740223721537*^9, 3.71274022375333*^9}, 3.722029539710425*^9, {
   3.7220341994453497`*^9, 3.72203420464955*^9}, {3.7220877978492727`*^9, 
   3.722087859064723*^9}, {3.7270980527063303`*^9, 3.727098060996778*^9}, {
   3.72709922156136*^9, 3.727099239639866*^9}, {3.7271397956094227`*^9, 
   3.727139800193638*^9}, {3.727139853896615*^9, 3.72713985981665*^9}, {
   3.731539352918746*^9, 3.731539356684042*^9}, {3.7315397955507183`*^9, 
   3.731539832738296*^9}, {3.7315405061169853`*^9, 3.731540530339773*^9}, {
   3.731540635489408*^9, 3.731540638755509*^9}, {3.731540675970047*^9, 
   3.731540680877969*^9}, {3.731540893063641*^9, 3.731540899053052*^9}, 
   3.7318931550076447`*^9, {3.7324025421308193`*^9, 3.732402637562956*^9}, {
   3.732402768357243*^9, 3.732402846842319*^9}, {3.732402882909769*^9, 
   3.732402931992869*^9}, {3.732402996679434*^9, 3.7324030431611223`*^9}, {
   3.755373537190412*^9, 3.75537356702776*^9}, {3.755481733545354*^9, 
   3.755481771863379*^9}, {3.755524386880787*^9, 3.755524388308819*^9}, {
   3.755524859646653*^9, 3.7555248611243362`*^9}, {3.758728287085534*^9, 
   3.758728292389492*^9}, {3.758728481571526*^9, 3.7587285016926117`*^9}, {
   3.7587286028152657`*^9, 3.7587286272132053`*^9}, {3.758728681155704*^9, 
   3.75872872340527*^9}, {3.758728919539955*^9, 3.758728942571906*^9}, {
   3.758730279597849*^9, 3.758730301937666*^9}, {3.758730672751103*^9, 
   3.75873068187411*^9}, {3.758731094173738*^9, 3.758731097229672*^9}, 
   3.758731774765031*^9, {3.7587318390688257`*^9, 3.758731854196416*^9}, {
   3.758784613715918*^9, 3.758784834317572*^9}, {3.7587849087941847`*^9, 
   3.758784951831129*^9}, {3.758785011678187*^9, 3.7587850392611313`*^9}, {
   3.7587949642297983`*^9, 3.758795011887451*^9}, {3.7587950443701487`*^9, 
   3.758795064336632*^9}, {3.758795096305862*^9, 3.758795111460043*^9}, {
   3.758795160058263*^9, 3.758795163245449*^9}, {3.7587952008778877`*^9, 
   3.758795220333432*^9}, 3.758795900109405*^9, {3.758796808592629*^9, 
   3.758796812427071*^9}, {3.758797419214703*^9, 3.758797425256063*^9}, {
   3.758797490040317*^9, 3.758797722546564*^9}, {3.758797839603215*^9, 
   3.7587978637980556`*^9}, {3.758798234469265*^9, 3.7587983560169764`*^9}, {
   3.758798388613147*^9, 3.7587983997940407`*^9}, {3.7587984704673977`*^9, 
   3.758798492683992*^9}, {3.758798565786216*^9, 3.758798610730391*^9}, {
   3.758798664978298*^9, 3.758798676767742*^9}, {3.7587990592724247`*^9, 
   3.758799063304638*^9}, {3.758799119282651*^9, 3.758799141615849*^9}, {
   3.758799205815187*^9, 3.758799212253229*^9}, {3.758801512194249*^9, 
   3.7588015356577663`*^9}, {3.758811439846456*^9, 3.758811532646517*^9}, {
   3.758812003931816*^9, 3.758812063960512*^9}, {3.758812102043414*^9, 
   3.758812126563641*^9}, {3.758812246945642*^9, 3.7588122632273693`*^9}, {
   3.758812439335827*^9, 3.758812540798933*^9}, {3.758816151533209*^9, 
   3.758816212885056*^9}, {3.758818313027029*^9, 3.758818346402905*^9}, {
   3.758819096143798*^9, 3.758819114611443*^9}, {3.758820689687079*^9, 
   3.758820731871653*^9}, {3.75882076818998*^9, 3.7588207692726173`*^9}, {
   3.7588208809454393`*^9, 3.758820917153376*^9}, {3.75882255116101*^9, 
   3.758822635108686*^9}, {3.758822668564436*^9, 3.758822670702715*^9}, {
   3.7588227614166183`*^9, 3.758822871908394*^9}, {3.758823025977818*^9, 
   3.758823028824059*^9}, {3.758823350583873*^9, 3.75882335467498*^9}, {
   3.758823484747882*^9, 3.75882349441304*^9}, {3.7588235976955442`*^9, 
   3.7588237100852013`*^9}, {3.758823740635364*^9, 3.758823742406148*^9}, {
   3.7588238238878107`*^9, 3.758823937267411*^9}, {3.758823967653405*^9, 
   3.7588239683947477`*^9}, {3.758824061793827*^9, 3.758824111849203*^9}, {
   3.7588241704206047`*^9, 3.758824258785088*^9}, {3.758824301460815*^9, 
   3.758824390434053*^9}, {3.758824443497868*^9, 3.7588245053799133`*^9}, {
   3.758824542019267*^9, 3.7588245843601093`*^9}, {3.758824635076757*^9, 
   3.758824683878714*^9}, {3.7588247339367027`*^9, 3.758824784176186*^9}, {
   3.7588248444420967`*^9, 3.75882486464452*^9}, 3.75882490908883*^9, {
   3.7588249577843103`*^9, 3.758824992314083*^9}, {3.758825038406749*^9, 
   3.75882504735207*^9}, {3.7588250931878767`*^9, 3.7588251960175447`*^9}, {
   3.758825408005166*^9, 3.758825415253249*^9}, {3.758826218920967*^9, 
   3.758826303618712*^9}, {3.758826351439221*^9, 3.7588263779003553`*^9}, 
   3.75882683697724*^9, {3.75896781087959*^9, 3.7589678311626997`*^9}, {
   3.758967970302636*^9, 3.7589679732971163`*^9}, {3.758968322358395*^9, 
   3.758968379789754*^9}, {3.758970723329595*^9, 3.758970735311181*^9}, {
   3.758971589871182*^9, 3.75897162480208*^9}, {3.759041385273615*^9, 
   3.7590413989624653`*^9}, {3.7590414699938498`*^9, 3.759041473807446*^9}, {
   3.759041719960277*^9, 3.7590417255568533`*^9}, 3.759045613184684*^9, 
   3.759045738715007*^9, {3.7590610318116217`*^9, 3.759061037795245*^9}, {
   3.759061093727015*^9, 3.7590611092906313`*^9}, {3.7590613628124437`*^9, 
   3.75906137434818*^9}, {3.759061686710177*^9, 3.7590616954000883`*^9}, {
   3.759061728267799*^9, 3.759061734853003*^9}, {3.759075353095763*^9, 
   3.759075385493682*^9}, {3.7590754426302137`*^9, 3.7590754430464973`*^9}, {
   3.7590755495245667`*^9, 3.7590755662803793`*^9}, {3.759075613101451*^9, 
   3.759075616808888*^9}, {3.759075983784876*^9, 3.7590759859173717`*^9}, {
   3.759076245667095*^9, 3.759076441690548*^9}, {3.759076474057342*^9, 
   3.759076475039936*^9}, {3.7590767962908697`*^9, 3.759076803184688*^9}, {
   3.759119919462574*^9, 3.759119920624248*^9}, {3.759122104647772*^9, 
   3.759122113236862*^9}, {3.759122230569379*^9, 3.7591222511115103`*^9}, {
   3.7591222918036623`*^9, 3.759122309086741*^9}, {3.7591223872490463`*^9, 
   3.75912245404253*^9}, 3.7591225024713583`*^9, 3.759122614308857*^9, {
   3.7591226474661427`*^9, 3.759122651158029*^9}, 3.759128962179697*^9, 
   3.759130176494175*^9, {3.759130272118059*^9, 3.7591303018368607`*^9}, {
   3.759130359376954*^9, 3.759130376948419*^9}, {3.759130468447337*^9, 
   3.759130478747999*^9}, 3.759130524143147*^9, {3.759131187470096*^9, 
   3.7591312081995697`*^9}, {3.759131794063901*^9, 3.759131821907592*^9}, {
   3.759131856587512*^9, 3.759131883298087*^9}, {3.7591319177561398`*^9, 
   3.759131925855157*^9}, {3.759131997285928*^9, 3.7591320489354277`*^9}, {
   3.759132110799502*^9, 3.7591321176461554`*^9}, 3.759233432193329*^9, {
   3.759233499950282*^9, 3.759233525028873*^9}, {3.759233623241468*^9, 
   3.759233633780487*^9}, {3.759237093075122*^9, 3.75923715947023*^9}, {
   3.759237190924262*^9, 3.7592371978741007`*^9}, 3.759241742854505*^9, {
   3.759242070879303*^9, 3.759242125873386*^9}, 3.759242187252877*^9, 
   3.75924221913737*^9, {3.75924260233948*^9, 3.759242606438258*^9}, {
   3.759242647229129*^9, 
   3.759242656224568*^9}},ExpressionUUID->"871a775a-3a49-4411-b05b-\
cc9982d5e58d"],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.7114967884855947`*^9, 
  3.71149678925776*^9}},ExpressionUUID->"3890a7fa-24d7-42f8-a11a-\
bc7be05def6a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "EcoEvoSim", "]"}], "=", "\n", "\t", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"BoundaryDetection", "\[Rule]", "False"}], ",", 
     RowBox[{"FreezeTraits", "\[Rule]", "False"}], ",", "\n", "\t", 
     RowBox[{"NDSolveOpts", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"MaxSteps", "\[Rule]", "\[Infinity]"}], "}"}]}], ",", 
     RowBox[{"WhenEventOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"DInvOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"DelayDInv", "\[Rule]", "False"}], ",", 
     RowBox[{"EvoEquation", "\[Rule]", "\"\<QG\>\""}], ",", 
     RowBox[{"TraitShiftRate", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", "\t", 
     RowBox[{"TMin", "\[Rule]", "0"}], ",", 
     RowBox[{"OutputTMin", "\[Rule]", "0"}], ",", 
     RowBox[{"Output", "\[Rule]", "\"\<Dynamics\>\""}], ",", "\n", "\t", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.688571707783112*^9, 3.688571707932355*^9}, 
   3.696845912545287*^9, {3.7114950438556147`*^9, 3.711495046006259*^9}, {
   3.7114982861489353`*^9, 3.7114982989936323`*^9}, {3.729642256945245*^9, 
   3.729642262468515*^9}, {3.729642555345767*^9, 3.7296425572944736`*^9}, {
   3.729642663386723*^9, 3.729642670212463*^9}, {3.7592427789447737`*^9, 
   3.7592427831598167`*^9}},ExpressionUUID->"c18c5cba-0abe-424d-a25d-\
391b23453284"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",ExpressionUUID->"81d08429-e4e6-4857-ac66-7224890561ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoEvoSim", "[", 
    RowBox[{
     RowBox[{"sol_", "?", "TraitsAndVariablesQ"}], ",", 
     RowBox[{"Gs", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "RuleListQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"tmax_", "?", "NumericQ"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
   RowBox[{"EcoEvoSim", "[", 
    RowBox[{
     RowBox[{"ExtractTraits", "[", "sol", "]"}], ",", 
     RowBox[{"ExtractVariables", "[", "sol", "]"}], ",", "Gs", ",", "tmax", 
     ",", "opts"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.711472535872114*^9, {3.711472624221716*^9, 3.711472626036916*^9}, {
   3.71147268754537*^9, 3.711472717132627*^9}, {3.711472800081321*^9, 
   3.7114728419988194`*^9}, 3.711496631210979*^9, {3.71273853492791*^9, 
   3.712738534931539*^9}},
 CellLabel->
  "In[601]:=",ExpressionUUID->"b511cd4c-5a17-4b24-bef6-37b5d8e7e2ea"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["FindEcoEvoEq  ", "Subsection",
 CellDingbat->"\[ClubSuit]",
 CellChangeTimes->{{3.700083799240511*^9, 3.700083818139762*^9}, {
  3.732535711018385*^9, 
  3.732535711276197*^9}},ExpressionUUID->"4d7dd79d-2e81-4488-8ac9-\
44fc9fa7c3c4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindEcoEvoEq", "[", 
    RowBox[{
     RowBox[{"traits_", "?", "TraitsQ"}], ",", 
     RowBox[{"pops_", "?", "VariablesQ"}], ",", 
     RowBox[{"Gs", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "GsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<FindEcoEvoEq\>\"", "]"}]}], ",", "\n", 
       
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "method", ",", "boundarydetection", ",", 
       "percapita", ",", "delaydinv", ",", "fixed", ",", "findrootopts", ",", 
       "chop", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "fixedvars", 
       ",", "fixedtraits", ",", "fixedvariables", ",", "ecoeqns", ",", 
       "evoeqns", ",", "eqns", ",", "unks", ",", "newunk", ",", "unksics", 
       ",", "sol"}], "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "Nsp", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Msg", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoEvoEq", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoEvoEq", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"method", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Method", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoEvoEq", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"boundarydetection", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"BoundaryDetection", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoEvoEq", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"percapita", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PerCapita", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoEvoEq", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"delaydinv", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"DelayDInv", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoEvoEq", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"fixed", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Fixed", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoEvoEq", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"findrootopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"FindRootOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoEvoEq", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", 
        RowBox[{"chop", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Chop", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "FindEcoEvoEq", "]"}]}], "}"}], "]"}]}],
           "]"}]}], ";", "\n", "\n", 
        RowBox[{"fixedvars", "=", 
         RowBox[{"fixed", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        RowBox[{"fixedtraits", "=", 
         RowBox[{"ExtractTraits", "[", "fixed", "]"}]}], ";", "\n", 
        RowBox[{"fixedvariables", "=", 
         RowBox[{"ExtractVariables", "[", "fixed", "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: fixedvars=\>\"", ",", "fixedvars"}], 
           "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"SetNsp", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"traits", ",", "fixedtraits"}], "]"}], ",", 
          RowBox[{"Join", "[", 
           RowBox[{"pops", ",", "fixedvariables"}], "]"}]}], "]"}], ";", "\n",
         "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"set", " ", "up", " ", "eqns"}], " ", "*)"}], "\n", 
        RowBox[{"ecoeqns", "=", 
         RowBox[{"EcoEqns", "[", 
          RowBox[{"BlankTraits", ",", "opts", ",", 
           RowBox[{"PerCapita", "\[Rule]", "percapita"}]}], "]"}]}], ";", 
        "\n", 
        RowBox[{"evoeqns", "=", 
         RowBox[{"EvoEqns", "[", 
          RowBox[{"BlankVariables", ",", "Gs", ",", "opts"}], "]"}]}], ";", 
        "\n", 
        RowBox[{"eqns", "=", 
         RowBox[{"If", "[", 
          RowBox[{"delaydinv", ",", "\n", "\t", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"ecoeqns", "/.", "Eq"}], "/.", "RemovePopts"}], "/.", 
               "RemoveTraitts"}], "/.", "ToUnks"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"evoeqns", "/.", "Eq"}], "/.", "RemovePopts"}], "/.", 
               "RemoveTraitts"}], "/.", "ToUnkRules"}]}], "]"}], ",", "\n", 
           "\t", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{"ecoeqns", ",", "evoeqns"}], "]"}], "/.", "Eq"}], "/.",
              "RemoveTraitts"}], "/.", "RemovePopts"}]}], "\n", "]"}]}], ";", 
        "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"set", " ", "up", " ", "unksics"}], " ", "*)"}], "\n", 
        RowBox[{"unks", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{"ecoeqns", ",", "evoeqns"}], "]"}], "/.", "LHS"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"var_", "'"}], "[", "t", "]"}], "\[Rule]", "var"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"var_", "[", 
               RowBox[{"t", "+", "1"}], "]"}], "/", 
              RowBox[{"var_", "[", "t", "]"}]}], "\[Rule]", "var"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"var_", "[", 
               RowBox[{"t", "+", "1"}], "]"}], "-", 
              RowBox[{"var_", "[", "t", "]"}]}], "\[Rule]", "var"}], ",", 
            RowBox[{
             RowBox[{"var_", "[", 
              RowBox[{"t", "+", "1"}], "]"}], "\[Rule]", "var"}]}], "}"}]}]}],
         ";", "\n", 
        RowBox[{"unksics", "=", 
         RowBox[{"{", "}"}]}], ";", "\n", 
        RowBox[{"Do", "[", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"newunk", "=", 
            RowBox[{"If", "[", 
             RowBox[{"delaydinv", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"var", "/.", "ToUnks"}], ",", 
                RowBox[{
                 RowBox[{"var", "/.", "traits"}], "/.", "pops"}]}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"var", ",", 
                RowBox[{
                 RowBox[{"var", "/.", "traits"}], "/.", "pops"}]}], "}"}]}], 
             "]"}]}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"method", "\[Equal]", "\"\<Secant\>\""}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"newunk", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"var", "+", "0.001"}], "/.", "traits"}], "/.", 
                "pops"}]}], "]"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"boundarydetection", ",", 
             RowBox[{"newunk", "=", 
              RowBox[{"Join", "[", 
               RowBox[{"newunk", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Min", "[", 
                   RowBox[{"range", "[", "var", "]"}], "]"}], ",", 
                  RowBox[{"Max", "[", 
                   RowBox[{"range", "[", "var", "]"}], "]"}]}], "}"}]}], 
               "]"}]}]}], "]"}], ";", "\n", "\t", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"unksics", ",", "newunk"}], "]"}], ";"}], "\n", ",", 
          RowBox[{"{", 
           RowBox[{"var", ",", "unks"}], "}"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: eqns=\>\""}], "]"}], ";", 
           RowBox[{"Print", "[", "eqns", "]"}], ";", "\n", "\t", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: unksics=\>\""}], "]"}], ";", 
           RowBox[{"Print", "[", "unksics", "]"}], ";"}]}], "\n", "]"}], ";", 
        "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"solve", " ", "it"}], " ", "*)"}], "\n", 
        RowBox[{"sol", "=", 
         RowBox[{"FindRoot", "[", 
          RowBox[{"eqns", ",", "unksics", ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"Sequence", "@@", "findrootopts"}], "]"}]}], "]"}]}], ";",
         "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: sol=\>\""}], "]"}], ";", 
           RowBox[{"Print", "[", "sol", "]"}]}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"chop", ",", "\n", "\t", 
          RowBox[{"Return", "[", 
           RowBox[{"VarSort", "[", 
            RowBox[{
             RowBox[{"Chop", "[", 
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{"sol", ",", "fixed"}], "]"}], "/.", "FromUnks"}], 
              "]"}], ",", 
             RowBox[{"Join", "[", 
              RowBox[{"AllVariables", ",", "AllTraits"}], "]"}]}], "]"}], 
           "]"}], ",", "\n", "\t", 
          RowBox[{"Return", "[", 
           RowBox[{"VarSort", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{"sol", ",", "fixed"}], "]"}], "/.", "FromUnks"}], ",", 
             
             RowBox[{"Join", "[", 
              RowBox[{"AllVariables", ",", "AllTraits"}], "]"}]}], "]"}], 
           "]"}]}], "\n", "]"}], ";"}]}], "\n", "\n", "]"}]}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.687881464407789*^9, 3.6878814646212378`*^9}, {
   3.688571713126212*^9, 3.68857171451231*^9}, {3.688571773768346*^9, 
   3.688571774438036*^9}, 3.69684591263888*^9, {3.700053986042231*^9, 
   3.700054025312666*^9}, {3.700054089423847*^9, 3.700054117278082*^9}, {
   3.7000542225607567`*^9, 3.700054252929379*^9}, {3.700054304476479*^9, 
   3.700054342214334*^9}, {3.700054473952258*^9, 3.700054511858478*^9}, {
   3.700054556644319*^9, 3.700054564219124*^9}, {3.700054832438178*^9, 
   3.7000548383045893`*^9}, {3.700083826341268*^9, 3.7000838366998587`*^9}, {
   3.700130279267271*^9, 3.700130293900498*^9}, {3.7001306221171017`*^9, 
   3.700130676811448*^9}, {3.700130891588537*^9, 3.700130942665351*^9}, {
   3.7001319823901577`*^9, 3.700132035194916*^9}, {3.70013219717628*^9, 
   3.7001322072752953`*^9}, {3.700132414260252*^9, 3.700132419057354*^9}, {
   3.700155019248177*^9, 3.7001550215003242`*^9}, {3.7001553657595997`*^9, 
   3.7001553670066977`*^9}, {3.70015873952944*^9, 3.7001587532409163`*^9}, {
   3.70015883430894*^9, 3.7001588851135273`*^9}, {3.709111460880267*^9, 
   3.7091114682561903`*^9}, {3.709332763274658*^9, 3.709332775379322*^9}, {
   3.709336813061647*^9, 3.709336815095068*^9}, {3.710105991929454*^9, 
   3.710105992591704*^9}, {3.710240822195546*^9, 3.710240822246172*^9}, {
   3.71032442384984*^9, 3.7103244251105833`*^9}, {3.712738534962071*^9, 
   3.712738534976501*^9}, {3.71274022377072*^9, 3.712740223800043*^9}, {
   3.72202955192945*^9, 3.7220295528976107`*^9}, {3.722034208092074*^9, 
   3.722034212881749*^9}, {3.722087877001823*^9, 3.7220879212231607`*^9}, {
   3.729678938173211*^9, 3.729678938237918*^9}, 3.729687727407012*^9, {
   3.731110769674596*^9, 3.731110772782567*^9}, {3.7311108931211853`*^9, 
   3.731110912360242*^9}, {3.731110958493635*^9, 3.731110969739661*^9}, {
   3.7311116219911346`*^9, 3.73111162831653*^9}, {3.731233166681489*^9, 
   3.731233168561461*^9}, {3.731539374591838*^9, 3.731539377644134*^9}, 
   3.7318931475805063`*^9, {3.732225099294217*^9, 3.732225107594207*^9}, {
   3.732403261172532*^9, 3.7324033077660017`*^9}, {3.7324033473777857`*^9, 
   3.732403388127776*^9}, {3.755373568773315*^9, 3.7553735890372458`*^9}, {
   3.7555313368915377`*^9, 3.755531383437127*^9}, {3.758464494339382*^9, 
   3.758464523246543*^9}, {3.758464557993224*^9, 3.7584645714430447`*^9}, {
   3.758464674324518*^9, 3.758464674432047*^9}, {3.75846484250132*^9, 
   3.758464944730188*^9}, {3.758476707982667*^9, 3.758476732553213*^9}, {
   3.758476764707849*^9, 3.758476775839473*^9}, 3.758476848920835*^9, {
   3.758479257391142*^9, 3.7584792932392483`*^9}, 3.758479736910811*^9, {
   3.758479782461042*^9, 3.758479844914198*^9}, 3.758480487285429*^9, {
   3.7584806262979307`*^9, 3.7584806883788633`*^9}, {3.758480798129451*^9, 
   3.75848080225915*^9}, {3.758480836441215*^9, 3.7584808434565496`*^9}, {
   3.758481199693733*^9, 3.758481199881687*^9}, {3.7584815153225927`*^9, 
   3.75848155064045*^9}, 3.758520311891034*^9, {3.7585203493738737`*^9, 
   3.758520350838119*^9}, {3.758522163646213*^9, 3.758522170094019*^9}, {
   3.7585222598526707`*^9, 3.7585223236677027`*^9}, 3.7585224946550903`*^9, {
   3.7585225316177187`*^9, 3.7585225455451183`*^9}, {3.758522901139655*^9, 
   3.758522913443453*^9}, 3.7585231685900917`*^9, {3.758523217205983*^9, 
   3.758523217478863*^9}, {3.758523443334169*^9, 3.758523443664281*^9}, {
   3.758523476611198*^9, 3.758523525733502*^9}, {3.75852356442411*^9, 
   3.758523568436954*^9}, {3.758524659913494*^9, 3.758524660191115*^9}, {
   3.7585256552819033`*^9, 3.7585256750805683`*^9}, {3.7585257585810747`*^9, 
   3.758525762713573*^9}, {3.758525802252036*^9, 3.758525816727276*^9}, {
   3.758525972642651*^9, 3.758526010464067*^9}, {3.758526497538562*^9, 
   3.758526524207617*^9}, {3.7585269112309017`*^9, 3.758526943209738*^9}, {
   3.758527120226739*^9, 3.758527144901525*^9}, {3.7585271946598577`*^9, 
   3.758527204146531*^9}, {3.758527896330804*^9, 3.758527897525778*^9}, 
   3.7585347142639017`*^9, {3.7585362752255173`*^9, 3.758536283615759*^9}, {
   3.7585365309615307`*^9, 3.758536531862516*^9}, 3.7585370776104803`*^9, {
   3.7585372365560417`*^9, 3.7585372445163097`*^9}, {3.758537941609831*^9, 
   3.758537957110705*^9}, {3.758537995776026*^9, 3.758537999270245*^9}, {
   3.758538151679225*^9, 3.758538177103258*^9}, {3.7585382346566057`*^9, 
   3.758538255784505*^9}, {3.7585391626683817`*^9, 3.758539166637788*^9}, {
   3.758539836253141*^9, 3.758539879070693*^9}, 3.758540101472336*^9, {
   3.758540388355344*^9, 3.758540392480328*^9}, {3.758540515197661*^9, 
   3.758540521195384*^9}, {3.7585407685534554`*^9, 3.758540784489436*^9}, 
   3.758541016776581*^9, {3.758541201291176*^9, 3.758541222662683*^9}, {
   3.75854185344796*^9, 3.758541912664419*^9}, {3.758542078951735*^9, 
   3.7585421135264597`*^9}, {3.758542161670245*^9, 3.7585422547997417`*^9}, {
   3.7585423437852087`*^9, 3.75854240667165*^9}, 3.7585424453403263`*^9, {
   3.7585425333648243`*^9, 3.7585425461505203`*^9}, 3.758542596659519*^9, {
   3.758542646713977*^9, 3.758542686174193*^9}, {3.758542742721731*^9, 
   3.758542848102914*^9}, {3.758543048009343*^9, 3.758543074191862*^9}, {
   3.758543142127811*^9, 3.758543158459722*^9}, {3.758543212143876*^9, 
   3.758543216798212*^9}, {3.758543254919002*^9, 3.758543265704193*^9}, {
   3.758543295802701*^9, 3.758543420278306*^9}, {3.758543743947795*^9, 
   3.758543760778388*^9}, 3.758544149286491*^9, 3.758544241362988*^9, {
   3.758545456481305*^9, 3.758545503387442*^9}, {3.758545676225519*^9, 
   3.758545678320826*^9}, {3.7585457563794622`*^9, 3.758545790148282*^9}, {
   3.7585461311175623`*^9, 3.758546150275069*^9}, {3.75855063458222*^9, 
   3.7585506396460943`*^9}, {3.758550728729946*^9, 3.758550759695271*^9}, {
   3.758551813549959*^9, 3.758551845195491*^9}, 3.758552114923168*^9, {
   3.758552209227663*^9, 3.758552215362269*^9}, {3.758552273648382*^9, 
   3.75855229543326*^9}, {3.758552537524782*^9, 3.758552551968416*^9}, {
   3.758552768757388*^9, 3.758552792416046*^9}, 3.758552856210053*^9, {
   3.7586053968115053`*^9, 3.758605406208652*^9}, {3.758607064411303*^9, 
   3.75860706882829*^9}, 3.758607357241296*^9, {3.758608085463896*^9, 
   3.758608090992992*^9}, {3.758653794579707*^9, 3.7586538041420507`*^9}, {
   3.7586940000382643`*^9, 3.758694178269039*^9}, {3.758694263316815*^9, 
   3.758694267451076*^9}, {3.758694309540791*^9, 3.758694338376416*^9}, 
   3.758694547655458*^9, {3.7586946496195927`*^9, 3.758694672346096*^9}, {
   3.7586947448086157`*^9, 3.758694771197939*^9}, {3.758695930156831*^9, 
   3.758695942858985*^9}, {3.7586960836374073`*^9, 3.7586961359621162`*^9}, {
   3.758706966295705*^9, 3.7587069835280657`*^9}, {3.758707064009838*^9, 
   3.758707084905662*^9}, {3.758707332622624*^9, 
   3.758707373845832*^9}},ExpressionUUID->"00400901-ccbb-466c-84c3-\
6ed320dadb3e"],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",ExpressionUUID->"89050da3-74be-4ba3-9dce-62cc62b9fa47"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "FindEcoEvoEq", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"PerCapita", "\[Rule]", "True"}], ",", 
     RowBox[{"FindRootOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"DelayDInv", "\[Rule]", "False"}], ",", 
     RowBox[{"Chop", "\[Rule]", "True"}], ",", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.688571716541911*^9, 3.6885717166960382`*^9}, 
   3.696845912680583*^9, {3.700084443844001*^9, 3.700084444353344*^9}, {
   3.7296866181104937`*^9, 3.729686644891083*^9}, {3.729687684685556*^9, 
   3.7296877109270763`*^9}, {3.758547661142223*^9, 3.758547675528569*^9}, {
   3.75855071733744*^9, 
   3.7585507202274218`*^9}},ExpressionUUID->"37038112-6241-40be-920c-\
f6bfb93e3fbf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",ExpressionUUID->"990b7bc7-982c-474b-a6ad-1a65fdb5ecb3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindEcoEvoEq", "[", 
    RowBox[{
     RowBox[{"sol_", "?", "TraitsAndVariablesQ"}], ",", 
     RowBox[{"Gs_:", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"FindEcoEvoEq", "[", 
    RowBox[{
     RowBox[{"ExtractTraits", "[", "sol", "]"}], ",", 
     RowBox[{"ExtractVariables", "[", "sol", "]"}], ",", "Gs", ",", "opts"}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7000844476384487`*^9, 3.700084450540546*^9}, {
   3.709332794124982*^9, 3.7093327966147747`*^9}, 3.7093328393575087`*^9, {
   3.712738534985525*^9, 3.712738534989333*^9}},
 CellLabel->
  "In[604]:=",ExpressionUUID->"2a71f4dd-182b-4504-a9dc-017521939500"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["FindEcoEvoCycle", "Subsection",
 CellDingbat->"\[ClubSuit]",
 CellChangeTimes->{{3.70016802803725*^9, 3.700168031995866*^9}, {
  3.759399726025607*^9, 3.759399728381743*^9}, {3.759399921053187*^9, 
  3.7593999213755503`*^9}},ExpressionUUID->"2cdd0838-2ebd-4dd2-baae-\
d3ace1c006fd"],

Cell[CellGroupData[{

Cell["Periodic", "Subsubsection",
 CellChangeTimes->{
  3.722034248614064*^9},ExpressionUUID->"27f6f011-13b3-4dee-a416-\
a100e393c8d5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindEcoEvoCycle", "[", 
    RowBox[{
     RowBox[{"traits_", "?", "TraitsQ"}], ",", 
     RowBox[{"pops_", "?", "VariablesQ"}], ",", 
     RowBox[{"Gs", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "GsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"func", "=", 
         RowBox[{
         "FuncStyle", "[", "\"\<FindEcoEvoCycle (Periodic)\>\"", "]"}]}], ",",
         "\n", 
        RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
        "verboseall", ",", "\n", "method", ",", "fitnessgradient", ",", 
        "evoeq", ",", "\n", "ecosimopts", ",", "ndinvopts", ",", 
        "ecoevosimopts", ",", "findrootopts", ",", "monitor", ",", 
        "printtrace", ",", "fixed", ",", "maxiterations", ",", "accuracygoal",
         ",", "traitshiftrate", ",", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "fixedvars", 
        ",", "fixedtraits", ",", "fixedvariables", ",", "nonfixedtraits", ",",
         "nonfixedvars", ",", "nonfixedvariables", ",", "\n", "thing", ",", 
        "sol", ",", "unks", ",", "unksics", ",", "res", ",", "dtrait", ",", 
        "v", ",", "nb"}], "}"}], ",", "\n", "\n", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "Nsp", "}"}], ",", "\n", "\n", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
           RowBox[{
            RowBox[{"Msg", "[", 
             RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
            RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
         "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
         RowBox[{"verbose", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Verbose", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"Global`debug", ",", 
           RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
         RowBox[{"verboseall", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"VerboseAll", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{"verboseall", ",", 
           RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
         RowBox[{"evoeq", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"EvoEq", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"method", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Method", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"fitnessgradient", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"FitnessGradient", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"fitnessgradient", "===", "Automatic"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"evoeq", "\[Equal]", "False"}], "||", 
              RowBox[{
               RowBox[{"Max", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"ngcomps", "[", "gu", "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "]"}], 
               "\[Equal]", "1"}]}], ",", 
             RowBox[{"fitnessgradient", "=", "\"\<EcoEvoSim\>\""}], ",", 
             RowBox[{"fitnessgradient", "=", "\"\<NDInv\>\""}]}], "]"}]}], 
          "]"}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Max", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"ngcomps", "[", "gu", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], "]"}], ">", 
             "1"}], "&&", 
            RowBox[{"fitnessgradient", "\[Equal]", "\"\<EcoEvoSim\>\""}]}], 
           ",", 
           RowBox[{"Msg", "[", 
            RowBox[{"FindEcoEvoCycle", "::", "susmtd"}], "]"}]}], "]"}], ";", 
         "\n", 
         RowBox[{"If", "[", 
          RowBox[{"verbose", ",", 
           RowBox[{"Print", "[", 
            RowBox[{
            "func", ",", "\"\<: FitnessGradient=\>\"", ",", 
             "fitnessgradient"}], "]"}]}], "]"}], ";", "\n", 
         RowBox[{"ndinvopts", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"NDInvOpts", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"findrootopts", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"FindRootOpts", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"ecosimopts", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"EcoSimOpts", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"ecoevosimopts", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"EcoEvoSimOpts", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"monitor", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Monitor", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"printtrace", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"PrintTrace", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"fixed", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Fixed", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"maxiterations", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"MaxIterations", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"accuracygoal", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"AccuracyGoal", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"traitshiftrate", "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"TraitShiftRate", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{"opts", ",", 
               RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}]}], "}"}], 
             "]"}]}], "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"evoeq", "\[Equal]", "True"}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"ecoevosimopts", ",", 
             RowBox[{"FreezeTraits", "\[Rule]", "True"}]}], "]"}]}], "]"}], 
         ";", "\n", "\n", 
         RowBox[{"fixedvars", "=", 
          RowBox[{"fixed", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
         
         RowBox[{"fixedtraits", "=", 
          RowBox[{"ExtractTraits", "[", "fixed", "]"}]}], ";", "\n", 
         RowBox[{"fixedvariables", "=", 
          RowBox[{"ExtractVariables", "[", "fixed", "]"}]}], ";", "\n", 
         RowBox[{"nonfixedtraits", "=", 
          RowBox[{"traits", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
         
         RowBox[{"nonfixedvariables", "=", 
          RowBox[{"pops", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
         
         RowBox[{"nonfixedvars", "=", 
          RowBox[{"Join", "[", 
           RowBox[{"nonfixedvariables", ",", "nonfixedtraits"}], "]"}]}], ";",
          "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{
          "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ",
            "in", " ", "guilds"}], " ", "*)"}], "\n", 
         RowBox[{"SetNsp", "[", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{"traits", ",", "fixedtraits"}], "]"}], ",", 
           RowBox[{"Join", "[", 
            RowBox[{"pops", ",", "fixedvariables"}], "]"}]}], "]"}], ";", 
         "\n", "\n", 
         RowBox[{"Which", "[", "\n", "\t", 
          RowBox[{
           RowBox[{"fitnessgradient", "\[Equal]", "\"\<EcoEvoSim\>\""}], ",", 
           "\n", "\t", 
           RowBox[{
            RowBox[{"thing", "[", 
             RowBox[{"popsandtraits_", "?", "NumericRuleListQ"}], "]"}], ":=", 
            RowBox[{"Module", "[", 
             RowBox[{
              RowBox[{"{", "}"}], ",", "\n", "\t\t", 
              RowBox[{
               RowBox[{"$findecoevocyclethingcount", "++"}], ";", "\n", 
               "\t\t", 
               RowBox[{"sol", "=", 
                RowBox[{"EcoEvoSim", "[", 
                 RowBox[{
                 "popsandtraits", ",", "Gs", ",", "modelperiod", ",", 
                  RowBox[{"Fixed", "\[Rule]", "fixed"}], ",", 
                  RowBox[{"TraitShiftRate", "\[Rule]", "traitshiftrate"}], 
                  ",", "\n", "\t\t\t", 
                  RowBox[{"Evaluate", "[", 
                   RowBox[{"Sequence", "@@", "ecoevosimopts"}], "]"}]}], 
                 "]"}]}], ";", "\n", "\t\t", 
               RowBox[{"If", "[", 
                RowBox[{"printtrace", ",", 
                 RowBox[{"Print", "[", 
                  RowBox[{
                  "$findecocycleevoeqthingcount", ",", "\"\< \>\"", ",", 
                   RowBox[{"FinalSlice", "[", "sol", "]"}]}], "]"}]}], "]"}], 
               ";", "\n", "\t\t", 
               RowBox[{"Return", "[", 
                RowBox[{"Select", "[", 
                 RowBox[{
                  RowBox[{"FinalSlice", "[", "sol", "]"}], ",", 
                  RowBox[{
                   RowBox[{"MemberQ", "[", 
                    RowBox[{"nonfixedvars", ",", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], "&"}]}], "]"}], 
                "]"}]}]}], "\n", "\t", "]"}]}], "\n", ",", "\t", "\n", "\t", 
           RowBox[{"fitnessgradient", "\[Equal]", "\"\<NDInv\>\""}], ",", 
           "\n", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{"shifting", " ", "traits"}], " ", "*)"}], "\n", "\t", 
           RowBox[{
            RowBox[{"Do", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"dtrait", "[", "tr", "]"}], "=", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"MemberQ", "[", 
                  RowBox[{
                   RowBox[{"traitshiftrate", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                   RowBox[{
                   "tr", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                 RowBox[{
                  RowBox[{
                  "tr", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "/.", "traitshiftrate"}], ",", 
                 "0"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"tr", ",", "nonfixedtraits"}], "}"}]}], "]"}], ";", 
            "\n", "\t", 
            RowBox[{"(*", " ", 
             RowBox[{"set", " ", "up", " ", "vs"}], " ", "*)"}], "\n", "\t", 
            RowBox[{"Do", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"v", "[", "tr", "]"}], "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"V", "[", 
                  RowBox[{"DeleteSubscript", "@", "tr"}], "]"}], "/.", "Gs"}],
                 "/.", 
                RowBox[{
                 RowBox[{"V", "[", 
                  RowBox[{"DeleteSubscript", "@", "tr"}], "]"}], "\[Rule]", 
                 "1"}]}]}], ",", 
              RowBox[{"{", 
               RowBox[{"tr", ",", "nonfixedtraits"}], "}"}]}], "]"}], ";", 
            "\n", "\n", "\t", 
            RowBox[{
             RowBox[{"thing", "[", 
              RowBox[{"popsandtraits_", "?", "NumericRuleListQ"}], "]"}], ":=", 
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", "fg", "}"}], ",", "\n", "\t\t", 
               RowBox[{
                RowBox[{"$findecoevocyclethingcount", "++"}], ";", "\n", 
                "\t\t", 
                RowBox[{"sol", "=", 
                 RowBox[{"EcoSim", "[", 
                  RowBox[{"popsandtraits", ",", "modelperiod", ",", 
                   RowBox[{"Fixed", "\[Rule]", "fixed"}], ",", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "ecosimopts"}], "]"}]}], 
                  "]"}]}], ";", "\n", "\t\t", 
                RowBox[{"fg", "=", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"tr", "\[Rule]", "\n", "\t\t\t", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"v", "[", "tr", "]"}], "*", 
                    RowBox[{"NDInv", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{"popsandtraits", ",", "fixed"}], "]"}], "//", 
                    "ExtractTraits"}], ",", "sol", ",", 
                    RowBox[{"tr", "//", "ZeroSubscript"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"tr", "//", "ZeroSubscript"}], ")"}], "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{"tr", "/.", "popsandtraits"}], ")"}]}], "}"}], 
                    ",", "\n", "\t\t\t", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", "ndinvopts"}], "]"}]}], "]"}]}],
                     "-", 
                    RowBox[{"dtrait", "[", "tr", "]"}]}]}], "\n", "\t\t", ",", 
                    RowBox[{"{", 
                    RowBox[{"tr", ",", "nonfixedtraits"}], "}"}]}], "]"}], 
                  "]"}]}], ";", "\n", "\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{"printtrace", ",", 
                  RowBox[{"Print", "[", 
                   RowBox[{
                   "$findecoevocyclethingcount", ",", "\"\< \>\"", ",", 
                    RowBox[{"FinalSlice", "[", "sol", "]"}], ",", "\"\< \>\"",
                     ",", 
                    RowBox[{"RuleListAdd", "[", 
                    RowBox[{
                    RowBox[{"ExtractTraits", "[", "popsandtraits", "]"}], ",",
                     "fg"}], "]"}]}], "]"}]}], "]"}], ";", "\n", "\t\t", 
                RowBox[{"Return", "[", 
                 RowBox[{"Join", "[", "\n", "\t\t\t", 
                  RowBox[{
                   RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"FinalSlice", "[", "sol", "]"}], ",", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"nonfixedvars", ",", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], "&"}]}], "]"}], ",", 
                   "\n", "\t\t\t", 
                   RowBox[{"RuleListAdd", "[", 
                    RowBox[{
                    RowBox[{"ExtractTraits", "[", "popsandtraits", "]"}], ",",
                     "fg"}], "]"}]}], "\n", "\t\t", "]"}], "]"}]}]}], "\n", 
              "\t", "]"}]}]}], ",", "\n", "\t", "Else", ",", "\n", "\t", 
           RowBox[{
            RowBox[{"Msg", "[", 
             RowBox[{"FindEcoEvoCycle", "::", "badmtd"}], "]"}], ";", 
            RowBox[{"Return", "[", "$Failed", "]"}]}]}], "\n", "]"}], ";", 
         "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"solve", " ", "it"}], "*)"}], "\n", 
         RowBox[{"$findecoevocyclethingcount", "=", "0"}], ";", "\n", 
         RowBox[{"Which", "[", "\n", "\t", 
          RowBox[{
           RowBox[{"method", "\[Equal]", "\"\<FindRoot\>\""}], ",", "\n", 
           "\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", 
              RowBox[{"Print", "[", 
               RowBox[{"func", ",", "\"\<: Method FindRoot\>\""}], "]"}]}], 
             "]"}], ";", "\n", "\t", 
            RowBox[{"unks", "=", 
             RowBox[{"nonfixedvars", "/.", "ToUnks"}]}], ";", "\n", "\t", 
            RowBox[{"unksics", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"var", "/.", "ToUnks"}], ",", 
                 RowBox[{
                  RowBox[{"var", "/.", "traits"}], "/.", "pops"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"var", ",", "nonfixedvars"}], "}"}]}], "]"}]}], ";", 
            "\n", "\t", 
            RowBox[{
             RowBox[{"fw", "[", 
              RowBox[{"l_", "?", "NumericListQ"}], "]"}], ":=", 
             RowBox[{"nonfixedvars", "/.", 
              RowBox[{"thing", "[", 
               RowBox[{"Thread", "[", 
                RowBox[{"nonfixedvars", "\[Rule]", "l"}], "]"}], "]"}]}]}], 
            ";", "\n", "\t", 
            RowBox[{"res", "=", 
             RowBox[{"FindRoot", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"fw", "[", "unks", "]"}], "\[Equal]", "unks"}], ",", 
               "unksics", ",", 
               RowBox[{"Evaluate", "[", 
                RowBox[{"Sequence", "@@", "findrootopts"}], "]"}]}], "]"}]}], 
            ";", "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{"monitor", ",", 
              RowBox[{"NotebookClose", "[", "nb", "]"}]}], "]"}], ";", "\n", 
            "\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"evoeq", "\[Equal]", "True"}], ",", "\n", "\t\t", 
              RowBox[{"Return", "[", 
               RowBox[{"VarSort", "[", 
                RowBox[{
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{"ExtractTraits", "[", 
                    RowBox[{"res", "/.", "FromUnks"}], "]"}], ",", 
                   RowBox[{"ExtractVariables", "[", "sol", "]"}], ",", 
                   "fixed"}], "]"}], ",", 
                 RowBox[{"Join", "[", 
                  RowBox[{"AllVariables", ",", "AllTraits"}], "]"}]}], "]"}], 
               "]"}], ",", "\n", "\t\t", 
              RowBox[{"Return", "[", 
               RowBox[{"VarSort", "[", 
                RowBox[{
                 RowBox[{"Join", "[", 
                  RowBox[{"sol", ",", "fixed"}], "]"}], ",", 
                 RowBox[{"Join", "[", 
                  RowBox[{"AllVariables", ",", "AllTraits"}], "]"}]}], "]"}], 
               "]"}]}], "\n", "\t", "]"}]}], "\n", ",", "\n", "\t", 
           RowBox[{"method", "\[Equal]", "\"\<FixedPoint\>\""}], ",", "\n", 
           "\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{"verbose", ",", 
              RowBox[{"Print", "[", 
               RowBox[{"func", ",", "\"\<: Method FixedPoint\>\""}], "]"}]}], 
             "]"}], ";", "\n", "\t", 
            RowBox[{"res", "=", 
             RowBox[{"FixedPoint", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"thing", "[", "#", "]"}], "&"}], ",", 
               RowBox[{"Join", "[", 
                RowBox[{"pops", ",", "traits"}], "]"}], ",", "maxiterations", 
               ",", 
               RowBox[{"SameTest", "\[Rule]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"RuleListDistance", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], "<", 
                   RowBox[{"10", "^", 
                    RowBox[{"-", "accuracygoal"}]}]}], "&"}], ")"}]}]}], 
              "]"}]}], ";", "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{"monitor", ",", 
              RowBox[{"NotebookClose", "[", "nb", "]"}]}], "]"}], ";", "\n", 
            "\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
              "$findecoevocyclethingcount", "\[Equal]", "maxiterations"}], 
              ",", 
              RowBox[{"Msg", "[", 
               RowBox[{
                RowBox[{"FindEcoEvoCycle", "::", "cvmit"}], ",", 
                "maxiterations"}], "]"}]}], "]"}], ";", "\n", "\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"evoeq", "\[Equal]", "True"}], ",", "\n", "\t\t", 
              RowBox[{"Return", "[", 
               RowBox[{"VarSort", "[", 
                RowBox[{
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{"ExtractTraits", "[", "res", "]"}], ",", 
                   RowBox[{"ExtractVariables", "[", "sol", "]"}], ",", 
                   "fixed"}], "]"}], ",", 
                 RowBox[{"Join", "[", 
                  RowBox[{"AllVariables", ",", "AllTraits"}], "]"}]}], "]"}], 
               "]"}], ",", "\t", "\n", "\t\t", 
              RowBox[{"Return", "[", 
               RowBox[{"VarSort", "[", 
                RowBox[{
                 RowBox[{"Join", "[", 
                  RowBox[{"sol", ",", "fixed"}], "]"}], ",", 
                 RowBox[{"Join", "[", 
                  RowBox[{"AllVariables", ",", "AllTraits"}], "]"}]}], "]"}], 
               "]"}]}], "\n", "\t", "]"}]}], "\n", ",", "\n", "\t", "Else", 
           ",", "\n", "\t", 
           RowBox[{
            RowBox[{"Msg", "[", 
             RowBox[{"FindEcoEvoCycle", "::", "badmtd"}], "]"}], ";", 
            RowBox[{"Return", "[", "$Failed", "]"}]}]}], "\n", "]"}], ";"}]}],
        "\n", "\n", "]"}]}], "]"}], "/;", 
    RowBox[{"modelperiod", "=!=", "0"}]}]}], ";"}]], "Code",
 CellChangeTimes->{{3.688467219380802*^9, 3.688467220189288*^9}, {
   3.688571714573394*^9, 3.6885717150579643`*^9}, {3.688571774498156*^9, 
   3.6885717746869707`*^9}, {3.688571807725027*^9, 3.688571807770288*^9}, {
   3.6965894931424437`*^9, 3.696589495437352*^9}, {3.70008475724277*^9, 
   3.7000847591671333`*^9}, 3.70017206819726*^9, {3.700173024004677*^9, 
   3.700173029727997*^9}, {3.7001733055048103`*^9, 3.700173306851651*^9}, {
   3.700173836745476*^9, 3.700173857852957*^9}, {3.7002117073391657`*^9, 
   3.700211732669055*^9}, {3.700480211909071*^9, 3.700480212436982*^9}, {
   3.700480371829898*^9, 3.70048038977988*^9}, {3.700480456026506*^9, 
   3.700480491715068*^9}, {3.7004805486845837`*^9, 3.700480549008582*^9}, {
   3.700480664466621*^9, 3.700480720420683*^9}, {3.700481337010475*^9, 
   3.700481339349255*^9}, 3.7004879858683243`*^9, {3.700499399299684*^9, 
   3.70049940958946*^9}, {3.7004994566029654`*^9, 3.7004994943584967`*^9}, {
   3.700499537853911*^9, 3.700499581864044*^9}, {3.700499620601129*^9, 
   3.700499633204071*^9}, {3.700500365945609*^9, 3.700500424214325*^9}, {
   3.700500515192569*^9, 3.700500564493429*^9}, {3.700500598189919*^9, 
   3.700500624374425*^9}, {3.7005007519479923`*^9, 3.700500815795212*^9}, {
   3.700501030717408*^9, 3.7005010491459427`*^9}, {3.700501147498949*^9, 
   3.700501150063616*^9}, {3.7005052869707403`*^9, 3.700505315496647*^9}, {
   3.700505366201033*^9, 3.7005053792231483`*^9}, {3.700505773882741*^9, 
   3.7005057807979603`*^9}, {3.700505833914215*^9, 3.7005058361489573`*^9}, {
   3.700505877685948*^9, 3.7005059044987392`*^9}, {3.700505947303727*^9, 
   3.7005059713889112`*^9}, 3.7005061386247807`*^9, {3.7005061837037163`*^9, 
   3.700506194169366*^9}, {3.7005062465689907`*^9, 3.700506285845989*^9}, {
   3.700506388140911*^9, 3.7005064097489567`*^9}, {3.7005065394438143`*^9, 
   3.700506553337372*^9}, {3.7005065868676643`*^9, 3.70050659194707*^9}, {
   3.700506668825436*^9, 3.700506673907991*^9}, {3.700506704998438*^9, 
   3.700506783357108*^9}, {3.700507630403081*^9, 3.7005076444940767`*^9}, {
   3.7005160787281637`*^9, 3.700516179450632*^9}, {3.7005162536485033`*^9, 
   3.7005162671988373`*^9}, {3.700519317978774*^9, 3.700519366356497*^9}, {
   3.7005194028216953`*^9, 3.700519403828404*^9}, {3.70060576745996*^9, 
   3.70060581847192*^9}, {3.7093368173533173`*^9, 3.7093368186660433`*^9}, {
   3.7101059934886103`*^9, 3.710105995210424*^9}, {3.7102405148353157`*^9, 
   3.710240515588624*^9}, {3.710257135319757*^9, 3.710257138653057*^9}, {
   3.710587507930113*^9, 3.710587512031444*^9}, {3.7105877649424953`*^9, 
   3.7105877652431593`*^9}, 3.710588197216445*^9, {3.710589288592297*^9, 
   3.710589295759266*^9}, {3.712738535007062*^9, 3.7127385350204287`*^9}, {
   3.712740223814287*^9, 3.712740223838167*^9}, {3.7220295615236483`*^9, 
   3.722029562436973*^9}, {3.722034219253039*^9, 3.722034252077383*^9}, {
   3.722087940231101*^9, 3.722088005844839*^9}, {3.731539390096672*^9, 
   3.7315393938092546`*^9}, 3.731893137556381*^9, {3.7352236188815813`*^9, 
   3.735223634942692*^9}, {3.735223711833832*^9, 3.735223730570304*^9}, {
   3.7352237620715837`*^9, 3.735223775431983*^9}, 3.7352238425920773`*^9, {
   3.735223951135943*^9, 3.73522395235406*^9}, {3.735224063019718*^9, 
   3.735224066426886*^9}, {3.7352241030023937`*^9, 3.735224156141096*^9}, {
   3.735224664876266*^9, 3.735224735503276*^9}, {3.735224822787269*^9, 
   3.735224823952361*^9}, {3.7352249610951567`*^9, 3.735224988185626*^9}, {
   3.735225022290709*^9, 3.7352250586745863`*^9}, {3.735225198445705*^9, 
   3.7352252096744347`*^9}, {3.73522525741336*^9, 3.735225258777094*^9}, {
   3.7352252934447203`*^9, 3.735225365586637*^9}, {3.735225443467051*^9, 
   3.735225447042448*^9}, {3.735226066123672*^9, 3.735226100474572*^9}, {
   3.735226222505571*^9, 3.735226236679626*^9}, {3.735226352652855*^9, 
   3.73522635843865*^9}, {3.735226395315218*^9, 3.735226435414192*^9}, {
   3.735226465732422*^9, 3.7352264702264843`*^9}, {3.7352304616520576`*^9, 
   3.735230471602627*^9}, {3.735230596225532*^9, 3.735230603859885*^9}, {
   3.7352307252958603`*^9, 3.735230727307143*^9}, {3.735231316246887*^9, 
   3.735231372272636*^9}, {3.735231486289946*^9, 3.735231628592849*^9}, {
   3.735231684890648*^9, 3.735231704154419*^9}, {3.73523190656601*^9, 
   3.735231951566351*^9}, {3.735231994559011*^9, 3.735231998743342*^9}, {
   3.735232033278144*^9, 3.735232034653742*^9}, {3.7352320923918447`*^9, 
   3.735232121717106*^9}, 3.735232169081893*^9, {3.735232341196566*^9, 
   3.7352323705619698`*^9}, {3.735232408233213*^9, 3.735232409201316*^9}, {
   3.735232445223509*^9, 3.735232445905283*^9}, 3.7352325622609177`*^9, 
   3.735232611466007*^9, 3.7352326600610857`*^9, {3.735234072523628*^9, 
   3.7352341090486803`*^9}, {3.735234200555768*^9, 3.735234231992691*^9}, {
   3.735234530013994*^9, 3.7352345320031776`*^9}, {3.73523456742404*^9, 
   3.735234644092083*^9}, {3.735234699809146*^9, 3.73523472246941*^9}, {
   3.7352353103808393`*^9, 3.735235315578307*^9}, {3.7352353994238787`*^9, 
   3.735235481869584*^9}, {3.735235548224306*^9, 3.735235557365044*^9}, {
   3.735235922257666*^9, 3.735235998779353*^9}, {3.735236581776868*^9, 
   3.735236626372979*^9}, 3.735236775749032*^9, {3.735236827187209*^9, 
   3.735236829695763*^9}, {3.7352368970822277`*^9, 3.7352369325372543`*^9}, {
   3.7352369635233994`*^9, 3.735236998283945*^9}, {3.73523704456411*^9, 
   3.735237059849861*^9}, 3.735237292944786*^9, {3.735237405510766*^9, 
   3.735237408813499*^9}, {3.735237459463545*^9, 3.735237516550386*^9}, 
   3.735237634395543*^9, {3.735237679815528*^9, 3.7352376841117496`*^9}, {
   3.735238145326779*^9, 3.735238168250351*^9}, {3.735238225021942*^9, 
   3.735238225529821*^9}, {3.7352382607403507`*^9, 3.735238351244864*^9}, {
   3.735238395658094*^9, 3.7352384078214912`*^9}, {3.735238445826252*^9, 
   3.735238480446452*^9}, {3.73523851478788*^9, 3.7352385185143547`*^9}, {
   3.7352388209663057`*^9, 3.735238825714755*^9}, {3.735238884060905*^9, 
   3.735238951379249*^9}, {3.735239013072414*^9, 3.7352391080203743`*^9}, {
   3.7352391562002897`*^9, 3.735239248145949*^9}, {3.735239305331264*^9, 
   3.7352393337030067`*^9}, {3.735239369002862*^9, 3.735239405745796*^9}, {
   3.735253148953515*^9, 3.735253196536811*^9}, {3.735253263066064*^9, 
   3.7352532665724983`*^9}, {3.7352534326989717`*^9, 3.735253501739789*^9}, {
   3.735253536276533*^9, 3.735253540238658*^9}, {3.7352536836462193`*^9, 
   3.735253727054995*^9}, 3.735254332820922*^9, {3.735254363832509*^9, 
   3.735254366520323*^9}, {3.735254953752369*^9, 3.735254964746745*^9}, {
   3.735255778270913*^9, 3.735255779083488*^9}, {3.7352983228544283`*^9, 
   3.73529833067583*^9}, {3.7352985338451366`*^9, 3.735298536587431*^9}, {
   3.735298582391798*^9, 3.735298595091683*^9}, {3.7352986425288754`*^9, 
   3.735298642901226*^9}, {3.755373590487363*^9, 3.755373593372116*^9}, {
   3.7592177410912867`*^9, 3.759217753416176*^9}, {3.759217940946991*^9, 
   3.759217945759392*^9}, {3.759218015796183*^9, 3.759218016592643*^9}, {
   3.759218237654193*^9, 3.759218238034522*^9}, {3.759218507813245*^9, 
   3.759218674801817*^9}, {3.7592193356055202`*^9, 3.759219345565042*^9}, {
   3.759228579095845*^9, 3.759228579631447*^9}, {3.7592287077168694`*^9, 
   3.759228732544639*^9}, {3.7592287706272497`*^9, 3.75922880325429*^9}, {
   3.759229703692004*^9, 3.7592297307497463`*^9}, 3.759232837637402*^9, {
   3.759233064191592*^9, 3.75923306547432*^9}, {3.759233114579824*^9, 
   3.759233131951342*^9}, {3.7592469633704643`*^9, 3.759246967992753*^9}, {
   3.759247273324669*^9, 3.759247297212412*^9}, 3.7592475324864073`*^9, {
   3.759248667526066*^9, 3.759248754041979*^9}, {3.759248787305072*^9, 
   3.759248803780765*^9}, {3.7592489917932796`*^9, 3.759249008492675*^9}, {
   3.759249148573278*^9, 3.7592491660146*^9}, {3.759249196280652*^9, 
   3.759249233822393*^9}, {3.7592500336183147`*^9, 3.7592500411365833`*^9}, {
   3.759250109995933*^9, 3.759250124081401*^9}, {3.7592502516064863`*^9, 
   3.759250253688921*^9}, {3.75925042291634*^9, 3.759250433260293*^9}, {
   3.7592506440716476`*^9, 3.759250651869771*^9}, {3.759251065955776*^9, 
   3.7592511242052794`*^9}, {3.759251195497511*^9, 3.759251196170073*^9}, {
   3.7592513086365757`*^9, 3.759251325827579*^9}, {3.759251365566555*^9, 
   3.759251376541162*^9}, {3.759251508208103*^9, 3.759251532331058*^9}, {
   3.759251675408547*^9, 3.759251680764234*^9}, {3.759251806396661*^9, 
   3.7592518094284887`*^9}, {3.7592549984934263`*^9, 3.759255018732072*^9}, {
   3.759257057245137*^9, 3.759257058329484*^9}, {3.759257091338319*^9, 
   3.759257102598681*^9}, {3.7592572300338583`*^9, 3.759257237181624*^9}, 
   3.759294824003006*^9, {3.759294863615203*^9, 3.75929488890511*^9}, {
   3.759294952170689*^9, 3.75929507050299*^9}, {3.759296472024598*^9, 
   3.7592964827904587`*^9}, {3.759296579052528*^9, 3.75929662302466*^9}, {
   3.759296657460176*^9, 3.759296700635881*^9}, {3.759296877389697*^9, 
   3.7592969228544083`*^9}, {3.7593073682560587`*^9, 3.759307464809155*^9}, {
   3.759307612597794*^9, 3.7593076146358957`*^9}, {3.759307908023367*^9, 
   3.759307949323143*^9}, {3.759308046361002*^9, 3.759308056520619*^9}, {
   3.759308425596257*^9, 3.7593084831562347`*^9}, {3.7593085636865387`*^9, 
   3.7593085853721933`*^9}, {3.759312071110161*^9, 3.759312122972887*^9}, 
   3.759323016138083*^9, {3.759323051028426*^9, 3.759323055186556*^9}, {
   3.759323142845489*^9, 3.7593232248262587`*^9}, {3.759323408986553*^9, 
   3.759323409292046*^9}, {3.75932345424339*^9, 3.759323496539909*^9}, {
   3.759323540747075*^9, 3.7593235669997807`*^9}, {3.759324272091139*^9, 
   3.7593243109927263`*^9}, {3.7593245135179777`*^9, 
   3.7593245358045683`*^9}, {3.759324569918899*^9, 3.759324579214983*^9}, {
   3.7593249182063227`*^9, 3.759324926166637*^9}, {3.759325007139296*^9, 
   3.7593250090549593`*^9}, {3.7593252397003317`*^9, 3.759325247646821*^9}, {
   3.7593256476071377`*^9, 3.759325683452235*^9}, {3.759325825649138*^9, 
   3.7593258647406054`*^9}, {3.7593258973236017`*^9, 3.759325899263063*^9}, {
   3.75932610701798*^9, 3.759326114219687*^9}, {3.759327636005405*^9, 
   3.759327689458632*^9}, {3.759384462420744*^9, 3.759384513290648*^9}, {
   3.7593847406179657`*^9, 3.759384766221096*^9}, {3.759385024934536*^9, 
   3.7593850551343946`*^9}, {3.759385111807715*^9, 3.759385119279563*^9}, {
   3.759385158460888*^9, 3.7593851808182507`*^9}, {3.7593870849823227`*^9, 
   3.759387093375518*^9}, {3.759387123425446*^9, 3.759387157512713*^9}, {
   3.7593872161195*^9, 3.7593872517815933`*^9}, {3.759388661173729*^9, 
   3.759388675634555*^9}, {3.7593888838564377`*^9, 3.7593888894214363`*^9}, {
   3.759388966510695*^9, 3.759388996943575*^9}, {3.7593892951120663`*^9, 
   3.75938929880744*^9}, {3.7593893452633743`*^9, 3.7593893540280867`*^9}, 
   3.7593894139110813`*^9, {3.759389501132962*^9, 3.759389507070487*^9}, {
   3.759389548760593*^9, 3.759389565352504*^9}, {3.7593896013344593`*^9, 
   3.759389626308899*^9}, {3.759389951630437*^9, 3.759389952824215*^9}, {
   3.759390005429452*^9, 3.759390017612043*^9}, {3.7593909900832167`*^9, 
   3.759391014063958*^9}, {3.759391653138711*^9, 3.759391654590974*^9}, {
   3.759391769089592*^9, 3.7593917782094517`*^9}, {3.75939189426289*^9, 
   3.7593919130704107`*^9}, {3.759391943678071*^9, 3.75939195130972*^9}, {
   3.759392159949892*^9, 3.759392404552251*^9}, {3.759393991648416*^9, 
   3.759394044558777*^9}, 3.759394276950086*^9, {3.759394472495139*^9, 
   3.759394505501532*^9}, {3.759394797269175*^9, 3.759394828471554*^9}, {
   3.7593948601262627`*^9, 3.7593948698281612`*^9}, {3.759395603300131*^9, 
   3.759395612906035*^9}, {3.7593956735362473`*^9, 3.759395762481584*^9}, {
   3.759395867702772*^9, 3.7593958707668333`*^9}, {3.7593959446943007`*^9, 
   3.75939598482971*^9}, {3.7593960419546633`*^9, 3.7593960765035973`*^9}, {
   3.759396198174075*^9, 3.7593961983726673`*^9}, {3.759398357584046*^9, 
   3.759398387107416*^9}, {3.759398989661968*^9, 3.759398993640278*^9}, {
   3.759399033595235*^9, 3.759399095446154*^9}, {3.759400156402536*^9, 
   3.759400228329153*^9}, {3.7594113376067123`*^9, 3.759411338067451*^9}, {
   3.7594117972845993`*^9, 3.759411803291584*^9}, {3.7594124821386423`*^9, 
   3.7594124873110247`*^9}, {3.759412588767086*^9, 3.759412607909379*^9}, {
   3.7594139087623796`*^9, 3.759413909057248*^9}, {3.759421781666049*^9, 
   3.759421844150896*^9}, {3.759424573685688*^9, 3.759424732673991*^9}, {
   3.759424969436839*^9, 3.7594249813681583`*^9}, 3.7594256689505777`*^9, {
   3.7594283036951427`*^9, 
   3.7594283753038683`*^9}},ExpressionUUID->"caac3509-e984-4019-99d6-\
456845cefb34"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",ExpressionUUID->"d553aa7d-b596-4ae7-bfe0-8de86b74e0e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "FindEcoEvoCycle", "]"}], "=", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"Method", "\[Rule]", "\"\<FindRoot\>\""}], ",", 
     RowBox[{"FitnessGradient", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"EvoEq", "\[Rule]", "False"}], ",", "\n", "\t", 
     RowBox[{"BoundaryDetection", "\[Rule]", "False"}], ",", 
     RowBox[{"TraitShiftRate", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", "\t", 
     RowBox[{"FindRootOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"EcoSimOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"EcoEvoSimOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"NDInvOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", "\t", 
     RowBox[{"Chop", "\[Rule]", "True"}], ",", 
     RowBox[{"MaxIterations", "\[Rule]", "100"}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "6"}], ",", "\n", "\t", 
     RowBox[{"PrintTrace", "\[Rule]", "False"}], ",", 
     RowBox[{"Monitor", "\[Rule]", "False"}], ",", "\n", "\t", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.688571716541911*^9, 3.6885717166960382`*^9}, 
   3.696845912680583*^9, {3.700084443844001*^9, 3.700084444353344*^9}, {
   3.70017334546529*^9, 3.700173346931806*^9}, {3.700500440545138*^9, 
   3.7005004757573757`*^9}, {3.7005006294882812`*^9, 3.700500633408839*^9}, {
   3.700501019420169*^9, 3.700501020930078*^9}, {3.7305917476561537`*^9, 
   3.7305917675339003`*^9}, {3.759247310641811*^9, 3.759247312719409*^9}, {
   3.759324977437945*^9, 3.759324987967677*^9}, {3.759325693801169*^9, 
   3.759325702291596*^9}, {3.7593276172540083`*^9, 3.759327619110215*^9}, {
   3.759329306615399*^9, 3.759329311749673*^9}, {3.7593924140603647`*^9, 
   3.759392429136025*^9}, {3.759395558033033*^9, 3.7593955837312403`*^9}, {
   3.759395839053213*^9, 3.759395840572667*^9}, {3.7593961471961193`*^9, 
   3.759396174001652*^9}, 3.759400230202376*^9, {3.759421877454664*^9, 
   3.759421887143705*^9}, {3.759422802276264*^9, 3.7594228068697643`*^9}, {
   3.759422865577162*^9, 
   3.7594228663007603`*^9}},ExpressionUUID->"0661ac18-2c3c-4079-8420-\
7d3678d09b41"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",
 CellChangeTimes->{{3.711392910593471*^9, 
  3.7113929144125013`*^9}},ExpressionUUID->"889676e9-4bf5-4423-9f50-\
aa7a1df8f7d2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FindEcoEvoCycle", "[", 
    RowBox[{
     RowBox[{"traitsandvariables_", "?", "TraitsAndVariablesQ"}], ",", 
     RowBox[{"Gs_List:", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
   RowBox[{"FindEcoEvoCycle", "[", 
    RowBox[{
     RowBox[{"ExtractTraits", "[", "traitsandvariables", "]"}], ",", 
     RowBox[{"ExtractVariables", "[", "traitsandvariables", "]"}], ",", "Gs", 
     ",", "opts"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FindEcoCycleEvoEq", "[", "stuff___", "]"}], ":=", 
   RowBox[{"FindEcoEvoCycle", "[", 
    RowBox[{"stuff", ",", 
     RowBox[{"EvoEq", "\[Rule]", "True"}]}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.7113929204987917`*^9, 3.711392970316506*^9}, {
  3.7113948359592237`*^9, 3.711394848887685*^9}, {3.711394887031405*^9, 
  3.711394889332657*^9}, {3.712738535029456*^9, 3.712738535032954*^9}, {
  3.712740223844207*^9, 3.7127402238516693`*^9}, {3.759400233092518*^9, 
  3.759400234299798*^9}, {3.759429138517144*^9, 
  3.759429168969955*^9}},ExpressionUUID->"93516ea1-90b1-4c80-a544-\
866458c861f0"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["*EvoEq: SolveEvoEq / NSolveEvoEq / FindEvoEq", "Subsection",
 CellDingbat->"\[ClubSuit]",
 CellChangeTimes->{{3.708579622828477*^9, 3.708579635334839*^9}, {
  3.708579831057356*^9, 
  3.7085798333017693`*^9}},ExpressionUUID->"40dfd640-0212-4454-9cbd-\
b77220008346"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EvoEq", "[", 
    RowBox[{
     RowBox[{"traits", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "TraitsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"sol", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Gs_List:", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], " ", ":=", "\n", " ", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<EvoEq\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "method", ",", "fixed", ",", "delaydinv", ",", 
       "solveopts", ",", "nsolveopts", ",", "findrootopts", ",", 
       "findinstanceopts", ",", "boundarydetection", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "fixedvars", 
       ",", "fixedtraits", ",", "fixedvariables", ",", "tounks", ",", 
       "fromunks", ",", "evoeqns", ",", "eqns", ",", "unks", ",", "unksics", 
       ",", "newunk", ",", "res"}], "}"}], ",", "\n", "   ", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "Nsp", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Msg", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", " ", 
              RowBox[{"Options", "[", "EvoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", " ", 
              RowBox[{"Options", "[", "EvoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"method", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Method", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"fixed", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Fixed", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"fixedvars", "=", 
         RowBox[{"fixed", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        RowBox[{"fixedtraits", "=", 
         RowBox[{"ExtractTraits", "[", "fixed", "]"}]}], ";", "\n", 
        RowBox[{"fixedvariables", "=", 
         RowBox[{"ExtractVariables", "[", "fixed", "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: fixedvars=\>\"", ",", "fixedvars"}], 
           "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"method", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Method", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"delaydinv", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"DelayDInv", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"solveopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"SolveOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"nsolveopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"NSolveOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"findrootopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"FindRootOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"findinstanceopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"FindInstanceOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"boundarydetection", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"BoundaryDetection", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"SetNsp", "[", 
         RowBox[{"Join", "[", 
          RowBox[{"sol", ",", "fixedvariables"}], "]"}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"evoeqns", "=", 
         RowBox[{"EvoEqns", "[", 
          RowBox[{"sol", ",", "Gs", ",", "opts"}], "]"}]}], ";", "\n", 
        RowBox[{"eqns", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"evoeqns", "/.", "Eq"}], "/.", "RemoveTraitts"}], "/.", 
          "RemovePopts"}]}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"set", " ", "up", " ", "unksics"}], " ", "*)"}], "\n", 
        RowBox[{"unks", "=", 
         RowBox[{
          RowBox[{"evoeqns", "/.", "LHS"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"var_", "'"}], "[", "t", "]"}], "\[Rule]", "var"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"var_", "[", 
               RowBox[{"t", "+", "1"}], "]"}], "/", 
              RowBox[{"var_", "[", "t", "]"}]}], "\[Rule]", "var"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"var_", "[", 
               RowBox[{"t", "+", "1"}], "]"}], "-", 
              RowBox[{"var_", "[", "t", "]"}]}], "\[Rule]", "var"}], ",", 
            RowBox[{
             RowBox[{"var_", "[", 
              RowBox[{"t", "+", "1"}], "]"}], "\[Rule]", "var"}]}], "}"}]}]}],
         ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"method", "\[Equal]", "\"\<FindRoot\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"unksics", "=", 
            RowBox[{"{", "}"}]}], ";", "\n", "\t", 
           RowBox[{"Do", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"newunk", "=", 
               RowBox[{"{", 
                RowBox[{"var", ",", 
                 RowBox[{"var", "/.", "traits"}]}], "}"}]}], ";", "\n", 
              "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{"boundarydetection", ",", 
                RowBox[{"newunk", "=", 
                 RowBox[{"Join", "[", 
                  RowBox[{"newunk", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"range", "[", "var", "]"}], "]"}], ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{"range", "[", "var", "]"}], "]"}]}], "}"}]}], 
                  "]"}]}]}], "]"}], ";", "\n", "\t\t", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"unksics", ",", "newunk"}], "]"}], ";"}], "\n", "\t", 
             ",", 
             RowBox[{"{", 
              RowBox[{"var", ",", "unks"}], "}"}]}], "]"}]}]}], "\n", "]"}], 
        ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"solve", " ", "it"}], " ", "*)"}], "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"method", "\[Equal]", "\"\<Solve\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"eqns", "=", "eqns"}], ",", 
                 RowBox[{"unks", "=", "unks"}], ",", 
                 RowBox[{"op", "=", 
                  RowBox[{"Sequence", "@@", "solveopts"}]}]}], "}"}], ",", 
               "\n", "\t\t", 
               RowBox[{"PrintCall", "[", 
                RowBox[{"Global`res", "=", 
                 RowBox[{"Solve", "[", 
                  RowBox[{"eqns", ",", "unks", ",", "op"}], "]"}]}], "]"}]}], 
              "]"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{"res", "=", 
            RowBox[{"Solve", "[", 
             RowBox[{"eqns", ",", "unks", ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "solveopts"}], "]"}]}], "]"}]}]}], 
          ",", "\n", "\t", 
          RowBox[{"method", "\[Equal]", "\"\<NSolve\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", "\n", "\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"eqns", "=", "eqns"}], ",", 
                 RowBox[{"unks", "=", "unks"}], ",", 
                 RowBox[{"op", "=", 
                  RowBox[{"Sequence", "@@", "nsolveopts"}]}]}], "}"}], ",", 
               "\n", "\t\t", 
               RowBox[{"PrintCall", "[", 
                RowBox[{"Global`res", "=", 
                 RowBox[{"NSolve", "[", 
                  RowBox[{"eqns", ",", "unks", ",", "op"}], "]"}]}], "]"}]}], 
              "]"}]}], "]"}], ";", "\n", "\t", 
           RowBox[{"res", "=", 
            RowBox[{"NSolve", "[", 
             RowBox[{"eqns", ",", "unks", ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "nsolveopts"}], "]"}]}], "]"}]}]}], 
          ",", "\n", "\t", 
          RowBox[{"method", "\[Equal]", "\"\<FindRoot\>\""}], ",", "\n", "\t", 
          RowBox[{"If", "[", 
           RowBox[{"delaydinv", ",", "\n", "\t\t", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{"verbose", ",", "\n", "\t\t\t", 
               RowBox[{"With", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"eqns", "=", "eqns"}], ",", 
                   RowBox[{"unksics", "=", "unksics"}], ",", 
                   RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "findrootopts"}]}]}], "}"}], 
                 ",", "\n", "\t\t\t", 
                 RowBox[{"PrintCall", "[", 
                  RowBox[{"Global`res", "=", 
                   RowBox[{
                    RowBox[{"FindRoot", "[", 
                    RowBox[{
                    RowBox[{"eqns", "/.", "ToUnkRules"}], ",", 
                    RowBox[{"unksics", "/.", "ToUnks"}], ",", "op"}], "]"}], "/.",
                     "FromUnks"}]}], "]"}]}], "]"}]}], "]"}], ";", "\n", 
             "\t\t", 
             RowBox[{"res", "=", 
              RowBox[{
               RowBox[{"FindRoot", "[", 
                RowBox[{
                 RowBox[{"eqns", "/.", "ToUnkRules"}], ",", 
                 RowBox[{"unksics", "/.", "ToUnks"}], ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"Sequence", "@@", "findrootopts"}], "]"}]}], "]"}], 
               "/.", "FromUnks"}]}]}], "\n", "\t", ",", "\n", "\t\t", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{"verbose", ",", "\n", "\t\t\t", 
               RowBox[{"With", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"eqns", "=", "eqns"}], ",", 
                   RowBox[{"unksics", "=", "unksics"}], ",", 
                   RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@@", "findrootopts"}]}]}], "}"}], 
                 ",", "\n", "\t\t\t", 
                 RowBox[{"PrintCall", "[", 
                  RowBox[{"Global`res", "=", 
                   RowBox[{"FindRoot", "[", 
                    RowBox[{"eqns", ",", "unksics", ",", "op"}], "]"}]}], 
                  "]"}]}], "]"}]}], "]"}], ";", "\n", "\t\t", 
             RowBox[{"res", "=", 
              RowBox[{"FindRoot", "[", 
               RowBox[{"eqns", ",", "unksics", ",", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"Sequence", "@@", "findrootopts"}], "]"}]}], 
               "]"}]}]}]}], "\n", "\t", "]"}], ",", "\n", "\t", 
          RowBox[{"method", "\[Equal]", "\"\<FindInstance\>\""}], ",", "\n", 
          "\t", 
          RowBox[{"If", "[", 
           RowBox[{"delaydinv", ",", "\n", "\t\t", 
            RowBox[{
             RowBox[{"Msg", "[", 
              RowBox[{"FindEvoEq", "::", "needic"}], "]"}], ";", 
             RowBox[{"Return", "[", "$Failed", "]"}]}], "\n", "\t", ",", "\n",
             "\t\t", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{"verbose", ",", "\n", "\t\t\t", 
               RowBox[{"With", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"eqns", "=", "eqns"}], ",", 
                   RowBox[{"unks", "=", "unks"}], ",", 
                   RowBox[{"op", "=", 
                    RowBox[{"Sequence", "@", "findinstanceopts"}]}]}], "}"}], 
                 ",", "\n", "\t\t\t", 
                 RowBox[{"PrintCall", "[", 
                  RowBox[{"Global`res", "=", 
                   RowBox[{
                    RowBox[{"FindInstance", "[", 
                    RowBox[{"eqns", ",", "unks", ",", "op"}], "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                  "]"}]}], "]"}]}], "]"}], ";", "\n", "\t\t", 
             RowBox[{"res", "=", 
              RowBox[{
               RowBox[{"FindInstance", "[", 
                RowBox[{"eqns", ",", "unks", ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"Sequence", "@@", "findinstanceopts"}], "]"}]}], 
                "]"}], "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}]}]}]}], "\n", "\t", "]"}], ",", "\n", 
          "\t", "Else", ",", " ", 
          RowBox[{"(*", " ", "else", " ", "*)"}], "\n", "\t", 
          RowBox[{
           RowBox[{"Msg", "[", 
            RowBox[{"EvoEq", "::", "badmtd"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "\n", "]"}], ";", 
        "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Solve", ",", "NSolve"}], "}"}], ",", 
            RowBox[{"Head", "[", "res", "]"}]}], "]"}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Msg", "[", 
            RowBox[{"EvoEq", "::", "nosol"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}], ",", "\n", "\t", 
          RowBox[{"Return", "[", 
           RowBox[{"VarSort", "[", 
            RowBox[{
             RowBox[{"EqSort", "[", 
              RowBox[{"Chop", "[", "res", "]"}], "]"}], ",", "AllTraits"}], 
            "]"}], "]"}]}], "\n", "]"}], ";"}]}], "\n", "\n", "]"}]}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.688409487229787*^9, 3.688410346995085*^9, {3.6885717170330667`*^9, 
   3.688571717543687*^9}, {3.688571775992733*^9, 3.688571776526206*^9}, {
   3.708580358524328*^9, 3.708580367133918*^9}, {3.7085805480249043`*^9, 
   3.708580552957263*^9}, {3.7085806237121067`*^9, 3.708580626686872*^9}, {
   3.7085806780007763`*^9, 3.708580685238158*^9}, {3.7085807226718073`*^9, 
   3.708580746873554*^9}, {3.708580812359832*^9, 3.708580841174244*^9}, {
   3.708580891500785*^9, 3.7085809064428596`*^9}, {3.7085810138866577`*^9, 
   3.70858101422005*^9}, {3.708581073368642*^9, 3.7085811040418367`*^9}, 
   3.7085961658744917`*^9, {3.708597278922868*^9, 3.7085972893497257`*^9}, {
   3.7085974470844193`*^9, 3.7085974974750767`*^9}, {3.708597566711635*^9, 
   3.7085975691400623`*^9}, 3.70859847287843*^9, {3.7086008014413977`*^9, 
   3.70860080362284*^9}, {3.708600837011648*^9, 3.708600839412184*^9}, {
   3.708601266341401*^9, 3.708601269661209*^9}, 3.70860129992697*^9, {
   3.708601634890072*^9, 3.70860169233783*^9}, 3.708601823113695*^9, {
   3.709032277347278*^9, 3.709032330403159*^9}, {3.709032569839916*^9, 
   3.709032621848825*^9}, {3.709033236257003*^9, 3.709033236416822*^9}, {
   3.709111148485799*^9, 3.709111154948862*^9}, {3.70933682108967*^9, 
   3.7093368240934772`*^9}, {3.710105995940238*^9, 3.710105996866913*^9}, {
   3.7127385350462303`*^9, 3.712738535054513*^9}, {3.712740223862005*^9, 
   3.712740223881629*^9}, {3.722033875063723*^9, 3.722033876233472*^9}, {
   3.722034258139152*^9, 3.7220342674868317`*^9}, {3.7220880237571917`*^9, 
   3.722088034520193*^9}, {3.731104242637883*^9, 3.731104278635716*^9}, {
   3.731104997781638*^9, 3.7311050263398447`*^9}, {3.731105876328713*^9, 
   3.731105894099358*^9}, {3.731105938905416*^9, 3.7311059507337418`*^9}, {
   3.731108033278398*^9, 3.731108067757883*^9}, {3.73110814743054*^9, 
   3.7311081521616497`*^9}, {3.7311083849031143`*^9, 3.731108393536907*^9}, {
   3.7311085535965652`*^9, 3.731108606506817*^9}, {3.731108730301261*^9, 
   3.73110873176026*^9}, {3.731108836401286*^9, 3.731108836931473*^9}, 
   3.731108889598999*^9, {3.7311089328030252`*^9, 3.73110895392705*^9}, {
   3.731109330453732*^9, 3.7311093334391327`*^9}, {3.7311093876564302`*^9, 
   3.731109452845138*^9}, {3.731144600632256*^9, 3.731144603028613*^9}, {
   3.73114501783032*^9, 3.731145048660369*^9}, {3.731145080016384*^9, 
   3.7311450831048927`*^9}, {3.731145213309173*^9, 3.731145222493976*^9}, {
   3.731145276224111*^9, 3.73114528092452*^9}, {3.731231960738332*^9, 
   3.7312319650589457`*^9}, {3.731232409757909*^9, 3.731232414896275*^9}, {
   3.7312327649049053`*^9, 3.731232810799704*^9}, {3.7312332089023733`*^9, 
   3.731233223293242*^9}, {3.731233287350834*^9, 3.7312332926707697`*^9}, {
   3.731233329714402*^9, 3.731233340465416*^9}, {3.731233414893477*^9, 
   3.731233458364264*^9}, {3.731233514817432*^9, 3.731233514973345*^9}, {
   3.7312335639590197`*^9, 3.731233593700034*^9}, {3.731233891442408*^9, 
   3.731233900742066*^9}, {3.731234010457054*^9, 3.7312340124423933`*^9}, {
   3.731249212385839*^9, 3.731249237357728*^9}, {3.7312492800564404`*^9, 
   3.7312492941133204`*^9}, {3.731249339535811*^9, 3.731249365257427*^9}, {
   3.731251393536757*^9, 3.731251456459611*^9}, {3.731253719607267*^9, 
   3.731253721022493*^9}, {3.73125375298354*^9, 3.731253754446919*^9}, {
   3.7312538290833073`*^9, 3.731253858968158*^9}, {3.731254100893989*^9, 
   3.731254105593131*^9}, {3.731254275766021*^9, 3.731254316403315*^9}, 
   3.731254508019658*^9, {3.731254564464875*^9, 3.7312545655985937`*^9}, {
   3.7312549503901787`*^9, 3.731254995337842*^9}, {3.731255056378912*^9, 
   3.7312550890162373`*^9}, {3.73125606462327*^9, 3.731256078094046*^9}, {
   3.7312561377447968`*^9, 3.731256146461253*^9}, {3.731256445277829*^9, 
   3.731256453281808*^9}, {3.731257298224099*^9, 3.731257309872786*^9}, {
   3.731257381953423*^9, 3.7312574078388577`*^9}, {3.7312574385592833`*^9, 
   3.731257446831624*^9}, {3.731257653208837*^9, 3.731257671759345*^9}, 
   3.731257713869981*^9, {3.7312630604182034`*^9, 3.731263065150948*^9}, {
   3.731266600116169*^9, 3.7312666462739267`*^9}, {3.731266679355897*^9, 
   3.731266680348941*^9}, {3.731267651339802*^9, 3.731267657364622*^9}, {
   3.7312679781321507`*^9, 3.731268105278483*^9}, {3.731268288730389*^9, 
   3.731268461590226*^9}, {3.731272895231608*^9, 3.731272899930691*^9}, {
   3.73127296391442*^9, 3.731273007394515*^9}, {3.731273046390067*^9, 
   3.7312731187035503`*^9}, {3.73127317548923*^9, 3.731273187167938*^9}, {
   3.7312741636696253`*^9, 3.731274164109251*^9}, 3.7312744797645807`*^9, {
   3.7312794276717577`*^9, 3.731279538417981*^9}, {3.731279621426643*^9, 
   3.731279653438983*^9}, {3.731280286581835*^9, 3.731280291686035*^9}, {
   3.731280393880105*^9, 3.731280410573455*^9}, {3.7312805048047247`*^9, 
   3.7312805388927727`*^9}, {3.731280600180799*^9, 3.731280615960024*^9}, {
   3.731280714400795*^9, 3.731280732421489*^9}, {3.731280775846353*^9, 
   3.731280829597797*^9}, {3.731280885205934*^9, 3.731280907399735*^9}, 
   3.731280946540551*^9, {3.731281567826366*^9, 3.731281631156535*^9}, {
   3.731281766701133*^9, 3.73128176974076*^9}, {3.731281840776827*^9, 
   3.731281867616517*^9}, {3.731281924430279*^9, 3.731281981616087*^9}, {
   3.731282058372973*^9, 3.7312820731719227`*^9}, 3.731282127899729*^9, {
   3.7312821657357597`*^9, 3.731282199733157*^9}, {3.731282325140951*^9, 
   3.731282329520623*^9}, {3.731282531004629*^9, 3.73128253714888*^9}, {
   3.73128265219977*^9, 3.731282694634664*^9}, {3.731282757755281*^9, 
   3.73128286091042*^9}, {3.731283302413376*^9, 3.731283377599361*^9}, {
   3.731284106308639*^9, 3.73128413331852*^9}, {3.731284178545678*^9, 
   3.7312841891668463`*^9}, 3.731284345004175*^9, {3.731284876614265*^9, 
   3.7312849375262947`*^9}, {3.7314229872077713`*^9, 3.731422989210918*^9}, {
   3.731423022526702*^9, 3.7314230243049583`*^9}, {3.7314230727673197`*^9, 
   3.7314231396940203`*^9}, {3.7314231718643847`*^9, 
   3.7314231997101383`*^9}, {3.731423245448696*^9, 3.7314232596523867`*^9}, {
   3.73142458505212*^9, 3.7314245863224173`*^9}, {3.7314246915341682`*^9, 
   3.731424692922903*^9}, {3.731424762855925*^9, 3.731424897585847*^9}, {
   3.731425044363583*^9, 3.73142511736366*^9}, {3.7314252957475233`*^9, 
   3.731425308297345*^9}, {3.7314253901671057`*^9, 3.73142539474082*^9}, {
   3.7314254434704447`*^9, 3.731425445939843*^9}, 3.7314254798405733`*^9, {
   3.731425689136718*^9, 3.7314256982055273`*^9}, {3.7314257558883333`*^9, 
   3.73142576286087*^9}, {3.731426888927384*^9, 3.73142689723682*^9}, {
   3.731450833971335*^9, 3.7314508596380873`*^9}, {3.7314508970485907`*^9, 
   3.7314508974541407`*^9}, {3.7315371159072733`*^9, 
   3.7315371594483337`*^9}, {3.7315372093818827`*^9, 3.731537260695656*^9}, {
   3.731537295857874*^9, 3.731537297923717*^9}, {3.731538698320225*^9, 
   3.731538701586135*^9}, {3.7315394650747538`*^9, 3.73153946806116*^9}, {
   3.731628639090846*^9, 3.7316287378012333`*^9}, {3.7316287974162083`*^9, 
   3.731628813596323*^9}, {3.731628878118383*^9, 3.731628946553934*^9}, {
   3.731628981708934*^9, 3.731628993515253*^9}, 3.731629448335478*^9, {
   3.7316295546722107`*^9, 3.731629680971987*^9}, {3.731629884305613*^9, 
   3.7316299067377167`*^9}, {3.731629942228643*^9, 3.731629961840302*^9}, {
   3.73163012105191*^9, 3.7316301323572273`*^9}, {3.731630197546854*^9, 
   3.7316302473787613`*^9}, {3.731631111581359*^9, 3.731631186197981*^9}, {
   3.7316312783359737`*^9, 3.731631283989497*^9}, 3.731631325447534*^9, {
   3.7316315566866503`*^9, 3.7316315704384813`*^9}, {3.731631875935011*^9, 
   3.7316318819599953`*^9}, {3.7316322253460207`*^9, 
   3.7316322295719852`*^9}, {3.7316326810817423`*^9, 3.731632690339054*^9}, {
   3.731633340442411*^9, 3.731633348246553*^9}, {3.7316334100932293`*^9, 
   3.731633478815362*^9}, {3.7316731998244123`*^9, 3.731673207368875*^9}, {
   3.731673245508831*^9, 3.7316732459382257`*^9}, {3.731673313376671*^9, 
   3.7316733966919928`*^9}, {3.731673841011094*^9, 3.731673899994464*^9}, {
   3.7316739303713923`*^9, 3.731674020737067*^9}, {3.731674076374237*^9, 
   3.731674116927333*^9}, {3.73167446741199*^9, 3.731674483021229*^9}, {
   3.731674671274207*^9, 3.731674686053875*^9}, {3.731674817460943*^9, 
   3.731674824090164*^9}, {3.731674855619108*^9, 3.7316748754962473`*^9}, {
   3.731675052751121*^9, 3.7316750871684504`*^9}, {3.7316755793994226`*^9, 
   3.73167558767528*^9}, {3.7316756908917513`*^9, 3.731675691882739*^9}, {
   3.731805303531169*^9, 3.731805304114072*^9}, 3.731979039384169*^9, {
   3.7322251214319*^9, 3.732225124344277*^9}, {3.732467676763352*^9, 
   3.7324676906438637`*^9}, 3.732467943330927*^9, {3.732468239312109*^9, 
   3.732468245541072*^9}, {3.7324692337074823`*^9, 3.73246932004558*^9}, {
   3.732470085622654*^9, 3.732470102820382*^9}, 3.732470950007395*^9, {
   3.73317570956045*^9, 3.733175798569789*^9}, {3.735226645210906*^9, 
   3.7352266574768267`*^9}, {3.735226689380849*^9, 3.735226709532523*^9}, {
   3.735226880847226*^9, 3.7352268952941427`*^9}, {3.755373595257044*^9, 
   3.755373600807515*^9}, {3.758523859056376*^9, 3.758523887672247*^9}, {
   3.75868990946905*^9, 3.7586899270281363`*^9}, {3.758693521905422*^9, 
   3.758693604294526*^9}, {3.758707464500107*^9, 3.7587074649633923`*^9}, {
   3.7587075191537943`*^9, 3.75870754270959*^9}, {3.758707769046726*^9, 
   3.758707773469331*^9}, {3.758707803730268*^9, 3.7587078262552156`*^9}, {
   3.758708452143674*^9, 3.758708498961294*^9}, {3.758708604038638*^9, 
   3.7587087038052187`*^9}, {3.7587088958895073`*^9, 3.758708903185689*^9}, {
   3.758708967379262*^9, 3.758709066546454*^9}, {3.7587091722382727`*^9, 
   3.758709220032202*^9}, {3.758713085928673*^9, 3.758713104846285*^9}, 
   3.75871314173385*^9, {3.758713677573009*^9, 3.758713687657476*^9}, {
   3.758713991692647*^9, 3.7587139920838013`*^9}, {3.758714094860787*^9, 
   3.7587140970520487`*^9}, {3.758716029225338*^9, 3.758716041814361*^9}, {
   3.758716115585401*^9, 3.758716132004547*^9}, {3.758716218676671*^9, 
   3.758716225339161*^9}, {3.7587168004909563`*^9, 3.758716922601359*^9}, {
   3.758717027935792*^9, 3.758717029152979*^9}, {3.758717120383669*^9, 
   3.758717250194357*^9}, {3.758718661791471*^9, 3.758718678416768*^9}, {
   3.758719035219838*^9, 3.758719066951592*^9}, {3.7587191550661077`*^9, 
   3.7587191620482807`*^9}},ExpressionUUID->"6d27d783-39dc-4c80-80d2-\
54518a3ed583"],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",
 CellChangeTimes->{{3.7085811611223593`*^9, 
  3.708581162674871*^9}},ExpressionUUID->"3eb13cb0-62d6-48c0-92e6-\
9eab4b04ea28"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SolveEvoEq", "[", "args___", "]"}], ":=", 
   RowBox[{"EvoEq", "[", 
    RowBox[{"args", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Solve\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NSolveEvoEq", "[", "args___", "]"}], ":=", 
   RowBox[{"EvoEq", "[", 
    RowBox[{"args", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NSolve\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindEvoEq", "[", 
    RowBox[{
     RowBox[{"sol", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Gs", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "GsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"EvoEq", "[", 
    RowBox[{"sol", ",", "Gs", ",", "opts", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<FindInstance\>\""}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FindEvoEq", "[", "args___", "]"}], ":=", 
   RowBox[{"EvoEq", "[", 
    RowBox[{"args", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<FindRoot\>\""}]}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.6954002528825893`*^9, 3.6954002987471733`*^9}, {
  3.708581196290766*^9, 3.708581213389889*^9}, {3.733175869485119*^9, 
  3.7331759283558598`*^9}, {3.758713224538867*^9, 3.7587132291665993`*^9}, {
  3.7587133587261267`*^9, 3.758713362802606*^9}, {3.758714111808833*^9, 
  3.758714113127393*^9}},ExpressionUUID->"823ffeb0-80f4-493d-8d16-\
bb933eb0f127"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.70858110896756*^9, 
  3.708581109870212*^9}},ExpressionUUID->"265d7a1b-9b03-4e3a-b339-\
1c5179e7182d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "EvoEq", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Method", "\[Rule]", "\"\<None\>\""}], ",", "\n", 
     RowBox[{"DelayDInv", "\[Rule]", "False"}], ",", 
     RowBox[{"DInvOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"SolveOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"NSolveOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"FindRootOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"FindInstanceOpts", "\[Rule]", 
      RowBox[{"{", "Reals", "}"}]}], ",", "\n", 
     RowBox[{"BoundaryDetection", "\[Rule]", "False"}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", "\n", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.708581113938579*^9, 3.708581142353598*^9}, {
   3.70903292191361*^9, 3.709032932809966*^9}, {3.709033139894442*^9, 
   3.709033140962489*^9}, {3.731110719735405*^9, 3.731110726950795*^9}, {
   3.7312334667724953`*^9, 3.731233476102783*^9}, {3.731536233681926*^9, 
   3.731536234385519*^9}, 3.73153683519956*^9, {3.733176001804069*^9, 
   3.733176007278928*^9}, {3.733176130242333*^9, 3.7331761324864397`*^9}, {
   3.7587197889751177`*^9, 
   3.758719792644939*^9}},ExpressionUUID->"29885eb5-1849-40f1-a04c-\
3e06fd8fffca"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["EcoEvoJacobian", "Subsection",
 CellDingbat->
  "\[ClubSuit]",ExpressionUUID->"4bce4d5b-d870-4abf-8f1a-c919feb9e0ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoEvoJacobian", "[", 
    RowBox[{
     RowBox[{"traitsin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "TraitsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"popsin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Gs", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "GsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<EcoEvoJacobian\>\"", "]"}]}], ",", 
       "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "fixed", ",", "chop", ",", "\n", 
       RowBox[{"(*", " ", "rules", " ", "*)"}], "\n", "removets", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"fixed", " ", "variables"}], " ", "*)"}], "\n", "fixedvars", 
       ",", "fixedtraits", ",", "fixedvariables", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "traits", ",",
        "pops", ",", "eqns", ",", "unks", ",", "jmat"}], "}"}], ",", "\n", 
     "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "Nsp", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Msg", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEvoJacobian", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEvoJacobian", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"chop", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Chop", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEvoJacobian", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"fixed", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Fixed", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EcoEvoJacobian", "]"}]}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"fixedvars", "=", 
         RowBox[{"fixed", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        RowBox[{"fixedtraits", "=", 
         RowBox[{"ExtractTraits", "[", "fixed", "]"}]}], ";", "\n", 
        RowBox[{"fixedvariables", "=", 
         RowBox[{"ExtractVariables", "[", "fixed", "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: fixedvars=\>\"", ",", "fixedvars"}], 
           "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"handle", " ", "blanks"}], " ", "&"}], " ", "figure", " ", 
          "out", " ", "number", " ", "of", " ", "species", " ", "in", " ", 
          "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"traits", "=", 
         RowBox[{"ExpandNspInTraits", "[", "traitsin", "]"}]}], ";", "\n", 
        RowBox[{"pops", "=", 
         RowBox[{"ExpandNspInPops", "[", "popsin", "]"}]}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"SetNsp", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"traits", ",", "fixedtraits"}], "]"}], ",", 
          RowBox[{"Join", "[", 
           RowBox[{"pops", ",", "fixedvariables"}], "]"}]}], "]"}], ";", "\n",
         "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"set", " ", "up", " ", "eqns"}], " ", "&"}], " ", "unks"}],
          " ", "*)"}], "\n", 
        RowBox[{"eqns", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"EcoEqns", "[", 
            RowBox[{"BlankTraits", ",", "opts"}], "]"}], ",", 
           RowBox[{"EvoEqns", "[", 
            RowBox[{"BlankVariables", ",", "Gs", ",", "opts"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"unks", "=", 
         RowBox[{
          RowBox[{"eqns", "/.", "LHS"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"var_", "'"}], "[", "t", "]"}], "\[Rule]", "var"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"var_", "[", 
               RowBox[{"t", "+", "1"}], "]"}], "/", 
              RowBox[{"var_", "[", "t", "]"}]}], "\[Rule]", "var"}], ",", 
            RowBox[{
             RowBox[{"var_", "[", 
              RowBox[{"t", "+", "1"}], "]"}], "\[Rule]", "var"}]}], "}"}]}]}],
         ";", "\n", 
        RowBox[{"eqns", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"eqns", "/.", "RHS"}], "/.", "RemoveTraitts"}], "/.", 
          "RemovePopts"}]}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: eqns=\>\""}], "]"}], ";", 
           RowBox[{"Print", "[", "eqns", "]"}], ";", "\n", "\t", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: unks=\>\""}], "]"}], ";", 
           RowBox[{"Print", "[", "unks", "]"}], ";"}]}], "\n", "]"}], ";", 
        "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"set", " ", "up", " ", "jacobian"}], " ", "*)"}], "\n", 
        RowBox[{"jmat", "=", 
         RowBox[{"D", "[", 
          RowBox[{"eqns", ",", 
           RowBox[{"{", "unks", "}"}]}], "]"}]}], ";", " ", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: jmat=\>\"", ",", "jmat"}], "]"}]}], 
         "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"chop", ",", "\n", "\t", 
          RowBox[{"Return", "[", 
           RowBox[{"Chop", "[", 
            RowBox[{
             RowBox[{"jmat", "/.", "pops"}], "/.", "traits"}], "]"}], "]"}], 
          ",", "\n", "\t", 
          RowBox[{"Return", "[", 
           RowBox[{
            RowBox[{"jmat", "/.", "pops"}], "/.", "traits"}], "]"}]}], "\n", 
         "]"}], ";"}]}], "\n", "\n", "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.687881463923338*^9, 3.6878814642206593`*^9}, {
   3.688571712031157*^9, 3.688571712970069*^9}, {3.688571773438903*^9, 
   3.688571773691594*^9}, {3.688585647886649*^9, 3.688585647950056*^9}, 
   3.6968459126099863`*^9, {3.709111069104553*^9, 3.709111071146356*^9}, {
   3.709111188579338*^9, 3.709111206600791*^9}, 3.709112345311878*^9, {
   3.709113170032196*^9, 3.70911320751721*^9}, {3.7091161216288033`*^9, 
   3.709116132278907*^9}, {3.70912471384448*^9, 3.709124714812223*^9}, {
   3.7091247525894337`*^9, 3.709124753236*^9}, {3.709124905981728*^9, 
   3.709124908675071*^9}, {3.7091251563288107`*^9, 3.7091252148336477`*^9}, {
   3.709125256966683*^9, 3.709125266144486*^9}, 3.709125319429579*^9, {
   3.709125487460884*^9, 3.70912550009022*^9}, {3.709125565851274*^9, 
   3.709125603050583*^9}, {3.709125643282658*^9, 3.709125652304858*^9}, {
   3.7091353045459547`*^9, 3.709135304723246*^9}, {3.709135339875559*^9, 
   3.70913534053586*^9}, {3.709135421209797*^9, 3.70913546669312*^9}, {
   3.709136303686781*^9, 3.709136304664163*^9}, {3.709336826194422*^9, 
   3.709336827721236*^9}, 3.710105997800356*^9, {3.710240822263516*^9, 
   3.710240822306775*^9}, 3.710324425713889*^9, {3.7127385350799313`*^9, 
   3.712738535091407*^9}, {3.7127402238954687`*^9, 3.712740223918549*^9}, {
   3.722033881951179*^9, 3.722033882679332*^9}, {3.722034298059016*^9, 
   3.722034304441523*^9}, {3.722088057303978*^9, 3.722088063591494*^9}, {
   3.722088095545795*^9, 3.72208813934046*^9}, {3.731539401126726*^9, 
   3.731539403487095*^9}, {3.731806893384124*^9, 3.73180690920345*^9}, {
   3.7318070052160587`*^9, 3.731807191935503*^9}, {3.731807223755814*^9, 
   3.731807262042197*^9}, {3.731807313270775*^9, 3.7318073239052677`*^9}, {
   3.731807382634013*^9, 3.731807399455317*^9}, {3.731807442504713*^9, 
   3.7318074773785057`*^9}, {3.7318075153810377`*^9, 3.73180752155061*^9}, {
   3.7318075792935457`*^9, 3.7318075796205883`*^9}, {3.7318080343289022`*^9, 
   3.731808067701665*^9}, {3.7318087633754587`*^9, 3.731808777563792*^9}, {
   3.73180882600138*^9, 3.7318088299801826`*^9}, {3.731845078919231*^9, 
   3.731845086394939*^9}, {3.731891176682523*^9, 3.73189119492102*^9}, {
   3.7318924222308083`*^9, 3.731892427565631*^9}, {3.731892752601499*^9, 
   3.73189275341535*^9}, {3.731892845528639*^9, 3.73189286778662*^9}, {
   3.731892915726254*^9, 3.731892917897695*^9}, {3.7318930132438793`*^9, 
   3.7318930316843967`*^9}, {3.731937902886425*^9, 3.731937924621661*^9}, {
   3.7319381511251917`*^9, 3.731938153734726*^9}, {3.7319733707174053`*^9, 
   3.7319733855238857`*^9}, {3.755373602092381*^9, 3.755373603415042*^9}, {
   3.759165448329403*^9, 3.759165464402302*^9}, {3.759165768408996*^9, 
   3.7591657767475147`*^9}, {3.759165832525058*^9, 3.75916590243913*^9}, {
   3.759214098237523*^9, 
   3.7592141198436327`*^9}},ExpressionUUID->"91185ca6-a1c4-481d-852a-\
fbf349eb972c"],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",ExpressionUUID->"7f89a814-576e-4acd-842a-c9db5299ea5b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "EcoEvoJacobian", "]"}], "=", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"EvoEquation", "\[Rule]", "\"\<QG\>\""}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"TraitShiftRate", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Chop", "\[Rule]", "True"}], ",", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.688571711851214*^9, 3.6885717119411697`*^9}, 
   3.696845912585609*^9, 3.731891258738823*^9, {3.731941266690382*^9, 
   3.7319412706051683`*^9}},
 CellLabel->
  "In[615]:=",ExpressionUUID->"e20cfd66-d9e9-44b6-a80d-f31ae114d25a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",ExpressionUUID->"0799de86-7434-452f-bc3c-639a9eafcaa0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"EcoEvoJacobian", "[", 
    RowBox[{
     RowBox[{"sol_", "?", "TraitsAndVariablesQ"}], ",", 
     RowBox[{"Gs_List:", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"EcoEvoJacobian", "[", 
    RowBox[{
     RowBox[{"ExtractTraits", "[", "sol", "]"}], ",", 
     RowBox[{"ExtractVariables", "[", "sol", "]"}], ",", "Gs", ",", "opts"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EcoEvoJacobian", "[", "___", "]"}], ":=", 
   RowBox[{
    RowBox[{"Msg", "[", 
     RowBox[{"EcoEvoJacobian", "::", "noper"}], "]"}], "/;", 
    RowBox[{"modelperiod", "=!=", "0"}]}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.709209376223256*^9, 3.709209385366888*^9}, 
   3.710105998965596*^9, {3.7102571571658697`*^9, 3.7102571585086*^9}, {
   3.712738535100851*^9, 3.712738535104472*^9}, 3.731856404569442*^9, {
   3.731891112583371*^9, 3.731891128668326*^9}, {3.7318929816218*^9, 
   3.7318929897444773`*^9}},
 CellLabel->
  "In[616]:=",ExpressionUUID->"f5491eb1-4246-455c-a14b-c3a836b2fcff"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["EcoEvoEigenvalues", "Subsection",
 CellDingbat->
  "\[ClubSuit]",ExpressionUUID->"1f123f0a-20ec-4bcb-95e8-04909875b67a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoEvoEigenvalues", "[", 
    RowBox[{
     RowBox[{"traits", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "TraitsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"pops", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Gs", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "GsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"chop", ",", "eejopts", ",", "res"}], "}"}], ",", "\n", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"chop", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Chop", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoEvoEigenvalues", "]"}]}], "}"}], 
          "]"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"eejopts", "=", 
       RowBox[{"FilterRules", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EcoEvoEigenvalues", "]"}]}], "}"}], 
          "]"}], ",", 
         RowBox[{"Options", "[", "EcoEvoJacobian", "]"}]}], "]"}]}], ";", 
      "\n", "\n", "\t", 
      RowBox[{"res", "=", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{"EcoEvoJacobian", "[", 
         RowBox[{"traits", ",", "pops", ",", "Gs", ",", "eejopts"}], "]"}], 
        "]"}]}], ";", "\n", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{"chop", ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Chop", "[", "res", "]"}], "]"}], ",", 
        RowBox[{"Return", "[", "res", "]"}]}], "]"}], ";"}]}], "\n", "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{
  3.709203022991229*^9, 3.7127385351131763`*^9, {3.73184544793521*^9, 
   3.731845452867155*^9}, 3.731893121482032*^9},
 CellLabel->
  "In[618]:=",ExpressionUUID->"90f4e859-f4da-4060-9e59-9faa205993b0"],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",ExpressionUUID->"772939a9-b1c8-474e-94cf-5fded27a4b5e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "EcoEvoEigenvalues", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"EvoEquation", "\[Rule]", "\"\<QG\>\""}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"TraitShiftRate", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Chop", "\[Rule]", "True"}], ",", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.6885717129872503`*^9, 3.688571713022046*^9}, {
  3.731941318762336*^9, 3.731941344377482*^9}},
 CellLabel->
  "In[619]:=",ExpressionUUID->"c904b69d-6e37-4367-bc31-2887f8b450be"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",ExpressionUUID->"49f5b039-1f0f-40a2-8dff-c247535e3abf"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EcoEvoEigenvalues", "[", 
    RowBox[{
     RowBox[{"sol_", "?", "TraitsAndVariablesQ"}], ",", 
     RowBox[{"Gs_List:", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", 
   RowBox[{"EcoEvoEigenvalues", "[", 
    RowBox[{
     RowBox[{"ExtractTraits", "[", "sol", "]"}], ",", 
     RowBox[{"ExtractVariables", "[", "sol", "]"}], ",", "Gs", ",", "opts"}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.712738535121628*^9, 3.712738535125637*^9}, {
  3.731855988352993*^9, 3.731855989485139*^9}},
 CellLabel->
  "In[620]:=",ExpressionUUID->"22f95fc4-03a8-4d56-bb02-8dcbeb9c4fa7"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["EvoJacobian", "Subsection",
 CellDingbat->
  "\[ClubSuit]",ExpressionUUID->"0d343083-a116-4ea4-a8ab-3d69eb542d71"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EvoJacobian", "[", 
    RowBox[{
     RowBox[{"traitsin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "TraitsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"popsin", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Gs", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "GsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<EvoJacobian\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "fixed", ",", "chop", ",", "\n", 
       RowBox[{"(*", " ", "rules", " ", "*)"}], "\n", "removets", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"fixed", " ", "vars"}], " ", "*)"}], "\n", "fixedvars", ",", 
       "fixedtraits", ",", "fixedvariables", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "traits", ",",
        "pops", ",", "eqns", ",", "unks", ",", "jmat"}], "}"}], ",", "\n", 
     "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "Nsp", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Msg", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoJacobian", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoJacobian", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"chop", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Chop", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoJacobian", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"fixed", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Fixed", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "EvoJacobian", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"fixedvars", "=", 
         RowBox[{"fixed", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
        RowBox[{"fixedtraits", "=", 
         RowBox[{"ExtractTraits", "[", "fixed", "]"}]}], ";", "\n", 
        RowBox[{"fixedvariables", "=", 
         RowBox[{"ExtractVariables", "[", "fixed", "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: fixedvars=\>\"", ",", "fixedvars"}], 
           "]"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"handle", " ", "blanks"}], " ", "&"}], " ", "figure", " ", 
          "out", " ", "number", " ", "of", " ", "species", " ", "in", " ", 
          "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"traits", "=", 
         RowBox[{"ExpandNspInTraits", "[", "traitsin", "]"}]}], ";", "\n", 
        RowBox[{"pops", "=", 
         RowBox[{"ExpandNspInPops", "[", "popsin", "]"}]}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "figure", " ", "out", " ", "number", " ", "of", " ", "species", " ", 
          "in", " ", "guilds"}], " ", "*)"}], "\n", 
        RowBox[{"SetNsp", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"traits", ",", "fixedtraits"}], "]"}], ",", 
          RowBox[{"Join", "[", 
           RowBox[{"pops", ",", "fixedvariables"}], "]"}]}], "]"}], ";", "\n",
         "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"set", " ", "up", " ", "eqns"}], " ", "&"}], " ", "unks"}],
          " ", "*)"}], "\n", 
        RowBox[{"eqns", "=", 
         RowBox[{"EvoEqns", "[", 
          RowBox[{"BlankVariables", ",", "Gs", ",", "opts"}], "]"}]}], ";", 
        "\n", 
        RowBox[{"unks", "=", 
         RowBox[{
          RowBox[{"eqns", "/.", "LHS"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"var_", "'"}], "[", "t", "]"}], "\[Rule]", "var"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"var_", "[", 
               RowBox[{"t", "+", "1"}], "]"}], "/", 
              RowBox[{"var_", "[", "t", "]"}]}], "\[Rule]", "var"}], ",", 
            RowBox[{
             RowBox[{"var_", "[", 
              RowBox[{"t", "+", "1"}], "]"}], "\[Rule]", "var"}]}], "}"}]}]}],
         ";", "\n", 
        RowBox[{"eqns", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"eqns", "/.", "RHS"}], "/.", "RemoveTraitts"}], "/.", 
          "RemovePopts"}]}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", "\n", "\t", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: eqns=\>\""}], "]"}], ";", 
           RowBox[{"Print", "[", "eqns", "]"}], ";", "\n", "\t", 
           RowBox[{"Print", "[", 
            RowBox[{"func", ",", "\"\<: unks=\>\""}], "]"}], ";", 
           RowBox[{"Print", "[", "unks", "]"}], ";"}]}], "\n", "]"}], ";", 
        "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"set", " ", "up", " ", "jacobian"}], " ", "*)"}], "\n", 
        RowBox[{"jmat", "=", 
         RowBox[{"D", "[", 
          RowBox[{"eqns", ",", 
           RowBox[{"{", "unks", "}"}]}], "]"}]}], ";", " ", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"func", ",", "\"\<: jmat=\>\"", ",", "jmat"}], "]"}]}], 
         "]"}], ";", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"chop", ",", "\n", "\t", 
          RowBox[{"Return", "[", 
           RowBox[{"Chop", "[", 
            RowBox[{
             RowBox[{"jmat", "/.", "pops"}], "/.", "traits"}], "]"}], "]"}], 
          ",", "\n", "\t", 
          RowBox[{"Return", "[", 
           RowBox[{
            RowBox[{"jmat", "/.", "pops"}], "/.", "traits"}], "]"}]}], "\n", 
         "]"}], ";"}]}], "\n", "\n", "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.687881465162212*^9, 3.687881465327681*^9}, {
   3.688571717625523*^9, 3.688571718505179*^9}, {3.688571776587853*^9, 
   3.688571776823722*^9}, {3.688585648070167*^9, 3.688585648129046*^9}, 
   3.6968459127034063`*^9, {3.709146854538561*^9, 3.709146934544635*^9}, {
   3.709147136741681*^9, 3.709147157740947*^9}, 3.7092030327432203`*^9, {
   3.709336830376745*^9, 3.70933683134243*^9}, 3.710106000029181*^9, {
   3.710240822320994*^9, 3.71024082235406*^9}, 3.71025897688914*^9, 
   3.710324426343544*^9, {3.7127385351494293`*^9, 3.712738535159951*^9}, {
   3.712740223931374*^9, 3.712740223952577*^9}, {3.7220339122381496`*^9, 
   3.72203391281808*^9}, {3.722034318500297*^9, 3.722034327583869*^9}, {
   3.722088155327507*^9, 3.722088200058957*^9}, {3.731539416453166*^9, 
   3.731539418422411*^9}, {3.731805390587207*^9, 3.7318054458666697`*^9}, {
   3.731805490546177*^9, 3.7318054921982822`*^9}, {3.73180595146091*^9, 
   3.731805952273254*^9}, {3.7318061488294*^9, 3.731806181161949*^9}, {
   3.731806222290551*^9, 3.731806224923895*^9}, {3.731806594753873*^9, 
   3.731806622010099*^9}, {3.731806655132272*^9, 3.731806691819386*^9}, {
   3.731806972626893*^9, 3.731806975597787*^9}, {3.731807529252302*^9, 
   3.731807535329926*^9}, 3.7318914674251137`*^9, {3.731893066081298*^9, 
   3.7318930928583813`*^9}, {3.731893335805414*^9, 3.731893349289456*^9}, {
   3.731893626140045*^9, 3.731893630683405*^9}, 3.731893716792038*^9, 
   3.755373604782435*^9, {3.759208550691798*^9, 3.759208579071454*^9}, {
   3.759214018443651*^9, 3.759214029661666*^9}, {3.7592141389252577`*^9, 
   3.759214139246903*^9}},ExpressionUUID->"36217579-b395-4e1f-95cc-\
850588f56e6f"],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",ExpressionUUID->"fc2d3a6d-6d5c-460c-bf88-6f5fc457590f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"EvoJacobian", "[", 
    RowBox[{
     RowBox[{"sol_", "?", "TraitsAndVariablesQ"}], ",", 
     RowBox[{"Gs", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "GsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"EvoJacobian", "[", 
    RowBox[{
     RowBox[{"ExtractTraits", "[", "sol", "]"}], ",", 
     RowBox[{"ExtractVariables", "[", "sol", "]"}], ",", "Gs", ",", "opts"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EvoJacobian", "[", "___", "]"}], ":=", 
   RowBox[{
    RowBox[{"Msg", "[", 
     RowBox[{"EvoJacobian", "::", "noper"}], "]"}], "/;", 
    RowBox[{"modelperiod", "=!=", "0"}]}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.709203389957925*^9, 3.709203392319108*^9}, {
   3.709208983663639*^9, 3.709209046465527*^9}, 3.710106000791006*^9, 
   3.7102571655880423`*^9, 3.71025898111604*^9, {3.712738535168481*^9, 
   3.7127385351721897`*^9}, 3.731893402181643*^9},
 CellLabel->
  "In[622]:=",ExpressionUUID->"51fab449-1b84-41a7-b468-44d5114d56fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",ExpressionUUID->"ac2f350b-78dd-4bf0-a2bc-0b3250cf2c1f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "EvoJacobian", "]"}], "=", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"EvoEquation", "\[Rule]", "\"\<QG\>\""}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"TraitShiftRate", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Chop", "\[Rule]", "True"}], ",", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.6885717185309*^9, 3.688571718619993*^9}, 
   3.696845912715047*^9, {3.731941361785515*^9, 3.731941365950726*^9}},
 CellLabel->
  "In[624]:=",ExpressionUUID->"e0ce4515-ed97-4dac-a863-6bb52c3f50b3"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["EvoEigenvalues", "Subsection",
 CellDingbat->
  "\[ClubSuit]",ExpressionUUID->"08361093-baa7-4fb2-80e4-06c98c44ae80"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EvoEigenvalues", "[", 
    RowBox[{
     RowBox[{"traits", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "TraitsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"pops", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Gs", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "GsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"chop", ",", "ejopts", ",", "res"}], "}"}], ",", "\n", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
        RowBox[{
         RowBox[{"Msg", "[", 
          RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
         RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", "\n", 
      "\t", 
      RowBox[{"chop", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Chop", "/.", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EvoEigenvalues", "]"}]}], "}"}], "]"}]}],
         "]"}]}], ";", "\n", "\t", 
      RowBox[{"ejopts", "=", 
       RowBox[{"FilterRules", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"opts", ",", 
            RowBox[{"Options", "[", "EvoEigenvalues", "]"}]}], "}"}], "]"}], 
         ",", 
         RowBox[{"Options", "[", "EvoJacobian", "]"}]}], "]"}]}], ";", "\n", 
      "\n", "\t", 
      RowBox[{"res", "=", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{"EvoJacobian", "[", 
         RowBox[{"traits", ",", "pops", ",", "Gs", ",", "ejopts"}], "]"}], 
        "]"}]}], ";", "\n", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{"chop", ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Chop", "[", "res", "]"}], "]"}], ",", 
        RowBox[{"Return", "[", "res", "]"}]}], "]"}], ";"}]}], "\n", "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.709203054250413*^9, 3.7092030572537107`*^9}, {
   3.709336843646798*^9, 3.709336846104929*^9}, 3.710106001540656*^9, 
   3.712738535180859*^9, {3.731891488133377*^9, 3.731891499928199*^9}, {
   3.731893105185738*^9, 3.731893112700819*^9}},
 CellLabel->
  "In[625]:=",ExpressionUUID->"7f9aa6a9-15bc-4eac-bf54-973d21216c4c"],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",ExpressionUUID->"f08c104e-41ad-425f-9d28-705730ba62a0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EvoEigenvalues", "[", 
    RowBox[{
     RowBox[{"sol_", "?", "TraitsAndVariablesQ"}], ",", 
     RowBox[{"Gs", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "GsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"EvoEigenvalues", "[", 
    RowBox[{
     RowBox[{"ExtractTraits", "[", "sol", "]"}], ",", 
     RowBox[{"ExtractVariables", "[", "sol", "]"}], ",", "Gs", ",", "opts"}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.709203401234977*^9, 3.709209360029107*^9, {3.712738535189382*^9, 
   3.7127385351929483`*^9}, 3.731941388791111*^9},
 CellLabel->
  "In[626]:=",ExpressionUUID->"d3cb501f-9d29-4b61-982f-5e1850730e09"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",ExpressionUUID->"6140255f-ec9a-4f56-a54e-c498c484f33d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "EvoEigenvalues", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"EvoEquation", "\[Rule]", "\"\<QG\>\""}], ",", 
     RowBox[{"Fixed", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"TraitShiftRate", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Chop", "\[Rule]", "True"}], ",", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.688571718643941*^9, 3.688571718676917*^9}, {
  3.731941378897524*^9, 3.7319413819035597`*^9}},
 CellLabel->
  "In[627]:=",ExpressionUUID->"e19cbf5c-09b2-4d0d-b98b-fac97241bd8c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["MaximizeInv", "Subsection",
 CellDingbat->
  "\[ClubSuit]",ExpressionUUID->"9b77cb63-9ca9-456e-916e-d9dc3d943132"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MaximizeInv", "[", 
    RowBox[{
     RowBox[{"traits", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "TraitsQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"sol", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}], ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", " ", "\n", 
   
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<MaximizeInv\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "guild", ",", "delayinv", ",", "invopts", ",", 
       "maximizeopts", ",", "method", ",", "constraints", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "vars", ",", 
       "unks", ",", "inv", ",", "res"}], "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "Nsp", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Msg", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"reset", " ", "$invcount"}], " ", "*)"}], "\n", 
        RowBox[{"$invcount", "=", "0"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"OptionValue", "[", "Verbose", "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"OptionValue", "[", "VerboseAll", "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"guild", "=", 
         RowBox[{"OptionValue", "[", "Guild", "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"guild", "===", "Automatic"}], ",", 
          RowBox[{"guild", "=", 
           RowBox[{
           "guilds", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"delayinv", "=", 
         RowBox[{"OptionValue", "[", "DelayInv", "]"}]}], ";", "\n", 
        RowBox[{"invopts", "=", 
         RowBox[{"OptionValue", "[", "InvOpts", "]"}]}], ";", "\n", 
        RowBox[{"maximizeopts", "=", 
         RowBox[{"OptionValue", "[", "MaximizeOpts", "]"}]}], ";", "\n", 
        RowBox[{"method", "=", 
         RowBox[{"OptionValue", "[", "Method", "]"}]}], ";", "\n", 
        RowBox[{"constraints", "=", 
         RowBox[{"OptionValue", "[", "Constraints", "]"}]}], ";", "\n", "\n", 
        
        RowBox[{"vars", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{
             RowBox[{"trait", "[", 
              RowBox[{"guild", ",", "tr"}], "]"}], ",", "0"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"tr", ",", 
             RowBox[{"ntraits", "[", "guild", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\n", 
        RowBox[{"unks", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"unk", "[", 
            RowBox[{
             RowBox[{"trait", "[", 
              RowBox[{"guild", ",", "tr"}], "]"}], ",", "0"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"tr", ",", 
             RowBox[{"ntraits", "[", "guild", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\n", "\n", "\n", 
        RowBox[{"Which", "[", "\n", "\t", 
         RowBox[{
          RowBox[{"constraints", "===", "\"\<None\>\""}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{"constraints", "=", 
            RowBox[{"{", "}"}]}], ";"}], "\n", ",", "\n", "\t", 
          RowBox[{"constraints", "===", "Automatic"}], ",", "\n", "\t", 
          RowBox[{"constraints", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Min", "[", 
               RowBox[{"traitrange", "[", 
                RowBox[{"guild", ",", "tr"}], "]"}], "]"}], "\[LessEqual]", 
              RowBox[{"Subscript", "[", 
               RowBox[{
                RowBox[{"trait", "[", 
                 RowBox[{"guild", ",", "tr"}], "]"}], ",", "0"}], "]"}], 
              "\[LessEqual]", 
              RowBox[{"Max", "[", 
               RowBox[{"traitrange", "[", 
                RowBox[{"guild", ",", "tr"}], "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"tr", ",", 
               RowBox[{"ntraits", "[", "guild", "]"}]}], "}"}]}], "]"}]}], 
          "\n", ",", "\n", "\t", "Else", ",", "\n", "\t", 
          RowBox[{"constraints", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"constraints", ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Min", "[", 
                 RowBox[{"traitrange", "[", 
                  RowBox[{"guild", ",", "tr"}], "]"}], "]"}], "\[LessEqual]", 
                
                RowBox[{"Subscript", "[", 
                 RowBox[{
                  RowBox[{"trait", "[", 
                   RowBox[{"guild", ",", "tr"}], "]"}], ",", "0"}], "]"}], 
                "\[LessEqual]", 
                RowBox[{"Max", "[", 
                 RowBox[{"traitrange", "[", 
                  RowBox[{"guild", ",", "tr"}], "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"tr", ",", 
                 RowBox[{"ntraits", "[", "guild", "]"}]}], "}"}]}], "]"}]}], 
            "]"}]}]}], "\n", "]"}], ";", "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<constraints=\>\"", ",", "constraints"}], "]"}], ";"}],
          "*)"}], "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"delayinv", "\[Equal]", "True"}], ",", "\n", "\t", 
          RowBox[{
           RowBox[{
            RowBox[{"inv", "[", 
             RowBox[{"varz_", "?", "NumericListQ"}], "]"}], ":=", 
            RowBox[{"Inv", "[", 
             RowBox[{"traits", ",", "sol", ",", 
              RowBox[{"Thread", "[", 
               RowBox[{"vars", "\[Rule]", "varz"}], "]"}], ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "invopts"}], "]"}], ",", 
              RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}], ";",
            "\n", "\t", 
           RowBox[{"res", "=", 
            RowBox[{"NMaximize", "[", 
             RowBox[{
              RowBox[{"Prepend", "[", 
               RowBox[{
                RowBox[{"constraints", "/.", 
                 RowBox[{"Subscript", "\[Rule]", "unk"}]}], ",", 
                RowBox[{"inv", "[", "unks", "]"}]}], "]"}], ",", "unks", ",", 
              
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "maximizeopts"}], "]"}]}], "]"}]}], 
           ";"}], "\n", "\t", ",", " ", 
          RowBox[{"(*", " ", "else", " ", "*)"}], "\n", "\t", 
          RowBox[{
           RowBox[{"Off", "[", 
            RowBox[{"NIntegrate", "::", "inumr"}], "]"}], ";", "\n", "\t", 
           RowBox[{"inv", "=", 
            RowBox[{"Inv", "[", 
             RowBox[{"traits", ",", "sol", ",", 
              RowBox[{"Guild", "\[Rule]", "guild"}], ",", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Sequence", "@@", "invopts"}], "]"}], ",", 
              RowBox[{"VerboseAll", "\[Rule]", "verboseall"}]}], "]"}]}], ";",
            "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"Global`debug", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"func", ",", "\"\<: inv=\>\"", ",", "inv"}], "]"}]}], 
            "]"}], ";", "\n", "\t", 
           RowBox[{"Which", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{"method", "\[Equal]", "\"\<Maximize\>\""}], ",", "\n", 
             "\t\t", 
             RowBox[{"res", "=", 
              RowBox[{"Maximize", "[", 
               RowBox[{
                RowBox[{"Prepend", "[", 
                 RowBox[{"constraints", ",", "inv"}], "]"}], ",", "vars", ",", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"Sequence", "@@", "maximizeopts"}], "]"}]}], "]"}]}],
              ",", "\n", "\t\t", 
             RowBox[{"method", "\[Equal]", "\"\<NMaximize\>\""}], ",", "\n", 
             "\t\t", 
             RowBox[{"res", "=", 
              RowBox[{"NMaximize", "[", 
               RowBox[{
                RowBox[{"Prepend", "[", 
                 RowBox[{"constraints", ",", "inv"}], "]"}], ",", "vars", ",", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"Sequence", "@@", "maximizeopts"}], "]"}]}], "]"}]}],
              ",", "\n", "\t\t", "Else", ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"Msg", "[", 
               RowBox[{"MaximizeInv", "::", "badmtd"}], "]"}], ";", "\n", 
              "\t\t", 
              RowBox[{"Return", "[", "$Failed", "]"}]}]}], "\n", "\t", "]"}], 
           ";", "\n", "\t", 
           RowBox[{"On", "[", 
            RowBox[{"NIntegrate", "::", "inumr"}], "]"}]}]}], "\n", "]"}], 
        ";", "\n", "\n", 
        RowBox[{"Return", "[", 
         RowBox[{"res", "/.", 
          RowBox[{"unk", "\[Rule]", "Subscript"}]}], "]"}], ";"}]}], "\n", 
      "\n", "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.688571716844131*^9, 3.68857171691355*^9}, {
   3.688571775843402*^9, 3.688571775943841*^9}, {3.688571807803774*^9, 
   3.688571807840337*^9}, 3.6935932284121017`*^9, 3.709330279392198*^9, {
   3.709330459302061*^9, 3.709330472104042*^9}, {3.7093313275341663`*^9, 
   3.709331363854224*^9}, {3.70933589333078*^9, 3.709335893833712*^9}, {
   3.709336833373405*^9, 3.709336836437954*^9}, {3.710106002222921*^9, 
   3.710106004867454*^9}, 3.712738535203301*^9, {3.722033936591847*^9, 
   3.722033937204644*^9}, {3.722034621885207*^9, 3.722034626333557*^9}, {
   3.722088236017335*^9, 3.722088238081531*^9}, {3.725140958361236*^9, 
   3.725140958366749*^9}, {3.7340247729496527`*^9, 3.734024812108737*^9}, 
   3.734133920876542*^9, {3.7341340053250217`*^9, 3.7341340732366257`*^9}, {
   3.73413412651847*^9, 3.734134143437368*^9}, {3.734136108454589*^9, 
   3.73413610948388*^9}, {3.734136200190029*^9, 3.734136202863915*^9}, {
   3.734136255611788*^9, 3.734136295703025*^9}, {3.734136402156384*^9, 
   3.7341364682063932`*^9}, 3.734136864036984*^9, {3.734136964730917*^9, 
   3.73413696958357*^9}, {3.734137012411253*^9, 3.7341370171902246`*^9}, {
   3.734137075431032*^9, 3.734137081249216*^9}, {3.734137135233609*^9, 
   3.734137137326507*^9}, {3.73413719653926*^9, 3.734137201596093*^9}, {
   3.734137593338133*^9, 3.734137640855691*^9}, {3.734189803082953*^9, 
   3.7341898167179317`*^9}, {3.734189918290635*^9, 3.734189921438705*^9}, {
   3.734190001121459*^9, 3.734190011606889*^9}, {3.734190116009398*^9, 
   3.734190162611084*^9}, {3.734190221329423*^9, 3.734190271305799*^9}, {
   3.734190405332871*^9, 3.734190415770588*^9}, {3.734190957504084*^9, 
   3.734190972087165*^9}, {3.734191187483241*^9, 3.734191208433955*^9}, {
   3.73419125362202*^9, 3.73419131100988*^9}, {3.7341913637026987`*^9, 
   3.734191371235798*^9}, {3.734191408439578*^9, 3.734191408987722*^9}, {
   3.734192481430375*^9, 3.734192510131822*^9}, {3.7341925540477037`*^9, 
   3.7341925620053177`*^9}, {3.734192600800592*^9, 3.7341926123409777`*^9}, {
   3.7341926649769278`*^9, 3.734192674861348*^9}, {3.734192706745421*^9, 
   3.7341927129286823`*^9}, {3.734192757346341*^9, 3.734192837482367*^9}, {
   3.7341928798699703`*^9, 3.734192884728035*^9}, {3.7341929313320093`*^9, 
   3.734192935067844*^9}, {3.734192973540514*^9, 3.7341929738127337`*^9}, {
   3.734193028212146*^9, 3.734193029313189*^9}, {3.734193075585113*^9, 
   3.73419314594069*^9}, {3.7350834859505587`*^9, 3.735083486988276*^9}, 
   3.735083527139841*^9, {3.735084071973156*^9, 3.7350840786860647`*^9}, {
   3.735084113175556*^9, 3.735084169079273*^9}, {3.735085656207324*^9, 
   3.735085671393594*^9}, {3.735133244876545*^9, 3.7351332525860662`*^9}, 
   3.735133337935548*^9, {3.7351333846243563`*^9, 3.7351333850679626`*^9}, {
   3.7351346244656363`*^9, 3.7351346330122547`*^9}, {3.735134681645368*^9, 
   3.735134682795438*^9}, {3.735135075123555*^9, 3.735135080504208*^9}, 
   3.735135135814953*^9, {3.735135180471961*^9, 3.735135191363315*^9}, {
   3.735150495124508*^9, 3.735150495519101*^9}, {3.73515057065895*^9, 
   3.735150581787635*^9}, {3.735151257298046*^9, 3.735151302461709*^9}, {
   3.735153552730625*^9, 3.7351535965779123`*^9}, 3.735154926289887*^9, {
   3.735155063734151*^9, 3.7351550681374474`*^9}, {3.735155138227891*^9, 
   3.7351551405612583`*^9}, {3.73515541204638*^9, 3.7351554166548157`*^9}, {
   3.735155448219364*^9, 3.7351554521770067`*^9}, {3.735155568987934*^9, 
   3.73515559563713*^9}, {3.7351558467864943`*^9, 3.735155847636181*^9}, {
   3.735223565586306*^9, 3.735223566278942*^9}, {3.755535936224956*^9, 
   3.755535952789647*^9}},ExpressionUUID->"820cb510-753c-4d93-9ef5-\
22c0fcfad9e8"],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.729702446243598*^9, 
  3.7297024491601133`*^9}},ExpressionUUID->"47f42bbd-3ed1-41bc-92cb-\
37ce439bec8e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "MaximizeInv", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Guild", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"DelayInv", "\[Rule]", "False"}], ",", 
     RowBox[{"InvOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"MaximizeOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"Constraints", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NMaximize\>\""}], ",", "\n", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.6885717167213173`*^9, 3.688571716811558*^9}, 
   3.709330252262224*^9, {3.725140958348022*^9, 3.725140958351716*^9}, {
   3.72970439961582*^9, 3.729704410444075*^9}, {3.7351558526279697`*^9, 
   3.735155887802498*^9}, {3.755535957323374*^9, 
   3.755535959939788*^9}},ExpressionUUID->"442e4a0f-15f6-4975-811b-\
75ef7acfa376"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",ExpressionUUID->"2cf07424-5ed3-420e-9c5c-482b05882c79"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MaximizeInv", "[", 
    RowBox[{
     RowBox[{"sol_", "?", "TraitsAndVariablesQ"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"MaximizeInv", "[", 
    RowBox[{
     RowBox[{"ExtractTraits", "[", "sol", "]"}], ",", 
     RowBox[{"ExtractVariables", "[", "sol", "]"}], ",", "opts"}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.709332984740677*^9, 3.7093330065501003`*^9}, {
  3.71273853521173*^9, 3.7127385352152452`*^9}, {3.729713904400272*^9, 
  3.729713911669437*^9}, {3.729713946977941*^9, 3.7297139497172937`*^9}},
 CellLabel->
  "In[630]:=",ExpressionUUID->"194cc427-a92d-44cd-adbd-b548bcfcf6d7"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["GlobalESSQ", "Subsection",
 CellDingbat->"\[ClubSuit]",
 CellChangeTimes->{3.68841347583677*^9, 
  3.689080039509948*^9},ExpressionUUID->"6a883ecb-2b8e-46fc-8d0b-\
9024ceb15c91"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GlobalESSQ", "[", 
    RowBox[{
     RowBox[{"traits_", "?", "TraitsQ"}], ",", 
     RowBox[{"sol_", "?", "VariablesQ"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<GlobalESSQs\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "\n", "maximizeinvopts", ",", "invthreshold", ",", 
       "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "inv", ",", 
       "tmp"}], "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "Nsp", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Msg", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"maximizeinvopts", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"MaximizeInvOpts", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "GlobalESSQ", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"invthreshold", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"InvThreshold", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "GlobalESSQ", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"invthreshold", "===", "Automatic"}], ",", 
          RowBox[{"invthreshold", "=", 
           RowBox[{"modelinvthreshold", "+", "$roundofftolerance"}]}]}], 
         "]"}], ";", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "GlobalESSQ", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "GlobalESSQ", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"find", " ", "max", " ", "invader", " ", "rate"}], " ", 
             ".."}], " ", "if"}], " ", ">", " ", "invthreshold"}], ",", " ", 
          RowBox[{"then", " ", "not", " ", "globaless"}]}], " ", "*)"}], "\n",
         "\n", 
        RowBox[{"Do", "[", "\n", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"tmp", "[", "gu", "]"}], "=", 
            RowBox[{"MaximizeInv", "[", 
             RowBox[{"traits", ",", "sol", ",", 
              RowBox[{"Guild", "\[Rule]", "gu"}], ",", "maximizeinvopts"}], 
             "]"}]}], ";", "\n", "\t", 
           RowBox[{"If", "[", 
            RowBox[{"verbose", ",", 
             RowBox[{"Print", "[", 
              RowBox[{
              "func", ",", "\"\<: MaximizeInv guild \>\"", ",", "gu", ",", 
               "\"\<=\>\"", ",", 
               RowBox[{"tmp", "[", "gu", "]"}]}], "]"}]}], "]"}], ";"}], "\n",
           ",", 
          RowBox[{"{", 
           RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"Return", "[", 
         RowBox[{"{", "\n", "\t", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"tmp", "[", "gu", "]"}], "\[LeftDoubleBracket]", "1",
                  "\[RightDoubleBracket]"}], ">", "invthreshold"}], ",", 
               "False", ",", "True"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}], ",", "\n", "\t", 
           
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"tmp", "[", "gu", "]"}], "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}], ",", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"trait", "[", 
                   RowBox[{"gu", ",", "tr"}], "]"}], "\[Rule]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"trait", "[", 
                    RowBox[{"gu", ",", "tr"}], "]"}], ",", "0"}], "]"}], "/.", 
                    RowBox[{
                    RowBox[{"tmp", "[", "gu", "]"}], "\[LeftDoubleBracket]", 
                    "2", "\[RightDoubleBracket]"}]}], ")"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"tr", ",", 
                   RowBox[{"ntraits", "[", "gu", "]"}]}], "}"}]}], "]"}]}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"gu", ",", "guilds"}], "}"}]}], "]"}]}], "}"}], "\n", 
         "]"}], ";"}]}], "\n", "\n", "]"}]}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.68840948702074*^9, {3.688413475928183*^9, 3.688413476047365*^9}, {
   3.688571716944174*^9, 3.688571716981112*^9}, {3.6890800395487413`*^9, 
   3.689080039663636*^9}, {3.700085767055196*^9, 3.700085804605205*^9}, {
   3.709330101283683*^9, 3.7093301083946943`*^9}, {3.709330219524206*^9, 
   3.70933022220503*^9}, {3.7093368765777903`*^9, 3.709336877554902*^9}, 
   3.7101060060297832`*^9, {3.71025836477087*^9, 3.710258374784937*^9}, {
   3.711391347217828*^9, 3.711391363519307*^9}, {3.711392818371387*^9, 
   3.711392835309104*^9}, 3.712738535224595*^9, {3.722033943639798*^9, 
   3.72203394438297*^9}, {3.722034648599852*^9, 3.722034655494587*^9}, {
   3.722088277690257*^9, 3.722088294859303*^9}, {3.729702455542098*^9, 
   3.729702459089943*^9}, {3.72970250602721*^9, 3.729702524085492*^9}, {
   3.7297027353760757`*^9, 3.729702738436097*^9}, {3.729703978254846*^9, 
   3.729704015529566*^9}, {3.729704051910136*^9, 3.729704095211804*^9}, {
   3.729704360976425*^9, 3.729704384826613*^9}, {3.755373606223606*^9, 
   3.755373609666885*^9}},ExpressionUUID->"2348fe4c-7262-485f-aded-\
0b8ce99151fd"],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.711392838405695*^9, 
  3.711392839414678*^9}},ExpressionUUID->"6c84921f-635d-4d2d-b6b2-\
6e7a7a893c67"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "GlobalESSQ", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"MaximizeInvOpts", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"InvThreshold", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Verbose", "\[Rule]", "False"}], ",", 
     RowBox[{"VerboseAll", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.72970392214497*^9, 3.729703932233925*^9}, {
  3.729704417527686*^9, 3.729704421681736*^9}},
 CellLabel->
  "In[632]:=",ExpressionUUID->"40259bc3-e984-408a-a233-dacd44817654"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aliases", "Subsubsection",
 CellChangeTimes->{{3.711392823036001*^9, 
  3.711392824034668*^9}},ExpressionUUID->"05dbf07b-e4dc-4e16-abbe-\
44b0713a72e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GlobalESSQ", "[", 
    RowBox[{
     RowBox[{"eesol_", "?", "TraitsAndVariablesQ"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", 
   RowBox[{"GlobalESSQ", "[", 
    RowBox[{
     RowBox[{"ExtractTraits", "[", "eesol", "]"}], ",", 
     RowBox[{"ExtractVariables", "[", "eesol", "]"}], ",", "opts"}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.711392825467767*^9, 3.711392828114842*^9}, {
  3.712738535233054*^9, 3.712738535236649*^9}},
 CellLabel->
  "In[633]:=",ExpressionUUID->"4fdc0545-cda9-4fce-ab94-9ec400977145"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Experimental", "Section",
 CellChangeTimes->{{3.7315392243710327`*^9, 
  3.731539225776658*^9}},ExpressionUUID->"d0d18567-f470-414c-a3a2-\
57257a8292f8"],

Cell[CellGroupData[{

Cell["TrackEcoEq", "Subsection",
 CellChangeTimes->{{3.7472188021672993`*^9, 
  3.747218805734682*^9}},ExpressionUUID->"0314a57b-65e2-4408-8e1d-\
db2b2ec67c13"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TrackEcoEq", "[", 
    RowBox[{
     RowBox[{"pops", ":", 
      RowBox[{"(", 
       RowBox[{"_", "?", "VariablesQ"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"trait_", ",", 
       RowBox[{"traitmin_", "?", "NumericQ"}], ",", 
       RowBox[{"traitmax_", "?", "NumericQ"}]}], "}"}], ",", 
     RowBox[{"opts___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"FuncStyle", "[", "\"\<TrackEcoEq\>\"", "]"}]}], ",", "\n", 
       RowBox[{"(*", " ", "options", " ", "*)"}], "\n", "verbose", ",", 
       "verboseall", ",", "printtrace", ",", "monitor", ",", "\n", "fixed", 
       ",", "method", ",", "\n", 
       RowBox[{"(*", " ", 
        RowBox[{"other", " ", "variables"}], " ", "*)"}], "\n", "nb", ",", 
       "res", ",", "\n", "fixedvars"}], "}"}], ",", "\n", "\n", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "Nsp", "}"}], ",", "\n", "\n", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"modelloaded", "\[NotEqual]", "True"}], ",", 
          RowBox[{
           RowBox[{"Msg", "[", 
            RowBox[{"EcoEvoGeneral", "::", "nomodel"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<In \>\"", ",", "func"}], "]"}]}], "]"}], ";", "\n", 
        "\n", 
        RowBox[{"(*", " ", 
         RowBox[{"handle", " ", "options"}], " ", "*)"}], "\n", "\n", 
        RowBox[{"verbose", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Verbose", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "TrackEcoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"Global`debug", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", 
        RowBox[{"verboseall", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"VerboseAll", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "TrackEcoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"verboseall", ",", 
          RowBox[{"verbose", "=", "True"}]}], "]"}], ";", "\n", "\n", 
        RowBox[{"printtrace", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"PrintTrace", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "TrackEcoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"monitor", "=", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"Monitor", "/.", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"Options", "[", "TrackEcoEq", "]"}]}], "}"}], "]"}]}], 
          "]"}]}], ";", "\n", "\n", 
        RowBox[{"Return", "[", "res", "]"}]}]}], "\n", "\n", "]"}]}], "]"}]}],
   ";"}]], "Code",
 CellChangeTimes->{{3.74721881058344*^9, 3.747218870268593*^9}, {
  3.747219060835721*^9, 3.7472190954402103`*^9}, {3.7472194306801653`*^9, 
  3.747219477218557*^9}, {3.747219599577937*^9, 
  3.747219623303691*^9}},ExpressionUUID->"bc47dce4-b2ef-4b22-b415-\
108d8661e282"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["End", "Section",ExpressionUUID->"9e7a41c9-f14c-410a-a386-1b3b18771802"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Protect", " ", "all", " ", "package", " ", "symbols"}], " ", 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"syms", " ", "=", " ", 
        RowBox[{"Names", "[", "\"\<EcoEvo`*\>\"", "]"}]}], "}"}], ",", "\n", 
      "  ", 
      RowBox[{"SetAttributes", "[", 
       RowBox[{"syms", ",", "Protected"}], "]"}]}], "\n", "]"}], ";"}], "\n", 
   
   RowBox[{
    RowBox[{"Unprotect", "[", 
     RowBox[{
     "t", ",", "LookUp", ",", "$findecocyclesteps", ",", "$invcount", ",", 
      "$findecocycleevoeqthingcount"}], "]"}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.755815040664567*^9, 3.755815048005134*^9}, {
  3.755815141432612*^9, 3.755815150005804*^9}, {3.755816971198441*^9, 
  3.7558169714937973`*^9}, {3.7558177423679*^9, 3.755817746243328*^9}, {
  3.755819834315268*^9, 3.7558198387356358`*^9}, {3.755820202741007*^9, 
  3.755820203867004*^9}, {3.7592139689276752`*^9, 
  3.759213969101913*^9}},ExpressionUUID->"24dd4262-847d-4354-b33f-\
0afd48df8d8e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.737047416403627*^9, 3.737047416707726*^9}, {
  3.73704745886162*^9, 3.737047459418858*^9}},
 CellLabel->
  "In[634]:=",ExpressionUUID->"93d977e5-d294-4f2d-88fd-a7663acfa234"]
}, Closed]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1649, 941},
WindowMargins->{{Automatic, -19}, {Automatic, 0}},
PrintingOptions->{"PaperOrientation"->"Landscape",
"PaperSize"->{792, 612},
"PrintCellBrackets"->False,
"PrintMultipleHorizontalPages"->False,
"PrintRegistrationMarks"->False,
"PrintingMargins"->18},
ShowGroupOpener->True,
WholeCellGroupOpener->False,
TaggingRules->None,
Magnification:>1.5 Inherited,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Input"], InitializationCell -> True]}, Visible -> False, 
  FrontEndVersion -> 
  "11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, 2018)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 315, 7, 88, "Text",ExpressionUUID->"8625f8ec-707c-4645-8dba-c554347b4827"],
Cell[CellGroupData[{
Cell[898, 31, 149, 3, 101, "Section",ExpressionUUID->"ee91c845-923f-4862-a074-70610eec46ee"],
Cell[1050, 36, 1142, 32, 1579, "Code",ExpressionUUID->"76f16d85-e149-4291-bc81-575debee65dc"],
Cell[2195, 70, 268, 5, 884, "Code",ExpressionUUID->"17161ef8-7f50-4d34-b3e6-90b10fd2d8f8"],
Cell[2466, 77, 429, 9, 1228, "Code",ExpressionUUID->"5b56744b-6c60-4503-bff9-c7931f653e8e"]
}, Closed]],
Cell[CellGroupData[{
Cell[2932, 91, 151, 3, 78, "Section",ExpressionUUID->"e81aba31-0d97-4477-be9e-65159a258a3e"],
Cell[CellGroupData[{
Cell[3108, 98, 218, 4, 81, "Subsection",ExpressionUUID->"9e4fcf98-a656-4ad1-bdc5-07decd0bf7ef"],
Cell[3329, 104, 30623, 627, 5299, "Code",ExpressionUUID->"44c1c6c5-e51f-4d8b-8560-6c6f36ef2221"]
}, Closed]],
Cell[CellGroupData[{
Cell[33989, 736, 164, 3, 55, "Subsection",ExpressionUUID->"7fc8e1ba-b99e-479d-be48-499ac25f3173"],
Cell[34156, 741, 6299, 141, 1529, "Code",ExpressionUUID->"27dc5eb2-b7db-49e5-bf79-f42ccdbf000d"]
}, Closed]],
Cell[CellGroupData[{
Cell[40492, 887, 159, 3, 55, "Subsection",ExpressionUUID->"49f06351-b35f-4d94-8e9b-3a6328bad478"],
Cell[40654, 892, 6796, 184, 1384, "Code",ExpressionUUID->"3aca5366-c006-4cc1-965e-7ac5d29ae06d"]
}, Closed]],
Cell[CellGroupData[{
Cell[47487, 1081, 154, 3, 55, "Subsection",ExpressionUUID->"3959c3d8-8379-4f29-9d73-844ce67fb3f7"],
Cell[47644, 1086, 439, 12, 6216, "Code",ExpressionUUID->"9882a46e-909e-4bdc-b43d-2ae1676f3ee0"]
}, Closed]],
Cell[CellGroupData[{
Cell[48120, 1103, 217, 4, 55, "Subsection",ExpressionUUID->"4db4f18a-1e86-486e-81eb-2a7f119d5cc2"],
Cell[48340, 1109, 40140, 721, 6372, "Code",ExpressionUUID->"6a462f52-c718-4458-befd-9ece529ef443"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88517, 1835, 84, 0, 81, "Subsection",ExpressionUUID->"c66607f0-5666-4218-b772-88d182d2ce1c"],
Cell[CellGroupData[{
Cell[88626, 1839, 26856, 726, 8663, "Code",ExpressionUUID->"5b29208d-864f-42bf-9327-63f3e496b976"],
Cell[115485, 2567, 838, 12, 52, "Output",ExpressionUUID->"5d5a77b8-1616-4494-98f7-24d0e72ae9ac"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[116372, 2585, 170, 3, 55, "Subsection",ExpressionUUID->"dcd1e8c4-0414-4b5c-91ab-2df7ad764a41"],
Cell[116545, 2590, 1841, 50, 2147483647, "Code",ExpressionUUID->"0852f374-cbc8-4891-bc1f-674bc3819fce"]
}, Closed]],
Cell[CellGroupData[{
Cell[118423, 2645, 83, 0, 55, "Subsection",ExpressionUUID->"a930f4f8-8b7a-417c-89a7-527b9012e7c6"],
Cell[118509, 2647, 10698, 293, 40205, "Code",ExpressionUUID->"8faa1d37-16f3-45bf-a1c2-2e2a994bcf6e"]
}, Closed]],
Cell[CellGroupData[{
Cell[129244, 2945, 156, 3, 55, "Subsection",ExpressionUUID->"354d1f73-7348-4688-a05d-6f0624f17176"],
Cell[129403, 2950, 1674, 45, 456, "Code",ExpressionUUID->"ff6eec83-61c4-436e-a37e-e01919610f17"]
}, Closed]],
Cell[CellGroupData[{
Cell[131114, 3000, 92, 0, 55, "Subsection",ExpressionUUID->"93eafced-5a40-4814-b72b-3ab2a61bee23"],
Cell[131209, 3002, 1314, 36, 253, "Code",ExpressionUUID->"adfb8d61-a52b-4b9c-8848-e7e5bb25213c"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[132572, 3044, 81, 0, 101, "Section",ExpressionUUID->"13997123-8f35-4d7f-b66b-ab675c388f8f"],
Cell[132656, 3046, 174, 4, 78, "Code",ExpressionUUID->"8a98817b-ba9b-4b7f-9beb-f3a1cdcf5595"],
Cell[132833, 3052, 1743, 27, 78, "Code",ExpressionUUID->"dc46b9ba-4da1-4106-86c0-38a2eeedc8b0"],
Cell[134579, 3081, 322, 8, 78, "Code",ExpressionUUID->"50b9a7d6-fcbe-400b-a3d2-a8ddeaf9a891"],
Cell[CellGroupData[{
Cell[134926, 3093, 92, 0, 81, "Subsection",ExpressionUUID->"5ee41da3-f36f-4b58-b38f-9b5d0121ab7a"],
Cell[135021, 3095, 625, 16, 5861, "Input",ExpressionUUID->"afa3a8a2-50d9-48ba-b0dd-a17711b9ca1d"]
}, Closed]],
Cell[CellGroupData[{
Cell[135683, 3116, 91, 0, 55, "Subsection",ExpressionUUID->"667a31df-366f-4e97-93ce-292d8cb7b2db"],
Cell[135777, 3118, 944, 24, 16605, "Input",ExpressionUUID->"41dca06f-fdce-4e7e-80c5-68976249a568"]
}, Closed]],
Cell[CellGroupData[{
Cell[136758, 3147, 165, 3, 55, "Subsection",ExpressionUUID->"c6e46a86-2613-4fa3-951d-1d7af9be1c7d"],
Cell[CellGroupData[{
Cell[136948, 3154, 163, 3, 67, "Subsubsection",ExpressionUUID->"7ea36d9d-4923-448e-996c-a427b18ff50f"],
Cell[137114, 3159, 719, 20, 166, "Code",ExpressionUUID->"93cd5175-3842-4c7d-8f0f-e1d3e9a3acf3"],
Cell[137836, 3181, 759, 19, 78, "Code",ExpressionUUID->"2ce58e88-7f69-4164-8e1c-6060e3bffe79"]
}, Closed]],
Cell[CellGroupData[{
Cell[138632, 3205, 160, 3, 53, "Subsubsection",ExpressionUUID->"bd57a215-d2d7-4f1f-b388-db849219b02a"],
Cell[138795, 3210, 582, 16, 1989, "Code",ExpressionUUID->"d1c32cfb-75ec-4164-857c-33f360e7212c"],
Cell[139380, 3228, 522, 15, 1989, "Code",ExpressionUUID->"4094e350-e8bc-46d4-90eb-0ae9817d9611"]
}, Closed]],
Cell[CellGroupData[{
Cell[139939, 3248, 168, 3, 53, "Subsubsection",ExpressionUUID->"1a765064-2e50-496a-a347-95bc9daa64cf"],
Cell[140110, 3253, 1092, 32, 3552, "Code",ExpressionUUID->"0db0817b-8f3b-48f4-907e-18a2602a831b"]
}, Closed]],
Cell[CellGroupData[{
Cell[141239, 3290, 159, 3, 53, "Subsubsection",ExpressionUUID->"9a2e4391-0ae3-4d79-a550-f6d77d86f535"],
Cell[141401, 3295, 818, 23, 1989, "Code",ExpressionUUID->"f0823730-9e53-4777-9b1b-271f2865036e"],
Cell[142222, 3320, 286, 7, 1989, "Code",ExpressionUUID->"215a036b-3fe3-4736-8cca-c85b20742b5d"]
}, Closed]],
Cell[CellGroupData[{
Cell[142545, 3332, 208, 4, 53, "Subsubsection",ExpressionUUID->"ecb66b53-cfa6-4697-812e-bc076490c199"],
Cell[142756, 3338, 363, 9, 794, "Input",ExpressionUUID->"bf22d057-c12f-4931-b2c8-69786bd738fb"],
Cell[143122, 3349, 310, 8, 794, "Input",ExpressionUUID->"252e7ee7-e289-4af3-b6d8-906d36c8fa80"]
}, Closed]],
Cell[CellGroupData[{
Cell[143469, 3362, 174, 3, 53, "Subsubsection",ExpressionUUID->"390595aa-b239-4e7f-948a-6de9ecc85885"],
Cell[143646, 3367, 1936, 55, 195, "Code",ExpressionUUID->"bff90b5f-d6cc-4c79-a690-3e395b4951d2"]
}, Closed]],
Cell[CellGroupData[{
Cell[145619, 3427, 202, 4, 53, "Subsubsection",ExpressionUUID->"b716ced8-7083-460e-b2cd-6e76022767b8"],
Cell[145824, 3433, 634, 17, 794, "Input",ExpressionUUID->"c70a98a5-71c0-43e2-b3da-f549e766b58f"]
}, Closed]],
Cell[CellGroupData[{
Cell[146495, 3455, 158, 3, 53, "Subsubsection",ExpressionUUID->"8fdf514b-2771-41f2-9378-68b9623b71c4"],
Cell[146656, 3460, 350, 9, 68, "Input",ExpressionUUID->"6fc56c8b-1b14-41c5-986c-63380188136e"]
}, Closed]],
Cell[CellGroupData[{
Cell[147043, 3474, 209, 4, 53, "Subsubsection",ExpressionUUID->"c59ae084-3047-4351-ae6f-8cac1c03d1ef"],
Cell[147255, 3480, 475, 12, 1989, "Code",ExpressionUUID->"9adf83d5-6284-4143-b839-f35e48123496"]
}, Closed]],
Cell[CellGroupData[{
Cell[147767, 3497, 165, 3, 53, "Subsubsection",ExpressionUUID->"7db0ec15-5a6c-4a24-b5f2-29ade1f98e51"],
Cell[147935, 3502, 551, 15, 1989, "Code",ExpressionUUID->"8c8cf04d-8d5e-4215-9980-148846e28fe7"]
}, Closed]],
Cell[CellGroupData[{
Cell[148523, 3522, 166, 3, 53, "Subsubsection",ExpressionUUID->"02c78071-8521-4aa0-ac00-047b7300c66c"],
Cell[148692, 3527, 399, 11, 1989, "Code",ExpressionUUID->"9919f21a-07a1-43c7-8d53-fbe50178f96d"]
}, Closed]],
Cell[CellGroupData[{
Cell[149128, 3543, 164, 3, 53, "Subsubsection",ExpressionUUID->"87770f6b-4cf8-4888-a237-8a1c35bb9f73"],
Cell[149295, 3548, 516, 13, 1989, "Code",ExpressionUUID->"d9bcfd98-fd85-422f-90bb-699711afe270"]
}, Closed]],
Cell[CellGroupData[{
Cell[149848, 3566, 167, 3, 53, "Subsubsection",ExpressionUUID->"ee2cd685-c5b9-463a-85ac-9986fc32a8a5"],
Cell[150018, 3571, 4499, 103, 13167, "Code",ExpressionUUID->"c177f39e-fad6-4e59-86f8-cf71e5fa2db5"]
}, Closed]],
Cell[CellGroupData[{
Cell[154554, 3679, 166, 3, 53, "Subsubsection",ExpressionUUID->"698ddb06-bc17-4e89-b137-36f19bd15b13"],
Cell[154723, 3684, 404, 12, 1989, "Code",ExpressionUUID->"3c2e4b68-5b74-4252-ae50-979af7516220"]
}, Closed]],
Cell[CellGroupData[{
Cell[155164, 3701, 159, 3, 53, "Subsubsection",ExpressionUUID->"27319d79-58c6-4356-b3ca-963d1e6dd888"],
Cell[155326, 3706, 1236, 37, 2808, "Code",ExpressionUUID->"a77553c2-06bf-4db8-b6d3-1933b1614089"]
}, Closed]],
Cell[CellGroupData[{
Cell[156599, 3748, 159, 3, 53, "Subsubsection",ExpressionUUID->"971b1880-008f-425e-acf1-582a17fc1b1a"],
Cell[156761, 3753, 337, 8, 1989, "Code",ExpressionUUID->"ea18ab6f-8f91-4c8c-b809-143b2a70aa10"]
}, Closed]],
Cell[CellGroupData[{
Cell[157135, 3766, 209, 4, 53, "Subsubsection",ExpressionUUID->"d23c2628-6ae5-4149-9f11-ad85267d1d15"],
Cell[157347, 3772, 8428, 204, 12467, "Code",ExpressionUUID->"d173eb45-7ac8-42a4-8d12-ba2f5adbafc8"]
}, Closed]],
Cell[CellGroupData[{
Cell[165812, 3981, 153, 3, 53, "Subsubsection",ExpressionUUID->"1e83c51f-c3ff-4530-a1aa-427f0ff056be"],
Cell[165968, 3986, 1041, 27, 2216, "Code",ExpressionUUID->"359c9812-70ad-464b-9b12-811792dd19a6"]
}, Closed]],
Cell[CellGroupData[{
Cell[167046, 4018, 458, 8, 53, "Subsubsection",ExpressionUUID->"cdb4e017-fa27-4371-8b6d-fe84f9aa1d27"],
Cell[167507, 4028, 15140, 348, 37689, "Code",ExpressionUUID->"0eae6244-9806-46cf-b937-416d2ab5c463"]
}, Closed]],
Cell[CellGroupData[{
Cell[182684, 4381, 211, 4, 53, "Subsubsection",ExpressionUUID->"fb2cc3ac-a5e5-4688-a8dd-a631879d742e"],
Cell[182898, 4387, 1173, 24, 2147483647, "Code",ExpressionUUID->"992ff0b0-dbe7-4121-9034-97ce2768ec5d"],
Cell[184074, 4413, 1157, 31, 2147483647, "Code",ExpressionUUID->"5e4d62e3-e565-425f-ba30-57f5ce679611"],
Cell[185234, 4446, 1216, 30, 2147483647, "Code",ExpressionUUID->"dcf287c9-5db9-4554-b09c-2e1408d9ccf5"],
Cell[186453, 4478, 1094, 28, 2147483647, "Code",ExpressionUUID->"c143ed4c-4779-4522-b4f1-72a58cea7a18"],
Cell[187550, 4508, 3396, 80, 2147483647, "Code",ExpressionUUID->"25ff61b2-78cd-4f65-a8d7-2ad9d2ce6cb6"],
Cell[190949, 4590, 416, 8, 2147483647, "Code",ExpressionUUID->"5188a559-6f23-4b20-935d-2fa006b4e2ef"]
}, Closed]],
Cell[CellGroupData[{
Cell[191402, 4603, 185, 4, 53, "Subsubsection",ExpressionUUID->"f8b9c8aa-f6cd-4c19-9378-ebffd3f80170"],
Cell[191590, 4609, 1903, 54, 2147483647, "Code",ExpressionUUID->"5fc760c5-8bff-4d54-ab52-4b2c0cbcf97b"]
}, Closed]],
Cell[CellGroupData[{
Cell[193530, 4668, 303, 6, 53, "Subsubsection",ExpressionUUID->"7b346daf-5a2b-4b50-b585-0f3d866a562e"],
Cell[193836, 4676, 1524, 41, 2147483647, "Code",ExpressionUUID->"5d57f349-d9b8-466a-b18f-e91620f5bdbb"]
}, Closed]],
Cell[CellGroupData[{
Cell[195397, 4722, 275, 5, 53, "Subsubsection",ExpressionUUID->"c906219e-d31a-46bd-a319-ad22d2c917b1"],
Cell[195675, 4729, 4046, 93, 5715, "Code",ExpressionUUID->"feb7193e-ddf1-4236-931d-b6ad1c65fb79"],
Cell[199724, 4824, 3992, 84, 5852, "Code",ExpressionUUID->"9283a4f1-96ef-4a04-b05f-f5f69d61ec96"],
Cell[203719, 4910, 769, 17, 884, "Code",ExpressionUUID->"a57e5873-dfea-48f7-8bdd-84f3ef9b590c"]
}, Closed]],
Cell[CellGroupData[{
Cell[204525, 4932, 232, 5, 53, "Subsubsection",ExpressionUUID->"30821515-eb9c-4ecb-ab65-546b930db282"],
Cell[204760, 4939, 5153, 120, 6707, "Code",ExpressionUUID->"678ce95b-35b6-432a-8cea-0e99ec686dfd"],
Cell[209916, 5061, 4535, 96, 6180, "Code",ExpressionUUID->"79747f50-ade2-43f0-b958-c93cdf01402b"],
Cell[214454, 5159, 842, 20, 884, "Code",ExpressionUUID->"5cfb7985-fca8-41c2-836e-747aa17c8479"]
}, Closed]],
Cell[CellGroupData[{
Cell[215333, 5184, 280, 5, 53, "Subsubsection",ExpressionUUID->"68a5ea3f-91cd-4d3c-99df-26946fe640a9"],
Cell[215616, 5191, 5889, 138, 7035, "Code",ExpressionUUID->"fccb2e1d-a5d1-4620-aee0-fee3f7649c09"],
Cell[221508, 5331, 4587, 97, 6180, "Code",ExpressionUUID->"d83813d2-8ab0-4208-9097-1bad2412f669"],
Cell[226098, 5430, 602, 15, 884, "Code",ExpressionUUID->"f20dec89-7a3d-4f12-9b89-bba34b5ade07"],
Cell[226703, 5447, 846, 20, 884, "Code",ExpressionUUID->"da6716aa-2588-4a38-97df-8e751b4e61f8"]
}, Closed]],
Cell[CellGroupData[{
Cell[227586, 5472, 289, 5, 53, "Subsubsection",ExpressionUUID->"77ac0e8f-57d0-4044-93f4-0d9998e7dea8"],
Cell[227878, 5479, 1219, 30, 2147483647, "Code",ExpressionUUID->"9031e534-1577-4d94-b5f8-b07a89ed0e43"]
}, Closed]],
Cell[CellGroupData[{
Cell[229134, 5514, 157, 3, 53, "Subsubsection",ExpressionUUID->"3400c6dc-4cea-4bdd-bbfc-22ca704d8fae"],
Cell[229294, 5519, 223, 5, 2147483647, "Input",ExpressionUUID->"3db227ac-b126-4796-abe6-3a7b94bd7ec3"]
}, Closed]],
Cell[CellGroupData[{
Cell[229554, 5529, 159, 3, 53, "Subsubsection",ExpressionUUID->"3a213472-3450-4976-9e39-a2bb5395ed47"],
Cell[229716, 5534, 962, 27, 2147483647, "Code",ExpressionUUID->"a00631cd-4493-4998-a32a-a12bd1a0cb2e"]
}, Closed]],
Cell[CellGroupData[{
Cell[230715, 5566, 185, 4, 53, "Subsubsection",ExpressionUUID->"26931e65-f1d9-40a9-aef3-a32b9dadf192"],
Cell[230903, 5572, 406, 12, 2147483647, "Code",ExpressionUUID->"e3051963-851b-4e9f-9057-0462ce01abe9"]
}, Closed]],
Cell[CellGroupData[{
Cell[231346, 5589, 194, 4, 53, "Subsubsection",ExpressionUUID->"41535405-13f0-43c8-abf7-232a2b08a557"],
Cell[231543, 5595, 553, 15, 2147483647, "Input",ExpressionUUID->"8a3f6984-a0d4-4ae1-8ee1-62ca495a1ee8"]
}, Closed]],
Cell[CellGroupData[{
Cell[232133, 5615, 290, 5, 53, "Subsubsection",ExpressionUUID->"5d732cf5-1cb8-473f-b845-d7d4752231d7"],
Cell[232426, 5622, 1257, 35, 2147483647, "Code",ExpressionUUID->"ae3cd843-d7a8-4c4d-ae61-e5d4f60f722d"],
Cell[233686, 5659, 1910, 49, 2147483647, "Code",ExpressionUUID->"9434e8cc-5cf2-4416-abd9-eabf9b7fd646"],
Cell[235599, 5710, 656, 14, 2147483647, "Code",ExpressionUUID->"944d519c-f4ee-45f4-835d-185e5eb0e683"],
Cell[236258, 5726, 1927, 49, 2147483647, "Code",ExpressionUUID->"7e79943d-9d59-42be-8460-da92c2a595f5"],
Cell[238188, 5777, 609, 13, 2147483647, "Code",ExpressionUUID->"31153e0f-716d-4fe6-a594-4ebda7cda1d3"],
Cell[238800, 5792, 1879, 48, 2147483647, "Code",ExpressionUUID->"bd3ed352-3ccd-4be6-8dab-f30ca1524dac"],
Cell[240682, 5842, 516, 12, 2147483647, "Code",ExpressionUUID->"9266fc1a-4c17-4673-a47b-b686176bf5e1"]
}, Closed]],
Cell[CellGroupData[{
Cell[241235, 5859, 90, 0, 53, "Subsubsection",ExpressionUUID->"e446d061-1f10-4ad3-afa5-bbdc051d700e"],
Cell[241328, 5861, 5488, 131, 2147483647, "Code",ExpressionUUID->"b772a55d-9174-402b-bfc7-5d2fa90999d4"],
Cell[246819, 5994, 501, 12, 2147483647, "Code",ExpressionUUID->"de15622b-e2ba-432c-abdf-3890b556ac30"]
}, Closed]],
Cell[CellGroupData[{
Cell[247357, 6011, 188, 4, 53, "Subsubsection",ExpressionUUID->"60516b59-40e1-4b4e-8a5e-efe596b9e7c0"],
Cell[247548, 6017, 3645, 100, 2147483647, "Input",ExpressionUUID->"31437ba1-5fa8-499b-b0f0-50bb96e65965"]
}, Closed]],
Cell[CellGroupData[{
Cell[251230, 6122, 120, 2, 53, "Subsubsection",ExpressionUUID->"dbc19b57-acbc-4764-acfc-8b642d35e469"],
Cell[251353, 6126, 412, 12, 2147483647, "Input",ExpressionUUID->"89c82ee0-f421-4f1c-99c5-655222a347ff"]
}, Closed]],
Cell[CellGroupData[{
Cell[251802, 6143, 110, 2, 53, "Subsubsection",ExpressionUUID->"2168dcc5-a5b3-4e49-9636-f2bbf8127085"],
Cell[251915, 6147, 500, 13, 2147483647, "Input",ExpressionUUID->"a027fd52-2fd4-4a4a-a22c-e9000fce978e"]
}, Closed]],
Cell[CellGroupData[{
Cell[252452, 6165, 119, 2, 53, "Subsubsection",ExpressionUUID->"7b4a298a-8bac-4698-9931-d6c4228734be"],
Cell[252574, 6169, 388, 12, 2147483647, "Input",ExpressionUUID->"17d323c9-412f-437e-926f-b78b9d3849ab"]
}, Closed]],
Cell[CellGroupData[{
Cell[252999, 6186, 118, 2, 53, "Subsubsection",ExpressionUUID->"4d369ef8-a66c-4465-9714-81c6bc9efeaa"],
Cell[253120, 6190, 386, 12, 2147483647, "Input",ExpressionUUID->"571b7fd4-c4c8-48a6-9d5f-663a4f933956"]
}, Closed]],
Cell[CellGroupData[{
Cell[253543, 6207, 215, 4, 53, "Subsubsection",ExpressionUUID->"757509bb-1f88-4aa4-b326-77026ab687ad"],
Cell[253761, 6213, 912, 22, 78, "Code",ExpressionUUID->"da91b5ef-3dad-4338-8a0a-c646bb7d2213"]
}, Closed]],
Cell[CellGroupData[{
Cell[254710, 6240, 190, 4, 53, "Subsubsection",ExpressionUUID->"c0f00bc7-81bd-4b3f-b9e8-16d753c3d27f"],
Cell[254903, 6246, 458, 12, 78, "Code",ExpressionUUID->"c4f1962e-5764-4f09-93b9-35b2328b2829"]
}, Closed]],
Cell[CellGroupData[{
Cell[255398, 6263, 173, 4, 53, "Subsubsection",ExpressionUUID->"37ab3a9d-16b2-43d9-97ad-22413442c64a"],
Cell[255574, 6269, 550, 14, 10068, "Code",ExpressionUUID->"d4cd5385-c5cd-430f-a5b8-b334e9efe2e5"]
}, Closed]],
Cell[CellGroupData[{
Cell[256161, 6288, 161, 4, 53, "Subsubsection",ExpressionUUID->"cbb74595-26b7-49af-82a5-ffa88d3111f3"],
Cell[256325, 6294, 749, 20, 78, "Code",ExpressionUUID->"4e5fdc04-a3ee-4511-a14a-0e05c690c314"]
}, Closed]],
Cell[CellGroupData[{
Cell[257111, 6319, 164, 3, 53, "Subsubsection",ExpressionUUID->"986f7d7f-5b80-4631-9510-fb250876c602"],
Cell[257278, 6324, 405, 11, 10068, "Code",ExpressionUUID->"6979bb77-75bf-4f7f-94a9-29ffcdd4a123"]
}, Closed]],
Cell[CellGroupData[{
Cell[257720, 6340, 168, 4, 53, "Subsubsection",ExpressionUUID->"9a6ba6fb-3e40-42fc-a4b9-07587b703d25"],
Cell[257891, 6346, 782, 19, 78, "Code",ExpressionUUID->"cf160c6a-8484-4e56-9b84-5132297710fc"]
}, Closed]],
Cell[CellGroupData[{
Cell[258710, 6370, 167, 4, 53, "Subsubsection",ExpressionUUID->"cf7e94f1-d30e-4145-bfbb-48be937a284f"],
Cell[258880, 6376, 2629, 78, 2147483647, "Code",ExpressionUUID->"162ea259-d218-49e2-bf7b-e9f6bce6d318"]
}, Closed]],
Cell[CellGroupData[{
Cell[261546, 6459, 185, 4, 53, "Subsubsection",ExpressionUUID->"58e1e633-fe5d-4d3c-9b11-8c4e58e8844c"],
Cell[261734, 6465, 1502, 44, 108, "Code",ExpressionUUID->"1a6452ed-75ea-4c27-82d9-85d5292300fb"]
}, Closed]],
Cell[CellGroupData[{
Cell[263273, 6514, 239, 5, 53, "Subsubsection",ExpressionUUID->"add7cbe2-a15d-414a-9f7d-dd3b36252b31"],
Cell[263515, 6521, 791, 19, 78, "Code",ExpressionUUID->"7d4be5f3-48ed-4cf0-ad3c-dcc7dca4e64b"]
}, Closed]],
Cell[CellGroupData[{
Cell[264343, 6545, 191, 4, 53, "Subsubsection",ExpressionUUID->"9db61aaf-d555-4ada-b650-1011e65458ce"],
Cell[264537, 6551, 1100, 31, 108, "Code",ExpressionUUID->"254b370f-5310-4803-9a48-0ddd4ebe581e"]
}, Closed]],
Cell[CellGroupData[{
Cell[265674, 6587, 179, 3, 53, "Subsubsection",ExpressionUUID->"be38bb34-4efd-4bbf-a3b3-fbf17f6fd155"],
Cell[265856, 6592, 330, 9, 78, "Code",ExpressionUUID->"3ef8ad6f-3e09-4e28-912a-9c7818bffbc9"]
}, Closed]],
Cell[CellGroupData[{
Cell[266223, 6606, 201, 4, 53, "Subsubsection",ExpressionUUID->"4cc5017c-4f25-455f-a836-a40431f4d51e"],
Cell[266427, 6612, 536, 15, 2147483647, "Code",ExpressionUUID->"3b2dcfe8-3773-49e3-9cd8-6031ff93b2fd"],
Cell[266966, 6629, 9746, 280, 2147483647, "Code",ExpressionUUID->"44ace925-65fd-4f01-8885-d45bb7b9c8ac"],
Cell[276715, 6911, 9442, 249, 2147483647, "Code",ExpressionUUID->"08ad98d7-7b39-4d8d-a745-5cc81f20119d"]
}, Closed]],
Cell[CellGroupData[{
Cell[286194, 7165, 157, 4, 53, "Subsubsection",ExpressionUUID->"2272c246-6e3f-44f8-a579-3c020e95e38c"],
Cell[286354, 7171, 5753, 137, 2147483647, "Code",ExpressionUUID->"6d1f288d-c23c-419c-b3e5-f7b69b515f09"]
}, Closed]],
Cell[CellGroupData[{
Cell[292144, 7313, 162, 4, 53, "Subsubsection",ExpressionUUID->"0f4ee5f0-78d3-438b-9e68-f44b978cad2c"],
Cell[292309, 7319, 1687, 38, 2216, "Code",ExpressionUUID->"8af99e05-5103-47fc-ba8e-67543d0fb65d"]
}, Closed]],
Cell[CellGroupData[{
Cell[294033, 7362, 164, 4, 53, "Subsubsection",ExpressionUUID->"6778b621-baf4-4297-8da5-95e0d9b62367"],
Cell[294200, 7368, 2064, 45, 2216, "Code",ExpressionUUID->"8018618c-895d-40c9-a691-62927dccccf0"]
}, Closed]],
Cell[CellGroupData[{
Cell[296301, 7418, 124, 2, 53, "Subsubsection",ExpressionUUID->"5b9f956d-b9a1-4ff3-9967-3ca5fb1bd1ee"],
Cell[296428, 7422, 20796, 473, 12858, "Code",ExpressionUUID->"30b00826-7b67-4a64-98e6-eaaf2e957a06"]
}, Closed]],
Cell[CellGroupData[{
Cell[317261, 7900, 163, 4, 53, "Subsubsection",ExpressionUUID->"9294cf2e-5be7-4cd7-b934-40d4e5a604b2"],
Cell[317427, 7906, 1490, 35, 195, "Code",ExpressionUUID->"3c6e4a63-ac34-4438-a90f-3c76391ed5c3"]
}, Closed]],
Cell[CellGroupData[{
Cell[318954, 7946, 161, 4, 53, "Subsubsection",ExpressionUUID->"b60bf42e-b7b5-4a26-950e-1d733b8ee6ac"],
Cell[319118, 7952, 1511, 36, 2147483647, "Code",ExpressionUUID->"ff3cfd44-6236-44dc-859c-fb688445ca7e"]
}, Closed]],
Cell[CellGroupData[{
Cell[320666, 7993, 191, 4, 53, "Subsubsection",ExpressionUUID->"28edf3c2-d873-4264-9b8f-09814781b6f3"],
Cell[320860, 7999, 1324, 39, 2147483647, "Code",ExpressionUUID->"92e6bff0-db68-4106-81f2-e053afbe37cd"]
}, Closed]],
Cell[CellGroupData[{
Cell[322221, 8043, 166, 4, 53, "Subsubsection",ExpressionUUID->"c29556f0-b3dc-4a54-82bd-975c81278bb0"],
Cell[322390, 8049, 1255, 36, 2147483647, "Code",ExpressionUUID->"7a3dae09-e320-4a86-9103-d3f873a2d20b"]
}, Closed]],
Cell[CellGroupData[{
Cell[323682, 8090, 115, 2, 53, "Subsubsection",ExpressionUUID->"6d56abeb-e484-4d52-a539-2ccea9a39174"],
Cell[323800, 8094, 786, 22, 2147483647, "Code",ExpressionUUID->"fc5dfd5e-165b-4dc0-8213-5584455e2b82"]
}, Closed]],
Cell[CellGroupData[{
Cell[324623, 8121, 94, 0, 53, "Subsubsection",ExpressionUUID->"4f1a1bce-e381-491e-84d9-4046d3498439"],
Cell[324720, 8123, 1115, 33, 2808, "Code",ExpressionUUID->"05a2ea12-c549-47a4-b359-1310426906e2"]
}, Closed]],
Cell[CellGroupData[{
Cell[325872, 8161, 170, 3, 53, "Subsubsection",ExpressionUUID->"e1fc9dbe-01f0-4d23-aaef-50e8b6ba0b34"],
Cell[326045, 8166, 6631, 152, 5193, "Code",ExpressionUUID->"90085df8-d9b8-4865-a1de-8cc7c818573f"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[332725, 8324, 118, 2, 55, "Subsection",ExpressionUUID->"7fdf5ac7-e60e-42f5-af30-ec6767b5f2d6"],
Cell[332846, 8328, 45940, 1040, 4690, "Code",ExpressionUUID->"5d2565d9-25b6-4de7-9790-784aa4ef16af"],
Cell[378789, 9370, 1565, 32, 78, "Code",ExpressionUUID->"fbcc4e35-2078-402b-954f-5f17b179ea67"]
}, Closed]],
Cell[CellGroupData[{
Cell[380391, 9407, 215, 4, 55, "Subsection",ExpressionUUID->"6e23eb1e-2878-448d-8ce4-163815f54134"],
Cell[380609, 9413, 3356, 69, 253, "Code",ExpressionUUID->"b5355846-4612-40ba-9344-e61278b273fa"],
Cell[383968, 9484, 3904, 85, 253, "Code",ExpressionUUID->"1315eb0c-a84d-487a-b675-57b816efcfc2"]
}, Closed]],
Cell[CellGroupData[{
Cell[387909, 9574, 119, 2, 55, "Subsection",ExpressionUUID->"24b180e6-2f20-4392-8c5d-23ece71ea97f"],
Cell[388031, 9578, 6934, 160, 17084, "Code",ExpressionUUID->"06b6773e-1d17-44b3-ab11-11f95a90822c"]
}, Closed]],
Cell[CellGroupData[{
Cell[395002, 9743, 789, 13, 96, "Subsection",ExpressionUUID->"c0f4bb92-05a1-4c2b-bca6-5ae1accd8604"],
Cell[395794, 9758, 2592, 72, 236, "Code",ExpressionUUID->"b3fbb569-f456-43f2-a503-02a14376ce86"],
Cell[398389, 9832, 254, 6, 78, "Code",ExpressionUUID->"4edaf99c-bd16-4b1b-a38e-cb4e0eb9de4d"],
Cell[398646, 9840, 2894, 77, 236, "Code",ExpressionUUID->"46af1460-7dd9-4c26-94d2-3882d7908021"],
Cell[401543, 9919, 7517, 201, 559, "Code",ExpressionUUID->"6230d47a-2d8a-4b6b-bff8-03145e3fa31e"],
Cell[409063, 10122, 1244, 33, 108, "Code",ExpressionUUID->"1a79011a-8ac3-4493-9a6f-4cca8d1ac8c3"],
Cell[410310, 10157, 1786, 46, 195, "Code",ExpressionUUID->"bd50f148-24b2-4f47-9e1c-b5683e04af76"],
Cell[412099, 10205, 1397, 37, 108, "Code",ExpressionUUID->"fe360ad0-a312-427e-9d9d-4aaa27e78fde"],
Cell[413499, 10244, 1494, 37, 108, "Code",ExpressionUUID->"378a5dd2-87b9-4091-9237-bc45f9167fe5"],
Cell[414996, 10283, 2268, 59, 195, "Code",ExpressionUUID->"c53dca45-4387-48f1-b089-ff668065f0ca"],
Cell[417267, 10344, 2395, 62, 195, "Code",ExpressionUUID->"b0a23c22-3ae6-4ee7-8673-c41ce249de75"],
Cell[419665, 10408, 1309, 36, 108, "Code",ExpressionUUID->"1d24e3ff-121d-43f6-9720-32f75b60ceb5"],
Cell[420977, 10446, 1274, 35, 108, "Code",ExpressionUUID->"30b6afca-af0a-4547-9be0-0f0b9410b679"],
Cell[422254, 10483, 978, 26, 78, "Code",ExpressionUUID->"f5626f8e-f3f9-4be7-8201-3ad7cc44af30"],
Cell[423235, 10511, 11947, 267, 1152, "Code",ExpressionUUID->"3ba97d25-9008-4728-bfcb-93c5e1533dec"]
}, Closed]],
Cell[CellGroupData[{
Cell[435219, 10783, 280, 5, 55, "Subsection",ExpressionUUID->"9cba5aa2-666f-49bd-bf60-cd978b5f8989"],
Cell[435502, 10790, 533, 14, 78, "Code",ExpressionUUID->"b0d57085-3cec-4640-84cf-523b8ab006e3"],
Cell[436038, 10806, 3509, 90, 388, "Code",ExpressionUUID->"81ee0f5f-5716-464d-a4e9-475509ba22b8"],
Cell[439550, 10898, 1865, 47, 179, "Code",ExpressionUUID->"77fd7795-74a1-4446-aab5-78cda0976f80"],
Cell[441418, 10947, 2736, 64, 326, "Code",ExpressionUUID->"74ed862e-fd58-417e-b9f0-4b9109ef04ed"],
Cell[444157, 11013, 1014, 29, 146, "Code",ExpressionUUID->"164f4b33-4055-4354-ba4e-865cb7012810"]
}, Closed]],
Cell[CellGroupData[{
Cell[445208, 11047, 238, 6, 55, "Subsection",ExpressionUUID->"3ef6ddd7-ed26-4962-9db9-65d3472f6a6a"],
Cell[445449, 11055, 1705, 40, 311, "Code",ExpressionUUID->"e45d94de-7346-4052-87b6-4c7c4c7077c3"],
Cell[447157, 11097, 1072, 26, 224, "Code",ExpressionUUID->"3fc9b175-37cd-4e76-857d-42ded15afed8"],
Cell[448232, 11125, 1074, 26, 330918, "Code",ExpressionUUID->"d09c50d8-e42a-44c4-b7f3-3b4dadd8f25f"],
Cell[449309, 11153, 1735, 41, 458878, "Code",ExpressionUUID->"f6021bc1-4e6a-4600-a94a-cfef666927c8"],
Cell[451047, 11196, 514, 13, 114680, "Code",ExpressionUUID->"fdb77459-dbad-4f0c-91d8-77fde33488a7"],
Cell[451564, 11211, 1215, 33, 330918, "Code",ExpressionUUID->"688fd88b-075c-4154-bc76-10d2eb22ddbd"]
}, Closed]],
Cell[CellGroupData[{
Cell[452816, 11249, 411, 8, 55, "Subsection",ExpressionUUID->"c2bc71c5-9b2a-427c-b666-5bd7c3ca8461"],
Cell[453230, 11259, 1379, 34, 884, "Code",ExpressionUUID->"e3d2ea35-fe29-4233-821a-283cf145a86e"],
Cell[454612, 11295, 1571, 41, 884, "Code",ExpressionUUID->"0238e485-bbcf-436b-b1cb-f54ec32ee380"],
Cell[456186, 11338, 1685, 41, 884, "Code",ExpressionUUID->"6078d0a6-d9ca-4cbe-9f64-7ac5aec4001d"],
Cell[457874, 11381, 1636, 39, 884, "Code",ExpressionUUID->"12fca214-49b1-4171-9639-da940036ab75"],
Cell[459513, 11422, 1099, 24, 1228, "Code",ExpressionUUID->"0fc3e62a-5e9c-4ac2-acd0-d8f28e135083"],
Cell[460615, 11448, 757, 19, 884, "Code",ExpressionUUID->"6bbc6363-df66-4db0-b7e3-08ac2e6e6c29"],
Cell[461375, 11469, 2366, 61, 1887, "Code",ExpressionUUID->"81da7eac-dae1-4133-a3cb-139fa1df9c6a"],
Cell[463744, 11532, 937, 26, 794, "Input",ExpressionUUID->"4a2dd40c-9718-48ad-a81b-13f049dcf2ee"]
}, Closed]],
Cell[CellGroupData[{
Cell[464718, 11563, 211, 4, 55, "Subsection",ExpressionUUID->"60982037-5214-4bab-b4e5-1728f0893440"],
Cell[464932, 11569, 3595, 96, 60936, "Code",ExpressionUUID->"c8bcc78e-4e8d-47ba-ace8-773613960c7e"]
}, Closed]],
Cell[CellGroupData[{
Cell[468564, 11670, 160, 3, 55, "Subsection",ExpressionUUID->"e5fa1016-75d8-4e8b-ae67-83c71bc65cbe"],
Cell[468727, 11675, 436, 12, 2147483647, "Code",ExpressionUUID->"5368694f-6195-41cd-b13f-9a5f339afd7f"]
}, Closed]],
Cell[CellGroupData[{
Cell[469200, 11692, 188, 4, 55, "Subsection",ExpressionUUID->"3bd3ab69-f665-46af-b17c-5308cf165382"],
Cell[469391, 11698, 40481, 847, 4429, "Code",ExpressionUUID->"b9039202-99ae-4adb-8fa8-394e8745e159"],
Cell[509875, 12547, 491, 13, 78, "Code",ExpressionUUID->"43ecfcb1-984e-4929-9bf7-7c291520e6c0"]
}, Closed]],
Cell[CellGroupData[{
Cell[510403, 12565, 185, 4, 55, "Subsection",ExpressionUUID->"02fc9e24-2467-487d-a2d9-3e8bb62db3a6"],
Cell[510591, 12571, 12054, 258, 1935, "Code",ExpressionUUID->"4c51d1fa-ca30-43ad-8f22-54ad860c2073"],
Cell[522648, 12831, 626, 14, 78, "Code",ExpressionUUID->"129e0cf4-9a43-4b0f-901a-36db417e381d"]
}, Closed]],
Cell[CellGroupData[{
Cell[523311, 12850, 183, 4, 55, "Subsection",ExpressionUUID->"dd7a46e8-c291-4faf-abb6-36839d1c5c74"],
Cell[523497, 12856, 29737, 638, 3266, "Code",ExpressionUUID->"dd55a33c-ecac-4a63-91d9-c102e305c363"],
Cell[CellGroupData[{
Cell[553259, 13498, 87, 0, 67, "Subsubsection",ExpressionUUID->"3296d68e-4dbb-4e7b-a6f6-2f4b9cd7c55b"],
Cell[553349, 13500, 1483, 32, 137, "Code",ExpressionUUID->"155f75be-858d-4e05-a554-2765629bf664"]
}, Open  ]],
Cell[CellGroupData[{
Cell[554869, 13537, 160, 3, 67, "Subsubsection",ExpressionUUID->"79c3108b-6fbc-4a8c-9b3b-ac31a0e3227c"],
Cell[555032, 13542, 679, 16, 108, "Code",ExpressionUUID->"b2ddfb3e-9a4c-4975-bbac-1257a23d49bf"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[555760, 13564, 300, 5, 55, "Subsection",ExpressionUUID->"c235197c-17c2-4619-a74f-43a96c883153"],
Cell[556063, 13571, 23424, 502, 3182, "Code",ExpressionUUID->"ab6d0b03-bad3-46c3-add3-d5cdbff44c2b"],
Cell[CellGroupData[{
Cell[579512, 14077, 160, 3, 67, "Subsubsection",ExpressionUUID->"0c1f3422-425f-49bd-aca9-1f0bc036f495"],
Cell[579675, 14082, 835, 24, 137, "Code",ExpressionUUID->"4ee9e2c7-268d-4bae-81b1-a2b86136b327"]
}, Open  ]],
Cell[CellGroupData[{
Cell[580547, 14111, 87, 0, 67, "Subsubsection",ExpressionUUID->"2e95b365-01aa-4bf4-a109-16d6c8ed0c34"],
Cell[580637, 14113, 1261, 30, 108, "Code",ExpressionUUID->"ab1183a6-f852-41fc-a3b0-bfb44dd79f94"],
Cell[581901, 14145, 951, 22, 78, "Code",ExpressionUUID->"90a530fa-34b1-42e9-9cc7-ee64bac5fb8a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[582901, 14173, 165, 4, 55, "Subsection",ExpressionUUID->"eaf83884-ac96-485d-ac81-8f22fd8b802a"],
Cell[583069, 14179, 35390, 743, 5299, "Code",ExpressionUUID->"7445cea4-3b31-43e0-a523-f854f7f9d6dd"],
Cell[CellGroupData[{
Cell[618484, 14926, 87, 0, 67, "Subsubsection",ExpressionUUID->"c11267d6-928a-43dc-a02b-2949ca4de677"],
Cell[618574, 14928, 2010, 44, 282, "Code",ExpressionUUID->"ddbe9aad-cd4f-4eaf-9337-c1fefe14838a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[620621, 14977, 158, 3, 67, "Subsubsection",ExpressionUUID->"a254fa1e-8ba2-4534-baaf-c338d31398f8"],
Cell[620782, 14982, 797, 18, 108, "Code",ExpressionUUID->"c96b4aae-b707-46ba-bfbc-b81b8a83a229"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[621628, 15006, 120, 2, 55, "Subsection",ExpressionUUID->"e548414e-b65a-4e0c-86e9-d42291e285f8"],
Cell[621751, 15010, 4534, 96, 15399, "Code",ExpressionUUID->"fd33ce88-c5ed-42a4-862c-886b334532b0"]
}, Closed]],
Cell[CellGroupData[{
Cell[626322, 15111, 120, 2, 55, "Subsection",ExpressionUUID->"61f27e60-5470-4d35-9d95-187aa2ff31c5"],
Cell[626445, 15115, 853, 24, 1228, "Code",ExpressionUUID->"bc8d17b8-2ecf-49bd-85fc-4e3c9b636f3e"],
Cell[627301, 15141, 10340, 223, 20056, "Code",ExpressionUUID->"d1306c71-01de-4685-adb5-ab976ac23085"],
Cell[CellGroupData[{
Cell[637666, 15368, 87, 0, 758, "Subsubsection",ExpressionUUID->"b8267323-31b7-4ad3-a956-9c90c0fd6ce8"],
Cell[637756, 15370, 537, 13, 1228, "Code",ExpressionUUID->"7ecda5a8-9a28-4295-b2ac-83b4920777f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[638330, 15388, 87, 0, 758, "Subsubsection",ExpressionUUID->"4ba194f8-672a-4c9b-93ec-ef7df33652c7"],
Cell[638420, 15390, 691, 17, 884, "Code",ExpressionUUID->"49bfa0f1-9a9b-4b78-9f14-f69fcf19399f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[639160, 15413, 123, 2, 55, "Subsection",ExpressionUUID->"c79e308e-9678-4528-a0cf-1de5b0c05510"],
Cell[639286, 15417, 1053, 27, 2763, "Code",ExpressionUUID->"4f28d588-44e1-4df0-97c9-d4459181c2d6"],
Cell[640342, 15446, 9062, 216, 34465, "Code",ExpressionUUID->"9fb828fd-93f9-4378-8808-4c1b0c210836"],
Cell[649407, 15664, 757, 17, 1989, "Code",ExpressionUUID->"e1be42fb-a461-45b9-b1b5-3ba78c45abd6"],
Cell[CellGroupData[{
Cell[650189, 15685, 87, 0, 1705, "Subsubsection",ExpressionUUID->"853e26e7-627e-4aba-94fc-fe7c121c6114"],
Cell[650279, 15687, 720, 17, 1989, "Code",ExpressionUUID->"90bbe12e-9d68-419f-b4f0-cc5ea4cb6e70"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[651048, 15710, 159, 3, 55, "Subsection",ExpressionUUID->"d6e07f9a-d802-4a56-8b55-1e956857f345"],
Cell[651210, 15715, 1424, 32, 2763, "Code",ExpressionUUID->"0f3b83dd-7429-40e9-8b11-f22487c357e2"],
Cell[652637, 15749, 16535, 341, 57017, "Code",ExpressionUUID->"e8a0d079-56bf-41bf-9476-05e75e833886"],
Cell[669175, 16092, 845, 18, 1989, "Code",ExpressionUUID->"d7feed21-57a9-4df8-a8b0-4e2cb9de3ddc"],
Cell[CellGroupData[{
Cell[670045, 16114, 160, 3, 1705, "Subsubsection",ExpressionUUID->"421c4dda-795f-4356-8430-c30e9915bd9f"],
Cell[670208, 16119, 1638, 30, 2763, "Code",ExpressionUUID->"48845c87-f17e-421a-9b81-88f4e8ff5c22"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[671895, 16155, 170, 4, 55, "Subsection",ExpressionUUID->"8a0c511d-2eaf-4d83-a082-f7011a64b435"],
Cell[672068, 16161, 3297, 70, 8712, "Code",ExpressionUUID->"59489b6b-977a-44cd-8b75-e492ae5d22b9"],
Cell[675368, 16233, 498, 14, 1989, "Code",ExpressionUUID->"475cdf26-25f9-4c09-94cf-851b1f0d6318"],
Cell[675869, 16249, 259, 7, 1989, "Code",ExpressionUUID->"b4baa49b-dde2-46f4-9a3b-b0dd1b3c96e5"]
}, Closed]],
Cell[CellGroupData[{
Cell[676165, 16261, 241, 5, 55, "Subsection",ExpressionUUID->"42d92744-0dbe-4633-a485-bbc2b146651e"],
Cell[676409, 16268, 56671, 1176, 208640, "Code",ExpressionUUID->"71c0366b-2ebb-4a26-8758-9f1eddc3e18e"],
Cell[CellGroupData[{
Cell[733105, 17448, 87, 0, 1705, "Subsubsection",ExpressionUUID->"24fd674f-a1b3-4f94-8506-596244820b69"],
Cell[733195, 17450, 1941, 42, 4986, "Code",ExpressionUUID->"0b416dbc-7230-433a-8360-92019ddd4d0d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[735185, 17498, 125, 2, 55, "Subsection",ExpressionUUID->"7c7feded-abaa-4bc3-909d-57b58777660f"],
Cell[735313, 17502, 31567, 663, 45162, "Code",ExpressionUUID->"ed20a51f-32d7-4df3-b912-5c4424333731"]
}, Closed]],
Cell[CellGroupData[{
Cell[766917, 18170, 123, 2, 55, "Subsection",ExpressionUUID->"b1973ec0-a3b2-4de7-8fe4-47afde6dcc05"],
Cell[767043, 18174, 20656, 466, 38225, "Code",ExpressionUUID->"ac13ae67-3407-476e-a9cb-92a3018c0b8e"]
}, Closed]],
Cell[CellGroupData[{
Cell[787736, 18645, 194, 4, 55, "Subsection",ExpressionUUID->"4713f981-ad4b-4882-b792-ecc7724d032d"],
Cell[787933, 18651, 5019, 111, 15399, "Code",ExpressionUUID->"7faef566-c591-4261-90cc-973189697d42"],
Cell[CellGroupData[{
Cell[792977, 18766, 160, 3, 1705, "Subsubsection",ExpressionUUID->"eb3dc447-3d50-455a-bb21-b35edc5108c4"],
Cell[793140, 18771, 772, 18, 4986, "Code",ExpressionUUID->"643864bf-f2e3-4316-bccf-fe4449610a62"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[793961, 18795, 288, 6, 55, "Subsection",ExpressionUUID->"971be81d-214e-436d-8c24-fc4fbcfb8815"],
Cell[794252, 18803, 952, 26, 1228, "Code",ExpressionUUID->"81951699-db0d-452a-b292-b21b29d982c6"],
Cell[795207, 18831, 104493, 2173, 137117, "Code",ExpressionUUID->"de26666d-6328-4a2c-b147-7078c1ad31d5"],
Cell[CellGroupData[{
Cell[899725, 21008, 160, 3, 758, "Subsubsection",ExpressionUUID->"27c89c36-d277-4528-b3ee-fab95ab85014"],
Cell[899888, 21013, 1982, 45, 2551, "Code",ExpressionUUID->"e8f4aa96-dc0a-4de2-ab1a-8ec2e3ca415d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[901907, 21063, 160, 3, 758, "Subsubsection",ExpressionUUID->"380a1635-530e-475d-b4c5-cc1f2f7c7c40"],
Cell[902070, 21068, 912, 25, 1559, "Code",ExpressionUUID->"333fbf6b-fea7-45f6-bc7f-4a1b339047c6"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[903031, 21099, 121, 2, 55, "Subsection",ExpressionUUID->"5de9877c-dc88-445d-8645-23b4fe7d7ec4"],
Cell[903155, 21103, 1712, 42, 166, "Code",ExpressionUUID->"f71239be-97e8-406b-b853-f413dc7e412d"],
Cell[904870, 21147, 643, 15, 78, "Code",ExpressionUUID->"a4f46646-cfc2-4630-89c5-4451c0dd903d"],
Cell[905516, 21164, 49233, 1024, 6436, "Code",ExpressionUUID->"f53e35b2-92ff-4e04-a502-367f97f3470c"],
Cell[954752, 22190, 1840, 41, 137, "Code",ExpressionUUID->"39b1e3e8-f170-40ac-ba0d-4ed782f2e976"],
Cell[956595, 22233, 1956, 43, 137, "Code",ExpressionUUID->"c8ee39f3-ab6f-47b1-8963-4a70131b647b"],
Cell[958554, 22278, 1978, 43, 137, "Code",ExpressionUUID->"ca56b5fa-80fe-4193-864c-1361b086a679"],
Cell[960535, 22323, 2204, 47, 137, "Code",ExpressionUUID->"ae4e6461-e55e-4a2a-85b4-2eb0d9b1cbbc"],
Cell[962742, 22372, 1882, 40, 137, "Code",ExpressionUUID->"1952eeae-5f7d-4bc9-9f16-29cb9d5e98c3"],
Cell[964627, 22414, 1315, 33, 137, "Code",ExpressionUUID->"af07fdf9-7e7c-4790-8368-90bd04963e99"],
Cell[965945, 22449, 1446, 36, 137, "Code",ExpressionUUID->"9877f782-58a9-4841-9d00-46d00b40b116"],
Cell[967394, 22487, 1404, 30, 137, "Code",ExpressionUUID->"257415e2-c166-43bd-b51a-6b84c21188d3"],
Cell[968801, 22519, 1867, 42, 108, "Code",ExpressionUUID->"eca88c5a-d75d-4ca3-8644-d766182220c2"],
Cell[970671, 22563, 342, 10, 78, "Code",ExpressionUUID->"a667433d-0d72-4502-817d-d3c7367bb3c9"]
}, Closed]],
Cell[CellGroupData[{
Cell[971050, 22578, 287, 5, 55, "Subsection",ExpressionUUID->"626cfece-1c56-411b-a6ef-98459ab65103"],
Cell[971340, 22585, 14490, 307, 15763, "Code",ExpressionUUID->"e40b7473-5726-48ca-af4c-fb800b7e7521"]
}, Closed]],
Cell[CellGroupData[{
Cell[985867, 22897, 341, 6, 55, "Subsection",ExpressionUUID->"b3cbc43d-ad10-4b2b-8416-ed6e7c84a82b"],
Cell[986211, 22905, 9041, 183, 10806, "Code",ExpressionUUID->"3d6cf12d-9a6b-4be1-8bb4-922c503f8e1e"]
}, Closed]],
Cell[CellGroupData[{
Cell[995289, 23093, 209, 4, 55, "Subsection",ExpressionUUID->"cb763cf9-35ef-4209-8ee1-3b3a30621968"],
Cell[995501, 23099, 13612, 305, 18735, "Code",ExpressionUUID->"7a9cf91d-f903-4b96-9945-2a4b475c7f36"]
}, Closed]],
Cell[CellGroupData[{
Cell[1009150, 23409, 116, 2, 55, "Subsection",ExpressionUUID->"ccf8610d-5377-4e92-9781-2bfddc133343"],
Cell[1009269, 23413, 19108, 410, 26993, "Code",ExpressionUUID->"372e60e0-9cf7-4681-9b44-76cc0d300941"],
Cell[CellGroupData[{
Cell[1028402, 23827, 159, 3, 758, "Subsubsection",ExpressionUUID->"deb5085a-78f1-4d57-81c2-9dee7e0083ad"],
Cell[1028564, 23832, 715, 18, 1228, "Code",ExpressionUUID->"780a9da2-2cb2-471d-9275-5e0cc51d6ab0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1029316, 23855, 158, 3, 758, "Subsubsection",ExpressionUUID->"1f014808-33f3-46cf-beab-01d799cbd6dc"],
Cell[1029477, 23860, 997, 23, 3208, "Code",ExpressionUUID->"ba35b3f6-262a-431f-af36-3a894f9f8687"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1030523, 23889, 188, 4, 55, "Subsection",ExpressionUUID->"0b68945e-8a4d-432f-baef-03706e1edae9"],
Cell[1030714, 23895, 48734, 975, 62876, "Code",ExpressionUUID->"dbd6a2ae-05ac-4fca-b4cb-7851cdb91c8e"]
}, Closed]],
Cell[CellGroupData[{
Cell[1079485, 24875, 116, 2, 55, "Subsection",ExpressionUUID->"250940ff-72a0-443a-8400-719da27fb0c0"],
Cell[1079604, 24879, 52343, 1074, 1546263, "Code",ExpressionUUID->"6b3b5376-6301-40f3-a430-f16919723f6a"]
}, Closed]],
Cell[CellGroupData[{
Cell[1131984, 25958, 116, 2, 55, "Subsection",ExpressionUUID->"725f0102-bbe0-4d21-9d25-fde00f9c1526"],
Cell[1132103, 25962, 69299, 1463, 78534, "Code",ExpressionUUID->"de95846c-962c-4bdc-a4ce-20f6f61e3568"],
Cell[1201405, 27427, 1748, 43, 39942, "Code",ExpressionUUID->"743c95d1-1551-4a5b-b52c-eed945de3bc7"],
Cell[1203156, 27472, 1524, 39, 31468, "Code",ExpressionUUID->"b133be9d-1a23-4e59-9809-838bd001fe32"],
Cell[1204683, 27513, 1219, 31, 39942, "Code",ExpressionUUID->"cc7e603e-8b37-43dc-9bec-96db8bb31df6"],
Cell[1205905, 27546, 2378, 46, 73811, "Code",ExpressionUUID->"3ff51124-5065-48c2-b8fc-7fc6eddc2c1d"]
}, Closed]],
Cell[CellGroupData[{
Cell[1208320, 27597, 259, 5, 55, "Subsection",ExpressionUUID->"91164660-6832-410b-9a6e-7dc73876d9ef"],
Cell[1208582, 27604, 31474, 632, 3008, "Code",ExpressionUUID->"8c7b7079-c31b-45b5-834d-e38d28dc3286"],
Cell[CellGroupData[{
Cell[1240081, 28240, 157, 3, 67, "Subsubsection",ExpressionUUID->"a806768f-ff76-47a1-aba6-629149705eac"],
Cell[1240241, 28245, 1044, 23, 78, "Code",ExpressionUUID->"d6b56ab5-fedd-4366-a538-aa0acb6aa5e8"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1241334, 28274, 123, 2, 55, "Subsection",ExpressionUUID->"a5c013da-0877-4ef3-b375-184a577db55d"],
Cell[1241460, 28278, 55012, 1163, 63787, "Code",ExpressionUUID->"7cd84c58-a414-4710-99b5-dfe1fc0751c6"],
Cell[1296475, 29443, 1348, 33, 1228, "Code",ExpressionUUID->"8871d97d-d043-407a-b6da-7c2058fab8fd"],
Cell[CellGroupData[{
Cell[1297848, 29480, 158, 3, 758, "Subsubsection",ExpressionUUID->"335da43a-4799-4c31-9dad-521cd6cdc65e"],
Cell[1298009, 29485, 1148, 26, 1887, "Code",ExpressionUUID->"9756b069-91d1-42d1-8716-0aa2c3a7acb9"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1299206, 29517, 125, 2, 55, "Subsection",ExpressionUUID->"95908736-6e20-4608-8281-6142e72c8099"],
Cell[1299334, 29521, 90536, 1899, 2575314, "Code",ExpressionUUID->"863835c9-e3ee-4817-ab32-188bab86501d"],
Cell[1389873, 31422, 1443, 35, 31468, "Code",ExpressionUUID->"aeeb44f6-0e44-4419-9b3b-38951b48ed21"]
}, Closed]],
Cell[CellGroupData[{
Cell[1391353, 31462, 243, 5, 55, "Subsection",ExpressionUUID->"31f8cf0a-32b4-4d00-be2f-2fd2072a2ade"],
Cell[1391599, 31469, 10280, 228, 310846, "Code",ExpressionUUID->"652f12f1-ec5b-4ec5-a966-1d2f27a6f5df"],
Cell[1401882, 31699, 8982, 195, 302382, "Code",ExpressionUUID->"6f9bb147-4beb-4291-839c-51da4dceac41"],
Cell[1410867, 31896, 11523, 248, 327685, "Code",ExpressionUUID->"0332d0e0-1cfb-4e93-a060-16cd76de0fef"],
Cell[1422393, 32146, 1725, 43, 48350, "Code",ExpressionUUID->"b0e38398-155e-41ae-9925-43f1aaa63f30"],
Cell[1424121, 32191, 686, 18, 22653, "Code",ExpressionUUID->"5be71ed4-d6c8-4862-804c-ba5e024d4598"]
}, Closed]],
Cell[CellGroupData[{
Cell[1424844, 32214, 118, 2, 55, "Subsection",ExpressionUUID->"2dea51cd-2a09-4a30-8f6d-6d62976012e6"],
Cell[1424965, 32218, 36264, 768, 3704, "Code",ExpressionUUID->"871a775a-3a49-4411-b05b-cc9982d5e58d"],
Cell[CellGroupData[{
Cell[1461254, 32990, 159, 3, 67, "Subsubsection",ExpressionUUID->"3890a7fa-24d7-42f8-a11a-bc7be05def6a"],
Cell[1461416, 32995, 1560, 32, 195, "Code",ExpressionUUID->"c18c5cba-0abe-424d-a25d-391b23453284"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1463013, 33032, 87, 0, 67, "Subsubsection",ExpressionUUID->"81d08429-e4e6-4857-ac66-7224890561ae"],
Cell[1463103, 33034, 943, 23, 108, "Code",ExpressionUUID->"b511cd4c-5a17-4b24-bef6-37b5d8e7e2ea"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1464095, 33063, 240, 5, 55, "Subsection",ExpressionUUID->"4d7dd79d-2e81-4488-8ac9-44fc9fa7c3c4"],
Cell[1464338, 33070, 19036, 392, 2080, "Code",ExpressionUUID->"00400901-ccbb-466c-84c3-6ed320dadb3e"],
Cell[CellGroupData[{
Cell[1483399, 33466, 87, 0, 67, "Subsubsection",ExpressionUUID->"89050da3-74be-4ba3-9dce-62cc62b9fa47"],
Cell[1483489, 33468, 948, 21, 78, "Code",ExpressionUUID->"37038112-6241-40be-920c-f6bfb93e3fbf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1484474, 33494, 87, 0, 67, "Subsubsection",ExpressionUUID->"990b7bc7-982c-474b-a6ad-1a65fdb5ecb3"],
Cell[1484564, 33496, 737, 18, 78, "Code",ExpressionUUID->"2a71f4dd-182b-4504-a9dc-017521939500"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1485350, 33520, 288, 5, 55, "Subsection",ExpressionUUID->"2cdd0838-2ebd-4dd2-baae-d3ace1c006fd"],
Cell[CellGroupData[{
Cell[1485663, 33529, 135, 3, 67, "Subsubsection",ExpressionUUID->"27f6f011-13b3-4dee-a416-a100e393c8d5"],
Cell[1485801, 33534, 36966, 728, 3385, "Code",ExpressionUUID->"caac3509-e984-4019-99d6-456845cefb34"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1522804, 34267, 87, 0, 67, "Subsubsection",ExpressionUUID->"d553aa7d-b596-4ae7-bfe0-8de86b74e0e0"],
Cell[1522894, 34269, 2338, 44, 253, "Code",ExpressionUUID->"0661ac18-2c3c-4079-8420-7d3678d09b41"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1525269, 34318, 160, 3, 67, "Subsubsection",ExpressionUUID->"889676e9-4bf5-4423-9f50-aa7a1df8f7d2"],
Cell[1525432, 34323, 1159, 26, 137, "Code",ExpressionUUID->"93516ea1-90b1-4c80-a544-866458c861f0"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1526640, 34355, 272, 5, 55, "Subsection",ExpressionUUID->"40dfd640-0212-4454-9cbd-b77220008346"],
Cell[1526915, 34362, 27253, 538, 2863, "Code",ExpressionUUID->"6d27d783-39dc-4c80-80d2-54518a3ed583"],
Cell[CellGroupData[{
Cell[1554193, 34904, 160, 3, 67, "Subsubsection",ExpressionUUID->"3eb13cb0-62d6-48c0-92e6-9eab4b04ea28"],
Cell[1554356, 34909, 1602, 44, 166, "Code",ExpressionUUID->"823ffeb0-80f4-493d-8d16-bb933eb0f127"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1555995, 34958, 157, 3, 67, "Subsubsection",ExpressionUUID->"265d7a1b-9b03-4e3a-b339-1c5179e7182d"],
Cell[1556155, 34963, 1425, 31, 166, "Code",ExpressionUUID->"29885eb5-1849-40f1-a04c-3e06fd8fffca"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1557629, 35000, 123, 2, 55, "Subsection",ExpressionUUID->"4bce4d5b-d870-4abf-8f1a-c919feb9e0ce"],
Cell[1557755, 35004, 10702, 231, 1790, "Code",ExpressionUUID->"91185ca6-a1c4-481d-852a-fbf349eb972c"],
Cell[CellGroupData[{
Cell[1568482, 35239, 87, 0, 67, "Subsubsection",ExpressionUUID->"7f89a814-576e-4acd-842a-c9db5299ea5b"],
Cell[1568572, 35241, 761, 18, 2147483647, "Code",ExpressionUUID->"e20cfd66-d9e9-44b6-a80d-f31ae114d25a"]
}, Closed]],
Cell[CellGroupData[{
Cell[1569370, 35264, 87, 0, 53, "Subsubsection",ExpressionUUID->"0799de86-7434-452f-bc3c-639a9eafcaa0"],
Cell[1569460, 35266, 1097, 27, 2147483647, "Code",ExpressionUUID->"f5491eb1-4246-455c-a14b-c3a836b2fcff"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1570606, 35299, 126, 2, 55, "Subsection",ExpressionUUID->"1f123f0a-20ec-4bcb-95e8-04909875b67a"],
Cell[1570735, 35303, 2060, 57, 311, "Code",ExpressionUUID->"90f4e859-f4da-4060-9e59-9faa205993b0"],
Cell[CellGroupData[{
Cell[1572820, 35364, 87, 0, 67, "Subsubsection",ExpressionUUID->"772939a9-b1c8-474e-94cf-5fded27a4b5e"],
Cell[1572910, 35366, 707, 17, 78, "Code",ExpressionUUID->"c904b69d-6e37-4367-bc31-2887f8b450be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1573654, 35388, 87, 0, 67, "Subsubsection",ExpressionUUID->"49f5b039-1f0f-40a2-8dff-c247535e3abf"],
Cell[1573744, 35390, 678, 17, 108, "Code",ExpressionUUID->"22f95fc4-03a8-4d56-bb02-8dcbeb9c4fa7"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1574471, 35413, 120, 2, 55, "Subsection",ExpressionUUID->"0d343083-a116-4ea4-a8ab-3d69eb542d71"],
Cell[1574594, 35417, 9281, 209, 1790, "Code",ExpressionUUID->"36217579-b395-4e1f-95cc-850588f56e6f"],
Cell[CellGroupData[{
Cell[1583900, 35630, 87, 0, 67, "Subsubsection",ExpressionUUID->"fc2d3a6d-6d5c-460c-bf88-6f5fc457590f"],
Cell[1583990, 35632, 1102, 28, 108, "Code",ExpressionUUID->"51fab449-1b84-41a7-b468-44d5114d56fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1585129, 35665, 87, 0, 67, "Subsubsection",ExpressionUUID->"ac2f350b-78dd-4bf0-a2bc-0b3250cf2c1f"],
Cell[1585219, 35667, 726, 17, 108, "Code",ExpressionUUID->"e0ce4515-ed97-4dac-a863-6bb52c3f50b3"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1585994, 35690, 123, 2, 55, "Subsection",ExpressionUUID->"08361093-baa7-4fb2-80e4-06c98c44ae80"],
Cell[1586120, 35694, 2471, 66, 369, "Code",ExpressionUUID->"7f9aa6a9-15bc-4eac-bf54-973d21216c4c"],
Cell[CellGroupData[{
Cell[1588616, 35764, 87, 0, 67, "Subsubsection",ExpressionUUID->"f08c104e-41ad-425f-9d28-705730ba62a0"],
Cell[1588706, 35766, 758, 20, 78, "Code",ExpressionUUID->"d3cb501f-9d29-4b61-982f-5e1850730e09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1589501, 35791, 87, 0, 67, "Subsubsection",ExpressionUUID->"6140255f-ec9a-4f56-a54e-c498c484f33d"],
Cell[1589591, 35793, 704, 17, 78, "Code",ExpressionUUID->"e19cbf5c-09b2-4d0d-b98b-fac97241bd8c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1590344, 35816, 120, 2, 55, "Subsection",ExpressionUUID->"9b77cb63-9ca9-456e-916e-d9dc3d943132"],
Cell[1590467, 35820, 13659, 283, 2109, "Code",ExpressionUUID->"820cb510-753c-4d93-9ef5-22c0fcfad9e8"],
Cell[CellGroupData[{
Cell[1604151, 36107, 160, 3, 67, "Subsubsection",ExpressionUUID->"47f42bbd-3ed1-41bc-92cb-37ce439bec8e"],
Cell[1604314, 36112, 976, 21, 108, "Code",ExpressionUUID->"442e4a0f-15f6-4975-811b-75ef7acfa376"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1605327, 36138, 87, 0, 67, "Subsubsection",ExpressionUUID->"2cf07424-5ed3-420e-9c5c-482b05882c79"],
Cell[1605417, 36140, 687, 16, 78, "Code",ExpressionUUID->"194cc427-a92d-44cd-adbd-b548bcfcf6d7"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1606153, 36162, 184, 4, 55, "Subsection",ExpressionUUID->"6a883ecb-2b8e-46fc-8d0b-9024ceb15c91"],
Cell[1606340, 36168, 7314, 169, 1152, "Code",ExpressionUUID->"2348fe4c-7262-485f-aded-0b8ce99151fd"],
Cell[CellGroupData[{
Cell[1613679, 36341, 158, 3, 67, "Subsubsection",ExpressionUUID->"6c84921f-635d-4d2d-b6b2-6e7a7a893c67"],
Cell[1613840, 36346, 582, 14, 78, "Code",ExpressionUUID->"40259bc3-e984-408a-a233-dacd44817654"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1614459, 36365, 158, 3, 67, "Subsubsection",ExpressionUUID->"05dbf07b-e4dc-4e16-abbe-44b0713a72e7"],
Cell[1614620, 36370, 591, 15, 78, "Code",ExpressionUUID->"4fdc0545-cda9-4fce-ab94-9ec400977145"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1615272, 36392, 159, 3, 101, "Section",ExpressionUUID->"d0d18567-f470-414c-a3a2-57257a8292f8"],
Cell[CellGroupData[{
Cell[1615456, 36399, 160, 3, 81, "Subsection",ExpressionUUID->"0314a57b-65e2-4408-8e1d-db2b2ec67c13"],
Cell[1615619, 36404, 3557, 87, 10145, "Code",ExpressionUUID->"bc47dce4-b2ef-4b22-b415-108d8661e282"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1619225, 36497, 77, 0, 101, "Section",ExpressionUUID->"9e7a41c9-f14c-410a-a386-1b3b18771802"],
Cell[1619305, 36499, 1088, 27, 195, "Code",ExpressionUUID->"24dd4262-847d-4354-b33f-0afd48df8d8e"],
Cell[1620396, 36528, 344, 8, 108, "Code",ExpressionUUID->"93d977e5-d294-4f2d-88fd-a7663acfa234"]
}, Closed]]
}
]
*)

